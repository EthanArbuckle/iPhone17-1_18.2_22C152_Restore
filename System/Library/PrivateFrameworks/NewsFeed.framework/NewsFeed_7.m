void sub_1C00AB000()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EB891010)
  {
    type metadata accessor for FormatOption();
    v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB891010);
    }
  }
}

uint64_t sub_1C00AB058(uint64_t result, uint64_t a2, char a3, char a4)
{
  if ((a4 & 1) == 0) {
    return sub_1BFE94AB4(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_1C00AB068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C00AB0CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C00AB130@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatProgressViewNodeProgress.init(from:)(a1, a2);
}

uint64_t sub_1C00AB148(void *a1)
{
  return FormatProgressViewNodeProgress.encode(to:)(a1);
}

uint64_t _s8NewsFeed022FormatProgressViewNodeD0O2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(__int16 *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(__int16 *)(a2 + 24);
  if (v5 < 0)
  {
    if (v9 < 0)
    {
      v15[0] = *(void *)a1;
      v15[1] = v2;
      v15[2] = v4;
      __int16 v16 = v5 & 0x7FFF;
      v13[0] = v7;
      v13[1] = v6;
      v13[2] = v8;
      __int16 v14 = v9 & 0x7FFF;
      sub_1C00AB510(v7, v6, v8, v9);
      sub_1C00AB510(v3, v2, v4, v5);
      sub_1C00AB510(v3, v2, v4, v5);
      sub_1C00AB510(v7, v6, v8, v9);
      char v10 = static FormatCommandBinding.== infix(_:_:)(v15, v13);
      goto LABEL_7;
    }
  }
  else if ((v9 & 0x80000000) == 0)
  {
    sub_1C00AB510(*(void *)a2, *(void *)(a2 + 8), v8, v9);
    sub_1C00AB510(v3, v2, v4, v5);
    sub_1C00AB510(v3, v2, v4, v5);
    sub_1C00AB510(v7, v6, v8, v9);
    char v10 = sub_1C00DE998(v3, v7);
LABEL_7:
    char v11 = v10;
    sub_1C00AB5E0(v3, v2, v4, v5);
    sub_1C00AB5E0(v7, v6, v8, v9);
    sub_1C00AB5E0(v7, v6, v8, v9);
    sub_1C00AB5E0(v3, v2, v4, v5);
    return v11 & 1;
  }
  sub_1C00AB510(*(void *)a1, v2, v4, v5);
  sub_1C00AB510(v7, v6, v8, v9);
  sub_1C00AB5E0(v3, v2, v4, v5);
  sub_1C00AB5E0(v7, v6, v8, v9);
  char v11 = 0;
  return v11 & 1;
}

unint64_t sub_1C00AB360(uint64_t a1)
{
  unint64_t result = sub_1C00AB388();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C00AB388()
{
  unint64_t result = qword_1EA196750;
  if (!qword_1EA196750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196750);
  }
  return result;
}

unint64_t sub_1C00AB3DC(void *a1)
{
  a1[1] = sub_1C00AB414();
  a1[2] = sub_1C00AB468();
  unint64_t result = sub_1C00AB4BC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C00AB414()
{
  unint64_t result = qword_1EB864758;
  if (!qword_1EB864758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864758);
  }
  return result;
}

unint64_t sub_1C00AB468()
{
  unint64_t result = qword_1EB864750;
  if (!qword_1EB864750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864750);
  }
  return result;
}

unint64_t sub_1C00AB4BC()
{
  unint64_t result = qword_1EA196758;
  if (!qword_1EA196758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196758);
  }
  return result;
}

uint64_t sub_1C00AB510(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a4 < 0) {
    return sub_1C00AB63C(a1, a2, a3, a4, HIBYTE(a4) & 0x7F, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00AB56C(uint64_t result, uint64_t a2, char a3)
{
  if (a3 != 2)
  {
    if (a3 != 1) {
      return result;
    }
    sub_1BFDC11A4(result);
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FormatProgressViewNodeProgress(uint64_t a1)
{
  return sub_1C00AB5E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(_WORD *)(a1 + 24));
}

uint64_t sub_1C00AB5E0(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a4 < 0) {
    return sub_1C00AB63C(a1, a2, a3, a4, HIBYTE(a4) & 0x7F, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C00AB63C(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      unint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      unint64_t result = a7();
      break;
    case 6u:
      unint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t v8 = a4 & 1;
      unint64_t result = a8(result, a2, a3, v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C00AB700(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  int v7 = (a4 >> 4) & 3;
  if (v7 == 3) {
    return sub_1C00AB750(result, a2, a3, a4 & 0xCF, a6);
  }
  if (v7 == 2 || !v7)
  {
    return a5();
  }
  return result;
}

uint64_t sub_1C00AB750(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t (*a5)(void))
{
  unsigned int v5 = a4 >> 6;
  if (v5 == 2) {
    return ((uint64_t (*)(uint64_t, uint64_t, void))a5)(a2, a3, a4 & 0x3F);
  }
  if (v5 <= 1) {
    return a5();
  }
  return result;
}

uint64_t initializeWithCopy for FormatProgressViewNodeProgress(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  __int16 v6 = *(_WORD *)(a2 + 24);
  sub_1C00AB510(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatProgressViewNodeProgress(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  __int16 v6 = *(_WORD *)(a2 + 24);
  sub_1C00AB510(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  __int16 v10 = *(_WORD *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v6;
  sub_1C00AB5E0(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FormatProgressViewNodeProgress(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __int16 v4 = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  __int16 v8 = *(_WORD *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_1C00AB5E0(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1C00AB8C0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 24) >> 15;
}

uint64_t sub_1C00AB8CC(uint64_t result)
{
  *(_WORD *)(result + 24) &= ~0x8000u;
  return result;
}

uint64_t sub_1C00AB8DC(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 24) = *(_WORD *)(result + 24) & 0x3FF | (a2 << 15);
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressViewNodeProgress()
{
  return &type metadata for FormatProgressViewNodeProgress;
}

uint64_t static FormatCodingAllColumnsStrategy.defaultValue.getter()
{
  return sub_1BFD0C508((uint64_t)&unk_1F1B64668);
}

BOOL static FormatCodingAllColumnsStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  uint64_t v2 = sub_1BFD0C508((uint64_t)&unk_1F1B646A8);
  LOBYTE(a1) = sub_1BFD3C000(a1, v2);
  swift_bridgeObjectRelease();
  return (a1 & 1) == 0;
}

uint64_t static FormatCodingAllColumnsStrategy.encode(wrappedValue:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  v1 = sub_1BFF8F6B0(v0);
  swift_bridgeObjectRelease();
  uint64_t v3 = v1;
  swift_retain();
  sub_1BFF8F94C((uint64_t *)&v3);
  swift_release();
  return (uint64_t)v3;
}

uint64_t sub_1C00AB9D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BFD0C508((uint64_t)&unk_1F1B646E8);
  *a1 = result;
  return result;
}

BOOL sub_1C00ABA04(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = sub_1BFD0C508((uint64_t)&unk_1F1B64328);
  LOBYTE(v1) = sub_1BFD3C000(v1, v2);
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

uint64_t sub_1C00ABA54@<X0>(void *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1BFF8F6B0(v2);
  swift_bridgeObjectRelease();
  uint64_t v5 = v3;
  swift_retain();
  sub_1BFF8F94C((uint64_t *)&v5);
  uint64_t result = swift_release();
  *a1 = v5;
  return result;
}

uint64_t sub_1C00ABAD8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v25 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_70;
    }
    if (v11 < v26)
    {
      unint64_t v12 = *(void *)(v25 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12)
      {
LABEL_22:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
        uint64_t v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        sub_1C1520DBC();
        FormatOptionType.rawValue.getter();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1C1520E0C();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v27 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE700000000000000;
            uint64_t v20 = 0x6E61656C6F6F62;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1702125924;
                break;
              case 2:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1836412517;
                break;
              case 3:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x74616F6C66;
                break;
              case 4:
                uint64_t v20 = 0x72656765746E69;
                break;
              case 5:
                unint64_t v19 = 0xE600000000000000;
                uint64_t v20 = 0x676E69727473;
                break;
              case 6:
                unint64_t v19 = 0xE300000000000000;
                uint64_t v20 = 7107189;
                break;
              case 7:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x726F6C6F63;
                break;
              case 8:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x6567616D69;
                break;
              case 9:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x6F65646976;
                break;
              case 0xA:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1953394534;
                break;
              case 0xB:
                uint64_t v20 = 0x616C506F65646976;
                unint64_t v19 = 0xEB00000000726579;
                break;
              default:
                break;
            }
            unint64_t v21 = 0xE700000000000000;
            uint64_t v22 = 0x6E61656C6F6F62;
            switch(v14)
            {
              case 1:
                unint64_t v21 = 0xE400000000000000;
                if (v20 != 1702125924) {
                  goto LABEL_59;
                }
                goto LABEL_58;
              case 2:
                unint64_t v21 = 0xE400000000000000;
                if (v20 != 1836412517) {
                  goto LABEL_59;
                }
                goto LABEL_58;
              case 3:
                unint64_t v21 = 0xE500000000000000;
                if (v20 != 0x74616F6C66) {
                  goto LABEL_59;
                }
                goto LABEL_58;
              case 4:
                if (v20 != 0x72656765746E69) {
                  goto LABEL_59;
                }
                goto LABEL_58;
              case 5:
                unint64_t v21 = 0xE600000000000000;
                if (v20 != 0x676E69727473) {
                  goto LABEL_59;
                }
                goto LABEL_58;
              case 6:
                unint64_t v21 = 0xE300000000000000;
                if (v20 != 7107189) {
                  goto LABEL_59;
                }
                goto LABEL_58;
              case 7:
                unint64_t v21 = 0xE500000000000000;
                if (v20 != 0x726F6C6F63) {
                  goto LABEL_59;
                }
                goto LABEL_58;
              case 8:
                unint64_t v21 = 0xE500000000000000;
                if (v20 != 0x6567616D69) {
                  goto LABEL_59;
                }
                goto LABEL_58;
              case 9:
                unint64_t v21 = 0xE500000000000000;
                if (v20 != 0x6F65646976) {
                  goto LABEL_59;
                }
                goto LABEL_58;
              case 10:
                unint64_t v21 = 0xE400000000000000;
                uint64_t v22 = 1953394534;
                goto LABEL_57;
              case 11:
                unint64_t v21 = 0xEB00000000726579;
                if (v20 != 0x616C506F65646976) {
                  goto LABEL_59;
                }
                goto LABEL_58;
              default:
LABEL_57:
                if (v20 != v22) {
                  goto LABEL_59;
                }
LABEL_58:
                if (v19 == v21)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
LABEL_59:
                char v23 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v23)
                {
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 3;
      if (v13 < v26)
      {
        unint64_t v12 = *(void *)(v25 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
LABEL_70:
        __break(1u);
        JUMPOUT(0x1C00ABFB8);
      }
    }
  }
  return 1;
}

uint64_t sub_1C00AC018(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 56);
  uint64_t v28 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  uint64_t v32 = a2 + 56;
  int64_t v29 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v27 = result;
  if ((v7 & v5) == 0) {
    goto LABEL_8;
  }
  while (2)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    uint64_t v10 = (v8 - 1) & v8;
    unint64_t v11 = v9 | (v4 << 6);
LABEL_22:
    int v15 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v11);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C1520E0C();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v32 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    unint64_t v30 = v10;
    int64_t v31 = v4;
    uint64_t v19 = ~v17;
    while (1)
    {
      unint64_t v20 = 0x80000001C15FCF70;
      unint64_t v21 = 0xD00000000000001CLL;
      unint64_t v22 = 0x80000001C15FCF90;
      if (*(unsigned char *)(*(void *)(a2 + 48) + v18) != 1)
      {
        unint64_t v21 = 0xD000000000000028;
        unint64_t v22 = 0x80000001C15FCFB0;
      }
      unint64_t v23 = *(unsigned char *)(*(void *)(a2 + 48) + v18) ? v21 : 0xD000000000000010;
      unint64_t v24 = *(unsigned char *)(*(void *)(a2 + 48) + v18) ? v22 : 0x80000001C15FCF70;
      if (!v15) {
        break;
      }
      if (v15 == 1) {
        unint64_t v25 = 0xD00000000000001CLL;
      }
      else {
        unint64_t v25 = 0xD000000000000028;
      }
      if (v15 == 1) {
        unint64_t v20 = 0x80000001C15FCF90;
      }
      else {
        unint64_t v20 = 0x80000001C15FCFB0;
      }
      if (v23 == v25) {
        goto LABEL_42;
      }
LABEL_43:
      char v26 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_47;
      }
      unint64_t v18 = (v18 + 1) & v19;
      if (((*(void *)(v32 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        return 0;
      }
    }
    if (v23 != 0xD000000000000010) {
      goto LABEL_43;
    }
LABEL_42:
    if (v24 != v20) {
      goto LABEL_43;
    }
    uint64_t result = swift_bridgeObjectRelease_n();
LABEL_47:
    uint64_t v3 = v27;
    unint64_t v8 = v30;
    int64_t v4 = v31;
    if (v30) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v12 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
LABEL_21:
    uint64_t v10 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v29) {
      return 1;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1C00AC354(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 56);
  uint64_t v28 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  uint64_t v32 = a2 + 56;
  int64_t v29 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v27 = result;
  if ((v7 & v5) == 0) {
    goto LABEL_8;
  }
  while (2)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    uint64_t v10 = (v8 - 1) & v8;
    unint64_t v11 = v9 | (v4 << 6);
LABEL_22:
    int v15 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v11);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C1520E0C();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v32 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    unint64_t v30 = v10;
    int64_t v31 = v4;
    uint64_t v19 = ~v17;
    while (1)
    {
      unint64_t v20 = 0x80000001C15FF830;
      unint64_t v21 = 0xD000000000000021;
      unint64_t v22 = 0x80000001C15FF850;
      if (*(unsigned char *)(*(void *)(a2 + 48) + v18) != 1)
      {
        unint64_t v21 = 0x7461636572706564;
        unint64_t v22 = 0xEA00000000006465;
      }
      unint64_t v23 = *(unsigned char *)(*(void *)(a2 + 48) + v18) ? v21 : 0xD000000000000014;
      unint64_t v24 = *(unsigned char *)(*(void *)(a2 + 48) + v18) ? v22 : 0x80000001C15FF830;
      if (!v15) {
        break;
      }
      if (v15 == 1) {
        unint64_t v25 = 0xD000000000000021;
      }
      else {
        unint64_t v25 = 0x7461636572706564;
      }
      if (v15 == 1) {
        unint64_t v20 = 0x80000001C15FF850;
      }
      else {
        unint64_t v20 = 0xEA00000000006465;
      }
      if (v23 == v25) {
        goto LABEL_42;
      }
LABEL_43:
      char v26 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_47;
      }
      unint64_t v18 = (v18 + 1) & v19;
      if (((*(void *)(v32 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        return 0;
      }
    }
    if (v23 != 0xD000000000000014) {
      goto LABEL_43;
    }
LABEL_42:
    if (v24 != v20) {
      goto LABEL_43;
    }
    uint64_t result = swift_bridgeObjectRelease_n();
LABEL_47:
    uint64_t v3 = v27;
    unint64_t v8 = v30;
    int64_t v4 = v31;
    if (v30) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v12 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
LABEL_21:
    uint64_t v10 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v29) {
      return 1;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1C00AC6B0(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v31 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v32 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  if ((v7 & v5) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v10 = __clz(__rbit64(v8));
  uint64_t v11 = (v8 - 1) & v8;
  unint64_t v12 = v10 | (v4 << 6);
LABEL_22:
  uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
  uint64_t v17 = *v16;
  unint64_t v18 = v16[1];
  sub_1C1520DBC();
  unint64_t v33 = v11;
  int64_t v34 = v4;
  switch(v18)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
      sub_1C1520DCC();
      break;
    default:
      sub_1C1520DCC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      break;
  }
  uint64_t v19 = sub_1C1520E0C();
  uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v21 = v19 & ~v20;
  if (((*(void *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
  {
LABEL_73:
    sub_1BFF8F648(v17, v18);
    return 0;
  }
  uint64_t v22 = ~v20;
  while (2)
  {
    unint64_t v23 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v21);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    switch(v25)
    {
      case 0uLL:
        if (v18) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 0;
        goto LABEL_69;
      case 1uLL:
        if (v18 != 1) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 1;
        goto LABEL_69;
      case 2uLL:
        if (v18 != 2) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 2;
        goto LABEL_69;
      case 3uLL:
        if (v18 != 3) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 3;
        goto LABEL_69;
      case 4uLL:
        if (v18 != 4) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 4;
        goto LABEL_69;
      case 5uLL:
        if (v18 != 5) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 5;
        goto LABEL_69;
      case 6uLL:
        if (v18 != 6) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 6;
        goto LABEL_69;
      case 7uLL:
        if (v18 != 7) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 7;
        goto LABEL_69;
      case 8uLL:
        if (v18 != 8) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 8;
        goto LABEL_69;
      case 9uLL:
        if (v18 != 9) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 9;
        goto LABEL_69;
      case 0xAuLL:
        if (v18 != 10) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 10;
        goto LABEL_69;
      case 0xBuLL:
        if (v18 != 11) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 11;
        goto LABEL_69;
      case 0xCuLL:
        if (v18 != 12) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 12;
        goto LABEL_69;
      case 0xDuLL:
        if (v18 != 13) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 13;
        goto LABEL_69;
      case 0xEuLL:
        if (v18 != 14) {
          goto LABEL_64;
        }
        uint64_t v28 = *v23;
        unint64_t v29 = 14;
        goto LABEL_69;
      default:
        if (v18 < 0xF)
        {
LABEL_64:
          sub_1BFE74E64(v17, v18);
          sub_1BFE74E64(v24, v25);
          sub_1BFF8F648(v24, v25);
          sub_1BFF8F648(v17, v18);
LABEL_65:
          unint64_t v21 = (v21 + 1) & v22;
          if (((*(void *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
            goto LABEL_73;
          }
          continue;
        }
        if (v24 != v17 || v25 != v18)
        {
          char v27 = sub_1C1520A9C();
          sub_1BFE74E64(v17, v18);
          sub_1BFE74E64(v24, v25);
          sub_1BFF8F648(v24, v25);
          sub_1BFF8F648(v17, v18);
          if (v27) {
            goto LABEL_70;
          }
          goto LABEL_65;
        }
        sub_1BFE74E64(v17, v18);
        sub_1BFE74E64(v17, v18);
        sub_1BFF8F648(v17, v18);
        uint64_t v28 = v17;
        unint64_t v29 = v18;
LABEL_69:
        sub_1BFF8F648(v28, v29);
LABEL_70:
        sub_1BFF8F648(v17, v18);
        unint64_t v8 = v33;
        int64_t v4 = v34;
        if (v33) {
          goto LABEL_7;
        }
LABEL_8:
        int64_t v13 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_76;
        }
        if (v13 < v32)
        {
          unint64_t v14 = *(void *)(v31 + 8 * v13);
          ++v4;
          if (v14) {
            goto LABEL_21;
          }
          int64_t v4 = v13 + 1;
          if (v13 + 1 < v32)
          {
            unint64_t v14 = *(void *)(v31 + 8 * v4);
            if (v14) {
              goto LABEL_21;
            }
            int64_t v4 = v13 + 2;
            if (v13 + 2 < v32)
            {
              unint64_t v14 = *(void *)(v31 + 8 * v4);
              if (v14) {
                goto LABEL_21;
              }
              int64_t v15 = v13 + 3;
              if (v15 < v32)
              {
                unint64_t v14 = *(void *)(v31 + 8 * v15);
                if (v14)
                {
                  int64_t v4 = v15;
LABEL_21:
                  uint64_t v11 = (v14 - 1) & v14;
                  unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
                  goto LABEL_22;
                }
                while (1)
                {
                  int64_t v4 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v4 >= v32) {
                    return 1;
                  }
                  unint64_t v14 = *(void *)(v31 + 8 * v4);
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
LABEL_76:
                __break(1u);
                JUMPOUT(0x1C00ACC34);
              }
            }
          }
        }
        return 1;
    }
  }
}

uint64_t sub_1C00ACCAC(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v29 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if (!v7) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v31 = (v7 - 1) & v7;
  int64_t v32 = v4;
  unint64_t v9 = __clz(__rbit64(v7)) | (v4 << 6);
LABEL_22:
  int v14 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v9);
  sub_1C1520DBC();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1C1520E0C();
  uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v17 = v15 & ~v16;
  if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
    return 0;
  }
  uint64_t v18 = ~v16;
  while (2)
  {
    unint64_t v19 = 0xD000000000000012;
    unint64_t v20 = 0x80000001C1600030;
    switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
    {
      case 1:
        unint64_t v19 = 0x656C626978656C66;
        unint64_t v20 = 0xED00006874646957;
        break;
      case 2:
        unint64_t v19 = 0xD000000000000013;
        unint64_t v21 = "in";
        goto LABEL_30;
      case 3:
        unint64_t v20 = 0x80000001C1600080;
        unint64_t v19 = 0xD000000000000011;
        break;
      case 4:
        unint64_t v19 = 0x656C626978656C66;
        unint64_t v20 = 0xEE00746867696548;
        break;
      case 5:
        unint64_t v19 = 0xD000000000000014;
        unint64_t v21 = "n";
LABEL_30:
        unint64_t v20 = (unint64_t)v21 | 0x8000000000000000;
        break;
      default:
        break;
    }
    unint64_t v22 = 0xD000000000000012;
    unint64_t v23 = 0x80000001C1600030;
    switch(v14)
    {
      case 1:
        unint64_t v23 = 0xED00006874646957;
        if (v19 != 0x656C626978656C66) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 2:
        unint64_t v24 = 0xD000000000000013;
        unint64_t v25 = "in";
        goto LABEL_41;
      case 3:
        unint64_t v23 = 0x80000001C1600080;
        if (v19 != 0xD000000000000011) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 4:
        unint64_t v22 = 0x656C626978656C66;
        unint64_t v23 = 0xEE00746867696548;
        goto LABEL_38;
      case 5:
        unint64_t v24 = 0xD000000000000014;
        unint64_t v25 = "n";
LABEL_41:
        unint64_t v23 = (unint64_t)v25 | 0x8000000000000000;
        if (v19 == v24) {
          goto LABEL_42;
        }
        goto LABEL_43;
      default:
LABEL_38:
        if (v19 != v22) {
          goto LABEL_43;
        }
LABEL_42:
        if (v20 != v23)
        {
LABEL_43:
          char v26 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v26) {
            goto LABEL_47;
          }
          unint64_t v17 = (v17 + 1) & v18;
          if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_47:
        uint64_t v3 = a1;
        unint64_t v7 = v31;
        int64_t v4 = v32;
        if (v31) {
          goto LABEL_7;
        }
LABEL_8:
        int64_t v10 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_52;
        }
        if (v10 < v30)
        {
          unint64_t v11 = *(void *)(v29 + 8 * v10);
          int64_t v12 = v4 + 1;
          if (v11) {
            goto LABEL_21;
          }
          int64_t v12 = v4 + 2;
          if (v4 + 2 < v30)
          {
            unint64_t v11 = *(void *)(v29 + 8 * v12);
            if (v11) {
              goto LABEL_21;
            }
            int64_t v12 = v4 + 3;
            if (v4 + 3 < v30)
            {
              unint64_t v11 = *(void *)(v29 + 8 * v12);
              if (v11) {
                goto LABEL_21;
              }
              uint64_t v13 = v4 + 4;
              if (v4 + 4 < v30)
              {
                unint64_t v11 = *(void *)(v29 + 8 * v13);
                if (v11)
                {
                  int64_t v12 = v4 + 4;
LABEL_21:
                  uint64_t v31 = (v11 - 1) & v11;
                  int64_t v32 = v12;
                  unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
                  goto LABEL_22;
                }
                while (1)
                {
                  int64_t v12 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    break;
                  }
                  if (v12 >= v30) {
                    return 1;
                  }
                  unint64_t v11 = *(void *)(v29 + 8 * v12);
                  ++v13;
                  if (v11) {
                    goto LABEL_21;
                  }
                }
LABEL_52:
                __break(1u);
                JUMPOUT(0x1C00AD14CLL);
              }
            }
          }
        }
        return 1;
    }
  }
}

uint64_t sub_1C00AD194(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v25 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v11 < v26)
    {
      unint64_t v12 = *(void *)(v25 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12)
      {
LABEL_22:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
        int v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        sub_1C1520DBC();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1C1520E0C();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v27 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE800000000000000;
            uint64_t v20 = 0x64656C6261736964;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x64657375636F66;
                break;
              case 2:
                uint64_t v20 = 0x6867696C68676968;
                unint64_t v19 = 0xEB00000000646574;
                break;
              case 3:
                uint64_t v20 = 0x64657463656C6573;
                break;
              default:
                break;
            }
            unint64_t v21 = 0xE800000000000000;
            uint64_t v22 = 0x64656C6261736964;
            switch(v14)
            {
              case 1:
                unint64_t v21 = 0xE700000000000000;
                if (v20 != 0x64657375636F66) {
                  goto LABEL_37;
                }
                goto LABEL_34;
              case 2:
                uint64_t v22 = 0x6867696C68676968;
                unint64_t v21 = 0xEB00000000646574;
                goto LABEL_33;
              case 3:
                if (v20 != 0x64657463656C6573) {
                  goto LABEL_37;
                }
                goto LABEL_34;
              default:
LABEL_33:
                if (v20 != v22) {
                  goto LABEL_37;
                }
LABEL_34:
                if (v19 == v21)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
LABEL_37:
                char v23 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v23)
                {
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 3;
      if (v13 < v26)
      {
        unint64_t v12 = *(void *)(v25 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
LABEL_45:
        __break(1u);
        JUMPOUT(0x1C00AD584);
      }
    }
  }
  return 1;
}

uint64_t sub_1C00AD5B4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v5 = *(void *)(result + 56);
    uint64_t v26 = result;
    uint64_t v27 = result + 56;
    uint64_t v6 = 1 << *(unsigned char *)(result + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v5;
    int64_t v28 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = a2 + 56;
    if ((v7 & v5) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
    {
      int v15 = *(unsigned __int8 *)(*(void *)(v3 + 48) + i);
      sub_1C1520DBC();
      if (v15) {
        uint64_t v16 = 0x73676E69646E6962;
      }
      else {
        uint64_t v16 = 0x736E6F6974706FLL;
      }
      if (v15) {
        unint64_t v17 = 0xE800000000000000;
      }
      else {
        unint64_t v17 = 0xE700000000000000;
      }
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1C1520E0C();
      uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        return 0;
      }
      int64_t v29 = v4;
      uint64_t v21 = ~v19;
      while (1)
      {
        uint64_t v22 = *(unsigned char *)(*(void *)(a2 + 48) + v20) ? 0x73676E69646E6962 : 0x736E6F6974706FLL;
        unint64_t v23 = *(unsigned char *)(*(void *)(a2 + 48) + v20) ? 0xE800000000000000 : 0xE700000000000000;
        if (v22 == v16 && v23 == v17) {
          break;
        }
        char v25 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v25) {
          goto LABEL_44;
        }
        unint64_t v20 = (v20 + 1) & v21;
        if (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          return 0;
        }
      }
      uint64_t result = swift_bridgeObjectRelease_n();
LABEL_44:
      uint64_t v3 = v26;
      int64_t v4 = v29;
      if (v8) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v12 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      if (v12 >= v28) {
        return 1;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v12);
      ++v4;
      if (!v13)
      {
        int64_t v4 = v12 + 1;
        if (v12 + 1 >= v28) {
          return 1;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 2;
          if (v12 + 2 >= v28) {
            return 1;
          }
          unint64_t v13 = *(void *)(v27 + 8 * v4);
          if (!v13)
          {
            int64_t v14 = v12 + 3;
            if (v14 >= v28) {
              return 1;
            }
            unint64_t v13 = *(void *)(v27 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                int64_t v4 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_49;
                }
                if (v4 >= v28) {
                  return 1;
                }
                unint64_t v13 = *(void *)(v27 + 8 * v4);
                ++v14;
                if (v13) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v4 = v14;
          }
        }
      }
LABEL_21:
      unint64_t v8 = (v13 - 1) & v13;
    }
    __break(1u);
LABEL_49:
    __break(1u);
    return result;
  }
  return 0;
}

uint64_t sub_1C00AD880(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v25 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v11 < v26)
    {
      unint64_t v12 = *(void *)(v25 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12)
      {
LABEL_22:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
        int v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        sub_1C1520DBC();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1C1520E0C();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v27 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE800000000000000;
            uint64_t v20 = 0x746E656964617267;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                uint64_t v20 = 0x72476C6169646172;
                unint64_t v19 = 0xEE00746E65696461;
                break;
              case 2:
                uint64_t v20 = 0x65695674696C7073;
                unint64_t v19 = 0xE900000000000077;
                break;
              case 3:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x6567616D69;
                break;
              case 4:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1633905005;
                break;
              case 5:
                uint64_t v20 = 0x66456C6175736976;
                unint64_t v19 = 0xEC00000074636566;
                break;
              default:
                break;
            }
            unint64_t v21 = 0xE800000000000000;
            uint64_t v22 = 0x746E656964617267;
            switch(v14)
            {
              case 1:
                unint64_t v21 = 0xEE00746E65696461;
                if (v20 != 0x72476C6169646172) {
                  goto LABEL_41;
                }
                goto LABEL_40;
              case 2:
                unint64_t v21 = 0xE900000000000077;
                if (v20 != 0x65695674696C7073) {
                  goto LABEL_41;
                }
                goto LABEL_40;
              case 3:
                unint64_t v21 = 0xE500000000000000;
                if (v20 != 0x6567616D69) {
                  goto LABEL_41;
                }
                goto LABEL_40;
              case 4:
                unint64_t v21 = 0xE400000000000000;
                uint64_t v22 = 1633905005;
                goto LABEL_39;
              case 5:
                unint64_t v21 = 0xEC00000074636566;
                if (v20 != 0x66456C6175736976) {
                  goto LABEL_41;
                }
                goto LABEL_40;
              default:
LABEL_39:
                if (v20 != v22) {
                  goto LABEL_41;
                }
LABEL_40:
                if (v19 == v21)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
LABEL_41:
                char v23 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v23)
                {
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 3;
      if (v13 < v26)
      {
        unint64_t v12 = *(void *)(v25 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
LABEL_52:
        __break(1u);
        JUMPOUT(0x1C00ADD28);
      }
    }
  }
  return 1;
}

uint64_t sub_1C00ADD70(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v35 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    int64_t v36 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_178;
    }
    if (v11 < v36)
    {
      unint64_t v12 = *(void *)(v35 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v36) {
        return 1;
      }
      unint64_t v12 = *(void *)(v35 + 8 * v4);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v36) {
        return 1;
      }
      unint64_t v12 = *(void *)(v35 + 8 * v4);
      if (v12)
      {
LABEL_22:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
        uint64_t v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        sub_1C1520DBC();
        FormatItemTrait.rawValue.getter();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1C1520E0C();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v37 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE400000000000000;
            unint64_t v20 = 1835365481;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                unint64_t v19 = 0xE300000000000000;
                unint64_t v20 = 7364967;
                break;
              case 2:
                unint64_t v19 = 0xE90000000000006CLL;
                unint64_t v20 = 0x69616E626D756874;
                break;
              case 3:
                unint64_t v19 = 0xE500000000000000;
                unint64_t v20 = 0x6F65646976;
                break;
              case 4:
                unint64_t v19 = 0xE700000000000000;
                unint64_t v20 = 0x656E696C66666FLL;
                break;
              case 5:
                unint64_t v19 = 0xE800000000000000;
                unint64_t v20 = 0x6465727574616566;
                break;
              case 6:
                unint64_t v19 = 0xE500000000000000;
                unint64_t v20 = 0x7265766F63;
                break;
              case 7:
                unint64_t v19 = 0xE800000000000000;
                unint64_t v20 = 0x656E696C64616568;
                break;
              case 8:
                unint64_t v19 = 0xE800000000000000;
                unint64_t v20 = 0x7469617274726F70;
                break;
              case 9:
                unint64_t v19 = 0xE900000000000065;
                unint64_t v20 = 0x70616373646E616CLL;
                break;
              case 0xA:
                unint64_t v19 = 0xE600000000000000;
                unint64_t v20 = 0x657261757173;
                break;
              case 0xB:
                unint64_t v19 = 0xE300000000000000;
                unint64_t v20 = 6448503;
                break;
              case 0xC:
                unint64_t v19 = 0xE800000000000000;
                unint64_t v20 = 0x7373656363416F6ELL;
                break;
              case 0xD:
                unint64_t v19 = 0xE200000000000000;
                unint64_t v20 = 25697;
                break;
              case 0xE:
                unint64_t v20 = 0xD000000000000011;
                unint64_t v21 = "portraitThumbnail";
                goto LABEL_77;
              case 0xF:
                uint64_t v22 = "landscapeThumbnail";
                goto LABEL_59;
              case 0x10:
                unint64_t v20 = 0x6854657261757173;
                unint64_t v19 = 0xEF6C69616E626D75;
                break;
              case 0x11:
                unint64_t v20 = 0xD000000000000014;
                unint64_t v21 = "portraitLayeredMedia";
                goto LABEL_77;
              case 0x12:
                unint64_t v20 = 0xD000000000000015;
                unint64_t v21 = "landscapeLayeredMedia";
                goto LABEL_77;
              case 0x13:
                uint64_t v22 = "squareLayeredMedia";
                goto LABEL_59;
              case 0x14:
                unint64_t v19 = 0xE800000000000000;
                unint64_t v20 = 0x79726F6765746163;
                break;
              case 0x15:
                unint64_t v20 = 0xD000000000000010;
                unint64_t v21 = "engagementBanner";
                goto LABEL_77;
              case 0x16:
                unint64_t v19 = 0xEA00000000006B63;
                unint64_t v20 = 0x6172546F69647561;
                break;
              case 0x17:
                unint64_t v20 = 0x63537374726F7073;
                unint64_t v19 = 0xEB0000000065726FLL;
                break;
              case 0x18:
                unint64_t v20 = 0x74537374726F7073;
                unint64_t v19 = 0xEF73676E69646E61;
                break;
              case 0x19:
                unint64_t v20 = 0x74726F7053676174;
                goto LABEL_63;
              case 0x1A:
                unint64_t v20 = 0x6C61636F4C676174;
                unint64_t v19 = 0xEC0000007377654ELL;
                break;
              case 0x1B:
                unint64_t v20 = 0x707377654E676174;
                unint64_t v19 = 0xEC00000072657061;
                break;
              case 0x1C:
                unint64_t v19 = 0xE800000000000000;
                unint64_t v20 = 0x6369706F54676174;
                break;
              case 0x1D:
                unint64_t v19 = 0xEA00000000006C65;
                unint64_t v20 = 0x6E6E616843676174;
                break;
              case 0x1E:
                unint64_t v20 = 0x72427374726F7073;
                unint64_t v19 = 0xED000074656B6361;
                break;
              case 0x1F:
                unint64_t v20 = 0x6F427374726F7073;
                unint64_t v19 = 0xEE0065726F635378;
                break;
              case 0x20:
                unint64_t v20 = 0x694C7374726F7073;
                unint64_t v19 = 0xEF65726F6353656ELL;
                break;
              case 0x21:
                uint64_t v22 = "sportsInjuryReport";
LABEL_59:
                unint64_t v19 = (unint64_t)(v22 - 32) | 0x8000000000000000;
                unint64_t v20 = 0xD000000000000012;
                break;
              case 0x22:
                unint64_t v20 = 0x654B7374726F7073;
                unint64_t v19 = 0xEF726579616C5079;
                break;
              case 0x23:
                unint64_t v20 = 0x76457374726F7073;
                unint64_t v19 = 0xEB00000000746E65;
                break;
              case 0x24:
                unint64_t v20 = 0x7463657269646572;
LABEL_63:
                unint64_t v19 = 0xE900000000000073;
                break;
              case 0x25:
                unint64_t v19 = 0xE700000000000000;
                unint64_t v20 = 0x64656B636F6C62;
                break;
              case 0x26:
                unint64_t v20 = 0x6B636F6C42746F6ELL;
                unint64_t v19 = 0xEA00000000006465;
                break;
              case 0x27:
                unint64_t v20 = 0x6C69787541736168;
                unint64_t v19 = 0xEC00000079726169;
                break;
              case 0x28:
                unint64_t v19 = 0xE600000000000000;
                unint64_t v20 = 0x656C7A7A7570;
                break;
              case 0x29:
                unint64_t v19 = 0xEA00000000006570;
                unint64_t v20 = 0x7954656C7A7A7570;
                break;
              case 0x2A:
                unint64_t v19 = 0xEC00000072657361;
                unint64_t v20 = 0x6554656C7A7A7570;
                break;
              case 0x2B:
                unint64_t v20 = 0x7453656C7A7A7570;
                unint64_t v19 = 0xEF63697473697461;
                break;
              case 0x2C:
                unint64_t v20 = 0xD000000000000014;
                unint64_t v21 = "puzzleMultiStatistic";
                goto LABEL_77;
              case 0x2D:
                unint64_t v20 = 0xD00000000000001ALL;
                unint64_t v21 = "puzzleLeaderboardStatistic";
                goto LABEL_77;
              case 0x2E:
                unint64_t v20 = 0x756854656772616CLL;
                unint64_t v19 = 0xEE006C69616E626DLL;
                break;
              case 0x2F:
                unint64_t v20 = 0xD000000000000013;
                unint64_t v21 = "puzzleKindCrossword";
                goto LABEL_77;
              case 0x30:
                unint64_t v20 = 0xD000000000000017;
                unint64_t v21 = "puzzleKindMiniCrossword";
                goto LABEL_77;
              case 0x31:
                unint64_t v20 = 0xD000000000000014;
                unint64_t v21 = "puzzleKindWordBricks";
LABEL_77:
                unint64_t v19 = (unint64_t)(v21 - 32) | 0x8000000000000000;
                break;
              default:
                break;
            }
            unint64_t v23 = 0xE400000000000000;
            uint64_t v24 = 1835365481;
            switch(v14)
            {
              case 1:
                unint64_t v23 = 0xE300000000000000;
                if (v20 != 7364967) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 2:
                unint64_t v23 = 0xE90000000000006CLL;
                if (v20 != 0x69616E626D756874) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 3:
                unint64_t v23 = 0xE500000000000000;
                if (v20 != 0x6F65646976) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 4:
                unint64_t v23 = 0xE700000000000000;
                if (v20 != 0x656E696C66666FLL) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 5:
                unint64_t v23 = 0xE800000000000000;
                if (v20 != 0x6465727574616566) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 6:
                unint64_t v23 = 0xE500000000000000;
                if (v20 != 0x7265766F63) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 7:
                unint64_t v23 = 0xE800000000000000;
                if (v20 != 0x656E696C64616568) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 8:
                unint64_t v23 = 0xE800000000000000;
                if (v20 != 0x7469617274726F70) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 9:
                unint64_t v23 = 0xE900000000000065;
                if (v20 != 0x70616373646E616CLL) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 10:
                unint64_t v23 = 0xE600000000000000;
                if (v20 != 0x657261757173) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 11:
                unint64_t v23 = 0xE300000000000000;
                if (v20 != 6448503) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 12:
                unint64_t v23 = 0xE800000000000000;
                if (v20 != 0x7373656363416F6ELL) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 13:
                unint64_t v23 = 0xE200000000000000;
                if (v20 != 25697) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 14:
                unint64_t v25 = 0xD000000000000011;
                int64_t v26 = "portraitThumbnail";
                goto LABEL_170;
              case 15:
                int64_t v27 = "landscapeThumbnail";
                goto LABEL_134;
              case 16:
                unint64_t v23 = 0xEF6C69616E626D75;
                if (v20 != 0x6854657261757173) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 17:
                unint64_t v25 = 0xD000000000000014;
                int64_t v26 = "portraitLayeredMedia";
                goto LABEL_170;
              case 18:
                unint64_t v25 = 0xD000000000000015;
                int64_t v26 = "landscapeLayeredMedia";
                goto LABEL_170;
              case 19:
                int64_t v27 = "squareLayeredMedia";
                goto LABEL_134;
              case 20:
                unint64_t v23 = 0xE800000000000000;
                if (v20 != 0x79726F6765746163) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 21:
                unint64_t v25 = 0xD000000000000010;
                int64_t v26 = "engagementBanner";
                goto LABEL_170;
              case 22:
                unint64_t v23 = 0xEA00000000006B63;
                if (v20 != 0x6172546F69647561) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 23:
                uint64_t v28 = 0x63537374726F7073;
                uint64_t v29 = 6648431;
                goto LABEL_139;
              case 24:
                unint64_t v23 = 0xEF73676E69646E61;
                if (v20 != 0x74537374726F7073) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 25:
                uint64_t v30 = 0x74726F7053676174;
                goto LABEL_142;
              case 26:
                uint64_t v31 = 0x6C61636F4C676174;
                uint64_t v32 = 1937204558;
                goto LABEL_149;
              case 27:
                uint64_t v31 = 0x707377654E676174;
                uint64_t v32 = 1919250529;
                goto LABEL_149;
              case 28:
                unint64_t v23 = 0xE800000000000000;
                if (v20 != 0x6369706F54676174) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 29:
                unint64_t v23 = 0xEA00000000006C65;
                if (v20 != 0x6E6E616843676174) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 30:
                unint64_t v23 = 0xED000074656B6361;
                if (v20 != 0x72427374726F7073) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 31:
                unint64_t v23 = 0xEE0065726F635378;
                if (v20 != 0x6F427374726F7073) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 32:
                unint64_t v23 = 0xEF65726F6353656ELL;
                if (v20 != 0x694C7374726F7073) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 33:
                int64_t v27 = "sportsInjuryReport";
LABEL_134:
                unint64_t v23 = (unint64_t)(v27 - 32) | 0x8000000000000000;
                if (v20 != 0xD000000000000012) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 34:
                unint64_t v23 = 0xEF726579616C5079;
                if (v20 != 0x654B7374726F7073) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 35:
                uint64_t v28 = 0x76457374726F7073;
                uint64_t v29 = 7630437;
LABEL_139:
                unint64_t v23 = v29 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
                if (v20 != v28) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 36:
                uint64_t v30 = 0x7463657269646572;
LABEL_142:
                unint64_t v23 = 0xE900000000000073;
                if (v20 != v30) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 37:
                unint64_t v23 = 0xE700000000000000;
                if (v20 != 0x64656B636F6C62) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 38:
                unint64_t v23 = 0xEA00000000006465;
                if (v20 != 0x6B636F6C42746F6ELL) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 39:
                uint64_t v31 = 0x6C69787541736168;
                uint64_t v32 = 2037539177;
LABEL_149:
                unint64_t v23 = v32 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                if (v20 != v31) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 40:
                unint64_t v23 = 0xE600000000000000;
                if (v20 != 0x656C7A7A7570) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 41:
                unint64_t v23 = 0xEA00000000006570;
                if (v20 != 0x7954656C7A7A7570) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 42:
                unint64_t v23 = 0xEC00000072657361;
                if (v20 != 0x6554656C7A7A7570) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 43:
                unint64_t v23 = 0xEF63697473697461;
                if (v20 != 0x7453656C7A7A7570) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              case 44:
                unint64_t v25 = 0xD000000000000014;
                int64_t v26 = "puzzleMultiStatistic";
                goto LABEL_170;
              case 45:
                unint64_t v25 = 0xD00000000000001ALL;
                int64_t v26 = "puzzleLeaderboardStatistic";
                goto LABEL_170;
              case 46:
                uint64_t v24 = 0x756854656772616CLL;
                unint64_t v23 = 0xEE006C69616E626DLL;
                goto LABEL_162;
              case 47:
                unint64_t v25 = 0xD000000000000013;
                int64_t v26 = "puzzleKindCrossword";
                goto LABEL_170;
              case 48:
                unint64_t v25 = 0xD000000000000017;
                int64_t v26 = "puzzleKindMiniCrossword";
                goto LABEL_170;
              case 49:
                unint64_t v25 = 0xD000000000000014;
                int64_t v26 = "puzzleKindWordBricks";
LABEL_170:
                unint64_t v23 = (unint64_t)(v26 - 32) | 0x8000000000000000;
                if (v20 != v25) {
                  goto LABEL_164;
                }
                goto LABEL_163;
              default:
LABEL_162:
                if (v20 != v24) {
                  goto LABEL_164;
                }
LABEL_163:
                if (v19 == v23)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v37;
                  goto LABEL_7;
                }
LABEL_164:
                char v33 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v33)
                {
                  int64_t v4 = v37;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 3;
      if (v13 < v36)
      {
        unint64_t v12 = *(void *)(v35 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v36) {
            return 1;
          }
          unint64_t v12 = *(void *)(v35 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
LABEL_178:
        __break(1u);
        JUMPOUT(0x1C00AEB84);
      }
    }
  }
  return 1;
}

uint64_t sub_1C00AED14(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v25 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v11 < v26)
    {
      unint64_t v12 = *(void *)(v25 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12)
      {
LABEL_22:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
        uint64_t v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        uint64_t v15 = sub_1BFC60774();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v27 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE300000000000000;
            uint64_t v20 = 6775156;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x72656874616577;
                break;
              case 2:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x6C6C6177796170;
                break;
              case 3:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x656E696C64616568;
                break;
              case 4:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x6575737369;
                break;
              case 5:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x6465626D45626577;
                break;
              case 6:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1684366694;
                break;
              default:
                break;
            }
            unint64_t v21 = 0xE300000000000000;
            uint64_t v22 = 6775156;
            switch(v14)
            {
              case 1:
                unint64_t v21 = 0xE700000000000000;
                if (v20 != 0x72656874616577) {
                  goto LABEL_44;
                }
                goto LABEL_43;
              case 2:
                unint64_t v21 = 0xE700000000000000;
                if (v20 != 0x6C6C6177796170) {
                  goto LABEL_44;
                }
                goto LABEL_43;
              case 3:
                unint64_t v21 = 0xE800000000000000;
                if (v20 != 0x656E696C64616568) {
                  goto LABEL_44;
                }
                goto LABEL_43;
              case 4:
                unint64_t v21 = 0xE500000000000000;
                if (v20 != 0x6575737369) {
                  goto LABEL_44;
                }
                goto LABEL_43;
              case 5:
                unint64_t v21 = 0xE800000000000000;
                uint64_t v22 = 0x6465626D45626577;
                goto LABEL_42;
              case 6:
                unint64_t v21 = 0xE400000000000000;
                if (v20 != 1684366694) {
                  goto LABEL_44;
                }
                goto LABEL_43;
              default:
LABEL_42:
                if (v20 != v22) {
                  goto LABEL_44;
                }
LABEL_43:
                if (v19 == v21)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
LABEL_44:
                char v23 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v23)
                {
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 3;
      if (v13 < v26)
      {
        unint64_t v12 = *(void *)(v25 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
LABEL_54:
        __break(1u);
        JUMPOUT(0x1C00AF0E0);
      }
    }
  }
  return 1;
}

void sub_1C00AF118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatRegex() - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (uint64_t *)((char *)&v34 - v8);
  MEMORY[0x1F4188790](v10);
  int64_t v13 = (char *)&v34 - v12;
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v34 = a1;
  uint64_t v35 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v36 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v19 = a2 + 56;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v37 = (v18 - 1) & v18;
  int64_t v38 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = v11;
    uint64_t v26 = *(void *)(v11 + 72);
    sub_1C00BB210(*(void *)(a1 + 48) + v26 * i, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatRegex);
    int64_t v27 = v13;
    sub_1C00BC720((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatRegex);
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t v28 = sub_1C1520E0C();
    uint64_t v29 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v30 = v28 & ~v29;
    if (((*(void *)(v19 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
    {
LABEL_35:
      sub_1C00BC42C((uint64_t)v9);
      return;
    }
    uint64_t v31 = ~v29;
    while (1)
    {
      sub_1C00BB210(*(void *)(a2 + 48) + v30 * v26, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRegex);
      if (*v6 == *v9 && v6[1] == v9[1]) {
        break;
      }
      char v33 = sub_1C1520A9C();
      sub_1C00BC42C((uint64_t)v6);
      if (v33) {
        goto LABEL_32;
      }
      unint64_t v30 = (v30 + 1) & v31;
      if (((*(void *)(v19 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
        goto LABEL_35;
      }
    }
    sub_1C00BC42C((uint64_t)v6);
LABEL_32:
    sub_1C00BC42C((uint64_t)v9);
    a1 = v34;
    uint64_t v11 = v25;
    int64_t v13 = v27;
    unint64_t v18 = v37;
    int64_t v14 = v38;
    if (v37) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v21 >= v36) {
      return;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v36) {
        return;
      }
      unint64_t v22 = *(void *)(v35 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v36) {
          return;
        }
        unint64_t v22 = *(void *)(v35 + 8 * v23);
        if (!v22) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v37 = (v22 - 1) & v22;
    int64_t v38 = v23;
  }
  uint64_t v24 = v14 + 4;
  if (v14 + 4 >= v36) {
    return;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v36) {
      return;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_21;
    }
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_1C00AF494(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v25 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_57;
    }
    if (v11 < v26)
    {
      unint64_t v12 = *(void *)(v25 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12)
      {
LABEL_22:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
        uint64_t v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        uint64_t v15 = sub_1C044C04C();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v27 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE700000000000000;
            uint64_t v20 = 0x736E6F6974706FLL;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                uint64_t v20 = 0x40736E6F6974706FLL;
                unint64_t v19 = 0xEC000000646E6962;
                break;
              case 2:
                uint64_t v20 = 0x40736E6F6974706FLL;
                unint64_t v19 = 0xEE0074756F79616CLL;
                break;
              case 3:
                unint64_t v19 = 0xE600000000000000;
                uint64_t v20 = 0x726F73727563;
                break;
              case 4:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x6574616C706D6574;
                break;
              case 5:
                uint64_t v20 = 0x747865746E6F63;
                break;
              case 6:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x73676E69646E6962;
                break;
              case 7:
                unint64_t v19 = 0xE300000000000000;
                uint64_t v20 = 7105633;
                break;
              default:
                break;
            }
            unint64_t v21 = 0xE700000000000000;
            uint64_t v22 = 0x736E6F6974706FLL;
            switch(v14)
            {
              case 1:
                unint64_t v21 = 0xEC000000646E6962;
                if (v20 != 0x40736E6F6974706FLL) {
                  goto LABEL_47;
                }
                goto LABEL_46;
              case 2:
                unint64_t v21 = 0xEE0074756F79616CLL;
                if (v20 != 0x40736E6F6974706FLL) {
                  goto LABEL_47;
                }
                goto LABEL_46;
              case 3:
                unint64_t v21 = 0xE600000000000000;
                if (v20 != 0x726F73727563) {
                  goto LABEL_47;
                }
                goto LABEL_46;
              case 4:
                unint64_t v21 = 0xE800000000000000;
                if (v20 != 0x6574616C706D6574) {
                  goto LABEL_47;
                }
                goto LABEL_46;
              case 5:
                if (v20 != 0x747865746E6F63) {
                  goto LABEL_47;
                }
                goto LABEL_46;
              case 6:
                unint64_t v21 = 0xE800000000000000;
                uint64_t v22 = 0x73676E69646E6962;
                goto LABEL_45;
              case 7:
                unint64_t v21 = 0xE300000000000000;
                if (v20 != 7105633) {
                  goto LABEL_47;
                }
                goto LABEL_46;
              default:
LABEL_45:
                if (v20 != v22) {
                  goto LABEL_47;
                }
LABEL_46:
                if (v19 == v21)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
LABEL_47:
                char v23 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v23)
                {
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 3;
      if (v13 < v26)
      {
        unint64_t v12 = *(void *)(v25 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
LABEL_57:
        __break(1u);
        JUMPOUT(0x1C00AF8C8);
      }
    }
  }
  return 1;
}

uint64_t sub_1C00AF944(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v32 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    uint64_t v8 = a2 + 56;
    int64_t v33 = (unint64_t)(v5 + 63) >> 6;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_96;
    }
    if (v11 < v33)
    {
      unint64_t v12 = *(void *)(v32 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v33) {
        return 1;
      }
      unint64_t v12 = *(void *)(v32 + 8 * v4);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v33) {
        return 1;
      }
      unint64_t v12 = *(void *)(v32 + 8 * v4);
      if (v12)
      {
LABEL_22:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
        uint64_t v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        sub_1C1520DBC();
        FormatFontTrait.rawValue.getter();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1C1520E0C();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v34 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE600000000000000;
            uint64_t v20 = 0x63696C617469;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1684828002;
                break;
              case 2:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x6465646E61707865;
                break;
              case 3:
                uint64_t v20 = 0x65736E65646E6F63;
                unint64_t v19 = 0xE900000000000064;
                break;
              case 4:
                unint64_t v19 = 0xE900000000000065;
                uint64_t v20 = 0x636170536F6E6F6DLL;
                break;
              case 5:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x6C61636974726576;
                break;
              case 6:
                uint64_t v20 = 0x696D6974704F6975;
                unint64_t v19 = 0xEB0000000064657ALL;
                break;
              case 7:
                uint64_t v21 = 0x4C7468676974;
                goto LABEL_34;
              case 8:
                uint64_t v21 = 0x4C65736F6F6CLL;
LABEL_34:
                uint64_t v20 = v21 & 0xFFFFFFFFFFFFLL | 0x6165000000000000;
                unint64_t v19 = 0xEC000000676E6964;
                break;
              case 9:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1802723693;
                break;
              case 0xA:
                uint64_t v20 = 0x656C797453646C6FLL;
                goto LABEL_42;
              case 0xB:
                unint64_t v19 = 0x80000001C15FE770;
                uint64_t v20 = 0xD000000000000012;
                break;
              case 0xC:
                uint64_t v20 = 0x65536E7265646F6DLL;
                unint64_t v19 = 0xEC00000073666972;
                break;
              case 0xD:
                uint64_t v20 = 0x6F646E6572616C63;
                unint64_t v19 = 0xEF7366697265536ELL;
                break;
              case 0xE:
                uint64_t v20 = 0x6972655362616C73;
                unint64_t v19 = 0xEA00000000007366;
                break;
              case 0xF:
                uint64_t v20 = 0x6D726F6665657266;
LABEL_42:
                unint64_t v19 = 0xEE00736669726553;
                break;
              case 0x10:
                unint64_t v19 = 0xE900000000000066;
                uint64_t v20 = 0x69726553736E6173;
                break;
              case 0x11:
                uint64_t v20 = 0x746E656D616E726FLL;
                unint64_t v19 = 0xEB00000000736C61;
                break;
              case 0x12:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x73747069726373;
                break;
              case 0x13:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x63696C6F626D7973;
                break;
              default:
                break;
            }
            unint64_t v22 = 0xE600000000000000;
            uint64_t v23 = 0x63696C617469;
            switch(v14)
            {
              case 1:
                unint64_t v22 = 0xE400000000000000;
                if (v20 != 1684828002) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 2:
                unint64_t v22 = 0xE800000000000000;
                if (v20 != 0x6465646E61707865) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 3:
                unint64_t v22 = 0xE900000000000064;
                if (v20 != 0x65736E65646E6F63) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 4:
                unint64_t v22 = 0xE900000000000065;
                if (v20 != 0x636170536F6E6F6DLL) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 5:
                unint64_t v22 = 0xE800000000000000;
                if (v20 != 0x6C61636974726576) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 6:
                uint64_t v24 = 0x696D6974704F6975;
                uint64_t v25 = 6579578;
                goto LABEL_80;
              case 7:
                uint64_t v26 = 0x4C7468676974;
                goto LABEL_61;
              case 8:
                uint64_t v26 = 0x4C65736F6F6CLL;
LABEL_61:
                uint64_t v27 = v26 & 0xFFFFFFFFFFFFLL | 0x6165000000000000;
                uint64_t v28 = 1735289188;
                goto LABEL_68;
              case 9:
                unint64_t v22 = 0xE400000000000000;
                if (v20 != 1802723693) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 10:
                uint64_t v29 = 0x656C797453646C6FLL;
                goto LABEL_75;
              case 11:
                unint64_t v22 = 0x80000001C15FE770;
                if (v20 != 0xD000000000000012) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 12:
                uint64_t v27 = 0x65536E7265646F6DLL;
                uint64_t v28 = 1936091506;
LABEL_68:
                unint64_t v22 = v28 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                if (v20 != v27) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 13:
                unint64_t v22 = 0xEF7366697265536ELL;
                if (v20 != 0x6F646E6572616C63) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 14:
                unint64_t v22 = 0xEA00000000007366;
                if (v20 != 0x6972655362616C73) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 15:
                uint64_t v29 = 0x6D726F6665657266;
LABEL_75:
                unint64_t v22 = 0xEE00736669726553;
                if (v20 != v29) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 16:
                unint64_t v22 = 0xE900000000000066;
                if (v20 != 0x69726553736E6173) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 17:
                uint64_t v24 = 0x746E656D616E726FLL;
                uint64_t v25 = 7564385;
LABEL_80:
                unint64_t v22 = v25 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
                if (v20 != v24) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              case 18:
                unint64_t v22 = 0xE700000000000000;
                uint64_t v23 = 0x73747069726373;
                goto LABEL_83;
              case 19:
                unint64_t v22 = 0xE800000000000000;
                if (v20 != 0x63696C6F626D7973) {
                  goto LABEL_85;
                }
                goto LABEL_84;
              default:
LABEL_83:
                if (v20 != v23) {
                  goto LABEL_85;
                }
LABEL_84:
                if (v19 == v22)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v34;
                  goto LABEL_7;
                }
LABEL_85:
                char v30 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v30)
                {
                  int64_t v4 = v34;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 3;
      if (v13 < v33)
      {
        unint64_t v12 = *(void *)(v32 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v33) {
            return 1;
          }
          unint64_t v12 = *(void *)(v32 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
LABEL_96:
        __break(1u);
        JUMPOUT(0x1C00B0080);
      }
    }
  }
  return 1;
}

uint64_t sub_1C00B0120(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 56);
  uint64_t v26 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v28 = result;
  uint64_t v9 = a2 + 56;
  if ((v7 & v5) == 0) {
    goto LABEL_8;
  }
  while (2)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_24:
    int v15 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v11);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C1520E0C();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    int64_t v19 = v4;
    uint64_t v20 = ~v17;
    while (!*(unsigned char *)(*(void *)(a2 + 48) + v18))
    {
      unint64_t v21 = 0xE600000000000000;
      uint64_t v22 = 0x657669746361;
      if (!v15) {
        goto LABEL_40;
      }
LABEL_29:
      if (v15 == 1) {
        uint64_t v23 = 0x64657269707865;
      }
      else {
        uint64_t v23 = 0x64656C6261736964;
      }
      if (v15 == 1) {
        unint64_t v24 = 0xE700000000000000;
      }
      else {
        unint64_t v24 = 0xE800000000000000;
      }
      if (v22 == v23) {
        goto LABEL_41;
      }
LABEL_42:
      char v25 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_46;
      }
      unint64_t v18 = (v18 + 1) & v20;
      if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        return 0;
      }
    }
    if (*(unsigned char *)(*(void *)(a2 + 48) + v18) == 1)
    {
      unint64_t v21 = 0xE700000000000000;
      uint64_t v22 = 0x64657269707865;
      if (!v15) {
        goto LABEL_40;
      }
      goto LABEL_29;
    }
    unint64_t v21 = 0xE800000000000000;
    uint64_t v22 = 0x64656C6261736964;
    if (v15) {
      goto LABEL_29;
    }
LABEL_40:
    unint64_t v24 = 0xE600000000000000;
    if (v22 != 0x657669746361) {
      goto LABEL_42;
    }
LABEL_41:
    if (v21 != v24) {
      goto LABEL_42;
    }
    uint64_t result = swift_bridgeObjectRelease_n();
LABEL_46:
    int64_t v4 = v19;
    uint64_t v3 = v28;
    if (v8) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v12 >= v27) {
    return 1;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v27) {
    return 1;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v4);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v27) {
    return 1;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v4);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 3;
  if (v12 + 3 >= v27) {
    return 1;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v4);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v27) {
    return 1;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1C00B0490(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v5 = *(void *)(result + 56);
    uint64_t v24 = result + 56;
    uint64_t v6 = 1 << *(unsigned char *)(result + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v5;
    int64_t v25 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v26 = result;
    uint64_t v9 = a2 + 56;
    if ((v7 & v5) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
    {
      int v15 = *(unsigned __int8 *)(*(void *)(v3 + 48) + i);
      sub_1C1520DBC();
      if (v15) {
        uint64_t v16 = 0x656E696C66666FLL;
      }
      else {
        uint64_t v16 = 0x746C7561666564;
      }
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      uint64_t v17 = sub_1C1520E0C();
      uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v19 = v17 & ~v18;
      if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        return 0;
      }
      int64_t v20 = v4;
      uint64_t v21 = ~v18;
      while (1)
      {
        uint64_t v22 = *(unsigned char *)(*(void *)(a2 + 48) + v19) ? 0x656E696C66666FLL : 0x746C7561666564;
        if (v22 == v16) {
          break;
        }
        char v23 = sub_1C1520A9C();
        uint64_t result = swift_bridgeObjectRelease_n();
        if (v23) {
          goto LABEL_37;
        }
        unint64_t v19 = (v19 + 1) & v21;
        if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          return 0;
        }
      }
      uint64_t result = swift_bridgeObjectRelease_n();
LABEL_37:
      int64_t v4 = v20;
      uint64_t v3 = v26;
      if (v8) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v12 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      if (v12 >= v25) {
        return 1;
      }
      unint64_t v13 = *(void *)(v24 + 8 * v12);
      ++v4;
      if (!v13)
      {
        int64_t v4 = v12 + 1;
        if (v12 + 1 >= v25) {
          return 1;
        }
        unint64_t v13 = *(void *)(v24 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 2;
          if (v12 + 2 >= v25) {
            return 1;
          }
          unint64_t v13 = *(void *)(v24 + 8 * v4);
          if (!v13)
          {
            int64_t v4 = v12 + 3;
            if (v12 + 3 >= v25) {
              return 1;
            }
            unint64_t v13 = *(void *)(v24 + 8 * v4);
            if (!v13)
            {
              int64_t v14 = v12 + 4;
              if (v14 >= v25) {
                return 1;
              }
              unint64_t v13 = *(void *)(v24 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  int64_t v4 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_42;
                  }
                  if (v4 >= v25) {
                    return 1;
                  }
                  unint64_t v13 = *(void *)(v24 + 8 * v4);
                  ++v14;
                  if (v13) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v4 = v14;
            }
          }
        }
      }
LABEL_23:
      unint64_t v8 = (v13 - 1) & v13;
    }
    __break(1u);
LABEL_42:
    __break(1u);
    return result;
  }
  return 0;
}

uint64_t sub_1C00B073C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v25 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v11 < v26)
    {
      unint64_t v12 = *(void *)(v25 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 3;
      if (v11 + 3 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12)
      {
LABEL_24:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
        int v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        sub_1C1520DBC();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1C1520E0C();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v27 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE700000000000000;
            uint64_t v20 = 0x676E696E726F6DLL;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                uint64_t v20 = 0x6F6F6E7265746661;
                unint64_t v19 = 0xE90000000000006ELL;
                break;
              case 2:
                uint64_t v20 = 0x676E696E657665;
                break;
              case 3:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x746867696ELL;
                break;
              default:
                break;
            }
            unint64_t v21 = 0xE700000000000000;
            uint64_t v22 = 0x676E696E726F6DLL;
            switch(v14)
            {
              case 1:
                unint64_t v21 = 0xE90000000000006ELL;
                if (v20 != 0x6F6F6E7265746661) {
                  goto LABEL_39;
                }
                goto LABEL_36;
              case 2:
                uint64_t v22 = 0x676E696E657665;
                goto LABEL_35;
              case 3:
                unint64_t v21 = 0xE500000000000000;
                if (v20 != 0x746867696ELL) {
                  goto LABEL_39;
                }
                goto LABEL_36;
              default:
LABEL_35:
                if (v20 != v22) {
                  goto LABEL_39;
                }
LABEL_36:
                if (v19 == v21)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
LABEL_39:
                char v23 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v23)
                {
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 4;
      if (v13 < v26)
      {
        unint64_t v12 = *(void *)(v25 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_24;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_24;
          }
        }
LABEL_47:
        __break(1u);
        JUMPOUT(0x1C00B0B30);
      }
    }
  }
  return 1;
}

uint64_t sub_1C00B0B60(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v29 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v30 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  if ((v7 & v5) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  int64_t v32 = v4;
  unint64_t v11 = v10 | (v4 << 6);
LABEL_24:
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v11);
  sub_1C1520DBC();
  sub_1BFC5DE08();
  uint64_t v17 = sub_1C1520E0C();
  uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v19 = v17 & ~v18;
  if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
    return 0;
  }
  uint64_t v20 = ~v18;
  while (2)
  {
    uint64_t v21 = 0x7961646E7573;
    unint64_t v22 = 0xE600000000000000;
    switch(*(unsigned char *)(*(void *)(a2 + 48) + v19))
    {
      case 1:
        uint64_t v21 = 0x7961646E6F6DLL;
        break;
      case 2:
        unint64_t v22 = 0xE700000000000000;
        uint64_t v21 = 0x79616473657574;
        break;
      case 3:
        uint64_t v21 = 0x616473656E646577;
        unint64_t v22 = 0xE900000000000079;
        break;
      case 4:
        unint64_t v22 = 0xE800000000000000;
        uint64_t v21 = 0x7961647372756874;
        break;
      case 5:
        uint64_t v21 = 0x796164697266;
        break;
      case 6:
        unint64_t v22 = 0xE800000000000000;
        uint64_t v21 = 0x7961647275746173;
        break;
      case 7:
        unint64_t v22 = 0xE800000000000000;
        uint64_t v21 = 0x737961646B656577;
        break;
      case 8:
        unint64_t v22 = 0xE800000000000000;
        uint64_t v21 = 0x73646E656B656577;
        break;
      default:
        break;
    }
    uint64_t v23 = 0x7961646E7573;
    unint64_t v24 = 0xE600000000000000;
    switch(v16)
    {
      case 1:
        uint64_t v25 = 1684959085;
        goto LABEL_43;
      case 2:
        unint64_t v24 = 0xE700000000000000;
        if (v21 != 0x79616473657574) {
          goto LABEL_51;
        }
        goto LABEL_50;
      case 3:
        unint64_t v24 = 0xE900000000000079;
        if (v21 != 0x616473656E646577) {
          goto LABEL_51;
        }
        goto LABEL_50;
      case 4:
        unint64_t v24 = 0xE800000000000000;
        uint64_t v26 = 0x647372756874;
        goto LABEL_46;
      case 5:
        uint64_t v25 = 1684632166;
LABEL_43:
        if (v21 != (v25 & 0xFFFF0000FFFFFFFFLL | 0x796100000000)) {
          goto LABEL_51;
        }
        goto LABEL_50;
      case 6:
        unint64_t v24 = 0xE800000000000000;
        uint64_t v26 = 0x647275746173;
LABEL_46:
        if (v21 != (v26 & 0xFFFFFFFFFFFFLL | 0x7961000000000000)) {
          goto LABEL_51;
        }
        goto LABEL_50;
      case 7:
        unint64_t v24 = 0xE800000000000000;
        uint64_t v23 = 0x737961646B656577;
        goto LABEL_49;
      case 8:
        unint64_t v24 = 0xE800000000000000;
        if (v21 != 0x73646E656B656577) {
          goto LABEL_51;
        }
        goto LABEL_50;
      default:
LABEL_49:
        if (v21 != v23) {
          goto LABEL_51;
        }
LABEL_50:
        if (v22 != v24)
        {
LABEL_51:
          char v27 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_57;
          }
          unint64_t v19 = (v19 + 1) & v20;
          if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_57:
        uint64_t v3 = a1;
        int64_t v4 = v32;
        if (v8) {
          goto LABEL_7;
        }
LABEL_8:
        int64_t v12 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_62;
        }
        if (v12 < v30)
        {
          unint64_t v13 = *(void *)(v29 + 8 * v12);
          int64_t v14 = v4 + 1;
          if (v13) {
            goto LABEL_23;
          }
          int64_t v14 = v4 + 2;
          if (v4 + 2 < v30)
          {
            unint64_t v13 = *(void *)(v29 + 8 * v14);
            if (v13) {
              goto LABEL_23;
            }
            int64_t v14 = v4 + 3;
            if (v4 + 3 < v30)
            {
              unint64_t v13 = *(void *)(v29 + 8 * v14);
              if (v13) {
                goto LABEL_23;
              }
              int64_t v14 = v4 + 4;
              if (v4 + 4 < v30)
              {
                unint64_t v13 = *(void *)(v29 + 8 * v14);
                if (v13) {
                  goto LABEL_23;
                }
                uint64_t v15 = v4 + 5;
                if (v4 + 5 < v30)
                {
                  unint64_t v13 = *(void *)(v29 + 8 * v15);
                  if (v13)
                  {
                    int64_t v14 = v4 + 5;
LABEL_23:
                    unint64_t v8 = (v13 - 1) & v13;
                    int64_t v32 = v14;
                    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
                    goto LABEL_24;
                  }
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v30) {
                      return 1;
                    }
                    unint64_t v13 = *(void *)(v29 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_23;
                    }
                  }
LABEL_62:
                  __break(1u);
                  JUMPOUT(0x1C00B0FB8);
                }
              }
            }
          }
        }
        return 1;
    }
  }
}

uint64_t sub_1C00B1004(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 2 * a2;
  sub_1BFEBC130();
  return a1;
}

uint64_t sub_1C00B106C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

void *sub_1C00B107C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1BFF01B5C();
  uint64_t v5 = (void *)swift_allocObject();
  size_t v6 = _swift_stdlib_malloc_size(v5);
  v5[2] = v2;
  v5[3] = 2 * ((uint64_t)(v6 - 32) / 40);
  uint64_t v7 = sub_1C00B41FC((uint64_t)&v9, (uint64_t)(v5 + 4), v2, a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v5;
}

uint64_t sub_1C00B115C(uint64_t a1)
{
  return sub_1BFE65368(a1, (unint64_t *)&unk_1EB860E40, (uint64_t)&type metadata for FormatItemTrait);
}

uint64_t sub_1C00B1170(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, &qword_1EB85E760, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 29;
  }
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * (v5 >> 2);
  size_t v6 = sub_1C00B42C0(&v8, (_DWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C00B1278(uint64_t a1)
{
  return sub_1BFE65368(a1, &qword_1EA1967B0, (uint64_t)&type metadata for SportsDataConfigurationEventStatus);
}

uint64_t sub_1C00B128C(uint64_t a1)
{
  return sub_1BFE65368(a1, &qword_1EB890428, (uint64_t)&type metadata for FormatResizeAutoMask);
}

uint64_t sub_1C00B12A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, (unint64_t *)&unk_1EB86BAE0, (uint64_t)&type metadata for FormatJsonConfigKey, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_1BFD97788(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

size_t sub_1C00B1398(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C006271C(0, &qword_1EB86BAA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatRegex, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = *(void *)(type metadata accessor for FormatRegex() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  size_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_1C00B4454(&v11, (uint64_t)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_1BFEFB808();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00B1518(uint64_t a1)
{
  return sub_1BFE65368(a1, &qword_1EA1968F8, (uint64_t)&type metadata for FormatPrintNodeValue);
}

void *sub_1C00B1530(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, &qword_1EB861B20, (uint64_t)&type metadata for FormatContentPoolSlotPlaceholder, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  unint64_t v5 = sub_1C00B4778(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1C00B1648(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, (unint64_t *)&unk_1EB87A868, (uint64_t)&type metadata for FormatContentPoolPlaceholder, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 + 31;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 6);
  size_t v6 = sub_1C00B4998(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

size_t sub_1C00B1750(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C006271C(0, &qword_1EB86EE20, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatistic, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = *(void *)(type metadata accessor for PuzzleStatistic() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  size_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_1C00B6470(&v11, (uint64_t)v6 + v5, v1, a1, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_1BFEFB808();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1C00B190C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  uint64_t v6 = sub_1C00B4C60((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1C00B1A1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  uint64_t v6 = sub_1C00B4E5C(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C00B1B2C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BFC57B20(a1, a2, a3, a4, (unint64_t *)&unk_1EA196770, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
}

void *sub_1C00B1B60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1C00B6778((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

size_t sub_1C00B1C68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C006271C(0, &qword_1EB870508, (uint64_t (*)(uint64_t))type metadata accessor for FormatScopedOption, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = *(void *)(type metadata accessor for FormatScopedOption() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_1C00B6470(&v11, (uint64_t)v6 + v5, v1, a1, (uint64_t (*)(void))type metadata accessor for FormatScopedOption, (uint64_t (*)(void))type metadata accessor for FormatScopedOption, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_1BFEFB808();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1C00B1E24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C00BB278();
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_1C00B5364((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C00B1F14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BFC57B20(a1, a2, a3, a4, &qword_1EB87C380, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
}

uint64_t sub_1C00B1F48(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BFC57B20(a1, a2, a3, a4, (unint64_t *)&unk_1EB87A660, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
}

uint64_t sub_1C00B1F7C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 144 * a3;
        if (v10 < (unint64_t)&v8[18 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 144 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1C00BC6D4(0, (unint64_t *)&unk_1EB85E170, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 144);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B2130(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BFC57B20(a1, a2, a3, a4, (unint64_t *)&unk_1EB87A760, type metadata accessor for HeadlineViewLayout.Context, type metadata accessor for HeadlineViewLayout.Context);
}

void *sub_1C00B2164(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C006271C(0, &qword_1EA1967D8, (uint64_t (*)(uint64_t))sub_1C00BB3B4, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_1C00B5574(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1C00B2284(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1C00B57A0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C00B238C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BFC57B20(a1, a2, a3, a4, &qword_1EB85EFF8, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
}

uint64_t sub_1C00B23C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BFC57B20(a1, a2, a3, a4, (unint64_t *)&unk_1EA196920, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
}

uint64_t sub_1C00B23F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v11 = a2 + (a3 << 6);
        if (v11 < (unint64_t)&v8[8 * v5 + 4] && (unint64_t)(v8 + 4) < v11 + (v5 << 6)) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1C00BC6D4(0, &qword_1EA196918, (uint64_t)&type metadata for FeedPuzzleType, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      int64_t v9 = _swift_stdlib_malloc_size(v8);
      uint64_t v10 = v9 - 32;
      if (v9 < 32) {
        uint64_t v10 = v9 + 31;
      }
      v8[2] = v5;
      v8[3] = 2 * (v10 >> 6);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B258C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 208 * a3;
        if (v10 < (unint64_t)&v8[26 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 208 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1C00BC6D4(0, &qword_1EB86BA90, (uint64_t)&type metadata for FeedPuzzle, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 208);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B273C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BFC57B20(a1, a2, a3, a4, &qword_1EB85C6F8, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
}

uint64_t sub_1C00B2770(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 152 * a3;
        if (v10 < (unint64_t)&v8[19 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 152 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1C00BC6D4(0, (unint64_t *)&unk_1EB86BA80, (uint64_t)&type metadata for FeedTag, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 152);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B2920(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 24 * a3;
        if (v10 < (unint64_t)&v8[3 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 24 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1C00BC6D4(0, (unint64_t *)&unk_1EB85E160, (uint64_t)&type metadata for FeedTopicCluster, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 24);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B2AD0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      size_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_1C00BC6D4(0, (unint64_t *)&unk_1EB87A600, (uint64_t)&type metadata for FeedScoredHeadline, MEMORY[0x1E4FBBE00]);
      size_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B2C64(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 24 * a3;
        if (v10 < (unint64_t)&v8[3 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 24 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1C00BC6D4(0, &qword_1EB8903E0, (uint64_t)&type metadata for FeedJournalEntry, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 24);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B2E14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C00B3DCC(a1, a2, a3, a4, (unint64_t *)&qword_1EB87A2C0);
}

uint64_t sub_1C00B2E28(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BFC57B20(a1, a2, a3, a4, (unint64_t *)&unk_1EB860E10, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
}

uint64_t sub_1C00B2E5C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 88 * a3;
        if (v10 < (unint64_t)&v8[11 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 88 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1C00BC6D4(0, &qword_1EB86F6B0, (uint64_t)&type metadata for FeedGapOffline, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 88);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B300C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 56 * a3;
        if (v10 < (unint64_t)&v8[7 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 56 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1C00BC6D4(0, (unint64_t *)&unk_1EB87A640, (uint64_t)&type metadata for FeedGap, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 56);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void *sub_1C00B31C0(unint64_t a1)
{
  return sub_1C00B3268(a1, (void (*)(void))type metadata accessor for FormatSupplementaryNodeDataLayoutAttributes, (uint64_t (*)(void))sub_1C00BB564, sub_1C00BB598, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C10758FC);
}

void *sub_1C00B3214(unint64_t a1)
{
  return sub_1C00B3268(a1, (void (*)(void))type metadata accessor for FormatItemNodeDataLayoutAttributes, (uint64_t (*)(void))sub_1C00BB4FC, sub_1C00BB530, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C10758FC);
}

void *sub_1C00B3268(unint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v10 <= 0)
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1C00BC6D4(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v10;
      v11[3] = (2 * (v13 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1C00B769C((unint64_t)(v11 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v14;
    swift_bridgeObjectRelease();
    if (a5 == (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))v10) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v10) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v11;
}

void *sub_1C00B33B4(unint64_t a1)
{
  return sub_1C00B33CC(a1, (void (*)(void *, uint64_t, unint64_t))sub_1BFFF1C38);
}

void *sub_1C00B33CC(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1C00BC6D4(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v5;
}

uint64_t sub_1C00B34F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      size_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_1C00BC6D4(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      size_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B368C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 24 * a3;
        if (v10 < (unint64_t)&v8[3 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 24 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1C00BC6D4(0, (unint64_t *)&unk_1EB86EE00, (uint64_t)&type metadata for FeedChannelCluster, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 24);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void *sub_1C00B383C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, (unint64_t *)&unk_1EB87A8F0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  int64_t v6 = sub_1C00B5E60(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C00B3944(uint64_t a1)
{
  return sub_1BFE65368(a1, (unint64_t *)&unk_1EB8903C0, (uint64_t)&type metadata for ContextMenu.ItemOptions);
}

void *sub_1C00B3958(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C006271C(0, &qword_1EA19C800, (uint64_t (*)(uint64_t))sub_1C00BB490, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_1C00B5FF4((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1C00B3A7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C006271C(0, (unint64_t *)&qword_1EA19C7F0, (uint64_t (*)(uint64_t))sub_1C00BB424, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  int64_t v6 = sub_1C00B6210(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

size_t sub_1C00B3B90(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C006271C(0, (unint64_t *)&unk_1EA1967B8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilingPackage, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = *(void *)(type metadata accessor for DebugFormatCompilingPackage() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_1C00B6470(&v11, (uint64_t)v6 + v5, v1, a1, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_1BFEFB808();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1C00B3D4C(unint64_t a1)
{
  return sub_1C00B33CC(a1, (void (*)(void *, uint64_t, unint64_t))sub_1BFE4EEEC);
}

void *sub_1C00B3D64(unint64_t a1)
{
  return sub_1C00B3268(a1, (void (*)(void))type metadata accessor for DebugFormatFileTreeItem, (uint64_t (*)(void))sub_1C00BB154, sub_1C00BB188, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C10758FC);
}

uint64_t sub_1C00B3DB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C00B3DCC(a1, a2, a3, a4, (unint64_t *)&qword_1EB87A1C0);
}

uint64_t sub_1C00B3DCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v10 = v6;
    if (v6 <= 0)
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        unint64_t v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8) {
          goto LABEL_19;
        }
        sub_1BFC39268(0, a5);
        swift_arrayInitWithCopy();
        return (uint64_t)v11;
      }
    }
    else
    {
      sub_1C00BC6D4(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B3F8C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  unint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      unint64_t v22 = v16;
      unint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          unint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            unint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            unint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    unint64_t v14 = &v4[8 * v10];
    unint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      unint64_t v24 = v7;
    }
LABEL_42:
    sub_1C0634F70((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B41FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)result;
  if (!a2)
  {
    uint64_t v8 = 0;
    goto LABEL_11;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
LABEL_11:
    *uint64_t v7 = a4;
    v7[1] = a5;
    v7[2] = v8;
    return v8;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a4 + 16);
    if (v9)
    {
      uint64_t v10 = a2;
      unint64_t v11 = 0;
      uint64_t v12 = a4 + 32;
      uint64_t v13 = a3 - 1;
      while (v11 < *(void *)(a4 + 16))
      {
        uint64_t result = sub_1BFC66384(v12, v10);
        if (v13 == v11) {
          goto LABEL_11;
        }
        v10 += 40;
        ++v11;
        v12 += 40;
        if (v9 == v11) {
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_13;
    }
LABEL_9:
    uint64_t v8 = v9;
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
  return result;
}

void *sub_1C00B42C0(void *result, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_DWORD *)(*(void *)(a4 + 48) + 4 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_1C00B4454(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FormatRegex();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v28 - v13;
  uint64_t v33 = a4;
  uint64_t v16 = a4 + 56;
  uint64_t v15 = *(void *)(a4 + 56);
  uint64_t v30 = -1 << *(unsigned char *)(a4 + 32);
  if (-v30 < 64) {
    uint64_t v17 = ~(-1 << -(char)v30);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  if (!a2)
  {
    int64_t v19 = 0;
LABEL_34:
    uint64_t v27 = ~v30;
    *a1 = v33;
    a1[1] = v16;
    a1[2] = v27;
    a1[3] = v19;
    a1[4] = v18;
    return;
  }
  if (!a3)
  {
    int64_t v19 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v29 = a1;
  int64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v31 = v16;
  int64_t v32 = (unint64_t)(63 - v30) >> 6;
  int64_t v28 = v32 - 1;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v20;
    uint64_t v26 = *(void *)(v9 + 72);
    sub_1C00BB210(*(void *)(v33 + 48) + v26 * v22, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatRegex);
    sub_1C00BC720((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatRegex);
    sub_1C00BC720((uint64_t)v14, a2, (uint64_t (*)(void))type metadata accessor for FormatRegex);
    if (v20 == a3) {
      goto LABEL_33;
    }
    a2 += v26;
    if (v18) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v23 >= v32)
    {
      unint64_t v18 = 0;
LABEL_33:
      a1 = v29;
      uint64_t v16 = v31;
      goto LABEL_34;
    }
    uint64_t v16 = v31;
    unint64_t v24 = *(void *)(v31 + 8 * v23);
    if (!v24) {
      break;
    }
LABEL_18:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v19 = v23;
  }
  v19 += 2;
  if (v23 + 1 >= v32)
  {
    unint64_t v18 = 0;
    int64_t v19 = v23;
LABEL_39:
    a1 = v29;
    goto LABEL_34;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v19);
  if (v24) {
    goto LABEL_14;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v32) {
    goto LABEL_36;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v19 = v23 + 3;
  if (v23 + 3 >= v32)
  {
    unint64_t v18 = 0;
    int64_t v19 = v23 + 2;
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v19);
  if (v24)
  {
LABEL_14:
    int64_t v23 = v19;
    goto LABEL_18;
  }
  int64_t v25 = v23 + 4;
  if (v23 + 4 >= v32)
  {
LABEL_36:
    unint64_t v18 = 0;
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v32)
    {
      unint64_t v18 = 0;
      int64_t v19 = v28;
      goto LABEL_39;
    }
    unint64_t v24 = *(void *)(v31 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
}

void *sub_1C00B4778(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v22 = -1 << *(unsigned char *)(a4 + 32);
  int64_t v23 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    int64_t v19 = (void *)(*(void *)(a4 + 56) + 24 * v15);
    uint64_t v20 = v19[1];
    uint64_t v21 = v19[2];
    *uint64_t v10 = *v19;
    v10[1] = v20;
    v10[2] = v21;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 3;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v22;
      uint64_t result = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1C00B4998(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a4 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a4 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_38:
    *uint64_t result = a4;
    result[1] = v26;
    result[2] = ~v4;
    result[3] = v8;
    result[4] = v6;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v7 = a2;
  uint64_t v27 = a3;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v24 = result;
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v25 = (unint64_t)(63 - v4) >> 6;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v8 << 6);
  while (1)
  {
    ++v9;
    unint64_t v15 = (void *)(*(void *)(a4 + 56) + (v11 << 6));
    uint64_t v16 = v15[1];
    uint64_t v18 = v15[2];
    uint64_t v17 = v15[3];
    uint64_t v20 = v15[4];
    uint64_t v19 = v15[5];
    uint64_t v22 = v15[6];
    uint64_t v21 = v15[7];
    *uint64_t v7 = *v15;
    v7[1] = v16;
    v7[2] = v18;
    v7[3] = v17;
    v7[4] = v20;
    v7[5] = v19;
    v7[6] = v22;
    v7[7] = v21;
    if (v9 == v27)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v4 = v23;
      uint64_t result = v24;
      a3 = v27;
      goto LABEL_38;
    }
    v7 += 8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v12 >= v25) {
      goto LABEL_33;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    if (!v13) {
      break;
    }
LABEL_18:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v8 = v12;
  }
  v8 += 2;
  if (v12 + 1 >= v25)
  {
    unint64_t v6 = 0;
    int64_t v8 = v12;
    goto LABEL_37;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v8);
  if (v13) {
    goto LABEL_14;
  }
  int64_t v14 = v12 + 2;
  if (v12 + 2 >= v25) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13) {
    goto LABEL_17;
  }
  int64_t v8 = v12 + 3;
  if (v12 + 3 >= v25)
  {
    unint64_t v6 = 0;
    int64_t v8 = v12 + 2;
    goto LABEL_37;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v8);
  if (v13)
  {
LABEL_14:
    int64_t v12 = v8;
    goto LABEL_18;
  }
  int64_t v14 = v12 + 4;
  if (v12 + 4 >= v25)
  {
LABEL_33:
    unint64_t v6 = 0;
LABEL_37:
    a3 = v9;
    uint64_t v4 = v23;
    uint64_t result = v24;
    goto LABEL_38;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13)
  {
LABEL_17:
    int64_t v12 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v25)
    {
      unint64_t v6 = 0;
      int64_t v8 = v25 - 1;
      goto LABEL_37;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C00B4C60(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *unint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_unknownObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_unknownObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1C00B4E5C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    *unint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1C00B5058(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  unint64_t v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1C151FFEC();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A140);
    sub_1C00BC034((unint64_t *)&qword_1EB87A150, (unint64_t *)&qword_1EB87A140);
    uint64_t result = (void *)sub_1C151F02C();
    uint64_t v4 = v27;
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v11 = 0;
    goto LABEL_38;
  }
  int64_t v9 = 0;
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = a4 + 56;
  uint64_t v8 = ~v19;
  uint64_t v20 = -v19;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v10 = v21 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v11 = 0;
LABEL_38:
    uint64_t v22 = v24;
LABEL_41:
    *uint64_t v22 = v4;
    v22[1] = v7;
    v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (void *)v11;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v11 = 0;
  int64_t v25 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1C152001C()) {
        goto LABEL_40;
      }
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A140);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v25)
    {
      unint64_t v10 = 0;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    if (v16) {
      goto LABEL_23;
    }
    int64_t v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      unint64_t v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        int64_t v15 = v9 + 3;
        goto LABEL_23;
      }
      int64_t v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        unint64_t v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v17);
      if (!v16)
      {
        int64_t v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          unint64_t v10 = 0;
          int64_t v9 = v17;
          goto LABEL_40;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v15);
        if (!v16)
        {
          int64_t v18 = v9 + 6;
          while (v25 != v18)
          {
            unint64_t v16 = *(void *)(v7 + 8 * v18++);
            if (v16)
            {
              int64_t v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v10 = 0;
          int64_t v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v15 = v17;
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    id v14 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      uint64_t v11 = a3;
LABEL_40:
      uint64_t v8 = v23;
      uint64_t v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1C00B5364(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_36:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_1BFC66384(*(void *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_1BFC773DC(v21, (uint64_t)v22);
    uint64_t result = sub_1BFC773DC(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      uint64_t v13 = a3;
LABEL_35:
      uint64_t v7 = v20;
      goto LABEL_36;
    }
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v17);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v12 = v17 + 1;
  if (v17 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v17 + 2;
  if (v17 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  int64_t v19 = v17 + 4;
  int64_t v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v17 = v19;
LABEL_23:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void *sub_1C00B5574(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v12 = 0;
LABEL_37:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v12;
  }
  if (!a3)
  {
    int64_t v11 = 0;
    uint64_t v12 = 0;
    goto LABEL_37;
  }
  if (a3 < 0) {
    goto LABEL_39;
  }
  uint64_t v10 = a2;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v24 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    int64_t v19 = *(void **)(*(void *)(a4 + 48) + 8 * v15);
    sub_1BFF6A008(*(void *)(a4 + 56) + 32 * v15, (uint64_t)&v25 + 8);
    *(void *)&long long v25 = v19;
    uint64_t v20 = v27;
    uint64_t v30 = v27;
    long long v21 = v26;
    long long v28 = v25;
    long long v29 = v26;
    *(_OWORD *)uint64_t v10 = v25;
    *(_OWORD *)(v10 + 16) = v21;
    *(void *)(v10 + 32) = v20;
    if (v12 == a3)
    {
      id v22 = v19;
      uint64_t v12 = a3;
      goto LABEL_36;
    }
    v10 += 40;
    uint64_t result = v19;
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      int64_t v18 = v11 + 2;
      ++v11;
      if (v16 + 1 >= v13) {
        goto LABEL_35;
      }
      unint64_t v17 = *(void *)(v5 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v11 = v16 + 1;
      if (v16 + 2 >= v13) {
        goto LABEL_35;
      }
      unint64_t v17 = *(void *)(v5 + 8 * (v16 + 2));
      if (v17)
      {
        v16 += 2;
      }
      else
      {
        int64_t v11 = v16 + 2;
        if (v16 + 3 >= v13) {
          goto LABEL_35;
        }
        unint64_t v17 = *(void *)(v5 + 8 * (v16 + 3));
        if (!v17)
        {
          int64_t v18 = v16 + 4;
          int64_t v11 = v16 + 3;
          if (v16 + 4 < v13)
          {
            unint64_t v17 = *(void *)(v5 + 8 * v18);
            if (!v17)
            {
              while (1)
              {
                int64_t v16 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_40;
                }
                if (v16 >= v13)
                {
                  int64_t v11 = v13 - 1;
                  goto LABEL_35;
                }
                unint64_t v17 = *(void *)(v5 + 8 * v16);
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v16 = v18;
            goto LABEL_21;
          }
LABEL_35:
          unint64_t v8 = 0;
LABEL_36:
          uint64_t v6 = v23;
          uint64_t result = v24;
          goto LABEL_37;
        }
        v16 += 3;
      }
    }
LABEL_21:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C00B57A0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 56) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1C00B59A0(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a4 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v10 = 0;
    uint64_t v8 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v30;
    result[2] = ~v5;
    result[3] = v10;
    result[4] = v7;
    return (void *)v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    int64_t v10 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  unint64_t v9 = a2;
  uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
  long long v28 = result;
  int64_t v10 = 0;
  uint64_t v11 = 0;
  int64_t v29 = (unint64_t)(63 - v5) >> 6;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v10 << 6);
  while (1)
  {
    ++v11;
    int64_t v17 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(a4 + 56) + 48 * v13);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v24 = v20[2];
    uint64_t v23 = v20[3];
    uint64_t v25 = v20[4];
    uint64_t v26 = v20[5];
    *unint64_t v9 = v19;
    v9[1] = v18;
    v9[2] = v21;
    v9[3] = v22;
    v9[4] = v24;
    v9[5] = v23;
    v9[6] = v25;
    v9[7] = v26;
    if (v11 == v8)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v9 += 8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v14);
    if (!v15)
    {
      v10 += 2;
      if (v14 + 1 >= v29)
      {
        unint64_t v7 = 0;
        int64_t v10 = v14;
      }
      else
      {
        unint64_t v15 = *(void *)(v30 + 8 * v10);
        if (v15) {
          goto LABEL_14;
        }
        int64_t v16 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v30 + 8 * v16);
        if (v15)
        {
LABEL_17:
          int64_t v14 = v16;
          goto LABEL_18;
        }
        int64_t v10 = v14 + 3;
        if (v14 + 3 < v29)
        {
          unint64_t v15 = *(void *)(v30 + 8 * v10);
          if (v15)
          {
LABEL_14:
            int64_t v14 = v10;
            goto LABEL_18;
          }
          int64_t v16 = v14 + 4;
          if (v14 + 4 >= v29)
          {
LABEL_33:
            unint64_t v7 = 0;
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v30 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v14 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_42;
              }
              if (v14 >= v29)
              {
                unint64_t v7 = 0;
                int64_t v10 = v29 - 1;
                goto LABEL_37;
              }
              unint64_t v15 = *(void *)(v30 + 8 * v14);
              ++v16;
              if (v15) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v7 = 0;
        int64_t v10 = v14 + 2;
      }
LABEL_37:
      uint64_t v8 = v11;
LABEL_38:
      uint64_t v5 = v27;
      uint64_t result = v28;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    int64_t v10 = v14;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C00B5C44(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *uint64_t v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 3;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1C00B5E60(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C00B5FF4(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *unint64_t v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_38;
    }
    v11 += 3;
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1C00B6210(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v22 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v23 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v24 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    unint64_t v18 = (uint64_t *)(*(void *)(a4 + 56) + 24 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = v18[2];
    *uint64_t v10 = *(void *)(*(void *)(a4 + 48) + 8 * v14);
    v10[1] = v20;
    v10[2] = v19;
    v10[3] = v21;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_38;
    }
    v10 += 4;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t result = (void *)swift_retain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v24) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v24)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v24) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v24)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v24)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v24)
              {
                unint64_t v8 = 0;
                int64_t v11 = v24 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v22;
      uint64_t result = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_1C00B6470(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  int64_t v38 = a6;
  uint64_t v12 = a5(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  int64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v32 - v17;
  uint64_t v39 = a4;
  uint64_t v20 = a4 + 64;
  uint64_t v19 = *(void *)(a4 + 64);
  uint64_t v35 = -1 << *(unsigned char *)(a4 + 32);
  if (-v35 < 64) {
    uint64_t v21 = ~(-1 << -(char)v35);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  if (!a2)
  {
    int64_t v23 = 0;
LABEL_34:
    uint64_t v31 = ~v35;
    *a1 = v39;
    a1[1] = v20;
    a1[2] = v31;
    a1[3] = v23;
    a1[4] = v22;
    return;
  }
  if (!a3)
  {
    int64_t v23 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  int64_t v34 = a1;
  int64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v36 = v20;
  int64_t v37 = (unint64_t)(63 - v35) >> 6;
  int64_t v33 = v37 - 1;
  if (!v22) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  unint64_t v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    uint64_t v30 = *(void *)(v13 + 72);
    sub_1C00BB210(*(void *)(v39 + 56) + v30 * v26, (uint64_t)v15, v38);
    sub_1C00BC720((uint64_t)v15, (uint64_t)v18, a7);
    sub_1C00BC720((uint64_t)v18, a2, a7);
    if (v24 == a3) {
      goto LABEL_33;
    }
    a2 += v30;
    if (v22) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v27 >= v37)
    {
      unint64_t v22 = 0;
LABEL_33:
      a1 = v34;
      uint64_t v20 = v36;
      goto LABEL_34;
    }
    uint64_t v20 = v36;
    unint64_t v28 = *(void *)(v36 + 8 * v27);
    if (!v28) {
      break;
    }
LABEL_18:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v37)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27;
LABEL_39:
    a1 = v34;
    goto LABEL_34;
  }
  unint64_t v28 = *(void *)(v36 + 8 * v23);
  if (v28) {
    goto LABEL_14;
  }
  int64_t v29 = v27 + 2;
  if (v27 + 2 >= v37) {
    goto LABEL_36;
  }
  unint64_t v28 = *(void *)(v36 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v23 = v27 + 3;
  if (v27 + 3 >= v37)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27 + 2;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v36 + 8 * v23);
  if (v28)
  {
LABEL_14:
    int64_t v27 = v23;
    goto LABEL_18;
  }
  int64_t v29 = v27 + 4;
  if (v27 + 4 >= v37)
  {
LABEL_36:
    unint64_t v22 = 0;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v36 + 8 * v29);
  if (v28)
  {
LABEL_17:
    int64_t v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v37)
    {
      unint64_t v22 = 0;
      int64_t v23 = v33;
      goto LABEL_39;
    }
    unint64_t v28 = *(void *)(v36 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_1C00B6778(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C00B6978(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C00B769C(a1, a2, a3, (void (*)(void))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(void))sub_1C00BB894, sub_1C00BB8C8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C10758FC);
}

uint64_t sub_1C00B69CC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BFECEE20(0, (unint64_t *)&qword_1EB86B310, (uint64_t)&qword_1EB86B430, (uint64_t)&protocolRef_FCSportsProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
        sub_1C00BC084();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          int64_t v12 = sub_1C1075890(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB86B430);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B6C08(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BFECEE20(0, &qword_1EB85C4C0, (uint64_t)&qword_1EB87A140, 0x1E4F7E538, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
        sub_1C00BB5CC();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          int64_t v12 = sub_1C1075964(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A140);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B6E44(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BFECEE20(0, &qword_1EA196930, (uint64_t)&qword_1EB87A2D0, 0x1E4F39BE8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
        sub_1C00BC4DC();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          int64_t v12 = sub_1C1075964(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2D0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B7080(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C00B769C(a1, a2, a3, sub_1C00BC390, (uint64_t (*)(void))sub_1C00BC3C4, sub_1C00BC3F8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C1075A9C);
}

uint64_t sub_1C00B70D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C00B769C(a1, a2, a3, (void (*)(void))type metadata accessor for DebugFormatUploadEntry, (uint64_t (*)(void))sub_1C00BB70C, sub_1C00BB740, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C10758FC);
}

uint64_t sub_1C00B7128(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C00B769C(a1, a2, a3, (void (*)(void))type metadata accessor for DebugFormatPackageInventory, (uint64_t (*)(void))sub_1C00BB6A4, sub_1C00BB6D8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C10758FC);
}

uint64_t sub_1C00B717C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C00B769C(a1, a2, a3, (void (*)(void))type metadata accessor for FeedGroupDebugCandidateItem, (uint64_t (*)(void))sub_1C00BC220, sub_1C00BC254, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C10758FC);
}

uint64_t sub_1C00B71D0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C00B769C(a1, a2, a3, (void (*)(void))type metadata accessor for FormatDataAccessibilityValue, (uint64_t (*)(void))sub_1C00BB7F8, sub_1C00BB82C, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C10758FC);
}

uint64_t sub_1C00B7224(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BFECEE20(0, &qword_1EA196868, (uint64_t)&qword_1EB85DFF0, 0x1E4FB13B8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
        sub_1C00BB774();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          int64_t v12 = sub_1C1075964(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BFC39268(0, &qword_1EB85DFF0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B7460(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BFECEE20(0, &qword_1EB86B340, (uint64_t)&qword_1EB890220, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
        sub_1C00BC19C();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          int64_t v12 = sub_1C1075890(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB890220);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B769C(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = a5(0);
        uint64_t v20 = a6();
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          unint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v19, v20);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C00B78C4(uint64_t a1)
{
  uint64_t v2 = sub_1C15165FC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1BFEDF1F0();
    uint64_t v9 = sub_1C15200AC();
    uint64_t v10 = 0;
    int64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C00BC5B4(&qword_1EB871188, MEMORY[0x1E4F27C88]);
      uint64_t v16 = sub_1C151E47C();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C00BC5B4(&qword_1EB8614A0, MEMORY[0x1E4F27C88]);
          char v23 = sub_1C151E5CC();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        unint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

unint64_t sub_1C00B7BD8(uint64_t a1)
{
  unint64_t result = sub_1C00B7C00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C00B7C00()
{
  unint64_t result = qword_1EA196760;
  if (!qword_1EA196760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196760);
  }
  return result;
}

uint64_t sub_1C00B7C54()
{
  return sub_1C00B7D5C((unint64_t *)&qword_1EB87A038);
}

unint64_t sub_1C00B7C94()
{
  unint64_t result = qword_1EB85C4A8;
  if (!qword_1EB85C4A8)
  {
    sub_1C00BC6D4(255, &qword_1EB879F70, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C4A8);
  }
  return result;
}

uint64_t sub_1C00B7D20()
{
  return sub_1C00B7D5C(&qword_1EB85C4F8);
}

uint64_t sub_1C00B7D5C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFFC06A0(255, (unint64_t *)&qword_1EB87A030, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB560], MEMORY[0x1E4FBB510]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingAllColumnsStrategy()
{
  return &type metadata for FormatCodingAllColumnsStrategy;
}

uint64_t sub_1C00B7DF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  sub_1BFF7BD20(0, &qword_1EB87A350, (void (*)(void))sub_1BFDFD140);
  uint64_t v3 = sub_1C15200AC();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v22 = v1;
  uint64_t v23 = a1 + 32;
  do
  {
    int v6 = *(unsigned __int8 *)(v23 + v4++);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1C1520E0C();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0xE300000000000000;
        uint64_t v14 = 7368564;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x676E696461656CLL;
            break;
          case 2:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v14 = 0x676E696C69617274;
            break;
          case 3:
            unint64_t v13 = 0xE600000000000000;
            uint64_t v14 = 0x6D6F74746F62;
            break;
          case 4:
            uint64_t v14 = 7105633;
            break;
          default:
            break;
        }
        unint64_t v15 = 0xE300000000000000;
        uint64_t v16 = 7368564;
        switch(v6)
        {
          case 1:
            unint64_t v15 = 0xE700000000000000;
            if (v14 == 0x676E696461656CLL) {
              goto LABEL_18;
            }
            goto LABEL_19;
          case 2:
            unint64_t v15 = 0xE800000000000000;
            if (v14 != 0x676E696C69617274) {
              goto LABEL_19;
            }
            goto LABEL_18;
          case 3:
            unint64_t v15 = 0xE600000000000000;
            uint64_t v16 = 0x6D6F74746F62;
            goto LABEL_17;
          case 4:
            if (v14 != 7105633) {
              goto LABEL_19;
            }
            goto LABEL_18;
          default:
LABEL_17:
            if (v14 != v16) {
              goto LABEL_19;
            }
LABEL_18:
            if (v13 == v15)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_19:
            char v17 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_24;
            }
            break;
        }
      }
    }
LABEL_24:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v18 = *(void *)(v3 + 16);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
      JUMPOUT(0x1C00B812CLL);
    }
    *(void *)(v3 + 16) = v20;
LABEL_4:
    ;
  }
  while (v4 != v22);
  return v3;
}

void sub_1C00B8168(unint64_t a1)
{
}

uint64_t sub_1C00B818C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1BFFC06A0(0, &qword_1EB87A370, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB9A8]);
    uint64_t v3 = sub_1C15200AC();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      int v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1C1520DBC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1C1520A9C(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          BOOL v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1C1520A9C();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C00B8358(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1BFF7BD20(0, &qword_1EA196830, (void (*)(void))sub_1C00BB650);
    uint64_t v3 = sub_1C15200AC();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v24 = v1;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      int v6 = *(unsigned __int8 *)(v25 + v4);
      sub_1C1520DBC();
      if (v6) {
        uint64_t v7 = 0x70616373646E616CLL;
      }
      else {
        uint64_t v7 = 0x7469617274726F70;
      }
      if (v6) {
        unint64_t v8 = 0xE900000000000065;
      }
      else {
        unint64_t v8 = 0xE800000000000000;
      }
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C1520E0C();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        char v23 = v6;
        uint64_t v15 = ~v10;
        do
        {
          if (*(unsigned char *)(*(void *)(v3 + 48) + v11)) {
            uint64_t v16 = 0x70616373646E616CLL;
          }
          else {
            uint64_t v16 = 0x7469617274726F70;
          }
          if (*(unsigned char *)(*(void *)(v3 + 48) + v11)) {
            unint64_t v17 = 0xE900000000000065;
          }
          else {
            unint64_t v17 = 0xE800000000000000;
          }
          if (v16 == v7 && v17 == v8)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_4;
          }
          char v19 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_4;
          }
          unint64_t v11 = (v11 + 1) & v15;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
        }
        while ((v13 & (1 << v11)) != 0);
        LOBYTE(v6) = v23;
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(unsigned char *)(*(void *)(v3 + 48) + v11) = v6;
      uint64_t v20 = *(void *)(v3 + 16);
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        break;
      }
      *(void *)(v3 + 16) = v22;
LABEL_4:
      if (++v4 == v24) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC870];
  }
  return result;
}

uint64_t sub_1C00B857C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  sub_1BFF7BD20(0, &qword_1EB87A358, (void (*)(void))sub_1C007E638);
  uint64_t v3 = sub_1C15200AC();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v22 = v1;
  uint64_t v23 = a1 + 32;
  do
  {
    int v6 = *(unsigned __int8 *)(v23 + v4++);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1C1520E0C();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0xE700000000000000;
        uint64_t v14 = 0x6E61656C6F6F62;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            unint64_t v13 = 0xE400000000000000;
            uint64_t v14 = 1702125924;
            break;
          case 2:
            unint64_t v13 = 0xE400000000000000;
            uint64_t v14 = 1836412517;
            break;
          case 3:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v14 = 0x74616F6C66;
            break;
          case 4:
            uint64_t v14 = 0x72656765746E69;
            break;
          case 5:
            unint64_t v13 = 0xE600000000000000;
            uint64_t v14 = 0x676E69727473;
            break;
          case 6:
            unint64_t v13 = 0xE300000000000000;
            uint64_t v14 = 7107189;
            break;
          case 7:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v14 = 0x726F6C6F63;
            break;
          case 8:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v14 = 0x6567616D69;
            break;
          case 9:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v14 = 0x6F65646976;
            break;
          case 0xA:
            unint64_t v13 = 0xE400000000000000;
            uint64_t v14 = 1953394534;
            break;
          case 0xB:
            uint64_t v14 = 0x616C506F65646976;
            unint64_t v13 = 0xEB00000000726579;
            break;
          default:
            break;
        }
        unint64_t v15 = 0xE700000000000000;
        uint64_t v16 = 0x6E61656C6F6F62;
        switch(v6)
        {
          case 1:
            unint64_t v15 = 0xE400000000000000;
            if (v14 == 1702125924) {
              goto LABEL_39;
            }
            goto LABEL_40;
          case 2:
            unint64_t v15 = 0xE400000000000000;
            if (v14 != 1836412517) {
              goto LABEL_40;
            }
            goto LABEL_39;
          case 3:
            unint64_t v15 = 0xE500000000000000;
            if (v14 != 0x74616F6C66) {
              goto LABEL_40;
            }
            goto LABEL_39;
          case 4:
            if (v14 != 0x72656765746E69) {
              goto LABEL_40;
            }
            goto LABEL_39;
          case 5:
            unint64_t v15 = 0xE600000000000000;
            if (v14 != 0x676E69727473) {
              goto LABEL_40;
            }
            goto LABEL_39;
          case 6:
            unint64_t v15 = 0xE300000000000000;
            if (v14 != 7107189) {
              goto LABEL_40;
            }
            goto LABEL_39;
          case 7:
            unint64_t v15 = 0xE500000000000000;
            if (v14 != 0x726F6C6F63) {
              goto LABEL_40;
            }
            goto LABEL_39;
          case 8:
            unint64_t v15 = 0xE500000000000000;
            if (v14 != 0x6567616D69) {
              goto LABEL_40;
            }
            goto LABEL_39;
          case 9:
            unint64_t v15 = 0xE500000000000000;
            if (v14 != 0x6F65646976) {
              goto LABEL_40;
            }
            goto LABEL_39;
          case 10:
            unint64_t v15 = 0xE400000000000000;
            uint64_t v16 = 1953394534;
            goto LABEL_38;
          case 11:
            unint64_t v15 = 0xEB00000000726579;
            if (v14 != 0x616C506F65646976) {
              goto LABEL_40;
            }
            goto LABEL_39;
          default:
LABEL_38:
            if (v14 != v16) {
              goto LABEL_40;
            }
LABEL_39:
            if (v13 == v15)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_40:
            char v17 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_45;
            }
            break;
        }
      }
    }
LABEL_45:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v18 = *(void *)(v3 + 16);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
      JUMPOUT(0x1C00B8A98);
    }
    *(void *)(v3 + 16) = v20;
LABEL_4:
    ;
  }
  while (v4 != v22);
  return v3;
}

uint64_t sub_1C00B8B28(uint64_t a1)
{
  return sub_1C00B9714(a1, &qword_1EB880DE8, (void (*)(void))sub_1C00BC5FC);
}

uint64_t sub_1C00B8B50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1BFFC06A0(0, &qword_1EB863410, MEMORY[0x1E4FBC6E0], MEMORY[0x1E4FBC6E8], MEMORY[0x1E4FBB9A8]);
    uint64_t v3 = sub_1C15200AC();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(_DWORD *)(v6 + 4 * v4);
      sub_1C1520DBC();
      sub_1C1520DEC();
      uint64_t result = sub_1C1520E0C();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_DWORD *)(v14 + 4 * v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(_DWORD *)(v14 + 4 * v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(_DWORD *)(v14 + 4 * v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C00B8CBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1BFF7BD20(0, (unint64_t *)&unk_1EB8902A8, (void (*)(void))sub_1C0081EF8);
    uint64_t v3 = sub_1C15200AC();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v27 = v1;
    uint64_t v28 = a1 + 32;
LABEL_6:
    uint64_t v8 = (uint64_t *)(v28 + 16 * v4);
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    sub_1C1520DBC();
    switch(v10)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
      case 8uLL:
      case 9uLL:
      case 0xAuLL:
      case 0xBuLL:
      case 0xCuLL:
      case 0xDuLL:
      case 0xEuLL:
        sub_1C1520DCC();
        break;
      default:
        sub_1C1520DCC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        break;
    }
    uint64_t v11 = sub_1C1520E0C();
    uint64_t v12 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v13 = v11 & v12;
    unint64_t v14 = (v11 & (unint64_t)v12) >> 6;
    uint64_t v15 = *(void *)(v5 + 8 * v14);
    uint64_t v16 = 1 << (v11 & v12);
    if ((v16 & v15) == 0) {
      goto LABEL_50;
    }
    while (1)
    {
      BOOL v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v13);
      uint64_t v18 = *v17;
      unint64_t v19 = v17[1];
      switch(v19)
      {
        case 0uLL:
          if (v10) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 0);
          uint64_t v6 = v9;
          unint64_t v7 = 0;
          goto LABEL_4;
        case 1uLL:
          if (v10 != 1) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 1uLL);
          uint64_t v6 = v9;
          unint64_t v7 = 1;
          goto LABEL_4;
        case 2uLL:
          if (v10 != 2) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 2uLL);
          uint64_t v6 = v9;
          unint64_t v7 = 2;
          goto LABEL_4;
        case 3uLL:
          if (v10 != 3) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 3uLL);
          uint64_t v6 = v9;
          unint64_t v7 = 3;
          goto LABEL_4;
        case 4uLL:
          if (v10 != 4) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 4uLL);
          uint64_t v6 = v9;
          unint64_t v7 = 4;
          goto LABEL_4;
        case 5uLL:
          if (v10 != 5) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 5uLL);
          uint64_t v6 = v9;
          unint64_t v7 = 5;
          goto LABEL_4;
        case 6uLL:
          if (v10 != 6) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 6uLL);
          uint64_t v6 = v9;
          unint64_t v7 = 6;
          goto LABEL_4;
        case 7uLL:
          if (v10 != 7) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 7uLL);
          uint64_t v6 = v9;
          unint64_t v7 = 7;
          goto LABEL_4;
        case 8uLL:
          if (v10 != 8) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 8uLL);
          uint64_t v6 = v9;
          unint64_t v7 = 8;
          goto LABEL_4;
        case 9uLL:
          if (v10 != 9) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 9uLL);
          uint64_t v6 = v9;
          unint64_t v7 = 9;
          goto LABEL_4;
        case 0xAuLL:
          if (v10 != 10) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 0xAuLL);
          uint64_t v6 = v9;
          unint64_t v7 = 10;
          goto LABEL_4;
        case 0xBuLL:
          if (v10 != 11) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 0xBuLL);
          uint64_t v6 = v9;
          unint64_t v7 = 11;
          goto LABEL_4;
        case 0xCuLL:
          if (v10 != 12) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 0xCuLL);
          uint64_t v6 = v9;
          unint64_t v7 = 12;
          goto LABEL_4;
        case 0xDuLL:
          if (v10 != 13) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 0xDuLL);
          uint64_t v6 = v9;
          unint64_t v7 = 13;
          goto LABEL_4;
        case 0xEuLL:
          if (v10 != 14) {
            goto LABEL_47;
          }
          sub_1BFF8F648(*v17, 0xEuLL);
          uint64_t v6 = v9;
          unint64_t v7 = 14;
          goto LABEL_4;
        default:
          if (v10 < 0xF)
          {
LABEL_47:
            sub_1BFE74E64(v9, v10);
            sub_1BFE74E64(v18, v19);
            sub_1BFF8F648(v18, v19);
            sub_1BFF8F648(v9, v10);
          }
          else
          {
            if (v18 == v9 && v19 == v10)
            {
              sub_1BFE74E64(v9, v10);
              sub_1BFE74E64(v9, v10);
              sub_1BFF8F648(v9, v10);
              sub_1BFF8F648(v9, v10);
LABEL_53:
              uint64_t v6 = v9;
              unint64_t v7 = v10;
LABEL_4:
              sub_1BFF8F648(v6, v7);
              uint64_t v1 = v27;
LABEL_5:
              if (++v4 == v1) {
                return v3;
              }
              goto LABEL_6;
            }
            char v21 = sub_1C1520A9C();
            sub_1BFE74E64(v9, v10);
            sub_1BFE74E64(v18, v19);
            sub_1BFF8F648(v18, v19);
            sub_1BFF8F648(v9, v10);
            if (v21) {
              goto LABEL_53;
            }
          }
          unint64_t v13 = (v13 + 1) & v12;
          unint64_t v14 = v13 >> 6;
          uint64_t v15 = *(void *)(v5 + 8 * (v13 >> 6));
          uint64_t v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
          {
            uint64_t v1 = v27;
LABEL_50:
            *(void *)(v5 + 8 * v14) = v16 | v15;
            uint64_t v22 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v13);
            *uint64_t v22 = v9;
            v22[1] = v10;
            uint64_t v23 = *(void *)(v3 + 16);
            BOOL v24 = __OFADD__(v23, 1);
            uint64_t v25 = v23 + 1;
            if (v24)
            {
              __break(1u);
              JUMPOUT(0x1C00B923CLL);
            }
            *(void *)(v3 + 16) = v25;
            goto LABEL_5;
          }
          break;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C00B92B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  sub_1BFF7BD20(0, (unint64_t *)&unk_1EB87A360, (void (*)(void))sub_1C006A604);
  uint64_t v3 = sub_1C15200AC();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v22 = v1;
  uint64_t v23 = a1 + 32;
  do
  {
    int v6 = *(unsigned __int8 *)(v23 + v4++);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1C1520E0C();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0xE800000000000000;
        uint64_t v14 = 0x746E656964617267;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            uint64_t v14 = 0x72476C6169646172;
            unint64_t v13 = 0xEE00746E65696461;
            break;
          case 2:
            uint64_t v14 = 0x65695674696C7073;
            unint64_t v13 = 0xE900000000000077;
            break;
          case 3:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v14 = 0x6567616D69;
            break;
          case 4:
            unint64_t v13 = 0xE400000000000000;
            uint64_t v14 = 1633905005;
            break;
          case 5:
            uint64_t v14 = 0x66456C6175736976;
            unint64_t v13 = 0xEC00000074636566;
            break;
          default:
            break;
        }
        unint64_t v15 = 0xE800000000000000;
        uint64_t v16 = 0x746E656964617267;
        switch(v6)
        {
          case 1:
            unint64_t v15 = 0xEE00746E65696461;
            if (v14 == 0x72476C6169646172) {
              goto LABEL_21;
            }
            goto LABEL_22;
          case 2:
            unint64_t v15 = 0xE900000000000077;
            if (v14 != 0x65695674696C7073) {
              goto LABEL_22;
            }
            goto LABEL_21;
          case 3:
            unint64_t v15 = 0xE500000000000000;
            if (v14 != 0x6567616D69) {
              goto LABEL_22;
            }
            goto LABEL_21;
          case 4:
            unint64_t v15 = 0xE400000000000000;
            uint64_t v16 = 1633905005;
            goto LABEL_20;
          case 5:
            unint64_t v15 = 0xEC00000074636566;
            if (v14 != 0x66456C6175736976) {
              goto LABEL_22;
            }
            goto LABEL_21;
          default:
LABEL_20:
            if (v14 != v16) {
              goto LABEL_22;
            }
LABEL_21:
            if (v13 == v15)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_22:
            char v17 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_27;
            }
            break;
        }
      }
    }
LABEL_27:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v18 = *(void *)(v3 + 16);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
      JUMPOUT(0x1C00B96A4);
    }
    *(void *)(v3 + 16) = v20;
LABEL_4:
    ;
  }
  while (v4 != v22);
  return v3;
}

uint64_t sub_1C00B96EC(uint64_t a1)
{
  return sub_1C00B9714(a1, &qword_1EB85E018, (void (*)(void))sub_1C008BA08);
}

uint64_t sub_1C00B9714(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_1BFF7BD20(0, a2, a3);
    uint64_t v5 = sub_1C15200AC();
    uint64_t v6 = 0;
    uint64_t v7 = v5 + 56;
    uint64_t v8 = a1 + 32;
    while (1)
    {
      int v9 = *(unsigned __int8 *)(v8 + v6);
      sub_1C1520DBC();
      sub_1C1520DCC();
      uint64_t result = sub_1C1520E0C();
      uint64_t v11 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v12 = result & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = *(void *)(v7 + 8 * (v12 >> 6));
      uint64_t v15 = 1 << v12;
      uint64_t v16 = *(void *)(v5 + 48);
      if (((1 << v12) & v14) != 0)
      {
        if (*(unsigned __int8 *)(v16 + v12) == v9) {
          goto LABEL_3;
        }
        uint64_t v17 = ~v11;
        while (1)
        {
          unint64_t v12 = (v12 + 1) & v17;
          unint64_t v13 = v12 >> 6;
          uint64_t v14 = *(void *)(v7 + 8 * (v12 >> 6));
          uint64_t v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v16 + v12) == v9) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v7 + 8 * v13) = v15 | v14;
      *(unsigned char *)(v16 + v12) = v9;
      uint64_t v18 = *(void *)(v5 + 16);
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19)
      {
        __break(1u);
        return result;
      }
      *(void *)(v5 + 16) = v20;
LABEL_3:
      if (++v6 == v3) {
        return v5;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C00B9854(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  sub_1BFF7BD20(0, &qword_1EB85E010, (void (*)(void))sub_1C00BC560);
  uint64_t v3 = sub_1C15200AC();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v23 = v1;
  uint64_t v24 = a1 + 32;
  do
  {
    int v6 = *(unsigned __int8 *)(v24 + v4++);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1C1520E0C();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0xE600000000000000;
        uint64_t v14 = 0x657669746361;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            unint64_t v13 = 0xE400000000000000;
            uint64_t v14 = 1852138867;
            break;
          case 2:
            uint64_t v14 = 0x6E657A6F7266;
            break;
          case 3:
            uint64_t v14 = 0x656546664F646E65;
            unint64_t v13 = 0xE900000000000064;
            break;
          case 4:
            uint64_t v14 = 0x646568636163;
            break;
          case 5:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v15 = 0x6C6F6F706572;
            goto LABEL_13;
          case 6:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v15 = 0x646E61707865;
LABEL_13:
            uint64_t v14 = v15 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
            break;
          default:
            break;
        }
        unint64_t v16 = 0xE600000000000000;
        uint64_t v17 = 0x657669746361;
        switch(v6)
        {
          case 1:
            unint64_t v16 = 0xE400000000000000;
            if (v14 == 1852138867) {
              goto LABEL_25;
            }
            goto LABEL_26;
          case 2:
            if (v14 != 0x6E657A6F7266) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 3:
            unint64_t v16 = 0xE900000000000064;
            if (v14 != 0x656546664F646E65) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 4:
            if (v14 != 0x646568636163) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 5:
            unint64_t v16 = 0xE800000000000000;
            uint64_t v17 = 0x64656C6F6F706572;
            goto LABEL_24;
          case 6:
            unint64_t v16 = 0xE800000000000000;
            if (v14 != 0x6465646E61707865) {
              goto LABEL_26;
            }
            goto LABEL_25;
          default:
LABEL_24:
            if (v14 != v17) {
              goto LABEL_26;
            }
LABEL_25:
            if (v13 == v16)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_26:
            char v18 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v18) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_31;
            }
            break;
        }
      }
    }
LABEL_31:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v19 = *(void *)(v3 + 16);
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
      JUMPOUT(0x1C00B9C20);
    }
    *(void *)(v3 + 16) = v21;
LABEL_4:
    ;
  }
  while (v4 != v23);
  return v3;
}

uint64_t sub_1C00B9C74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1BFF7BD20(0, &qword_1EA1967D0, (void (*)(void))sub_1C00BB348);
    uint64_t v3 = sub_1C15200AC();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v36 = v1;
    uint64_t v37 = a1 + 32;
    uint64_t v38 = v3;
    while (1)
    {
      uint64_t v9 = v37 + 24 * v4;
      uint64_t v11 = *(void *)v9;
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t v12 = *(unsigned __int8 *)(v9 + 16);
      sub_1C1520DBC();
      uint64_t v39 = v4 + 1;
      switch(v12)
      {
        case 5:
          sub_1C1520DCC();
          break;
        default:
          sub_1C1520DCC();
          swift_bridgeObjectRetain();
          sub_1C151E77C();
          break;
      }
      uint64_t v13 = sub_1C1520E0C();
      uint64_t v14 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      uint64_t v17 = *(void *)(v5 + 8 * (v15 >> 6));
      uint64_t v18 = 1 << v15;
      uint64_t v19 = *(void *)(v3 + 48);
      if (((1 << v15) & v17) == 0) {
        goto LABEL_54;
      }
      uint64_t v20 = ~v14;
      BOOL v22 = v12 == 5 && (v10 | v11) == 0;
      while (2)
      {
        uint64_t v23 = (uint64_t *)(v19 + 24 * v15);
        uint64_t v24 = *v23;
        uint64_t v25 = v23[1];
        switch(*((unsigned char *)v23 + 16))
        {
          case 1:
            if (v12 != 1) {
              goto LABEL_16;
            }
            BOOL v27 = v24 == v11 && v25 == v10;
            if (!v27 && (sub_1C1520A9C() & 1) == 0) {
              goto LABEL_16;
            }
            uint64_t v6 = v11;
            uint64_t v7 = v10;
            unsigned __int8 v8 = 1;
            goto LABEL_4;
          case 2:
            if (v12 != 2) {
              goto LABEL_16;
            }
            BOOL v28 = v24 == v11 && v25 == v10;
            if (!v28 && (sub_1C1520A9C() & 1) == 0) {
              goto LABEL_16;
            }
            uint64_t v6 = v11;
            uint64_t v7 = v10;
            unsigned __int8 v8 = 2;
            goto LABEL_4;
          case 3:
            if (v12 != 3) {
              goto LABEL_16;
            }
            BOOL v29 = v24 == v11 && v25 == v10;
            if (!v29 && (sub_1C1520A9C() & 1) == 0) {
              goto LABEL_16;
            }
            uint64_t v6 = v11;
            uint64_t v7 = v10;
            unsigned __int8 v8 = 3;
            goto LABEL_4;
          case 4:
            if (v12 != 4) {
              goto LABEL_16;
            }
            BOOL v30 = v24 == v11 && v25 == v10;
            if (!v30 && (sub_1C1520A9C() & 1) == 0) {
              goto LABEL_16;
            }
            uint64_t v6 = v11;
            uint64_t v7 = v10;
            unsigned __int8 v8 = 4;
            goto LABEL_4;
          case 5:
            if (!v22) {
              goto LABEL_16;
            }
            goto LABEL_5;
          default:
            if (v12 || (v24 == v11 ? (BOOL v26 = v25 == v10) : (BOOL v26 = 0), !v26 && (sub_1C1520A9C() & 1) == 0))
            {
LABEL_16:
              unint64_t v15 = (v15 + 1) & v20;
              unint64_t v16 = v15 >> 6;
              uint64_t v17 = *(void *)(v5 + 8 * (v15 >> 6));
              uint64_t v18 = 1 << v15;
              if ((v17 & (1 << v15)) == 0)
              {
                uint64_t v3 = v38;
                uint64_t v19 = *(void *)(v38 + 48);
LABEL_54:
                *(void *)(v5 + 8 * v16) = v18 | v17;
                uint64_t v31 = v19 + 24 * v15;
                *(void *)uint64_t v31 = v11;
                *(void *)(v31 + 8) = v10;
                *(unsigned char *)(v31 + 16) = v12;
                uint64_t v32 = *(void *)(v3 + 16);
                BOOL v33 = __OFADD__(v32, 1);
                uint64_t v34 = v32 + 1;
                if (v33)
                {
                  __break(1u);
                  JUMPOUT(0x1C00B9FD4);
                }
                *(void *)(v3 + 16) = v34;
                goto LABEL_5;
              }
              continue;
            }
            uint64_t v6 = v11;
            uint64_t v7 = v10;
            unsigned __int8 v8 = 0;
LABEL_4:
            sub_1C00BB39C(v6, v7, v8);
LABEL_5:
            uint64_t v3 = v38;
            uint64_t v4 = v39;
            if (v39 == v36) {
              return v3;
            }
            break;
        }
        break;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C00BA004(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  sub_1BFF7BD20(0, (unint64_t *)&unk_1EB8902B8, (void (*)(void))sub_1C007733C);
  uint64_t v3 = sub_1C15200AC();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v25 = v1;
  uint64_t v26 = a1 + 32;
  do
  {
    int v6 = *(unsigned __int8 *)(v26 + v4);
    uint64_t v27 = v4 + 1;
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1C1520E0C();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0xD000000000000012;
        unint64_t v14 = 0x80000001C1600030;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            unint64_t v13 = 0x656C626978656C66;
            unint64_t v14 = 0xED00006874646957;
            break;
          case 2:
            unint64_t v13 = 0xD000000000000013;
            unint64_t v15 = "in";
            goto LABEL_12;
          case 3:
            unint64_t v14 = 0x80000001C1600080;
            unint64_t v13 = 0xD000000000000011;
            break;
          case 4:
            unint64_t v13 = 0x656C626978656C66;
            unint64_t v14 = 0xEE00746867696548;
            break;
          case 5:
            unint64_t v13 = 0xD000000000000014;
            unint64_t v15 = "n";
LABEL_12:
            unint64_t v14 = (unint64_t)v15 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v16 = 0xD000000000000012;
        unint64_t v17 = 0x80000001C1600030;
        switch(v6)
        {
          case 1:
            unint64_t v17 = 0xED00006874646957;
            if (v13 == 0x656C626978656C66) {
              goto LABEL_24;
            }
            goto LABEL_25;
          case 2:
            unint64_t v18 = 0xD000000000000013;
            uint64_t v19 = "in";
            goto LABEL_23;
          case 3:
            unint64_t v17 = 0x80000001C1600080;
            if (v13 != 0xD000000000000011) {
              goto LABEL_25;
            }
            goto LABEL_24;
          case 4:
            unint64_t v16 = 0x656C626978656C66;
            unint64_t v17 = 0xEE00746867696548;
            goto LABEL_20;
          case 5:
            unint64_t v18 = 0xD000000000000014;
            uint64_t v19 = "n";
LABEL_23:
            unint64_t v17 = (unint64_t)v19 | 0x8000000000000000;
            if (v13 == v18) {
              goto LABEL_24;
            }
            goto LABEL_25;
          default:
LABEL_20:
            if (v13 != v16) {
              goto LABEL_25;
            }
LABEL_24:
            if (v14 == v17)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_25:
            char v20 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v20) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_27;
            }
            break;
        }
      }
    }
LABEL_27:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v21 = *(void *)(v3 + 16);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
      JUMPOUT(0x1C00BA3ECLL);
    }
    *(void *)(v3 + 16) = v23;
LABEL_4:
    uint64_t v4 = v27;
  }
  while (v27 != v25);
  return v3;
}

uint64_t sub_1C00BA434(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  sub_1BFF7BD20(0, &qword_1EA196900, (void (*)(void))sub_1C00BC488);
  uint64_t v3 = sub_1C15200AC();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v22 = v1;
  uint64_t v23 = a1 + 32;
  do
  {
    int v6 = *(unsigned __int8 *)(v23 + v4++);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1C1520E0C();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0xE700000000000000;
        uint64_t v14 = 0x736E6F6974706FLL;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            uint64_t v14 = 0x40736E6F6974706FLL;
            unint64_t v13 = 0xEC000000646E6962;
            break;
          case 2:
            uint64_t v14 = 0x40736E6F6974706FLL;
            unint64_t v13 = 0xEE0074756F79616CLL;
            break;
          case 3:
            unint64_t v13 = 0xE600000000000000;
            uint64_t v14 = 0x726F73727563;
            break;
          case 4:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v14 = 0x6574616C706D6574;
            break;
          case 5:
            uint64_t v14 = 0x747865746E6F63;
            break;
          case 6:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v14 = 0x73676E69646E6962;
            break;
          case 7:
            unint64_t v13 = 0xE300000000000000;
            uint64_t v14 = 7105633;
            break;
          default:
            break;
        }
        unint64_t v15 = 0xE700000000000000;
        uint64_t v16 = 0x736E6F6974706FLL;
        switch(v6)
        {
          case 1:
            unint64_t v15 = 0xEC000000646E6962;
            if (v14 == 0x40736E6F6974706FLL) {
              goto LABEL_27;
            }
            goto LABEL_28;
          case 2:
            unint64_t v15 = 0xEE0074756F79616CLL;
            if (v14 != 0x40736E6F6974706FLL) {
              goto LABEL_28;
            }
            goto LABEL_27;
          case 3:
            unint64_t v15 = 0xE600000000000000;
            if (v14 != 0x726F73727563) {
              goto LABEL_28;
            }
            goto LABEL_27;
          case 4:
            unint64_t v15 = 0xE800000000000000;
            if (v14 != 0x6574616C706D6574) {
              goto LABEL_28;
            }
            goto LABEL_27;
          case 5:
            if (v14 != 0x747865746E6F63) {
              goto LABEL_28;
            }
            goto LABEL_27;
          case 6:
            unint64_t v15 = 0xE800000000000000;
            uint64_t v16 = 0x73676E69646E6962;
            goto LABEL_26;
          case 7:
            unint64_t v15 = 0xE300000000000000;
            if (v14 != 7105633) {
              goto LABEL_28;
            }
            goto LABEL_27;
          default:
LABEL_26:
            if (v14 != v16) {
              goto LABEL_28;
            }
LABEL_27:
            if (v13 == v15)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_28:
            char v17 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_33;
            }
            break;
        }
      }
    }
LABEL_33:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v18 = *(void *)(v3 + 16);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
      JUMPOUT(0x1C00BA8ACLL);
    }
    *(void *)(v3 + 16) = v20;
LABEL_4:
    ;
  }
  while (v4 != v22);
  return v3;
}

uint64_t sub_1C00BA90C(uint64_t a1)
{
  return sub_1C00B9714(a1, &qword_1EA1967A0, (void (*)(void))sub_1C00BB1BC);
}

uint64_t sub_1C00BA934(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  sub_1BFF7BD20(0, &qword_1EB8902C8, (void (*)(void))sub_1C00699E0);
  uint64_t v3 = sub_1C15200AC();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v22 = v1;
  uint64_t v23 = a1 + 32;
  do
  {
    int v6 = *(unsigned __int8 *)(v23 + v4);
    sub_1C1520DBC();
    sub_1C1520DCC();
    if (v6 != 12)
    {
      sub_1C151E77C();
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = sub_1C1520E0C();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x6E61656C6F6F62;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 0:
            break;
          case 1:
            unint64_t v16 = 0xE400000000000000;
            uint64_t v17 = 1702125924;
            break;
          case 2:
            unint64_t v16 = 0xE400000000000000;
            uint64_t v17 = 1836412517;
            break;
          case 3:
            unint64_t v16 = 0xE500000000000000;
            uint64_t v17 = 0x74616F6C66;
            break;
          case 4:
            uint64_t v17 = 0x72656765746E69;
            break;
          case 5:
            unint64_t v16 = 0xE600000000000000;
            uint64_t v17 = 0x676E69727473;
            break;
          case 6:
            unint64_t v16 = 0xE300000000000000;
            uint64_t v17 = 7107189;
            break;
          case 7:
            unint64_t v16 = 0xE500000000000000;
            uint64_t v17 = 0x726F6C6F63;
            break;
          case 8:
            unint64_t v16 = 0xE500000000000000;
            uint64_t v17 = 0x6567616D69;
            break;
          case 9:
            unint64_t v16 = 0xE500000000000000;
            uint64_t v17 = 0x6F65646976;
            break;
          case 0xA:
            unint64_t v16 = 0xE400000000000000;
            uint64_t v17 = 1953394534;
            break;
          case 0xB:
            uint64_t v17 = 0x616C506F65646976;
            unint64_t v16 = 0xEB00000000726579;
            break;
          default:
            if (v6 != 12) {
              goto LABEL_11;
            }
            goto LABEL_4;
        }
        unint64_t v18 = 0xE700000000000000;
        uint64_t v19 = 0x6E61656C6F6F62;
        switch(v6)
        {
          case 0:
            goto LABEL_44;
          case 1:
            unint64_t v18 = 0xE400000000000000;
            if (v17 != 1702125924) {
              goto LABEL_46;
            }
            goto LABEL_45;
          case 2:
            unint64_t v18 = 0xE400000000000000;
            if (v17 != 1836412517) {
              goto LABEL_46;
            }
            goto LABEL_45;
          case 3:
            unint64_t v18 = 0xE500000000000000;
            if (v17 != 0x74616F6C66) {
              goto LABEL_46;
            }
            goto LABEL_45;
          case 4:
            if (v17 != 0x72656765746E69) {
              goto LABEL_46;
            }
            goto LABEL_45;
          case 5:
            unint64_t v18 = 0xE600000000000000;
            if (v17 != 0x676E69727473) {
              goto LABEL_46;
            }
            goto LABEL_45;
          case 6:
            unint64_t v18 = 0xE300000000000000;
            if (v17 != 7107189) {
              goto LABEL_46;
            }
            goto LABEL_45;
          case 7:
            unint64_t v18 = 0xE500000000000000;
            if (v17 != 0x726F6C6F63) {
              goto LABEL_46;
            }
            goto LABEL_45;
          case 8:
            unint64_t v18 = 0xE500000000000000;
            if (v17 != 0x6567616D69) {
              goto LABEL_46;
            }
            goto LABEL_45;
          case 9:
            unint64_t v18 = 0xE500000000000000;
            if (v17 != 0x6F65646976) {
              goto LABEL_46;
            }
            goto LABEL_45;
          case 10:
            unint64_t v18 = 0xE400000000000000;
            uint64_t v19 = 1953394534;
LABEL_44:
            if (v17 == v19) {
              goto LABEL_45;
            }
            goto LABEL_46;
          case 11:
            unint64_t v18 = 0xEB00000000726579;
            if (v17 != 0x616C506F65646976) {
              goto LABEL_46;
            }
LABEL_45:
            if (v16 == v18)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_46:
            char v20 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v20) {
              goto LABEL_4;
            }
LABEL_11:
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_8;
            }
            break;
          default:
            goto LABEL_11;
        }
      }
    }
LABEL_8:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v13 = *(void *)(v3 + 16);
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14)
    {
      __break(1u);
      JUMPOUT(0x1C00BAE88);
    }
    *(void *)(v3 + 16) = v15;
LABEL_4:
    ++v4;
  }
  while (v4 != v22);
  return v3;
}

uint64_t sub_1C00BAF18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1BFF7BD20(0, &qword_1EB8633F8, (void (*)(void))sub_1C00BB07C);
    uint64_t v3 = sub_1C15200AC();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(unsigned __int8 *)(v6 + v4);
      sub_1C1520DBC();
      sub_1C1520DCC();
      uint64_t result = sub_1C1520E0C();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (v7 == *(unsigned __int8 *)(v14 + v10)) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (v7 == *(unsigned __int8 *)(v14 + v10)) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

unint64_t sub_1C00BB07C()
{
  unint64_t result = qword_1EB862EC0;
  if (!qword_1EB862EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862EC0);
  }
  return result;
}

unint64_t sub_1C00BB0D0()
{
  unint64_t result = qword_1EA196780;
  if (!qword_1EA196780)
  {
    sub_1BFECEE20(255, (unint64_t *)&unk_1EB86B300, (uint64_t)&qword_1EB8901B0, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196780);
  }
  return result;
}

void sub_1C00BB154(uint64_t a1)
{
}

uint64_t sub_1C00BB188()
{
  return sub_1C00BC5B4(&qword_1EA196798, sub_1C00BB154);
}

unint64_t sub_1C00BB1BC()
{
  unint64_t result = qword_1EA1967A8;
  if (!qword_1EA1967A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1967A8);
  }
  return result;
}

uint64_t sub_1C00BB210(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C00BB278()
{
  if (!qword_1EB8704F0)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB872200);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8704F0);
    }
  }
}

void sub_1C00BB2E0(uint64_t a1)
{
}

uint64_t sub_1C00BB314()
{
  return sub_1C00BC5B4(&qword_1EA1967C8, sub_1C00BB2E0);
}

unint64_t sub_1C00BB348()
{
  unint64_t result = qword_1EA1AA8C0;
  if (!qword_1EA1AA8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AA8C0);
  }
  return result;
}

uint64_t sub_1C00BB39C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 4u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C00BB3B4()
{
  if (!qword_1EA1967E0)
  {
    type metadata accessor for AttributeName(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1967E0);
    }
  }
}

void sub_1C00BB424()
{
  if (!qword_1EA1967F0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1967F0);
    }
  }
}

void sub_1C00BB490()
{
  if (!qword_1EA196800)
  {
    type metadata accessor for FormatStateViewNodeStateDataLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA196800);
    }
  }
}

void sub_1C00BB4FC(uint64_t a1)
{
}

uint64_t sub_1C00BB530()
{
  return sub_1C00BC5B4(&qword_1EA196810, sub_1C00BB4FC);
}

void sub_1C00BB564(uint64_t a1)
{
}

uint64_t sub_1C00BB598()
{
  return sub_1C00BC5B4((unint64_t *)&unk_1EA196820, sub_1C00BB564);
}

unint64_t sub_1C00BB5CC()
{
  unint64_t result = qword_1EB85C4C8;
  if (!qword_1EB85C4C8)
  {
    sub_1BFECEE20(255, &qword_1EB85C4C0, (uint64_t)&qword_1EB87A140, 0x1E4F7E538, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C4C8);
  }
  return result;
}

unint64_t sub_1C00BB650()
{
  unint64_t result = qword_1EA196838;
  if (!qword_1EA196838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196838);
  }
  return result;
}

void sub_1C00BB6A4(uint64_t a1)
{
}

uint64_t sub_1C00BB6D8()
{
  return sub_1C00BC5B4((unint64_t *)&unk_1EA196848, sub_1C00BB6A4);
}

void sub_1C00BB70C(uint64_t a1)
{
}

uint64_t sub_1C00BB740()
{
  return sub_1C00BC5B4(&qword_1EA196860, sub_1C00BB70C);
}

unint64_t sub_1C00BB774()
{
  unint64_t result = qword_1EA196870;
  if (!qword_1EA196870)
  {
    sub_1BFECEE20(255, &qword_1EA196868, (uint64_t)&unk_1EB85DFF0, 0x1E4FB13B8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196870);
  }
  return result;
}

void sub_1C00BB7F8(uint64_t a1)
{
}

uint64_t sub_1C00BB82C()
{
  return sub_1C00BC5B4(&qword_1EA196880, sub_1C00BB7F8);
}

void sub_1C00BB860(uint64_t a1)
{
}

void sub_1C00BB894(uint64_t a1)
{
}

uint64_t sub_1C00BB8C8()
{
  return sub_1C00BC5B4(&qword_1EA1968A0, sub_1C00BB894);
}

uint64_t sub_1C00BB8FC(uint64_t a1)
{
  uint64_t v2 = sub_1C151D77C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1C00BC108();
    uint64_t v9 = sub_1C15200AC();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C00BC5B4((unint64_t *)&unk_1EA19C960, MEMORY[0x1E4F7ADE8]);
      uint64_t v16 = sub_1C151E47C();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C00BC5B4(&qword_1EA1968D0, MEMORY[0x1E4F7ADE8]);
          char v23 = sub_1C151E5CC();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void sub_1C00BBC10(unint64_t a1)
{
}

void sub_1C00BBC34(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  unint64_t v8 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_3:
      sub_1C00BBFA8(0, a2, a3, a4, a5);
      uint64_t v9 = sub_1C15200AC();
      uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
      if (!v8) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!v11) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v9 = MEMORY[0x1E4FBC870];
  uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return;
  }
LABEL_9:
  uint64_t v13 = v9 + 56;
  uint64_t v50 = v11;
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = 0;
    unint64_t v46 = v7;
    while (1)
    {
      uint64_t v15 = MEMORY[0x1C18C7CB0](v14, v7);
      BOOL v16 = __OFADD__(v14++, 1);
      if (v16)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v17 = v15;
      uint64_t v18 = sub_1C151FB5C();
      uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      uint64_t v22 = *(void *)(v13 + 8 * (v20 >> 6));
      uint64_t v23 = 1 << v20;
      if (((1 << v20) & v22) != 0)
      {
        sub_1BFC39268(0, a3);
        id v24 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
        char v25 = sub_1C151FB6C();

        if (v25)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v7 = v46;
          goto LABEL_12;
        }
        uint64_t v26 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v26;
          unint64_t v21 = v20 >> 6;
          uint64_t v22 = *(void *)(v13 + 8 * (v20 >> 6));
          uint64_t v23 = 1 << v20;
          if ((v22 & (1 << v20)) == 0) {
            break;
          }
          id v27 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
          char v28 = sub_1C151FB6C();

          if (v28) {
            goto LABEL_11;
          }
        }
        unint64_t v7 = v46;
      }
      *(void *)(v13 + 8 * v21) = v23 | v22;
      *(void *)(*(void *)(v9 + 48) + 8 * v20) = v17;
      uint64_t v29 = *(void *)(v9 + 16);
      BOOL v16 = __OFADD__(v29, 1);
      uint64_t v30 = v29 + 1;
      if (v16) {
        goto LABEL_38;
      }
      *(void *)(v9 + 16) = v30;
LABEL_12:
      if (v14 == v50) {
        return;
      }
    }
  }
  uint64_t v31 = 0;
  uint64_t v47 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v31 != v47)
  {
    id v32 = *(id *)(v7 + 32 + 8 * v31);
    uint64_t v33 = sub_1C151FB5C();
    uint64_t v34 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v35 = v33 & ~v34;
    unint64_t v36 = v35 >> 6;
    uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
    uint64_t v38 = 1 << v35;
    if (((1 << v35) & v37) != 0)
    {
      sub_1BFC39268(0, a3);
      id v39 = *(id *)(*(void *)(v9 + 48) + 8 * v35);
      char v40 = sub_1C151FB6C();

      if (v40) {
        goto LABEL_24;
      }
      uint64_t v41 = ~v34;
      unint64_t v35 = (v35 + 1) & v41;
      unint64_t v36 = v35 >> 6;
      uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
      uint64_t v38 = 1 << v35;
      if ((v37 & (1 << v35)) != 0)
      {
        while (1)
        {
          id v42 = *(id *)(*(void *)(v9 + 48) + 8 * v35);
          char v43 = sub_1C151FB6C();

          if (v43) {
            break;
          }
          unint64_t v35 = (v35 + 1) & v41;
          unint64_t v36 = v35 >> 6;
          uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
          uint64_t v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v11 = v50;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v11 = v50;
    }
    *(void *)(v13 + 8 * v36) = v38 | v37;
    *(void *)(*(void *)(v9 + 48) + 8 * v35) = v32;
    uint64_t v44 = *(void *)(v9 + 16);
    BOOL v16 = __OFADD__(v44, 1);
    uint64_t v45 = v44 + 1;
    if (v16) {
      goto LABEL_39;
    }
    *(void *)(v9 + 16) = v45;
LABEL_25:
    if (++v31 == v11) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_1C00BBFA8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1BFC39268(255, a3);
    sub_1C00BC034(a5, a3);
    unint64_t v8 = sub_1C15200BC();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C00BC034(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC39268(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C00BC084()
{
  unint64_t result = qword_1EB86B330;
  if (!qword_1EB86B330)
  {
    sub_1BFECEE20(255, (unint64_t *)&qword_1EB86B310, (uint64_t)&qword_1EB86B430, (uint64_t)&protocolRef_FCSportsProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B330);
  }
  return result;
}

void sub_1C00BC108()
{
  if (!qword_1EA1968C0)
  {
    sub_1C151D77C();
    sub_1C00BC5B4((unint64_t *)&unk_1EA19C960, MEMORY[0x1E4F7ADE8]);
    unint64_t v0 = sub_1C15200BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1968C0);
    }
  }
}

unint64_t sub_1C00BC19C()
{
  unint64_t result = qword_1EA1968D8;
  if (!qword_1EA1968D8)
  {
    sub_1BFECEE20(255, &qword_1EB86B340, (uint64_t)&qword_1EB890220, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1968D8);
  }
  return result;
}

void sub_1C00BC220(uint64_t a1)
{
}

uint64_t sub_1C00BC254()
{
  return sub_1C00BC5B4((unint64_t *)&unk_1EA1A3E10, sub_1C00BC220);
}

unint64_t sub_1C00BC288()
{
  unint64_t result = qword_1EA1968E8;
  if (!qword_1EA1968E8)
  {
    sub_1BFECEE20(255, (unint64_t *)&qword_1EB879F90, (uint64_t)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1968E8);
  }
  return result;
}

unint64_t sub_1C00BC30C()
{
  unint64_t result = qword_1EA1968F0;
  if (!qword_1EA1968F0)
  {
    sub_1BFECEE20(255, &qword_1EB87BD40, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1968F0);
  }
  return result;
}

void sub_1C00BC390(uint64_t a1)
{
}

void sub_1C00BC3C4(uint64_t a1)
{
}

uint64_t sub_1C00BC3F8()
{
  return sub_1C00BC5B4(&qword_1EB86AFD0, sub_1C00BC3C4);
}

uint64_t sub_1C00BC42C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatRegex();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C00BC488()
{
  unint64_t result = qword_1EA196908;
  if (!qword_1EA196908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196908);
  }
  return result;
}

unint64_t sub_1C00BC4DC()
{
  unint64_t result = qword_1EA196938;
  if (!qword_1EA196938)
  {
    sub_1BFECEE20(255, &qword_1EA196930, (uint64_t)&qword_1EB87A2D0, 0x1E4F39BE8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196938);
  }
  return result;
}

unint64_t sub_1C00BC560()
{
  unint64_t result = qword_1EB85C988;
  if (!qword_1EB85C988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C988);
  }
  return result;
}

uint64_t sub_1C00BC5B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C00BC5FC()
{
  unint64_t result = qword_1EB87C7C0;
  if (!qword_1EB87C7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87C7C0);
  }
  return result;
}

unint64_t sub_1C00BC650()
{
  unint64_t result = qword_1EA196948;
  if (!qword_1EA196948)
  {
    sub_1BFECEE20(255, (unint64_t *)&qword_1EB895E80, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196948);
  }
  return result;
}

void sub_1C00BC6D4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C00BC720(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C00BC78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151D6DC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeedSponsorshipBannerAd();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v8 + 20), v4);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v9 == *MEMORY[0x1E4F7ACE0])
  {
    uint64_t v10 = *(void *)(a2 + 160);
    if (!v10) {
      goto LABEL_8;
    }
    uint64_t v11 = *(void *)(v10 + 56);
LABEL_7:
    if ((~v11 & 0xF000000000000007) != 0)
    {
      v15[1] = v11;
      Class v13 = FormatColor.color.getter(v9);
      goto LABEL_10;
    }
LABEL_8:
    Class v13 = 0;
LABEL_10:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (uint64_t)v13;
  }
  if (v9 == *MEMORY[0x1E4F7ACD8])
  {
    uint64_t v12 = *(void *)(a2 + 160);
    if (!v12) {
      goto LABEL_8;
    }
    uint64_t v11 = *(void *)(v12 + 64);
    goto LABEL_7;
  }
  uint64_t result = sub_1C1520A8C();
  __break(1u);
  return result;
}

void sub_1C00BC91C(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1C151F8FC();
  uint64_t v6 = *(void *)(a1 + 160);
  if (v6) {
    uint64_t v7 = *(unsigned char *)(v6 + 72) & 1;
  }
  else {
    uint64_t v7 = 0;
  }
  objc_msgSend(a2, sel_setAccessibilityIgnoresInvertColors_, v7);
  uint64_t v8 = (void *)sub_1C00BC78C(a3, a1);
  objc_msgSend(a2, sel_setBackgroundColor_, v8);
  id v9 = objc_msgSend(a2, sel_subviews);
  sub_1C0063B40();
  unint64_t v10 = sub_1C151EBCC();

  if (v10 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C15204BC();
    if (v11)
    {
LABEL_6:
      uint64_t v12 = 4;
      while (1)
      {
        uint64_t v13 = v12 - 4;
        if ((v10 & 0xC000000000000001) != 0)
        {
          id v14 = (id)MEMORY[0x1C18C7CB0](v12 - 4, v10);
          BOOL v15 = __OFADD__(v13, 1);
          uint64_t v16 = v12 - 3;
          if (v15) {
            goto LABEL_33;
          }
        }
        else
        {
          id v14 = *(id *)(v10 + 8 * v12);
          BOOL v15 = __OFADD__(v13, 1);
          uint64_t v16 = v12 - 3;
          if (v15)
          {
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
        }
        id v25 = v14;
        swift_getObjectType();
        if (swift_conformsToProtocol2() ? v25 : 0) {
          break;
        }

        ++v12;
        if (v16 == v11) {
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease_n();
      type metadata accessor for FeedSponsorshipBannerAd();
      uint64_t v21 = sub_1C151D64C();
      if (v21)
      {
        uint64_t v22 = (void *)v21;
        objc_msgSend(v25, sel_removeFromSuperview);
        objc_msgSend(a2, sel_addSubview_, v22);
        sub_1C151F72C();
        sub_1C151F8FC();
        if (v6) {
          uint64_t v23 = *(unsigned char *)(v6 + 72) & 1;
        }
        else {
          uint64_t v23 = 0;
        }
        objc_msgSend(v22, sel_setAccessibilityIgnoresInvertColors_, v23);
        objc_msgSend(v22, sel_setBackgroundColor_, v8);
      }
      else
      {
        sub_1C151F72C();
        sub_1C151F8FC();
      }
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_6;
    }
  }
LABEL_17:
  swift_bridgeObjectRelease_n();
  type metadata accessor for FeedSponsorshipBannerAd();
  uint64_t v18 = sub_1C151D64C();
  if (!v18)
  {
    id v24 = v8;
    goto LABEL_30;
  }
  uint64_t v19 = (void *)v18;
  objc_msgSend(a2, sel_addSubview_, v18);
  sub_1C151F72C();
  sub_1C151F8FC();
  if (v6) {
    uint64_t v20 = *(unsigned char *)(v6 + 72) & 1;
  }
  else {
    uint64_t v20 = 0;
  }
  id v25 = v8;
  objc_msgSend(v19, sel_setAccessibilityIgnoresInvertColors_, v20);
  objc_msgSend(v19, sel_setBackgroundColor_, v8);
  uint64_t v8 = v19;
LABEL_29:

  id v24 = v25;
LABEL_30:
}

uint64_t sub_1C00BCC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FormatPluginData();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *a3 = 0x6D726177657250;
  a3[1] = 0xE700000000000000;
  uint64_t v32 = a1;
  uint64_t v33 = a3;
  sub_1BFC66384(a1, (uint64_t)(a3 + 2));
  sub_1BFE4597C();
  *uint64_t v12 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  LOBYTE(a3) = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (a3)
  {
    uint64_t v14 = type metadata accessor for FormatContent.Resolved();
    BOOL v15 = *(void **)(a2 + *(int *)(v14 + 32));
    if (v15[2])
    {
      uint64_t v17 = v15[12];
      uint64_t v16 = v15[13];
      v31[1] = v15[8] & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v29 = v17;
      uint64_t v30 = v16;
      sub_1BFEE0A78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v14 = swift_bridgeObjectRelease();
      if (*(void *)(v17 + 16))
      {
LABEL_4:
        MEMORY[0x1F4188790](v14);
        uint64_t v18 = v32;
        uint64_t v29 = a2;
        uint64_t v30 = v32;
        uint64_t v19 = sub_1C0181E68((void (*)(void *))sub_1C00BD3C0, (uint64_t)&v31[-4], v17);
        sub_1C00BE79C(a2, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
        __swift_destroy_boxed_opaque_existential_1(v18);
        uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
        v33[7] = v19;
        return result;
      }
    }
    else
    {
      uint64_t v17 = MEMORY[0x1E4FBC860];
      if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C004BD4C(0, &qword_1EB86BAA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSection, MEMORY[0x1E4FBBE00]);
    uint64_t v20 = (int *)(type metadata accessor for FormatSection() - 8);
    unint64_t v21 = (*(unsigned __int8 *)(*(void *)v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v20 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
    uint64_t v22 = v19 + v21;
    sub_1C00BD510(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C0BF0D2C(v23);
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_1C0BF0F6C(v24);
    uint64_t v26 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v26);
    uint64_t v27 = v32;
    uint64_t v29 = v32;
    uint64_t v30 = a2;
    uint64_t v28 = sub_1C1449B3C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C00BE7FC, (uint64_t)&v31[-4], v25);
    swift_bridgeObjectRelease();
    sub_1C00BD4AC((uint64_t)v8, v22);
    *(void *)(v22 + v20[7]) = v28;
    sub_1C00BE79C(a2, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(v27);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00BD0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v7 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for FormatPluginData();
  uint64_t v11 = (int *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = &v32[-v15];
  uint64_t v35 = *(void *)a1;
  long long v36 = *(_OWORD *)(a1 + 8);
  FormatContent.Resolved.convertSection(_:)(&v35, v9);
  sub_1C00BD510((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C00BD510(a2 + v11[7], (uint64_t)&v16[v11[7]], (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1C004BCB8(a2 + v11[8], (uint64_t)&v16[v11[8]]);
  uint64_t v17 = v11[10];
  uint64_t v18 = *(void **)(a2 + v17);
  char v19 = *(unsigned char *)(a2 + v11[9]);
  uint64_t v20 = *(void *)(a2 + v11[11]);
  unint64_t v21 = (uint64_t *)(a2 + v11[12]);
  uint64_t v22 = *v21;
  LOBYTE(v21) = *((unsigned char *)v21 + 8);
  char v23 = *(unsigned char *)(a2 + v11[13]);
  char v24 = *(unsigned char *)(a2 + v11[14]);
  *(void *)&v16[v17] = v18;
  v16[v11[9]] = v19;
  *(void *)&v16[v11[11]] = v20;
  uint64_t v25 = &v16[v11[12]];
  *(void *)uint64_t v25 = v22;
  v25[8] = (_BYTE)v21;
  v16[v11[13]] = v23;
  v16[v11[14]] = v24;
  swift_bridgeObjectRetain();
  id v26 = v18;
  swift_bridgeObjectRetain();
  sub_1C00BE79C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C00BD510((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C0BF0D2C(v27);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_1C0BF0F6C(v28);
  swift_bridgeObjectRelease();
  uint64_t v33 = v37;
  uint64_t v34 = v16;
  uint64_t v30 = sub_1C1449B3C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C00BD578, (uint64_t)v32, v29);
  swift_bridgeObjectRelease();
  sub_1C00BD4AC((uint64_t)v13, a4);
  *(void *)(a4 + *(int *)(type metadata accessor for FormatSection() + 20)) = v30;
  return sub_1C00BE79C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
}

uint64_t sub_1C00BD3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C00BD0E0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C00BD3E0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v7 = a2[3];
  unint64_t v8 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  uint64_t v9 = type metadata accessor for FormatPluginData();
  unint64_t v10 = (unint64_t)a3 + *(int *)(v9 + 20);
  unint64_t v11 = *a3;
  unint64_t v12 = a3[1];
  uint64_t v13 = (char *)a3 + *(int *)(v9 + 40);
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  uint64_t v17 = v14;
  char v18 = (char)v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C1009390(a1, v10, v11, v12, (uint64_t)&v17, v7, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v15;
  return result;
}

uint64_t sub_1C00BD4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPluginData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C00BD510(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C00BD578@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C00BD3E0(a1, *(void **)(v2 + 16), *(unint64_t **)(v2 + 24), a2);
}

uint64_t destroy for FormatPrewarmBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatPrewarmBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  unint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatPrewarmBlueprintModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        unint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for FormatPrewarmBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatPrewarmBlueprintModifier()
{
  return &type metadata for FormatPrewarmBlueprintModifier;
}

uint64_t sub_1C00BD984(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v57 = a3;
  v58 = a2;
  sub_1C00BE6A8(0, &qword_1EB8642B0, MEMORY[0x1E4FACA00]);
  uint64_t v56 = v3;
  uint64_t v55 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  v54 = (char *)&v53 - v4;
  uint64_t v80 = type metadata accessor for FormatModel();
  uint64_t v59 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int v9 = (char *)&v53 - v8;
  sub_1C00BE41C();
  uint64_t v78 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00BE4B0();
  MEMORY[0x1F4188790](v14 - 8);
  v70 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1F4188790](v16);
  v61 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00BE6A8(0, &qword_1EB8641A0, MEMORY[0x1E4FAC180]);
  uint64_t v19 = v18;
  unint64_t v76 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  v68 = (char *)&v53 - v20;
  uint64_t v21 = type metadata accessor for FormatSection();
  uint64_t v60 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v67 = (uint64_t)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00BE57C();
  MEMORY[0x1F4188790](v23 - 8);
  sub_1C00BE6A8(0, &qword_1EB864568, MEMORY[0x1E4FAD830]);
  uint64_t v73 = v24;
  uint64_t v53 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  id v26 = (char *)&v53 - v25;
  uint64_t v27 = sub_1C00BE648(&qword_1EB864198);
  uint64_t v28 = sub_1C00BE648(&qword_1EB864190);
  uint64_t v69 = v19;
  MEMORY[0x1C18C02A0](MEMORY[0x1E4FBC860], v19, v27, v28);
  uint64_t v29 = sub_1C00BE3D4((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
  uint64_t v30 = sub_1C00BE3D4((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
  uint64_t v71 = v29;
  v72 = v26;
  uint64_t v74 = v16;
  uint64_t v79 = v30;
  sub_1C151CC6C();
  uint64_t v31 = *(void *)(v77 + 56);
  uint64_t v66 = *(void *)(v31 + 16);
  if (v66)
  {
    uint64_t v64 = *(int *)(v21 + 20);
    uint64_t v32 = v60;
    uint64_t v63 = v31 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
    uint64_t v77 = v11 + 32;
    v62 = (void (**)(char *, uint64_t))(v76 + 8);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v34 = 0;
    uint64_t v35 = (uint64_t)v61;
    uint64_t v65 = result;
    while (v34 < *(void *)(result + 16))
    {
      uint64_t v40 = *(void *)(v32 + 72);
      unint64_t v76 = v34;
      uint64_t v41 = v63 + v40 * v34;
      uint64_t v42 = v67;
      sub_1C00BD510(v41, v67, (uint64_t (*)(void))type metadata accessor for FormatSection);
      sub_1C00BD510(v42, v35, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      uint64_t v43 = *(void *)(v42 + v64);
      swift_bridgeObjectRetain();
      sub_1C00BE79C(v42, (uint64_t (*)(void))type metadata accessor for FormatSection);
      int64_t v44 = *(void *)(v43 + 16);
      if (v44)
      {
        uint64_t v81 = MEMORY[0x1E4FBC860];
        sub_1C05F6400(0, v44, 0);
        uint64_t v45 = *(unsigned __int8 *)(v59 + 80);
        uint64_t v75 = v43;
        uint64_t v46 = v43 + ((v45 + 32) & ~v45);
        uint64_t v47 = *(void *)(v59 + 72);
        do
        {
          sub_1C00BD510(v46, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatModel);
          sub_1C00BD510((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatModel);
          sub_1C151A2FC();
          sub_1C00BE79C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatModel);
          uint64_t v48 = v81;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F6400(0, *(void *)(v48 + 16) + 1, 1);
            uint64_t v48 = v81;
          }
          unint64_t v50 = *(void *)(v48 + 16);
          unint64_t v49 = *(void *)(v48 + 24);
          if (v50 >= v49 >> 1)
          {
            sub_1C05F6400(v49 > 1, v50 + 1, 1);
            uint64_t v48 = v81;
          }
          *(void *)(v48 + 16) = v50 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v48+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v50, v13, v78);
          uint64_t v81 = v48;
          v46 += v47;
          --v44;
        }
        while (v44);
        swift_bridgeObjectRelease();
        uint64_t v35 = (uint64_t)v61;
        uint64_t v32 = v60;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v48 = MEMORY[0x1E4FBC860];
      }
      unint64_t v36 = v76 + 1;
      uint64_t v37 = sub_1C00BE3D4(&qword_1EB864168, (void (*)(uint64_t))sub_1C00BE41C);
      uint64_t v38 = sub_1C00BE3D4(&qword_1EB864160, (void (*)(uint64_t))sub_1C00BE41C);
      MEMORY[0x1C18C02B0](v48, v78, v37, v38);
      id v39 = v68;
      sub_1C151AA0C();
      sub_1C151CC1C();
      unint64_t v34 = v36;
      (*v62)(v39, v69);
      uint64_t result = v65;
      if (v36 == v66)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    v51 = v54;
    v52 = v72;
    sub_1C151B89C();
    v58(v51);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v51, v56);
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v52, v73);
  }
  return result;
}

unint64_t sub_1C00BE2F0()
{
  unint64_t result = qword_1EB868FC8;
  if (!qword_1EB868FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868FC8);
  }
  return result;
}

uint64_t sub_1C00BE344()
{
  return sub_1C00BE3D4((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
}

uint64_t sub_1C00BE38C()
{
  return sub_1C00BE3D4((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
}

uint64_t sub_1C00BE3D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C00BE41C()
{
  if (!qword_1EB864170)
  {
    type metadata accessor for FormatModel();
    sub_1C00BE3D4((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
    unint64_t v0 = sub_1C151A31C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864170);
    }
  }
}

void sub_1C00BE4B0()
{
  if (!qword_1EB863DC0)
  {
    sub_1C00BE41C();
    sub_1C00BE3D4(&qword_1EB864168, (void (*)(uint64_t))sub_1C00BE41C);
    sub_1C00BE3D4(&qword_1EB864160, (void (*)(uint64_t))sub_1C00BE41C);
    unint64_t v0 = sub_1C151879C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863DC0);
    }
  }
}

void sub_1C00BE57C()
{
  if (!qword_1EB863DD0)
  {
    sub_1C00BE6A8(255, &qword_1EB8641A0, MEMORY[0x1E4FAC180]);
    sub_1C00BE648(&qword_1EB864198);
    sub_1C00BE648(&qword_1EB864190);
    unint64_t v0 = sub_1C151879C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863DD0);
    }
  }
}

uint64_t sub_1C00BE648(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C00BE6A8(255, &qword_1EB8641A0, MEMORY[0x1E4FAC180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C00BE6A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for FormatSectionDescriptor();
    v8[1] = type metadata accessor for FormatModel();
    v8[2] = sub_1C00BE3D4((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
    v8[3] = sub_1C00BE3D4((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C00BE79C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C00BE7FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C00BD578(a1, a2);
}

void *assignWithCopy for FormatLocalization(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatLocalization(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatTemplate()
{
  return &type metadata for DebugFormatTemplate;
}

uint64_t sub_1C00BE934(void *a1)
{
  uint64_t v3 = v1;
  sub_1C00BF488(0, &qword_1EA196978, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C00BF388();
  sub_1C1520F0C();
  char v15 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    char v14 = 1;
    sub_1C15207CC();
    char v13 = 2;
    sub_1C15207CC();
    uint64_t v12 = *(void *)(v3 + 48);
    v11[15] = 3;
    sub_1C00BF3DC();
    sub_1C00BF4EC(&qword_1EA196980, (void (*)(void))sub_1C00BF558);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C00BEB48()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x7470697263736564;
      break;
    case 3:
      uint64_t result = 1937335659;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C00BEBD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C00BEE10(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C00BEBFC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C00BEC08(uint64_t a1)
{
  unint64_t v2 = sub_1C00BF388();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C00BEC44(uint64_t a1)
{
  unint64_t v2 = sub_1C00BF388();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C00BEC80@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C00BEFD0(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1C00BECD0(void *a1)
{
  return sub_1C00BE934(a1);
}

uint64_t sub_1C00BECE8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_1C00BED44(v5, v7) & 1;
}

uint64_t sub_1C00BED44(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1C1520A9C(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = sub_1C1520A9C(), result = 0, (v8 & 1) != 0))
    {
      if (sub_1C00E2D3C(a1[6], a2[6]))
      {
        if (a1[4] == a2[4] && a1[5] == a2[5])
        {
          return 1;
        }
        else
        {
          return sub_1C1520A9C();
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C00BEE10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1937335659 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C00BEFD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C00BF488(0, &qword_1EA196950, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C00BF388();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v30 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  uint64_t v24 = v10;
  char v29 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152069C();
  uint64_t v25 = v14;
  uint64_t v22 = v13;
  char v28 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  uint64_t v21 = sub_1C152069C();
  uint64_t v16 = v15;
  sub_1C00BF3DC();
  char v27 = 3;
  sub_1C00BF4EC(&qword_1EA196968, (void (*)(void))sub_1C00BF434);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v17 = v26;
  swift_bridgeObjectRetain();
  uint64_t v18 = v16;
  uint64_t v19 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v12;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v21;
  a2[5] = v18;
  a2[6] = v17;
  return result;
}

unint64_t sub_1C00BF388()
{
  unint64_t result = qword_1EA196958;
  if (!qword_1EA196958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196958);
  }
  return result;
}

void sub_1C00BF3DC()
{
  if (!qword_1EA196960)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA196960);
    }
  }
}

unint64_t sub_1C00BF434()
{
  unint64_t result = qword_1EA196970;
  if (!qword_1EA196970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196970);
  }
  return result;
}

void sub_1C00BF488(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C00BF388();
    unint64_t v7 = a3(a1, &type metadata for DebugFormatTemplate.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C00BF4EC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C00BF3DC();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C00BF558()
{
  unint64_t result = qword_1EA196988;
  if (!qword_1EA196988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196988);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTemplate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C00BF678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplate.CodingKeys()
{
  return &type metadata for DebugFormatTemplate.CodingKeys;
}

unint64_t sub_1C00BF6B4()
{
  unint64_t result = qword_1EA196990;
  if (!qword_1EA196990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196990);
  }
  return result;
}

unint64_t sub_1C00BF70C()
{
  unint64_t result = qword_1EA196998;
  if (!qword_1EA196998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196998);
  }
  return result;
}

unint64_t sub_1C00BF764()
{
  unint64_t result = qword_1EA1969A0;
  if (!qword_1EA1969A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1969A0);
  }
  return result;
}

id sub_1C00BF7B8()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_init);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_package)
     + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment;
  swift_beginAccess();
  if (*(void *)(v2 + 8))
  {
    sub_1BFEC0488(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    unsigned int v4 = (void **)MEMORY[0x1E4FB0700];
    *(_OWORD *)(inited + 16) = xmmword_1C1527210;
    uint64_t v5 = *v4;
    *(void *)(inited + 32) = *v4;
    unsigned int v6 = self;
    swift_bridgeObjectRetain();
    id v7 = v5;
    id v8 = objc_msgSend(v6, sel_systemGray2Color);
    uint64_t v9 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    *(void *)(inited + 40) = v8;
    uint64_t v10 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = v9;
    *(void *)(inited + 72) = v10;
    uint64_t v11 = self;
    id v12 = v10;
    id v13 = objc_msgSend(v11, sel_systemFontOfSize_, 13.0);
    *(void *)(inited + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    *(void *)(inited + 80) = v13;
    sub_1BFF991DC(inited);
    id v14 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v15 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1C00C291C((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
    uint64_t v16 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

    objc_msgSend(v1, sel_appendAttributedString_, v17);
    id v18 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v19 = (void *)sub_1C151E5EC();
    id v20 = objc_msgSend(v18, sel_initWithString_, v19);

    objc_msgSend(v1, sel_appendAttributedString_, v20);
  }
  sub_1C00C0D5C(13.0);
  uint64_t v22 = v21;
  objc_msgSend(v1, sel_appendAttributedString_, v21);

  return v1;
}

uint64_t sub_1C00BFAB0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v121 = a8;
  uint64_t v122 = 0;
  uint64_t v132 = *MEMORY[0x1E4F143B8];
  sub_1C00C2964();
  uint64_t v116 = v19;
  MEMORY[0x1F4188790](v19);
  v120 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v118 = (uint64_t)&v95 - v22;
  sub_1C00C2B2C(0, &qword_1EA1969C0, MEMORY[0x1E4FBBD80]);
  uint64_t v119 = v23;
  uint64_t v107 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  v117 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  v104 = (char *)&v95 - v26;
  uint64_t v106 = a1;
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  uint64_t v27 = v11 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localVersion;
  uint64_t v28 = sub_1C151928C();
  uint64_t v100 = *(void *)(v28 - 8);
  char v29 = *(void (**)(uint64_t, uint64_t))(v100 + 16);
  uint64_t v103 = a3;
  uint64_t v101 = v28;
  v29(v27, a3);
  char v30 = (uint64_t *)(v11 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteData);
  uint64_t v108 = a4;
  *char v30 = a4;
  v30[1] = a5;
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  unint64_t v109 = a5;
  *(void *)(v11 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteError) = v31;
  sub_1BFEC03F4(a7, v11 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersion);
  *(void *)(v11 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersions) = v121;
  uint64_t v105 = a9;
  *(void *)(v11 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_package) = a9;
  unint64_t v33 = a2;
  sub_1C00C2A5C(a10, v11 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remotePackage);
  uint64_t v102 = a10;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v40 = v106;
      if (v40 >> 32 < (int)v40)
      {
        __break(1u);
LABEL_44:
        __break(1u);
      }
      sub_1BFE95820(v106, v33);
      sub_1BFE95820(v40, v33);
      sub_1C00C2AC0(v108, v109);
      id v41 = v31;
      swift_retain();
      sub_1BFE95820(v40, v33);
      uint64_t v37 = sub_1C037F8CC((int)v40, v40 >> 32, v33 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
      unint64_t v39 = v42;
      sub_1BFE95664(v40, v33);
      if (v39) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 2uLL:
      uint64_t v40 = v106;
      uint64_t v43 = *(void *)(v106 + 16);
      uint64_t v44 = *(void *)(v106 + 24);
      sub_1BFE95820(v106, v33);
      sub_1C00C2AC0(v108, v109);
      id v45 = v31;
      swift_retain();
      sub_1BFE95820(v40, v33);
      swift_retain();
      swift_retain();
      uint64_t v37 = sub_1C037F8CC(v43, v44, v33 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
      unint64_t v39 = v46;
      swift_release();
      swift_release();
      if (v39)
      {
LABEL_9:
        sub_1BFE95664(v40, v33);
        goto LABEL_10;
      }
LABEL_5:
      uint64_t v127 = v40;
      unint64_t v128 = v33;
      sub_1BFE95820(v40, v33);
      sub_1C00C2AD4();
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v124, (uint64_t)&v129);
        __swift_project_boxed_opaque_existential_1(&v129, v131);
        if (sub_1C152054C())
        {
          __swift_project_boxed_opaque_existential_1(&v129, v131);
          sub_1C152053C();
          sub_1BFE95664(v40, v33);
          unint64_t v39 = *((void *)&v124 + 1);
          uint64_t v37 = v124;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
LABEL_10:
          unint64_t v35 = v109;
          goto LABEL_15;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
      }
      else
      {
        uint64_t v126 = 0;
        long long v124 = 0u;
        long long v125 = 0u;
        sub_1BFEC0798((uint64_t)&v124, (unint64_t *)&qword_1EA1A2000, (uint64_t (*)(uint64_t))sub_1C00C2AD4);
      }
      unint64_t v35 = v109;
      uint64_t v37 = sub_1C037F818(v40, v33);
      unint64_t v39 = v48;
      sub_1BFE95664(v40, v33);
LABEL_15:
      uint64_t v99 = v11;
      uint64_t v98 = v32;
      unint64_t v97 = v33;
      id v96 = v31;
      if (v35 >> 60 == 15)
      {
        uint64_t v49 = 0;
        unint64_t v50 = 0xE000000000000000;
LABEL_17:
        uint64_t v51 = v116;
      }
      else
      {
        switch(v35 >> 62)
        {
          case 1uLL:
            uint64_t v122 = v37;
            uint64_t v55 = v108;
            if (v55 >> 32 < (int)v55) {
              goto LABEL_44;
            }
            unint64_t v56 = v35;
            sub_1BFE95820(v108, v35);
            swift_retain();
            uint64_t v49 = sub_1C037F8CC((int)v55, v55 >> 32, v35 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
            unint64_t v50 = v57;
            sub_1BFE95878(v55, v56);
LABEL_23:
            uint64_t v51 = v116;
            uint64_t v37 = v122;
            if (v50)
            {
              uint64_t v63 = v55;
              unint64_t v64 = v109;
            }
            else
            {
              unint64_t v65 = v109;
              uint64_t v127 = v55;
              unint64_t v128 = v109;
              sub_1BFE95820(v55, v109);
              sub_1C00C2AD4();
              if (swift_dynamicCast())
              {
                uint64_t v122 = v37;
                sub_1BFC773DC(&v124, (uint64_t)&v129);
                __swift_project_boxed_opaque_existential_1(&v129, v131);
                if (sub_1C152054C())
                {
                  __swift_project_boxed_opaque_existential_1(&v129, v131);
                  sub_1C152053C();
                  sub_1BFE95878(v55, v109);
                  unint64_t v50 = *((void *)&v124 + 1);
                  uint64_t v49 = v124;
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
                  uint64_t v37 = v122;
                  break;
                }
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
                unint64_t v65 = v109;
                uint64_t v37 = v122;
              }
              else
              {
                uint64_t v126 = 0;
                long long v124 = 0u;
                long long v125 = 0u;
                sub_1BFEC0798((uint64_t)&v124, (unint64_t *)&qword_1EA1A2000, (uint64_t (*)(uint64_t))sub_1C00C2AD4);
              }
              uint64_t v49 = sub_1C037F818(v55, v65);
              unint64_t v50 = v66;
              uint64_t v63 = v55;
              unint64_t v64 = v65;
            }
            sub_1BFE95878(v63, v64);
            break;
          case 2uLL:
            uint64_t v122 = v37;
            uint64_t v58 = v35 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v55 = v108;
            unint64_t v59 = v35;
            uint64_t v60 = *(void *)(v108 + 16);
            uint64_t v61 = *(void *)(v108 + 24);
            sub_1C00C2AC0(v108, v59);
            swift_retain();
            swift_retain();
            uint64_t v49 = sub_1C037F8CC(v60, v61, v58, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
            unint64_t v50 = v62;
            swift_release();
            swift_release();
            goto LABEL_23;
          case 3uLL:
            *(void *)((char *)&v124 + 6) = 0;
            *(void *)&long long v124 = 0;
            sub_1C037FB34(&v129);
            sub_1BFE95878(v108, v35);
            uint64_t v49 = v129;
            unint64_t v50 = v130;
            goto LABEL_17;
          default:
            uint64_t v52 = v108;
            uint64_t v129 = v108;
            LOWORD(v130) = v35;
            BYTE2(v130) = BYTE2(v35);
            BYTE3(v130) = BYTE3(v35);
            BYTE4(v130) = BYTE4(v35);
            BYTE5(v130) = BYTE5(v35);
            uint64_t v49 = sub_1C151E75C();
            unint64_t v53 = v35;
            unint64_t v50 = v54;
            sub_1BFE95878(v52, v53);
            goto LABEL_17;
        }
      }
      uint64_t v129 = v37;
      unint64_t v130 = v39;
      sub_1BFF27ECC();
      uint64_t v67 = sub_1C151FF1C();
      swift_bridgeObjectRelease();
      uint64_t v129 = v49;
      unint64_t v130 = v50;
      uint64_t v68 = sub_1C151FF1C();
      swift_bridgeObjectRelease();
      *(void *)&long long v124 = MEMORY[0x1E4FBC870];
      uint64_t v127 = MEMORY[0x1E4FBC870];
      uint64_t v111 = v67;
      uint64_t v129 = v67;
      uint64_t v110 = v68;
      uint64_t v123 = v68;
      uint64_t v69 = (uint64_t (*)(void, void))MEMORY[0x1E4FBB320];
      sub_1C00C2B2C(0, &qword_1EA1969D0, MEMORY[0x1E4FBB320]);
      sub_1C00C2A18(qword_1EA1969D8, &qword_1EA1969D0, v69);
      v70 = v104;
      sub_1C151E54C();
      uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 16);
      uint64_t v73 = v119;
      uint64_t v72 = (uint64_t)v120;
      uint64_t v116 = v107 + 16;
      v115 = v71;
      v71(v120, (uint64_t)v70, v119);
      uint64_t v74 = sub_1C00C2A18(&qword_1EA1969C8, &qword_1EA1969C0, MEMORY[0x1E4FBBD80]);
      sub_1C151F09C();
      *(void *)(v72 + *(int *)(v51 + 36)) = v129;
      uint64_t v75 = v118;
      sub_1C00C2B7C(v72, v118);
      unint64_t v76 = (uint64_t *)(v75 + *(int *)(v51 + 36));
      uint64_t v77 = *v76;
      sub_1C151F0EC();
      if (v77 != v129)
      {
        v112 = (void (**)(char *, uint64_t))(v107 + 8);
        uint64_t v114 = v74;
        v113 = v76;
        do
        {
          v88 = (void (*)(uint64_t *, void))sub_1C151F19C();
          uint64_t v90 = *(void *)v89;
          uint64_t v91 = *(void *)(v89 + 40);
          int v92 = *(unsigned __int8 *)(v89 + 48);
          char v93 = *(unsigned char *)(v89 + 49);
          v120 = *(char **)(v89 + 32);
          uint64_t v121 = v91;
          LODWORD(v122) = v92;
          sub_1C00C2BE0();
          v88(&v129, 0);
          v94 = v117;
          v115(v117, v75, v73);
          sub_1C151F0FC();
          (*v112)(v94, v73);
          if (v93)
          {
            if (v90 < *(void *)(v110 + 16)) {
              sub_1BFE4EA54(&v129, v90);
            }
          }
          else if (v90 < *(void *)(v111 + 16))
          {
            sub_1BFE4EA54(&v129, v90);
          }
          sub_1C00C2BE8();
          uint64_t v75 = v118;
          uint64_t v73 = v119;
          uint64_t v87 = *v113;
          sub_1C151F0EC();
        }
        while (v87 != v129);
      }
      sub_1C00C28BC(v75, (uint64_t (*)(void))sub_1C00C2964);
      uint64_t v78 = v99;
      *(void *)(v99 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localOffsets) = v124;
      *(void *)(v78 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteOffsets) = v127;
      uint64_t v79 = *(void *)(v111 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v78 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localNumberOfLines) = v79;
      uint64_t v80 = *(void *)(v110 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v78 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteNumberOfLines) = v80;
      uint64_t v81 = v104;
      uint64_t v82 = sub_1C152055C();
      v83 = sub_1C00C0A70(v82);
      swift_bridgeObjectRelease();
      *(void *)(v78 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localHunkRanges) = v83;
      uint64_t v84 = sub_1C152056C();
      v85 = sub_1C00C0A70(v84);
      swift_release();

      sub_1BFE95878(v108, v109);
      sub_1BFE95664(v106, v97);
      sub_1C00C28BC(v102, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadRemotePackage);
      sub_1BFEC0798(v98, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v103, v101);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v81, v73);
      *(void *)(v78 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteHunkRanges) = v85;
      return v78;
    case 3uLL:
      *(void *)((char *)&v124 + 6) = 0;
      *(void *)&long long v124 = 0;
      unint64_t v35 = v109;
      sub_1C00C2AC0(v108, v109);
      id v47 = v31;
      swift_retain();
      sub_1C037FB34(&v129);
      sub_1BFE95664(v106, a2);
      uint64_t v37 = v129;
      unint64_t v39 = v130;
      goto LABEL_15;
    default:
      uint64_t v34 = v106;
      uint64_t v129 = v106;
      LOWORD(v130) = v33;
      BYTE2(v130) = BYTE2(v33);
      BYTE3(v130) = BYTE3(v33);
      BYTE4(v130) = BYTE4(v33);
      BYTE5(v130) = BYTE5(v33);
      unint64_t v35 = v109;
      sub_1C00C2AC0(v108, v109);
      id v36 = v31;
      swift_retain();
      uint64_t v37 = sub_1C151E75C();
      unint64_t v39 = v38;
      sub_1BFE95664(v34, v33);
      goto LABEL_15;
  }
}

void *sub_1C00C0A70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 81;
  int v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v4 = *(void *)(v2 - 49);
    sub_1C00C2BE0();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = sub_1C0EDFE80(0, v3[2] + 1, 1, v3);
    }
    unint64_t v7 = v5[2];
    unint64_t v6 = v5[3];
    if (v7 >= v6 >> 1) {
      uint64_t v5 = sub_1C0EDFE80((void *)(v6 > 1), v7 + 1, 1, v5);
    }
    v5[2] = v7 + 1;
    id v8 = v5 + 4;
    v5[v7 + 4] = v4;
    int v3 = v5;
    sub_1C00C2BE8();
    v2 += 56;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3[2];
  if (!v9)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *v8;
  uint64_t v11 = v9 - 1;
  if (v9 != 1)
  {
    id v12 = v3;
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    id v14 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v15 = v10;
    do
    {
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if ((unint64_t)(v13 + 1) >= v12[2]) {
        goto LABEL_35;
      }
      uint64_t v16 = &v12[v13];
      if (v10 + 1 == v16[5])
      {
        ++v10;
      }
      else
      {
        if (v10 < v15) {
          goto LABEL_36;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v14 = sub_1C0EDFD74(0, v14[2] + 1, 1, v14);
        }
        unint64_t v18 = v14[2];
        unint64_t v17 = v14[3];
        if (v18 >= v17 >> 1) {
          id v14 = sub_1C0EDFD74((void *)(v17 > 1), v18 + 1, 1, v14);
        }
        v14[2] = v18 + 1;
        uint64_t v19 = &v14[2 * v18];
        v19[4] = v15;
        v19[5] = v10;
        uint64_t v10 = v16[5];
        uint64_t v15 = v10;
      }
      ++v13;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease_n();
    if (v10 >= v15) {
      goto LABEL_29;
    }
    __break(1u);
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  id v14 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v15 = v10;
LABEL_29:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_37:
  }
    id v14 = sub_1C0EDFD74(0, v14[2] + 1, 1, v14);
  unint64_t v21 = v14[2];
  unint64_t v20 = v14[3];
  if (v21 >= v20 >> 1) {
    id v14 = sub_1C0EDFD74((void *)(v20 > 1), v21 + 1, 1, v14);
  }
  v14[2] = v21 + 1;
  uint64_t v22 = &v14[2 * v21];
  v22[4] = v15;
  v22[5] = v10;
  return v14;
}

void sub_1C00C0D5C(double a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEC0488(0, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  long long v125 = (char *)v118 - v4;
  uint64_t v5 = sub_1C151928C();
  *(void *)&long long v128 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v126 = (char *)v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v118 - v8;
  sub_1BFEC3EE8();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0488(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], v2);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v118 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v118 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v118 - v24;
  uint64_t v26 = sub_1C1515B3C();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v27 = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A260);
  sub_1C15159CC();
  uint64_t v129 = v27;
  uint64_t v28 = sub_1C151F5EC();
  char v29 = (void *)v28;
  if (*(void *)(v130 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteError))
  {
    id v30 = objc_msgSend(self, sel_systemRedColor);
    uint64_t v31 = (void *)sub_1C151E5EC();
    id v32 = objc_msgSend(self, sel_systemImageNamed_, v31);

    if (v32)
    {
      id v33 = objc_msgSend(self, sel_textAttachmentWithImage_, v32);

      id v34 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v33);
      unint64_t v35 = (void *)*MEMORY[0x1E4FB0700];
      objc_msgSend(v34, sel_addAttribute_value_range_, *MEMORY[0x1E4FB0700], v30, 0, 1);
      id v36 = (void *)*MEMORY[0x1E4FB06F8];
      uint64_t v37 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
      id v38 = objc_msgSend(self, sel_systemFontOfSize_weight_, a1, *MEMORY[0x1E4FB09B8]);
      objc_msgSend(v34, sel_addAttribute_value_range_, v36, v38, 0, 1);

      objc_msgSend(v29, (SEL)0x1F72D499BLL, v34);
      unint64_t v39 = v29;
LABEL_28:
      uint64_t v132 = 11040;
      unint64_t v133 = 0xE200000000000000;
      uint64_t v131 = *(void *)(*(void *)(v130 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localOffsets) + 16);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1BFEC0488(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
      uint64_t v129 = v90;
      uint64_t inited = swift_initStackObject();
      long long v128 = xmmword_1C1527210;
      *(_OWORD *)(inited + 16) = xmmword_1C1527210;
      *(void *)(inited + 32) = v36;
      int v92 = (char *)self;
      uint64_t v127 = v92;
      double v93 = *MEMORY[0x1E4FB09E0];
      uint64_t v126 = v36;
      id v94 = objc_msgSend(v92, (SEL)v37[434], a1, v93);
      uint64_t v95 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
      long long v125 = (char *)v95;
      *(void *)(inited + 40) = v94;
      *(void *)(inited + 64) = v95;
      *(void *)(inited + 72) = v35;
      id v96 = self;
      id v124 = v96;
      id v97 = v35;
      id v98 = objc_msgSend(v96, sel_systemGreenColor);
      uint64_t v99 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
      *(void *)(inited + 104) = v99;
      *(void *)(inited + 80) = v98;
      sub_1BFF991DC(inited);
      id v100 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v101 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1C00C291C((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
      uint64_t v102 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      id v103 = objc_msgSend(v100, sel_initWithString_attributes_, v101, v102);

      objc_msgSend(v39, sel_appendAttributedString_, v103);
      uint64_t v132 = 11552;
      unint64_t v133 = 0xE200000000000000;
      uint64_t v131 = *(void *)(*(void *)(v130 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteOffsets) + 16);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v104 = swift_initStackObject();
      *(_OWORD *)(v104 + 16) = v128;
      uint64_t v105 = v126;
      *(void *)(v104 + 32) = v126;
      id v106 = v105;
      *(void *)(v104 + 40) = objc_msgSend(v127, sel_systemFontOfSize_weight_, a1, v93);
      *(void *)(v104 + 64) = v125;
      *(void *)(v104 + 72) = v97;
      id v107 = v97;
      id v108 = objc_msgSend(v124, sel_systemRedColor);
      *(void *)(v104 + 104) = v99;
      *(void *)(v104 + 80) = v108;
      sub_1BFF991DC(v104);
      id v109 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v110 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      uint64_t v111 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      id v112 = objc_msgSend(v109, sel_initWithString_attributes_, v110, v111);

      objc_msgSend(v39, sel_appendAttributedString_, v112);
      return;
    }
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v121 = v11;
  id v124 = v22;
  v120 = v19;
  uint64_t v119 = v9;
  uint64_t v127 = v13;
  uint64_t v122 = v16;
  uint64_t v123 = (void *)v28;
  uint64_t v40 = v128;
  uint64_t v42 = v128 + 16;
  id v41 = *(void (**)(char *))(v128 + 16);
  v118[2] = v130 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localVersion;
  uint64_t v43 = v130;
  v41(v25);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
  uint64_t v45 = 1;
  v44(v25, 0, 1, v5);
  unint64_t v46 = *(char **)(v43 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersions);
  uint64_t v47 = *((void *)v46 + 2);
  v118[1] = v42;
  v118[0] = v41;
  if (v47)
  {
    uint64_t v48 = (uint64_t)v124;
    ((void (*)(id, char *, uint64_t))v41)(v124, &v46[((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * (v47 - 1)], v5);
    uint64_t v45 = 0;
    uint64_t v49 = (uint64_t)v122;
  }
  else
  {
    uint64_t v49 = (uint64_t)v122;
    uint64_t v48 = (uint64_t)v124;
  }
  v44((char *)v48, v45, 1, v5);
  uint64_t v50 = (uint64_t)v127;
  uint64_t v51 = &v127[*(int *)(v121 + 48)];
  sub_1BFEC03F4((uint64_t)v25, (uint64_t)v127);
  sub_1BFEC03F4(v48, (uint64_t)v51);
  uint64_t v52 = v48;
  unint64_t v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  if (v53((char *)v50, 1, v5) == 1)
  {
    unint64_t v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAB0A8];
    sub_1BFEC0798(v52, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
    sub_1BFEC0798((uint64_t)v25, &qword_1EB871500, v54);
    int v55 = v53(v51, 1, v5);
    unint64_t v56 = v123;
    if (v55 == 1)
    {
      sub_1BFEC0798((uint64_t)v127, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      uint64_t v37 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
LABEL_22:
      id v61 = objc_msgSend(self, sel_systemBlueColor);
      uint64_t v82 = (void *)sub_1C151E5EC();
      id v83 = objc_msgSend(self, sel_systemImageNamed_, v82);

      if (!v83)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      id v84 = objc_msgSend(self, sel_textAttachmentWithImage_, v83);

      id v85 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v84);
      unint64_t v35 = (void *)*MEMORY[0x1E4FB0700];
      objc_msgSend(v85, sel_addAttribute_value_range_, *MEMORY[0x1E4FB0700], v61, 0, 1);
      id v36 = (void *)*MEMORY[0x1E4FB06F8];
      id v86 = objc_msgSend(self, (SEL)v37[434], a1, *MEMORY[0x1E4FB09B8]);
      goto LABEL_26;
    }
    goto LABEL_12;
  }
  uint64_t v57 = (uint64_t)v120;
  sub_1BFEC03F4(v50, (uint64_t)v120);
  int v58 = v53(v51, 1, v5);
  unint64_t v56 = v123;
  if (v58 == 1)
  {
    unint64_t v59 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAB0A8];
    sub_1BFEC0798((uint64_t)v124, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
    sub_1BFEC0798((uint64_t)v25, &qword_1EB871500, v59);
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v57, v5);
LABEL_12:
    sub_1C00C28BC((uint64_t)v127, (uint64_t (*)(void))sub_1BFEC3EE8);
    uint64_t v37 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
    goto LABEL_13;
  }
  uint64_t v122 = v46;
  uint64_t v74 = v57;
  uint64_t v75 = v128;
  unint64_t v76 = v119;
  (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v119, v51, v5);
  sub_1C00C291C(&qword_1EB85C8B8, MEMORY[0x1E4FAB0A8]);
  LODWORD(v121) = sub_1C151E5CC();
  uint64_t v77 = *(void (**)(char *, uint64_t))(v75 + 8);
  v77(v76, v5);
  uint64_t v78 = v5;
  uint64_t v79 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAB0A8];
  sub_1BFEC0798((uint64_t)v124, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  sub_1BFEC0798((uint64_t)v25, &qword_1EB871500, v79);
  uint64_t v80 = v74;
  unint64_t v46 = v122;
  v77((char *)v80, v78);
  uint64_t v81 = v79;
  uint64_t v5 = v78;
  unint64_t v56 = v123;
  sub_1BFEC0798((uint64_t)v127, &qword_1EB871500, v81);
  uint64_t v37 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
  if (v121) {
    goto LABEL_22;
  }
LABEL_13:
  sub_1BFEC03F4(v130 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersion, v49);
  int v60 = v53((char *)v49, 1, v5);
  sub_1BFEC0798(v49, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  if (v60 == 1)
  {
    id v61 = objc_msgSend(self, sel_systemGreenColor);
    unint64_t v62 = (void *)sub_1C151E5EC();
    id v63 = objc_msgSend(self, sel_systemImageNamed_, v62);

    if (!v63)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    goto LABEL_25;
  }
  uint64_t v64 = *((void *)v46 + 2);
  if (!v64)
  {
    id v61 = objc_msgSend(self, sel_systemGreenColor);
    uint64_t v87 = (void *)sub_1C151E5EC();
    id v63 = objc_msgSend(self, sel_systemImageNamed_, v87);

    if (!v63)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
LABEL_25:
    id v88 = objc_msgSend(self, sel_textAttachmentWithImage_, v63);

    id v85 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v88);
    unint64_t v35 = (void *)*MEMORY[0x1E4FB0700];
    objc_msgSend(v85, sel_addAttribute_value_range_, *MEMORY[0x1E4FB0700], v61, 0, 1);
    id v36 = (void *)*MEMORY[0x1E4FB06F8];
    id v86 = objc_msgSend(self, sel_systemFontOfSize_weight_, a1, *MEMORY[0x1E4FB09B8]);
LABEL_26:
    id v89 = v86;
    objc_msgSend(v85, sel_addAttribute_value_range_, v36, v89, 0, 1);

    objc_msgSend(v56, sel_appendAttributedString_, v85);
LABEL_27:
    unint64_t v39 = v56;
    goto LABEL_28;
  }
  unint64_t v65 = v126;
  ((void (*)(char *, char *, uint64_t))v118[0])(v126, &v46[((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(void *)(v128 + 72) * (v64 - 1)], v5);
  sub_1C00C291C((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
  if ((sub_1C151E57C() & 1) == 0)
  {
    uint64_t v70 = v5;
    id v71 = objc_msgSend(self, sel_systemPurpleColor);
    v113 = (void *)sub_1C151E5EC();
    id v73 = objc_msgSend(self, sel_systemImageNamed_, v113);

    if (!v73)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    goto LABEL_32;
  }
  uint64_t v66 = (uint64_t)v125;
  sub_1C151927C();
  uint64_t v67 = sub_1C15187BC();
  int v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48))(v66, 1, v67);
  sub_1BFEC0798(v66, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70]);
  uint64_t v69 = self;
  uint64_t v70 = v5;
  if (v68 == 1)
  {
    id v71 = objc_msgSend(v69, sel_systemPinkColor);
    uint64_t v72 = (void *)sub_1C151E5EC();
    id v73 = objc_msgSend(self, sel_systemImageNamed_, v72);

    if (!v73)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    goto LABEL_32;
  }
  id v71 = objc_msgSend(v69, sel_systemGreenColor);
  uint64_t v114 = (void *)sub_1C151E5EC();
  id v73 = objc_msgSend(self, sel_systemImageNamed_, v114);

  if (v73)
  {
LABEL_32:
    id v115 = objc_msgSend(self, sel_textAttachmentWithImage_, v73);

    id v116 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v115);
    unint64_t v35 = (void *)*MEMORY[0x1E4FB0700];
    objc_msgSend(v116, sel_addAttribute_value_range_, *MEMORY[0x1E4FB0700], v71, 0, 1);
    id v36 = (void *)*MEMORY[0x1E4FB06F8];
    id v117 = objc_msgSend(self, sel_systemFontOfSize_weight_, a1, *MEMORY[0x1E4FB09B8]);
    objc_msgSend(v116, sel_addAttribute_value_range_, v36, v117, 0, 1);

    objc_msgSend(v56, sel_appendAttributedString_, v116);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v65, v70);
    goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_1C00C23C0()
{
  sub_1BFE95664(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localVersion;
  uint64_t v2 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1BFE95878(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteData), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteData + 8));

  sub_1BFEC0798(v0 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersion, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C00C28BC(v0 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remotePackage, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadRemotePackage);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C00C2500()
{
  sub_1C00C23C0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C00C2558()
{
  return type metadata accessor for DebugFormatUploadDiff();
}

uint64_t type metadata accessor for DebugFormatUploadDiff()
{
  uint64_t result = qword_1EA1969A8;
  if (!qword_1EA1969A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C00C25AC()
{
  sub_1C151928C();
  if (v0 <= 0x3F)
  {
    sub_1BFEC0488(319, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for DebugFormatUploadRemotePackage();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1C00C2734()
{
  return 0;
}

uint64_t sub_1C00C2898()
{
  return sub_1C00C2734();
}

uint64_t sub_1C00C28BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C00C291C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C00C2964()
{
  if (!qword_1EA1969B8)
  {
    unint64_t v0 = (uint64_t (*)(void, void))MEMORY[0x1E4FBBD80];
    sub_1C00C2B2C(255, &qword_1EA1969C0, MEMORY[0x1E4FBBD80]);
    sub_1C00C2A18(&qword_1EA1969C8, &qword_1EA1969C0, v0);
    unint64_t v1 = sub_1C152037C();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA1969B8);
    }
  }
}

uint64_t sub_1C00C2A18(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C00C2B2C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C00C2A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatUploadRemotePackage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C00C2AC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1BFE95820(a1, a2);
  }
  return a1;
}

unint64_t sub_1C00C2AD4()
{
  unint64_t result = qword_1EA1AF1B0;
  if (!qword_1EA1AF1B0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1AF1B0);
  }
  return result;
}

void sub_1C00C2B2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB7A8]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C00C2B7C(uint64_t a1, uint64_t a2)
{
  sub_1C00C2964();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C00C2BE0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00C2BE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t CellAutomation.type.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CellAutomation.init(data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = sub_1C151A4BC();
  a3[1] = v6;
  uint64_t v7 = (char *)a3 + *(int *)(type metadata accessor for CellAutomation() + 36);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v8(v7, a1, a2);
}

uint64_t CellAutomation.automationType.getter()
{
  return 1819043171;
}

BOOL sub_1C00C2CCC(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1C00C2CDC()
{
  return sub_1C1520DCC();
}

uint64_t sub_1C00C2D04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C00C2DD8()
{
  return sub_1C1520E0C();
}

BOOL sub_1C00C2E20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C00C2CCC(*a1, *a2);
}

uint64_t sub_1C00C2E34()
{
  return sub_1C00C2DD8();
}

uint64_t sub_1C00C2E44()
{
  return sub_1C00C2CDC();
}

uint64_t sub_1C00C2E54()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C00C2E9C()
{
  return sub_1C004B538(*v0);
}

uint64_t sub_1C00C2EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C00C2D04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C00C2EDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C00C51E8();
  *a1 = result;
  return result;
}

uint64_t sub_1C00C2F08(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C00C2F5C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t CellAutomation.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v11[0] = *(void *)(a2 + 24);
  v11[1] = v4;
  type metadata accessor for CellAutomation.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C152083C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1C15207CC();
  if (!v9)
  {
    char v12 = 1;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for CellAutomation.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t CellAutomation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v21 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CellAutomation.CodingKeys();
  swift_getWitnessTable();
  uint64_t v26 = sub_1C152072C();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v25 = a3;
  uint64_t v10 = type metadata accessor for CellAutomation();
  uint64_t v20 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v12 = (uint64_t *)((char *)&v20 - v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = v27;
  sub_1C1520EBC();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v27 = v10;
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  char v29 = 0;
  *char v12 = sub_1C152069C();
  v12[1] = v16;
  char v28 = 1;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v26);
  uint64_t v17 = v27;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v12 + *(int *)(v27 + 36), v15, a2);
  uint64_t v18 = v20;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v20 + 16))(v22, v12, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 8))(v12, v17);
}

uint64_t sub_1C00C34E4()
{
  return 1819043171;
}

uint64_t sub_1C00C34F4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CellAutomation.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C00C3514(void *a1, uint64_t a2)
{
  return CellAutomation.encode(to:)(a1, a2);
}

uint64_t _s8NewsFeed14CellAutomationV4dataxvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t FormatCellAutomation.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCellAutomation.init(data:selectors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = sub_1C151A4BC();
  a4[1] = v8;
  uint64_t v9 = type metadata accessor for FormatCellAutomation();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))((char *)a4 + *(int *)(v9 + 36), a1, a3);
  *(uint64_t *)((char *)a4 + *(int *)(v9 + 40)) = a2;
  return result;
}

uint64_t FormatCellAutomation.automationType.getter()
{
  return 1819043171;
}

BOOL sub_1C00C3628(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1C00C3638()
{
  return sub_1C1520DCC();
}

uint64_t sub_1C00C3660(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t _s8NewsFeed0B12RefreshStateO9hashValueSivg_0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C00C37EC(char a1)
{
  if (!a1) {
    return 1701869940;
  }
  if (a1 == 1) {
    return 1635017060;
  }
  return 0x726F7463656C6573;
}

BOOL sub_1C00C3838(char *a1, char *a2)
{
  return sub_1C00C3628(*a1, *a2);
}

uint64_t sub_1C00C384C()
{
  return _s8NewsFeed0B12RefreshStateO9hashValueSivg_0();
}

uint64_t sub_1C00C3858()
{
  return sub_1C00C3638();
}

uint64_t sub_1C00C3864()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C00C38AC()
{
  return sub_1C00C37EC(*v0);
}

uint64_t sub_1C00C38B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C00C3660(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C00C38E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C00C51F0();
  *a1 = result;
  return result;
}

uint64_t sub_1C00C3914(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C00C3968(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t FormatCellAutomation.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v12[1] = *(void *)(a2 + 24);
  v12[2] = v4;
  type metadata accessor for FormatCellAutomation.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C152083C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = v12[3];
  sub_1C1520F0C();
  char v15 = 0;
  uint64_t v10 = v12[4];
  sub_1C15207CC();
  if (!v10)
  {
    char v14 = 1;
    sub_1C152080C();
    v12[5] = *(void *)(v9 + *(int *)(a2 + 40));
    char v13 = 2;
    sub_1BFEBC4B4();
    sub_1BFE38978((unint64_t *)&qword_1EB85C4F0);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for FormatCellAutomation.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatCellAutomation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v29 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  char v28 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatCellAutomation.CodingKeys();
  swift_getWitnessTable();
  uint64_t v31 = sub_1C152072C();
  uint64_t v27 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v30 = a3;
  uint64_t v10 = type metadata accessor for FormatCellAutomation();
  uint64_t v25 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v12 = (uint64_t *)((char *)&v23 - v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v32 = v9;
  uint64_t v13 = (uint64_t)v33;
  sub_1C1520EBC();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v29;
  char v15 = v28;
  uint64_t v24 = v12;
  id v33 = a1;
  char v37 = 0;
  uint64_t v16 = v31;
  uint64_t v17 = sub_1C152069C();
  uint64_t v18 = v24;
  *uint64_t v24 = v17;
  v18[1] = v19;
  char v36 = 1;
  sub_1C15206EC();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)v24 + *(int *)(v10 + 36), v15, a2);
  sub_1BFEBC4B4();
  char v35 = 2;
  sub_1BFE38978((unint64_t *)&qword_1EB87A020);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v16);
  uint64_t v21 = v24;
  uint64_t v20 = v25;
  *(uint64_t *)((char *)v24 + *(int *)(v10 + 40)) = v34;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v20 + 16))(v26, v21, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v20 + 8))(v21, v10);
}

uint64_t sub_1C00C402C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatCellAutomation.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C00C404C(void *a1, uint64_t a2)
{
  return FormatCellAutomation.encode(to:)(a1, a2);
}

uint64_t *sub_1C00C4064(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

void *sub_1C00C416C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_1C00C4204(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1C00C4274(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C00C42FC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1C00C449C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1C00C46FCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 16] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t *sub_1C00C4724(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    uint64_t v12 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 16) & ~v6;
    unsigned int v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
    *(void *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v7 + v13) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C00C485C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  return swift_bridgeObjectRelease();
}

void *sub_1C00C48F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  swift_bridgeObjectRetain();
  v6(v9, v10, v5);
  *(void *)((*(void *)(v7 + 48) + 7 + v9) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v7 + 48) + 7 + v10) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C00C49A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  *(void *)((*(void *)(v7 + 40) + 7 + v9) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v7 + 40) + 7 + v10) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1C00C4A78(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  *(void *)((*(void *)(v5 + 32) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1C00C4B18(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  *(void *)((*(void *)(v8 + 24) + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v8 + 24) + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C00C4BD0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)(a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)(a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C00C4D28);
      case 4:
        int v14 = *(_DWORD *)(a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *(_DWORD *)a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v6 + 16) & ~v6);
  }
  unint64_t v17 = *(void *)(a1 + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C00C4D3C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v18 = (unint64_t)&a1[v9 + 16] & ~v9;
              uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
              v19(v18);
            }
            else if ((a2 & 0x80000000) != 0)
            {
              *(void *)a1 = a2 ^ 0x80000000;
              *((void *)a1 + 1) = 0;
            }
            else
            {
              *((void *)a1 + 1) = a2 - 1;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1C00C4F30);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

unsigned char *sub_1C00C4F58(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C00C5024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C00C504C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C00C5118);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C00C5140()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C00C515C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C00C5178()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C00C5194()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C00C51B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C00C51CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C00C51E8()
{
  return 2;
}

uint64_t sub_1C00C51F0()
{
  return 3;
}

uint64_t sub_1C00C51FC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C00C5240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v53 = a3;
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v4 = *v3;
  uint64_t v62 = sub_1C151631C();
  uint64_t v5 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v50 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCD9524();
  int v58 = (char *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v57 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v4 + 88);
  uint64_t v52 = v3;
  uint64_t v63 = *(void *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v55 = AssociatedTypeWitness;
  uint64_t v56 = v11;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  int v13 = (char *)&v50 - v12;
  uint64_t v14 = swift_checkMetadataState();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  int v17 = (char *)&v50 - v16;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v51 = (uint64_t)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v50 - v21;
  __n128 v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v50 - v25;
  uint64_t v27 = v62;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v50 - v25, v60 + qword_1EB93C670, v62, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v26, 0, 1, v27);
  char v28 = *(void (**)(uint64_t, uint64_t))(v9 + 64);
  uint64_t v59 = v9;
  v28(v63, v9);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v14, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v29 = (uint64_t)v57;
  uint64_t v30 = v55;
  uint64_t v31 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(v31 + 40))(v30, v31);
  id v32 = v13;
  uint64_t v33 = v62;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v30);
  uint64_t v34 = v29 + *((int *)v58 + 14);
  sub_1BFF97B80((uint64_t)v26, v29);
  sub_1BFF97B80((uint64_t)v22, v34);
  char v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v35(v29, 1, v33) == 1)
  {
    sub_1BFE545EC((uint64_t)v22, (uint64_t (*)(void))sub_1BFF97C40);
    sub_1BFE545EC((uint64_t)v26, (uint64_t (*)(void))sub_1BFF97C40);
    if (v35(v34, 1, v33) == 1)
    {
      sub_1BFE545EC(v29, (uint64_t (*)(void))sub_1BFF97C40);
LABEL_8:
      type metadata accessor for FeedServiceError();
      swift_getWitnessTable();
      swift_allocError();
      *(void *)uint64_t v40 = 1;
      *(void *)(v40 + 8) = 0;
      *(void *)(v40 + 16) = 0;
      *(void *)(v40 + 24) = 0;
      *(unsigned char *)(v40 + 32) = 6;
      return swift_willThrow();
    }
    goto LABEL_6;
  }
  int v58 = v22;
  uint64_t v36 = v51;
  sub_1BFF97B80(v29, v51);
  if (v35(v34, 1, v33) == 1)
  {
    sub_1BFE545EC((uint64_t)v58, (uint64_t (*)(void))sub_1BFF97C40);
    sub_1BFE545EC((uint64_t)v26, (uint64_t (*)(void))sub_1BFF97C40);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v36, v33);
LABEL_6:
    sub_1BFE545EC(v29, (uint64_t (*)(void))sub_1BFCD9524);
    goto LABEL_9;
  }
  char v37 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v50, v34, v33);
  sub_1BFC3B55C();
  char v38 = sub_1C151E5CC();
  unint64_t v39 = *(void (**)(char *, uint64_t))(v5 + 8);
  v39(v37, v33);
  sub_1BFE545EC((uint64_t)v58, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1BFE545EC((uint64_t)v26, (uint64_t (*)(void))sub_1BFF97C40);
  v39((char *)v36, v33);
  sub_1BFE545EC(v29, (uint64_t (*)(void))sub_1BFF97C40);
  if (v38) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v42 = v52[2];
  uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v52[3];
  uint64_t v44 = v52[4];
  uint64_t v45 = *(void *)(v60 + *(void *)(*(void *)v60 + 280));
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = v63;
  uint64_t v48 = v59;
  *(void *)(v46 + 16) = v63;
  *(void *)(v46 + 24) = v48;
  sub_1C02675A4(v61, v45, (uint64_t)sub_1C00C5B10, v46, (uint64_t)sub_1C00C5AD8, 0, v42, v43, v44, v47, v48);
  swift_release();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v49 = sub_1C151ECBC();
  return sub_1BFE1443C(v49, v53);
}

uint64_t (*sub_1C00C5A20(uint64_t a1, uint64_t a2))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  return sub_1C00C5B10;
}

uint64_t sub_1C00C5A74()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PublishDateFeedRefreshStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C00C5AD8()
{
  nullsub_1();
  return swift_retain();
}

uint64_t sub_1C00C5B00()
{
  return swift_deallocObject();
}

uint64_t sub_1C00C5B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0267830(a1, a2);
}

uint64_t FormatStateMachineData.deinit()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEC41E8(v1, v2, v3, v4, v5);
  sub_1C00C5B90(*(void *)(v0 + 72));
  return v0;
}

uint64_t sub_1C00C5B90(uint64_t a1)
{
  if (a1 < 0)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_release();
  }
}

uint64_t FormatStateMachineData.__deallocating_deinit()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEC41E8(v1, v2, v3, v4, v5);
  sub_1C00C5B90(*(void *)(v0 + 72));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatStateMachineData()
{
  return self;
}

uint64_t method lookup function for FormatStateMachineData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatStateMachineData);
}

unint64_t sub_1C00C5CAC(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0x676E6970756F7267;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C00C5D94(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0x676E6970756F7267;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C00C5E7C(unsigned __int8 *a1, char *a2)
{
  return sub_1C1493970(*a1, *a2);
}

uint64_t sub_1C00C5E88()
{
  return sub_1C0450ECC();
}

uint64_t sub_1C00C5E94()
{
  return sub_1C044B9F8();
}

uint64_t sub_1C00C5E9C()
{
  return sub_1C0450ECC();
}

uint64_t sub_1C00C5EA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C00C9B68();
  *a1 = result;
  return result;
}

unint64_t sub_1C00C5ED4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C00C5CAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C00C5F00()
{
  return sub_1C00C5D94(*v0);
}

uint64_t sub_1C00C5F08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C00C9B68();
  *a1 = result;
  return result;
}

void sub_1C00C5F30(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1C00C5F3C(uint64_t a1)
{
  unint64_t v2 = sub_1C00C9140();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C00C5F78(uint64_t a1)
{
  unint64_t v2 = sub_1C00C9140();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupClusteringKnobs.minNumberOfItems.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobs.maxNumberOfItems.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobs.bundleArticleQuotas.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobs.explicitSlotBundleArticleQuotas.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobs.groupingRules.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v7 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[11];
  uint64_t v10 = v1[12];
  uint64_t v11 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return sub_1C00C6020(v2);
}

uint64_t sub_1C00C6020(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t FeedGroupClusteringKnobs.minNumberOfItemsDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobs.maxNumberOfItemsDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobs.splittingConfiguration.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobs.init(overrides:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C1516D9C();
  MEMORY[0x1F4188790](v4);
  long long v8 = a1[7];
  long long v60 = a1[6];
  long long v61 = v8;
  uint64_t v62 = *((void *)a1 + 16);
  long long v9 = a1[1];
  long long v54 = *a1;
  long long v55 = v9;
  long long v10 = a1[3];
  long long v56 = a1[2];
  long long v57 = v10;
  long long v11 = a1[5];
  long long v58 = a1[4];
  long long v59 = v11;
  if ((void)v54 && *((void *)&v54 + 1))
  {
    uint64_t v29 = v7;
    uint64_t v30 = v5;
    uint64_t v12 = v55;
    char v28 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v39 = v54;
    uint64_t v40 = a2;
    uint64_t v38 = *((void *)&v54 + 1);
    if ((void)v55)
    {
      swift_retain();
      swift_retain();
      uint64_t v35 = v12;
      uint64_t v37 = v12;
    }
    else
    {
      uint64_t v14 = qword_1EB865328;
      swift_retain();
      swift_retain();
      if (v14 != -1) {
        swift_once();
      }
      uint64_t v37 = qword_1EB865318;
      swift_retain();
      uint64_t v35 = 0;
    }
    uint64_t v15 = v56;
    uint64_t v34 = *((void *)&v57 + 1);
    long long v42 = v56;
    long long v43 = v57;
    long long v44 = v58;
    long long v45 = v59;
    long long v46 = v60;
    uint64_t v36 = *((void *)&v55 + 1);
    swift_retain();
    sub_1C00C8EAC(v15);
    swift_retain();
    sub_1C033DC20((uint64_t *)&v42, (uint64_t)v41);
    uint64_t v16 = v41[0];
    uint64_t v17 = v41[1];
    uint64_t v18 = v41[2];
    uint64_t v19 = v41[3];
    uint64_t v20 = v41[4];
    uint64_t v34 = v41[6];
    uint64_t v35 = v41[5];
    uint64_t v32 = v41[8];
    uint64_t v33 = v41[7];
    uint64_t v31 = v41[9];
    if ((void)v61)
    {
      uint64_t v22 = *((void *)&v61 + 1);
      uint64_t v21 = v61;
      if (*((void *)&v61 + 1))
      {
LABEL_11:
        swift_retain();
        uint64_t v23 = v22;
LABEL_14:
        uint64_t v26 = v62;
        swift_retain();
        swift_retain();
        sub_1C00C64D0((uint64_t)&v54);
        *(void *)&long long v42 = v39;
        *((void *)&v42 + 1) = v38;
        *(void *)&long long v43 = v37;
        *((void *)&v43 + 1) = v36;
        *(void *)&long long v44 = v16;
        *((void *)&v44 + 1) = v17;
        *(void *)&long long v45 = v18;
        *((void *)&v45 + 1) = v19;
        *(void *)&long long v46 = v20;
        *((void *)&v46 + 1) = v35;
        uint64_t v47 = v34;
        uint64_t v48 = v33;
        uint64_t v49 = v32;
        uint64_t v50 = v31;
        uint64_t v51 = v21;
        uint64_t v52 = v23;
        uint64_t v53 = v26;
        nullsub_1(&v42);
        uint64_t v13 = v40;
        return sub_1C00C6684((uint64_t)&v42, v13);
      }
    }
    else
    {
      __n128 v24 = v28;
      sub_1C1516D8C();
      sub_1BFCD407C();
      uint64_t v21 = swift_allocObject();
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v21 + *(void *)(*(void *)v21 + 112), v24, v30);
      *(void *)(v21 + *(void *)(*(void *)v21 + 120)) = MEMORY[0x1E4FBC860];
      uint64_t v22 = *((void *)&v61 + 1);
      if (*((void *)&v61 + 1)) {
        goto LABEL_11;
      }
    }
    swift_retain();
    uint64_t v25 = v28;
    sub_1C1516D8C();
    sub_1BFCD407C();
    uint64_t v23 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v23 + *(void *)(*(void *)v23 + 112), v25, v30);
    *(void *)(v23 + *(void *)(*(void *)v23 + 120)) = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  sub_1C00C64D0((uint64_t)&v54);
  sub_1C00C6668((uint64_t)&v42);
  uint64_t v13 = a2;
  return sub_1C00C6684((uint64_t)&v42, v13);
}

uint64_t sub_1C00C64D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1C00C65A8(v3);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1C00C65A8(uint64_t result)
{
  if (result != 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

double sub_1C00C6668(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1C00C6684(uint64_t a1, uint64_t a2)
{
  sub_1BFC77FBC(0, &qword_1EA196AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double FeedGroupClusteringKnobs.init(minNumberOfItems:maxNumberOfItems:bundleArticleQuotas:explicitSlotBundleArticleQuotas:groupingRules:minNumberOfItemsDepthTransform:maxNumberOfItemsDepthTransform:splittingConfiguration:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v43 = a8;
  uint64_t v37 = a3;
  uint64_t v16 = sub_1C1516D9C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = *a5;
  long long v41 = a5[1];
  long long v42 = v20;
  long long v21 = a5[2];
  long long v39 = a5[3];
  long long v40 = v21;
  long long v38 = a5[4];
  uint64_t v36 = v17;
  if (!a6)
  {
    swift_retain();
    uint64_t v35 = a1;
    swift_retain();
    swift_retain();
    uint64_t v29 = v37;
    swift_retain();
    sub_1C1516D8C();
    sub_1BFCD407C();
    uint64_t v23 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v23 + *(void *)(*(void *)v23 + 112), v19, v16);
    *(void *)(v23 + *(void *)(*(void *)v23 + 120)) = MEMORY[0x1E4FBC860];
    uint64_t v24 = v16;
    uint64_t v25 = a4;
    uint64_t v26 = v29;
    uint64_t v27 = a2;
    uint64_t v28 = v35;
    if (a7) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v30 = v24;
    swift_retain();
    sub_1C1516D8C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1BFCD407C();
    a7 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(a7 + *(void *)(*(void *)a7 + 112), v19, v30);
    *(void *)(a7 + *(void *)(*(void *)a7 + 120)) = MEMORY[0x1E4FBC860];
    goto LABEL_6;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = swift_retain();
  uint64_t v23 = a6;
  uint64_t v24 = v16;
  uint64_t v25 = a4;
  uint64_t v26 = v22;
  uint64_t v27 = a2;
  uint64_t v28 = a1;
  if (!a7) {
    goto LABEL_5;
  }
LABEL_3:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
LABEL_6:
  *(void *)a9 = v28;
  *(void *)(a9 + 8) = v27;
  *(void *)(a9 + 16) = v26;
  *(void *)(a9 + 24) = v25;
  long long v31 = v41;
  *(_OWORD *)(a9 + 32) = v42;
  *(_OWORD *)(a9 + 48) = v31;
  long long v32 = v39;
  *(_OWORD *)(a9 + 64) = v40;
  *(_OWORD *)(a9 + 80) = v32;
  double result = *(double *)&v38;
  *(_OWORD *)(a9 + 96) = v38;
  *(void *)(a9 + 112) = v23;
  *(void *)(a9 + 120) = a7;
  *(void *)(a9 + 128) = v43;
  return result;
}

double FeedGroupClusteringKnobs.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C1516D9C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDC6E38();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 16) = 1;
  *(void *)(v6 + 24) = v7;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(v8 + 24) = v7;
  if (qword_1EB865328 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1EB865318;
  swift_retain();
  sub_1C1516D8C();
  sub_1BFCD407C();
  uint64_t v10 = swift_allocObject();
  long long v11 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v11(v10 + *(void *)(*(void *)v10 + 112), v5, v2);
  *(void *)(v10 + *(void *)(*(void *)v10 + 120)) = MEMORY[0x1E4FBC860];
  sub_1C1516D8C();
  uint64_t v12 = swift_allocObject();
  v11(v12 + *(void *)(*(void *)v12 + 112), v5, v2);
  *(void *)(v12 + *(void *)(*(void *)v12 + 120)) = MEMORY[0x1E4FBC860];
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v9;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = v10;
  *(void *)(a1 + 120) = v12;
  *(void *)(a1 + 128) = 0;
  return result;
}

__n128 FeedGroupClusteringKnobs.init(minNumberOfItems:maxNumberOfItems:bundleArticleQuotas:explicitSlotBundleArticleQuotas:groupingRules:minNumberOfItemsDepthTransform:maxNumberOfItemsDepthTransform:splittingConfiguration:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v32 = a7;
  uint64_t v31 = a6;
  uint64_t v30 = a5;
  uint64_t v13 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v29 = *(_OWORD *)a4;
  long long v28 = *(_OWORD *)(a4 + 16);
  long long v27 = *(_OWORD *)(a4 + 32);
  long long v26 = *(_OWORD *)(a4 + 48);
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v17 = *(void *)(a4 + 72);
  sub_1BFDC6E38();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = v19;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = v19;
  sub_1C00C8F70(a2, (uint64_t)v15);
  sub_1C00C8FD4();
  uint64_t v21 = swift_allocObject();
  sub_1C00C90D8((uint64_t)v15, v21 + *(void *)(*(void *)v21 + 112), (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
  *(void *)(v21 + *(void *)(*(void *)v21 + 120)) = v19;
  v33[0] = v29;
  v33[1] = v28;
  v33[2] = v27;
  v33[3] = v26;
  uint64_t v34 = v16;
  uint64_t v35 = v17;
  FeedGroupClusteringKnobs.init(minNumberOfItems:maxNumberOfItems:bundleArticleQuotas:explicitSlotBundleArticleQuotas:groupingRules:minNumberOfItemsDepthTransform:maxNumberOfItemsDepthTransform:splittingConfiguration:)(v18, v20, v21, a3, v33, v30, v31, v32, (uint64_t)v36);
  sub_1C00CA85C(a2, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
  long long v22 = v36[7];
  *(_OWORD *)(a8 + 96) = v36[6];
  *(_OWORD *)(a8 + 112) = v22;
  *(void *)(a8 + 128) = v37;
  long long v23 = v36[3];
  *(_OWORD *)(a8 + 32) = v36[2];
  *(_OWORD *)(a8 + 48) = v23;
  long long v24 = v36[5];
  *(_OWORD *)(a8 + 64) = v36[4];
  *(_OWORD *)(a8 + 80) = v24;
  __n128 result = (__n128)v36[1];
  *(_OWORD *)a8 = v36[0];
  *(__n128 *)(a8 + 16) = result;
  return result;
}

uint64_t FeedGroupClusteringKnobs.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  sub_1C00C92EC(0, &qword_1EB86B620, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v33 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v28 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C00C9140();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v32 = v7;
  v28[0] = (uint64_t)a1;
  v28[1] = 0;
  uint64_t v12 = v33;
  sub_1BFDC6E38();
  LOBYTE(v38) = 0;
  sub_1BFCD41D4(&qword_1EB8866D8, (void (*)(uint64_t))sub_1BFDC6E38);
  sub_1C15205FC();
  if (*(void *)&v44[0])
  {
    uint64_t v31 = *(void *)&v44[0];
  }
  else
  {
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = MEMORY[0x1E4FBC860];
    *(void *)(v13 + 16) = 1;
    *(void *)(v13 + 24) = v14;
    uint64_t v31 = v13;
  }
  LOBYTE(v38) = 1;
  sub_1C15205FC();
  if (*(void *)&v44[0])
  {
    uint64_t v30 = *(void *)&v44[0];
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = MEMORY[0x1E4FBC860];
    *(void *)(v15 + 16) = 1000;
    *(void *)(v15 + 24) = v16;
    uint64_t v30 = v15;
  }
  sub_1C00C8FD4();
  LOBYTE(v44[0]) = 3;
  sub_1BFCD41D4(&qword_1EB865338, (void (*)(uint64_t))sub_1C00C8FD4);
  sub_1C15205FC();
  uint64_t v17 = v43;
  uint64_t v18 = v32;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v32, v10, v5);
  uint64_t v33 = v17;
  if (v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v29 = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v19(v18, v5);
  }
  else
  {
    LOBYTE(v38) = 2;
    sub_1C15205FC();
    if (*(void *)&v44[0])
    {
      uint64_t v33 = *(void *)&v44[0];
    }
    else
    {
      if (qword_1EB865328 != -1) {
        swift_once();
      }
      uint64_t v33 = qword_1EB865318;
      swift_retain();
    }
    uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v29 = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v19(v32, v5);
  }
  LOBYTE(v44[0]) = 4;
  sub_1C00C9194();
  sub_1C15205FC();
  v37[0] = v38;
  v37[1] = v39;
  v37[2] = v40;
  v37[3] = v41;
  v37[4] = v42;
  sub_1BFCD407C();
  LOBYTE(v44[0]) = 5;
  sub_1BFCD41D4(&qword_1EB862CB0, (void (*)(uint64_t))sub_1BFCD407C);
  sub_1C15205FC();
  uint64_t v20 = v36;
  LOBYTE(v44[0]) = 6;
  sub_1C15205FC();
  uint64_t v21 = v35;
  sub_1C00C91E8();
  LOBYTE(v44[0]) = 7;
  sub_1BFCD41D4(&qword_1EB862C88, (void (*)(uint64_t))sub_1C00C91E8);
  sub_1C15205FC();
  double v22 = FeedGroupClusteringKnobs.init(minNumberOfItems:maxNumberOfItems:bundleArticleQuotas:explicitSlotBundleArticleQuotas:groupingRules:minNumberOfItemsDepthTransform:maxNumberOfItemsDepthTransform:splittingConfiguration:)(v31, v30, v33, 0, v37, v20, v21, v34, (uint64_t)v44);
  ((void (*)(char *, uint64_t, double))v19)(v10, v5, v22);
  long long v23 = v44[7];
  uint64_t v24 = v46;
  *(_OWORD *)(v46 + 96) = v44[6];
  *(_OWORD *)(v24 + 112) = v23;
  *(void *)(v24 + 128) = v45;
  long long v25 = v44[3];
  *(_OWORD *)(v24 + 32) = v44[2];
  *(_OWORD *)(v24 + 48) = v25;
  long long v26 = v44[5];
  *(_OWORD *)(v24 + 64) = v44[4];
  *(_OWORD *)(v24 + 80) = v26;
  long long v27 = v44[1];
  *(_OWORD *)uint64_t v24 = v44[0];
  *(_OWORD *)(v24 + 16) = v27;
  return __swift_destroy_boxed_opaque_existential_1(v28[0]);
}

uint64_t FeedGroupClusteringKnobs.encode(to:)(void *a1)
{
  sub_1C00C92EC(0, &qword_1EB86B848, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v30 = v1[2];
  uint64_t v31 = v8;
  uint64_t v10 = v1[4];
  uint64_t v28 = v1[5];
  uint64_t v29 = v10;
  uint64_t v11 = v1[6];
  uint64_t v26 = v1[7];
  uint64_t v27 = v11;
  uint64_t v12 = v1[8];
  uint64_t v24 = v1[9];
  uint64_t v25 = v12;
  uint64_t v13 = v1[10];
  uint64_t v22 = v1[11];
  uint64_t v23 = v13;
  uint64_t v21 = v1[12];
  uint64_t v20 = v1[13];
  uint64_t v19 = v1[14];
  uint64_t v14 = v1[16];
  uint64_t v18 = v1[15];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C00C9140();
  sub_1C1520F0C();
  uint64_t v33 = v9;
  char v43 = 0;
  sub_1BFDC6E38();
  sub_1BFCD41D4(qword_1EB865388, (void (*)(uint64_t))sub_1BFDC6E38);
  uint64_t v15 = v32;
  sub_1C152080C();
  if (!v15)
  {
    uint64_t v16 = v30;
    uint64_t v33 = v31;
    char v43 = 1;
    sub_1C152080C();
    uint64_t v33 = v16;
    char v43 = 3;
    sub_1C00C8FD4();
    sub_1BFCD41D4(&qword_1EB865330, (void (*)(uint64_t))sub_1C00C8FD4);
    sub_1C152080C();
    uint64_t v33 = v29;
    uint64_t v34 = v28;
    uint64_t v35 = v27;
    uint64_t v36 = v26;
    uint64_t v37 = v25;
    uint64_t v38 = v24;
    uint64_t v39 = v23;
    uint64_t v40 = v22;
    uint64_t v41 = v21;
    uint64_t v42 = v20;
    char v43 = 4;
    sub_1BFC77FBC(0, &qword_1EB865238);
    sub_1C00C9350();
    sub_1C152080C();
    uint64_t v33 = v19;
    char v43 = 5;
    sub_1BFCD407C();
    sub_1BFCD41D4(&qword_1EB862CA8, (void (*)(uint64_t))sub_1BFCD407C);
    sub_1C152080C();
    uint64_t v33 = v18;
    char v43 = 6;
    sub_1C152080C();
    uint64_t v33 = v14;
    char v43 = 7;
    sub_1BFF90254(0, &qword_1EB862C98, (void (*)(uint64_t))sub_1C00C91E8);
    sub_1C00C9424();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C00C7854@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupClusteringKnobs.init(from:)(a1, a2);
}

uint64_t sub_1C00C786C(void *a1)
{
  return FeedGroupClusteringKnobs.encode(to:)(a1);
}

uint64_t FeedGroupClusteringKnobs.merge(with:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v60 = a1[3];
  uint64_t v62 = a1[4];
  uint64_t v55 = a1[7];
  uint64_t v56 = a1[6];
  uint64_t v53 = a1[9];
  uint64_t v54 = a1[8];
  uint64_t v45 = a1[10];
  uint64_t v46 = a1[5];
  uint64_t v44 = a1[11];
  uint64_t v6 = a1[14];
  uint64_t v51 = a1[13];
  uint64_t v52 = a1[12];
  uint64_t v7 = a1[15];
  uint64_t v8 = a1[16];
  uint64_t v58 = v2[2];
  uint64_t v59 = v2[1];
  uint64_t v9 = v2[4];
  uint64_t v63 = v2[6];
  uint64_t v64 = v2[5];
  uint64_t v65 = v2[7];
  uint64_t v66 = v2[9];
  uint64_t v10 = v2[11];
  uint64_t v57 = v2[10];
  uint64_t v47 = v2[13];
  uint64_t v48 = v2[12];
  uint64_t v49 = v2[15];
  uint64_t v50 = v2[14];
  uint64_t v67 = v2[8];
  if (*a1)
  {
    uint64_t v43 = *a1;
    uint64_t v11 = a1[4];
    if (v4) {
      goto LABEL_3;
    }
LABEL_6:
    swift_retain();
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t v43 = *v2;
  swift_retain();
  uint64_t v11 = v62;
  if (!v4) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v59 = v4;
  if (v5)
  {
LABEL_4:
    uint64_t v58 = v5;
    goto LABEL_8;
  }
LABEL_7:
  swift_retain();
LABEL_8:
  uint64_t v61 = v9;
  if (v11 == 1)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v12 = v47;
    uint64_t v13 = v48;
    sub_1C00C6020(v9);
    uint64_t v14 = v57;
    uint64_t v16 = v49;
    uint64_t v15 = v50;
    if (v6) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v42 = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C00C8EAC(v62);
    if (v9)
    {
      uint64_t v24 = v66;
      uint64_t v25 = v47;
      uint64_t v26 = v48;
      uint64_t v27 = v10;
      uint64_t v28 = v57;
      uint64_t v29 = v67;
      uint64_t v30 = v65;
      uint64_t v31 = v63;
      uint64_t v32 = v64;
      uint64_t v33 = v9;
    }
    else
    {
      static FeedGroupGroupingRules.noRules.getter(v69);
      uint64_t v33 = v69[0];
      uint64_t v32 = v69[1];
      uint64_t v31 = v69[2];
      uint64_t v30 = v69[3];
      uint64_t v29 = v69[4];
      uint64_t v24 = v69[5];
      uint64_t v28 = v69[6];
      uint64_t v27 = v69[7];
      uint64_t v26 = v69[8];
      uint64_t v25 = v69[9];
    }
    v68[10] = v33;
    v68[11] = v32;
    v68[12] = v31;
    v68[13] = v30;
    v68[14] = v29;
    v68[15] = v24;
    v68[16] = v28;
    v68[17] = v27;
    v68[18] = v26;
    v68[19] = v25;
    v68[0] = v62;
    v68[1] = v46;
    v68[2] = v56;
    v68[3] = v55;
    v68[4] = v54;
    v68[5] = v53;
    v68[6] = v45;
    v68[7] = v44;
    v68[8] = v52;
    v68[9] = v51;
    FeedGroupGroupingRules.merge(with:)(v68, v70);
    sub_1C00C6020(v9);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1C00C65A8(v62);
    uint64_t v61 = v70[0];
    uint64_t v64 = v70[1];
    uint64_t v63 = v70[2];
    uint64_t v65 = v70[3];
    uint64_t v67 = v70[4];
    uint64_t v14 = v70[6];
    uint64_t v66 = v70[5];
    uint64_t v10 = v70[7];
    uint64_t v13 = v70[8];
    uint64_t v12 = v70[9];
    uint64_t v6 = v42;
    uint64_t v16 = v49;
    uint64_t v15 = v50;
    if (v42)
    {
LABEL_10:
      uint64_t v15 = v6;
      if (v7) {
        goto LABEL_11;
      }
      goto LABEL_21;
    }
  }
  uint64_t v34 = v12;
  uint64_t v35 = v13;
  uint64_t v36 = v10;
  uint64_t v37 = v14;
  swift_retain();
  uint64_t v14 = v37;
  uint64_t v10 = v36;
  uint64_t v13 = v35;
  uint64_t v12 = v34;
  if (v7)
  {
LABEL_11:
    uint64_t v16 = v7;
    uint64_t v17 = v8;
    if (v8) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_21:
  uint64_t v38 = v12;
  uint64_t v39 = v13;
  uint64_t v40 = v10;
  uint64_t v41 = v14;
  swift_retain();
  uint64_t v14 = v41;
  uint64_t v10 = v40;
  uint64_t v13 = v39;
  uint64_t v12 = v38;
  uint64_t v17 = v8;
  if (!v8)
  {
LABEL_12:
    uint64_t v18 = v12;
    uint64_t v19 = v13;
    uint64_t v20 = v10;
    uint64_t v21 = v14;
    uint64_t v22 = swift_retain();
    uint64_t v14 = v21;
    uint64_t v10 = v20;
    uint64_t v13 = v19;
    uint64_t v12 = v18;
    uint64_t v17 = v22;
  }
LABEL_13:
  *a2 = v43;
  a2[1] = v59;
  a2[2] = v58;
  a2[3] = v60;
  a2[4] = v61;
  a2[5] = v64;
  a2[6] = v63;
  a2[7] = v65;
  a2[8] = v67;
  a2[9] = v66;
  a2[10] = v14;
  a2[11] = v10;
  a2[12] = v13;
  a2[13] = v12;
  a2[14] = v15;
  a2[15] = v16;
  a2[16] = v17;
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobs.rules(for:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v70 = a2;
  sub_1BFF90234(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v73 = (uint64_t)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v9 = v2[4];
  uint64_t v10 = v2[6];
  uint64_t v67 = v2[5];
  uint64_t v68 = v10;
  uint64_t v69 = v2[8];
  unint64_t v11 = *(void *)(v7 + 24);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v12 = *(void *)(a1 + *(int *)(type metadata accessor for FeedContext() + 40));
    uint64_t v13 = *(void *)(v7 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_1C00C9BB4(v13, v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v72 = *(void *)(v7 + 16);
LABEL_6:
  unint64_t v15 = *(void *)(v6 + 24);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_8;
    }
  }
  else if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    uint64_t v16 = *(void *)(a1 + *(int *)(type metadata accessor for FeedContext() + 40));
    uint64_t v17 = *(void *)(v6 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1C00C9BB4(v17, v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v71 = *(void *)(v6 + 16);
LABEL_11:
  unint64_t v19 = *(void *)(v8 + *(void *)(*(void *)v8 + 120));
  uint64_t v20 = v73;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_13;
    }
  }
  else if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    uint64_t v21 = *(void *)(a1 + *(int *)(type metadata accessor for FeedContext() + 40));
    uint64_t v22 = v8 + *(void *)(*(void *)v8 + 112);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C00C8868(v22, v19, v21, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_1C00C8F70(v8 + *(void *)(*(void *)v8 + 112), v20);
LABEL_16:
  uint64_t v24 = type metadata accessor for FeedGroupBundleArticleQuotas();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v20, 0, 1, v24);
  uint64_t v25 = v9;
  if (v9)
  {
    unint64_t v26 = *(void *)(v9 + 24);
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      uint64_t v27 = v69;
      if (v37) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v27 = v69;
      if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_19:
        uint64_t v28 = *(void *)(a1 + *(int *)(type metadata accessor for FeedContext() + 40));
        uint64_t v25 = v9;
        uint64_t v29 = *(void *)(v9 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_1C00C9BB4(v29, v26, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    uint64_t v25 = v9;
    uint64_t v30 = *(void *)(v9 + 16);
LABEL_23:
    uint64_t v38 = v67;
    unint64_t v39 = *(void *)(v67 + 24);
    if (v39 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      uint64_t v66 = v30;
      if (v44) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v66 = v30;
      if (v40)
      {
LABEL_25:
        uint64_t v41 = *(void *)(a1 + *(int *)(type metadata accessor for FeedContext() + 40));
        uint64_t v42 = *(void *)(v38 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1C00C9BB4(v42, v39, v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
    uint64_t v43 = *(void *)(v38 + 16);
LABEL_28:
    uint64_t v45 = v68;
    unint64_t v46 = *(void *)(v68 + 24);
    if (v46 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v50) {
        goto LABEL_30;
      }
    }
    else if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_30:
      uint64_t v47 = *(void *)(a1 + *(int *)(type metadata accessor for FeedContext() + 40));
      uint64_t v48 = *(void *)(v45 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1C00C9BB4(v48, v46, v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    uint64_t v49 = *(void *)(v45 + 16);
LABEL_33:
    uint64_t v68 = v49;
    unint64_t v51 = *(void *)(v27 + 56);
    if (v51 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      uint64_t v32 = v43;
      if (v55) {
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v32 = v43;
      if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_35:
        uint64_t v52 = *(void *)(a1 + *(int *)(type metadata accessor for FeedContext() + 40));
        long long v53 = *(_OWORD *)(v27 + 32);
        v79[0] = *(_OWORD *)(v27 + 16);
        v79[1] = v53;
        uint64_t v80 = *(void *)(v27 + 48);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1C00C8430((uint64_t)v79, v51, v52, &v74);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v34 = v74;
        unsigned int v54 = v75;
        uint64_t v35 = v76;
        LODWORD(v27) = v77;
        uint64_t v36 = v78;
LABEL_38:
        uint64_t v69 = v54;
        uint64_t v27 = v27;
        uint64_t v31 = v66;
        uint64_t v33 = v68;
        goto LABEL_39;
      }
    }
    uint64_t v34 = *(void *)(v27 + 16);
    unsigned int v54 = *(unsigned __int8 *)(v27 + 24);
    uint64_t v35 = *(void *)(v27 + 32);
    uint64_t v56 = v27;
    LODWORD(v27) = *(unsigned __int8 *)(v27 + 40);
    uint64_t v36 = *(void *)(v56 + 48);
    swift_bridgeObjectRetain();
    goto LABEL_38;
  }
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v69 = 0;
  uint64_t v35 = 0;
  uint64_t v27 = 0;
  uint64_t v36 = 1;
LABEL_39:
  uint64_t v57 = v70;
  uint64_t *v70 = v72;
  BOOL v58 = v25 == 0;
  *((unsigned char *)v57 + 8) = 0;
  v57[2] = v71;
  *((unsigned char *)v57 + 24) = 0;
  uint64_t v59 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t result = sub_1C00C90D8(v73, (uint64_t)v57 + v59[6], (uint64_t (*)(void))sub_1BFF90234);
  uint64_t v61 = (char *)v57 + v59[7];
  *(void *)uint64_t v61 = v31;
  v61[8] = v58;
  uint64_t v62 = (char *)v57 + v59[8];
  *(void *)uint64_t v62 = v32;
  v62[8] = v58;
  uint64_t v63 = (char *)v57 + v59[9];
  *(void *)uint64_t v63 = v33;
  v63[8] = v58;
  uint64_t v64 = (uint64_t *)((char *)v57 + v59[10]);
  uint64_t v65 = v69;
  *uint64_t v64 = v34;
  v64[1] = v65;
  v64[2] = v35;
  v64[3] = v27;
  v64[4] = v36;
  return result;
}

uint64_t sub_1C00C8430@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v50 = a3;
  unint64_t v4 = a2;
  uint64_t v37 = a4;
  v52[2] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v40 = *(void *)(a1 + 16);
  uint64_t v41 = v5;
  uint64_t v7 = *(void *)(a1 + 32);
  int v38 = *(unsigned char *)(a1 + 24) & 1;
  int v39 = v6 & 1;
  if (a2 >> 62) {
    goto LABEL_28;
  }
  uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1C00CA830(a1);
  swift_bridgeObjectRetain();
  if (!v8)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v34 = v37;
    *uint64_t v37 = v41;
    *((unsigned char *)v34 + 8) = v39 & 1;
    v34[2] = v40;
    *((unsigned char *)v34 + 24) = v38 & 1;
    v34[4] = v7;
    return result;
  }
LABEL_3:
  uint64_t v9 = 0;
  unint64_t v44 = v4;
  unint64_t v45 = v4 & 0xC000000000000001;
  unint64_t v42 = v4 + 32;
  uint64_t v43 = v8;
  while (1)
  {
    if (v45)
    {
      a1 = MEMORY[0x1C18C7CB0](v9, v4);
      uint64_t v10 = a1;
      BOOL v11 = __OFADD__(v9++, 1);
      if (v11) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v10 = *(void *)(v42 + 8 * v9);
      a1 = swift_retain();
      BOOL v11 = __OFADD__(v9++, 1);
      if (v11)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        sub_1C00CA830(a1);
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_1C15204BC();
        if (!v8) {
          goto LABEL_29;
        }
        goto LABEL_3;
      }
    }
    if (qword_1EB87F148 != -1) {
      swift_once();
    }
    uint64_t v49 = v10;
    uint64_t v12 = *(void *)(v10 + 16);
    uint64_t v13 = *(void *)(v10 + 24);
    v52[0] = v12;
    v52[1] = v13;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1BFEF53C0(v52);
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
    if (v9 == v8) {
      goto LABEL_29;
    }
  }
  uint64_t v47 = v7;
  uint64_t v48 = v9;
  uint64_t v46 = v14;
  uint64_t v16 = (uint64_t *)(v14 + 64);
  while (1)
  {
    uint64_t v17 = *(v16 - 1);
    uint64_t v18 = *v16;
    char v19 = *(unsigned char *)(v17 + 32);
    unsigned int v20 = v19 & 0x3F;
    unint64_t v21 = (unint64_t)((1 << v19) + 63) >> 6;
    size_t v22 = 8 * v21;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v20 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v24 = (char *)swift_slowAlloc();
    bzero(v24, v22);
    id v27 = v51;
    uint64_t v28 = sub_1BFEFB09C((uint64_t)v24, v21, v17, v50);
    id v51 = v27;
    if (v27) {
      goto LABEL_30;
    }
    uint64_t v26 = v28;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C9B00](v24, -1, -1);
LABEL_23:
    char v29 = sub_1BFEFAE14(v26, v17);
    swift_release();
    if (v29)
    {
      char v30 = sub_1BFEFB810(v50, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30)
      {
        uint64_t v31 = *(void *)(v49 + 32);
        int v32 = *(unsigned __int8 *)(v49 + 40);
        uint64_t v40 = *(void *)(v49 + 48);
        uint64_t v41 = v31;
        int v38 = *(unsigned __int8 *)(v49 + 56);
        int v39 = v32;
        uint64_t v7 = *(void *)(v49 + 64);
        swift_bridgeObjectRelease();
        uint64_t v8 = v43;
        unint64_t v4 = v44;
        uint64_t v9 = v48;
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v16 += 5;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v48;
      uint64_t v7 = v47;
      uint64_t v8 = v43;
      unint64_t v4 = v44;
      goto LABEL_5;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v24 = (char *)&v36 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v24, v22);
  id v25 = v51;
  uint64_t v26 = sub_1BFEFB09C((uint64_t)v24, v21, v17, v50);
  swift_bridgeObjectRelease();
  id v51 = v25;
  if (!v25) {
    goto LABEL_23;
  }
  id v35 = v51;
  swift_willThrow();

  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();

  uint64_t result = MEMORY[0x1C18C9B00](v24, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C00C8868@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v63 = a3;
  uint64_t v48 = a4;
  v65[2] = *MEMORY[0x1E4F143B8];
  sub_1BFF90234(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v11 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v58 = (uint64_t)&v48 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v48 - v17;
  sub_1C00C8F70(a1, (uint64_t)&v48 - v17);
  if (a2 >> 62) {
    goto LABEL_31;
  }
  uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v19)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    sub_1C00C90D8((uint64_t)v18, v48, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  uint64_t v56 = v18;
  unint64_t v57 = a2 & 0xC000000000000001;
  unint64_t v49 = a2 + 32;
  uint64_t v50 = v13;
  long long v53 = (uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  unsigned int v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v20 = 0;
  id v51 = v10;
  unint64_t v52 = a2;
  uint64_t v55 = v19;
  while (1)
  {
    if (v57)
    {
      uint64_t v22 = MEMORY[0x1C18C7CB0](v20, a2);
      BOOL v23 = __OFADD__(v20, 1);
      uint64_t v11 = v20 + 1;
      if (v23) {
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v22 = *(void *)(v49 + 8 * v20);
      swift_retain();
      BOOL v23 = __OFADD__(v20, 1);
      uint64_t v11 = v20 + 1;
      if (v23)
      {
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1C15204BC();
        if (!v19) {
          goto LABEL_32;
        }
        goto LABEL_3;
      }
    }
    uint64_t v61 = v11;
    if (qword_1EB87F148 != -1) {
      swift_once();
    }
    uint64_t v24 = *(void *)(v22 + 16);
    uint64_t v25 = *(void *)(v22 + 24);
    uint64_t v62 = v22;
    v65[0] = v24;
    v65[1] = v25;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1BFEF53C0(v65);
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v43 = 1;
LABEL_28:
    uint64_t v44 = v59;
    (*v54)(v10, v43, 1, v59);
    uint64_t v18 = v56;
    sub_1C00C8F70((uint64_t)v56, (uint64_t)v13);
    int v45 = (*v53)(v10, 1, v44);
    uint64_t v46 = v55;
    if (v45 == 1)
    {
      uint64_t v21 = v58;
      sub_1C00C90D8((uint64_t)v13, v58, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
      sub_1C00CA85C((uint64_t)v10, (uint64_t (*)(void))sub_1BFF90234);
    }
    else
    {
      sub_1C00CA85C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
      uint64_t v21 = v58;
      sub_1C00C90D8((uint64_t)v10, v58, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    }
    swift_release();
    sub_1C00CA85C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    sub_1C00C90D8(v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    uint64_t v20 = v61;
    if (v61 == v46) {
      goto LABEL_32;
    }
  }
  uint64_t v60 = v26;
  uint64_t v28 = (uint64_t *)(v26 + 64);
  while (1)
  {
    uint64_t v64 = v5;
    uint64_t v29 = *(v28 - 1);
    uint64_t v30 = *v28;
    char v31 = *(unsigned char *)(v29 + 32);
    unsigned int v32 = v31 & 0x3F;
    unint64_t v33 = (unint64_t)((1 << v31) + 63) >> 6;
    size_t v34 = 8 * v33;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v32 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v36 = (char *)swift_slowAlloc();
    bzero(v36, v34);
    int v39 = v64;
    uint64_t v40 = sub_1BFEFB09C((uint64_t)v36, v33, v29, v63);
    uint64_t v5 = v39;
    if (v39) {
      goto LABEL_33;
    }
    uint64_t v38 = v40;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C9B00](v36, -1, -1);
LABEL_23:
    char v41 = sub_1BFEFAE14(v38, v29);
    swift_release();
    if (v41)
    {
      char v42 = sub_1BFEFB810(v63, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v42)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = v51;
        sub_1C00C8F70(v62 + *(void *)(*(void *)v62 + 120), (uint64_t)v51);
        uint64_t v43 = 0;
        a2 = v52;
        uint64_t v13 = v50;
        goto LABEL_28;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v28 += 5;
    if (!--v27)
    {
      swift_bridgeObjectRelease();
      uint64_t v43 = 1;
      uint64_t v10 = v51;
      a2 = v52;
      uint64_t v13 = v50;
      goto LABEL_28;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v36 = (char *)&v48 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v36, v34);
  uint64_t v37 = v64;
  uint64_t v38 = sub_1BFEFB09C((uint64_t)v36, v33, v29, v63);
  uint64_t v5 = v37;
  swift_bridgeObjectRelease();
  if (!v37) {
    goto LABEL_23;
  }
  swift_willThrow();

  __break(1u);
LABEL_33:
  swift_bridgeObjectRelease();

  uint64_t result = MEMORY[0x1C18C9B00](v36, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C00C8EAC(uint64_t result)
{
  if (result != 1)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C00C8F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedGroupBundleArticleQuotas();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C00C8FD4()
{
  if (!qword_1EB865340)
  {
    type metadata accessor for FeedGroupBundleArticleQuotas();
    sub_1BFCD41D4(&qword_1EB8654B8, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    sub_1BFCD41D4(&qword_1EB8654A8, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    sub_1BFCD41D4(&qword_1EB8654B0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB865340);
    }
  }
}

uint64_t sub_1C00C90D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C00C9140()
{
  unint64_t result = qword_1EB865440;
  if (!qword_1EB865440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865440);
  }
  return result;
}

unint64_t sub_1C00C9194()
{
  unint64_t result = qword_1EB865230;
  if (!qword_1EB865230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865230);
  }
  return result;
}

void sub_1C00C91E8()
{
  if (!qword_1EB862C90)
  {
    sub_1C1516D2C();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4FB77E8];
    sub_1BFCD41D4((unint64_t *)&unk_1EB8628B0, MEMORY[0x1E4FB77E8]);
    sub_1BFCD41D4(&qword_1EB8628A0, v0);
    sub_1BFCD41D4(&qword_1EB8628A8, v0);
    unint64_t v1 = type metadata accessor for FeedGroupKnobsRuleValue();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB862C90);
    }
  }
}

void sub_1C00C92EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C00C9140();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupClusteringKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C00C9350()
{
  unint64_t result = qword_1EB865240;
  if (!qword_1EB865240)
  {
    sub_1BFC77FBC(255, &qword_1EB865238);
    sub_1C00C93D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865240);
  }
  return result;
}

unint64_t sub_1C00C93D0()
{
  unint64_t result = qword_1EB865228;
  if (!qword_1EB865228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865228);
  }
  return result;
}

unint64_t sub_1C00C9424()
{
  unint64_t result = qword_1EB862CA0;
  if (!qword_1EB862CA0)
  {
    sub_1BFF90254(255, &qword_1EB862C98, (void (*)(uint64_t))sub_1C00C91E8);
    sub_1BFCD41D4(&qword_1EB862C80, (void (*)(uint64_t))sub_1C00C91E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862CA0);
  }
  return result;
}

BOOL _s8NewsFeed0B20GroupClusteringKnobsV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*(void *)(*a1 + 16) != *(void *)(*a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v45 = a1[5];
  uint64_t v46 = a1[6];
  uint64_t v47 = a1[7];
  uint64_t v48 = a1[4];
  uint64_t v5 = a1[9];
  uint64_t v7 = a1[10];
  uint64_t v6 = a1[11];
  uint64_t v44 = a1[12];
  uint64_t v42 = a1[8];
  uint64_t v43 = a1[13];
  uint64_t v31 = a1[14];
  uint64_t v29 = a1[15];
  uint64_t v27 = a1[16];
  uint64_t v9 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v34 = a2[5];
  uint64_t v35 = a2[6];
  uint64_t v36 = a2[7];
  uint64_t v37 = a2[8];
  uint64_t v38 = a2[9];
  uint64_t v39 = a2[10];
  uint64_t v40 = a2[11];
  uint64_t v32 = a2[13];
  uint64_t v33 = a2[12];
  uint64_t v30 = a2[14];
  uint64_t v28 = a2[15];
  uint64_t v26 = a2[16];
  if ((sub_1C00F2DD4(*(void *)(*a1 + 24), *(void *)(*a2 + 24)) & 1) == 0
    || *(void *)(v3 + 16) != *(void *)(v9 + 16)
    || (sub_1C00F2DD4(*(void *)(v3 + 24), *(void *)(v9 + 24)) & 1) == 0
    || (sub_1C03BF1D8(v2, v8) & 1) == 0)
  {
    return 0;
  }
  if (v4)
  {
    if (!v11) {
      return 0;
    }
    uint64_t v12 = *(void *)(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1C00F21C0(v12, v13) & 1) == 0)
    {
      swift_release();
      goto LABEL_17;
    }
    char v14 = sub_1C00F1EF8(*(void *)(v4 + 24), *(void *)(v11 + 24));
    swift_release();
    swift_release();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  if (!v48)
  {
    uint64_t v19 = v6;
    uint64_t v18 = v7;
    uint64_t v17 = v5;
    uint64_t v16 = v42;
    uint64_t v21 = v43;
    uint64_t v15 = v46;
    uint64_t v22 = v47;
    uint64_t v20 = v44;
    uint64_t v23 = v45;
    if (!v10) {
      goto LABEL_19;
    }
LABEL_29:
    uint64_t v50 = v48;
    uint64_t v51 = v23;
    uint64_t v52 = v15;
    uint64_t v53 = v22;
    uint64_t v54 = v16;
    uint64_t v55 = v17;
    uint64_t v56 = v18;
    uint64_t v57 = v19;
    uint64_t v58 = v20;
    uint64_t v59 = v21;
    uint64_t v60 = v10;
    uint64_t v61 = v34;
    uint64_t v62 = v35;
    uint64_t v63 = v36;
    uint64_t v64 = v37;
    uint64_t v65 = v38;
    uint64_t v66 = v39;
    uint64_t v67 = v40;
    uint64_t v68 = v33;
    uint64_t v69 = v32;
    sub_1C00C6020(v10);
    sub_1C00CA8BC(&v50);
    return 0;
  }
  uint64_t v15 = v46;
  uint64_t v50 = v48;
  uint64_t v51 = v45;
  uint64_t v52 = v46;
  uint64_t v53 = v47;
  uint64_t v16 = v42;
  uint64_t v54 = v42;
  uint64_t v55 = v5;
  uint64_t v17 = v5;
  uint64_t v18 = v7;
  uint64_t v56 = v7;
  uint64_t v57 = v6;
  uint64_t v19 = v6;
  uint64_t v21 = v43;
  uint64_t v20 = v44;
  uint64_t v58 = v44;
  uint64_t v59 = v43;
  if (!v10)
  {
    swift_retain();
    uint64_t v23 = v45;
    swift_retain();
    swift_retain();
    uint64_t v22 = v47;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    goto LABEL_29;
  }
  v49[0] = v10;
  v49[1] = v34;
  v49[2] = v35;
  v49[3] = v36;
  v49[4] = v37;
  v49[5] = v38;
  v49[6] = v39;
  v49[7] = v40;
  v49[8] = v33;
  v49[9] = v32;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  char v41 = static FeedGroupGroupingRules.== infix(_:_:)(&v50, v49);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1C00CA968(v48);
  if ((v41 & 1) == 0) {
    return 0;
  }
LABEL_19:
  sub_1C1516D9C();
  sub_1BFCD41D4(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
  if ((sub_1C151E5CC() & 1) == 0
    || (sub_1C00F1B28(*(void *)(v31 + *(void *)(*(void *)v31 + 120)), *(void *)(v30 + *(void *)(*(void *)v30 + 120))) & 1) == 0|| (sub_1C151E5CC() & 1) == 0|| (sub_1C00F1B28(*(void *)(v29 + *(void *)(*(void *)v29 + 120)), *(void *)(v28 + *(void *)(*(void *)v28 + 120))) & 1) == 0)
  {
    return 0;
  }
  if (v27)
  {
    if (!v26) {
      return 0;
    }
    sub_1C1516D2C();
    sub_1BFCD41D4(&qword_1EB8628A8, MEMORY[0x1E4FB77E8]);
    swift_retain();
    swift_retain();
    if (sub_1C151E5CC())
    {
      char v24 = sub_1C00F1AE0(*(void *)(v27 + *(void *)(*(void *)v27 + 120)), *(void *)(v26 + *(void *)(*(void *)v26 + 120)));
      swift_release();
      swift_release();
      return (v24 & 1) != 0;
    }
    swift_release();
LABEL_17:
    swift_release();
    return 0;
  }
  return !v26;
}

uint64_t sub_1C00C9B68()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C00C9BB4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3;
  unint64_t v3 = a2;
  uint64_t v29 = a1;
  v39[2] = *MEMORY[0x1E4F143B8];
  if (a2 >> 62) {
    goto LABEL_28;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    return v29;
  }
LABEL_3:
  uint64_t v5 = 0;
  unint64_t v32 = v3;
  unint64_t v33 = v3 & 0xC000000000000001;
  unint64_t v30 = v3 + 32;
  uint64_t v31 = v4;
  while (1)
  {
    if (v33)
    {
      uint64_t v6 = MEMORY[0x1C18C7CB0](v5, v3);
      BOOL v7 = __OFADD__(v5++, 1);
      if (v7) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v6 = *(void *)(v30 + 8 * v5);
      swift_retain();
      BOOL v7 = __OFADD__(v5++, 1);
      if (v7)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        uint64_t v4 = sub_1C15204BC();
        if (!v4) {
          goto LABEL_29;
        }
        goto LABEL_3;
      }
    }
    if (qword_1EB87F148 != -1) {
      swift_once();
    }
    uint64_t v8 = *(void *)(v6 + 24);
    v39[0] = *(void *)(v6 + 16);
    v39[1] = v8;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1BFEF53C0(v39);
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    if (v5 == v4) {
      goto LABEL_29;
    }
  }
  uint64_t v35 = v6;
  uint64_t v36 = v5;
  uint64_t v34 = v9;
  uint64_t v11 = (uint64_t *)(v9 + 64);
  while (1)
  {
    uint64_t v12 = *(v11 - 1);
    uint64_t v13 = *v11;
    char v14 = *(unsigned char *)(v12 + 32);
    unsigned int v15 = v14 & 0x3F;
    unint64_t v16 = (unint64_t)((1 << v14) + 63) >> 6;
    size_t v17 = 8 * v16;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v15 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v19 = (char *)swift_slowAlloc();
    bzero(v19, v17);
    id v22 = v38;
    uint64_t v23 = sub_1BFEFB09C((uint64_t)v19, v16, v12, v37);
    id v38 = v22;
    if (v22) {
      goto LABEL_30;
    }
    uint64_t v21 = v23;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C9B00](v19, -1, -1);
LABEL_23:
    char v24 = sub_1BFEFAE14(v21, v12);
    swift_release();
    if (v24)
    {
      char v25 = sub_1BFEFB810(v37, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25)
      {
        uint64_t v29 = *(void *)(v35 + 32);
LABEL_26:
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v4 = v31;
        unint64_t v3 = v32;
        uint64_t v5 = v36;
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v11 += 5;
    if (!--v10) {
      goto LABEL_26;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v19 = (char *)&v28 - ((v17 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v19, v17);
  id v20 = v38;
  uint64_t v21 = sub_1BFEFB09C((uint64_t)v19, v16, v12, v37);
  swift_bridgeObjectRelease();
  id v38 = v20;
  if (!v20) {
    goto LABEL_23;
  }
  id v27 = v38;
  swift_willThrow();

  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();

  uint64_t result = MEMORY[0x1C18C9B00](v19, -1, -1);
  __break(1u);
  return result;
}

uint64_t destroy for FeedGroupClusteringKnobs(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 32))
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for FeedGroupClusteringKnobs(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  BOOL v7 = a2 + 4;
  uint64_t v6 = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v6)
  {
    uint64_t v8 = a2[5];
    uint64_t v9 = a2[6];
    a1[4] = v6;
    a1[5] = v8;
    uint64_t v10 = a2[7];
    uint64_t v11 = a2[8];
    a1[6] = v9;
    a1[7] = v10;
    uint64_t v12 = a2[9];
    uint64_t v13 = a2[10];
    a1[8] = v11;
    a1[9] = v12;
    uint64_t v15 = a2[11];
    uint64_t v14 = a2[12];
    a1[10] = v13;
    a1[11] = v15;
    uint64_t v20 = a2[13];
    a1[12] = v14;
    a1[13] = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v16 = v7[3];
    *((_OWORD *)a1 + 4) = v7[2];
    *((_OWORD *)a1 + 5) = v16;
    *((_OWORD *)a1 + 6) = v7[4];
    long long v17 = v7[1];
    *((_OWORD *)a1 + 2) = *v7;
    *((_OWORD *)a1 + 3) = v17;
  }
  uint64_t v18 = a2[15];
  a1[14] = a2[14];
  a1[15] = v18;
  a1[16] = a2[16];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FeedGroupClusteringKnobs(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v4 = a1 + 4;
  uint64_t v6 = a2 + 4;
  uint64_t v5 = a2[4];
  if (a1[4])
  {
    if (v5)
    {
      a1[4] = v5;
      swift_retain();
      swift_release();
      a1[5] = a2[5];
      swift_retain();
      swift_release();
      a1[6] = a2[6];
      swift_retain();
      swift_release();
      a1[7] = a2[7];
      swift_retain();
      swift_release();
      a1[8] = a2[8];
      swift_retain();
      swift_release();
      a1[9] = a2[9];
      swift_retain();
      swift_release();
      a1[10] = a2[10];
      swift_retain();
      swift_release();
      a1[11] = a2[11];
      swift_retain();
      swift_release();
      a1[12] = a2[12];
      swift_retain();
      swift_release();
      a1[13] = a2[13];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1C00CA428((uint64_t)(a1 + 4));
      *uint64_t v4 = *v6;
      long long v7 = *((_OWORD *)a2 + 6);
      long long v9 = *((_OWORD *)a2 + 3);
      long long v8 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 6) = v7;
      *((_OWORD *)a1 + 3) = v9;
      *((_OWORD *)a1 + 4) = v8;
    }
  }
  else if (v5)
  {
    a1[4] = v5;
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *uint64_t v4 = *v6;
    long long v10 = *((_OWORD *)a2 + 3);
    long long v11 = *((_OWORD *)a2 + 4);
    long long v12 = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 6) = v12;
    *((_OWORD *)a1 + 3) = v10;
    *((_OWORD *)a1 + 4) = v11;
  }
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  a1[15] = a2[15];
  swift_retain();
  swift_release();
  a1[16] = a2[16];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C00CA428(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for FeedGroupClusteringKnobs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_1C00CA428(a1 + 32);
LABEL_5:
    long long v5 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v5;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = v4;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
LABEL_6:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupClusteringKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C00CA6F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupClusteringKnobs.CodingKeys()
{
  return &type metadata for FeedGroupClusteringKnobs.CodingKeys;
}

unint64_t sub_1C00CA72C()
{
  unint64_t result = qword_1EA196AE8[0];
  if (!qword_1EA196AE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA196AE8);
  }
  return result;
}

unint64_t sub_1C00CA784()
{
  unint64_t result = qword_1EB865450;
  if (!qword_1EB865450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865450);
  }
  return result;
}

unint64_t sub_1C00CA7DC()
{
  unint64_t result = qword_1EB865448;
  if (!qword_1EB865448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865448);
  }
  return result;
}

uint64_t sub_1C00CA830(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C00CA85C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1C00CA8BC(uint64_t *a1)
{
  uint64_t v3 = a1[10];
  sub_1C00CA968(*a1);
  sub_1C00CA968(v3);
  return a1;
}

uint64_t sub_1C00CA968(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C00CAA24()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C00CAA68@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[2];
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = *(void *)(*v2 + 80);
  uint64_t v9 = *(void *)(*v2 + 88);
  long long v10 = sub_1C00C5A20(v8, v9);
  sub_1C02675A4(a1, 0, (uint64_t)v10, v11, (uint64_t)sub_1C00C5AD8, 0, v5, v6, v7, v8, v9);
  swift_release();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C151ECBC();
  return sub_1BFE1443C(v12, a2);
}

uint64_t type metadata accessor for ForceFeedRefreshStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FeedItemAuxiliaryItem.feedItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFEE6734(v1, a1);
}

uint64_t FeedItemAuxiliaryItem.options.getter()
{
  type metadata accessor for FeedItemAuxiliaryItem();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedItemAuxiliaryItem()
{
  uint64_t result = qword_1EB862D38;
  if (!qword_1EB862D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FeedItemAuxiliaryItem.selectors.getter()
{
  type metadata accessor for FeedItemAuxiliaryItem();
  return swift_bridgeObjectRetain();
}

void *initializeBufferWithCopyOfBuffer for FeedItemAuxiliaryItem(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = a3;
  uint64_t v7 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      long long v10 = a2 + 5;
      unint64_t v11 = a2[6];
      swift_bridgeObjectRetain();
      if (v11 >= 0x11)
      {
        a1[5] = *v10;
        a1[6] = v11;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 5) = *(_OWORD *)v10;
      }
      goto LABEL_203;
    case 1u:
      uint64_t v50 = a2[1];
      *a1 = *a2;
      a1[1] = v50;
      uint64_t v51 = a2[3];
      a1[2] = a2[2];
      a1[3] = v51;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v52 = a2[6];
      a1[5] = a2[5];
      a1[6] = v52;
      uint64_t v53 = a2[8];
      a1[7] = a2[7];
      a1[8] = v53;
      uint64_t v54 = a2 + 9;
      unint64_t v55 = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v55 >= 0x11)
      {
        a1[9] = *v54;
        a1[10] = v55;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 9) = *(_OWORD *)v54;
      }
      goto LABEL_203;
    case 2u:
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      uint64_t v14 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v15 = v14[5];
      long long v16 = (char *)a1 + v15;
      long long v17 = (char *)a2 + v15;
      uint64_t v18 = sub_1C151DBAC();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      *(void *)((char *)a1 + v14[6]) = *(void *)((char *)a2 + v14[6]);
      uint64_t v20 = v14[7];
      uint64_t v21 = (char *)a1 + v20;
      id v22 = (char *)a2 + v20;
      *(void *)uint64_t v21 = *(void *)v22;
      v21[8] = v22[8];
      uint64_t v23 = v14[8];
      char v24 = (char *)a1 + v23;
      char v25 = (char *)a2 + v23;
      unint64_t v26 = *((void *)v25 + 1);
      if (v26 >= 0x11) {
        goto LABEL_39;
      }
      *(_OWORD *)char v24 = *(_OWORD *)v25;
      goto LABEL_203;
    case 3u:
      uint64_t v56 = a2[1];
      uint64_t v412 = v6;
      *a1 = *a2;
      a1[1] = v56;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v57 = a2[5];
      a1[4] = a2[4];
      a1[5] = v57;
      a1[6] = a2[6];
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      v402 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v58 = v402[10];
      uint64_t v59 = (char *)a1 + v58;
      uint64_t v60 = (char *)a2 + v58;
      *uint64_t v59 = *((unsigned char *)a2 + v58);
      v59[1] = *((unsigned char *)a2 + v58 + 1);
      uint64_t v61 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v62 = v61[6];
      __dst = &v59[v62];
      uint64_t v63 = &v60[v62];
      uint64_t v64 = (int *)type metadata accessor for SharedItem();
      uint64_t v396 = *((void *)v64 - 1);
      uint64_t v65 = *(unsigned int (**)(char *, uint64_t, int *))(v396 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v65(v63, 1, v64))
      {
        uint64_t v66 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v63, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        uint64_t v185 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(__dst, v63, v185);
        __dst[v64[5]] = v63[v64[5]];
        uint64_t v186 = v64[6];
        v187 = *(void **)&v63[v186];
        *(void *)&__dst[v186] = v187;
        uint64_t v188 = v64[7];
        v408 = &v63[v188];
        v410 = &__dst[v188];
        uint64_t v189 = sub_1C1515FDC();
        v395 = *(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16);
        id v190 = v187;
        v395(v410, v408, v189);
        (*(void (**)(char *, void, uint64_t, int *))(v396 + 56))(__dst, 0, 1, v64);
      }
      uint64_t v6 = v412;
      v59[v61[7]] = v60[v61[7]];
      v59[v61[8]] = v60[v61[8]];
      v59[v61[9]] = v60[v61[9]];
      v59[v61[10]] = v60[v61[10]];
      uint64_t v191 = v402[11];
      v192 = (char *)a1 + v191;
      v193 = (char *)a2 + v191;
      uint64_t v194 = sub_1C151D2DC();
      uint64_t v195 = *(void *)(v194 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v192, v193, *(void *)(*(void *)(v196 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v192, v193, v194);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
      }
      uint64_t v203 = v402[12];
      v204 = (void *)((char *)a1 + v203);
      v205 = (void *)((char *)a2 + v203);
      unint64_t v206 = v205[1];
      if (v206 >= 0x11)
      {
        void *v204 = *v205;
        v204[1] = v206;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v204 = *(_OWORD *)v205;
      }
      uint64_t v207 = v402[13];
      unint64_t v208 = *(void *)((char *)a2 + v207);
      if (v208 >= 2)
      {
        if (v208 == 2)
        {
          *(void *)((char *)a1 + v207) = 2;
        }
        else
        {
          *(void *)((char *)a1 + v207) = v208;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)((char *)a1 + v207) = v208;
      }
      uint64_t v247 = v402[14];
      v248 = *(void **)((char *)a2 + v247);
      *(void *)((char *)a1 + v247) = v248;
      id v249 = v248;
      goto LABEL_203;
    case 4u:
      uint64_t v27 = a2[1];
      *a1 = *a2;
      a1[1] = v27;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v28 = a2 + 3;
      unint64_t v29 = a2[4];
      if (v29 >= 0x11)
      {
        a1[3] = *v28;
        a1[4] = v29;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v28;
      }
      uint64_t v117 = a2[6];
      a1[5] = a2[5];
      a1[6] = v117;
      uint64_t v118 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v119 = v118[8];
      v120 = (char *)a1 + v119;
      uint64_t v121 = (char *)a2 + v119;
      uint64_t v122 = sub_1C1515FDC();
      uint64_t v123 = *(void *)(v122 - 8);
      id v124 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
      swift_bridgeObjectRetain();
      v124(v120, v121, v122);
      v409 = v118;
      uint64_t v125 = v118[9];
      uint64_t v126 = (char *)a1 + v125;
      uint64_t v127 = (char *)a2 + v125;
      uint64_t v407 = v122;
      __dstb = v124;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))((char *)a2 + v125, 1, v122))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
      }
      else
      {
        v124(v126, v127, v122);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v126, 0, 1, v122);
      }
      *(void *)((char *)a1 + v118[10]) = *(void *)((char *)a2 + v118[10]);
      *(void *)((char *)a1 + v118[11]) = *(void *)((char *)a2 + v118[11]);
      uint64_t v160 = v118[12];
      v161 = (void *)((char *)a1 + v160);
      v162 = (void *)((char *)a2 + v160);
      uint64_t v163 = type metadata accessor for FeedHeadline(0);
      uint64_t v164 = *(void *)(v163 - 8);
      v165 = *(unsigned int (**)(void *, uint64_t, int *))(v164 + 48);
      v166 = (int *)v163;
      swift_retain();
      swift_retain();
      if (v165(v162, 1, v166))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v161, v162, *(void *)(*(void *)(v167 - 8) + 64));
      }
      else
      {
        uint64_t v394 = v164;
        uint64_t v414 = v6;
        uint64_t v173 = v162[1];
        void *v161 = *v162;
        v161[1] = v173;
        v161[2] = v162[2];
        *((unsigned char *)v161 + 24) = *((unsigned char *)v162 + 24);
        uint64_t v174 = v162[5];
        v161[4] = v162[4];
        v161[5] = v174;
        v161[6] = v162[6];
        *((unsigned char *)v161 + 56) = *((unsigned char *)v162 + 56);
        v397 = v166;
        uint64_t v175 = v166[10];
        v176 = (char *)v161 + v175;
        v177 = (char *)v162 + v175;
        unsigned char *v176 = *((unsigned char *)v162 + v175);
        v176[1] = *((unsigned char *)v162 + v175 + 1);
        uint64_t v178 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v179 = *(int *)(v178 + 24);
        v392 = &v176[v179];
        v393 = (int *)v178;
        v180 = &v177[v179];
        v181 = (int *)type metadata accessor for SharedItem();
        uint64_t v391 = *((void *)v181 - 1);
        v182 = *(unsigned int (**)(char *, uint64_t, int *))(v391 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v182(v180, 1, v181))
        {
          uint64_t v183 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v392, v180, *(void *)(*(void *)(v183 - 8) + 64));
        }
        else
        {
          uint64_t v273 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v392, v180, v273);
          v392[v181[5]] = v180[v181[5]];
          uint64_t v274 = v181[6];
          v275 = *(void **)&v180[v274];
          *(void *)&v392[v274] = v275;
          uint64_t v276 = v181[7];
          v277 = &v392[v276];
          v278 = &v180[v276];
          id v279 = v275;
          __dstb(v277, v278, v407);
          (*(void (**)(char *, void, uint64_t, int *))(v391 + 56))(v392, 0, 1, v181);
        }
        v176[v393[7]] = v177[v393[7]];
        v176[v393[8]] = v177[v393[8]];
        v176[v393[9]] = v177[v393[9]];
        v176[v393[10]] = v177[v393[10]];
        uint64_t v280 = v397[11];
        v281 = (char *)v161 + v280;
        v282 = (char *)v162 + v280;
        uint64_t v283 = sub_1C151D2DC();
        uint64_t v284 = *(void *)(v283 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v284 + 48))(v282, 1, v283))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v281, v282, *(void *)(*(void *)(v285 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v284 + 16))(v281, v282, v283);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v284 + 56))(v281, 0, 1, v283);
        }
        uint64_t v6 = v414;
        uint64_t v286 = v397[12];
        v287 = (void *)((char *)v161 + v286);
        v288 = (void *)((char *)v162 + v286);
        unint64_t v289 = v288[1];
        if (v289 >= 0x11)
        {
          void *v287 = *v288;
          v287[1] = v289;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v287 = *(_OWORD *)v288;
        }
        uint64_t v290 = v397[13];
        unint64_t v291 = *(void *)((char *)v162 + v290);
        if (v291 >= 2)
        {
          if (v291 == 2)
          {
            *(void *)((char *)v161 + v290) = 2;
          }
          else
          {
            *(void *)((char *)v161 + v290) = v291;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v161 + v290) = v291;
        }
        uint64_t v316 = v397[14];
        v317 = *(void **)((char *)v162 + v316);
        *(void *)((char *)v161 + v316) = v317;
        v318 = *(void (**)(void *, void, uint64_t, int *))(v394 + 56);
        id v319 = v317;
        v318(v161, 0, 1, v397);
      }
      uint64_t v320 = v409[13];
      v321 = (void *)((char *)a1 + v320);
      v322 = (void *)((char *)a2 + v320);
      uint64_t v323 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v324 = *(void *)(v323 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v324 + 48))(v322, 1, v323))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v321, v322, *(void *)(*(void *)(v325 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v327 = *v322;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v328 = v322[1];
          void *v321 = v327;
          v321[1] = v328;
          uint64_t v329 = type metadata accessor for GenericDataVisualization();
          uint64_t v330 = *(int *)(v329 + 20);
          v331 = (char *)v321 + v330;
          uint64_t v418 = v6;
          v332 = (char *)v322 + v330;
          swift_bridgeObjectRetain();
          v333 = v332;
          uint64_t v6 = v418;
          __dstb(v331, v333, v407);
          *(void *)((char *)v321 + *(int *)(v329 + 24)) = *(uint64_t *)((char *)v322 + *(int *)(v329 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *v321 = v327;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v324 + 56))(v321, 0, 1, v323);
      }
      *((unsigned char *)a1 + v409[14]) = *((unsigned char *)a2 + v409[14]);
      goto LABEL_203;
    case 5u:
      uint64_t v67 = (void *)*a2;
      uint64_t v68 = a2[1];
      *a1 = *a2;
      a1[1] = v68;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v69 = (void *)a2[7];
      a1[6] = a2[6];
      a1[7] = v69;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v70 = a2[10];
      id v71 = v67;
      swift_bridgeObjectRetain();
      id v72 = v69;
      if (v70 == 1)
      {
        long long v73 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 11) = v73;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      }
      else
      {
        a1[9] = a2[9];
        a1[10] = v70;
        uint64_t v130 = a2[12];
        a1[11] = a2[11];
        a1[12] = v130;
        uint64_t v132 = (void *)a2[13];
        uint64_t v131 = a2[14];
        a1[13] = v132;
        a1[14] = v131;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v133 = v132;
      }
      v134 = a2 + 15;
      unint64_t v135 = a2[16];
      if (v135 >= 0x11)
      {
        a1[15] = *v134;
        a1[16] = v135;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v134;
      }
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      goto LABEL_203;
    case 6u:
      int v74 = *((unsigned __int8 *)a2 + 281);
      if (v74 == 2)
      {
        uint64_t v215 = a2[1];
        *a1 = *a2;
        a1[1] = v215;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v216 = a2[7];
        a1[6] = a2[6];
        a1[7] = v216;
        uint64_t v217 = a2[9];
        a1[8] = a2[8];
        a1[9] = v217;
        uint64_t v218 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v218 != 1)
        {
          a1[10] = a2[10];
          a1[11] = v218;
          uint64_t v257 = a2[15];
          swift_bridgeObjectRetain();
          if (v257)
          {
            uint64_t v258 = a2[16];
            a1[15] = v257;
            a1[16] = v258;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v257 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v257);
            a1[17] = a2[17];
          }
          else
          {
            long long v357 = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 7) = v357;
            *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
          }
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          goto LABEL_171;
        }
        v219 = a1 + 10;
        v220 = a2 + 10;
        long long v221 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v221;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
      }
      else
      {
        if (v74 != 1)
        {
          v222 = (void *)*a2;
          uint64_t v223 = a2[1];
          *a1 = *a2;
          a1[1] = v223;
          a1[2] = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          v224 = (void *)a2[7];
          a1[6] = a2[6];
          a1[7] = v224;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v225 = a2[10];
          id v226 = v222;
          swift_bridgeObjectRetain();
          id v227 = v224;
          if (v225 == 1)
          {
            long long v228 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 11) = v228;
            *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = v225;
            uint64_t v259 = a2[12];
            a1[11] = a2[11];
            a1[12] = v259;
            v261 = (void *)a2[13];
            uint64_t v260 = a2[14];
            a1[13] = v261;
            a1[14] = v260;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v262 = v261;
          }
          v263 = a2 + 15;
          unint64_t v264 = a2[16];
          if (v264 >= 0x11)
          {
            a1[15] = *v263;
            a1[16] = v264;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)v263;
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          goto LABEL_171;
        }
        unsigned __int8 v75 = (void *)*a2;
        uint64_t v76 = a2[1];
        *a1 = *a2;
        a1[1] = v76;
        a1[2] = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        unsigned __int8 v77 = (void *)a2[7];
        a1[6] = a2[6];
        a1[7] = v77;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v78 = a2[10];
        id v79 = v75;
        swift_bridgeObjectRetain();
        id v80 = v77;
        if (v78 == 1)
        {
          long long v81 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 11) = v81;
          *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = v78;
          uint64_t v251 = a2[12];
          a1[11] = a2[11];
          a1[12] = v251;
          v253 = (void *)a2[13];
          uint64_t v252 = a2[14];
          a1[13] = v253;
          a1[14] = v252;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v254 = v253;
        }
        v255 = a2 + 15;
        unint64_t v256 = a2[16];
        if (v256 >= 0x11)
        {
          a1[15] = *v255;
          a1[16] = v256;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)v255;
        }
        v220 = a2 + 18;
        v265 = (void *)a2[18];
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        if (v265)
        {
          uint64_t v266 = a2[19];
          uint64_t v267 = a2[20];
          a1[18] = v265;
          a1[19] = v266;
          a1[20] = v267;
          *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
          a1[22] = a2[22];
          *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
          v268 = (void *)a2[25];
          a1[24] = a2[24];
          a1[25] = v268;
          *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
          uint64_t v269 = a2[28];
          id v270 = v265;
          swift_bridgeObjectRetain();
          id v271 = v268;
          if (v269 == 1)
          {
            long long v272 = *(_OWORD *)(a2 + 29);
            *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
            *(_OWORD *)(a1 + 29) = v272;
            *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
          }
          else
          {
            a1[27] = a2[27];
            a1[28] = v269;
            uint64_t v296 = a2[30];
            a1[29] = a2[29];
            a1[30] = v296;
            v298 = (void *)a2[31];
            uint64_t v297 = a2[32];
            a1[31] = v298;
            a1[32] = v297;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v299 = v298;
          }
          v300 = a2 + 33;
          unint64_t v301 = a2[34];
          if (v301 >= 0x11)
          {
            a1[33] = *v300;
            a1[34] = v301;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 33) = *(_OWORD *)v300;
          }
          *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_171:
          *((unsigned char *)a1 + 281) = v74;
          goto LABEL_203;
        }
        v219 = a1 + 18;
        long long v292 = *((_OWORD *)a2 + 16);
        *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
        *((_OWORD *)a1 + 16) = v292;
        *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
        long long v293 = *((_OWORD *)a2 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 12) = v293;
        long long v294 = *((_OWORD *)a2 + 14);
        *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
        *((_OWORD *)a1 + 14) = v294;
      }
      long long v295 = v220[1];
      _OWORD *v219 = *v220;
      v219[1] = v295;
      goto LABEL_171;
    case 7u:
      uint64_t v82 = a2[1];
      *a1 = *a2;
      a1[1] = v82;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v83 = a2[7];
      a1[6] = a2[6];
      a1[7] = v83;
      uint64_t v84 = a2[9];
      a1[8] = a2[8];
      a1[9] = v84;
      uint64_t v85 = a2[11];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v85 == 1)
      {
        long long v86 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v86;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
        long long v87 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v87;
      }
      else
      {
        a1[10] = a2[10];
        a1[11] = v85;
        uint64_t v136 = a2[15];
        swift_bridgeObjectRetain();
        if (v136)
        {
          uint64_t v137 = a2[16];
          a1[15] = v136;
          a1[16] = v137;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v136 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v136);
          a1[17] = a2[17];
        }
        else
        {
          long long v250 = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 7) = v250;
          *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
        }
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
      }
      goto LABEL_203;
    case 8u:
      uint64_t v88 = a2[1];
      uint64_t v413 = v6;
      *a1 = *a2;
      a1[1] = v88;
      uint64_t v89 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v90 = (void *)((char *)a1 + v89);
      uint64_t v91 = (char *)a2 + v89;
      uint64_t v92 = *(void *)((char *)a2 + v89 + 8);
      *uint64_t v90 = *(void *)((char *)a2 + v89);
      v90[1] = v92;
      uint64_t v93 = *(void *)((char *)a2 + v89 + 24);
      v90[2] = *(void *)((char *)a2 + v89 + 16);
      v90[3] = v93;
      uint64_t v94 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v95 = *(int *)(v94 + 24);
      v403 = (char *)v90 + v95;
      uint64_t v406 = v94;
      id v96 = &v91[v95];
      uint64_t v97 = type metadata accessor for FormatCustomItem.Action();
      __dsta = *(void **)(v97 - 8);
      id v98 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v98(v96, 1, v97))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v403, v96, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        uint64_t v197 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v403, v96, v197);
        ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v403, 0, 1, v97);
      }
      uint64_t v6 = v413;
      *(void *)((char *)v90 + *(int *)(v406 + 28)) = *(void *)&v91[*(int *)(v406 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_203;
    case 9u:
      uint64_t v30 = a2[1];
      *a1 = *a2;
      a1[1] = v30;
      uint64_t v31 = a2[3];
      a1[2] = a2[2];
      a1[3] = v31;
      uint64_t v32 = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32)
      {
        uint64_t v33 = a2[8];
        a1[7] = v32;
        a1[8] = v33;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v32);
      }
      else
      {
        long long v155 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v155;
        a1[8] = a2[8];
      }
      v156 = a1 + 9;
      v157 = a2 + 9;
      uint64_t v158 = a2[12];
      if (v158)
      {
        uint64_t v159 = a2[13];
        a1[12] = v158;
        a1[13] = v159;
        (**(void (***)(_OWORD *, _OWORD *))(v158 - 8))(v156, v157);
      }
      else
      {
        long long v168 = *(_OWORD *)(a2 + 11);
        _OWORD *v156 = *v157;
        *(_OWORD *)(a1 + 11) = v168;
        a1[13] = a2[13];
      }
      v169 = a1 + 14;
      v170 = a2 + 14;
      uint64_t v171 = a2[17];
      if (v171)
      {
        uint64_t v172 = a2[18];
        a1[17] = v171;
        a1[18] = v172;
        (**(void (***)(_OWORD *, _OWORD *))(v171 - 8))(v169, v170);
      }
      else
      {
        long long v184 = *((_OWORD *)a2 + 8);
        _OWORD *v169 = *v170;
        *((_OWORD *)a1 + 8) = v184;
        a1[18] = a2[18];
      }
      goto LABEL_203;
    case 0xAu:
      uint64_t v100 = a2[1];
      *a1 = *a2;
      a1[1] = v100;
      uint64_t v101 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v102 = v101[5];
      id v103 = (char *)a1 + v102;
      uint64_t v104 = (char *)a2 + v102;
      uint64_t v105 = sub_1C151959C();
      id v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
      swift_bridgeObjectRetain();
      v106(v103, v104, v105);
      *(void *)((char *)a1 + v101[6]) = *(void *)((char *)a2 + v101[6]);
      uint64_t v107 = v101[7];
      id v108 = (char *)a1 + v107;
      id v109 = (char *)a2 + v107;
      *(void *)id v108 = *(void *)v109;
      v108[8] = v109[8];
      uint64_t v110 = v101[8];
      char v24 = (char *)a1 + v110;
      char v25 = (char *)a2 + v110;
      unint64_t v26 = *((void *)v25 + 1);
      if (v26 >= 0x11)
      {
LABEL_39:
        *(void *)char v24 = *(void *)v25;
        *((void *)v24 + 1) = v26;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)char v24 = *(_OWORD *)v25;
      }
      goto LABEL_203;
    case 0xBu:
      *a1 = *a2;
      swift_retain();
      goto LABEL_203;
    case 0xCu:
      uint64_t v34 = a2[1];
      *a1 = *a2;
      a1[1] = v34;
      uint64_t v35 = a2[3];
      a1[2] = a2[2];
      a1[3] = v35;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_203;
    case 0xDu:
      uint64_t v111 = a2[1];
      *a1 = *a2;
      a1[1] = v111;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      id v112 = a2 + 3;
      unint64_t v113 = a2[4];
      if (v113 >= 0x11)
      {
        a1[3] = *v112;
        a1[4] = v113;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v112;
      }
      uint64_t v138 = a2[6];
      a1[5] = a2[5];
      a1[6] = v138;
      v139 = (void *)a2[8];
      a1[7] = a2[7];
      a1[8] = v139;
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      a1[10] = a2[10];
      uint64_t v140 = a2[14];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v141 = v139;
      swift_bridgeObjectRetain();
      if (v140)
      {
        uint64_t v142 = a2[15];
        a1[14] = v140;
        a1[15] = v142;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v140 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v140);
      }
      else
      {
        long long v198 = *(_OWORD *)(a2 + 13);
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 13) = v198;
        a1[15] = a2[15];
      }
      v199 = a1 + 16;
      v200 = a2 + 16;
      uint64_t v201 = a2[19];
      if (v201)
      {
        uint64_t v202 = a2[20];
        a1[19] = v201;
        a1[20] = v202;
        (**(void (***)(_OWORD *, _OWORD *))(v201 - 8))(v199, v200);
      }
      else
      {
        long long v209 = *((_OWORD *)a2 + 9);
        _OWORD *v199 = *v200;
        *((_OWORD *)a1 + 9) = v209;
        a1[20] = a2[20];
      }
      v210 = a1 + 21;
      v211 = a2 + 21;
      uint64_t v212 = a2[24];
      if (v212)
      {
        uint64_t v213 = a2[25];
        a1[24] = v212;
        a1[25] = v213;
        (**(void (***)(_OWORD *, _OWORD *))(v212 - 8))(v210, v211);
      }
      else
      {
        long long v214 = *(_OWORD *)(a2 + 23);
        _OWORD *v210 = *v211;
        *(_OWORD *)(a1 + 23) = v214;
        a1[25] = a2[25];
      }
      goto LABEL_203;
    case 0xEu:
      uint64_t v36 = a2[1];
      *a1 = *a2;
      a1[1] = v36;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v37 = a2 + 3;
      unint64_t v38 = a2[4];
      if (v38 >= 0x11)
      {
        a1[3] = *v37;
        a1[4] = v38;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v37;
      }
      uint64_t v129 = a2[6];
      a1[5] = a2[5];
      a1[6] = v129;
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_203;
    case 0xFu:
      uint64_t v114 = a2[1];
      *a1 = *a2;
      a1[1] = v114;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      id v115 = a2 + 3;
      unint64_t v116 = a2[4];
      if (v116 >= 0x11)
      {
        a1[3] = *v115;
        a1[4] = v116;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v115;
      }
      break;
    case 0x10u:
      uint64_t v39 = a2[1];
      *a1 = *a2;
      a1[1] = v39;
      uint64_t v40 = a2[3];
      uint64_t v411 = v6;
      a1[2] = a2[2];
      a1[3] = v40;
      uint64_t v41 = a2[5];
      a1[4] = a2[4];
      a1[5] = v41;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
      uint64_t v42 = a2[10];
      a1[9] = a2[9];
      a1[10] = v42;
      uint64_t v43 = a2[12];
      a1[11] = a2[11];
      a1[12] = v43;
      a1[13] = a2[13];
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      uint64_t v44 = a2[16];
      a1[15] = a2[15];
      a1[16] = v44;
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      uint64_t v45 = a2[19];
      a1[18] = a2[18];
      a1[19] = v45;
      uint64_t v46 = a2[21];
      a1[20] = a2[20];
      a1[21] = v46;
      *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
      a1[22] = a2[22];
      uint64_t v47 = a2[25];
      a1[24] = a2[24];
      a1[25] = v47;
      *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
      uint64_t v48 = a2[27];
      a1[26] = a2[26];
      a1[27] = v48;
      v401 = a2 + 29;
      unint64_t v49 = a2[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v49 >= 0x11)
      {
        a1[29] = *v401;
        a1[30] = v49;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 29) = *(_OWORD *)v401;
      }
      uint64_t v6 = v411;
      goto LABEL_203;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      goto LABEL_204;
  }
  uint64_t v143 = a2[6];
  a1[5] = a2[5];
  a1[6] = v143;
  uint64_t v144 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  v145 = (char *)a1 + v144;
  v146 = (char *)a2 + v144;
  *(void *)((char *)a1 + v144) = *(void *)((char *)a2 + v144);
  uint64_t v147 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  v148 = &v145[v147];
  v149 = &v146[v147];
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v233 = type metadata accessor for PuzzleStatisticValue(0);
      int v234 = swift_getEnumCaseMultiPayload();
      uint64_t v415 = v233;
      if (v234 == 5)
      {
        uint64_t v353 = type metadata accessor for PuzzleStreak();
        uint64_t v354 = *(void *)(v353 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48))(v149, 1, v353))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v148, v149, *(void *)(*(void *)(v355 - 8) + 64));
        }
        else
        {
          uint64_t v366 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v366 - 8) + 16))(v148, v149, v366);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v354 + 56))(v148, 0, 1, v353);
        }
        uint64_t v356 = v6;
        uint64_t v233 = v415;
      }
      else
      {
        if (v234 != 4)
        {
          uint64_t v356 = v6;
          memcpy(v148, v149, *(void *)(*(void *)(v233 - 8) + 64));
          goto LABEL_181;
        }
        uint64_t v235 = type metadata accessor for PuzzleStreak();
        uint64_t v236 = *(void *)(v235 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v236 + 48))(v149, 1, v235))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v148, v149, *(void *)(*(void *)(v237 - 8) + 64));
        }
        else
        {
          uint64_t v364 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 16))(v148, v149, v364);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v236 + 56))(v148, 0, 1, v235);
        }
        uint64_t v356 = v6;
        uint64_t v233 = v415;
      }
      swift_storeEnumTagMultiPayload();
LABEL_181:
      uint64_t v367 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v368 = *(int *)(v367 + 20);
      v369 = v148;
      v370 = &v148[v368];
      v371 = &v149[v368];
      int v372 = swift_getEnumCaseMultiPayload();
      if (v372 == 5)
      {
        uint64_t v376 = type metadata accessor for PuzzleStreak();
        uint64_t v377 = *(void *)(v376 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v377 + 48))(v371, 1, v376))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v370, v371, *(void *)(*(void *)(v378 - 8) + 64));
        }
        else
        {
          uint64_t v380 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v380 - 8) + 16))(v370, v371, v380);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v377 + 56))(v370, 0, 1, v376);
        }
        uint64_t v233 = v415;
      }
      else
      {
        if (v372 != 4)
        {
          memcpy(v370, v371, *(void *)(*(void *)(v233 - 8) + 64));
          goto LABEL_193;
        }
        uint64_t v373 = type metadata accessor for PuzzleStreak();
        uint64_t v374 = *(void *)(v373 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v374 + 48))(v371, 1, v373))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v370, v371, *(void *)(*(void *)(v375 - 8) + 64));
        }
        else
        {
          uint64_t v379 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v379 - 8) + 16))(v370, v371, v379);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v374 + 56))(v370, 0, 1, v373);
        }
        uint64_t v233 = v415;
      }
      swift_storeEnumTagMultiPayload();
LABEL_193:
      uint64_t v381 = *(int *)(v367 + 24);
      v382 = (char *)v369 + v381;
      v383 = &v149[v381];
      int v384 = swift_getEnumCaseMultiPayload();
      if (v384 == 5)
      {
        uint64_t v385 = type metadata accessor for PuzzleStreak();
        uint64_t v386 = *(void *)(v385 - 8);
        uint64_t v6 = v356;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v386 + 48))(v383, 1, v385)) {
          goto LABEL_196;
        }
      }
      else
      {
        uint64_t v6 = v356;
        if (v384 != 4)
        {
          memcpy(v382, v383, *(void *)(*(void *)(v233 - 8) + 64));
          goto LABEL_202;
        }
        uint64_t v385 = type metadata accessor for PuzzleStreak();
        uint64_t v386 = *(void *)(v385 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v386 + 48))(v383, 1, v385))
        {
LABEL_196:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v382, v383, *(void *)(*(void *)(v387 - 8) + 64));
          goto LABEL_201;
        }
      }
      uint64_t v388 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v388 - 8) + 16))(v382, v383, v388);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v386 + 56))(v382, 0, 1, v385);
      goto LABEL_201;
    case 2u:
      v229 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v230 = *((void *)v229 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v230 + 48))(v149, 1, v229))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        size_t v232 = *(void *)(*(void *)(v231 - 8) + 64);
        goto LABEL_166;
      }
      uint64_t v417 = v6;
      uint64_t v302 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 16))(v148, v149, v302);
      uint64_t v303 = type metadata accessor for PuzzleLeaderboardEntry();
      v304 = v148;
      v305 = (int *)v303;
      uint64_t v306 = *(int *)(v303 + 20);
      v307 = &v304[v306];
      v308 = &v149[v306];
      uint64_t v309 = *((void *)v308 + 1);
      *(void *)v307 = *(void *)v308;
      *((void *)v307 + 1) = v309;
      uint64_t v310 = v305[6];
      v405 = v304;
      v311 = &v304[v310];
      v312 = &v149[v310];
      uint64_t v313 = *((void *)v312 + 1);
      *(void *)v311 = *(void *)v312;
      *((void *)v311 + 1) = v313;
      v314 = (uint64_t *)(v312 + 16);
      unint64_t v315 = *((void *)v312 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v315 >> 60 == 15)
      {
        *((_OWORD *)v311 + 1) = *(_OWORD *)v314;
      }
      else
      {
        uint64_t v358 = *v314;
        sub_1BFE95820(*v314, v315);
        *((void *)v311 + 2) = v358;
        *((void *)v311 + 3) = v315;
      }
      *(void *)&v405[v305[7]] = *(void *)&v149[v305[7]];
      *(void *)&v405[v305[8]] = *(void *)&v149[v305[8]];
      *(void *)&v405[v229[5]] = *(void *)&v149[v229[5]];
      *(void *)&v405[v229[6]] = *(void *)&v149[v229[6]];
      uint64_t v359 = v229[7];
      v360 = &v405[v359];
      v361 = &v149[v359];
      uint64_t v362 = *((void *)v361 + 1);
      *(void *)v360 = *(void *)v361;
      *((void *)v360 + 1) = v362;
      v363 = *(void (**)(char *, void, uint64_t, int *))(v230 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v363(v405, 0, 1, v229);
      uint64_t v6 = v417;
      goto LABEL_202;
    case 3u:
      uint64_t v416 = v6;
      uint64_t v238 = *((void *)v149 + 1);
      *(void *)v148 = *(void *)v149;
      *((void *)v148 + 1) = v238;
      v148[16] = v149[16];
      v239 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v240 = v239[6];
      v404 = v148;
      v241 = &v148[v240];
      v242 = &v149[v240];
      uint64_t v243 = type metadata accessor for PuzzleStreak();
      uint64_t v244 = *(void *)(v243 - 8);
      v245 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v244 + 48);
      if (v245(v242, 1, v243))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v241, v242, *(void *)(*(void *)(v246 - 8) + 64));
      }
      else
      {
        uint64_t v334 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v334 - 8) + 16))(v241, v242, v334);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v244 + 56))(v241, 0, 1, v243);
      }
      uint64_t v335 = v239[7];
      v336 = &v404[v335];
      v337 = &v149[v335];
      if (v245(&v149[v335], 1, v243))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v336, v337, *(void *)(*(void *)(v338 - 8) + 64));
      }
      else
      {
        uint64_t v339 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v339 - 8) + 16))(v336, v337, v339);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v244 + 56))(v336, 0, 1, v243);
      }
      uint64_t v6 = v416;
      uint64_t v340 = v239[8];
      v341 = &v404[v340];
      v342 = &v149[v340];
      long long v343 = *((_OWORD *)v342 + 1);
      *(_OWORD *)v341 = *(_OWORD *)v342;
      *((_OWORD *)v341 + 1) = v343;
      *(_OWORD *)(v341 + 25) = *(_OWORD *)(v342 + 25);
      uint64_t v344 = v239[9];
      v345 = &v404[v344];
      v346 = &v149[v344];
      *(_OWORD *)(v345 + 25) = *(_OWORD *)(v346 + 25);
      long long v347 = *((_OWORD *)v346 + 1);
      *(_OWORD *)v345 = *(_OWORD *)v346;
      *((_OWORD *)v345 + 1) = v347;
      uint64_t v348 = v239[10];
      v349 = &v404[v348];
      v350 = &v149[v348];
      long long v351 = *((_OWORD *)v350 + 1);
      *(_OWORD *)v349 = *(_OWORD *)v350;
      *((_OWORD *)v349 + 1) = v351;
      *(_OWORD *)(v349 + 25) = *(_OWORD *)(v350 + 25);
      goto LABEL_202;
    default:
      uint64_t v150 = type metadata accessor for PuzzleStatisticValue(0);
      int v151 = swift_getEnumCaseMultiPayload();
      if (v151 == 5)
      {
        v152 = v148;
        uint64_t v153 = type metadata accessor for PuzzleStreak();
        uint64_t v154 = *(void *)(v153 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v149, 1, v153))
        {
LABEL_164:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v152, v149, *(void *)(*(void *)(v352 - 8) + 64));
          goto LABEL_201;
        }
      }
      else
      {
        if (v151 != 4)
        {
          size_t v232 = *(void *)(*(void *)(v150 - 8) + 64);
LABEL_166:
          memcpy(v148, v149, v232);
          goto LABEL_202;
        }
        v152 = v148;
        uint64_t v153 = type metadata accessor for PuzzleStreak();
        uint64_t v154 = *(void *)(v153 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v149, 1, v153)) {
          goto LABEL_164;
        }
      }
      uint64_t v365 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v365 - 8) + 16))(v152, v149, v365);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v152, 0, 1, v153);
LABEL_201:
      swift_storeEnumTagMultiPayload();
LABEL_202:
      swift_storeEnumTagMultiPayload();
LABEL_203:
      swift_storeEnumTagMultiPayload();
LABEL_204:
      uint64_t v389 = *(int *)(v6 + 24);
      *(void *)((char *)a1 + *(int *)(v6 + 20)) = *(void *)((char *)a2 + *(int *)(v6 + 20));
      *(void *)((char *)a1 + v389) = *(void *)((char *)a2 + v389);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
  }
}

uint64_t destroy for FeedItemAuxiliaryItem(uint64_t a1)
{
  type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 48) < 0x11uLL) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) < 0x11uLL) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for FeedBannerAd();
      uint64_t v3 = a1 + *(int *)(v2 + 20);
      uint64_t v4 = sub_1C151DBAC();
      goto LABEL_53;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      int v5 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v6 = a1 + v5[10];
      uint64_t v7 = v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      uint64_t v8 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
      {
        uint64_t v9 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);

        uint64_t v10 = v7 + *(int *)(v8 + 28);
        uint64_t v11 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      uint64_t v12 = a1 + v5[11];
      uint64_t v13 = sub_1C151D2DC();
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      }
      if (*(void *)(a1 + v5[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + v5[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }

      goto LABEL_73;
    case 4u:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v15 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v16 = a1 + v15[8];
      uint64_t v17 = sub_1C1515FDC();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v19(v16, v17);
      uint64_t v20 = a1 + v15[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v17)) {
        v19(v20, v17);
      }
      swift_release();
      swift_release();
      uint64_t v21 = a1 + v15[12];
      id v22 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v22 - 1) + 48))(v21, 1, v22))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v23 = v22[10];
        uint64_t v24 = v21 + v23 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v25 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25))
        {
          uint64_t v26 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v24, v26);

          v19(v24 + *(int *)(v25 + 28), v17);
        }
        uint64_t v63 = v19;
        uint64_t v27 = v21 + v22[11];
        uint64_t v28 = sub_1C151D2DC();
        uint64_t v29 = *(void *)(v28 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28)) {
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
        }
        if (*(void *)(v21 + v22[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v19 = v63;
        if (*(void *)(v21 + v22[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v30 = a1 + v15[13];
      uint64_t v31 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31)) {
        goto LABEL_73;
      }
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_55;
      }
      swift_bridgeObjectRelease();
      uint64_t v32 = type metadata accessor for GenericDataVisualization();
      v19(v30 + *(int *)(v32 + 20), v17);
      goto LABEL_72;
    case 5u:
      goto LABEL_36;
    case 6u:
      int v33 = *(unsigned __int8 *)(a1 + 281);
      if (v33 == 2) {
        goto LABEL_40;
      }
      if (v33 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 128) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v41 = *(void **)(a1 + 144);
        if (!v41) {
          goto LABEL_73;
        }

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 272) < 0x11uLL) {
          goto LABEL_73;
        }
LABEL_72:
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      if (*(unsigned char *)(a1 + 281)) {
        goto LABEL_73;
      }
LABEL_36:

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 128) >= 0x11uLL) {
        goto LABEL_72;
      }
LABEL_73:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 7u:
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 120)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 96);
        }
      }
      goto LABEL_73;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v34 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = v34 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v36 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36))
      {
        uint64_t v37 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v35, v37);
      }
      goto LABEL_72;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 56)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      }
      if (*(void *)(a1 + 96)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 72);
      }
      if (*(void *)(a1 + 136)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 112);
      }
      goto LABEL_73;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for FeedEngagementBanner();
      uint64_t v3 = a1 + *(int *)(v2 + 20);
      uint64_t v4 = sub_1C151959C();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      if (*(void *)(a1 + *(int *)(v2 + 32) + 8) < 0x11uLL) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 0xBu:
LABEL_55:
      swift_release();
      goto LABEL_73;
    case 0xCu:
      goto LABEL_66;
    case 0xDu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      }
      if (*(void *)(a1 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      }
      if (*(void *)(a1 + 192)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 168);
      }
      goto LABEL_73;
    case 0xEu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_66:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_73;
    case 0xFu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v39 = v38 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_94;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v43 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v39, 1, v43))
            {
              uint64_t v44 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v39, v44);
            }
          }
          uint64_t v45 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v46 = v39 + *(int *)(v45 + 20);
          int v47 = swift_getEnumCaseMultiPayload();
          if (v47 == 5 || v47 == 4)
          {
            uint64_t v48 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v46, 1, v48))
            {
              uint64_t v49 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v46, v49);
            }
          }
          v39 += *(int *)(v45 + 24);
LABEL_94:
          int v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 5 || v50 == 4)
          {
            uint64_t v51 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v39, 1, v51))goto LABEL_105; {
          }
            }
          goto LABEL_73;
        case 2u:
          uint64_t v52 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v39, 1, v52)) {
            goto LABEL_73;
          }
          uint64_t v53 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v39, v53);
          uint64_t v54 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v55 = v39 + *(int *)(v54 + 24);
          swift_bridgeObjectRelease();
          unint64_t v56 = *(void *)(v55 + 24);
          if (v56 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v55 + 16), v56);
          }
          swift_bridgeObjectRelease();
          goto LABEL_72;
        case 3u:
          uint64_t v57 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v58 = v39 + *(int *)(v57 + 24);
          uint64_t v59 = type metadata accessor for PuzzleStreak();
          uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48);
          if (!v60(v58, 1, v59))
          {
            uint64_t v61 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v58, v61);
          }
          v39 += *(int *)(v57 + 28);
          if (!v60(v39, 1, v59))
          {
LABEL_105:
            uint64_t v62 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v39, v62);
          }
          goto LABEL_73;
        default:
          goto LABEL_73;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 240) >= 0x11uLL) {
        goto LABEL_72;
      }
      goto LABEL_73;
    default:
      goto LABEL_73;
  }
}

void *initializeWithCopy for FeedItemAuxiliaryItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v9 = a2 + 5;
      unint64_t v10 = a2[6];
      swift_bridgeObjectRetain();
      if (v10 >= 0x11)
      {
        a1[5] = *v9;
        a1[6] = v10;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 5) = *(_OWORD *)v9;
      }
      goto LABEL_201;
    case 1u:
      uint64_t v48 = a2[1];
      *a1 = *a2;
      a1[1] = v48;
      uint64_t v49 = a2[3];
      a1[2] = a2[2];
      a1[3] = v49;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v50 = a2[6];
      a1[5] = a2[5];
      a1[6] = v50;
      uint64_t v51 = a2[8];
      a1[7] = a2[7];
      a1[8] = v51;
      uint64_t v52 = a2 + 9;
      unint64_t v53 = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53 >= 0x11)
      {
        a1[9] = *v52;
        a1[10] = v53;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 9) = *(_OWORD *)v52;
      }
      goto LABEL_201;
    case 2u:
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v13 = v12[5];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_1C151DBAC();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
      *(void *)((char *)a1 + v12[6]) = *(void *)((char *)a2 + v12[6]);
      uint64_t v18 = v12[7];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v12[8];
      id v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      unint64_t v24 = *((void *)v23 + 1);
      if (v24 >= 0x11) {
        goto LABEL_37;
      }
      *(_OWORD *)id v22 = *(_OWORD *)v23;
      goto LABEL_201;
    case 3u:
      uint64_t v54 = a2[1];
      uint64_t v407 = a3;
      *a1 = *a2;
      a1[1] = v54;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v55 = a2[5];
      a1[4] = a2[4];
      a1[5] = v55;
      a1[6] = a2[6];
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      v395 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v56 = v395[10];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      *uint64_t v57 = *((unsigned char *)a2 + v56);
      v57[1] = *((unsigned char *)a2 + v56 + 1);
      uint64_t v59 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v60 = v59[6];
      __dst = &v57[v60];
      uint64_t v61 = &v58[v60];
      uint64_t v62 = (int *)type metadata accessor for SharedItem();
      uint64_t v388 = *((void *)v62 - 1);
      uint64_t v63 = *(unsigned int (**)(char *, uint64_t, int *))(v388 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v63(v61, 1, v62))
      {
        uint64_t v64 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v61, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        uint64_t v181 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(__dst, v61, v181);
        __dst[v62[5]] = v61[v62[5]];
        uint64_t v182 = v62[6];
        uint64_t v183 = *(void **)&v61[v182];
        *(void *)&__dst[v182] = v183;
        uint64_t v184 = v62[7];
        v399 = &v61[v184];
        v404 = &__dst[v184];
        uint64_t v185 = sub_1C1515FDC();
        uint64_t v387 = *(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16);
        id v186 = v183;
        v387(v404, v399, v185);
        (*(void (**)(char *, void, uint64_t, int *))(v388 + 56))(__dst, 0, 1, v62);
      }
      a3 = v407;
      v57[v59[7]] = v58[v59[7]];
      v57[v59[8]] = v58[v59[8]];
      v57[v59[9]] = v58[v59[9]];
      v57[v59[10]] = v58[v59[10]];
      uint64_t v187 = v395[11];
      uint64_t v188 = (char *)a1 + v187;
      uint64_t v189 = (char *)a2 + v187;
      uint64_t v190 = sub_1C151D2DC();
      uint64_t v191 = *(void *)(v190 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v188, v189, *(void *)(*(void *)(v192 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v188, v189, v190);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v191 + 56))(v188, 0, 1, v190);
      }
      uint64_t v199 = v395[12];
      v200 = (void *)((char *)a1 + v199);
      uint64_t v201 = (void *)((char *)a2 + v199);
      unint64_t v202 = v201[1];
      if (v202 >= 0x11)
      {
        void *v200 = *v201;
        v200[1] = v202;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v200 = *(_OWORD *)v201;
      }
      uint64_t v203 = v395[13];
      unint64_t v204 = *(void *)((char *)a2 + v203);
      if (v204 >= 2)
      {
        if (v204 == 2)
        {
          *(void *)((char *)a1 + v203) = 2;
        }
        else
        {
          *(void *)((char *)a1 + v203) = v204;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)((char *)a1 + v203) = v204;
      }
      uint64_t v242 = v395[14];
      uint64_t v243 = *(void **)((char *)a2 + v242);
      *(void *)((char *)a1 + v242) = v243;
      id v244 = v243;
      goto LABEL_201;
    case 4u:
      uint64_t v25 = a2[1];
      *a1 = *a2;
      a1[1] = v25;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v26 = a2 + 3;
      unint64_t v27 = a2[4];
      uint64_t v405 = a3;
      if (v27 >= 0x11)
      {
        a1[3] = *v26;
        a1[4] = v27;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v26;
      }
      uint64_t v115 = a2[6];
      a1[5] = a2[5];
      a1[6] = v115;
      uint64_t v116 = type metadata accessor for FeedWebEmbed();
      uint64_t v117 = *(int *)(v116 + 32);
      uint64_t v118 = (char *)a1 + v117;
      uint64_t v119 = (char *)a2 + v117;
      uint64_t v120 = sub_1C1515FDC();
      uint64_t v121 = *(void *)(v120 - 8);
      uint64_t v122 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
      swift_bridgeObjectRetain();
      v122(v118, v119, v120);
      v403 = (int *)v116;
      uint64_t v123 = *(int *)(v116 + 36);
      id v124 = (char *)a1 + v123;
      uint64_t v125 = (char *)a2 + v123;
      uint64_t v398 = v120;
      __dstb = v122;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))((char *)a2 + v123, 1, v120))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
      }
      else
      {
        v122(v124, v125, v120);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v124, 0, 1, v120);
      }
      *(void *)((char *)a1 + v403[10]) = *(void *)((char *)a2 + v403[10]);
      *(void *)((char *)a1 + v403[11]) = *(void *)((char *)a2 + v403[11]);
      uint64_t v157 = v403[12];
      uint64_t v158 = (void *)((char *)a1 + v157);
      uint64_t v159 = (void *)((char *)a2 + v157);
      uint64_t v160 = type metadata accessor for FeedHeadline(0);
      uint64_t v161 = *(void *)(v160 - 8);
      v162 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v161 + 48);
      swift_retain();
      swift_retain();
      if (v162(v159, 1, v160))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v158, v159, *(void *)(*(void *)(v163 - 8) + 64));
      }
      else
      {
        uint64_t v385 = v161;
        uint64_t v169 = v159[1];
        *uint64_t v158 = *v159;
        v158[1] = v169;
        v158[2] = v159[2];
        *((unsigned char *)v158 + 24) = *((unsigned char *)v159 + 24);
        uint64_t v170 = v159[5];
        v158[4] = v159[4];
        v158[5] = v170;
        v158[6] = v159[6];
        *((unsigned char *)v158 + 56) = *((unsigned char *)v159 + 56);
        uint64_t v386 = v158;
        uint64_t v389 = (int *)v160;
        uint64_t v171 = *(int *)(v160 + 40);
        uint64_t v172 = (char *)v158 + v171;
        uint64_t v173 = (char *)v159 + v171;
        *uint64_t v172 = *((unsigned char *)v159 + v171);
        v172[1] = *((unsigned char *)v159 + v171 + 1);
        uint64_t v174 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v175 = *(int *)(v174 + 24);
        v383 = &v172[v175];
        int v384 = (int *)v174;
        v176 = &v173[v175];
        v177 = (int *)type metadata accessor for SharedItem();
        uint64_t v382 = *((void *)v177 - 1);
        uint64_t v178 = *(unsigned int (**)(char *, uint64_t, int *))(v382 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v178(v176, 1, v177))
        {
          uint64_t v179 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v383, v176, *(void *)(*(void *)(v179 - 8) + 64));
        }
        else
        {
          uint64_t v268 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v383, v176, v268);
          v383[v177[5]] = v176[v177[5]];
          uint64_t v269 = v177[6];
          id v270 = *(void **)&v176[v269];
          *(void *)&v383[v269] = v270;
          uint64_t v271 = v177[7];
          long long v272 = &v383[v271];
          uint64_t v273 = &v176[v271];
          id v274 = v270;
          __dstb(v272, v273, v398);
          (*(void (**)(char *, void, uint64_t, int *))(v382 + 56))(v383, 0, 1, v177);
        }
        v172[v384[7]] = v173[v384[7]];
        v172[v384[8]] = v173[v384[8]];
        v172[v384[9]] = v173[v384[9]];
        v172[v384[10]] = v173[v384[10]];
        uint64_t v275 = *(int *)(v160 + 44);
        uint64_t v276 = (char *)v386 + v275;
        v277 = (char *)v159 + v275;
        uint64_t v278 = sub_1C151D2DC();
        uint64_t v279 = *(void *)(v278 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v279 + 48))(v277, 1, v278))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v276, v277, *(void *)(*(void *)(v280 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v279 + 16))(v276, v277, v278);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v279 + 56))(v276, 0, 1, v278);
        }
        uint64_t v281 = v389[12];
        v282 = (void *)((char *)v386 + v281);
        uint64_t v283 = (void *)((char *)v159 + v281);
        unint64_t v284 = v283[1];
        if (v284 >= 0x11)
        {
          void *v282 = *v283;
          v282[1] = v284;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v282 = *(_OWORD *)v283;
        }
        uint64_t v285 = v389[13];
        unint64_t v286 = *(void *)((char *)v159 + v285);
        if (v286 >= 2)
        {
          if (v286 == 2)
          {
            *(void *)((char *)v386 + v285) = 2;
          }
          else
          {
            *(void *)((char *)v386 + v285) = v286;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v386 + v285) = v286;
        }
        uint64_t v309 = v389[14];
        uint64_t v310 = *(void **)((char *)v159 + v309);
        *(void *)((char *)v386 + v309) = v310;
        v311 = *(void (**)(void *, void, uint64_t, int *))(v385 + 56);
        id v312 = v310;
        v311(v386, 0, 1, v389);
      }
      uint64_t v313 = v403[13];
      v314 = (void *)((char *)a1 + v313);
      unint64_t v315 = (void *)((char *)a2 + v313);
      uint64_t v316 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v317 = *(void *)(v316 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v317 + 48))(v315, 1, v316))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v314, v315, *(void *)(*(void *)(v318 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v320 = *v315;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v321 = v315[1];
          void *v314 = v320;
          v314[1] = v321;
          uint64_t v322 = type metadata accessor for GenericDataVisualization();
          uint64_t v323 = *(int *)(v322 + 20);
          uint64_t v324 = (char *)v314 + v323;
          uint64_t v325 = (char *)v315 + v323;
          swift_bridgeObjectRetain();
          __dstb(v324, v325, v398);
          *(void *)((char *)v314 + *(int *)(v322 + 24)) = *(uint64_t *)((char *)v315 + *(int *)(v322 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *v314 = v320;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v314, 0, 1, v316);
      }
      *((unsigned char *)a1 + v403[14]) = *((unsigned char *)a2 + v403[14]);
      goto LABEL_156;
    case 5u:
      uint64_t v65 = (void *)*a2;
      uint64_t v66 = a2[1];
      *a1 = *a2;
      a1[1] = v66;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v67 = (void *)a2[7];
      a1[6] = a2[6];
      a1[7] = v67;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v68 = a2[10];
      id v69 = v65;
      swift_bridgeObjectRetain();
      id v70 = v67;
      if (v68 == 1)
      {
        long long v71 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 11) = v71;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      }
      else
      {
        a1[9] = a2[9];
        a1[10] = v68;
        uint64_t v128 = a2[12];
        a1[11] = a2[11];
        a1[12] = v128;
        uint64_t v130 = (void *)a2[13];
        uint64_t v129 = a2[14];
        a1[13] = v130;
        a1[14] = v129;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v131 = v130;
      }
      uint64_t v132 = a2 + 15;
      unint64_t v133 = a2[16];
      if (v133 >= 0x11)
      {
        a1[15] = *v132;
        a1[16] = v133;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v132;
      }
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      goto LABEL_201;
    case 6u:
      int v72 = *((unsigned __int8 *)a2 + 281);
      if (v72 == 2)
      {
        uint64_t v211 = a2[1];
        *a1 = *a2;
        a1[1] = v211;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v212 = a2[7];
        a1[6] = a2[6];
        a1[7] = v212;
        uint64_t v213 = a2[9];
        a1[8] = a2[8];
        a1[9] = v213;
        uint64_t v214 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v214 != 1)
        {
          a1[10] = a2[10];
          a1[11] = v214;
          uint64_t v252 = a2[15];
          swift_bridgeObjectRetain();
          if (v252)
          {
            uint64_t v253 = a2[16];
            a1[15] = v252;
            a1[16] = v253;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v252 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v252);
            a1[17] = a2[17];
          }
          else
          {
            long long v349 = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 7) = v349;
            *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
          }
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          goto LABEL_169;
        }
        uint64_t v215 = a1 + 10;
        uint64_t v216 = a2 + 10;
        long long v217 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v217;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
LABEL_140:
        long long v290 = v216[1];
        *uint64_t v215 = *v216;
        v215[1] = v290;
        goto LABEL_169;
      }
      if (v72 != 1)
      {
        uint64_t v218 = (void *)*a2;
        uint64_t v219 = a2[1];
        *a1 = *a2;
        a1[1] = v219;
        a1[2] = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        v220 = (void *)a2[7];
        a1[6] = a2[6];
        a1[7] = v220;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v221 = a2[10];
        id v222 = v218;
        swift_bridgeObjectRetain();
        id v223 = v220;
        if (v221 == 1)
        {
          long long v224 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 11) = v224;
          *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = v221;
          uint64_t v254 = a2[12];
          a1[11] = a2[11];
          a1[12] = v254;
          unint64_t v256 = (void *)a2[13];
          uint64_t v255 = a2[14];
          a1[13] = v256;
          a1[14] = v255;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v257 = v256;
        }
        uint64_t v258 = a2 + 15;
        unint64_t v259 = a2[16];
        if (v259 >= 0x11)
        {
          a1[15] = *v258;
          a1[16] = v259;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)v258;
        }
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        goto LABEL_169;
      }
      long long v73 = (void *)*a2;
      uint64_t v74 = a2[1];
      *a1 = *a2;
      a1[1] = v74;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      unsigned __int8 v75 = (void *)a2[7];
      a1[6] = a2[6];
      a1[7] = v75;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v76 = a2[10];
      id v77 = v73;
      swift_bridgeObjectRetain();
      id v78 = v75;
      if (v76 == 1)
      {
        long long v79 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 11) = v79;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      }
      else
      {
        a1[9] = a2[9];
        a1[10] = v76;
        uint64_t v246 = a2[12];
        a1[11] = a2[11];
        a1[12] = v246;
        v248 = (void *)a2[13];
        uint64_t v247 = a2[14];
        a1[13] = v248;
        a1[14] = v247;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v249 = v248;
      }
      long long v250 = a2 + 15;
      unint64_t v251 = a2[16];
      if (v251 >= 0x11)
      {
        a1[15] = *v250;
        a1[16] = v251;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v250;
      }
      uint64_t v216 = a2 + 18;
      uint64_t v260 = (void *)a2[18];
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      if (!v260)
      {
        uint64_t v215 = a1 + 18;
        long long v287 = *((_OWORD *)a2 + 16);
        *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
        *((_OWORD *)a1 + 16) = v287;
        *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
        long long v288 = *((_OWORD *)a2 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 12) = v288;
        long long v289 = *((_OWORD *)a2 + 14);
        *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
        *((_OWORD *)a1 + 14) = v289;
        goto LABEL_140;
      }
      uint64_t v261 = a2[19];
      uint64_t v262 = a2[20];
      a1[18] = v260;
      a1[19] = v261;
      a1[20] = v262;
      *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
      a1[22] = a2[22];
      *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
      v263 = (void *)a2[25];
      a1[24] = a2[24];
      a1[25] = v263;
      *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
      uint64_t v264 = a2[28];
      id v265 = v260;
      swift_bridgeObjectRetain();
      id v266 = v263;
      if (v264 == 1)
      {
        long long v267 = *(_OWORD *)(a2 + 29);
        *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
        *(_OWORD *)(a1 + 29) = v267;
        *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
      }
      else
      {
        a1[27] = a2[27];
        a1[28] = v264;
        uint64_t v291 = a2[30];
        a1[29] = a2[29];
        a1[30] = v291;
        long long v293 = (void *)a2[31];
        uint64_t v292 = a2[32];
        a1[31] = v293;
        a1[32] = v292;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v294 = v293;
      }
      long long v295 = a2 + 33;
      unint64_t v296 = a2[34];
      if (v296 >= 0x11)
      {
        a1[33] = *v295;
        a1[34] = v296;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 33) = *(_OWORD *)v295;
      }
      *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_169:
      *((unsigned char *)a1 + 281) = v72;
LABEL_201:
      swift_storeEnumTagMultiPayload();
LABEL_202:
      uint64_t v380 = *(int *)(a3 + 24);
      *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
      *(void *)((char *)a1 + v380) = *(void *)((char *)a2 + v380);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    case 7u:
      uint64_t v80 = a2[1];
      *a1 = *a2;
      a1[1] = v80;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v81 = a2[7];
      a1[6] = a2[6];
      a1[7] = v81;
      uint64_t v82 = a2[9];
      a1[8] = a2[8];
      a1[9] = v82;
      uint64_t v83 = a2[11];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v83 == 1)
      {
        long long v84 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v84;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
        long long v85 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v85;
      }
      else
      {
        a1[10] = a2[10];
        a1[11] = v83;
        uint64_t v134 = a2[15];
        swift_bridgeObjectRetain();
        if (v134)
        {
          uint64_t v135 = a2[16];
          a1[15] = v134;
          a1[16] = v135;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v134 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v134);
          a1[17] = a2[17];
        }
        else
        {
          long long v245 = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 7) = v245;
          *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
        }
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
      }
      goto LABEL_201;
    case 8u:
      uint64_t v86 = a2[1];
      uint64_t v405 = a3;
      *a1 = *a2;
      a1[1] = v86;
      uint64_t v87 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v88 = (void *)((char *)a1 + v87);
      uint64_t v89 = (char *)a2 + v87;
      uint64_t v90 = *(void *)((char *)a2 + v87 + 8);
      *uint64_t v88 = *(void *)((char *)a2 + v87);
      v88[1] = v90;
      uint64_t v91 = *(void *)((char *)a2 + v87 + 24);
      v88[2] = *(void *)((char *)a2 + v87 + 16);
      v88[3] = v91;
      uint64_t v92 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v93 = *(int *)(v92 + 24);
      uint64_t v396 = (char *)v88 + v93;
      uint64_t v397 = v92;
      uint64_t v94 = &v89[v93];
      uint64_t v95 = type metadata accessor for FormatCustomItem.Action();
      __dsta = *(void **)(v95 - 8);
      id v96 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v96(v94, 1, v95))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v396, v94, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        uint64_t v193 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16))(v396, v94, v193);
        ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v396, 0, 1, v95);
      }
      *(void *)((char *)v88 + *(int *)(v397 + 28)) = *(void *)&v89[*(int *)(v397 + 28)];
      swift_bridgeObjectRetain();
LABEL_156:
      swift_storeEnumTagMultiPayload();
      a3 = v405;
      goto LABEL_202;
    case 9u:
      uint64_t v28 = a2[1];
      *a1 = *a2;
      a1[1] = v28;
      uint64_t v29 = a2[3];
      a1[2] = a2[2];
      a1[3] = v29;
      uint64_t v30 = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30)
      {
        uint64_t v31 = a2[8];
        a1[7] = v30;
        a1[8] = v31;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v30);
      }
      else
      {
        long long v152 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v152;
        a1[8] = a2[8];
      }
      uint64_t v153 = a1 + 9;
      uint64_t v154 = a2 + 9;
      uint64_t v155 = a2[12];
      if (v155)
      {
        uint64_t v156 = a2[13];
        a1[12] = v155;
        a1[13] = v156;
        (**(void (***)(_OWORD *, _OWORD *))(v155 - 8))(v153, v154);
      }
      else
      {
        long long v164 = *(_OWORD *)(a2 + 11);
        *uint64_t v153 = *v154;
        *(_OWORD *)(a1 + 11) = v164;
        a1[13] = a2[13];
      }
      v165 = a1 + 14;
      v166 = a2 + 14;
      uint64_t v167 = a2[17];
      if (v167)
      {
        uint64_t v168 = a2[18];
        a1[17] = v167;
        a1[18] = v168;
        (**(void (***)(_OWORD *, _OWORD *))(v167 - 8))(v165, v166);
      }
      else
      {
        long long v180 = *((_OWORD *)a2 + 8);
        _OWORD *v165 = *v166;
        *((_OWORD *)a1 + 8) = v180;
        a1[18] = a2[18];
      }
      goto LABEL_201;
    case 0xAu:
      uint64_t v98 = a2[1];
      *a1 = *a2;
      a1[1] = v98;
      uint64_t v99 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v100 = v99[5];
      uint64_t v101 = (char *)a1 + v100;
      uint64_t v102 = (char *)a2 + v100;
      uint64_t v103 = sub_1C151959C();
      uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16);
      swift_bridgeObjectRetain();
      v104(v101, v102, v103);
      *(void *)((char *)a1 + v99[6]) = *(void *)((char *)a2 + v99[6]);
      uint64_t v105 = v99[7];
      id v106 = (char *)a1 + v105;
      uint64_t v107 = (char *)a2 + v105;
      *(void *)id v106 = *(void *)v107;
      v106[8] = v107[8];
      uint64_t v108 = v99[8];
      id v22 = (char *)a1 + v108;
      uint64_t v23 = (char *)a2 + v108;
      unint64_t v24 = *((void *)v23 + 1);
      if (v24 >= 0x11)
      {
LABEL_37:
        *(void *)id v22 = *(void *)v23;
        *((void *)v22 + 1) = v24;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)id v22 = *(_OWORD *)v23;
      }
      goto LABEL_201;
    case 0xBu:
      *a1 = *a2;
      swift_retain();
      goto LABEL_201;
    case 0xCu:
      uint64_t v32 = a2[1];
      *a1 = *a2;
      a1[1] = v32;
      uint64_t v33 = a2[3];
      a1[2] = a2[2];
      a1[3] = v33;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_201;
    case 0xDu:
      uint64_t v109 = a2[1];
      *a1 = *a2;
      a1[1] = v109;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v110 = a2 + 3;
      unint64_t v111 = a2[4];
      if (v111 >= 0x11)
      {
        a1[3] = *v110;
        a1[4] = v111;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v110;
      }
      uint64_t v136 = a2[6];
      a1[5] = a2[5];
      a1[6] = v136;
      uint64_t v137 = (void *)a2[8];
      a1[7] = a2[7];
      a1[8] = v137;
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      a1[10] = a2[10];
      uint64_t v138 = a2[14];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v139 = v137;
      swift_bridgeObjectRetain();
      if (v138)
      {
        uint64_t v140 = a2[15];
        a1[14] = v138;
        a1[15] = v140;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v138 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v138);
      }
      else
      {
        long long v194 = *(_OWORD *)(a2 + 13);
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 13) = v194;
        a1[15] = a2[15];
      }
      uint64_t v195 = a1 + 16;
      uint64_t v196 = a2 + 16;
      uint64_t v197 = a2[19];
      if (v197)
      {
        uint64_t v198 = a2[20];
        a1[19] = v197;
        a1[20] = v198;
        (**(void (***)(_OWORD *, _OWORD *))(v197 - 8))(v195, v196);
      }
      else
      {
        long long v205 = *((_OWORD *)a2 + 9);
        *uint64_t v195 = *v196;
        *((_OWORD *)a1 + 9) = v205;
        a1[20] = a2[20];
      }
      unint64_t v206 = a1 + 21;
      uint64_t v207 = a2 + 21;
      uint64_t v208 = a2[24];
      if (v208)
      {
        uint64_t v209 = a2[25];
        a1[24] = v208;
        a1[25] = v209;
        (**(void (***)(_OWORD *, _OWORD *))(v208 - 8))(v206, v207);
      }
      else
      {
        long long v210 = *(_OWORD *)(a2 + 23);
        *unint64_t v206 = *v207;
        *(_OWORD *)(a1 + 23) = v210;
        a1[25] = a2[25];
      }
      goto LABEL_201;
    case 0xEu:
      uint64_t v34 = a2[1];
      *a1 = *a2;
      a1[1] = v34;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v35 = a2 + 3;
      unint64_t v36 = a2[4];
      if (v36 >= 0x11)
      {
        a1[3] = *v35;
        a1[4] = v36;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v35;
      }
      uint64_t v127 = a2[6];
      a1[5] = a2[5];
      a1[6] = v127;
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_201;
    case 0xFu:
      uint64_t v112 = a2[1];
      *a1 = *a2;
      a1[1] = v112;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      unint64_t v113 = a2 + 3;
      unint64_t v114 = a2[4];
      if (v114 >= 0x11)
      {
        a1[3] = *v113;
        a1[4] = v114;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v113;
      }
      break;
    case 0x10u:
      uint64_t v37 = a2[1];
      *a1 = *a2;
      a1[1] = v37;
      uint64_t v38 = a2[3];
      uint64_t v406 = a3;
      a1[2] = a2[2];
      a1[3] = v38;
      uint64_t v39 = a2[5];
      a1[4] = a2[4];
      a1[5] = v39;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
      uint64_t v40 = a2[10];
      a1[9] = a2[9];
      a1[10] = v40;
      uint64_t v41 = a2[12];
      a1[11] = a2[11];
      a1[12] = v41;
      a1[13] = a2[13];
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      uint64_t v42 = a2[16];
      a1[15] = a2[15];
      a1[16] = v42;
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      uint64_t v43 = a2[19];
      a1[18] = a2[18];
      a1[19] = v43;
      uint64_t v44 = a2[21];
      a1[20] = a2[20];
      a1[21] = v44;
      *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
      a1[22] = a2[22];
      uint64_t v45 = a2[25];
      a1[24] = a2[24];
      a1[25] = v45;
      *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
      uint64_t v46 = a2[27];
      a1[26] = a2[26];
      a1[27] = v46;
      uint64_t v394 = a2 + 29;
      unint64_t v47 = a2[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v47 >= 0x11)
      {
        a1[29] = *v394;
        a1[30] = v47;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 29) = *(_OWORD *)v394;
      }
      a3 = v406;
      goto LABEL_201;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_202;
  }
  uint64_t v141 = a2[6];
  a1[5] = a2[5];
  a1[6] = v141;
  uint64_t v142 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v143 = (char *)a1 + v142;
  uint64_t v144 = (char *)a2 + v142;
  *(void *)((char *)a1 + v142) = *(void *)((char *)a2 + v142);
  uint64_t v145 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  v146 = &v143[v145];
  uint64_t v147 = &v144[v145];
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v228 = type metadata accessor for PuzzleStatisticValue(0);
      int v229 = swift_getEnumCaseMultiPayload();
      __dstc = (void *)v228;
      if (v229 == 5)
      {
        uint64_t v345 = type metadata accessor for PuzzleStreak();
        uint64_t v346 = *(void *)(v345 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v346 + 48))(v147, 1, v345))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v146, v147, *(void *)(*(void *)(v347 - 8) + 64));
        }
        else
        {
          uint64_t v358 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 16))(v146, v147, v358);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v346 + 56))(v146, 0, 1, v345);
        }
        uint64_t v348 = a3;
        uint64_t v228 = (uint64_t)__dstc;
      }
      else
      {
        if (v229 != 4)
        {
          uint64_t v348 = a3;
          memcpy(v146, v147, *(void *)(*(void *)(v228 - 8) + 64));
          goto LABEL_179;
        }
        uint64_t v230 = type metadata accessor for PuzzleStreak();
        uint64_t v231 = *(void *)(v230 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v231 + 48))(v147, 1, v230))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v146, v147, *(void *)(*(void *)(v232 - 8) + 64));
        }
        else
        {
          uint64_t v356 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v146, v147, v356);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v231 + 56))(v146, 0, 1, v230);
        }
        uint64_t v348 = a3;
        uint64_t v228 = (uint64_t)__dstc;
      }
      swift_storeEnumTagMultiPayload();
LABEL_179:
      uint64_t v359 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v360 = *(int *)(v359 + 20);
      v361 = &v146[v360];
      uint64_t v362 = &v147[v360];
      int v363 = swift_getEnumCaseMultiPayload();
      if (v363 == 5)
      {
        v402 = v146;
        uint64_t v367 = type metadata accessor for PuzzleStreak();
        uint64_t v368 = *(void *)(v367 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v368 + 48))(v362, 1, v367))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v361, v362, *(void *)(*(void *)(v369 - 8) + 64));
        }
        else
        {
          uint64_t v371 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v371 - 8) + 16))(v361, v362, v371);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v368 + 56))(v361, 0, 1, v367);
        }
        uint64_t v228 = (uint64_t)__dstc;
      }
      else
      {
        if (v363 != 4)
        {
          memcpy(v361, v362, *(void *)(*(void *)(v228 - 8) + 64));
          goto LABEL_191;
        }
        v402 = v146;
        uint64_t v364 = type metadata accessor for PuzzleStreak();
        uint64_t v365 = *(void *)(v364 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v365 + 48))(v362, 1, v364))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v361, v362, *(void *)(*(void *)(v366 - 8) + 64));
        }
        else
        {
          uint64_t v370 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v370 - 8) + 16))(v361, v362, v370);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v365 + 56))(v361, 0, 1, v364);
        }
        uint64_t v228 = (uint64_t)__dstc;
      }
      swift_storeEnumTagMultiPayload();
      v146 = v402;
LABEL_191:
      uint64_t v372 = *(int *)(v359 + 24);
      uint64_t v373 = &v146[v372];
      uint64_t v374 = &v147[v372];
      int v375 = swift_getEnumCaseMultiPayload();
      if (v375 == 5)
      {
        uint64_t v376 = type metadata accessor for PuzzleStreak();
        uint64_t v377 = *(void *)(v376 - 8);
        a3 = v348;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v377 + 48))(v374, 1, v376)) {
          goto LABEL_194;
        }
LABEL_198:
        uint64_t v379 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v379 - 8) + 16))(v373, v374, v379);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v377 + 56))(v373, 0, 1, v376);
        goto LABEL_199;
      }
      a3 = v348;
      if (v375 == 4)
      {
        uint64_t v376 = type metadata accessor for PuzzleStreak();
        uint64_t v377 = *(void *)(v376 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v377 + 48))(v374, 1, v376))
        {
LABEL_194:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v373, v374, *(void *)(*(void *)(v378 - 8) + 64));
          goto LABEL_199;
        }
        goto LABEL_198;
      }
      memcpy(v373, v374, *(void *)(*(void *)(v228 - 8) + 64));
      goto LABEL_200;
    case 2u:
      uint64_t v225 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v226 = *((void *)v225 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v226 + 48))(v147, 1, v225))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        memcpy(v146, v147, *(void *)(*(void *)(v227 - 8) + 64));
      }
      else
      {
        uint64_t v409 = a3;
        uint64_t v297 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 16))(v146, v147, v297);
        v298 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v299 = v298[5];
        v300 = &v146[v299];
        unint64_t v301 = &v147[v299];
        uint64_t v302 = *((void *)v301 + 1);
        *(void *)v300 = *(void *)v301;
        *((void *)v300 + 1) = v302;
        uint64_t v303 = v298[6];
        v401 = v146;
        v304 = &v146[v303];
        v305 = &v147[v303];
        uint64_t v306 = *((void *)v305 + 1);
        *(void *)v304 = *(void *)v305;
        *((void *)v304 + 1) = v306;
        v307 = (uint64_t *)(v305 + 16);
        unint64_t v308 = *((void *)v305 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v308 >> 60 == 15)
        {
          *((_OWORD *)v304 + 1) = *(_OWORD *)v307;
        }
        else
        {
          uint64_t v350 = *v307;
          sub_1BFE95820(*v307, v308);
          *((void *)v304 + 2) = v350;
          *((void *)v304 + 3) = v308;
        }
        *(void *)((char *)v401 + v298[7]) = *(void *)&v147[v298[7]];
        *(void *)((char *)v401 + v298[8]) = *(void *)&v147[v298[8]];
        *(void *)((char *)v401 + v225[5]) = *(void *)&v147[v225[5]];
        *(void *)((char *)v401 + v225[6]) = *(void *)&v147[v225[6]];
        uint64_t v351 = v225[7];
        uint64_t v352 = (void *)((char *)v401 + v351);
        uint64_t v353 = &v147[v351];
        uint64_t v354 = *((void *)v353 + 1);
        *uint64_t v352 = *(void *)v353;
        v352[1] = v354;
        uint64_t v355 = *(void (**)(void *, void, uint64_t, int *))(v226 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v355(v401, 0, 1, v225);
        a3 = v409;
      }
      goto LABEL_200;
    case 3u:
      uint64_t v408 = a3;
      uint64_t v233 = *((void *)v147 + 1);
      *(void *)v146 = *(void *)v147;
      *((void *)v146 + 1) = v233;
      v146[16] = v147[16];
      int v234 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v235 = v234[6];
      v400 = v146;
      uint64_t v236 = &v146[v235];
      uint64_t v237 = &v147[v235];
      uint64_t v238 = type metadata accessor for PuzzleStreak();
      uint64_t v239 = *(void *)(v238 - 8);
      uint64_t v240 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v239 + 48);
      if (v240(v237, 1, v238))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v236, v237, *(void *)(*(void *)(v241 - 8) + 64));
      }
      else
      {
        uint64_t v326 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v326 - 8) + 16))(v236, v237, v326);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v239 + 56))(v236, 0, 1, v238);
      }
      uint64_t v327 = v234[7];
      uint64_t v328 = (char *)v400 + v327;
      uint64_t v329 = &v147[v327];
      if (v240(&v147[v327], 1, v238))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v328, v329, *(void *)(*(void *)(v330 - 8) + 64));
      }
      else
      {
        uint64_t v331 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 16))(v328, v329, v331);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v239 + 56))(v328, 0, 1, v238);
      }
      a3 = v408;
      uint64_t v332 = v234[8];
      v333 = (_OWORD *)((char *)v400 + v332);
      uint64_t v334 = &v147[v332];
      long long v335 = *((_OWORD *)v334 + 1);
      _OWORD *v333 = *(_OWORD *)v334;
      v333[1] = v335;
      *(_OWORD *)((char *)v333 + 25) = *(_OWORD *)(v334 + 25);
      uint64_t v336 = v234[9];
      v337 = (_OWORD *)((char *)v400 + v336);
      uint64_t v338 = &v147[v336];
      *(_OWORD *)((char *)v337 + 25) = *(_OWORD *)(v338 + 25);
      long long v339 = *((_OWORD *)v338 + 1);
      _OWORD *v337 = *(_OWORD *)v338;
      v337[1] = v339;
      uint64_t v340 = v234[10];
      v341 = (_OWORD *)((char *)v400 + v340);
      v342 = &v147[v340];
      long long v343 = *((_OWORD *)v342 + 1);
      _OWORD *v341 = *(_OWORD *)v342;
      v341[1] = v343;
      *(_OWORD *)((char *)v341 + 25) = *(_OWORD *)(v342 + 25);
      goto LABEL_200;
    default:
      uint64_t v148 = type metadata accessor for PuzzleStatisticValue(0);
      int v149 = swift_getEnumCaseMultiPayload();
      if (v149 == 5)
      {
        uint64_t v150 = type metadata accessor for PuzzleStreak();
        uint64_t v151 = *(void *)(v150 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v147, 1, v150)) {
          goto LABEL_163;
        }
      }
      else
      {
        if (v149 != 4)
        {
          memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
LABEL_200:
          swift_storeEnumTagMultiPayload();
          goto LABEL_201;
        }
        uint64_t v150 = type metadata accessor for PuzzleStreak();
        uint64_t v151 = *(void *)(v150 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v147, 1, v150))
        {
LABEL_163:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v146, v147, *(void *)(*(void *)(v344 - 8) + 64));
          goto LABEL_199;
        }
      }
      uint64_t v357 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 16))(v146, v147, v357);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v151 + 56))(v146, 0, 1, v150);
LABEL_199:
      swift_storeEnumTagMultiPayload();
      goto LABEL_200;
  }
}

void *assignWithCopy for FeedItemAuxiliaryItem(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFEE6798((uint64_t)a1);
    uint64_t v6 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v7 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v7;
        unint64_t v8 = a2[6];
        swift_bridgeObjectRetain();
        if (v8 >= 0x11)
        {
          a1[5] = a2[5];
          a1[6] = a2[6];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        }
        goto LABEL_198;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v28 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v28;
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        unint64_t v29 = a2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v29 >= 0x11)
        {
          a1[9] = a2[9];
          a1[10] = a2[10];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        }
        goto LABEL_198;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v9 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v10 = v9[5];
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_1C151DBAC();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        *(void *)((char *)a1 + v9[6]) = *(void *)((char *)a2 + v9[6]);
        uint64_t v15 = v9[7];
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        char v18 = v17[8];
        *(void *)uint64_t v16 = *(void *)v17;
        v16[8] = v18;
        uint64_t v19 = v9[8];
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        if (*((void *)v21 + 1) >= 0x11uLL) {
          goto LABEL_38;
        }
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
        goto LABEL_198;
      case 3u:
        *a1 = *a2;
        uint64_t v358 = a3;
        a1[1] = a2[1];
        uint64_t v30 = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[2] = v30;
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        uint64_t v353 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v31 = v353[10];
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        *uint64_t v32 = *((unsigned char *)a2 + v31);
        v32[1] = *((unsigned char *)a2 + v31 + 1);
        uint64_t v34 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v35 = *(int *)(v34 + 24);
        __dst = &v32[v35];
        uint64_t v348 = (int *)v34;
        unint64_t v36 = &v33[v35];
        uint64_t v37 = (int *)type metadata accessor for SharedItem();
        long long v343 = (void *)*((void *)v37 - 1);
        uint64_t v38 = (unsigned int (*)(char *, uint64_t, int *))v343[6];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v38(v36, 1, v37))
        {
          uint64_t v39 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v36, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          uint64_t v142 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(__dst, v36, v142);
          __dst[v37[5]] = v36[v37[5]];
          uint64_t v143 = v37[6];
          uint64_t v144 = *(void **)&v36[v143];
          *(void *)&__dst[v143] = v144;
          uint64_t v145 = v37[7];
          uint64_t v357 = &__dst[v145];
          v342 = &v36[v145];
          uint64_t v146 = sub_1C1515FDC();
          uint64_t v147 = *(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16);
          id v148 = v144;
          v147(v357, v342, v146);
          ((void (*)(char *, void, uint64_t, int *))v343[7])(__dst, 0, 1, v37);
        }
        a3 = v358;
        v32[v348[7]] = v33[v348[7]];
        v32[v348[8]] = v33[v348[8]];
        v32[v348[9]] = v33[v348[9]];
        v32[v348[10]] = v33[v348[10]];
        uint64_t v149 = v353[11];
        uint64_t v150 = (char *)a1 + v149;
        uint64_t v151 = (char *)a2 + v149;
        uint64_t v152 = sub_1C151D2DC();
        uint64_t v153 = *(void *)(v152 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v151, 1, v152))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v150, v151, *(void *)(*(void *)(v154 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v150, v151, v152);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v150, 0, 1, v152);
        }
        uint64_t v161 = v353[12];
        v162 = (void *)((char *)a1 + v161);
        uint64_t v163 = (void *)((char *)a2 + v161);
        if (v163[1] >= 0x11uLL)
        {
          void *v162 = *v163;
          v162[1] = v163[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v162 = *(_OWORD *)v163;
        }
        uint64_t v164 = v353[13];
        unint64_t v165 = *(void *)((char *)a2 + v164);
        if (v165 >= 2)
        {
          if (v165 == 2)
          {
            *(void *)((char *)a1 + v164) = 2;
          }
          else
          {
            *(void *)((char *)a1 + v164) = v165;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)a1 + v164) = v165;
        }
        uint64_t v204 = v353[14];
        long long v205 = *(void **)((char *)a2 + v204);
        *(void *)((char *)a1 + v204) = v205;
        id v206 = v205;
        goto LABEL_198;
      case 4u:
        *a1 = *a2;
        uint64_t v22 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v22;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        long long v84 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v85 = v84[8];
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        uint64_t v88 = sub_1C1515FDC();
        uint64_t v89 = *(void *)(v88 - 8);
        uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
        swift_bridgeObjectRetain();
        v90(v86, v87, v88);
        uint64_t v356 = v84;
        uint64_t v91 = v84[9];
        uint64_t v92 = (char *)a1 + v91;
        uint64_t v93 = (char *)a2 + v91;
        uint64_t v355 = v88;
        __dstb = v90;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))((char *)a2 + v91, 1, v88))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          v90(v92, v93, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v92, 0, 1, v88);
        }
        *(void *)((char *)a1 + v84[10]) = *(void *)((char *)a2 + v84[10]);
        *(void *)((char *)a1 + v84[11]) = *(void *)((char *)a2 + v84[11]);
        uint64_t v118 = v84[12];
        uint64_t v119 = (void *)((char *)a1 + v118);
        uint64_t v120 = (void *)((char *)a2 + v118);
        uint64_t v121 = type metadata accessor for FeedHeadline(0);
        uint64_t v122 = *(void *)(v121 - 8);
        uint64_t v123 = *(unsigned int (**)(void *, uint64_t, int *))(v122 + 48);
        id v124 = (int *)v121;
        swift_retain();
        swift_retain();
        if (v123(v120, 1, v124))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v119, v120, *(void *)(*(void *)(v125 - 8) + 64));
        }
        else
        {
          uint64_t v340 = v122;
          uint64_t v359 = a3;
          *uint64_t v119 = *v120;
          v119[1] = v120[1];
          uint64_t v131 = v120[2];
          *((unsigned char *)v119 + 24) = *((unsigned char *)v120 + 24);
          v119[2] = v131;
          v119[4] = v120[4];
          v119[5] = v120[5];
          v119[6] = v120[6];
          *((unsigned char *)v119 + 56) = *((unsigned char *)v120 + 56);
          v341 = v124;
          uint64_t v132 = v124[10];
          unint64_t v133 = (char *)v119 + v132;
          uint64_t v134 = (char *)v120 + v132;
          *unint64_t v133 = *((unsigned char *)v120 + v132);
          v133[1] = *((unsigned char *)v120 + v132 + 1);
          long long v339 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v135 = v339[6];
          uint64_t v344 = &v133[v135];
          uint64_t v136 = &v134[v135];
          uint64_t v137 = (int *)type metadata accessor for SharedItem();
          uint64_t v338 = *((void *)v137 - 1);
          uint64_t v138 = *(unsigned int (**)(char *, uint64_t, int *))(v338 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v138(v136, 1, v137))
          {
            uint64_t v139 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v344, v136, *(void *)(*(void *)(v139 - 8) + 64));
          }
          else
          {
            uint64_t v224 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16))(v344, v136, v224);
            v344[v137[5]] = v136[v137[5]];
            uint64_t v225 = v137[6];
            uint64_t v226 = *(void **)&v136[v225];
            *(void *)&v344[v225] = v226;
            uint64_t v227 = v137[7];
            uint64_t v228 = &v344[v227];
            int v229 = &v136[v227];
            id v230 = v226;
            __dstb(v228, v229, v355);
            (*(void (**)(char *, void, uint64_t, int *))(v338 + 56))(v344, 0, 1, v137);
          }
          v133[v339[7]] = v134[v339[7]];
          v133[v339[8]] = v134[v339[8]];
          v133[v339[9]] = v134[v339[9]];
          v133[v339[10]] = v134[v339[10]];
          uint64_t v231 = v341[11];
          uint64_t v232 = (char *)v119 + v231;
          uint64_t v233 = (char *)v120 + v231;
          uint64_t v234 = sub_1C151D2DC();
          uint64_t v235 = *(void *)(v234 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v235 + 48))(v233, 1, v234))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v232, v233, *(void *)(*(void *)(v236 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v232, v233, v234);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56))(v232, 0, 1, v234);
          }
          a3 = v359;
          uint64_t v237 = v341[12];
          uint64_t v238 = (void *)((char *)v119 + v237);
          uint64_t v239 = (void *)((char *)v120 + v237);
          if (v239[1] >= 0x11uLL)
          {
            *uint64_t v238 = *v239;
            v238[1] = v239[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v238 = *(_OWORD *)v239;
          }
          uint64_t v240 = v341[13];
          unint64_t v241 = *(void *)((char *)v120 + v240);
          if (v241 >= 2)
          {
            if (v241 == 2)
            {
              *(void *)((char *)v119 + v240) = 2;
            }
            else
            {
              *(void *)((char *)v119 + v240) = v241;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v119 + v240) = v241;
          }
          uint64_t v262 = v341[14];
          v263 = *(void **)((char *)v120 + v262);
          *(void *)((char *)v119 + v262) = v263;
          uint64_t v264 = *(void (**)(void *, void, uint64_t, int *))(v340 + 56);
          id v265 = v263;
          v264(v119, 0, 1, v341);
        }
        uint64_t v266 = v356[13];
        long long v267 = (void *)((char *)a1 + v266);
        uint64_t v268 = (void *)((char *)a2 + v266);
        uint64_t v269 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v270 = *(void *)(v269 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v270 + 48))(v268, 1, v269))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v267, v268, *(void *)(*(void *)(v271 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *long long v267 = *v268;
          if (EnumCaseMultiPayload == 1)
          {
            v267[1] = v268[1];
            uint64_t v273 = type metadata accessor for GenericDataVisualization();
            uint64_t v274 = *(int *)(v273 + 20);
            uint64_t v275 = (char *)v267 + v274;
            uint64_t v363 = a3;
            uint64_t v276 = (char *)v268 + v274;
            swift_bridgeObjectRetain();
            v277 = v276;
            a3 = v363;
            __dstb(v275, v277, v355);
            *(void *)((char *)v267 + *(int *)(v273 + 24)) = *(void *)((char *)v268 + *(int *)(v273 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v270 + 56))(v267, 0, 1, v269);
        }
        *((unsigned char *)a1 + v356[14]) = *((unsigned char *)a2 + v356[14]);
        goto LABEL_198;
      case 5u:
        uint64_t v40 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
        uint64_t v41 = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        a1[4] = v41;
        a1[6] = a2[6];
        uint64_t v42 = (void *)a2[7];
        a1[7] = v42;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v43 = a2[10];
        id v44 = v40;
        swift_bridgeObjectRetain();
        id v45 = v42;
        if (v43 == 1)
        {
          long long v46 = *(_OWORD *)(a2 + 9);
          long long v47 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 13) = v47;
          *(_OWORD *)(a1 + 9) = v46;
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = a2[10];
          a1[11] = a2[11];
          a1[12] = a2[12];
          uint64_t v95 = (void *)a2[13];
          a1[13] = v95;
          a1[14] = a2[14];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v96 = v95;
        }
        if (a2[16] >= 0x11uLL)
        {
          a1[15] = a2[15];
          a1[16] = a2[16];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
        }
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        goto LABEL_198;
      case 6u:
        int v48 = *((unsigned __int8 *)a2 + 281);
        if (v48 == 2)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v173 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v173;
          a1[6] = a2[6];
          a1[7] = a2[7];
          a1[8] = a2[8];
          a1[9] = a2[9];
          uint64_t v174 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v174 == 1)
          {
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            long long v175 = *((_OWORD *)a2 + 6);
            long long v176 = *((_OWORD *)a2 + 7);
            long long v177 = *((_OWORD *)a2 + 8);
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            *((_OWORD *)a1 + 7) = v176;
            *((_OWORD *)a1 + 8) = v177;
            *((_OWORD *)a1 + 6) = v175;
          }
          else
          {
            a1[10] = a2[10];
            a1[11] = a2[11];
            uint64_t v212 = a2[15];
            swift_bridgeObjectRetain();
            if (v212)
            {
              a1[15] = v212;
              a1[16] = a2[16];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v212 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v212);
              char v213 = *((unsigned char *)a2 + 144);
              a1[17] = a2[17];
              *((unsigned char *)a1 + 144) = v213;
            }
            else
            {
              long long v304 = *((_OWORD *)a2 + 6);
              long long v305 = *((_OWORD *)a2 + 7);
              long long v306 = *((_OWORD *)a2 + 8);
              *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
              *((_OWORD *)a1 + 7) = v305;
              *((_OWORD *)a1 + 8) = v306;
              *((_OWORD *)a1 + 6) = v304;
            }
          }
        }
        else if (v48 == 1)
        {
          uint64_t v49 = (void *)*a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
          uint64_t v50 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v50;
          a1[6] = a2[6];
          uint64_t v51 = (void *)a2[7];
          a1[7] = v51;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v52 = a2[10];
          id v53 = v49;
          swift_bridgeObjectRetain();
          id v54 = v51;
          if (v52 == 1)
          {
            long long v55 = *(_OWORD *)(a2 + 9);
            long long v56 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v56;
            *(_OWORD *)(a1 + 9) = v55;
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = a2[10];
            a1[11] = a2[11];
            a1[12] = a2[12];
            long long v210 = (void *)a2[13];
            a1[13] = v210;
            a1[14] = a2[14];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v211 = v210;
          }
          if (a2[16] >= 0x11uLL)
          {
            a1[15] = a2[15];
            a1[16] = a2[16];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          uint64_t v216 = (void *)a2[18];
          if (v216)
          {
            a1[18] = v216;
            a1[19] = a2[19];
            a1[20] = a2[20];
            *((unsigned char *)a1 + 168) = *((unsigned char *)a2 + 168);
            *((unsigned char *)a1 + 169) = *((unsigned char *)a2 + 169);
            uint64_t v217 = a2[22];
            *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
            a1[22] = v217;
            a1[24] = a2[24];
            uint64_t v218 = (void *)a2[25];
            a1[25] = v218;
            *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
            uint64_t v219 = a2[28];
            id v220 = v216;
            swift_bridgeObjectRetain();
            id v221 = v218;
            if (v219 == 1)
            {
              long long v222 = *(_OWORD *)(a2 + 27);
              long long v223 = *(_OWORD *)(a2 + 31);
              *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
              *(_OWORD *)(a1 + 31) = v223;
              *(_OWORD *)(a1 + 27) = v222;
            }
            else
            {
              a1[27] = a2[27];
              a1[28] = a2[28];
              a1[29] = a2[29];
              a1[30] = a2[30];
              v248 = (void *)a2[31];
              a1[31] = v248;
              a1[32] = a2[32];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v249 = v248;
            }
            if (a2[34] >= 0x11uLL)
            {
              a1[33] = a2[33];
              a1[34] = a2[34];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
            }
            *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
          }
          else
          {
            *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
            long long v242 = *((_OWORD *)a2 + 10);
            long long v243 = *((_OWORD *)a2 + 11);
            long long v244 = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 13) = v244;
            *((_OWORD *)a1 + 10) = v242;
            *((_OWORD *)a1 + 11) = v243;
            long long v245 = *((_OWORD *)a2 + 14);
            long long v246 = *((_OWORD *)a2 + 15);
            long long v247 = *((_OWORD *)a2 + 16);
            *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            *((_OWORD *)a1 + 15) = v246;
            *((_OWORD *)a1 + 16) = v247;
            *((_OWORD *)a1 + 14) = v245;
          }
        }
        else
        {
          uint64_t v178 = (void *)*a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
          uint64_t v179 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v179;
          a1[6] = a2[6];
          long long v180 = (void *)a2[7];
          a1[7] = v180;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v181 = a2[10];
          id v182 = v178;
          swift_bridgeObjectRetain();
          id v183 = v180;
          if (v181 == 1)
          {
            long long v184 = *(_OWORD *)(a2 + 9);
            long long v185 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v185;
            *(_OWORD *)(a1 + 9) = v184;
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = a2[10];
            a1[11] = a2[11];
            a1[12] = a2[12];
            uint64_t v214 = (void *)a2[13];
            a1[13] = v214;
            a1[14] = a2[14];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v215 = v214;
          }
          if (a2[16] >= 0x11uLL)
          {
            a1[15] = a2[15];
            a1[16] = a2[16];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        }
        *((unsigned char *)a1 + 281) = v48;
        goto LABEL_198;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v57 = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        a1[4] = v57;
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        uint64_t v58 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v58 == 1)
        {
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          long long v59 = *((_OWORD *)a2 + 6);
          long long v60 = *((_OWORD *)a2 + 7);
          long long v61 = *((_OWORD *)a2 + 8);
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          *((_OWORD *)a1 + 7) = v60;
          *((_OWORD *)a1 + 8) = v61;
          *((_OWORD *)a1 + 6) = v59;
        }
        else
        {
          a1[10] = a2[10];
          a1[11] = a2[11];
          uint64_t v97 = a2[15];
          swift_bridgeObjectRetain();
          if (v97)
          {
            a1[15] = v97;
            a1[16] = a2[16];
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v97 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v97);
            char v98 = *((unsigned char *)a2 + 144);
            a1[17] = a2[17];
            *((unsigned char *)a1 + 144) = v98;
          }
          else
          {
            long long v207 = *((_OWORD *)a2 + 6);
            long long v208 = *((_OWORD *)a2 + 7);
            long long v209 = *((_OWORD *)a2 + 8);
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            *((_OWORD *)a1 + 7) = v208;
            *((_OWORD *)a1 + 8) = v209;
            *((_OWORD *)a1 + 6) = v207;
          }
        }
        goto LABEL_198;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v62 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v63 = (void *)((char *)a1 + v62);
        uint64_t v64 = (char *)a2 + v62;
        *uint64_t v63 = *(void *)((char *)a2 + v62);
        v63[1] = *(void *)((char *)a2 + v62 + 8);
        v63[2] = *(void *)((char *)a2 + v62 + 16);
        v63[3] = *(void *)((char *)a2 + v62 + 24);
        uint64_t v65 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v66 = *(int *)(v65 + 24);
        long long v349 = (char *)v63 + v66;
        uint64_t v354 = v65;
        uint64_t v67 = &v64[v66];
        uint64_t v68 = type metadata accessor for FormatCustomItem.Action();
        __dsta = *(void **)(v68 - 8);
        id v69 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v69(v67, 1, v68))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v349, v67, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          uint64_t v155 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v349, v67, v155);
          ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v349, 0, 1, v68);
        }
        *(void *)((char *)v63 + *(int *)(v354 + 28)) = *(void *)&v64[*(int *)(v354 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_198;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v23 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23)
        {
          a1[7] = v23;
          a1[8] = a2[8];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v23);
        }
        else
        {
          long long v113 = *((_OWORD *)a2 + 2);
          long long v114 = *((_OWORD *)a2 + 3);
          a1[8] = a2[8];
          *((_OWORD *)a1 + 2) = v113;
          *((_OWORD *)a1 + 3) = v114;
        }
        uint64_t v115 = a1 + 9;
        uint64_t v116 = (long long *)(a2 + 9);
        uint64_t v117 = a2[12];
        if (v117)
        {
          a1[12] = v117;
          a1[13] = a2[13];
          (**(void (***)(_OWORD *, long long *))(v117 - 8))(v115, v116);
        }
        else
        {
          long long v126 = *v116;
          long long v127 = *(_OWORD *)(a2 + 11);
          a1[13] = a2[13];
          *uint64_t v115 = v126;
          *(_OWORD *)(a1 + 11) = v127;
        }
        uint64_t v128 = a1 + 14;
        uint64_t v129 = (long long *)(a2 + 14);
        uint64_t v130 = a2[17];
        if (v130)
        {
          a1[17] = v130;
          a1[18] = a2[18];
          (**(void (***)(_OWORD *, long long *))(v130 - 8))(v128, v129);
        }
        else
        {
          long long v140 = *v129;
          long long v141 = *((_OWORD *)a2 + 8);
          a1[18] = a2[18];
          *uint64_t v128 = v140;
          *((_OWORD *)a1 + 8) = v141;
        }
        goto LABEL_198;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        long long v71 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v72 = v71[5];
        long long v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)a2 + v72;
        uint64_t v75 = sub_1C151959C();
        uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        v76(v73, v74, v75);
        *(void *)((char *)a1 + v71[6]) = *(void *)((char *)a2 + v71[6]);
        uint64_t v77 = v71[7];
        id v78 = (char *)a1 + v77;
        long long v79 = (char *)a2 + v77;
        char v80 = v79[8];
        *(void *)id v78 = *(void *)v79;
        v78[8] = v80;
        uint64_t v81 = v71[8];
        uint64_t v20 = (char *)a1 + v81;
        uint64_t v21 = (char *)a2 + v81;
        if (*((void *)v21 + 1) >= 0x11uLL)
        {
LABEL_38:
          *(void *)uint64_t v20 = *(void *)v21;
          *((void *)v20 + 1) = *((void *)v21 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
        }
        goto LABEL_198;
      case 0xBu:
        *a1 = *a2;
        swift_retain();
        goto LABEL_198;
      case 0xCu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v24 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v24;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_198;
      case 0xDu:
        *a1 = *a2;
        uint64_t v82 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v82;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        uint64_t v99 = (void *)a2[8];
        a1[8] = v99;
        *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
        a1[10] = a2[10];
        uint64_t v100 = a2[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v101 = v99;
        swift_bridgeObjectRetain();
        if (v100)
        {
          a1[14] = v100;
          a1[15] = a2[15];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v100 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v100);
        }
        else
        {
          long long v156 = *(_OWORD *)(a2 + 11);
          long long v157 = *(_OWORD *)(a2 + 13);
          a1[15] = a2[15];
          *(_OWORD *)(a1 + 11) = v156;
          *(_OWORD *)(a1 + 13) = v157;
        }
        uint64_t v158 = a1 + 16;
        uint64_t v159 = (long long *)(a2 + 16);
        uint64_t v160 = a2[19];
        if (v160)
        {
          a1[19] = v160;
          a1[20] = a2[20];
          (**(void (***)(_OWORD *, long long *))(v160 - 8))(v158, v159);
        }
        else
        {
          long long v166 = *v159;
          long long v167 = *((_OWORD *)a2 + 9);
          a1[20] = a2[20];
          *uint64_t v158 = v166;
          *((_OWORD *)a1 + 9) = v167;
        }
        uint64_t v168 = a1 + 21;
        uint64_t v169 = (long long *)(a2 + 21);
        uint64_t v170 = a2[24];
        if (v170)
        {
          a1[24] = v170;
          a1[25] = a2[25];
          (**(void (***)(_OWORD *, long long *))(v170 - 8))(v168, v169);
        }
        else
        {
          long long v171 = *v169;
          long long v172 = *(_OWORD *)(a2 + 23);
          a1[25] = a2[25];
          *uint64_t v168 = v171;
          *(_OWORD *)(a1 + 23) = v172;
        }
        goto LABEL_198;
      case 0xEu:
        *a1 = *a2;
        uint64_t v25 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v25;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_198;
      case 0xFu:
        *a1 = *a2;
        uint64_t v83 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v83;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        break;
      case 0x10u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        *((unsigned char *)a1 + 49) = *((unsigned char *)a2 + 49);
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[15] = a2[15];
        a1[16] = a2[16];
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        a1[18] = a2[18];
        a1[19] = a2[19];
        a1[20] = a2[20];
        a1[21] = a2[21];
        uint64_t v26 = a2[22];
        *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
        a1[22] = v26;
        a1[24] = a2[24];
        a1[25] = a2[25];
        a1[26] = a2[26];
        uint64_t v27 = a2[27];
        *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
        a1[27] = v27;
        unint64_t v352 = a2[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v352 >= 0x11)
        {
          a1[29] = a2[29];
          a1[30] = a2[30];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
        }
        goto LABEL_198;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_199;
    }
    a1[5] = a2[5];
    a1[6] = a2[6];
    uint64_t v102 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v103 = (char *)a1 + v102;
    uint64_t v104 = (char *)a2 + v102;
    *(void *)((char *)a1 + v102) = *(void *)((char *)a2 + v102);
    uint64_t v105 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    id v106 = &v103[v105];
    uint64_t v107 = &v104[v105];
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v190 = type metadata accessor for PuzzleStatisticValue(0);
        int v191 = swift_getEnumCaseMultiPayload();
        uint64_t v360 = v190;
        if (v191 == 5)
        {
          uint64_t v300 = type metadata accessor for PuzzleStreak();
          uint64_t v301 = *(void *)(v300 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v301 + 48))(v107, 1, v300))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v106, v107, *(void *)(*(void *)(v302 - 8) + 64));
          }
          else
          {
            uint64_t v314 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 16))(v106, v107, v314);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v301 + 56))(v106, 0, 1, v300);
          }
          uint64_t v303 = a3;
          uint64_t v190 = v360;
        }
        else
        {
          if (v191 != 4)
          {
            uint64_t v303 = a3;
            memcpy(v106, v107, *(void *)(*(void *)(v190 - 8) + 64));
            goto LABEL_176;
          }
          uint64_t v192 = type metadata accessor for PuzzleStreak();
          uint64_t v193 = *(void *)(v192 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48))(v107, 1, v192))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v106, v107, *(void *)(*(void *)(v194 - 8) + 64));
          }
          else
          {
            uint64_t v312 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 16))(v106, v107, v312);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v106, 0, 1, v192);
          }
          uint64_t v303 = a3;
          uint64_t v190 = v360;
        }
        swift_storeEnumTagMultiPayload();
LABEL_176:
        uint64_t v315 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v316 = *(int *)(v315 + 20);
        uint64_t v317 = v106;
        uint64_t v318 = &v106[v316];
        id v319 = &v107[v316];
        int v320 = swift_getEnumCaseMultiPayload();
        if (v320 == 5)
        {
          uint64_t v324 = type metadata accessor for PuzzleStreak();
          uint64_t v325 = *(void *)(v324 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v325 + 48))(v319, 1, v324))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v318, v319, *(void *)(*(void *)(v326 - 8) + 64));
          }
          else
          {
            uint64_t v328 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v328 - 8) + 16))(v318, v319, v328);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v325 + 56))(v318, 0, 1, v324);
          }
          uint64_t v190 = v360;
        }
        else
        {
          if (v320 != 4)
          {
            memcpy(v318, v319, *(void *)(*(void *)(v190 - 8) + 64));
            goto LABEL_188;
          }
          uint64_t v321 = type metadata accessor for PuzzleStreak();
          uint64_t v322 = *(void *)(v321 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v322 + 48))(v319, 1, v321))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v318, v319, *(void *)(*(void *)(v323 - 8) + 64));
          }
          else
          {
            uint64_t v327 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v327 - 8) + 16))(v318, v319, v327);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v322 + 56))(v318, 0, 1, v321);
          }
          uint64_t v190 = v360;
        }
        swift_storeEnumTagMultiPayload();
LABEL_188:
        uint64_t v329 = *(int *)(v315 + 24);
        uint64_t v330 = (char *)v317 + v329;
        uint64_t v331 = &v107[v329];
        int v332 = swift_getEnumCaseMultiPayload();
        if (v332 == 5)
        {
          uint64_t v333 = type metadata accessor for PuzzleStreak();
          uint64_t v334 = *(void *)(v333 - 8);
          a3 = v303;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v334 + 48))(v331, 1, v333)) {
            goto LABEL_191;
          }
        }
        else
        {
          a3 = v303;
          if (v332 != 4)
          {
            memcpy(v330, v331, *(void *)(*(void *)(v190 - 8) + 64));
            goto LABEL_197;
          }
          uint64_t v333 = type metadata accessor for PuzzleStreak();
          uint64_t v334 = *(void *)(v333 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v334 + 48))(v331, 1, v333))
          {
LABEL_191:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v330, v331, *(void *)(*(void *)(v335 - 8) + 64));
            goto LABEL_196;
          }
        }
        uint64_t v336 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 16))(v330, v331, v336);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v334 + 56))(v330, 0, 1, v333);
        goto LABEL_196;
      case 2u:
        id v186 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v187 = *((void *)v186 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v187 + 48))(v107, 1, v186))
        {
          sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          size_t v189 = *(void *)(*(void *)(v188 - 8) + 64);
          goto LABEL_161;
        }
        uint64_t v362 = a3;
        uint64_t v250 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 16))(v106, v107, v250);
        uint64_t v251 = type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v252 = v106;
        uint64_t v253 = v251;
        uint64_t v254 = *(int *)(v251 + 20);
        uint64_t v255 = &v252[v254];
        unint64_t v256 = &v107[v254];
        *(void *)uint64_t v255 = *(void *)v256;
        *((void *)v255 + 1) = *((void *)v256 + 1);
        uint64_t v257 = *(int *)(v251 + 24);
        uint64_t v351 = v252;
        uint64_t v258 = &v252[v257];
        unint64_t v259 = &v107[v257];
        *(void *)uint64_t v258 = *(void *)v259;
        *((void *)v258 + 1) = *((void *)v259 + 1);
        uint64_t v260 = (uint64_t *)(v259 + 16);
        unint64_t v261 = *((void *)v259 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v261 >> 60 == 15)
        {
          *((_OWORD *)v258 + 1) = *(_OWORD *)v260;
        }
        else
        {
          uint64_t v307 = *v260;
          sub_1BFE95820(*v260, v261);
          *((void *)v258 + 2) = v307;
          *((void *)v258 + 3) = v261;
        }
        *(void *)&v351[*(int *)(v253 + 28)] = *(void *)&v107[*(int *)(v253 + 28)];
        *(void *)&v351[*(int *)(v253 + 32)] = *(void *)&v107[*(int *)(v253 + 32)];
        *(void *)&v351[v186[5]] = *(void *)&v107[v186[5]];
        *(void *)&v351[v186[6]] = *(void *)&v107[v186[6]];
        uint64_t v308 = v186[7];
        uint64_t v309 = &v351[v308];
        uint64_t v310 = &v107[v308];
        *(void *)uint64_t v309 = *(void *)v310;
        *((void *)v309 + 1) = *((void *)v310 + 1);
        v311 = *(void (**)(char *, void, uint64_t, int *))(v187 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v311(v351, 0, 1, v186);
        a3 = v362;
        goto LABEL_197;
      case 3u:
        uint64_t v361 = a3;
        *(void *)id v106 = *(void *)v107;
        uint64_t v195 = *((void *)v107 + 1);
        v106[16] = v107[16];
        *((void *)v106 + 1) = v195;
        uint64_t v196 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v197 = v196[6];
        uint64_t v350 = v106;
        uint64_t v198 = &v106[v197];
        uint64_t v199 = &v107[v197];
        uint64_t v200 = type metadata accessor for PuzzleStreak();
        uint64_t v201 = *(void *)(v200 - 8);
        unint64_t v202 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v201 + 48);
        if (v202(v199, 1, v200))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v198, v199, *(void *)(*(void *)(v203 - 8) + 64));
        }
        else
        {
          uint64_t v278 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16))(v198, v199, v278);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v201 + 56))(v198, 0, 1, v200);
        }
        uint64_t v279 = v196[7];
        uint64_t v280 = &v350[v279];
        uint64_t v281 = &v107[v279];
        if (v202(&v107[v279], 1, v200))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v280, v281, *(void *)(*(void *)(v282 - 8) + 64));
        }
        else
        {
          uint64_t v283 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 16))(v280, v281, v283);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v201 + 56))(v280, 0, 1, v200);
        }
        a3 = v361;
        uint64_t v284 = v196[8];
        uint64_t v285 = &v350[v284];
        unint64_t v286 = &v107[v284];
        long long v287 = *(_OWORD *)v286;
        long long v288 = *((_OWORD *)v286 + 1);
        *(_OWORD *)(v285 + 25) = *(_OWORD *)(v286 + 25);
        *(_OWORD *)uint64_t v285 = v287;
        *((_OWORD *)v285 + 1) = v288;
        uint64_t v289 = v196[9];
        long long v290 = &v350[v289];
        uint64_t v291 = &v107[v289];
        long long v292 = *(_OWORD *)v291;
        long long v293 = *((_OWORD *)v291 + 1);
        *(_OWORD *)(v290 + 25) = *(_OWORD *)(v291 + 25);
        *(_OWORD *)long long v290 = v292;
        *((_OWORD *)v290 + 1) = v293;
        uint64_t v294 = v196[10];
        long long v295 = &v350[v294];
        unint64_t v296 = &v107[v294];
        long long v297 = *(_OWORD *)v296;
        long long v298 = *((_OWORD *)v296 + 1);
        *(_OWORD *)(v295 + 25) = *(_OWORD *)(v296 + 25);
        *(_OWORD *)long long v295 = v297;
        *((_OWORD *)v295 + 1) = v298;
        goto LABEL_197;
      default:
        uint64_t v108 = type metadata accessor for PuzzleStatisticValue(0);
        int v109 = swift_getEnumCaseMultiPayload();
        if (v109 == 5)
        {
          uint64_t v110 = v106;
          uint64_t v111 = type metadata accessor for PuzzleStreak();
          uint64_t v112 = *(void *)(v111 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v107, 1, v111))
          {
LABEL_159:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v110, v107, *(void *)(*(void *)(v299 - 8) + 64));
            goto LABEL_196;
          }
        }
        else
        {
          if (v109 != 4)
          {
            size_t v189 = *(void *)(*(void *)(v108 - 8) + 64);
LABEL_161:
            memcpy(v106, v107, v189);
            goto LABEL_197;
          }
          uint64_t v110 = v106;
          uint64_t v111 = type metadata accessor for PuzzleStreak();
          uint64_t v112 = *(void *)(v111 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v107, 1, v111)) {
            goto LABEL_159;
          }
        }
        uint64_t v313 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v110, v107, v313);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v110, 0, 1, v111);
LABEL_196:
        swift_storeEnumTagMultiPayload();
LABEL_197:
        swift_storeEnumTagMultiPayload();
LABEL_198:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_199:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for FeedItemAuxiliaryItem(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_1C151DBAC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
      uint64_t v12 = v7[7];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      v13[8] = v14[8];
      *(void *)uint64_t v13 = *(void *)v14;
      *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
      goto LABEL_88;
    case 3u:
      uint64_t v186 = a3;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      a1[56] = a2[56];
      uint64_t v15 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v16 = v15[10];
      uint64_t v17 = &a1[v16];
      char v18 = &a2[v16];
      *uint64_t v17 = a2[v16];
      v17[1] = a2[v16 + 1];
      uint64_t v19 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v20 = v19[6];
      uint64_t v21 = &v17[v20];
      uint64_t v22 = &v18[v20];
      uint64_t v23 = (int *)type metadata accessor for SharedItem();
      uint64_t v24 = *((void *)v23 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        uint64_t v68 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v21, v22, v68);
        v21[v23[5]] = v22[v23[5]];
        *(void *)&v21[v23[6]] = *(void *)&v22[v23[6]];
        uint64_t v69 = v23[7];
        long long v184 = &v21[v69];
        uint64_t v70 = &v22[v69];
        uint64_t v71 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v184, v70, v71);
        (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
      }
      v17[v19[7]] = v18[v19[7]];
      v17[v19[8]] = v18[v19[8]];
      v17[v19[9]] = v18[v19[9]];
      v17[v19[10]] = v18[v19[10]];
      uint64_t v72 = v15[11];
      long long v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      uint64_t v75 = sub_1C151D2DC();
      uint64_t v76 = *(void *)(v75 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      a3 = v186;
      *(_OWORD *)&a1[v15[12]] = *(_OWORD *)&a2[v15[12]];
      uint64_t v86 = v15[13];
      uint64_t v87 = *(void *)&a2[v86];
      if (v87 == 2) {
        uint64_t v87 = 2;
      }
      *(void *)&a1[v86] = v87;
      *(void *)&a1[v15[14]] = *(void *)&a2[v15[14]];
      goto LABEL_88;
    case 4u:
      uint64_t v187 = a3;
      uint64_t v26 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v26;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v27 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v28 = v27[8];
      unint64_t v29 = &a1[v28];
      uint64_t v30 = &a2[v28];
      uint64_t v31 = sub_1C1515FDC();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v33(v29, v30, v31);
      uint64_t v34 = v27[9];
      uint64_t v35 = &a1[v34];
      unint64_t v36 = &a2[v34];
      uint64_t v183 = v31;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&a2[v34], 1, v31))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
      }
      id v78 = v33;
      a3 = v187;
      *(void *)&a1[v27[10]] = *(void *)&a2[v27[10]];
      *(void *)&a1[v27[11]] = *(void *)&a2[v27[11]];
      long long v185 = v27;
      uint64_t v79 = v27[12];
      char v80 = &a1[v79];
      uint64_t v81 = &a2[v79];
      uint64_t v82 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v83 = *((void *)v82 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v83 + 48))(v81, 1, v82))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        uint64_t v179 = v83;
        long long v180 = v78;
        *(_OWORD *)char v80 = *(_OWORD *)v81;
        *((void *)v80 + 2) = *((void *)v81 + 2);
        v80[24] = v81[24];
        *((void *)v80 + 4) = *((void *)v81 + 4);
        *(_OWORD *)(v80 + 40) = *(_OWORD *)(v81 + 40);
        v80[56] = v81[56];
        uint64_t v88 = v82[10];
        uint64_t v89 = &v80[v88];
        uint64_t v90 = &v81[v88];
        *uint64_t v89 = v81[v88];
        v89[1] = v81[v88 + 1];
        uint64_t v91 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v92 = v91[6];
        __dst = &v89[v92];
        uint64_t v93 = &v90[v92];
        uint64_t v94 = (int *)type metadata accessor for SharedItem();
        uint64_t v178 = *((void *)v94 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v178 + 48))(v93, 1, v94))
        {
          uint64_t v95 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v93, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          uint64_t v112 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(__dst, v93, v112);
          __dst[v94[5]] = v93[v94[5]];
          *(void *)&__dst[v94[6]] = *(void *)&v93[v94[6]];
          v180(&__dst[v94[7]], &v93[v94[7]], v183);
          (*(void (**)(char *, void, uint64_t, int *))(v178 + 56))(__dst, 0, 1, v94);
        }
        v89[v91[7]] = v90[v91[7]];
        v89[v91[8]] = v90[v91[8]];
        v89[v91[9]] = v90[v91[9]];
        v89[v91[10]] = v90[v91[10]];
        uint64_t v113 = v82[11];
        long long v114 = &v80[v113];
        uint64_t v115 = &v81[v113];
        uint64_t v116 = sub_1C151D2DC();
        uint64_t v117 = *(void *)(v116 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v115, 1, v116))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v114, v115, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v114, v115, v116);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
        }
        a3 = v187;
        id v78 = v180;
        *(_OWORD *)&v80[v82[12]] = *(_OWORD *)&v81[v82[12]];
        uint64_t v119 = v82[13];
        uint64_t v120 = *(void *)&v81[v119];
        if (v120 == 2) {
          uint64_t v120 = 2;
        }
        *(void *)&v80[v119] = v120;
        *(void *)&v80[v82[14]] = *(void *)&v81[v82[14]];
        (*(void (**)(char *, void, uint64_t, int *))(v179 + 56))(v80, 0, 1, v82);
      }
      uint64_t v121 = v185[13];
      uint64_t v122 = &a1[v121];
      uint64_t v123 = &a2[v121];
      uint64_t v124 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v125 = *(void *)(v124 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v123, 1, v124))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v122, v123, *(void *)(*(void *)(v126 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
          uint64_t v127 = type metadata accessor for GenericDataVisualization();
          uint64_t v128 = v78;
          uint64_t v129 = v127;
          v128(&v122[*(int *)(v127 + 20)], &v123[*(int *)(v127 + 20)], v183);
          *(void *)&v122[*(int *)(v129 + 24)] = *(void *)&v123[*(int *)(v129 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v122, v123, *(void *)(v125 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
      }
      a1[v185[14]] = a2[v185[14]];
      goto LABEL_88;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v38 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v39 = &a1[v38];
      uint64_t v40 = &a2[v38];
      long long v41 = *(_OWORD *)&a2[v38 + 16];
      *(_OWORD *)uint64_t v39 = *(_OWORD *)&a2[v38];
      *((_OWORD *)v39 + 1) = v41;
      uint64_t v42 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v43 = *(int *)(v42 + 24);
      id v44 = &v39[v43];
      id v45 = &v40[v43];
      uint64_t v46 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v47 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        uint64_t v85 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v44, v45, v85);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      *(void *)&v39[*(int *)(v42 + 28)] = *(void *)&v40[*(int *)(v42 + 28)];
      goto LABEL_88;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v49 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v50 = v49[5];
      uint64_t v51 = &a1[v50];
      uint64_t v52 = &a2[v50];
      uint64_t v53 = sub_1C151959C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
      *(void *)&a1[v49[6]] = *(void *)&a2[v49[6]];
      uint64_t v54 = v49[7];
      long long v55 = &a1[v54];
      long long v56 = &a2[v54];
      v55[8] = v56[8];
      *(void *)long long v55 = *(void *)v56;
      *(_OWORD *)&a1[v49[8]] = *(_OWORD *)&a2[v49[8]];
      goto LABEL_88;
    case 0xFu:
      uint64_t v57 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v57;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v58 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      long long v59 = &a1[v58];
      long long v60 = &a2[v58];
      *(void *)&a1[v58] = *(void *)&a2[v58];
      uint64_t v61 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v62 = &v59[v61];
      uint64_t v63 = &v60[v61];
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v99 = type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v188 = a3;
          if (EnumCaseMultiPayload == 5)
          {
            uint64_t v101 = type metadata accessor for PuzzleStreak();
            uint64_t v102 = *(void *)(v101 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v63, 1, v101))
            {
LABEL_62:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v62, v63, *(void *)(*(void *)(v155 - 8) + 64));
              goto LABEL_68;
            }
          }
          else
          {
            if (EnumCaseMultiPayload != 4)
            {
              memcpy(v62, v63, *(void *)(*(void *)(v99 - 8) + 64));
              goto LABEL_69;
            }
            uint64_t v101 = type metadata accessor for PuzzleStreak();
            uint64_t v102 = *(void *)(v101 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v63, 1, v101)) {
              goto LABEL_62;
            }
          }
          uint64_t v157 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v62, v63, v157);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v62, 0, 1, v101);
LABEL_68:
          swift_storeEnumTagMultiPayload();
LABEL_69:
          uint64_t v158 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v159 = *(int *)(v158 + 20);
          uint64_t v160 = v62;
          uint64_t v161 = &v62[v159];
          v162 = &v63[v159];
          int v163 = swift_getEnumCaseMultiPayload();
          if (v163 == 5)
          {
            uint64_t v164 = type metadata accessor for PuzzleStreak();
            uint64_t v165 = *(void *)(v164 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v162, 1, v164))
            {
LABEL_74:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v161, v162, *(void *)(*(void *)(v166 - 8) + 64));
              goto LABEL_77;
            }
          }
          else
          {
            if (v163 != 4)
            {
              memcpy(v161, v162, *(void *)(*(void *)(v99 - 8) + 64));
              goto LABEL_78;
            }
            uint64_t v164 = type metadata accessor for PuzzleStreak();
            uint64_t v165 = *(void *)(v164 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v162, 1, v164)) {
              goto LABEL_74;
            }
          }
          uint64_t v167 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v161, v162, v167);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v165 + 56))(v161, 0, 1, v164);
LABEL_77:
          swift_storeEnumTagMultiPayload();
LABEL_78:
          uint64_t v168 = *(int *)(v158 + 24);
          uint64_t v169 = (char *)v160 + v168;
          uint64_t v170 = &v63[v168];
          int v171 = swift_getEnumCaseMultiPayload();
          if (v171 == 5)
          {
            uint64_t v172 = type metadata accessor for PuzzleStreak();
            uint64_t v173 = *(void *)(v172 - 8);
            a3 = v188;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v170, 1, v172))
            {
LABEL_83:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v169, v170, *(void *)(*(void *)(v174 - 8) + 64));
              goto LABEL_86;
            }
          }
          else
          {
            a3 = v188;
            if (v171 != 4)
            {
              memcpy(v169, v170, *(void *)(*(void *)(v99 - 8) + 64));
              goto LABEL_87;
            }
            uint64_t v172 = type metadata accessor for PuzzleStreak();
            uint64_t v173 = *(void *)(v172 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v170, 1, v172)) {
              goto LABEL_83;
            }
          }
          uint64_t v175 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 32))(v169, v170, v175);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v173 + 56))(v169, 0, 1, v172);
          goto LABEL_86;
        case 2u:
          id v96 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v97 = *((void *)v96 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v97 + 48))(v63, 1, v96))
          {
            sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            memcpy(v62, v63, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
            uint64_t v130 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v62, v63, v130);
            uint64_t v131 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)&v62[v131[5]] = *(_OWORD *)&v63[v131[5]];
            uint64_t v132 = v131[6];
            unint64_t v133 = &v62[v132];
            uint64_t v134 = &v63[v132];
            long long v135 = *((_OWORD *)v134 + 1);
            *(_OWORD *)unint64_t v133 = *(_OWORD *)v134;
            *((_OWORD *)v133 + 1) = v135;
            *(void *)&v62[v131[7]] = *(void *)&v63[v131[7]];
            *(void *)&v62[v131[8]] = *(void *)&v63[v131[8]];
            *(void *)&v62[v96[5]] = *(void *)&v63[v96[5]];
            *(void *)&v62[v96[6]] = *(void *)&v63[v96[6]];
            *(_OWORD *)&v62[v96[7]] = *(_OWORD *)&v63[v96[7]];
            (*(void (**)(char *, void, uint64_t, int *))(v97 + 56))(v62, 0, 1, v96);
          }
          goto LABEL_87;
        case 3u:
          uint64_t v103 = *((void *)v63 + 1);
          *(void *)uint64_t v62 = *(void *)v63;
          *((void *)v62 + 1) = v103;
          v62[16] = v63[16];
          uint64_t v104 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v105 = v104[6];
          id v182 = v62;
          id v106 = &v62[v105];
          uint64_t v107 = &v63[v105];
          uint64_t v108 = type metadata accessor for PuzzleStreak();
          uint64_t v109 = *(void *)(v108 - 8);
          uint64_t v110 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48);
          if (v110(v107, 1, v108))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v106, v107, *(void *)(*(void *)(v111 - 8) + 64));
          }
          else
          {
            uint64_t v136 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v106, v107, v136);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
          }
          uint64_t v137 = v104[7];
          uint64_t v138 = (char *)v182 + v137;
          uint64_t v139 = &v63[v137];
          if (v110(&v63[v137], 1, v108))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
          }
          else
          {
            uint64_t v141 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v138, v139, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v138, 0, 1, v108);
          }
          uint64_t v142 = v104[8];
          uint64_t v143 = (_OWORD *)((char *)v182 + v142);
          uint64_t v144 = &v63[v142];
          long long v145 = *((_OWORD *)v144 + 1);
          *uint64_t v143 = *(_OWORD *)v144;
          v143[1] = v145;
          *(_OWORD *)((char *)v143 + 25) = *(_OWORD *)(v144 + 25);
          uint64_t v146 = v104[9];
          uint64_t v147 = (_OWORD *)((char *)v182 + v146);
          id v148 = &v63[v146];
          *(_OWORD *)((char *)v147 + 25) = *(_OWORD *)(v148 + 25);
          long long v149 = *((_OWORD *)v148 + 1);
          *uint64_t v147 = *(_OWORD *)v148;
          v147[1] = v149;
          uint64_t v150 = v104[10];
          uint64_t v151 = (_OWORD *)((char *)v182 + v150);
          uint64_t v152 = &v63[v150];
          long long v153 = *((_OWORD *)v152 + 1);
          *uint64_t v151 = *(_OWORD *)v152;
          v151[1] = v153;
          *(_OWORD *)((char *)v151 + 25) = *(_OWORD *)(v152 + 25);
          goto LABEL_87;
        default:
          uint64_t v64 = type metadata accessor for PuzzleStatisticValue(0);
          int v65 = swift_getEnumCaseMultiPayload();
          if (v65 == 5)
          {
            uint64_t v66 = type metadata accessor for PuzzleStreak();
            uint64_t v67 = *(void *)(v66 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v63, 1, v66))
            {
LABEL_59:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v62, v63, *(void *)(*(void *)(v154 - 8) + 64));
              goto LABEL_86;
            }
          }
          else
          {
            if (v65 != 4)
            {
              memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
              goto LABEL_87;
            }
            uint64_t v66 = type metadata accessor for PuzzleStreak();
            uint64_t v67 = *(void *)(v66 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v63, 1, v66)) {
              goto LABEL_59;
            }
          }
          uint64_t v156 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v62, v63, v156);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v62, 0, 1, v66);
LABEL_86:
          swift_storeEnumTagMultiPayload();
LABEL_87:
          swift_storeEnumTagMultiPayload();
LABEL_88:
          swift_storeEnumTagMultiPayload();
LABEL_89:
          uint64_t v176 = *(int *)(a3 + 24);
          *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
          *(void *)&a1[v176] = *(void *)&a2[v176];
          return a1;
      }
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_89;
  }
}

char *assignWithTake for FeedItemAuxiliaryItem(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFEE6798((uint64_t)a1);
    uint64_t v6 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v8 = v7[5];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_1C151DBAC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
        uint64_t v12 = v7[7];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        v13[8] = v14[8];
        *(void *)uint64_t v13 = *(void *)v14;
        *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
        goto LABEL_91;
      case 3u:
        uint64_t v190 = a3;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        a1[24] = a2[24];
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        a1[56] = a2[56];
        uint64_t v15 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v16 = v15[10];
        uint64_t v17 = &a1[v16];
        char v18 = &a2[v16];
        *uint64_t v17 = a2[v16];
        v17[1] = a2[v16 + 1];
        uint64_t v19 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v20 = v19[6];
        uint64_t v21 = &v17[v20];
        uint64_t v22 = &v18[v20];
        uint64_t v23 = (int *)type metadata accessor for SharedItem();
        uint64_t v24 = *((void *)v23 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
        {
          uint64_t v25 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          uint64_t v69 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v21, v22, v69);
          v21[v23[5]] = v22[v23[5]];
          *(void *)&v21[v23[6]] = *(void *)&v22[v23[6]];
          uint64_t v70 = v23[7];
          size_t v189 = &v21[v70];
          uint64_t v71 = &v22[v70];
          uint64_t v72 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v189, v71, v72);
          (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
        }
        v17[v19[7]] = v18[v19[7]];
        v17[v19[8]] = v18[v19[8]];
        v17[v19[9]] = v18[v19[9]];
        v17[v19[10]] = v18[v19[10]];
        uint64_t v73 = v15[11];
        uint64_t v74 = &a1[v73];
        uint64_t v75 = &a2[v73];
        uint64_t v76 = sub_1C151D2DC();
        uint64_t v77 = *(void *)(v76 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v74, v75, v76);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
        }
        a3 = v190;
        *(_OWORD *)&a1[v15[12]] = *(_OWORD *)&a2[v15[12]];
        uint64_t v87 = v15[13];
        uint64_t v88 = *(void *)&a2[v87];
        if (v88 == 2) {
          uint64_t v88 = 2;
        }
        *(void *)&a1[v87] = v88;
        *(void *)&a1[v15[14]] = *(void *)&a2[v15[14]];
        goto LABEL_91;
      case 4u:
        uint64_t v191 = a3;
        uint64_t v26 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v26;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v27 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v28 = v27[8];
        unint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = sub_1C1515FDC();
        uint64_t v32 = *(void *)(v31 - 8);
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v33(v29, v30, v31);
        uint64_t v34 = v27[9];
        uint64_t v35 = &a1[v34];
        unint64_t v36 = &a2[v34];
        uint64_t v188 = v31;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&a2[v34], 1, v31))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          v33(v35, v36, v31);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
        }
        uint64_t v79 = v33;
        a3 = v191;
        *(void *)&a1[v27[10]] = *(void *)&a2[v27[10]];
        *(void *)&a1[v27[11]] = *(void *)&a2[v27[11]];
        uint64_t v80 = v27[12];
        uint64_t v81 = &a1[v80];
        uint64_t v82 = &a2[v80];
        uint64_t v83 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v84 = *((void *)v83 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v84 + 48))(v82, 1, v83))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          uint64_t v183 = v84;
          long long v184 = v27;
          long long v185 = v79;
          *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
          *((void *)v81 + 2) = *((void *)v82 + 2);
          v81[24] = v82[24];
          *((void *)v81 + 4) = *((void *)v82 + 4);
          *(_OWORD *)(v81 + 40) = *(_OWORD *)(v82 + 40);
          v81[56] = v82[56];
          uint64_t v89 = v83[10];
          uint64_t v90 = &v81[v89];
          uint64_t v91 = &v82[v89];
          *uint64_t v90 = v82[v89];
          v90[1] = v82[v89 + 1];
          uint64_t v92 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v93 = v92[6];
          __dst = &v90[v93];
          uint64_t v94 = &v91[v93];
          uint64_t v95 = (int *)type metadata accessor for SharedItem();
          uint64_t v182 = *((void *)v95 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v182 + 48))(v94, 1, v95))
          {
            uint64_t v96 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v94, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            uint64_t v114 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(__dst, v94, v114);
            __dst[v95[5]] = v94[v95[5]];
            *(void *)&__dst[v95[6]] = *(void *)&v94[v95[6]];
            v185(&__dst[v95[7]], &v94[v95[7]], v188);
            (*(void (**)(char *, void, uint64_t, int *))(v182 + 56))(__dst, 0, 1, v95);
          }
          v90[v92[7]] = v91[v92[7]];
          v90[v92[8]] = v91[v92[8]];
          v90[v92[9]] = v91[v92[9]];
          v90[v92[10]] = v91[v92[10]];
          uint64_t v115 = v83[11];
          uint64_t v116 = &v81[v115];
          uint64_t v117 = &v82[v115];
          uint64_t v118 = sub_1C151D2DC();
          uint64_t v119 = *(void *)(v118 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v117, 1, v118))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v116, v117, v118);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
          }
          a3 = v191;
          uint64_t v27 = v184;
          uint64_t v79 = v185;
          *(_OWORD *)&v81[v83[12]] = *(_OWORD *)&v82[v83[12]];
          uint64_t v121 = v83[13];
          uint64_t v122 = *(void *)&v82[v121];
          if (v122 == 2) {
            uint64_t v122 = 2;
          }
          *(void *)&v81[v121] = v122;
          *(void *)&v81[v83[14]] = *(void *)&v82[v83[14]];
          (*(void (**)(char *, void, uint64_t, int *))(v183 + 56))(v81, 0, 1, v83);
        }
        uint64_t v123 = v27[13];
        uint64_t v124 = &a1[v123];
        uint64_t v125 = &a2[v123];
        uint64_t v126 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v127 = *(void *)(v126 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
            uint64_t v129 = type metadata accessor for GenericDataVisualization();
            uint64_t v130 = v79;
            uint64_t v131 = v129;
            v130(&v124[*(int *)(v129 + 20)], &v125[*(int *)(v129 + 20)], v188);
            *(void *)&v124[*(int *)(v131 + 24)] = *(void *)&v125[*(int *)(v131 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v124, v125, *(void *)(v127 + 64));
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
        }
        a1[v27[14]] = a2[v27[14]];
        goto LABEL_91;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v38 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v39 = &a1[v38];
        uint64_t v40 = &a2[v38];
        long long v41 = *(_OWORD *)&a2[v38 + 16];
        *(_OWORD *)uint64_t v39 = *(_OWORD *)&a2[v38];
        *((_OWORD *)v39 + 1) = v41;
        uint64_t v42 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v43 = *(int *)(v42 + 24);
        id v44 = &v39[v43];
        id v45 = &v40[v43];
        uint64_t v46 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v47 = *(void *)(v46 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          uint64_t v86 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v44, v45, v86);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        *(void *)&v39[*(int *)(v42 + 28)] = *(void *)&v40[*(int *)(v42 + 28)];
        goto LABEL_91;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v49 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v50 = v49[5];
        uint64_t v51 = &a1[v50];
        uint64_t v52 = &a2[v50];
        uint64_t v53 = sub_1C151959C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
        *(void *)&a1[v49[6]] = *(void *)&a2[v49[6]];
        uint64_t v54 = v49[7];
        long long v55 = &a1[v54];
        long long v56 = &a2[v54];
        v55[8] = v56[8];
        *(void *)long long v55 = *(void *)v56;
        *(_OWORD *)&a1[v49[8]] = *(_OWORD *)&a2[v49[8]];
        goto LABEL_91;
      case 0xFu:
        uint64_t v57 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v57;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v58 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        long long v59 = &a1[v58];
        long long v60 = &a2[v58];
        *(void *)&a1[v58] = *(void *)&a2[v58];
        uint64_t v61 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v62 = &v59[v61];
        uint64_t v63 = &v60[v61];
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v100 = type metadata accessor for PuzzleStatisticValue(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v192 = a3;
            if (EnumCaseMultiPayload == 5)
            {
              uint64_t v156 = type metadata accessor for PuzzleStreak();
              uint64_t v157 = *(void *)(v156 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v63, 1, v156))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v62, v63, *(void *)(*(void *)(v158 - 8) + 64));
              }
              else
              {
                uint64_t v162 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v62, v63, v162);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v62, 0, 1, v156);
              }
              uint64_t v159 = v62;
            }
            else
            {
              if (EnumCaseMultiPayload != 4)
              {
                uint64_t v159 = v62;
                memcpy(v62, v63, *(void *)(*(void *)(v100 - 8) + 64));
                goto LABEL_72;
              }
              uint64_t v102 = type metadata accessor for PuzzleStreak();
              uint64_t v103 = *(void *)(v102 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v63, 1, v102))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v62, v63, *(void *)(*(void *)(v104 - 8) + 64));
              }
              else
              {
                uint64_t v161 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v62, v63, v161);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v62, 0, 1, v102);
              }
              uint64_t v159 = v62;
            }
            swift_storeEnumTagMultiPayload();
LABEL_72:
            uint64_t v163 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v164 = *(int *)(v163 + 20);
            uint64_t v165 = v159;
            uint64_t v166 = (char *)v159 + v164;
            uint64_t v167 = &v63[v164];
            int v168 = swift_getEnumCaseMultiPayload();
            if (v168 == 5)
            {
              uint64_t v169 = type metadata accessor for PuzzleStreak();
              uint64_t v170 = *(void *)(v169 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v167, 1, v169))
              {
LABEL_77:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v166, v167, *(void *)(*(void *)(v171 - 8) + 64));
                goto LABEL_80;
              }
            }
            else
            {
              if (v168 != 4)
              {
                memcpy(v166, v167, *(void *)(*(void *)(v100 - 8) + 64));
                goto LABEL_81;
              }
              uint64_t v169 = type metadata accessor for PuzzleStreak();
              uint64_t v170 = *(void *)(v169 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v167, 1, v169)) {
                goto LABEL_77;
              }
            }
            uint64_t v172 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 32))(v166, v167, v172);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v166, 0, 1, v169);
LABEL_80:
            swift_storeEnumTagMultiPayload();
LABEL_81:
            uint64_t v173 = *(int *)(v163 + 24);
            uint64_t v174 = (char *)v165 + v173;
            uint64_t v175 = &v63[v173];
            int v176 = swift_getEnumCaseMultiPayload();
            if (v176 == 5)
            {
              uint64_t v177 = type metadata accessor for PuzzleStreak();
              uint64_t v178 = *(void *)(v177 - 8);
              a3 = v192;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48))(v175, 1, v177))
              {
LABEL_86:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v174, v175, *(void *)(*(void *)(v179 - 8) + 64));
                goto LABEL_89;
              }
            }
            else
            {
              a3 = v192;
              if (v176 != 4)
              {
                memcpy(v174, v175, *(void *)(*(void *)(v100 - 8) + 64));
                goto LABEL_90;
              }
              uint64_t v177 = type metadata accessor for PuzzleStreak();
              uint64_t v178 = *(void *)(v177 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48))(v175, 1, v177)) {
                goto LABEL_86;
              }
            }
            uint64_t v180 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(v174, v175, v180);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v178 + 56))(v174, 0, 1, v177);
            goto LABEL_89;
          case 2u:
            uint64_t v97 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v98 = *((void *)v97 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v98 + 48))(v63, 1, v97))
            {
              sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              memcpy(v62, v63, *(void *)(*(void *)(v99 - 8) + 64));
            }
            else
            {
              uint64_t v132 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v62, v63, v132);
              unint64_t v133 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              *(_OWORD *)&v62[v133[5]] = *(_OWORD *)&v63[v133[5]];
              uint64_t v134 = v133[6];
              long long v135 = &v62[v134];
              uint64_t v136 = &v63[v134];
              long long v137 = *((_OWORD *)v136 + 1);
              *(_OWORD *)long long v135 = *(_OWORD *)v136;
              *((_OWORD *)v135 + 1) = v137;
              *(void *)&v62[v133[7]] = *(void *)&v63[v133[7]];
              *(void *)&v62[v133[8]] = *(void *)&v63[v133[8]];
              *(void *)&v62[v97[5]] = *(void *)&v63[v97[5]];
              *(void *)&v62[v97[6]] = *(void *)&v63[v97[6]];
              *(_OWORD *)&v62[v97[7]] = *(_OWORD *)&v63[v97[7]];
              (*(void (**)(char *, void, uint64_t, int *))(v98 + 56))(v62, 0, 1, v97);
            }
            goto LABEL_90;
          case 3u:
            uint64_t v105 = *((void *)v63 + 1);
            *(void *)uint64_t v62 = *(void *)v63;
            *((void *)v62 + 1) = v105;
            v62[16] = v63[16];
            id v106 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v107 = v106[6];
            __dsta = v62;
            uint64_t v108 = &v62[v107];
            uint64_t v109 = &v63[v107];
            uint64_t v110 = type metadata accessor for PuzzleStreak();
            uint64_t v111 = *(void *)(v110 - 8);
            uint64_t v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48);
            if (v112(v109, 1, v110))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v108, v109, *(void *)(*(void *)(v113 - 8) + 64));
            }
            else
            {
              uint64_t v138 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v108, v109, v138);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
            }
            uint64_t v139 = v106[7];
            uint64_t v140 = &__dsta[v139];
            uint64_t v141 = &v63[v139];
            if (v112(&v63[v139], 1, v110))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
            }
            else
            {
              uint64_t v143 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(v140, v141, v143);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v140, 0, 1, v110);
            }
            uint64_t v144 = v106[8];
            long long v145 = &__dsta[v144];
            uint64_t v146 = &v63[v144];
            long long v147 = *((_OWORD *)v146 + 1);
            *(_OWORD *)long long v145 = *(_OWORD *)v146;
            *((_OWORD *)v145 + 1) = v147;
            *(_OWORD *)(v145 + 25) = *(_OWORD *)(v146 + 25);
            uint64_t v148 = v106[9];
            long long v149 = &__dsta[v148];
            uint64_t v150 = &v63[v148];
            *(_OWORD *)(v149 + 25) = *(_OWORD *)(v150 + 25);
            long long v151 = *((_OWORD *)v150 + 1);
            *(_OWORD *)long long v149 = *(_OWORD *)v150;
            *((_OWORD *)v149 + 1) = v151;
            uint64_t v152 = v106[10];
            long long v153 = &__dsta[v152];
            uint64_t v154 = &v63[v152];
            long long v155 = *((_OWORD *)v154 + 1);
            *(_OWORD *)long long v153 = *(_OWORD *)v154;
            *((_OWORD *)v153 + 1) = v155;
            *(_OWORD *)(v153 + 25) = *(_OWORD *)(v154 + 25);
            goto LABEL_90;
          default:
            uint64_t v64 = type metadata accessor for PuzzleStatisticValue(0);
            int v65 = swift_getEnumCaseMultiPayload();
            if (v65 == 5)
            {
              uint64_t v66 = type metadata accessor for PuzzleStreak();
              uint64_t v67 = *(void *)(v66 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v63, 1, v66)) {
                goto LABEL_16;
              }
            }
            else
            {
              if (v65 != 4)
              {
                memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
                goto LABEL_90;
              }
              uint64_t v66 = type metadata accessor for PuzzleStreak();
              uint64_t v67 = *(void *)(v66 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v63, 1, v66))
              {
LABEL_16:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v62, v63, *(void *)(*(void *)(v68 - 8) + 64));
                goto LABEL_89;
              }
            }
            uint64_t v160 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v62, v63, v160);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v62, 0, 1, v66);
LABEL_89:
            swift_storeEnumTagMultiPayload();
LABEL_90:
            swift_storeEnumTagMultiPayload();
LABEL_91:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemAuxiliaryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C00D79DC);
}

uint64_t sub_1C00D79DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FeedItemAuxiliaryItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C00D7AB0);
}

uint64_t sub_1C00D7AB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FeedItem(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C00D7B6C()
{
  uint64_t result = type metadata accessor for FeedItem(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t SportsTaxonomyGraphManager.sportsTaxonomyGraph()()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v2)
  {
    sub_1BFCF0AB4(0, &qword_1EB863E50, (uint64_t (*)(uint64_t))type metadata accessor for SportsTaxonomyGraph, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    uint64_t v0 = sub_1C15183CC();
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_1C00D7D08()
{
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  sub_1C151901C();
  swift_release();

  unint64_t v1 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  type metadata accessor for SportsTaxonomyGraph();
  sub_1C151900C();
  swift_release();

  uint64_t v3 = (void *)sub_1C1518E7C();
  uint64_t v4 = sub_1C151903C();
  swift_release();

  return v4;
}

uint64_t sub_1C00D7E94()
{
  return sub_1C00D7D08();
}

uint64_t sub_1C00D7E9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  sub_1C0B49448(ObjectType, v7);
  swift_release();
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00D7F14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return sub_1C0B49448(ObjectType, v2);
}

void *sub_1C00D7F54(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  v6[0] = *a1;
  v6[1] = v2;
  _OWORD v6[2] = v3;
  type metadata accessor for SportsTaxonomyGraph();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C127C5F4(v6);
  uint64_t v5 = (uint64_t)result;
  if (!v1)
  {
    v6[0] = (uint64_t)result;
    swift_retain_n();
    swift_retain();
    sub_1C1518ECC();
    swift_release();
    swift_release();
    v6[0] = v5;
    sub_1BFCF0AB4(0, &qword_1EB863E50, (uint64_t (*)(uint64_t))type metadata accessor for SportsTaxonomyGraph, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (void *)sub_1C151908C();
  }
  return result;
}

uint64_t sub_1C00D8068()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F36C();
  sub_1BFCF0AB4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  swift_getErrorValue();
  uint64_t v2 = sub_1C1520D3C();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t SportsTaxonomyGraphManager.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t SportsTaxonomyGraphManager.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C00D8224()
{
  return SportsTaxonomyGraphManager.sportsTaxonomyGraph()();
}

Swift::Void __swiftcall SportsTaxonomyGraphManager.sceneWillEnterForeground()()
{
}

uint64_t sub_1C00D828C()
{
  return sub_1C15187EC();
}

uint64_t sub_1C00D82B8()
{
  return sub_1C151881C();
}

uint64_t sub_1C00D82E4()
{
  return sub_1C15187EC();
}

uint64_t sub_1C00D8310()
{
  return sub_1C151881C();
}

uint64_t sub_1C00D833C()
{
  return sub_1C15187EC();
}

uint64_t dispatch thunk of SportsTaxonomyGraphManagerType.sportsTaxonomyGraph()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for SportsTaxonomyGraphManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsTaxonomyGraphManager);
}

void *sub_1C00D8394(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = sub_1C15189FC();
  MEMORY[0x1F4188790](v7);
  sub_1BFCF09DC((unint64_t *)&unk_1EB871420, 255, MEMORY[0x1E4FAACC8]);
  sub_1BFCF0B18(0);
  sub_1BFCF09DC((unint64_t *)&qword_1EB879C60, 255, sub_1BFCF0B18);
  sub_1C151FFBC();
  sub_1C0091C20();
  swift_allocObject();
  v3[4] = sub_1C15183BC();
  v10[0] = 0;
  sub_1BFCF0AB4(0, &qword_1EB863E00, (uint64_t (*)(uint64_t))sub_1C00789C8, MEMORY[0x1E4FAB060]);
  swift_allocObject();
  v3[5] = sub_1C1518E9C();
  v3[2] = a1;
  v3[3] = a2;
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_1BFCF09DC(&qword_1EB868058, v8, (void (*)(uint64_t))type metadata accessor for SportsTaxonomyGraphManager);
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C1518B1C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v3;
}

uint64_t sub_1C00D85E0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return sub_1C0B492CC(ObjectType, v1);
}

id static FCDateRange.firstEdition(date:config:)(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for FeedEdition();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  v13[0] = *a2;
  v9(v7, a1, v8);
  v13[1] = v13[0];
  FeedEditionConfig.fetchWindow(for:)(a1);
  *(void *)&v7[*(int *)(v5 + 28)] = v10;
  id v11 = v10;
  sub_1C00DA270((uint64_t)v7);
  return v11;
}

id static FCDateRange.infiniteChronologicalFeed.getter()
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v9 - v4;
  sub_1BFC3B8A0();
  sub_1C151630C();
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 0, 1, v6);
  v7(v2, 1, 1, v6);
  id result = sub_1BFC5DA98((uint64_t)v5, (uint64_t)v2);
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t FCDateRange.dateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v21 = a1;
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = MEMORY[0x1F4188790](v10).n128_u64[0];
  uint64_t v13 = (char *)&v21 - v12;
  id v14 = objc_msgSend(v2, sel_earlierDate, v11, v21);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
    goto LABEL_7;
  }
  uint64_t v15 = v14;
  sub_1C15162BC();

  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v16(v13, v6, v3);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v22(v13, 0, 1, v3);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v17(v13, 1, v3) == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v18 = objc_msgSend(v2, sel_laterDate);
  if (!v18)
  {
LABEL_8:
    uint64_t result = v22(v9, 1, 1, v3);
    goto LABEL_9;
  }
  uint64_t v19 = v18;
  sub_1C15162BC();

  v16(v9, v6, v3);
  v22(v9, 0, 1, v3);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v17)(v9, 1, v3);
  if (result != 1) {
    return sub_1C151550C();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t FCDateRange.refreshingEditionedFeed(from:refreshStrategy:config:)(void (**a1)(char *, void, uint64_t), unsigned __int8 *a2)
{
  uint64_t v108 = a1;
  uint64_t v3 = type metadata accessor for FeedEdition();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1C15165FC();
  uint64_t v107 = *(void (***)(char *, uint64_t))(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v111 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1C151661C();
  id v106 = *(void (***)(char *, uint64_t))(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v109 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v12 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v86 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v113 = (char *)&v86 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v86 - v19;
  __n128 v25 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v86 - v22;
  int v27 = *a2;
  uint64_t v28 = v23[1];
  if ((v27 - 1) < 2)
  {
    uint64_t v29 = *v23;
    sub_1C151630C();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v5, v11, v8);
    uint64_t v114 = v29;
    uint64_t v115 = v28;
    FeedEditionConfig.fetchWindow(for:)((uint64_t)v11);
    *(void *)&v5[*(int *)(v3 + 20)] = v30;
    id v31 = v30;
    sub_1C00DA270((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (uint64_t)v31;
  }
  uint64_t v87 = v23[1];
  if (v27)
  {
    uint64_t v77 = v24;
    (*(void (**)(char *, void (**)(char *, void, uint64_t), uint64_t, __n128))(v9 + 16))(v15, v108, v8, v25);
    uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v79 = 1;
    v78(v15, 0, 1, v8);
    id v80 = objc_msgSend(v116, sel_startDate);
    if (v80)
    {
      uint64_t v81 = v80;
      sub_1C15162BC();

      uint64_t v82 = v77;
      uint64_t v79 = 0;
    }
    else
    {
      uint64_t v82 = v77;
    }
    v78((char *)v82, v79, 1, v8);
    sub_1BFC3B8A0();
    id v84 = sub_1BFC5DA98((uint64_t)v15, v82);
    if (v84) {
      return (uint64_t)v84;
    }
LABEL_62:
    __break(1u);
LABEL_63:
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v8)(v113, 1, 1, v92);
    goto LABEL_64;
  }
  (*(void (**)(char *, void (**)(char *, void, uint64_t), uint64_t, __n128))(v9 + 16))((char *)&v86 - v22, v108, v8, v25);
  uint64_t v89 = v9;
  uint64_t v32 = v8;
  uint64_t v8 = *(void *)(v9 + 56);
  uint64_t v33 = 1;
  uint64_t v92 = v32;
  ((void (*)(char *, void, uint64_t))v8)(v26, 0, 1);
  id v34 = objc_msgSend(v116, sel_startDate);
  if (v34)
  {
    uint64_t v35 = v34;
    sub_1C15162BC();

    uint64_t v33 = 0;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v8)(v20, v33, 1, v92);
  id v31 = (id)sub_1BFC3B8A0();
  id v36 = sub_1BFC5DA98((uint64_t)v26, (uint64_t)v20);
  if (!v36)
  {
    sub_1C00DA2CC();
    swift_allocError();
    unsigned char *v83 = 0;
    swift_willThrow();
    return (uint64_t)v31;
  }
  uint64_t v37 = v36;
  objc_msgSend(v36, sel_absoluteTimeInterval);
  double v39 = v38;
  uint64_t v86 = v37;
  id v40 = objc_msgSend(v37, sel_startDate);
  if (!v40) {
    goto LABEL_63;
  }
  long long v41 = v40;
  sub_1C15162BC();

  uint64_t v42 = v89;
  uint64_t v43 = v113;
  uint64_t v44 = v92;
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v113, v11, v92);
  ((void (*)(char *, void, uint64_t, uint64_t))v8)(v43, 0, 1, v44);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48))(v43, 1, v44);
  if (result != 1)
  {
    uint64_t v90 = *(void *)(v87 + 16);
    if (!v90)
    {
LABEL_58:
      double v76 = 86400.0;
LABEL_59:
      (*(void (**)(char *, uint64_t))(v42 + 8))(v113, v44);
      id v31 = v86;
      if (v39 > v76)
      {
        sub_1C00DA2CC();
        swift_allocError();
        unsigned char *v85 = 1;
        swift_willThrow();
      }
      return (uint64_t)v31;
    }
    uint64_t v91 = v87 + 32;
    unsigned int v97 = *MEMORY[0x1E4F27C68];
    uint64_t v46 = v107++;
    uint64_t v108 = (void (**)(char *, void, uint64_t))(v46 + 13);
    ++v106;
    unsigned int v95 = *MEMORY[0x1E4F27C10];
    swift_bridgeObjectRetain_n();
    uint64_t v47 = 0;
    while (1)
    {
      uint64_t v48 = (void *)(v91 + 16 * v47);
      uint64_t v49 = *v48;
      uint64_t v100 = *(void *)(*v48 + 16);
      if (v100) {
        break;
      }
LABEL_12:
      if (++v47 == v90)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_58;
      }
    }
    uint64_t v93 = v47;
    uint64_t v88 = v48[1];
    uint64_t v50 = *(void *)(v49 + 32);
    char v51 = *(unsigned char *)(v49 + 40);
    uint64_t v52 = *(void *)(v49 + 48);
    char v53 = *(unsigned char *)(v49 + 56);
    uint64_t v54 = *(void *)(v49 + 64);
    char v55 = *(unsigned char *)(v49 + 72);
    uint64_t v101 = *(void *)(v49 + 80);
    uint64_t v102 = v54;
    LODWORD(v116) = *(unsigned __int8 *)(v49 + 88);
    uint64_t v94 = v49;
    swift_bridgeObjectRetain_n();
    long long v56 = v109;
    sub_1C15165BC();
    uint64_t v58 = v111;
    uint64_t v57 = v112;
    uint64_t v105 = *v108;
    v105(v111, v97, v112);
    uint64_t v59 = sub_1C151660C();
    uint64_t v104 = *v107;
    v104(v58, v57);
    uint64_t v103 = *v106;
    v103(v56, v110);
    if (v51)
    {
      if (v59 < 1) {
        goto LABEL_30;
      }
    }
    else if (v59 < v50)
    {
      goto LABEL_30;
    }
    if (v53)
    {
      if (v59 > 7) {
        goto LABEL_30;
      }
    }
    else if (v52 < v59)
    {
      goto LABEL_30;
    }
    long long v60 = v109;
    sub_1C15165BC();
    uint64_t v62 = v111;
    uint64_t v61 = v112;
    v105(v111, v95, v112);
    uint64_t v63 = sub_1C151660C();
    v104(v62, v61);
    v103(v60, v110);
    if (v55)
    {
      if (v63 < 0) {
        goto LABEL_30;
      }
LABEL_26:
      if (v116)
      {
        if (v63 <= 23) {
          goto LABEL_49;
        }
      }
      else if (v101 >= v63)
      {
LABEL_49:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        double v76 = (double)v88;
        uint64_t v44 = v92;
        uint64_t v42 = v89;
        goto LABEL_59;
      }
      goto LABEL_30;
    }
    if (v63 >= v102) {
      goto LABEL_26;
    }
LABEL_30:
    if (v100 != 1)
    {
      uint64_t v64 = (unsigned __int8 *)(v94 + 152);
      uint64_t v8 = 1;
      do
      {
        uint64_t v65 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          goto LABEL_62;
        }
        uint64_t v66 = *((void *)v64 - 7);
        uint64_t v101 = *((void *)v64 - 5);
        LODWORD(v116) = *(v64 - 32);
        uint64_t v98 = *((void *)v64 - 3);
        LODWORD(v102) = *(v64 - 16);
        uint64_t v96 = *((void *)v64 - 1);
        int v99 = *v64;
        char v67 = *(v64 - 48);
        uint64_t v68 = v109;
        sub_1C15165BC();
        uint64_t v70 = v111;
        uint64_t v69 = v112;
        v105(v111, v97, v112);
        uint64_t v71 = sub_1C151660C();
        v104(v70, v69);
        v103(v68, v110);
        if (v67)
        {
          if (v71 < 1) {
            goto LABEL_33;
          }
        }
        else if (v71 < v66)
        {
          goto LABEL_33;
        }
        if (v116)
        {
          if (v71 > 7) {
            goto LABEL_33;
          }
        }
        else if (v101 < v71)
        {
          goto LABEL_33;
        }
        uint64_t v72 = v109;
        sub_1C15165BC();
        uint64_t v74 = v111;
        uint64_t v73 = v112;
        v105(v111, v95, v112);
        uint64_t v75 = sub_1C151660C();
        v104(v74, v73);
        v103(v72, v110);
        if (v102)
        {
          if (v75 < 0) {
            goto LABEL_33;
          }
        }
        else if (v75 < v98)
        {
          goto LABEL_33;
        }
        if (v99)
        {
          if (v75 <= 23) {
            goto LABEL_49;
          }
        }
        else if (v96 >= v75)
        {
          goto LABEL_49;
        }
LABEL_33:
        v64 += 64;
        ++v8;
      }
      while (v65 != v100);
    }
    swift_bridgeObjectRelease_n();
    uint64_t v44 = v92;
    uint64_t v42 = v89;
    uint64_t v47 = v93;
    goto LABEL_12;
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t *FCDateRange.refreshingExtendedEditionedFeed(refreshedDateRange:refreshStrategy:config:)(uint64_t *a1, unsigned char *a2, char *a3)
{
  uint64_t v96 = a3;
  uint64_t v102 = a2;
  uint64_t v98 = a1;
  uint64_t v3 = sub_1C15165FC();
  uint64_t v95 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151661C();
  uint64_t v94 = *(char **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void **)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v13 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v73 - v15;
  *(void *)&double v19 = MEMORY[0x1F4188790](v17).n128_u64[0];
  uint64_t v21 = (char *)&v73 - v20;
  if (*v102) {
    return v98;
  }
  id v80 = v10;
  uint64_t v100 = v18;
  uint64_t v101 = v5;
  uint64_t v102 = v8;
  uint64_t v89 = v6;
  uint64_t v99 = v3;
  uint64_t v75 = *((void *)v96 + 1);
  uint64_t v22 = objc_msgSend(v98, sel_startDate, v19);
  if (v22)
  {
    uint64_t v10 = v22;
    sub_1C15162BC();

    uint64_t v23 = v80[7];
    ((void (*)(char *, void, uint64_t, uint64_t))v23)(v21, 0, 1, v9);
  }
  else
  {
    uint64_t v23 = v80[7];
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v23)(v21, 1, 1, v9);
  }
  uint64_t v24 = v12;
  __n128 v25 = objc_msgSend(v97, sel_endDate);
  if (v25)
  {
    uint64_t v10 = v25;
    sub_1C15162BC();

    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = 1;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v23)(v16, v26, 1, v9);
  sub_1BFC3B8A0();
  int v27 = sub_1BFC5DA98((uint64_t)v21, (uint64_t)v16);
  if (!v27)
  {
    sub_1C00DA2CC();
    uint64_t v69 = swift_allocError();
    unsigned char *v70 = 0;
    uint64_t v82 = v69;
    swift_willThrow();
    return v10;
  }
  uint64_t v28 = v27;
  objc_msgSend(v27, sel_absoluteTimeInterval);
  double v30 = v29;
  uint64_t v74 = v28;
  id v31 = objc_msgSend(v28, sel_startDate);
  if (!v31) {
    goto LABEL_60;
  }
  uint64_t v32 = v31;
  sub_1C15162BC();

  uint64_t v33 = v80;
  uint64_t v34 = v100;
  ((void (*)(uint64_t, char *, uint64_t))v80[4])(v100, v24, v9);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v23)(v34, 0, 1, v9);
  uint64_t result = (uint64_t *)((uint64_t (*)(uint64_t, uint64_t, uint64_t))v33[6])(v34, 1, v9);
  if (result != 1)
  {
    uint64_t v78 = *(void *)(v75 + 16);
    if (!v78)
    {
LABEL_55:
      double v68 = 86400.0;
LABEL_56:
      ((void (*)(uint64_t, uint64_t))v33[1])(v100, v9);
      uint64_t v10 = v74;
      if (v30 > v68)
      {
        sub_1C00DA2CC();
        uint64_t v71 = swift_allocError();
        unsigned char *v72 = 1;
        uint64_t v82 = v71;
        swift_willThrow();
      }
      return v10;
    }
    uint64_t v79 = v75 + 32;
    unsigned int v86 = *MEMORY[0x1E4F27C68];
    unsigned int v97 = (char **)(v95 + 8);
    uint64_t v98 = (uint64_t *)(v95 + 104);
    uint64_t v96 = v94 + 8;
    unsigned int v84 = *MEMORY[0x1E4F27C10];
    swift_bridgeObjectRetain_n();
    uint64_t v36 = 0;
    uint64_t v37 = v101;
    uint64_t v77 = v9;
    while (1)
    {
      double v38 = (void *)(v79 + 16 * v36);
      uint64_t v39 = *v38;
      uint64_t v90 = *(void *)(*v38 + 16);
      if (v90) {
        break;
      }
LABEL_15:
      if (++v36 == v78)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_55;
      }
    }
    uint64_t v81 = v36;
    uint64_t v76 = v38[1];
    uint64_t v40 = *(void *)(v39 + 32);
    char v41 = *(unsigned char *)(v39 + 40);
    uint64_t v42 = *(void *)(v39 + 48);
    char v43 = *(unsigned char *)(v39 + 56);
    uint64_t v91 = *(void *)(v39 + 64);
    char v44 = *(unsigned char *)(v39 + 72);
    uint64_t v88 = *(void *)(v39 + 80);
    int v92 = *(unsigned __int8 *)(v39 + 88);
    uint64_t v83 = v39;
    swift_bridgeObjectRetain_n();
    id v45 = v102;
    sub_1C15165BC();
    uint64_t v46 = v99;
    uint64_t v95 = *v98;
    ((void (*)(char *, void, uint64_t))v95)(v37, v86, v99);
    uint64_t v47 = sub_1C151660C();
    uint64_t v94 = *v97;
    ((void (*)(char *, uint64_t))v94)(v37, v46);
    uint64_t v93 = *(void (**)(unsigned char *, uint64_t))v96;
    v93(v45, v89);
    if (v41) {
      BOOL v48 = v47 < 1;
    }
    else {
      BOOL v48 = v47 < v40;
    }
    uint64_t v49 = v101;
    uint64_t v50 = v89;
    if (!v48)
    {
      if (v43)
      {
        if (v47 > 7) {
          goto LABEL_33;
        }
      }
      else if (v42 < v47)
      {
        goto LABEL_33;
      }
      char v51 = v102;
      sub_1C15165BC();
      uint64_t v52 = v99;
      ((void (*)(char *, void, uint64_t))v95)(v49, v84, v99);
      uint64_t v53 = sub_1C151660C();
      ((void (*)(char *, uint64_t))v94)(v49, v52);
      v93(v51, v50);
      if (v44)
      {
        if (v53 < 0) {
          goto LABEL_33;
        }
LABEL_29:
        if (v92)
        {
          if (v53 <= 23) {
            goto LABEL_52;
          }
        }
        else if (v88 >= v53)
        {
LABEL_52:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          double v68 = (double)v76;
          uint64_t v9 = v77;
          uint64_t v33 = v80;
          goto LABEL_56;
        }
        goto LABEL_33;
      }
      if (v53 >= v91) {
        goto LABEL_29;
      }
    }
LABEL_33:
    uint64_t v9 = (uint64_t)v102;
    if (v90 != 1)
    {
      uint64_t v54 = (unsigned __int8 *)(v83 + 152);
      uint64_t v23 = 1;
      do
      {
        uint64_t v55 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
          __break(1u);
LABEL_60:
          uint64_t result = (uint64_t *)((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23)(v100, 1, 1, v9);
          goto LABEL_61;
        }
        uint64_t v56 = *((void *)v54 - 7);
        uint64_t v91 = *((void *)v54 - 5);
        char v57 = *(v54 - 32);
        uint64_t v87 = *((void *)v54 - 3);
        int v92 = *(v54 - 16);
        uint64_t v85 = *((void *)v54 - 1);
        LODWORD(v88) = *v54;
        char v58 = *(v54 - 48);
        sub_1C15165BC();
        uint64_t v59 = v101;
        uint64_t v60 = v99;
        ((void (*)(char *, void, uint64_t))v95)(v101, v86, v99);
        uint64_t v61 = sub_1C151660C();
        uint64_t v62 = v59;
        uint64_t v63 = v89;
        uint64_t v64 = v60;
        uint64_t v9 = (uint64_t)v102;
        ((void (*)(char *, uint64_t))v94)(v62, v64);
        v93((unsigned char *)v9, v63);
        if (v58)
        {
          if (v61 < 1) {
            goto LABEL_36;
          }
        }
        else if (v61 < v56)
        {
          goto LABEL_36;
        }
        if (v57)
        {
          if (v61 > 7) {
            goto LABEL_36;
          }
        }
        else if (v91 < v61)
        {
          goto LABEL_36;
        }
        sub_1C15165BC();
        uint64_t v65 = v101;
        uint64_t v66 = v99;
        ((void (*)(char *, void, uint64_t))v95)(v101, v84, v99);
        uint64_t v67 = sub_1C151660C();
        ((void (*)(char *, uint64_t))v94)(v65, v66);
        v93((unsigned char *)v9, v63);
        if (v92)
        {
          if (v67 < 0) {
            goto LABEL_36;
          }
        }
        else if (v67 < v87)
        {
          goto LABEL_36;
        }
        if (v88)
        {
          if (v67 <= 23) {
            goto LABEL_52;
          }
        }
        else if (v85 >= v67)
        {
          goto LABEL_52;
        }
LABEL_36:
        v54 += 64;
        ++v23;
      }
      while (v55 != v90);
    }
    swift_bridgeObjectRelease_n();
    uint64_t v9 = v77;
    uint64_t v33 = v80;
    uint64_t v37 = v101;
    uint64_t v36 = v81;
    goto LABEL_15;
  }
LABEL_61:
  __break(1u);
  return result;
}

uint64_t FCDateRange.expandingEditionedFeed(config:)(_OWORD *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FeedEdition();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = *a1;
  id v14 = objc_msgSend(v2, sel_endDate);
  if (v14)
  {
    uint64_t v15 = v14;
    sub_1C15162BC();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
    if (result != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v13, v10, v4);
      v20[1] = v20[0];
      FeedEditionConfig.fetchWindow(for:)((uint64_t)v10);
      uint64_t v17 = *(int *)(v11 + 20);
      *(void *)&v13[v17] = v18;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      id v19 = *(id *)&v13[v17];
      sub_1C00DA270((uint64_t)v13);
      return (uint64_t)v19;
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00DA270(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedEdition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C00DA2CC()
{
  unint64_t result = qword_1EB860D38;
  if (!qword_1EB860D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860D38);
  }
  return result;
}

unsigned char *_s6ErrorsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C00DA3ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ErrorsOMa()
{
  return &_s6ErrorsON;
}

unint64_t sub_1C00DA428()
{
  unint64_t result = qword_1EA196B70;
  if (!qword_1EA196B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196B70);
  }
  return result;
}

uint64_t sub_1C00DA47C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C05F6468(0, v1, 0);
    uint64_t v2 = v14;
    sub_1BFF01BC4();
    uint64_t v4 = a1 + 48;
    do
    {
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v13 = *(void *)(v4 - 16);
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1C151FF2C();
      uint64_t v8 = v7;
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      if (v10 >= v9 >> 1) {
        sub_1C05F6468(v9 > 1, v10 + 1, 1);
      }
      v4 += 24;
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v11 = (void *)(v14 + 32 * v10);
      void v11[4] = v13;
      v11[5] = v5;
      v11[6] = v6;
      v11[7] = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C00DA598@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return FormatOptionsNodeStatementModifier.init(from:)(a1, a2);
}

uint64_t sub_1C00DA5B0(void *a1)
{
  return FormatOptionsNodeStatementModifier.encode(to:)(a1);
}

uint64_t sub_1C00DA5C8@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X8>)
{
  int v4 = *a1;
  unsigned int v5 = *v2;
  if (v5 >> 6)
  {
    if (v5 >> 6 == 1)
    {
      if (v4 == 5)
      {
        char v18 = v5 & 1;
        uint64_t v15 = 0;
        unint64_t v16 = 0xE000000000000000;
        uint64_t v17 = MEMORY[0x1E4FBC860];
        sub_1C1445DBC(&v15, &v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_7:
        uint64_t v15 = v19;
        FormatOptionValue.type.getter(a2);
        return swift_release();
      }
      type metadata accessor for FormatDerivedDataError();
      sub_1C00DAB28();
      swift_allocError();
      char v14 = 5;
    }
    else
    {
      if (v4 == 4)
      {
        uint64_t v6 = swift_allocObject();
        sub_1BFF01BC4();
        uint64_t v7 = sub_1C151FF2C();
        uint64_t v9 = v8;
        uint64_t v10 = swift_bridgeObjectRetain();
        uint64_t v11 = sub_1C00DA47C(v10);
        *(void *)(v6 + 16) = v7;
        *(void *)(v6 + 24) = v9;
        *(void *)(v6 + 32) = v11;
        uint64_t v15 = v6 | 0x5000000000000000;
        FormatOptionValue.type.getter(a2);
        return swift_release();
      }
      type metadata accessor for FormatDerivedDataError();
      sub_1C00DAB28();
      swift_allocError();
      char v14 = 4;
    }
  }
  else
  {
    if (v4 == 3)
    {
      char v18 = *v2;
      uint64_t v15 = 0x3FF0000000000000;
      unint64_t v16 = MEMORY[0x1E4FBC860];
      sub_1C0F8227C((double *)&v15, &v19);
      goto LABEL_7;
    }
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    char v14 = 3;
  }
  *uint64_t v13 = v14;
  v13[1] = v4;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

BOOL _s8NewsFeed34FormatOptionsNodeStatementModifierO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  unsigned int v4 = v2 >> 6;
  BOOL v6 = v3 < 0x40 && v2 == v3;
  BOOL v7 = ((v3 ^ v2) & 1) == 0;
  if ((v3 & 0xC0) != 0x40) {
    BOOL v7 = 0;
  }
  if (v4 != 1) {
    BOOL v7 = (v3 & 0xC0) == 128;
  }
  if (v4) {
    return v7;
  }
  else {
    return v6;
  }
}

unint64_t sub_1C00DA840(uint64_t a1)
{
  unint64_t result = sub_1C00DA868();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C00DA868()
{
  unint64_t result = qword_1EA196B78;
  if (!qword_1EA196B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196B78);
  }
  return result;
}

unint64_t sub_1C00DA8BC(void *a1)
{
  a1[1] = sub_1C0068420();
  a1[2] = sub_1C0068474();
  unint64_t result = sub_1C00DA8F4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C00DA8F4()
{
  unint64_t result = qword_1EA196B80;
  if (!qword_1EA196B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196B80);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatOptionsNodeStatementModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE) {
    goto LABEL_17;
  }
  if (a2 + 242 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 242) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 242;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 242;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 242;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 2) & 0xC | (*a1 >> 6)) ^ 0xF;
  if (v6 >= 0xD) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for FormatOptionsNodeStatementModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 242 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 242) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD)
  {
    unsigned int v6 = ((a2 - 14) >> 8) + 1;
    *unint64_t result = a2 - 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C00DAAC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 16 * (((-a2 >> 2) & 3) - 4 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1C00DAAE8(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

unsigned char *sub_1C00DAAF4(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_1C00DAB04(unsigned char *result, char a2)
{
  *unint64_t result = *result & 0xF | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementModifier()
{
  return &type metadata for FormatOptionsNodeStatementModifier;
}

unint64_t sub_1C00DAB28()
{
  unint64_t result = qword_1EA196B88;
  if (!qword_1EA196B88)
  {
    type metadata accessor for FormatDerivedDataError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196B88);
  }
  return result;
}

uint64_t sub_1C00DAB80()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C00DABC0()
{
  sub_1C00DB65C(0, &qword_1EB85F108, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned int v4 = (char *)&v6 - v3;
  sub_1C00DB65C(0, (unint64_t *)&unk_1EB85F370, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB86BD30 = result;
  return result;
}

uint64_t static Commands.openInNewTab.getter()
{
  if (qword_1EB86BD40 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t static ContextMenuItem.openInNewTab(tag:feedConfiguration:)(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  return sub_1C00DADA4(a1, a2);
}

uint64_t sub_1C00DADA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B03C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB86BD40 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C151C8FC();
  sub_1C151C8DC();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAC3E0], v4);
  v12[1] = a1;
  v12[2] = a2;
  char v13 = 2;
  swift_allocObject();
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE12openInNewTab5issueACSgSo7FCIssueC_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB86BD40 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  BOOL v7 = self;
  swift_retain();
  id v8 = a1;
  id v9 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C151C8FC();
  sub_1C151C8DC();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v11[1] = a1;
  v11[2] = 0;
  char v12 = 0;
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE12openInNewTab8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_contentType, v4) == (id)1)
  {
    if (qword_1EA194B50 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C15198DC();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EA2B53A8);
    id v8 = sub_1C15198AC();
    os_log_type_t v9 = sub_1C151F38C();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v10 = 0;
      _os_log_impl(&dword_1BFC31000, v8, v9, "Context menu item 'openInNewTab' not available for web articles", v10, 2u);
      MEMORY[0x1C18C9B00](v10, -1, -1);
    }

    return 0;
  }
  else
  {
    if (qword_1EB86BD40 != -1) {
      swift_once();
    }
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    char v13 = self;
    swift_retain();
    swift_unknownObjectRetain();
    id v14 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    sub_1C151C8FC();
    sub_1C151C8DC();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E4FAC3E0], v2);
    v15[1] = a1;
    void v15[2] = 0;
    char v16 = 1;
    sub_1C151A81C();
    swift_allocObject();
    return sub_1C151A7FC();
  }
}

id sub_1C00DB4F8(id result, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1) {
    return (id)swift_unknownObjectRetain();
  }
  if (!a3) {
    return result;
  }
  return result;
}

void destroy for OpenCommandContext(uint64_t a1)
{
}

void sub_1C00DB52C(id a1, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {
    swift_unknownObjectRelease();
  }
  else if (!a3)
  {
  }
}

uint64_t _s8NewsFeed18OpenCommandContextOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C00DB4F8(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for OpenCommandContext(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C00DB4F8(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C00DB52C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for OpenCommandContext(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C00DB52C(v4, v5, v6);
  return a1;
}

uint64_t sub_1C00DB63C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1C00DB644(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for OpenCommandContext()
{
  return &type metadata for OpenCommandContext;
}

void sub_1C00DB65C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for OpenCommandContext);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t PuzzleButtonsAccessoryView.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PuzzleButtonsAccessoryView.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_identifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PuzzleButtonsAccessoryView.identifier.modify())()
{
  return j__swift_endAccess;
}

double PuzzleButtonsAccessoryView.height.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_height;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t PuzzleButtonsAccessoryView.__allocating_init(identifier:minHeight:buttonsConfig:provider:handler:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v17 = (char *)objc_allocWithZone(v8);
  uint64_t ObjectType = swift_getObjectType();
  return sub_1C00DBDA8(a1, a2, a3, a4, a6, a7, v17, a8, ObjectType, a5);
}

uint64_t PuzzleButtonsAccessoryView.init(identifier:minHeight:buttonsConfig:provider:handler:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1C00DBDA8(a1, a2, a3, a4, a6, a7, v8, a8, ObjectType, a5);
}

void *sub_1C00DB948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 48);
  *(void *)&v13[0] = *(void *)a1;
  *((void *)&v13[0] + 1) = v9;
  long long v11 = *(_OWORD *)(a1 + 32);
  v13[1] = *(_OWORD *)(a1 + 16);
  _OWORD v13[2] = v11;
  uint64_t v14 = v10;
  uint64_t result = sub_1C00DCA3C(a2, a3, v13, a4, a5, a6, a7);
  *a8 = result;
  return result;
}

id PuzzleButtonsAccessoryView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void PuzzleButtonsAccessoryView.init(frame:)()
{
}

id PuzzleButtonsAccessoryView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C00DBB4C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C00DBBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_identifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C00DBC04())()
{
  return j_j__swift_endAccess;
}

double sub_1C00DBC60()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_height;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1C00DBCA8(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  if (a2)
  {
    uint64_t v7 = *a6;
    uint64_t v8 = a6[1];
    v10[0] = a4;
    v10[1] = a5;
    v10[2] = v7;
    v10[3] = v8;
    char v11 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v10);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_1C00DBD28(uint64_t *result, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    uint64_t v6 = *result;
    uint64_t v7 = result[1];
    v8[0] = a4;
    v8[1] = a5;
    v8[2] = v6;
    v8[3] = v7;
    char v9 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v8);
    swift_bridgeObjectRelease();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C00DBDA8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, double a8, uint64_t a9, uint64_t a10)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v90 = a5;
  uint64_t v18 = *a3;
  uint64_t v19 = &a7[OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_identifier];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  *(void *)&a7[OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_spacing] = 0x4020000000000000;
  uint64_t v92 = a1;
  uint64_t v93 = a2;
  uint64_t v94 = a4;
  uint64_t v95 = a10;
  uint64_t v96 = a5;
  uint64_t v97 = a6;
  uint64_t v20 = a7;
  unint64_t v21 = sub_1C0282AD0((void (*)(uint64_t *__return_ptr, void *))sub_1C00DD4A4, (uint64_t)v91, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if (v22)
  {
    uint64_t v99 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F64C8(0, v22 & ~(v22 >> 63), 0);
    if (v22 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v25 = 0;
    uint64_t v23 = v99;
    double v26 = *MEMORY[0x1E4FB2C68];
    double v27 = *(double *)(MEMORY[0x1E4FB2C68] + 8);
    do
    {
      if ((v21 & 0xC000000000000001) != 0) {
        id v28 = (id)MEMORY[0x1C18C7CB0](v25, v21);
      }
      else {
        id v28 = *(id *)(v21 + 8 * v25 + 32);
      }
      double v29 = v28;
      objc_msgSend(v28, sel_systemLayoutSizeFittingSize_, v26, v27, ObjectType);
      uint64_t v31 = v30;

      uint64_t v99 = v23;
      unint64_t v33 = *(void *)(v23 + 16);
      unint64_t v32 = *(void *)(v23 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1C05F64C8(v32 > 1, v33 + 1, 1);
        uint64_t v23 = v99;
      }
      ++v25;
      *(void *)(v23 + 16) = v33 + 1;
      *(void *)(v23 + 8 * v33 + 32) = v31;
    }
    while (v22 != v25);
  }
  *(double *)&uint64_t v34 = COERCE_DOUBLE(sub_1C14C61F0(v23));
  char v36 = v35;
  swift_bridgeObjectRelease();
  double v37 = *(double *)&v34;
  if (v36) {
    double v37 = 0.0;
  }
  if (v37 <= a8) {
    double v37 = a8;
  }
  *(double *)&v20[OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_height] = v37;
  if (v21 >> 62)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
    swift_bridgeObjectRetain();
    sub_1C152041C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C1520B5C();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  }
  swift_bridgeObjectRelease();
  id v38 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  uint64_t v39 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v40 = objc_msgSend(v38, sel_initWithArrangedSubviews_, v39);

  objc_msgSend(v40, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v40, sel_setAxis_, 0);
  objc_msgSend(v40, sel_setDistribution_, 2);
  objc_msgSend(v40, sel_setAlignment_, 3);
  objc_msgSend(v40, sel_setSpacing_, 8.0);
  objc_msgSend(v40, sel_setLayoutMarginsRelativeArrangement_, 1);
  id v41 = v40;

  objc_msgSend(v41, sel_setLayoutMargins_, 8.0, 8.0, 8.0, 8.0);
  v98.receiver = v20;
  v98.super_class = ObjectType;
  id v42 = objc_msgSendSuper2(&v98, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v43 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  id v44 = v42;
  id v45 = objc_msgSend(v43, sel_init);
  objc_msgSend(v45, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BE0]), sel_init);
  objc_msgSend(v46, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v44, sel_addSubview_, v46);
  objc_msgSend(v46, sel_addSubview_, v45);
  objc_msgSend(v45, sel_addSubview_, v41);
  id v89 = self;
  sub_1BFE9DD8C(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1C152B920;
  id v48 = objc_msgSend(v46, sel_topAnchor);
  id v49 = objc_msgSend(v44, (SEL)&selRef_setTailIndent_ + 3);
  id v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(void *)(v47 + 32) = v50;
  id v51 = objc_msgSend(v46, sel_leadingAnchor);
  id v52 = objc_msgSend(v44, (SEL)&selRef_systemImageNamed_withConfiguration_ + 2);
  id v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v52);

  *(void *)(v47 + 40) = v53;
  id v54 = objc_msgSend(v46, sel_trailingAnchor);
  id v55 = objc_msgSend(v44, (SEL)&selRef_lowQualityImage + 4);
  id v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v55);

  *(void *)(v47 + 48) = v56;
  id v57 = objc_msgSend(v46, sel_bottomAnchor);
  id v58 = objc_msgSend(v44, sel_bottomAnchor);
  id v59 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v58);

  *(void *)(v47 + 56) = v59;
  id v60 = objc_msgSend(v45, sel_topAnchor);
  id v61 = objc_msgSend(v46, sel_topAnchor);
  id v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v61);

  *(void *)(v47 + 64) = v62;
  id v63 = objc_msgSend(v45, sel_leadingAnchor);
  id v64 = objc_msgSend(v46, sel_leadingAnchor);
  id v65 = objc_msgSend(v63, sel_constraintEqualToAnchor_, v64);

  *(void *)(v47 + 72) = v65;
  id v66 = objc_msgSend(v45, sel_trailingAnchor);
  id v67 = objc_msgSend(v46, sel_trailingAnchor);
  id v68 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v67);

  *(void *)(v47 + 80) = v68;
  id v69 = objc_msgSend(v45, sel_bottomAnchor);
  id v70 = objc_msgSend(v46, sel_bottomAnchor);
  id v71 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v70);

  *(void *)(v47 + 88) = v71;
  id v72 = objc_msgSend(v45, sel_heightAnchor);
  id v73 = objc_msgSend(v46, sel_heightAnchor);
  id v74 = objc_msgSend(v72, sel_constraintEqualToAnchor_, v73);

  *(void *)(v47 + 96) = v74;
  id v75 = objc_msgSend(v41, sel_topAnchor);
  id v76 = objc_msgSend(v45, sel_topAnchor);
  id v77 = objc_msgSend(v75, sel_constraintEqualToAnchor_, v76);

  *(void *)(v47 + 104) = v77;
  id v78 = objc_msgSend(v41, sel_leadingAnchor);
  id v79 = objc_msgSend(v45, sel_leadingAnchor);
  id v80 = objc_msgSend(v78, sel_constraintEqualToAnchor_, v79);

  *(void *)(v47 + 112) = v80;
  id v81 = objc_msgSend(v41, sel_trailingAnchor);
  id v82 = objc_msgSend(v45, sel_trailingAnchor);
  id v83 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v82);

  *(void *)(v47 + 120) = v83;
  id v84 = objc_msgSend(v41, sel_bottomAnchor);
  id v85 = objc_msgSend(v45, sel_bottomAnchor);
  id v86 = objc_msgSend(v84, sel_constraintEqualToAnchor_, v85);

  *(void *)(v47 + 128) = v86;
  uint64_t v99 = v47;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA1A7F70);
  uint64_t v87 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v89, sel_activateConstraints_, v87);
  sub_1BFC3E5C0(v90);

  swift_unknownObjectRelease();
  return (uint64_t)v44;
}

uint64_t type metadata accessor for PuzzleButtonsAccessoryView()
{
  return self;
}

uint64_t method lookup function for PuzzleButtonsAccessoryView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleButtonsAccessoryView);
}

uint64_t dispatch thunk of PuzzleButtonsAccessoryView.__allocating_init(identifier:minHeight:buttonsConfig:provider:handler:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C00DC810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v44 = a6;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v43 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t ObjectType = swift_getObjectType();
    double v29 = *(uint64_t (**)(_OWORD *, uint64_t *(*)(uint64_t *), void *, uint64_t, uint64_t))(a3 + 16);
    uint64_t v30 = ObjectType;
    long long v14 = *(_OWORD *)(a1 + 144);
    long long v41 = *(_OWORD *)(a1 + 128);
    v42[0] = v14;
    *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)(a1 + 153);
    long long v15 = *(_OWORD *)(a1 + 80);
    long long v37 = *(_OWORD *)(a1 + 64);
    long long v38 = v15;
    long long v16 = *(_OWORD *)(a1 + 112);
    long long v39 = *(_OWORD *)(a1 + 96);
    long long v40 = v16;
    long long v17 = *(_OWORD *)(a1 + 48);
    uint64_t v31 = a1;
    uint64_t v18 = v9 - 1;
    uint64_t v19 = 176;
    long long v35 = *(_OWORD *)(a1 + 32);
    long long v36 = v17;
    while (1)
    {
      v33[6] = v41;
      v34[0] = v42[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v42 + 9);
      v33[2] = v37;
      v33[3] = v38;
      long long v33[4] = v39;
      v33[5] = v40;
      v33[0] = v35;
      v33[1] = v36;
      uint64_t v20 = (void *)swift_allocObject();
      _OWORD v20[2] = a4;
      v20[3] = a5;
      v20[4] = v44;
      v20[5] = a7;
      swift_bridgeObjectRetain();
      sub_1C00DD354((uint64_t)&v35);
      sub_1BFC648F8(a4);
      uint64_t v21 = a3;
      uint64_t v22 = v29(v33, sub_1C00DD348, v20, v30, a3);
      swift_release();
      uint64_t v23 = sub_1C00DD3FC((uint64_t)&v35);
      if (v22)
      {
        MEMORY[0x1C18C66D0](v23);
        if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      if (!v18) {
        break;
      }
      long long v24 = *(_OWORD *)(v31 + v19 + 112);
      long long v41 = *(_OWORD *)(v31 + v19 + 96);
      v42[0] = v24;
      *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)(v31 + v19 + 121);
      long long v25 = *(_OWORD *)(v31 + v19 + 48);
      long long v37 = *(_OWORD *)(v31 + v19 + 32);
      long long v38 = v25;
      long long v26 = *(_OWORD *)(v31 + v19 + 80);
      long long v39 = *(_OWORD *)(v31 + v19 + 64);
      long long v40 = v26;
      long long v28 = *(_OWORD *)(v31 + v19);
      long long v27 = *(_OWORD *)(v31 + v19 + 16);
      v19 += 144;
      --v18;
      long long v35 = v28;
      long long v36 = v27;
      a3 = v21;
    }
    swift_bridgeObjectRelease();
    return v43;
  }
  return result;
}

void *sub_1C00DCA3C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v53 = a6;
  uint64_t v54 = a7;
  uint64_t v46 = a5;
  uint64_t v47 = a4;
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  uint64_t v49 = sub_1C1515A2C();
  uint64_t v8 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1C1515A3C();
  uint64_t v11 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  char v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C1515A5C();
  MEMORY[0x1F4188790](v14 - 8);
  sub_1BFF2E3AC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v15 - 8);
  long long v17 = (char *)&v45 - v16;
  sub_1BFF2E3AC(0, (unint64_t *)&qword_1EA1A17D0, MEMORY[0x1E4F273A8]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v21 = sub_1C151FCDC();
  uint64_t v56 = *(void *)(v21 - 8);
  uint64_t v57 = v21;
  MEMORY[0x1F4188790](v21);
  id v50 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  long long v24 = a3[1];
  long long v58 = *a3;
  long long v59 = v24;
  long long v60 = a3[2];
  uint64_t v61 = *((void *)a3 + 6);
  id v55 = (char *)&v45 - v25;
  sub_1C151FC7C();
  uint64_t v26 = sub_1C1515FDC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v17, 1, 1, v26);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4F27310], v48);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F272E8], v49);
  swift_bridgeObjectRetain();
  sub_1C1515A4C();
  sub_1C1515B1C();
  uint64_t v27 = sub_1C1515B3C();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v20, 0, 1, v27);
  long long v28 = v55;
  sub_1C151FC3C();
  uint64_t v30 = v53;
  uint64_t v29 = v54;
  uint64_t v31 = v51;
  uint64_t v32 = v57;
  if (*((void *)&v60 + 1))
  {
    swift_bridgeObjectRetain();
    unint64_t v33 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(self, sel_systemImageNamed_, v33);

    sub_1C151FC9C();
  }
  id v35 = objc_msgSend(self, sel_labelColor);
  sub_1C151FC5C();
  sub_1BFC39268(0, &qword_1EA196BA8);
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v50, v28, v32);
  sub_1BFC39268(0, (unint64_t *)&qword_1EA196BB0);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v30;
  *(void *)(v36 + 24) = v29;
  uint64_t v37 = v52;
  *(void *)(v36 + 32) = v31;
  *(void *)(v36 + 40) = v37;
  long long v38 = v59;
  *(_OWORD *)(v36 + 48) = v58;
  *(_OWORD *)(v36 + 64) = v38;
  long long v39 = v60;
  *(void *)(v36 + 96) = v61;
  *(_OWORD *)(v36 + 80) = v39;
  swift_bridgeObjectRetain();
  sub_1BFC648F8(v30);
  sub_1C00DD1CC((uint64_t)&v58);
  sub_1C151FBBC();
  long long v40 = (void *)sub_1C151FCEC();
  sub_1C00DD220((uint64_t)&v61, (uint64_t)v62);
  sub_1C00DD220((uint64_t)v62, (uint64_t)&v63);
  uint64_t v41 = v63;
  if (v63)
  {
    swift_bridgeObjectRetain();
    sub_1BFC648F8(v30);
    uint64_t v42 = v47;
    swift_unknownObjectRetain();
    sub_1C00DC810(v41, v42, v46, v30, v29, v31, v37);
    swift_bridgeObjectRelease();
    sub_1BFC3E5C0(v30);
    swift_unknownObjectRelease();
    sub_1BFC39268(0, &qword_1EA1A2120);
    uint64_t v43 = (void *)sub_1C151F8AC();
    objc_msgSend(v40, sel_setShowsMenuAsPrimaryAction_, 1);
    objc_msgSend(v40, sel_setMenu_, v43);
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
  return v40;
}

uint64_t sub_1C00DD154()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C00DD1BC(uint64_t a1)
{
  return sub_1C00DBCA8(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t *)(v1 + 48));
}

uint64_t sub_1C00DD1CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C00DD220(uint64_t a1, uint64_t a2)
{
  sub_1C00DD284();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C00DD284()
{
  if (!qword_1EA196BB8)
  {
    sub_1BFE9DD8C(255, &qword_1EA196BC0, (uint64_t)&type metadata for PuzzleMenuConfig, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA196BB8);
    }
  }
}

uint64_t sub_1C00DD300()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t *sub_1C00DD348(uint64_t *a1)
{
  return sub_1C00DBD28(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C00DD354(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C00DD3FC(uint64_t a1)
{
  return a1;
}

void *sub_1C00DD4A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 48);
  *(void *)&v14[0] = *(void *)a1;
  *((void *)&v14[0] + 1) = v10;
  long long v12 = *(_OWORD *)(a1 + 32);
  v14[1] = *(_OWORD *)(a1 + 16);
  v14[2] = v12;
  uint64_t v15 = v11;
  uint64_t result = sub_1C00DCA3C(v5, v4, v14, v6, v7, v8, v9);
  *a2 = result;
  return result;
}

uint64_t sub_1C00DD510(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    char v3 = (uint64_t *)(a1 + 32);
    uint64_t v4 = (uint64_t *)(a2 + 32);
    do
    {
      uint64_t v6 = *v3++;
      uint64_t v5 = v6;
      uint64_t v8 = *v4++;
      uint64_t v7 = v8;
      if (v5 < 0)
      {
        if ((v7 & 0x8000000000000000) == 0) {
          return 0;
        }
        BOOL v17 = *(void *)((v5 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v7 & 0x7FFFFFFFFFFFFFFFLL) + 0x10)
           && *(void *)((v5 & 0x7FFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((v7 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
        if (!v17 && (sub_1C1520A9C() & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v7 < 0) {
          return 0;
        }
        uint64_t v9 = *(void *)(v5 + 16);
        uint64_t v10 = *(void *)(v7 + 16);
        BOOL v11 = *(void *)(v9 + 16) == *(void *)(v10 + 16) && *(void *)(v9 + 24) == *(void *)(v10 + 24);
        if (!v11 && (sub_1C1520A9C() & 1) == 0) {
          return 0;
        }
        uint64_t v12 = *(void *)(v9 + 32);
        uint64_t v13 = *(void *)(v10 + 32);
        swift_retain_n();
        swift_retain();
        if ((sub_1C02B18E8(v12, v13) & 1) == 0 || *(unsigned __int8 *)(v9 + 40) != *(unsigned __int8 *)(v10 + 40))
        {
          swift_release();
          swift_release_n();
          return 0;
        }
        swift_beginAccess();
        uint64_t v14 = *(void *)(v5 + 24);
        swift_beginAccess();
        uint64_t v15 = *(void *)(v7 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v16 = sub_1C00DD510(v14, v15);
        swift_release();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          return 0;
        }
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00DD6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  char v3 = (unsigned __int8 *)(a2 + 48);
  for (uint64_t i = (unsigned __int8 *)(a1 + 48); ; i += 24)
  {
    uint64_t v7 = *((void *)i - 2);
    unint64_t v8 = *((void *)i - 1);
    unsigned int v9 = *i;
    uint64_t v10 = *((void *)v3 - 2);
    unint64_t v11 = *((void *)v3 - 1);
    unsigned int v12 = *v3;
    if (!(v9 >> 6))
    {
      if (v12 >= 0x40) {
        goto LABEL_125;
      }
      if (v7 == v10 && v8 == v11)
      {
        sub_1C00F5ACC(*((void *)i - 2), *((void *)i - 1), *i);
        sub_1C00F5ACC(v7, v8, v12);
        sub_1C00F5AEC(v7, v8, v9);
        sub_1C00F5AEC(v7, v8, v12);
        if ((v9 ^ v12)) {
          return 0;
        }
      }
      else
      {
        char v15 = sub_1C1520A9C();
        sub_1C00F5ACC(v7, v8, v9);
        sub_1C00F5ACC(v10, v11, v12);
        sub_1C00F5AEC(v7, v8, v9);
        sub_1C00F5AEC(v10, v11, v12);
        uint64_t result = 0;
        if (v15 & 1) == 0 || ((v9 ^ v12)) {
          return result;
        }
      }
      goto LABEL_7;
    }
    if (v9 >> 6 != 1) {
      break;
    }
    if ((v12 & 0xC0) != 0x40) {
      goto LABEL_125;
    }
    switch(v8)
    {
      case 0uLL:
        if (v11) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 0, *v3);
        sub_1C00F5ACC(v10, 0, v12);
        sub_1C00F5ACC(v7, 0, v9);
        sub_1C00F5ACC(v10, 0, v12);
        sub_1BFF8F648(v7, 0);
        sub_1BFF8F648(v10, 0);
        sub_1C00F5AEC(v7, 0, v9);
        sub_1C00F5AEC(v10, 0, v12);
        sub_1C00F5AEC(v10, 0, v12);
        sub_1C00F5AEC(v7, 0, v9);
        sub_1C00F5AEC(v10, 0, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 0;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 1uLL:
        if (v11 != 1) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 1uLL, *v3);
        sub_1C00F5ACC(v10, 1uLL, v12);
        sub_1C00F5ACC(v7, 1uLL, v9);
        sub_1C00F5ACC(v10, 1uLL, v12);
        sub_1BFF8F648(v7, 1uLL);
        sub_1BFF8F648(v10, 1uLL);
        sub_1C00F5AEC(v7, 1uLL, v9);
        sub_1C00F5AEC(v10, 1uLL, v12);
        sub_1C00F5AEC(v10, 1uLL, v12);
        sub_1C00F5AEC(v7, 1uLL, v9);
        sub_1C00F5AEC(v10, 1uLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 1;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 2uLL:
        if (v11 != 2) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 2uLL, *v3);
        sub_1C00F5ACC(v10, 2uLL, v12);
        sub_1C00F5ACC(v7, 2uLL, v9);
        sub_1C00F5ACC(v10, 2uLL, v12);
        sub_1BFF8F648(v7, 2uLL);
        sub_1BFF8F648(v10, 2uLL);
        sub_1C00F5AEC(v7, 2uLL, v9);
        sub_1C00F5AEC(v10, 2uLL, v12);
        sub_1C00F5AEC(v10, 2uLL, v12);
        sub_1C00F5AEC(v7, 2uLL, v9);
        sub_1C00F5AEC(v10, 2uLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 2;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 3uLL:
        if (v11 != 3) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 3uLL, *v3);
        sub_1C00F5ACC(v10, 3uLL, v12);
        sub_1C00F5ACC(v7, 3uLL, v9);
        sub_1C00F5ACC(v10, 3uLL, v12);
        sub_1BFF8F648(v7, 3uLL);
        sub_1BFF8F648(v10, 3uLL);
        sub_1C00F5AEC(v7, 3uLL, v9);
        sub_1C00F5AEC(v10, 3uLL, v12);
        sub_1C00F5AEC(v10, 3uLL, v12);
        sub_1C00F5AEC(v7, 3uLL, v9);
        sub_1C00F5AEC(v10, 3uLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 3;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 4uLL:
        if (v11 != 4) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 4uLL, *v3);
        sub_1C00F5ACC(v10, 4uLL, v12);
        sub_1C00F5ACC(v7, 4uLL, v9);
        sub_1C00F5ACC(v10, 4uLL, v12);
        sub_1BFF8F648(v7, 4uLL);
        sub_1BFF8F648(v10, 4uLL);
        sub_1C00F5AEC(v7, 4uLL, v9);
        sub_1C00F5AEC(v10, 4uLL, v12);
        sub_1C00F5AEC(v10, 4uLL, v12);
        sub_1C00F5AEC(v7, 4uLL, v9);
        sub_1C00F5AEC(v10, 4uLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 4;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 5uLL:
        if (v11 != 5) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 5uLL, *v3);
        sub_1C00F5ACC(v10, 5uLL, v12);
        sub_1C00F5ACC(v7, 5uLL, v9);
        sub_1C00F5ACC(v10, 5uLL, v12);
        sub_1BFF8F648(v7, 5uLL);
        sub_1BFF8F648(v10, 5uLL);
        sub_1C00F5AEC(v7, 5uLL, v9);
        sub_1C00F5AEC(v10, 5uLL, v12);
        sub_1C00F5AEC(v10, 5uLL, v12);
        sub_1C00F5AEC(v7, 5uLL, v9);
        sub_1C00F5AEC(v10, 5uLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 5;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 6uLL:
        if (v11 != 6) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 6uLL, *v3);
        sub_1C00F5ACC(v10, 6uLL, v12);
        sub_1C00F5ACC(v7, 6uLL, v9);
        sub_1C00F5ACC(v10, 6uLL, v12);
        sub_1BFF8F648(v7, 6uLL);
        sub_1BFF8F648(v10, 6uLL);
        sub_1C00F5AEC(v7, 6uLL, v9);
        sub_1C00F5AEC(v10, 6uLL, v12);
        sub_1C00F5AEC(v10, 6uLL, v12);
        sub_1C00F5AEC(v7, 6uLL, v9);
        sub_1C00F5AEC(v10, 6uLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 6;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 7uLL:
        if (v11 != 7) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 7uLL, *v3);
        sub_1C00F5ACC(v10, 7uLL, v12);
        sub_1C00F5ACC(v7, 7uLL, v9);
        sub_1C00F5ACC(v10, 7uLL, v12);
        sub_1BFF8F648(v7, 7uLL);
        sub_1BFF8F648(v10, 7uLL);
        sub_1C00F5AEC(v7, 7uLL, v9);
        sub_1C00F5AEC(v10, 7uLL, v12);
        sub_1C00F5AEC(v10, 7uLL, v12);
        sub_1C00F5AEC(v7, 7uLL, v9);
        sub_1C00F5AEC(v10, 7uLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 7;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 8uLL:
        if (v11 != 8) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 8uLL, *v3);
        sub_1C00F5ACC(v10, 8uLL, v12);
        sub_1C00F5ACC(v7, 8uLL, v9);
        sub_1C00F5ACC(v10, 8uLL, v12);
        sub_1BFF8F648(v7, 8uLL);
        sub_1BFF8F648(v10, 8uLL);
        sub_1C00F5AEC(v7, 8uLL, v9);
        sub_1C00F5AEC(v10, 8uLL, v12);
        sub_1C00F5AEC(v10, 8uLL, v12);
        sub_1C00F5AEC(v7, 8uLL, v9);
        sub_1C00F5AEC(v10, 8uLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 8;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 9uLL:
        if (v11 != 9) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 9uLL, *v3);
        sub_1C00F5ACC(v10, 9uLL, v12);
        sub_1C00F5ACC(v7, 9uLL, v9);
        sub_1C00F5ACC(v10, 9uLL, v12);
        sub_1BFF8F648(v7, 9uLL);
        sub_1BFF8F648(v10, 9uLL);
        sub_1C00F5AEC(v7, 9uLL, v9);
        sub_1C00F5AEC(v10, 9uLL, v12);
        sub_1C00F5AEC(v10, 9uLL, v12);
        sub_1C00F5AEC(v7, 9uLL, v9);
        sub_1C00F5AEC(v10, 9uLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 9;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 0xAuLL:
        if (v11 != 10) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 0xAuLL, *v3);
        sub_1C00F5ACC(v10, 0xAuLL, v12);
        sub_1C00F5ACC(v7, 0xAuLL, v9);
        sub_1C00F5ACC(v10, 0xAuLL, v12);
        sub_1BFF8F648(v7, 0xAuLL);
        sub_1BFF8F648(v10, 0xAuLL);
        sub_1C00F5AEC(v7, 0xAuLL, v9);
        sub_1C00F5AEC(v10, 0xAuLL, v12);
        sub_1C00F5AEC(v10, 0xAuLL, v12);
        sub_1C00F5AEC(v7, 0xAuLL, v9);
        sub_1C00F5AEC(v10, 0xAuLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 10;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 0xBuLL:
        if (v11 != 11) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 0xBuLL, *v3);
        sub_1C00F5ACC(v10, 0xBuLL, v12);
        sub_1C00F5ACC(v7, 0xBuLL, v9);
        sub_1C00F5ACC(v10, 0xBuLL, v12);
        sub_1BFF8F648(v7, 0xBuLL);
        sub_1BFF8F648(v10, 0xBuLL);
        sub_1C00F5AEC(v7, 0xBuLL, v9);
        sub_1C00F5AEC(v10, 0xBuLL, v12);
        sub_1C00F5AEC(v10, 0xBuLL, v12);
        sub_1C00F5AEC(v7, 0xBuLL, v9);
        sub_1C00F5AEC(v10, 0xBuLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 11;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 0xCuLL:
        if (v11 != 12) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 0xCuLL, *v3);
        sub_1C00F5ACC(v10, 0xCuLL, v12);
        sub_1C00F5ACC(v7, 0xCuLL, v9);
        sub_1C00F5ACC(v10, 0xCuLL, v12);
        sub_1BFF8F648(v7, 0xCuLL);
        sub_1BFF8F648(v10, 0xCuLL);
        sub_1C00F5AEC(v7, 0xCuLL, v9);
        sub_1C00F5AEC(v10, 0xCuLL, v12);
        sub_1C00F5AEC(v10, 0xCuLL, v12);
        sub_1C00F5AEC(v7, 0xCuLL, v9);
        sub_1C00F5AEC(v10, 0xCuLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 12;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 0xDuLL:
        if (v11 != 13) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 0xDuLL, *v3);
        sub_1C00F5ACC(v10, 0xDuLL, v12);
        sub_1C00F5ACC(v7, 0xDuLL, v9);
        sub_1C00F5ACC(v10, 0xDuLL, v12);
        sub_1BFF8F648(v7, 0xDuLL);
        sub_1BFF8F648(v10, 0xDuLL);
        sub_1C00F5AEC(v7, 0xDuLL, v9);
        sub_1C00F5AEC(v10, 0xDuLL, v12);
        sub_1C00F5AEC(v10, 0xDuLL, v12);
        sub_1C00F5AEC(v7, 0xDuLL, v9);
        sub_1C00F5AEC(v10, 0xDuLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 13;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      case 0xEuLL:
        if (v11 != 14) {
          goto LABEL_121;
        }
        sub_1C00F5ACC(*((void *)v3 - 2), 0xEuLL, *v3);
        sub_1C00F5ACC(v10, 0xEuLL, v12);
        sub_1C00F5ACC(v7, 0xEuLL, v9);
        sub_1C00F5ACC(v10, 0xEuLL, v12);
        sub_1BFF8F648(v7, 0xEuLL);
        sub_1BFF8F648(v10, 0xEuLL);
        sub_1C00F5AEC(v7, 0xEuLL, v9);
        sub_1C00F5AEC(v10, 0xEuLL, v12);
        sub_1C00F5AEC(v10, 0xEuLL, v12);
        sub_1C00F5AEC(v7, 0xEuLL, v9);
        sub_1C00F5AEC(v10, 0xEuLL, v12);
        uint64_t v13 = v7;
        unint64_t v5 = 14;
        unsigned __int8 v6 = v9;
        goto LABEL_6;
      default:
        if (v11 < 0xF)
        {
          sub_1C00F5ACC(*((void *)i - 2), *((void *)i - 1), *i);
LABEL_121:
          sub_1C00F5ACC(v10, v11, v12);
          sub_1C00F5ACC(v10, v11, v12);
          sub_1C00F5ACC(v7, v8, v9);
          sub_1C00F5ACC(v7, v8, v9);
          sub_1C00F5ACC(v10, v11, v12);
          sub_1C00F5ACC(v7, v8, v9);
          sub_1C00F5ACC(v10, v11, v12);
          sub_1BFF8F648(v7, v8);
          sub_1BFF8F648(v10, v11);
          sub_1C00F5AEC(v7, v8, v9);
          sub_1C00F5AEC(v10, v11, v12);
          sub_1C00F5AEC(v10, v11, v12);
          sub_1C00F5AEC(v7, v8, v9);
          sub_1C00F5AEC(v10, v11, v12);
          uint64_t v20 = v7;
          unint64_t v21 = v8;
          unsigned __int8 v22 = v9;
          goto LABEL_126;
        }
        if (v7 == v10 && v8 == v11) {
          char v19 = 1;
        }
        else {
          char v19 = sub_1C1520A9C();
        }
        sub_1C00F5ACC(v10, v11, v12);
        sub_1C00F5ACC(v7, v8, v9);
        sub_1C00F5ACC(v10, v11, v12);
        sub_1C00F5ACC(v7, v8, v9);
        sub_1C00F5ACC(v7, v8, v9);
        sub_1C00F5ACC(v10, v11, v12);
        sub_1C00F5ACC(v7, v8, v9);
        sub_1C00F5ACC(v10, v11, v12);
        sub_1BFF8F648(v7, v8);
        sub_1BFF8F648(v10, v11);
        sub_1C00F5AEC(v7, v8, v9);
        sub_1C00F5AEC(v10, v11, v12);
        sub_1C00F5AEC(v10, v11, v12);
        sub_1C00F5AEC(v7, v8, v9);
        sub_1C00F5AEC(v10, v11, v12);
        sub_1C00F5AEC(v7, v8, v9);
        if ((v19 & 1) == 0) {
          return 0;
        }
        break;
    }
LABEL_7:
    v3 += 24;
    if (!--v2) {
      return 1;
    }
  }
  if (!(v8 | v7) && v9 == 128)
  {
    BOOL v17 = (v12 & 0xC0) == 0x80 && (v11 | v10) == 0;
    if (!v17 || v12 != 128) {
      goto LABEL_125;
    }
    sub_1C00F5AEC(0, 0, 0x80u);
    uint64_t v13 = 0;
    goto LABEL_5;
  }
  BOOL v18 = v7 == 1 && v8 == 0;
  if (v18 && v9 == 128)
  {
    if ((v12 & 0xC0) != 0x80)
    {
      unint64_t v8 = 0;
      uint64_t v7 = 1;
      goto LABEL_125;
    }
    unint64_t v8 = 0;
    uint64_t v7 = 1;
    if (v10 != 1 || v11 || v12 != 128) {
      goto LABEL_125;
    }
    sub_1C00F5AEC(1, 0, 0x80u);
    uint64_t v13 = 1;
    goto LABEL_5;
  }
  if (v7 == 2 && !v8 && v9 == 128)
  {
    if ((v12 & 0xC0) != 0x80)
    {
      unint64_t v8 = 0;
      uint64_t v7 = 2;
      goto LABEL_125;
    }
    unint64_t v8 = 0;
    uint64_t v7 = 2;
    if (v10 != 2 || v11 || v12 != 128) {
      goto LABEL_125;
    }
    sub_1C00F5AEC(2, 0, 0x80u);
    uint64_t v13 = 2;
    goto LABEL_5;
  }
  if (v7 == 3 && !v8 && v9 == 128)
  {
    if ((v12 & 0xC0) != 0x80)
    {
      unint64_t v8 = 0;
      uint64_t v7 = 3;
      goto LABEL_125;
    }
    unint64_t v8 = 0;
    uint64_t v7 = 3;
    if (v10 != 3 || v11 || v12 != 128) {
      goto LABEL_125;
    }
    sub_1C00F5AEC(3, 0, 0x80u);
    uint64_t v13 = 3;
    goto LABEL_5;
  }
  if (v7 == 4 && !v8 && v9 == 128)
  {
    if ((v12 & 0xC0) != 0x80)
    {
      unint64_t v8 = 0;
      uint64_t v7 = 4;
      goto LABEL_125;
    }
    unint64_t v8 = 0;
    uint64_t v7 = 4;
    if (v10 != 4 || v11 || v12 != 128) {
      goto LABEL_125;
    }
    sub_1C00F5AEC(4, 0, 0x80u);
    uint64_t v13 = 4;
    goto LABEL_5;
  }
  if (v7 == 5 && !v8 && v9 == 128)
  {
    if ((v12 & 0xC0) != 0x80)
    {
      unint64_t v8 = 0;
      uint64_t v7 = 5;
      goto LABEL_125;
    }
    unint64_t v8 = 0;
    uint64_t v7 = 5;
    if (v10 != 5 || v11 || v12 != 128) {
      goto LABEL_125;
    }
    sub_1C00F5AEC(5, 0, 0x80u);
    uint64_t v13 = 5;
    goto LABEL_5;
  }
  if ((v12 & 0xC0) == 0x80)
  {
    unint64_t v8 = 0;
    uint64_t v7 = 6;
    if (v10 != 6 || v11 || v12 != 128) {
      goto LABEL_125;
    }
    sub_1C00F5AEC(6, 0, 0x80u);
    uint64_t v13 = 6;
LABEL_5:
    unint64_t v5 = 0;
    unsigned __int8 v6 = 0x80;
LABEL_6:
    sub_1C00F5AEC(v13, v5, v6);
    goto LABEL_7;
  }
  unint64_t v8 = 0;
  uint64_t v7 = 6;
LABEL_125:
  sub_1C00F5ACC(v7, v8, *i);
  sub_1C00F5ACC(v10, v11, v12);
  sub_1C00F5AEC(v7, v8, v9);
  uint64_t v20 = v10;
  unint64_t v21 = v11;
  unsigned __int8 v22 = v12;
LABEL_126:
  sub_1C00F5AEC(v20, v21, v22);
  return 0;
}

uint64_t sub_1C00DE8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v14 = 1;
    }
    else
    {
      uint64_t v3 = v2 - 1;
      uint64_t v4 = (long long *)(a1 + 48);
      unint64_t v5 = (int *)(a2 + 72);
      do
      {
        uint64_t v6 = *((void *)v4 + 2);
        int v7 = *((_DWORD *)v4 + 6);
        __int16 v8 = *((_WORD *)v4 + 14);
        long long v9 = *v4;
        v22[0] = *(v4 - 1);
        v22[1] = v9;
        uint64_t v23 = v6;
        __int16 v25 = v8;
        int v24 = v7;
        uint64_t v10 = *((void *)v5 - 1);
        int v11 = *v5;
        __int16 v12 = *((_WORD *)v5 + 2);
        long long v13 = *(_OWORD *)(v5 - 6);
        v18[0] = *(_OWORD *)(v5 - 10);
        v18[1] = v13;
        uint64_t v19 = v10;
        __int16 v21 = v12;
        int v20 = v11;
        char v14 = sub_1C12B60CC((uint64_t)v22, (uint64_t)v18);
        BOOL v16 = v3-- != 0;
        if ((v14 & 1) == 0) {
          break;
        }
        v4 += 3;
        v5 += 12;
      }
      while (v16);
    }
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1C00DE998(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unsigned __int8 *)(a1 + 40);
  for (uint64_t i = (unsigned __int8 *)(a2 + 40); ; i += 16)
  {
    uint64_t v5 = *((void *)v3 - 1);
    int v6 = *v3;
    uint64_t v7 = *((void *)i - 1);
    int v8 = *i;
    if (v6 != 1) {
      break;
    }
    if ((v8 & 1) == 0)
    {
      swift_retain_n();
      goto LABEL_17;
    }
    if ((0x29282F2A2D2BuLL >> (8 * v5)) != (0x29282F2A2D2BuLL >> (8 * v7))) {
      return 0;
    }
LABEL_5:
    v3 += 16;
    if (!--v2) {
      return 1;
    }
  }
  uint64_t v12 = *((void *)v3 - 1);
  char v13 = 0;
  if (!v8)
  {
    uint64_t v11 = v7;
    sub_1C002579C(v5, 0);
    sub_1C002579C(v5, 0);
    sub_1C002579C(v5, 0);
    sub_1C002579C(v7, 0);
    char v9 = static FormatFloat.== infix(_:_:)(&v12, (unint64_t *)&v11);
    swift_release();
    sub_1BFF49984(v5, 0);
    sub_1BFF49984(v7, 0);
    sub_1BFF49984(v5, 0);
    if ((v9 & 1) == 0) {
      return 0;
    }
    goto LABEL_5;
  }
  sub_1C002579C(v5, 0);
  sub_1C002579C(v5, 0);
LABEL_17:
  sub_1BFF49984(v5, v6);
  sub_1BFF49984(v7, v6 ^ 1);
  sub_1BFF49984(v7, v6 ^ 1);
  sub_1BFF49984(v5, v6);
  return 0;
}

uint64_t sub_1C00DEB48(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(char *, char *))static FormatContentSubgroup.== infix(_:_:), (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
}

uint64_t sub_1C00DEB9C(uint64_t a1, uint64_t a2)
{
  return sub_1C00F0630(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatContentSubgroupFilter.== infix(_:_:));
}

uint64_t sub_1C00DEBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v7 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v9 = *(v3 - 1);
      uint64_t v8 = *v3;
      if (*(v4 - 3) == *(v3 - 3) && *(v4 - 2) == *(v3 - 2))
      {
        if (v7 != v9 || v6 != v8) {
          return 0;
        }
      }
      else
      {
        char v11 = sub_1C1520A9C();
        uint64_t result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
        if (v7 != v9 || v6 != v8) {
          return result;
        }
      }
      v3 += 4;
      v4 += 4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00DEC78(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, (uint64_t (*)(void))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity, (uint64_t (*)(void))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity, (uint64_t (*)(char *, char *))static LiveActivityWebEmbedDatastore.LiveActivity.== infix(_:_:), (uint64_t (*)(void))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity);
}

uint64_t sub_1C00DECCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *), uint64_t (*a6)(void))
{
  uint64_t v11 = a3(0) - 8;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  BOOL v17 = (char *)&v27 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    if (!v18 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v28 = a2;
      uint64_t v19 = a5;
      unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v22 = v18 - 1;
      do
      {
        sub_1C00F70EC(a1 + v20, (uint64_t)v17, a4);
        sub_1C00F70EC(v28 + v20, (uint64_t)v13, a4);
        char v23 = v19(v17, v13);
        sub_1C00F7154((uint64_t)v13, a6);
        sub_1C00F7154((uint64_t)v17, a6);
        BOOL v25 = v22-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v20 += v21;
      }
      while (v25);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1C00DEE68(uint64_t a1, uint64_t a2)
{
  return sub_1BFF6B430(a1, a2, MEMORY[0x1E4F81D40], &qword_1EA196BD0, MEMORY[0x1E4F81D40], MEMORY[0x1E4F81D58]);
}

uint64_t sub_1C00DEEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v17 = a1;
      while (1)
      {
        uint64_t v5 = *(void *)(a1 + v4 + 48);
        uint64_t v6 = *(void *)(a1 + v4 + 56);
        uint64_t v7 = *(void *)(a1 + v4 + 64);
        uint64_t v8 = *(void *)(a1 + v4 + 72);
        uint64_t v9 = *(void *)(v3 + v4 + 48);
        uint64_t v10 = *(void *)(v3 + v4 + 56);
        uint64_t v11 = *(void *)(v3 + v4 + 64);
        uint64_t v12 = *(void *)(v3 + v4 + 72);
        BOOL v13 = *(void *)(a1 + v4 + 32) == *(void *)(v3 + v4 + 32)
           && *(void *)(a1 + v4 + 40) == *(void *)(v3 + v4 + 40);
        if (!v13 && (sub_1C1520A9C() & 1) == 0) {
          break;
        }
        BOOL v14 = v5 == v9 && v6 == v10;
        if (!v14 && (sub_1C1520A9C() & 1) == 0) {
          break;
        }
        BOOL v15 = v7 == v11 && v8 == v12;
        if (!v15 && (sub_1C1520A9C() & 1) == 0) {
          break;
        }
        v4 += 48;
        --v2;
        a1 = v17;
        uint64_t v3 = a2;
        if (!v2) {
          return 1;
        }
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1C00DEFC4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[4];
  swift_retain();
  swift_retain();
  LOBYTE(v5) = sub_1C0387D88(v5, v6);
  swift_release();
  swift_release();
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v7 = a1 + 5;
  uint64_t v8 = a2 + 5;
  uint64_t v9 = v2 - 1;
  do
  {
    BOOL v10 = v9 == 0;
    if (!v9) {
      break;
    }
    uint64_t v12 = *v7++;
    uint64_t v11 = v12;
    uint64_t v13 = *v8++;
    swift_retain();
    swift_retain();
    LOBYTE(v11) = sub_1C0387D88(v11, v13);
    swift_release();
    swift_release();
    --v9;
  }
  while ((v11 & 1) != 0);
  return v10;
}

uint64_t sub_1C00DF0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v4 = a2 + 32;
    uint64_t v22 = a2 + 32;
    uint64_t v23 = a1 + 32;
    while (1)
    {
      uint64_t v5 = (void *)(v23 + 48 * v3);
      uint64_t v6 = v5[3];
      uint64_t v25 = v5[2];
      uint64_t v26 = v5[4];
      uint64_t v24 = v5[5];
      uint64_t v7 = (void *)(v4 + 48 * v3);
      uint64_t v8 = v7[2];
      uint64_t v9 = v7[3];
      uint64_t v10 = v7[4];
      uint64_t v11 = v7[5];
      if (*v5 != *v7 || v5[1] != v7[1])
      {
        uint64_t v4 = v22;
        if ((sub_1C1520A9C() & 1) == 0) {
          break;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v13 = v10;
      swift_bridgeObjectRetain();
      uint64_t v14 = v11;
      swift_bridgeObjectRetain();
      char v15 = sub_1C00E57C0(v25, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0 || (uint64_t v16 = *(void *)(v6 + 16), v16 != *(void *)(v9 + 16)))
      {
LABEL_27:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      if (v16) {
        BOOL v17 = v6 == v9;
      }
      else {
        BOOL v17 = 1;
      }
      if (!v17)
      {
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRetain();
        unint64_t v19 = 0;
        while (1)
        {
          unint64_t v28 = *(void *)(v6 + 8 * v19 + 32);
          if (v19 >= *(void *)(v9 + 16)) {
            break;
          }
          unint64_t v27 = *(void *)(v9 + 8 * v19 + 32);
          uint64_t result = static FormatSlotTransform.== infix(_:_:)(&v28, &v27);
          if ((result & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            return 0;
          }
          if (v16 == ++v19)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_21;
          }
        }
        __break(1u);
        return result;
      }
LABEL_21:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v20 = sub_1C00E52B8(v26, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        goto LABEL_27;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v21 = sub_1BFEFAE14(v24, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if ((v21 & 1) == 0) {
        return 0;
      }
      ++v3;
      uint64_t result = 1;
      if (v3 == v2) {
        return result;
      }
    }
  }
  return 0;
}

unint64_t sub_1C00DF460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentOverlaySlot();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (unint64_t *)((char *)&v36 - v10);
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v12 || a1 == a2) {
    return 1;
  }
  uint64_t v13 = 0;
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v39 = a2 + v14;
  uint64_t v40 = a1 + v14;
  uint64_t v15 = *(void *)(v9 + 72);
  uint64_t v37 = v8;
  uint64_t v38 = v15;
  uint64_t v41 = (unint64_t *)((char *)&v36 - v10);
  uint64_t v42 = v6;
  uint64_t v36 = v12;
  while (1)
  {
    uint64_t v17 = v38 * v13;
    sub_1C00F70EC(v40 + v38 * v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySlot);
    sub_1C00F70EC(v39 + v17, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySlot);
    unint64_t result = *v11;
    BOOL v18 = *v11 == *v6 && v11[1] == v6[1];
    if (!v18 && (unint64_t result = sub_1C1520A9C(), (result & 1) == 0)
      || (uint64_t v19 = *(int *)(v37 + 20),
          uint64_t v20 = *(unint64_t *)((char *)v41 + v19),
          uint64_t v21 = *(void *)((char *)v42 + v19),
          uint64_t v22 = *(void *)(v20 + 16),
          v22 != *(void *)(v21 + 16)))
    {
LABEL_35:
      sub_1C00F7154((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySlot);
      sub_1C00F7154((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySlot);
      return 0;
    }
    if (v22 && v20 != v21) {
      break;
    }
LABEL_5:
    ++v13;
    uint64_t v6 = v42;
    sub_1C00F7154((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySlot);
    uint64_t v11 = v41;
    sub_1C00F7154((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySlot);
    unint64_t result = 1;
    if (v13 == v36) {
      return result;
    }
  }
  unint64_t v24 = 0;
  uint64_t v25 = (unsigned char *)(v20 + 40);
  uint64_t v26 = (unsigned __int8 *)(v21 + 40);
  while (v24 < *(void *)(v21 + 16))
  {
    unint64_t v27 = *((void *)v25 - 1);
    int v28 = *v25;
    unint64_t v29 = *((void *)v26 - 1);
    int v30 = *v26;
    if (*v25)
    {
      if (v28 == 1)
      {
        unint64_t v44 = *((void *)v25 - 1);
        char v45 = 1;
        if (v30 != 1)
        {
          sub_1C00F5B34(v27, 1u);
          sub_1C00F5B34(v27, 1u);
          sub_1C00F5B34(v29, v30);
          unint64_t v34 = v27;
          unsigned __int8 v35 = 1;
LABEL_34:
          sub_1C00F5B34(v34, v35);
          sub_1C00F5B34(v29, v30);
          sub_1C00544B4(v27);
          sub_1C00F5B6C(v27, v28);
          sub_1C00F5B6C(v29, v30);
          sub_1C00F5B6C(v29, v30);
          sub_1C00F5B6C(v27, v28);
          goto LABEL_35;
        }
        unint64_t v43 = v29;
        sub_1C00F5B34(v27, 1u);
        sub_1C00F5B34(v27, 1u);
        sub_1C00F5B34(v27, 1u);
        sub_1C00F5B34(v29, 1u);
        char v31 = static FormatSlotTransform.== infix(_:_:)(&v44, &v43);
        sub_1C00544B4(v44);
        sub_1C00F5B6C(v27, 1u);
        sub_1C00F5B6C(v29, 1u);
        unint64_t result = sub_1C00F5B6C(v27, 1u);
        if ((v31 & 1) == 0) {
          goto LABEL_35;
        }
      }
      else
      {
        unint64_t v44 = *((void *)v25 - 1);
        char v45 = 2;
        if (v30 != 2)
        {
          sub_1C00F5B34(v27, 2u);
          sub_1C00F5B34(v27, 2u);
          sub_1C00F5B34(v29, v30);
          unint64_t v34 = v27;
          unsigned __int8 v35 = 2;
          goto LABEL_34;
        }
        unint64_t v43 = v29;
        sub_1C00F5B34(v27, 2u);
        sub_1C00F5B34(v27, 2u);
        sub_1C00F5B34(v27, 2u);
        sub_1C00F5B34(v29, 2u);
        char v33 = static FormatSlotTransform.== infix(_:_:)(&v44, &v43);
        sub_1C00544B4(v44);
        sub_1C00F5B6C(v27, 2u);
        sub_1C00F5B6C(v29, 2u);
        unint64_t result = sub_1C00F5B6C(v27, 2u);
        if ((v33 & 1) == 0) {
          goto LABEL_35;
        }
      }
    }
    else
    {
      unint64_t v44 = *((void *)v25 - 1);
      char v45 = 0;
      if (v30)
      {
        sub_1C00F5B34(v27, 0);
        sub_1C00F5B34(v27, 0);
        sub_1C00F5B34(v29, v30);
        unint64_t v34 = v27;
        unsigned __int8 v35 = 0;
        goto LABEL_34;
      }
      unint64_t v43 = v29;
      sub_1C00F5B34(v27, 0);
      sub_1C00F5B34(v27, 0);
      sub_1C00F5B34(v27, 0);
      sub_1C00F5B34(v29, 0);
      char v32 = static FormatSlotTransform.== infix(_:_:)(&v44, &v43);
      sub_1C00544B4(v44);
      sub_1C00F5B6C(v27, 0);
      sub_1C00F5B6C(v29, 0);
      unint64_t result = sub_1C00F5B6C(v27, 0);
      if ((v32 & 1) == 0) {
        goto LABEL_35;
      }
    }
    ++v24;
    v25 += 16;
    v26 += 16;
    if (v22 == v24) {
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00DF960(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v10 = 1;
    }
    else
    {
      uint64_t v3 = v2 - 1;
      uint64_t v4 = (unsigned __int8 *)(a1 + 40);
      uint64_t v5 = (unsigned __int8 *)(a2 + 40);
      do
      {
        unint64_t v6 = *((void *)v4 - 1);
        unint64_t v7 = *((void *)v5 - 1);
        unsigned __int8 v8 = *v4;
        unsigned __int8 v9 = *v5;
        sub_1C00F5B34(v6, *v4);
        sub_1C00F5B34(v7, v9);
        char v10 = sub_1C00F5724(v6, v8, v7, v9);
        sub_1C00F5B6C(v7, v9);
        sub_1C00F5B6C(v6, v8);
        BOOL v12 = v3-- != 0;
        if ((v10 & 1) == 0) {
          break;
        }
        v4 += 16;
        v5 += 16;
      }
      while (v12);
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1C00DFA40(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, type metadata accessor for FormatCompilerProperty, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(char *, char *))_s8NewsFeed22FormatCompilerPropertyO2eeoiySbAC_ACtFZ_0, type metadata accessor for FormatCompilerProperty);
}

uint64_t sub_1C00DFA94(uint64_t a1, uint64_t a2)
{
  return sub_1C00F0630(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatSlotTransform.== infix(_:_:));
}

uint64_t sub_1C00DFAB0(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(char *, char *))_s8NewsFeed27FormatSlotDefinitionItemSetV2eeoiySbAC_ACtFZ_0, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
}

uint64_t sub_1C00DFB04(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, type metadata accessor for FormatPropertyDefinition, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(char *, char *))static FormatPropertyDefinition.== infix(_:_:), type metadata accessor for FormatPropertyDefinition);
}

BOOL sub_1C00DFB58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v2 - 1;
      do
      {
        __int16 v7 = *(_WORD *)(a1 + v5 + 56);
        uint64_t v8 = *(void *)(a1 + v5 + 64);
        uint64_t v19 = *(void *)(a1 + v5 + 32);
        long long v20 = *(_OWORD *)(a1 + v5 + 40);
        __int16 v21 = v7;
        uint64_t v22 = v8;
        __int16 v9 = *(_WORD *)(a2 + v5 + 56);
        uint64_t v10 = *(void *)(a2 + v5 + 64);
        uint64_t v15 = *(void *)(a2 + v5 + 32);
        long long v16 = *(_OWORD *)(a2 + v5 + 40);
        __int16 v17 = v9;
        uint64_t v18 = v10;
        BOOL v11 = _s8NewsFeed12FormatBorderV2eeoiySbAC_ACtFZ_0((uint64_t)&v19, (uint64_t)&v15);
        BOOL v13 = v6-- != 0;
        if (!v11) {
          break;
        }
        v5 += 40;
      }
      while (v13);
    }
  }
  else
  {
    return 0;
  }
  return v11;
}

BOOL sub_1C00DFC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      uint64_t v3 = v2 - 1;
      uint64_t v4 = (void *)(a1 + 48);
      uint64_t v5 = (void *)(a2 + 48);
      do
      {
        uint64_t v6 = *v4;
        uint64_t v7 = *v5;
        long long v14 = *((_OWORD *)v4 - 1);
        uint64_t v15 = v6;
        long long v12 = *((_OWORD *)v5 - 1);
        uint64_t v13 = v7;
        BOOL v8 = _s8NewsFeed24FormatLayeredMediaFilterO10MonochromeV2eeoiySbAE_AEtFZ_0((uint64_t *)&v14, (uint64_t *)&v12);
        BOOL v10 = v3-- != 0;
        if (!v8) {
          break;
        }
        v4 += 3;
        v5 += 3;
      }
      while (v10);
    }
  }
  else
  {
    return 0;
  }
  return v8;
}

uint64_t sub_1C00DFCD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatCacheFile();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  __int16 v9 = (char *)&v40 - v8;
  MEMORY[0x1F4188790](v10);
  long long v12 = (double *)((char *)&v40 - v11);
  MEMORY[0x1F4188790](v13);
  long long v16 = (double *)((char *)&v40 - v15);
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 == *(void *)(a2 + 16))
  {
    if (!v17 || a1 == a2) {
      return 1;
    }
    uint64_t v18 = 0;
    unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v42 = a2 + v19;
    uint64_t v43 = a1 + v19;
    uint64_t v41 = *(void *)(v14 + 72);
    while (1)
    {
      uint64_t v21 = v41 * v18;
      sub_1C00F70EC(v43 + v41 * v18, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      sub_1C00F70EC(v42 + v21, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      double v22 = v16[2];
      int v23 = *((unsigned __int8 *)v16 + 24);
      double v24 = v12[2];
      int v25 = *((unsigned __int8 *)v12 + 24);
      BOOL v26 = *(void *)v16 == *(void *)v12 && *((void *)v16 + 1) == *((void *)v12 + 1);
      if (!v26 && (sub_1C1520A9C() & 1) == 0 || v22 != v24)
      {
        sub_1C00F70EC((uint64_t)v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
        sub_1C00F70EC((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
        goto LABEL_25;
      }
      sub_1C00F70EC((uint64_t)v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      sub_1C00F70EC((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      if (v23 != v25) {
        goto LABEL_25;
      }
      uint64_t v27 = *(int *)(v4 + 28);
      int v28 = &v9[v27];
      unint64_t v29 = &v6[v27];
      if ((sub_1C151922C() & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v30 = *(int *)(type metadata accessor for DebugFormatCacheFileMetadata() + 20);
      uint64_t v31 = *(void *)&v28[v30];
      uint64_t v32 = *(void *)&v29[v30];
      uint64_t v33 = *(void *)(v31 + 16);
      if (v33 != *(void *)(v32 + 16)) {
        goto LABEL_25;
      }
      if (v33 && v31 != v32) {
        break;
      }
LABEL_5:
      ++v18;
      sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      sub_1C00F7154((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      sub_1C00F7154((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      sub_1C00F7154((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
      uint64_t result = 1;
      if (v18 == v17) {
        return result;
      }
    }
    unsigned __int8 v35 = (unsigned __int8 *)(v31 + 32);
    uint64_t v36 = (unsigned __int8 *)(v32 + 32);
    while (1)
    {
      int v38 = *v35++;
      int v37 = v38;
      int v39 = *v36++;
      if (v37 != v39) {
        break;
      }
      if (!--v33) {
        goto LABEL_5;
      }
    }
LABEL_25:
    sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    sub_1C00F7154((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    sub_1C00F7154((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    sub_1C00F7154((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  }
  return 0;
}

uint64_t sub_1C00E0048(uint64_t a1, uint64_t a2)
{
  return sub_1C00F0630(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))_s8NewsFeed16FormatAdjustmentO2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1C00E0060(uint64_t a1, uint64_t a2)
{
  sub_1BFF81A84();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (unint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v21 - v10);
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v17 = 0;
    return v17 & 1;
  }
  if (v12 && a1 != a2)
  {
    unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v14 = *(void *)(v9 + 72);
    uint64_t v15 = v12 - 1;
    while (1)
    {
      sub_1C00F70EC(a1 + v13, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF81A84);
      sub_1C00F70EC(a2 + v13, (uint64_t)v7, (uint64_t (*)(void))sub_1BFF81A84);
      uint64_t v16 = *v11;
      unint64_t v21 = *v7;
      uint64_t v22 = v16;
      if ((static FormatExpression.== infix(_:_:)(&v22, &v21) & 1) == 0) {
        break;
      }
      char v17 = static FormatOptionsNodeStatementValue.== infix(_:_:)((char *)v11 + *(int *)(v5 + 36), (char *)v7 + *(int *)(v5 + 36));
      sub_1C00F7154((uint64_t)v7, (uint64_t (*)(void))sub_1BFF81A84);
      sub_1C00F7154((uint64_t)v11, (uint64_t (*)(void))sub_1BFF81A84);
      BOOL v19 = v15-- != 0;
      if (v17)
      {
        v13 += v14;
        if (v19) {
          continue;
        }
      }
      return v17 & 1;
    }
    sub_1C00F7154((uint64_t)v7, (uint64_t (*)(void))sub_1BFF81A84);
    sub_1C00F7154((uint64_t)v11, (uint64_t (*)(void))sub_1BFF81A84);
    goto LABEL_14;
  }
  char v17 = 1;
  return v17 & 1;
}

uint64_t sub_1C00E0258(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unsigned char *)(a2 + 49);
  for (uint64_t i = (char *)(a1 + 49); ; i += 24)
  {
    uint64_t v6 = *(void *)(i - 17);
    uint64_t v7 = *(void *)(i - 9);
    char v8 = *(i - 1);
    char v9 = *i;
    uint64_t v10 = *(void *)(v3 - 17);
    uint64_t v11 = *(void *)(v3 - 9);
    char v12 = *(v3 - 1);
    if (*i)
    {
      if (*v3)
      {
        if ((0x29282F2A2D2BuLL >> (8 * v6)) != (0x29282F2A2D2BuLL >> (8 * v10))) {
          return 0;
        }
        goto LABEL_6;
      }
      char v14 = v12 & 1;
      uint64_t v15 = *(void *)(v3 - 17);
      uint64_t v16 = *(void *)(v3 - 9);
LABEL_23:
      sub_1BFE94AB4(v15, v16, v14);
      sub_1BFF45B38(v6, v7, v8, v9);
      sub_1BFF45B38(v10, v11, v12, v9 ^ 1);
      sub_1BFF45B38(v6, v7, v8, v9);
      return 0;
    }
    if (*v3)
    {
      sub_1BFE94AB4(*(void *)(i - 17), *(void *)(i - 9), v8 & 1);
      uint64_t v15 = v6;
      uint64_t v16 = v7;
      char v14 = v8 & 1;
      goto LABEL_23;
    }
    if (*(i - 1)) {
      break;
    }
    if (*(v3 - 1)) {
      goto LABEL_26;
    }
    sub_1C00AB058(*(void *)(i - 17), *(void *)(i - 9), *(i - 1), 0);
    sub_1C00AB058(v10, v11, v12, 0);
    sub_1BFE94AD4(v6, v7, 0);
    sub_1BFE94AD4(v10, v11, 0);
    if (v6 != v10) {
      return 0;
    }
LABEL_6:
    v3 += 24;
    if (!--v2) {
      return 1;
    }
  }
  if (*(v3 - 1))
  {
    if (v6 == v10 && v7 == v11)
    {
      sub_1C00AB058(*(void *)(i - 17), *(void *)(i - 9), *(i - 1), 0);
      sub_1C00AB058(v6, v7, v12, 0);
      sub_1BFE94AD4(v6, v7, 1);
      sub_1BFE94AD4(v6, v7, 1);
    }
    else
    {
      char v5 = sub_1C1520A9C();
      sub_1C00AB058(v6, v7, v8, 0);
      sub_1C00AB058(v10, v11, v12, 0);
      sub_1BFE94AD4(v6, v7, 1);
      sub_1BFE94AD4(v10, v11, 1);
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    goto LABEL_6;
  }
  sub_1BFE94AB4(*(void *)(i - 17), *(void *)(i - 9), 1);
LABEL_26:
  int v17 = v8 & 1;
  sub_1BFE94AB4(v10, v11, v17 == 0);
  sub_1BFE94AD4(v6, v7, v17);
  sub_1BFE94AD4(v10, v11, v17 == 0);
  return 0;
}

uint64_t sub_1C00E0518(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      unsigned int v6 = *v3++;
      unsigned int v5 = v6;
      unsigned int v8 = *v4++;
      unsigned int v7 = v8;
      if (v5 >> 6)
      {
        if (v5 >> 6 == 1)
        {
          int v9 = (v7 ^ v5) & 1;
          if ((v7 & 0xC0) != 0x40 || v9 != 0) {
            return 0;
          }
        }
        else if ((v7 & 0xC0) != 0x80)
        {
          return 0;
        }
      }
      else if (v7 > 0x3F || v5 != v7)
      {
        return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00E05A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v10 = 1;
    }
    else
    {
      uint64_t v3 = v2 - 1;
      uint64_t v4 = (unsigned char *)(a2 + 64);
      unsigned int v5 = (unsigned char *)(a1 + 64);
      do
      {
        char v6 = *v5;
        long long v7 = *((_OWORD *)v5 - 1);
        v16[0] = *((_OWORD *)v5 - 2);
        v16[1] = v7;
        char v17 = v6;
        char v8 = *v4;
        long long v9 = *((_OWORD *)v4 - 1);
        v14[0] = *((_OWORD *)v4 - 2);
        v14[1] = v9;
        char v15 = v8;
        char v10 = _s8NewsFeed32FormatImageNodeRequestAdjustmentO2eeoiySbAC_ACtFZ_0((uint64_t)v16, (uint64_t)v14);
        BOOL v12 = v3-- != 0;
        if ((v10 & 1) == 0) {
          break;
        }
        v4 += 40;
        v5 += 40;
      }
      while (v12);
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1C00E0650(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatOption, (uint64_t (*)(void))type metadata accessor for FormatOption, (uint64_t (*)(char *, char *))_s8NewsFeed12FormatOptionV2eeoiySbAC_ACtFZ_0, (uint64_t (*)(void))type metadata accessor for FormatOption);
}

uint64_t sub_1C00E06A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      BOOL v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1C00E076C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    while (1)
    {
      uint64_t v7 = (void *)(v4 + 24 * v3);
      uint64_t v8 = v7[2];
      BOOL v9 = (void *)(v5 + 24 * v3);
      uint64_t v10 = v9[2];
      BOOL v11 = *v7 == *v9 && v7[1] == v9[1];
      if (!v11 && (sub_1C1520A9C() & 1) == 0) {
        return 0;
      }
      uint64_t v12 = *(void *)(v8 + 16);
      if (v12 != *(void *)(v10 + 16)) {
        return 0;
      }
      if (v12) {
        BOOL v13 = v8 == v10;
      }
      else {
        BOOL v13 = 1;
      }
      if (!v13)
      {
        char v14 = (unsigned __int8 *)(v8 + 32);
        char v15 = (unsigned __int8 *)(v10 + 32);
        do
        {
          int v17 = *v14++;
          int v16 = v17;
          int v18 = *v15++;
          if (v16 != v18) {
            return 0;
          }
        }
        while (--v12);
      }
      ++v3;
      uint64_t result = 1;
      if (v3 == v2) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_1C00E0858(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned char *)(a1 + 32);
    uint64_t v4 = (unsigned char *)(a2 + 32);
    do
    {
      if (*v3) {
        uint64_t v5 = 0x4D6465726579616CLL;
      }
      else {
        uint64_t v5 = 0x616C506F65646976;
      }
      if (*v3) {
        unint64_t v6 = 0xEC00000061696465;
      }
      else {
        unint64_t v6 = 0xED00006B63616279;
      }
      if (*v4) {
        uint64_t v7 = 0x4D6465726579616CLL;
      }
      else {
        uint64_t v7 = 0x616C506F65646976;
      }
      if (*v4) {
        unint64_t v8 = 0xEC00000061696465;
      }
      else {
        unint64_t v8 = 0xED00006B63616279;
      }
      if (v5 == v7 && v6 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      ++v3;
      ++v4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00E0974(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unint64_t *)(a1 + 32);
  uint64_t v4 = (unint64_t *)(a2 + 32);
  while (1)
  {
    while (1)
    {
      unint64_t v6 = *v3++;
      unint64_t v5 = v6;
      unint64_t v8 = *v4++;
      unint64_t v7 = v8;
      if (!(v5 >> 62))
      {
        if (v7 >> 62) {
          return 0;
        }
        uint64_t v12 = *(void *)(v5 + 16);
        uint64_t v13 = *(void *)(v7 + 16);
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_retain();
        BOOL v14 = _s8NewsFeed024FormatAnimationNodeBasicD0C2eeoiySbAC_ACtFZ_0(v12, v13);
        swift_release_n();
        swift_release_n();
        goto LABEL_5;
      }
      if (v5 >> 62 != 1) {
        break;
      }
      if (v7 >> 62 != 1) {
        return 0;
      }
      uint64_t v9 = *(void *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      swift_retain();
      char v11 = _s8NewsFeed025FormatAnimationNodeSpringD0C2eeoiySbAC_ACtFZ_0(v9, v10);
      swift_release_n();
      swift_release_n();
      swift_release();
      swift_release();
      if ((v11 & 1) == 0) {
        return 0;
      }
LABEL_6:
      if (!--v2) {
        return 1;
      }
    }
    if (v7 >> 62 != 2) {
      return 0;
    }
    uint64_t v15 = *(void *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v16 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v17 = *(void *)(v15 + 16);
    uint64_t v18 = *(void *)(v16 + 16);
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    if ((sub_1C00E0974(v17, v18) & 1) == 0) {
      goto LABEL_26;
    }
    sub_1C00F6F94(v15 + 24, (uint64_t)v42, (uint64_t (*)(void))sub_1C00F652C);
    sub_1C00F6F94(v16 + 24, (uint64_t)v43, (uint64_t (*)(void))sub_1C00F652C);
    sub_1C00F6F94((uint64_t)v42, (uint64_t)v44, (uint64_t (*)(void))sub_1C00F652C);
    if (sub_1C00F6584(v44) != 1) {
      break;
    }
    sub_1C00F6F94((uint64_t)v43, (uint64_t)v40, (uint64_t (*)(void))sub_1C00F652C);
    if (sub_1C00F6584(v40) != 1) {
      goto LABEL_25;
    }
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_release();
    if (!--v2) {
      return 1;
    }
  }
  sub_1C00F6F94((uint64_t)v42, (uint64_t)&v32, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C00F6F94((uint64_t)v43, (uint64_t)v40, (uint64_t (*)(void))sub_1C00F652C);
  if (sub_1C00F6584(v40) != 1)
  {
    sub_1C00F6F94((uint64_t)v43, (uint64_t)&v22, (uint64_t (*)(void))sub_1C00F652C);
    v20[6] = v28;
    v21[0] = v29[0];
    *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v29 + 9);
    _OWORD v20[2] = v24;
    v20[3] = v25;
    v20[4] = v26;
    v20[5] = v27;
    v20[0] = v22;
    v20[1] = v23;
    sub_1C00F6940((uint64_t)v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
    sub_1C00F6940((uint64_t)v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
    BOOL v14 = _s8NewsFeed17FormatMediaTimingV2eeoiySbAC_ACtFZ_0((uint64_t)&v32, (uint64_t)v20);
    v30[6] = v38;
    v31[0] = v39[0];
    *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)v39 + 9);
    v30[2] = v34;
    v30[3] = v35;
    v30[4] = v36;
    v30[5] = v37;
    v30[0] = v32;
    v30[1] = v33;
    sub_1C00F6854((uint64_t)v30);
    sub_1C00F6940((uint64_t)v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5A634);
    swift_release_n();
    swift_release();
    swift_release();
LABEL_5:
    swift_release();
    swift_release();
    if (!v14) {
      return 0;
    }
    goto LABEL_6;
  }
  long long v28 = v38;
  v29[0] = v39[0];
  *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)v39 + 9);
  long long v24 = v34;
  long long v25 = v35;
  long long v26 = v36;
  long long v27 = v37;
  long long v22 = v32;
  long long v23 = v33;
  sub_1C00F6F94((uint64_t)v42, (uint64_t)v30, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C00F6940((uint64_t)v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
  sub_1C00F676C((uint64_t)v30);
  sub_1C00F6854((uint64_t)&v22);
LABEL_25:
  sub_1C00F6F94((uint64_t)v42, (uint64_t)v40, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C00F6F94((uint64_t)v43, (uint64_t)&v41, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C00F6940((uint64_t)v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
  sub_1C00F6608((uint64_t)v40);
LABEL_26:
  swift_release_n();
  swift_release_n();
  swift_release();
  swift_release();
  return 0;
}

uint64_t sub_1C00E0E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (uint64_t *)(a1 + 64);
  for (uint64_t i = (uint64_t *)(a2 + 64); ; i += 5)
  {
    uint64_t v5 = *(v3 - 2);
    uint64_t v14 = *v3;
    uint64_t v15 = *(v3 - 1);
    uint64_t v6 = *(v3 - 4);
    uint64_t v7 = *(v3 - 3);
    uint64_t v8 = *(i - 3);
    uint64_t v9 = *(i - 2);
    uint64_t v10 = *(i - 1);
    uint64_t v13 = *i;
    unint64_t v16 = *(i - 4);
    uint64_t v17 = v6;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if ((_s8NewsFeed10FormatNodeO2eeoiySbAC_ACtFZ_0(&v17, &v16) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    }
    if (v5) {
      break;
    }
    if (v9) {
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_5:
    v3 += 5;
    if (!--v2) {
      return 1;
    }
  }
  if (v9)
  {
    if (v7 == v8 && v5 == v9)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = 0;
    }
    else
    {
      char v12 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = 0;
      if ((v12 & 1) == 0) {
        return result;
      }
    }
    if (v15 != v10 || v14 != v13) {
      return result;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
LABEL_23:
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_1C00E1078(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v10 = 1;
    }
    else
    {
      uint64_t v3 = v2 - 1;
      uint64_t v4 = (long long *)(a2 + 80);
      uint64_t v5 = (long long *)(a1 + 48);
      do
      {
        long long v6 = *v5;
        v15[0] = *(v5 - 1);
        v15[1] = v6;
        long long v7 = v5[2];
        void v15[2] = v5[1];
        void v15[3] = v7;
        long long v8 = *(v4 - 2);
        v14[0] = *(v4 - 3);
        v14[1] = v8;
        long long v9 = *v4;
        _OWORD v14[2] = *(v4 - 1);
        long long v14[3] = v9;
        char v10 = _s8NewsFeed15FormatNodeStyleO2eeoiySbAC_ACtFZ_0((uint64_t *)v15, (uint64_t *)v14);
        BOOL v12 = v3-- != 0;
        if ((v10 & 1) == 0) {
          break;
        }
        v4 += 4;
        v5 += 4;
      }
      while (v12);
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1C00E1124(unint64_t a1, unint64_t a2)
{
  uint64_t v87 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v4 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  long long v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00F6E80(0, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (uint64_t *)((char *)&v63 - v8);
  sub_1C00F6ED4(0, (unint64_t *)&qword_1EA196BD8, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  uint64_t v86 = v10;
  MEMORY[0x1F4188790](v10);
  id v85 = (char *)&v63 - v11;
  uint64_t v12 = type metadata accessor for FormatOption();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (unint64_t *)((char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v18 = MEMORY[0x1F4188790](v15);
  long long v20 = (unint64_t *)((char *)&v63 - v19);
  unint64_t v21 = (void *)(a1 >> 62);
  if (a1 >> 62)
  {
    uint64_t v82 = v16;
    uint64_t v60 = v17;
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v22 = v61;
    uint64_t v17 = v60;
    uint64_t v16 = v82;
  }
  else
  {
    uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (a2 >> 62)
  {
    uint64_t v82 = v16;
    uint64_t v70 = v17;
    uint64_t v74 = v22;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v22 = v74;
    uint64_t v17 = v70;
    uint64_t v16 = v82;
    if (v74 == v62) {
      goto LABEL_5;
    }
LABEL_76:
    char v57 = 0;
    return v57 & 1;
  }
  if (v22 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_76;
  }
LABEL_5:
  if (!v22) {
    goto LABEL_71;
  }
  uint64_t v23 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a1 & 0x8000000000000000) != 0) {
    uint64_t v24 = a1;
  }
  else {
    uint64_t v24 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  if (v21) {
    uint64_t v23 = v24;
  }
  uint64_t v25 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v26 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0) {
    uint64_t v27 = a2;
  }
  else {
    uint64_t v27 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if (a2 >> 62) {
    uint64_t v26 = v27;
  }
  if (v23 == v26)
  {
LABEL_71:
    char v57 = 1;
    return v57 & 1;
  }
  if (v22 < 0)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  unint64_t v73 = a1 & 0xC000000000000001;
  uint64_t v82 = v16;
  uint64_t v70 = v17;
  uint64_t v74 = v22;
  uint64_t v69 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_83:
    uint64_t result = MEMORY[0x1C18C7CB0](0, a1, v18);
    unint64_t v21 = (void *)result;
    goto LABEL_21;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_85;
  }
  unint64_t v21 = *(void **)(a1 + 32);
  uint64_t result = swift_retain();
LABEL_21:
  unint64_t v72 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_85:
    unint64_t v29 = (void *)MEMORY[0x1C18C7CB0](0, a2, v18);
    goto LABEL_24;
  }
  if (*(void *)(v25 + 16))
  {
    unint64_t v29 = *(void **)(a2 + 32);
    swift_retain();
LABEL_24:
    if (v21[2] == v29[2] && v21[3] == v29[3] || (sub_1C1520A9C() & 1) != 0)
    {
      id v76 = v6;
      unint64_t v66 = a1 + 32;
      unint64_t v65 = a2 + 32;
      uint64_t v30 = 1;
      id v77 = v9;
      uint64_t v71 = v25;
      id v79 = (char *)(v4 + 48);
      long long v9 = &qword_1EB891B88;
      do
      {
        unint64_t v78 = v30;
        swift_beginAccess();
        uint64_t v31 = v21[4];
        swift_beginAccess();
        long long v32 = v29;
        uint64_t v33 = v29[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v34 = sub_1C00E0E68(v31, v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0) {
          break;
        }
        swift_beginAccess();
        uint64_t v35 = v21[5];
        swift_beginAccess();
        uint64_t v36 = v32[5];
        uint64_t v37 = *(void *)(v35 + 16);
        if (v37 != *(void *)(v36 + 16)) {
          break;
        }
        uint64_t v4 = (uint64_t)v85;
        if (v37 && v35 != v36)
        {
          uint64_t v81 = *(void *)(v35 + 16);
          id v67 = v32;
          id v68 = v21;
          unint64_t v63 = a1;
          unint64_t v64 = a2;
          uint64_t v25 = v70;
          a2 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
          uint64_t v38 = v36;
          swift_bridgeObjectRetain();
          uint64_t v84 = v38;
          swift_bridgeObjectRetain();
          a1 = 0;
          uint64_t v80 = *(void *)(v25 + 72);
          long long v6 = v79;
          id v75 = v20;
          uint64_t v83 = v35;
          while (1)
          {
            sub_1C00F70EC(v35 + a2, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatOption);
            if (a1 >= *(void *)(v84 + 16)) {
              break;
            }
            sub_1C00F70EC(v84 + a2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
            BOOL v39 = *v20 == *v14 && v20[1] == v14[1];
            if (!v39 && (sub_1C1520A9C() & 1) == 0) {
              goto LABEL_75;
            }
            uint64_t v40 = v20[2];
            unint64_t v88 = v14[2];
            uint64_t v89 = v40;
            if ((static FormatOptionValue.== infix(_:_:)(&v89, &v88) & 1) == 0) {
              goto LABEL_75;
            }
            uint64_t v41 = v20[3];
            uint64_t v42 = v14[3];
            if (v41 == 1)
            {
              if (v42 != 1) {
                goto LABEL_75;
              }
            }
            else
            {
              if (v42 == 1) {
                goto LABEL_75;
              }
              if (v41)
              {
                if (!v42) {
                  goto LABEL_75;
                }
                sub_1BFEF95A8(v14[3]);
                sub_1BFEF95A8(v41);
                char v43 = sub_1BFEFAE14(v41, v42);
                sub_1BFEF9514(v42);
                sub_1BFEF9514(v41);
                if ((v43 & 1) == 0) {
                  goto LABEL_75;
                }
              }
              else if (v42)
              {
                goto LABEL_75;
              }
            }
            uint64_t v44 = *(int *)(v82 + 28);
            uint64_t v45 = (uint64_t)v14 + v44;
            uint64_t v46 = v4 + *(int *)(v86 + 48);
            sub_1C00F63DC((uint64_t)v20 + v44, v4, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
            sub_1C00F63DC(v45, v46, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
            uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v6;
            uint64_t v48 = v87;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v6)(v4, 1, v87) == 1)
            {
              if (v47(v46, 1, v48) != 1) {
                goto LABEL_74;
              }
              sub_1C00F6448(v4, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
            }
            else
            {
              uint64_t v49 = v4;
              uint64_t v50 = v4;
              uint64_t v51 = (uint64_t)v77;
              sub_1C00F63DC(v49, (uint64_t)v77, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
              if (v47(v46, 1, v48) == 1)
              {
                sub_1C00F7154(v51, type metadata accessor for FormatVersionRequirement);
                uint64_t v4 = v50;
                long long v20 = v75;
LABEL_74:
                sub_1C00F6F38(v4, (unint64_t *)&qword_1EA196BD8, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
LABEL_75:
                sub_1C00F7154((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
                sub_1C00F7154((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatOption);
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_76;
              }
              uint64_t v52 = v46;
              uint64_t v53 = (uint64_t)v76;
              sub_1C00F6F94(v52, (uint64_t)v76, type metadata accessor for FormatVersionRequirement);
              char v54 = sub_1C02F0BB4(v51, v53);
              sub_1C00F7154(v51, type metadata accessor for FormatVersionRequirement);
              sub_1C00F7154(v53, type metadata accessor for FormatVersionRequirement);
              sub_1C00F6448(v50, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
              uint64_t v4 = v50;
              long long v6 = v79;
              long long v20 = v75;
              if ((v54 & 1) == 0) {
                goto LABEL_75;
              }
            }
            ++a1;
            uint64_t v25 = (uint64_t)type metadata accessor for FormatOption;
            sub_1C00F7154((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
            sub_1C00F7154((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatOption);
            a2 += v80;
            uint64_t v35 = v83;
            if (v81 == a1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a2 = v64;
              a1 = v63;
              unint64_t v21 = v68;
              long long v32 = v67;
              goto LABEL_57;
            }
          }
          __break(1u);
          goto LABEL_82;
        }
LABEL_57:
        swift_beginAccess();
        uint64_t v55 = v21[6];
        swift_beginAccess();
        uint64_t v56 = v32[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v57 = sub_1BFEFAE14(v55, v56);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v57 & 1) == 0) {
          return v57 & 1;
        }
        unint64_t v58 = v78;
        if (v78 == v74) {
          return v57 & 1;
        }
        if (v73)
        {
          uint64_t result = MEMORY[0x1C18C7CB0](v78, a1);
          unint64_t v21 = (void *)result;
          uint64_t v59 = v71;
        }
        else
        {
          uint64_t v59 = v71;
          if (v78 >= *(void *)(v69 + 16)) {
            goto LABEL_87;
          }
          unint64_t v21 = *(void **)(v66 + 8 * v78);
          uint64_t result = swift_retain();
        }
        if (v72)
        {
          unint64_t v29 = (void *)MEMORY[0x1C18C7CB0](v58, a2);
        }
        else
        {
          if (v58 >= *(void *)(v59 + 16)) {
            goto LABEL_88;
          }
          unint64_t v29 = *(void **)(v65 + 8 * v58);
          swift_retain();
        }
        uint64_t v30 = v58 + 1;
      }
      while (v21[2] == v29[2] && v21[3] == v29[3] || (sub_1C1520A9C() & 1) != 0);
    }
    swift_release();
    swift_release();
    goto LABEL_76;
  }
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
  return result;
}

uint64_t sub_1C00E1C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v10 = sub_1C00ABAD8(v5, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v10 & 1) == 0 || v6 != v8) {
        return result;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C00E1D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a2 + 64);
    for (uint64_t i = (unsigned __int8 *)(a1 + 64); ; i += 40)
    {
      unint64_t v5 = *((void *)i - 2);
      uint64_t v6 = *i;
      unint64_t v7 = *((void *)v3 - 2);
      uint64_t v13 = *((void *)v3 - 1);
      uint64_t v14 = *((void *)i - 1);
      unsigned int v8 = *v3;
      BOOL v9 = *((void *)i - 4) == *((void *)v3 - 4) && *((void *)i - 3) == *((void *)v3 - 3);
      if (!v9 && (sub_1C1520A9C() & 1) == 0) {
        return 0;
      }
      swift_bridgeObjectRetain();
      sub_1BFFCC7B0(v5);
      swift_bridgeObjectRetain();
      sub_1BFFCC7B0(v7);
      char v10 = sub_1C13D50F4(v5, v7);
      swift_bridgeObjectRelease();
      sub_1BFFCB2B8(v7);
      swift_bridgeObjectRelease();
      sub_1BFFCB2B8(v5);
      if ((v10 & 1) == 0) {
        return 0;
      }
      if (v6 > 0xFD)
      {
        if (v8 <= 0xFD) {
          return 0;
        }
        goto LABEL_6;
      }
      if (v8 > 0xFD) {
        return 0;
      }
      if (!(v6 >> 6)) {
        break;
      }
      if (v6 >> 6 == 1)
      {
        if ((v8 & 0xC0) != 0x40) {
          return 0;
        }
        goto LABEL_20;
      }
      int v12 = v8 & 0xC0;
      uint64_t result = 0;
      if (v14 | v6 ^ 0x80)
      {
        if (v12 != 128 || v13 != 1) {
          return result;
        }
      }
      else if (v12 != 128 || v13)
      {
        return result;
      }
      if (v8 != 128) {
        return result;
      }
LABEL_6:
      v3 += 40;
      if (!--v2) {
        return 1;
      }
    }
    if (v8 >= 0x40) {
      return 0;
    }
LABEL_20:
    if (v6)
    {
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if ((v8 & 1) != 0 || v14 != v13) {
        return result;
      }
    }
    goto LABEL_6;
  }
  return 1;
}

uint64_t sub_1C00E1EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unint64_t *)(a2 + 56);
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    int v8 = *((unsigned __int8 *)v4 - 8);
    unint64_t v9 = *v4;
    uint64_t v10 = *(v3 - 2);
    uint64_t v79 = *(v3 - 3);
    int v78 = *((unsigned __int8 *)v3 - 8);
    unint64_t v11 = *v3;
    uint64_t v75 = v7;
    uint64_t v76 = v6;
    uint64_t v77 = v10;
    unint64_t v73 = v3;
    uint64_t v74 = v2;
    unint64_t v72 = v4;
    if (*((unsigned char *)v4 - 8))
    {
      if (v8 == 1)
      {
        if (v78 != 1) {
          goto LABEL_72;
        }
        sub_1BFF5B7E0(v7, v6, 1);
        swift_retain();
        sub_1BFF5B7E0(v79, v10, 1);
        swift_retain();
        sub_1BFF5B7CC(v7, v6, 1);
        sub_1BFF5B7CC(v79, v10, 1);
        if (((((v7 & 1) == 0) ^ v79) & 1) == 0)
        {
          sub_1BFF5B7CC(v79, v10, 1);
          swift_release();
          sub_1BFF5B7CC(v7, v6, 1);
          goto LABEL_82;
        }
      }
      else
      {
        if (v78 != 2) {
          goto LABEL_72;
        }
        sub_1BFF5B7E0(v7, v6, 2);
        swift_retain();
        sub_1BFF5B7E0(v79, v10, 2);
        swift_retain();
        sub_1BFF5B7CC(v7, v6, 2);
        sub_1BFF5B7CC(v79, v10, 2);
        if (v7 != v79)
        {
          sub_1BFF5B7CC(v79, v10, 2);
          swift_release();
          uint64_t v66 = v7;
          uint64_t v67 = v6;
          char v68 = 2;
LABEL_74:
          sub_1BFF5B7CC(v66, v67, v68);
          goto LABEL_82;
        }
      }
    }
    else
    {
      if (*((unsigned char *)v3 - 8))
      {
        swift_bridgeObjectRetain();
LABEL_72:
        sub_1BFF5B7E0(v79, v10, v78);
        sub_1BFF5B7CC(v7, v6, v8);
        sub_1BFF5B7CC(v79, v10, v78);
        return 0;
      }
      if (v7 == v79 && v6 == v10) {
        char v13 = 1;
      }
      else {
        char v13 = sub_1C1520A9C();
      }
      sub_1BFF5B7E0(v7, v6, 0);
      swift_retain();
      sub_1BFF5B7E0(v79, v10, 0);
      swift_retain();
      sub_1BFF5B7E0(v79, v10, 0);
      sub_1BFF5B7E0(v7, v6, 0);
      sub_1BFF5B7CC(v7, v6, 0);
      sub_1BFF5B7CC(v79, v10, 0);
      if ((v13 & 1) == 0)
      {
        sub_1BFF5B7CC(v79, v10, 0);
        swift_release();
        uint64_t v66 = v7;
        uint64_t v67 = v6;
        char v68 = 0;
        goto LABEL_74;
      }
    }
    if (v9 >> 62) {
      break;
    }
    char v14 = v8;
    if (v11 >> 62) {
      goto LABEL_69;
    }
    __int16 v49 = *(_WORD *)(v9 + 64);
    __int16 v50 = *(_WORD *)(v11 + 64);
    long long v51 = *(_OWORD *)(v9 + 32);
    long long v84 = *(_OWORD *)(v9 + 16);
    long long v85 = v51;
    long long v86 = *(_OWORD *)(v9 + 48);
    __int16 v87 = v49;
    long long v52 = *(_OWORD *)(v11 + 32);
    long long v80 = *(_OWORD *)(v11 + 16);
    long long v81 = v52;
    long long v82 = *(_OWORD *)(v11 + 48);
    __int16 v83 = v50;
    swift_retain();
    swift_retain();
    BOOL v53 = _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v84, (uint64_t)&v80);
    swift_release();
    swift_release();
    sub_1BFF5B7CC(v79, v77, v78);
    swift_release();
    sub_1BFF5B7CC(v75, v6, v8);
    swift_release();
    if (!v53) {
      return 0;
    }
LABEL_6:
    uint64_t v3 = v73 + 4;
    uint64_t v4 = v72 + 4;
    uint64_t v2 = v74 - 1;
    if (v74 == 1) {
      return 1;
    }
  }
  char v14 = v8;
  unint64_t v15 = v11 >> 62;
  if (v9 >> 62 != 1)
  {
    if (v15 != 2)
    {
LABEL_69:
      sub_1BFF5B7CC(v79, v77, v78);
      swift_release();
      sub_1BFF5B7CC(v7, v6, v14);
      goto LABEL_82;
    }
    if (*(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) != *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x10)
      || *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) != *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x18))
    {
      char v5 = sub_1C1520A9C();
      sub_1BFF5B7CC(v79, v77, v78);
      swift_release();
      sub_1BFF5B7CC(v7, v76, v8);
      swift_release();
      if ((v5 & 1) == 0) {
        return 0;
      }
      goto LABEL_6;
    }
    uint64_t v48 = v7;
    goto LABEL_67;
  }
  if (v15 != 1) {
    goto LABEL_69;
  }
  char v71 = v8;
  uint64_t v17 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v16 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  unint64_t v18 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  uint64_t v19 = v11 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v21 = *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v20 = *(void *)(v19 + 24);
  unint64_t v22 = *(void *)(v19 + 32);
  uint64_t v23 = *(void *)(v17 + 32);
  __int16 v24 = *(_WORD *)(v17 + 40);
  uint64_t v25 = *(void *)(v21 + 32);
  __int16 v26 = *(_WORD *)(v21 + 40);
  long long v84 = *(_OWORD *)(v17 + 16);
  *(void *)&long long v85 = v23;
  WORD4(v85) = v24;
  long long v80 = *(_OWORD *)(v21 + 16);
  *(void *)&long long v81 = v25;
  WORD4(v81) = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if ((static FormatCommandBinding.== infix(_:_:)(&v84, &v80) & 1) == 0 || (sub_1C00E1EF8(v16, v20) & 1) == 0)
  {
LABEL_75:
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFF5B7CC(v79, v77, v78);
    swift_release();
    uint64_t v66 = v75;
    uint64_t v67 = v76;
    char v68 = v71;
    goto LABEL_74;
  }
  if (!(v18 >> 62))
  {
    if (v22 >> 62) {
      goto LABEL_75;
    }
    __int16 v54 = *(_WORD *)(v18 + 64);
    __int16 v55 = *(_WORD *)(v22 + 64);
    long long v56 = *(_OWORD *)(v18 + 32);
    long long v84 = *(_OWORD *)(v18 + 16);
    long long v85 = v56;
    long long v86 = *(_OWORD *)(v18 + 48);
    __int16 v87 = v54;
    long long v57 = *(_OWORD *)(v22 + 32);
    long long v80 = *(_OWORD *)(v22 + 16);
    long long v81 = v57;
    long long v82 = *(_OWORD *)(v22 + 48);
    __int16 v83 = v55;
    swift_retain();
    swift_retain();
    char v58 = _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v84, (uint64_t)&v80);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release_n();
    sub_1BFF5B7CC(v79, v77, v78);
    swift_release();
    uint64_t v59 = v75;
LABEL_55:
    sub_1BFF5B7CC(v59, v76, v71);
    swift_release();
    if ((v58 & 1) == 0) {
      return 0;
    }
    goto LABEL_6;
  }
  if (v18 >> 62 != 1)
  {
    if (v22 >> 62 != 2) {
      goto LABEL_75;
    }
    if (*(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x10)
      && *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x18))
    {
      char v58 = 1;
    }
    else
    {
      char v58 = sub_1C1520A9C();
    }
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFF5B7CC(v79, v77, v78);
    swift_release();
    uint64_t v59 = v75;
    goto LABEL_55;
  }
  if (v22 >> 62 != 1) {
    goto LABEL_75;
  }
  uint64_t v27 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v28 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  unint64_t v29 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  uint64_t v30 = *(void *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v31 = *(void *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  unint64_t v32 = *(void *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  uint64_t v33 = *(void *)(v27 + 32);
  __int16 v34 = *(_WORD *)(v27 + 40);
  uint64_t v35 = *(void *)(v30 + 32);
  __int16 v36 = *(_WORD *)(v30 + 40);
  long long v84 = *(_OWORD *)(v27 + 16);
  *(void *)&long long v85 = v33;
  WORD4(v85) = v34;
  long long v80 = *(_OWORD *)(v30 + 16);
  *(void *)&long long v81 = v35;
  WORD4(v81) = v36;
  uint64_t v70 = (void *)(v32 & 0x3FFFFFFFFFFFFFFFLL);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (static FormatCommandBinding.== infix(_:_:)(&v84, &v80) & 1) != 0 && (sub_1C00E1EF8(v28, v31))
  {
    unint64_t v37 = v32 >> 62;
    if (v29 >> 62)
    {
      char v14 = v71;
      if (v29 >> 62 == 1)
      {
        if (v37 != 1) {
          goto LABEL_77;
        }
        uint64_t v39 = *(void *)((v29 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v38 = *(void *)((v29 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v40 = *(void *)((v29 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v41 = v70[2];
        uint64_t v69 = v70[3];
        uint64_t v42 = v70[4];
        uint64_t v43 = *(void *)(v39 + 32);
        __int16 v44 = *(_WORD *)(v39 + 40);
        uint64_t v45 = *(void *)(v41 + 32);
        __int16 v46 = *(_WORD *)(v41 + 40);
        long long v84 = *(_OWORD *)(v39 + 16);
        *(void *)&long long v85 = v43;
        WORD4(v85) = v44;
        long long v80 = *(_OWORD *)(v41 + 16);
        *(void *)&long long v81 = v45;
        WORD4(v81) = v46;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        if ((static FormatCommandBinding.== infix(_:_:)(&v84, &v80) & 1) == 0 || (sub_1C00E1EF8(v38, v69) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release_n();
          swift_release_n();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v48 = v75;
LABEL_79:
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release_n();
          swift_release();
          uint64_t v6 = v76;
          goto LABEL_80;
        }
        *(void *)&long long v84 = v40;
        *(void *)&long long v80 = v42;
        char v47 = static FormatAccessibilityContent.== infix(_:_:)(&v84, &v80);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release_n();
        swift_release_n();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v48 = v75;
        if ((v47 & 1) == 0) {
          goto LABEL_79;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release_n();
        swift_release_n();
        uint64_t v6 = v76;
LABEL_66:
        swift_release();
        swift_release();
LABEL_67:
        sub_1BFF5B7CC(v79, v77, v78);
        swift_release();
        sub_1BFF5B7CC(v48, v6, v14);
        swift_release();
        goto LABEL_6;
      }
      if (v37 != 2)
      {
LABEL_77:
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release_n();
        swift_release_n();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v48 = v75;
        uint64_t v6 = v76;
        goto LABEL_80;
      }
      if (*(void *)((v29 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v32 & 0x3FFFFFFFFFFFFFFFLL) + 0x10)
        && *(void *)((v29 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((v32 & 0x3FFFFFFFFFFFFFFFLL) + 0x18))
      {
        char v64 = 1;
      }
      else
      {
        char v64 = sub_1C1520A9C();
      }
      uint64_t v48 = v75;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release_n();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v6 = v76;
    }
    else
    {
      char v14 = v71;
      if (v37) {
        goto LABEL_77;
      }
      __int16 v60 = *(_WORD *)(v29 + 64);
      __int16 v61 = *(_WORD *)(v32 + 64);
      long long v62 = *(_OWORD *)(v29 + 32);
      long long v84 = *(_OWORD *)(v29 + 16);
      long long v85 = v62;
      long long v86 = *(_OWORD *)(v29 + 48);
      __int16 v87 = v60;
      long long v63 = *(_OWORD *)(v32 + 32);
      long long v80 = *(_OWORD *)(v32 + 16);
      long long v81 = v63;
      long long v82 = *(_OWORD *)(v32 + 48);
      __int16 v83 = v61;
      swift_retain();
      swift_retain();
      char v64 = _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v84, (uint64_t)&v80);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release_n();
      swift_release_n();
      uint64_t v48 = v75;
      uint64_t v6 = v76;
    }
    if ((v64 & 1) == 0) {
      goto LABEL_81;
    }
    goto LABEL_66;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v48 = v75;
  uint64_t v6 = v76;
  char v14 = v71;
LABEL_80:
  swift_release();
LABEL_81:
  swift_release();
  swift_release();
  sub_1BFF5B7CC(v79, v77, v78);
  swift_release();
  sub_1BFF5B7CC(v48, v6, v14);
LABEL_82:
  swift_release();
  return 0;
}

uint64_t sub_1C00E2D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v17 = 1;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v2 - 1;
      do
      {
        long long v7 = *(_OWORD *)(a1 + v5 + 48);
        uint64_t v8 = *(void *)(a1 + v5 + 64);
        uint64_t v9 = *(void *)(a1 + v5 + 72);
        char v10 = *(unsigned char *)(a1 + v5 + 80);
        uint64_t v11 = *(void *)(a1 + v5 + 120);
        v28[0] = *(_OWORD *)(a1 + v5 + 32);
        v28[1] = v7;
        uint64_t v29 = v8;
        uint64_t v30 = v9;
        char v31 = v10;
        long long v32 = *(_OWORD *)(a1 + v5 + 88);
        long long v33 = *(_OWORD *)(a1 + v5 + 104);
        uint64_t v34 = v11;
        long long v12 = *(_OWORD *)(a2 + v5 + 48);
        uint64_t v13 = *(void *)(a2 + v5 + 64);
        uint64_t v14 = *(void *)(a2 + v5 + 72);
        char v15 = *(unsigned char *)(a2 + v5 + 80);
        uint64_t v16 = *(void *)(a2 + v5 + 120);
        v21[0] = *(_OWORD *)(a2 + v5 + 32);
        v21[1] = v12;
        uint64_t v22 = v13;
        uint64_t v23 = v14;
        char v24 = v15;
        long long v25 = *(_OWORD *)(a2 + v5 + 88);
        long long v26 = *(_OWORD *)(a2 + v5 + 104);
        uint64_t v27 = v16;
        char v17 = sub_1C0FC17BC((uint64_t)v28, (uint64_t)v21);
        BOOL v19 = v6-- != 0;
        if ((v17 & 1) == 0) {
          break;
        }
        v5 += 96;
      }
      while (v19);
    }
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1C00E2E3C(uint64_t a1, uint64_t a2)
{
  return sub_1C00E5AD0(a1, a2, (uint64_t (*)(void *, void *))static FormatLayeredMediaNodeContent.== infix(_:_:), (uint64_t (*)(uint64_t, uint64_t))sub_1C00E2E3C);
}

uint64_t sub_1C00E2E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    for (uint64_t i = (void *)(a2 + 40); ; i += 2)
    {
      BOOL v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      v3 += 2;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1C00E2EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      int v7 = *v3++;
      int v6 = v7;
      int v9 = *v4++;
      int v8 = v9;
      if (v6 == 1) {
        uint64_t v10 = 6578544;
      }
      else {
        uint64_t v10 = 6513005;
      }
      if (v6) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = 0x656E6F6870;
      }
      if (v6) {
        unint64_t v12 = 0xE300000000000000;
      }
      else {
        unint64_t v12 = 0xE500000000000000;
      }
      if (v8 == 1) {
        uint64_t v13 = 6578544;
      }
      else {
        uint64_t v13 = 6513005;
      }
      if (v8) {
        uint64_t v14 = v13;
      }
      else {
        uint64_t v14 = 0x656E6F6870;
      }
      if (v8) {
        unint64_t v15 = 0xE300000000000000;
      }
      else {
        unint64_t v15 = 0xE500000000000000;
      }
      if (v11 == v14 && v12 == v15)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v5 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00E3018(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned char *)(a1 + 32);
    uint64_t v4 = (unsigned char *)(a2 + 32);
    do
    {
      if (*v3) {
        uint64_t v5 = 0x746C7561666564;
      }
      else {
        uint64_t v5 = 1685217635;
      }
      if (*v3) {
        unint64_t v6 = 0xE700000000000000;
      }
      else {
        unint64_t v6 = 0xE400000000000000;
      }
      if (*v4) {
        uint64_t v7 = 0x746C7561666564;
      }
      else {
        uint64_t v7 = 1685217635;
      }
      if (*v4) {
        unint64_t v8 = 0xE700000000000000;
      }
      else {
        unint64_t v8 = 0xE400000000000000;
      }
      if (v5 == v7 && v6 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      ++v3;
      ++v4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00E3118(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      while (1)
      {
        unsigned int v7 = *v3++;
        uint64_t v6 = v7;
        unsigned int v9 = *v4++;
        uint64_t v8 = v9;
        unint64_t v10 = 0xEB00000000736563;
        unint64_t v11 = 0x6170736574696877;
        switch(v6)
        {
          case 1:
            unint64_t v11 = 0xD000000000000016;
            unint64_t v10 = 0x80000001C1601E60;
            break;
          case 2:
            unint64_t v10 = 0xE800000000000000;
            unint64_t v11 = 0x73656E696C77656ELL;
            break;
          case 3:
            unint64_t v11 = 0xD000000000000011;
            unint64_t v10 = 0x80000001C1601E80;
            break;
          case 4:
            unint64_t v11 = 0x446C616D69636564;
            unint64_t v10 = 0xED00007374696769;
            break;
          case 5:
            unint64_t v10 = 0xE700000000000000;
            unint64_t v11 = 0x7372657474656CLL;
            break;
          case 6:
            unint64_t v10 = 0x80000001C1601EB0;
            goto LABEL_15;
          case 7:
            unint64_t v10 = 0x80000001C1601ED0;
LABEL_15:
            unint64_t v11 = 0xD000000000000010;
            break;
          default:
            break;
        }
        unint64_t v12 = 0x6170736574696877;
        unint64_t v13 = 0xEB00000000736563;
        switch(v8)
        {
          case 1:
            unint64_t v12 = 0xD000000000000016;
            unint64_t v13 = 0x80000001C1601E60;
            break;
          case 2:
            unint64_t v13 = 0xE800000000000000;
            unint64_t v12 = 0x73656E696C77656ELL;
            break;
          case 3:
            unint64_t v12 = 0xD000000000000011;
            unint64_t v13 = 0x80000001C1601E80;
            break;
          case 4:
            unint64_t v12 = 0x446C616D69636564;
            unint64_t v13 = 0xED00007374696769;
            break;
          case 5:
            unint64_t v13 = 0xE700000000000000;
            unint64_t v12 = 0x7372657474656CLL;
            break;
          case 6:
            unint64_t v13 = 0x80000001C1601EB0;
            goto LABEL_24;
          case 7:
            unint64_t v13 = 0x80000001C1601ED0;
LABEL_24:
            unint64_t v12 = 0xD000000000000010;
            break;
          default:
            break;
        }
        if (v11 != v12 || v10 != v13) {
          break;
        }
        swift_bridgeObjectRelease_n();
        if (!--v2) {
          return 1;
        }
      }
      char v5 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0) {
        return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00E33F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (void *)(a2 + 40);
  for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    uint64_t v9 = *i;
    unint64_t v10 = *(v3 - 1);
    uint64_t v11 = *v3;
    uint64_t v65 = *(i - 1);
    unint64_t v64 = v10;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if ((static FormatExpression.== infix(_:_:)(&v65, &v64) & 1) == 0)
    {
LABEL_56:
      swift_release();
      swift_release();
      swift_release();
LABEL_60:
      swift_release();
      return 0;
    }
    if ((v9 & 0x8000000000000000) == 0) {
      break;
    }
    if ((v11 & 0x8000000000000000) == 0) {
      goto LABEL_56;
    }
    uint64_t v7 = *(void *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v63 = *(void *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v21 = *(void *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    int v22 = *(unsigned __int8 *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v23 = *(void *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v24 = *(void *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v60 = *(void *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    uint64_t v61 = v21;
    int v25 = *(unsigned __int8 *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    if (!v22)
    {
      uint64_t v26 = v7;
      if (v25) {
        goto LABEL_64;
      }
      swift_retain();
      swift_retain();
      unsigned __int8 v27 = v63;
      sub_1C00F6E04(v63, v26, v61, 0);
      sub_1C00F6E04(v23, v24, v60, 0);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release_n();
      goto LABEL_34;
    }
    if (v22 == 1)
    {
      uint64_t v26 = v7;
      if (v25 != 1) {
        goto LABEL_64;
      }
      swift_retain();
      swift_retain();
      unsigned __int8 v27 = v63;
      sub_1C00F6E04(v63, v26, v61, 1);
      sub_1C00F6E04(v23, v24, v60, 1);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release_n();
      if ((v63 & 0x80) == 0)
      {
        if ((v23 & 0x80) != 0) {
          return 0;
        }
LABEL_34:
        if (v23 != v27) {
          return 0;
        }
        goto LABEL_7;
      }
      if (v23 & 0x80) == 0 || ((v23 ^ v63)) {
        return 0;
      }
    }
    else
    {
      if (v25 != 2)
      {
        uint64_t v26 = v7;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_64:
        swift_retain();
        swift_retain();
        sub_1C00F6DB8(v23, v24, v60, v25);
        sub_1C00F6E04(v63, v26, v61, v22);
        uint64_t v51 = v23;
        uint64_t v52 = v24;
        uint64_t v53 = v60;
        char v54 = v25;
        goto LABEL_65;
      }
      uint64_t v40 = v23;
      if (v63 != v23 || v7 != v24)
      {
        uint64_t v5 = v7;
        char v6 = sub_1C1520A9C();
        uint64_t v7 = v5;
        if ((v6 & 1) == 0)
        {
          swift_retain();
          swift_retain();
          sub_1C00F6DB8(v40, v24, v60, 2);
          sub_1C00F6DB8(v63, v5, v61, 2);
          sub_1C00F6E04(v63, v5, v61, 2);
          uint64_t v51 = v40;
          uint64_t v52 = v24;
          uint64_t v53 = v60;
          char v54 = 2;
LABEL_65:
          sub_1C00F6E04(v51, v52, v53, v54);
          swift_release();
          swift_release();
          swift_release_n();
          goto LABEL_68;
        }
      }
      uint64_t v8 = v7;
      sub_1C00F6DB8(v40, v24, v60, 2);
      sub_1C00F6DB8(v63, v8, v61, 2);
      swift_retain();
      swift_retain();
      sub_1C00F6DB8(v40, v24, v60, 2);
      sub_1C00F6DB8(v63, v8, v61, 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v58 = sub_1C00E3FD8(v61, v60);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C00F6E04(v63, v8, v61, 2);
      sub_1C00F6E04(v40, v24, v60, 2);
      sub_1C00F6E04(v40, v24, v60, 2);
      sub_1C00F6E04(v63, v8, v61, 2);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release_n();
      if ((v58 & 1) == 0) {
        return 0;
      }
    }
LABEL_7:
    v3 += 2;
    if (!--v2) {
      return 1;
    }
  }
  if (v11 < 0) {
    goto LABEL_56;
  }
  uint64_t v59 = v2;
  long long v57 = v3;
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(v11 + 16);
  uint64_t v15 = *(void *)(v11 + 24);
  uint64_t v62 = v15 & 0x7FFFFFFFFFFFFFFFLL;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if ((sub_1C00E33F0(v12, v14) & 1) == 0)
  {
LABEL_57:
    swift_release();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v13 & 0x8000000000000000) == 0)
  {
    if (v15 < 0) {
      goto LABEL_57;
    }
    uint64_t v17 = *(void *)(v13 + 16);
    uint64_t v16 = *(void *)(v13 + 24);
    uint64_t v19 = *(void *)(v15 + 16);
    unint64_t v18 = *(void *)(v15 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if ((sub_1C00E33F0(v17, v19) & 1) == 0)
    {
      swift_release();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_59:
      swift_release();
      goto LABEL_60;
    }
    uint64_t v65 = v16;
    unint64_t v64 = v18;
    char v20 = static FormatVideoPlayerContent.== infix(_:_:)(&v65, &v64);
    swift_release();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      goto LABEL_59;
    }
    swift_release();
    swift_release();
    uint64_t v2 = v59;
    goto LABEL_7;
  }
  if ((v15 & 0x8000000000000000) == 0) {
    goto LABEL_57;
  }
  uint64_t v28 = *(void *)((v13 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v29 = *(void *)((v13 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v30 = *(void *)((v13 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
  int v31 = *(unsigned __int8 *)((v13 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
  uint64_t v32 = *(void *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v33 = *(void *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v34 = *(void *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
  int v35 = *(unsigned __int8 *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
  if (!v31)
  {
    uint64_t v36 = v29;
    uint64_t v37 = *(void *)(v62 + 32);
    uint64_t v38 = *(void *)(v62 + 16);
    if (*(unsigned char *)(v62 + 40)) {
      goto LABEL_67;
    }
    uint64_t v41 = v28;
    swift_retain();
    swift_retain();
    sub_1C00F6E04(v41, v36, v30, 0);
    sub_1C00F6E04(v38, v33, v37, 0);
    swift_release();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    uint64_t v3 = v57;
    if (v38 != v41) {
      return 0;
    }
    goto LABEL_7;
  }
  if (v31 == 1)
  {
    uint64_t v36 = v29;
    uint64_t v37 = *(void *)(v62 + 32);
    uint64_t v38 = *(void *)(v62 + 16);
    if (v35 != 1) {
      goto LABEL_67;
    }
    uint64_t v39 = v28;
    swift_retain();
    swift_retain();
    sub_1C00F6E04(v39, v36, v30, 1);
    sub_1C00F6E04(v38, v33, v37, 1);
    swift_release();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    if ((v39 & 0x80) != 0)
    {
      uint64_t v3 = v57;
      if (v38 & 0x80) == 0 || ((v38 ^ v39)) {
        return 0;
      }
    }
    else
    {
      uint64_t v3 = v57;
      if ((v38 & 0x80) != 0 || v38 != v39) {
        return 0;
      }
    }
    goto LABEL_7;
  }
  if (v35 == 2)
  {
    uint64_t v42 = v28;
    if (v28 != v32 || v29 != v33)
    {
      uint64_t v43 = v29;
      uint64_t v44 = *(void *)(v62 + 16);
      char v45 = sub_1C1520A9C();
      uint64_t v29 = v43;
      uint64_t v32 = v44;
      if ((v45 & 1) == 0)
      {
        swift_retain();
        swift_retain();
        sub_1C00F6DB8(v44, v33, v34, 2);
        sub_1C00F6DB8(v42, v43, v30, 2);
        sub_1C00F6E04(v42, v43, v30, 2);
        sub_1C00F6E04(v44, v33, v34, 2);
        swift_release();
        swift_release();
        swift_release_n();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        goto LABEL_68;
      }
    }
    uint64_t v46 = v29;
    uint64_t v47 = v32;
    sub_1C00F6DB8(v32, v33, v34, 2);
    sub_1C00F6DB8(v42, v46, v30, 2);
    swift_retain();
    swift_retain();
    sub_1C00F6DB8(v47, v33, v34, 2);
    sub_1C00F6DB8(v42, v46, v30, 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v48 = v34;
    char v49 = sub_1C00E3FD8(v30, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C00F6E04(v42, v46, v30, 2);
    sub_1C00F6E04(v47, v33, v48, 2);
    sub_1C00F6E04(v47, v33, v48, 2);
    sub_1C00F6E04(v42, v46, v30, 2);
    swift_release();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    uint64_t v3 = v57;
    uint64_t v2 = v59;
    if ((v49 & 1) == 0) {
      return 0;
    }
    goto LABEL_7;
  }
  uint64_t v37 = *(void *)(v62 + 32);
  uint64_t v38 = *(void *)(v62 + 16);
  uint64_t v55 = v28;
  uint64_t v36 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = v55;
LABEL_67:
  uint64_t v56 = v28;
  swift_retain();
  swift_retain();
  sub_1C00F6DB8(v38, v33, v37, v35);
  sub_1C00F6E04(v56, v36, v30, v31);
  sub_1C00F6E04(v38, v33, v37, v35);
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
LABEL_68:
  swift_release_n();
  return 0;
}

uint64_t sub_1C00E3FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  while (1)
  {
    uint64_t v6 = *(void *)(v4 + 8 * v3);
    uint64_t v7 = *(void *)(v5 + 8 * v3);
    if (v6) {
      break;
    }
    if (v7)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      return 0;
    }
    swift_bridgeObjectRelease_n();
LABEL_5:
    if (++v3 == v2) {
      return 1;
    }
  }
  if (!v7) {
    goto LABEL_29;
  }
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8 != *(void *)(v7 + 16)) {
    return 0;
  }
  if (v8) {
    BOOL v9 = v6 == v7;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9) {
    goto LABEL_5;
  }
  unint64_t v10 = (uint64_t *)(v7 + 48);
  uint64_t v11 = (uint64_t *)(v6 + 48);
  while (1)
  {
    uint64_t v12 = *v11;
    uint64_t v13 = *v10;
    BOOL v14 = *(v11 - 2) == *(v10 - 2) && *(v11 - 1) == *(v10 - 1);
    if (!v14 && (sub_1C1520A9C() & 1) == 0) {
      return 0;
    }
    BOOL v15 = *(void *)(v12 + 16) == *(void *)(v13 + 16) && *(void *)(v12 + 24) == *(void *)(v13 + 24);
    if (!v15 && (sub_1C1520A9C() & 1) == 0) {
      return 0;
    }
    v10 += 3;
    v11 += 3;
    if (!--v8) {
      goto LABEL_5;
    }
  }
}

uint64_t sub_1C00E410C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 48);
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v6 = *v3;
      BOOL v7 = *(v4 - 2) == *(v3 - 2) && *(v4 - 1) == *(v3 - 1);
      if (!v7 && (sub_1C1520A9C() & 1) == 0) {
        return 0;
      }
      if (v5 < 0)
      {
        if ((v6 & 0x8000000000000000) == 0) {
          return 0;
        }
        uint64_t v8 = v5 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v9 = *(void *)((v5 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v10 = *(void *)(v8 + 24);
        uint64_t v11 = v6 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v12 = *(void *)((v6 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v13 = *(void *)(v11 + 24);
        if (v9 < 0)
        {
          if ((v12 & 0x8000000000000000) == 0)
          {
            swift_retain();
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_release();
            swift_release();
            goto LABEL_50;
          }
          uint64_t v43 = *(void *)(v8 + 24);
          uint64_t v14 = v9 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v15 = *(void *)(v14 + 16);
          uint64_t v42 = *(void *)(v14 + 24);
          uint64_t v16 = v12 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v18 = *(void *)(v16 + 16);
          uint64_t v17 = *(void *)(v16 + 24);
          uint64_t v41 = v13;
          if (v15 < 0)
          {
            if ((v18 & 0x8000000000000000) == 0)
            {
              swift_retain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_release();
              goto LABEL_48;
            }
            uint64_t v20 = v15 & 0x7FFFFFFFFFFFFFFFLL;
            uint64_t v21 = *(void *)(v20 + 16);
            uint64_t v38 = *(void *)(v20 + 24);
            uint64_t v22 = v18 & 0x7FFFFFFFFFFFFFFFLL;
            uint64_t v23 = *(void *)(v22 + 16);
            uint64_t v24 = *(void *)(v22 + 24);
            uint64_t v40 = *(void *)(v16 + 24);
            if (v21 < 0)
            {
              if ((v23 & 0x8000000000000000) == 0)
              {
                swift_retain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_release();
                goto LABEL_47;
              }
              uint64_t v27 = v21 & 0x7FFFFFFFFFFFFFFFLL;
              uint64_t v28 = *(void *)(v27 + 16);
              uint64_t v29 = *(void *)(v27 + 24);
              uint64_t v30 = *(void *)((v23 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v31 = *(void *)((v23 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
              v45[0] = v28;
              v45[1] = v29;
              v44[0] = v30;
              v44[1] = v31;
              uint64_t v36 = v29;
              uint64_t v37 = v24;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              if ((static FormatPuzzleEmbedNodeContent.== infix(_:_:)(v45, v44) & 1) == 0)
              {
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_47;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v35 = sub_1C00E410C(v36, v31);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              if ((v35 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
LABEL_47:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_bridgeObjectRelease();
LABEL_48:
                swift_release();
                goto LABEL_49;
              }
              uint64_t v26 = v38;
              uint64_t v25 = v37;
            }
            else
            {
              if (v23 < 0)
              {
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain();
                goto LABEL_47;
              }
              uint64_t v25 = *(void *)(v22 + 24);
              swift_bridgeObjectRetain();
              swift_retain();
              swift_retain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              uint64_t v26 = v38;
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v39 = sub_1C00E410C(v26, v25);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            if ((v39 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
LABEL_49:
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_50;
            }
            uint64_t v19 = v42;
            uint64_t v17 = v40;
          }
          else
          {
            if (v18 < 0)
            {
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              goto LABEL_48;
            }
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            uint64_t v19 = v42;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v32 = sub_1C00E410C(v19, v17);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          if ((v32 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_50;
          }
          uint64_t v10 = v43;
          uint64_t v13 = v41;
        }
        else
        {
          if (v12 < 0)
          {
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_release();
LABEL_50:
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v33 = sub_1C00E410C(v10, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if ((v33 & 1) == 0) {
          return 0;
        }
      }
      else if (v6 < 0)
      {
        return 0;
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00E4AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  while (1)
  {
    uint64_t v6 = (void *)(v4 + 24 * v3);
    uint64_t v7 = v6[1];
    uint64_t v8 = v6[2];
    uint64_t v9 = (void *)(v5 + 24 * v3);
    uint64_t v10 = v9[2];
    BOOL v11 = *v6 == *v9 && v7 == v9[1];
    if (!v11 && (sub_1C1520A9C() & 1) == 0) {
      return 0;
    }
    uint64_t v12 = *(void *)(v8 + 16);
    if (v12 != *(void *)(v10 + 16)) {
      return 0;
    }
    if (v12 && v8 != v10) {
      break;
    }
LABEL_16:
    ++v3;
    uint64_t result = 1;
    if (v3 == v2) {
      return result;
    }
  }
  uint64_t v50 = v10 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v15 = 0;
  uint64_t v47 = v3;
  uint64_t v48 = v2;
  uint64_t v45 = v5;
  uint64_t v46 = v4;
  uint64_t v44 = v12;
  while (1)
  {
    if (v15 >= *(void *)(v10 + 16)) {
      goto LABEL_71;
    }
    uint64_t v16 = (uint64_t *)(v8 + 32 + 48 * v15);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = v16[2];
    uint64_t v55 = v16[3];
    uint64_t v52 = v16[4];
    uint64_t v53 = v16[5];
    unint64_t v51 = v15;
    uint64_t v20 = (void *)(v50 + 48 * v15);
    uint64_t v21 = v20[2];
    uint64_t v22 = v20[3];
    uint64_t v23 = v20[5];
    uint64_t v54 = v20[4];
    BOOL v24 = v17 == *v20 && v18 == v20[1];
    if (!v24 && (sub_1C1520A9C() & 1) == 0) {
      goto LABEL_60;
    }
    uint64_t v25 = *(void *)(v19 + 16);
    if (v25 != *(void *)(v21 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_63:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_64;
    }
    if (v25)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19 != v21)
      {
        uint64_t v43 = v7;
        uint64_t v49 = v10;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v42 = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *(void *)(v19 + v26 + 48);
          uint64_t v28 = v21;
          uint64_t v29 = v21 + v26;
          uint64_t v30 = *(void *)(v21 + v26 + 32);
          uint64_t v31 = *(void *)(v21 + v26 + 40);
          uint64_t v32 = *(void *)(v29 + 48);
          BOOL v33 = *(void *)(v19 + v26 + 32) == v30 && *(void *)(v19 + v26 + 40) == v31;
          if (!v33 && (sub_1C1520A9C() & 1) == 0) {
            break;
          }
          unint64_t v34 = v32 & 0xF000000000000007;
          if ((~v27 & 0xF000000000000007) != 0)
          {
            if (v34 == 0xF000000000000007)
            {
LABEL_61:
              sub_1BFDC11A4(v27);
              sub_1BFDC11A4(v32);
              sub_1BFDC11BC(v27);
              sub_1BFDC11BC(v32);
              break;
            }
            uint64_t v56 = v32;
            v57[0] = v27;
            sub_1BFDC11A4(v32);
            sub_1BFDC11A4(v27);
            sub_1BFDC11A4(v32);
            sub_1BFDC11A4(v27);
            sub_1BFDC11A4(v27);
            sub_1BFDC11A4(v32);
            swift_bridgeObjectRetain();
            sub_1BFDC11A4(v27);
            swift_bridgeObjectRetain();
            sub_1BFDC11A4(v32);
            char v35 = static FormatOptionValue.== infix(_:_:)(v57, (unint64_t *)&v56);
            sub_1BFDC11BC(v27);
            sub_1BFDC11BC(v32);
            sub_1BFDC11BC(v32);
            sub_1BFDC11BC(v27);
            sub_1BFDC11BC(v32);
            sub_1BFDC11BC(v27);
            swift_bridgeObjectRelease();
            sub_1BFDC11BC(v32);
            swift_bridgeObjectRelease();
            sub_1BFDC11BC(v27);
            if ((v35 & 1) == 0) {
              break;
            }
          }
          else
          {
            if (v34 != 0xF000000000000007) {
              goto LABEL_61;
            }
            sub_1BFDC11BC(v27);
            sub_1BFDC11BC(v32);
          }
          v26 += 24;
          --v25;
          uint64_t v21 = v28;
          if (!v25)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v10 = v49;
            uint64_t v7 = v43;
            uint64_t v23 = v42;
            goto LABEL_43;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_63;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_43:
      uint64_t v36 = v55;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v36 = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v37 = *(void *)(v36 + 16);
    if (v37 != *(void *)(v22 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_60:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_64:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v37 && v36 != v22) {
      break;
    }
LABEL_54:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v40 = sub_1C00E52B8(v52, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0) {
      goto LABEL_63;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v41 = sub_1BFEFAE14(v53, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease_n();
    if ((v41 & 1) == 0) {
      goto LABEL_60;
    }
    unint64_t v15 = v51 + 1;
    uint64_t v5 = v45;
    uint64_t v3 = v47;
    uint64_t v2 = v48;
    uint64_t v4 = v46;
    if (v51 + 1 == v44)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v39 = 0;
  while (1)
  {
    v57[0] = *(void *)(v55 + 8 * v39 + 32);
    if (v39 >= *(void *)(v22 + 16)) {
      break;
    }
    uint64_t v56 = *(void *)(v22 + 8 * v39 + 32);
    uint64_t result = static FormatSlotTransform.== infix(_:_:)((unint64_t *)v57, (unint64_t *)&v56);
    if ((result & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_60;
    }
    if (v37 == ++v39)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_1C00E52B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentSlotItemObject();
  uint64_t v49 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = type metadata accessor for FormatContentSlotItem();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v17 || a1 == a2) {
    return 1;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = 0;
  uint64_t v47 = a2 + v18;
  uint64_t v48 = v19;
  uint64_t v46 = *(void *)(v14 + 72);
  uint64_t v43 = v10;
  uint64_t v44 = v17;
  while (1)
  {
    uint64_t v22 = v46 * v20;
    sub_1C00F70EC(v48 + v46 * v20, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
    sub_1C00F70EC(v47 + v22, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
    if ((static FormatContentSlotItemObject.== infix(_:_:)(v16, v12) & 1) == 0) {
      goto LABEL_25;
    }
    uint64_t v23 = *(int *)(v10 + 20);
    uint64_t v24 = *(void *)&v16[v23];
    uint64_t v25 = *(void *)&v16[v23 + 8];
    uint64_t v26 = (uint64_t *)&v12[v23];
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    if (v24) {
      break;
    }
    if (v27) {
      goto LABEL_29;
    }
LABEL_6:
    ++v20;
    sub_1C00F7154((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
    sub_1C00F7154((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
    uint64_t result = 1;
    if (v20 == v44) {
      return result;
    }
  }
  if (!v27)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_29:
    sub_1BFDB3920(v27);
    sub_1BFDB3960(v24);
    uint64_t v37 = v27;
    goto LABEL_24;
  }
  sub_1BFDB3920(v24);
  sub_1BFDB3920(v24);
  sub_1BFDB3920(v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v27;
  char v30 = sub_1C00E57C0(v24, v27);
  swift_bridgeObjectRelease();
  uint64_t v45 = v29;
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0 || (uint64_t v31 = *(void *)(v25 + 16), v31 != *(void *)(v28 + 16)))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFDB3960(v45);
    uint64_t v37 = v24;
LABEL_24:
    sub_1BFDB3960(v37);
LABEL_25:
    sub_1C00F7154((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
    sub_1C00F7154((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
    return 0;
  }
  if (!v31 || v25 == v28)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFDB3960(v45);
    sub_1BFDB3960(v24);
    uint64_t v10 = v43;
    goto LABEL_6;
  }
  uint64_t v39 = v20;
  uint64_t v40 = v24;
  char v41 = v16;
  uint64_t v42 = v12;
  uint64_t v32 = v49;
  unint64_t v33 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v34 = 0;
  uint64_t v35 = *(void *)(v32 + 72);
  while (1)
  {
    uint64_t result = sub_1C00F70EC(v25 + v33, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
    if (v34 >= *(void *)(v28 + 16)) {
      break;
    }
    sub_1C00F70EC(v28 + v33, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
    char v36 = static FormatContentSlotItemObject.== infix(_:_:)(v9, v6);
    sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
    sub_1C00F7154((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v41;
      uint64_t v12 = v42;
      uint64_t v24 = v40;
      goto LABEL_23;
    }
    ++v34;
    v33 += v35;
    if (v31 == v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v41;
      uint64_t v12 = v42;
      uint64_t v20 = v39;
      uint64_t v24 = v40;
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00E576C(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject, (uint64_t (*)(char *, char *))static FormatContentSlotItemObject.== infix(_:_:), (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
}

uint64_t sub_1C00E57C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 48);
    for (uint64_t i = (uint64_t *)(a1 + 48); ; i += 3)
    {
      uint64_t v5 = *i;
      uint64_t v6 = *v3;
      BOOL v7 = *(i - 2) == *(v3 - 2) && *(i - 1) == *(v3 - 1);
      if (!v7 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      unint64_t v8 = v6 & 0xF000000000000007;
      if ((~v5 & 0xF000000000000007) != 0)
      {
        if (v8 == 0xF000000000000007)
        {
LABEL_18:
          sub_1BFDC11A4(v5);
          sub_1BFDC11A4(v6);
          sub_1BFDC11BC(v5);
          sub_1BFDC11BC(v6);
          return 0;
        }
        uint64_t v11 = v6;
        uint64_t v12 = v5;
        sub_1BFDC11A4(v6);
        sub_1BFDC11A4(v5);
        sub_1BFDC11A4(v6);
        sub_1BFDC11A4(v5);
        sub_1BFDC11A4(v5);
        sub_1BFDC11A4(v6);
        swift_bridgeObjectRetain();
        sub_1BFDC11A4(v5);
        swift_bridgeObjectRetain();
        sub_1BFDC11A4(v6);
        char v9 = static FormatOptionValue.== infix(_:_:)(&v12, (unint64_t *)&v11);
        sub_1BFDC11BC(v5);
        sub_1BFDC11BC(v6);
        sub_1BFDC11BC(v6);
        sub_1BFDC11BC(v5);
        sub_1BFDC11BC(v6);
        sub_1BFDC11BC(v5);
        swift_bridgeObjectRelease();
        sub_1BFDC11BC(v6);
        swift_bridgeObjectRelease();
        sub_1BFDC11BC(v5);
        if ((v9 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v8 != 0xF000000000000007) {
          goto LABEL_18;
        }
        sub_1BFDC11BC(v5);
        sub_1BFDC11BC(v6);
      }
      v3 += 3;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C00E5984(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a2 + 48);
    uint64_t v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      int v5 = *v4;
      int v6 = *v3;
      if (*((void *)v4 - 2) == *((void *)v3 - 2) && *((void *)v4 - 1) == *((void *)v3 - 1))
      {
        if (v5 != v6) {
          return 0;
        }
      }
      else
      {
        char v8 = sub_1C1520A9C();
        uint64_t result = 0;
        if (v8 & 1) == 0 || ((v5 ^ v6)) {
          return result;
        }
      }
      v3 += 24;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00E5A38(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, (uint64_t (*)(void))sub_1BFEBC130, (uint64_t (*)(void))sub_1BFEBC130, (uint64_t (*)(char *, char *))sub_1C0DBDBFC, (uint64_t (*)(void))sub_1BFEBC130);
}

uint64_t sub_1C00E5A8C(uint64_t a1, uint64_t a2)
{
  return sub_1C00F0630(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))_s8NewsFeed20FormatColorProcessorO2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1C00E5AA4(uint64_t a1, uint64_t a2)
{
  return sub_1C00E5AD0(a1, a2, (uint64_t (*)(void *, void *))static FormatIssueCoverContent.== infix(_:_:), (uint64_t (*)(uint64_t, uint64_t))sub_1C00E5AA4);
}

uint64_t sub_1C00E5AD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *, void *), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v4 && a1 != a2)
  {
    int v5 = (uint64_t *)(a2 + 48);
    int v6 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v7 = *v6;
      uint64_t v8 = *v5;
      BOOL v9 = *(v6 - 2) == *(v5 - 2) && *(v6 - 1) == *(v5 - 1);
      if (!v9 && (sub_1C1520A9C() & 1) == 0) {
        return 0;
      }
      if (v7 < 0)
      {
        if ((v8 & 0x8000000000000000) == 0) {
          return 0;
        }
        uint64_t v10 = *(void *)((v7 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v12 = *(void *)((v8 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v11 = *(void *)((v8 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v42 = *(void *)((v7 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
        if (v10 < 0)
        {
          if ((v12 & 0x8000000000000000) == 0)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_65;
          }
          uint64_t v14 = *(void *)((v10 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v38 = *(void *)((v10 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v15 = *(void *)((v12 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v37 = *(void *)((v12 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
          if (v14 < 0)
          {
            if ((v15 & 0x8000000000000000) == 0)
            {
              swift_retain();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_release_n();
              swift_release();
              goto LABEL_63;
            }
            uint64_t v17 = *(void *)((v14 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v36 = *(void *)((v14 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v18 = *(void *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v31 = *(void *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
            if (v17 < 0)
            {
              if ((v18 & 0x8000000000000000) == 0)
              {
                swift_retain();
                swift_retain_n();
                swift_retain_n();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_release_n();
                swift_release();
                goto LABEL_61;
              }
              uint64_t v20 = *(void *)((v17 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
              uint64_t v21 = *(void *)((v18 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v22 = *(void *)((v18 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
              v44[0] = *(void *)((v17 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
              v44[1] = v20;
              v43[0] = v21;
              v43[1] = v22;
              uint64_t v28 = v20;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              uint64_t v19 = v31;
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              if ((a3(v44, v43) & 1) == 0)
              {
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_61;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v27 = a4(v28, v22);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              if ((v27 & 1) == 0) {
                goto LABEL_42;
              }
            }
            else
            {
              if (v18 < 0)
              {
                swift_retain_n();
                swift_retain_n();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_release_n();
                goto LABEL_61;
              }
              char v30 = *(unsigned char *)(v17 + 16);
              char v29 = *(unsigned char *)(v18 + 16);
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v19 = v31;
              swift_bridgeObjectRetain();
              if (v30)
              {
                if ((v29 & 1) == 0) {
                  goto LABEL_42;
                }
              }
              else if (v29)
              {
LABEL_42:
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
LABEL_61:
                swift_release();
LABEL_62:
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
LABEL_63:
                swift_release();
LABEL_64:
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
LABEL_65:
                swift_release();
LABEL_66:
                swift_release();
                swift_bridgeObjectRelease();
                return 0;
              }
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v23 = v19;
            uint64_t v13 = a4;
            char v32 = a4(v36, v23);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_release();
            swift_release();
            uint64_t v16 = v37;
            if ((v32 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_62;
            }
          }
          else
          {
            if (v15 < 0)
            {
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_release_n();
              goto LABEL_63;
            }
            char v35 = *(unsigned char *)(v14 + 16);
            char v34 = *(unsigned char *)(v15 + 16);
            swift_retain_n();
            swift_retain_n();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v16 = v37;
            swift_bridgeObjectRetain();
            if (v35)
            {
              uint64_t v13 = a4;
              if ((v34 & 1) == 0) {
                goto LABEL_54;
              }
            }
            else
            {
              uint64_t v13 = a4;
              if (v34)
              {
LABEL_54:
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_63;
              }
            }
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v24 = v13(v38, v16);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
          if ((v24 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_64;
          }
        }
        else
        {
          if (v12 < 0)
          {
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_66;
          }
          char v40 = *(unsigned char *)(v10 + 16);
          char v39 = *(unsigned char *)(v12 + 16);
          swift_retain_n();
          swift_retain_n();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v40)
          {
            uint64_t v13 = a4;
            if ((v39 & 1) == 0) {
              goto LABEL_50;
            }
          }
          else
          {
            uint64_t v13 = a4;
            if (v39)
            {
LABEL_50:
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_65;
            }
          }
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v25 = v13(v42, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_release();
        if ((v25 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v8 < 0) {
          return 0;
        }
        if (*(unsigned char *)(v7 + 16))
        {
          if ((*(unsigned char *)(v8 + 16) & 1) == 0) {
            return 0;
          }
        }
        else if (*(unsigned char *)(v8 + 16))
        {
          return 0;
        }
      }
      v5 += 3;
      v6 += 3;
      --v4;
    }
    while (v4);
  }
  return 1;
}

uint64_t sub_1C00E65AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  uint64_t v140 = a2 + 32;
  while (1)
  {
    sub_1C00F5BA4(v4 + 136 * v3, (uint64_t)v160);
    sub_1C00F5BA4(v5 + 136 * v3, (uint64_t)v161);
    sub_1C00F5BA4((uint64_t)v160, (uint64_t)v162);
    sub_1C00F5BA4((uint64_t)v161, (uint64_t)&v163);
    sub_1C00F5BA4((uint64_t)v160, (uint64_t)v164);
    int v8 = sub_1C00F5C00((uint64_t)v164);
    if (v8) {
      break;
    }
    uint64_t v20 = sub_1C00F5EAC((uint64_t)v164);
    sub_1C00F5BA4((uint64_t)v161, (uint64_t)v151);
    if (sub_1C00F5C00((uint64_t)v151))
    {
      sub_1C00F5BA4((uint64_t)v160, (uint64_t)v159);
      unint64_t v133 = (uint64_t *)sub_1C00F5EAC((uint64_t)v159);
      sub_1C00F5BA4((uint64_t)v160, (uint64_t)v155);
      uint64_t v134 = (uint64_t *)sub_1C00F5EAC((uint64_t)v155);
      sub_1C00F6190(v134);
      sub_1C00F6190(v133);
      goto LABEL_234;
    }
    uint64_t v21 = sub_1C00F5EAC((uint64_t)v151);
    sub_1C00F61EC(v20, (uint64_t)v154);
    sub_1C00F61EC(v21, (uint64_t)v158);
    sub_1C00F6034((uint64_t)v154, (uint64_t)v155);
    sub_1C00F6034((uint64_t)v158, (uint64_t)&v156);
    sub_1C00F6034((uint64_t)v154, (uint64_t)v159);
    if (sub_1C00F6090((uint64_t)v159) != 1)
    {
      uint64_t v43 = (uint64_t *)sub_1C00F609C((uint64_t)v159);
      uint64_t v44 = *v43;
      uint64_t v45 = v43[1];
      uint64_t v46 = v43[2];
      uint64_t v47 = v43[3];
      uint64_t v48 = v43[4];
      uint64_t v49 = v43[5];
      uint64_t v50 = v43[6];
      uint64_t v51 = v43[7];
      sub_1C00F6034((uint64_t)v158, (uint64_t)v153);
      int v52 = sub_1C00F6090((uint64_t)v153);
      uint64_t v53 = sub_1C00F609C((uint64_t)v153);
      if (v52 != 1)
      {
        uint64_t v54 = *(void *)v53;
        uint64_t v55 = *(void *)(v53 + 8);
        v150[0] = v44;
        v150[1] = v45;
        v150[2] = v46;
        v150[3] = v47;
        v150[4] = v48;
        v150[5] = v49;
        v150[6] = v50;
        v150[7] = v51;
        uint64_t v145 = v54;
        uint64_t v146 = v55;
        long long v56 = *(_OWORD *)(v53 + 32);
        long long v147 = *(_OWORD *)(v53 + 16);
        long long v148 = v56;
        long long v149 = *(_OWORD *)(v53 + 48);
        sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
        sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
        sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
        sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
        sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
        sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
        sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
        sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
        sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
        sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
        BOOL v57 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)v150, (uint64_t)&v145);
        sub_1C00F60AC((uint64_t)v155);
        sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
        sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
        sub_1C00F5C8C((uint64_t)v162);
        sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
        sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
        sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
        sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
        if (!v57) {
          return 0;
        }
        goto LABEL_10;
      }
LABEL_235:
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F60AC((uint64_t)v155);
LABEL_240:
      sub_1C00F5C8C((uint64_t)v162);
      goto LABEL_247;
    }
    uint64_t v22 = sub_1C00F609C((uint64_t)v159);
    sub_1C00F6034((uint64_t)v158, (uint64_t)v153);
    int v23 = sub_1C00F6090((uint64_t)v153);
    uint64_t v24 = sub_1C00F609C((uint64_t)v153);
    if (v23 != 1) {
      goto LABEL_235;
    }
    uint64_t v25 = v24;
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    if (*(double *)v22 != *(double *)v25 || *(double *)(v22 + 8) != *(double *)(v25 + 8))
    {
LABEL_229:
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      goto LABEL_230;
    }
    if (*(unsigned char *)(v22 + 48))
    {
      if ((*(unsigned char *)(v25 + 48) & 1) == 0
        || *(double *)(v22 + 16) != *(double *)(v25 + 16)
        || *(double *)(v22 + 24) != *(double *)(v25 + 24)
        || *(double *)(v22 + 32) != *(double *)(v25 + 32))
      {
        goto LABEL_229;
      }
      double v26 = *(double *)(v22 + 40);
      double v27 = *(double *)(v25 + 40);
    }
    else
    {
      if (*(unsigned char *)(v25 + 48)) {
        goto LABEL_229;
      }
      double v26 = *(double *)(v22 + 16);
      double v27 = *(double *)(v25 + 16);
    }
    if (v26 != v27 || *(double *)(v22 + 56) != *(double *)(v25 + 56) || *(double *)(v22 + 64) != *(double *)(v25 + 64)) {
      goto LABEL_229;
    }
    if (*(unsigned char *)(v22 + 104))
    {
      if ((*(unsigned char *)(v25 + 104) & 1) == 0
        || *(double *)(v22 + 72) != *(double *)(v25 + 72)
        || *(double *)(v22 + 80) != *(double *)(v25 + 80)
        || *(double *)(v22 + 88) != *(double *)(v25 + 88))
      {
        goto LABEL_229;
      }
      double v75 = *(double *)(v22 + 96);
      double v76 = *(double *)(v25 + 96);
    }
    else
    {
      if (*(unsigned char *)(v25 + 104)) {
        goto LABEL_229;
      }
      double v75 = *(double *)(v22 + 72);
      double v76 = *(double *)(v25 + 72);
    }
    if (v75 != v76) {
      goto LABEL_229;
    }
    uint64_t v77 = *(void *)(v22 + 112);
    uint64_t v78 = *(void *)(v25 + 112);
    uint64_t v79 = *(void *)(v77 + 16);
    if (v79 != *(void *)(v78 + 16)) {
      goto LABEL_229;
    }
    if (v79)
    {
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      if (v77 != v78)
      {
        long long v80 = (uint64_t *)(v77 + 32);
        long long v81 = (uint64_t *)(v78 + 32);
        while (1)
        {
          uint64_t v82 = *v80++;
          v150[0] = v82;
          uint64_t v83 = *v81++;
          uint64_t v145 = v83;
          if ((static FormatColor.== infix(_:_:)(v150, (unint64_t *)&v145) & 1) == 0) {
            break;
          }
          if (!--v79) {
            goto LABEL_76;
          }
        }
LABEL_230:
        sub_1C00F60AC((uint64_t)v155);
        goto LABEL_245;
      }
    }
    else
    {
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    }
LABEL_76:
    uint64_t v84 = *(void *)(v22 + 120);
    uint64_t v85 = *(void *)(v25 + 120);
    if (v84)
    {
      if (!v85) {
        goto LABEL_230;
      }
      uint64_t v86 = *(void *)(v84 + 16);
      if (v86 != *(void *)(v85 + 16)) {
        goto LABEL_230;
      }
      if (v86) {
        BOOL v87 = v84 == v85;
      }
      else {
        BOOL v87 = 1;
      }
      if (!v87)
      {
        if (*(double *)(v84 + 32) != *(double *)(v85 + 32)) {
          goto LABEL_230;
        }
        objc_super v98 = (double *)(v84 + 40);
        uint64_t v99 = (double *)(v85 + 40);
        uint64_t v100 = v86 - 1;
        while (v100)
        {
          double v101 = *v98++;
          double v102 = v101;
          double v103 = *v99++;
          --v100;
          if (v102 != v103) {
            goto LABEL_230;
          }
        }
      }
      sub_1C00F60AC((uint64_t)v155);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    }
    else
    {
      sub_1C00F60AC((uint64_t)v155);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      if (v85) {
        goto LABEL_246;
      }
    }
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5C8C((uint64_t)v162);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    uint64_t v5 = v140;
LABEL_10:
    if (++v3 == v2) {
      return 1;
    }
  }
  if (v8 != 1)
  {
    uint64_t v28 = sub_1C00F5EAC((uint64_t)v164);
    double v29 = *(double *)v28;
    int v30 = *(unsigned __int8 *)(v28 + 8);
    sub_1C00F5BA4((uint64_t)v161, (uint64_t)v155);
    if (sub_1C00F5C00((uint64_t)v155) != 2) {
      goto LABEL_234;
    }
    uint64_t v31 = sub_1C00F5EAC((uint64_t)v155);
    double v32 = *(double *)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    sub_1C00F5C8C((uint64_t)v162);
    if (v30)
    {
      switch(*(void *)&v29)
      {
        case 1:
          BOOL v6 = *(void *)&v32 == 1;
          break;
        case 2:
          BOOL v6 = *(void *)&v32 == 2;
          break;
        case 3:
          BOOL v6 = *(void *)&v32 == 3;
          break;
        case 4:
          BOOL v6 = *(void *)&v32 == 4;
          break;
        case 5:
          BOOL v6 = *(void *)&v32 == 5;
          break;
        case 6:
          BOOL v6 = *(void *)&v32 == 6;
          break;
        case 7:
          BOOL v6 = *(void *)&v32 == 7;
          break;
        case 8:
          BOOL v6 = *(void *)&v32 == 8;
          break;
        case 9:
          BOOL v6 = *(void *)&v32 == 9;
          break;
        case 0xALL:
          BOOL v6 = *(void *)&v32 == 10;
          break;
        case 0xBLL:
          BOOL v6 = *(void *)&v32 == 11;
          break;
        case 0xCLL:
          BOOL v6 = *(void *)&v32 == 12;
          break;
        case 0xDLL:
          BOOL v6 = *(void *)&v32 == 13;
          break;
        case 0xELL:
          BOOL v6 = *(void *)&v32 == 14;
          break;
        case 0xFLL:
          if (*(void *)&v32 > 0xEuLL) {
            char v115 = v33;
          }
          else {
            char v115 = 0;
          }
          if ((v115 & 1) == 0) {
            return 0;
          }
          goto LABEL_10;
        default:
          BOOL v6 = *(void *)&v32 == 0;
          break;
      }
      if (v6) {
        char v7 = v33;
      }
      else {
        char v7 = 0;
      }
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    else if ((v33 & 1) != 0 || v29 != v32)
    {
      return 0;
    }
    goto LABEL_10;
  }
  uint64_t v9 = sub_1C00F5EAC((uint64_t)v164);
  sub_1C00F5BA4((uint64_t)v161, (uint64_t)v159);
  if (sub_1C00F5C00((uint64_t)v159) != 1)
  {
    sub_1C00F5BA4((uint64_t)v160, (uint64_t)v151);
    uint64_t v131 = sub_1C00F5EAC((uint64_t)v151);
    sub_1C00F5BA4((uint64_t)v160, (uint64_t)v155);
    uint64_t v132 = sub_1C00F5EAC((uint64_t)v155);
    sub_1C00F5EBC(v132);
    sub_1C00F5EBC(v131);
LABEL_234:
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5C8C((uint64_t)v162);
    goto LABEL_248;
  }
  uint64_t v10 = sub_1C00F5EAC((uint64_t)v159);
  sub_1BFCF2D74(v9, (uint64_t)v155);
  sub_1BFCF2D74(v10, (uint64_t)&v157);
  sub_1BFCF2D74(v9, (uint64_t)v158);
  if (sub_1C00F5F20((uint64_t)v158) == 1)
  {
    uint64_t v11 = sub_1C00F5F2C((uint64_t)v158);
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 8);
    sub_1BFCF2D74(v10, (uint64_t)v151);
    int v14 = sub_1C00F5F20((uint64_t)v151);
    uint64_t v15 = sub_1C00F5F2C((uint64_t)v151);
    if (v14 != 1) {
      goto LABEL_239;
    }
    unint64_t v16 = *(void *)v15;
    uint64_t v17 = *(unsigned __int8 *)(v15 + 8);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    v154[0] = v12;
    v153[0] = v16;
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    if ((static FormatColor.== infix(_:_:)(v154, v153) & 1) == 0)
    {
      sub_1C00F5F3C((uint64_t)v155);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      goto LABEL_246;
    }
    unint64_t v18 = 0xE600000000000000;
    uint64_t v19 = 0x6C616D726F6ELL;
    switch(v13)
    {
      case 1:
        unint64_t v18 = 0xE800000000000000;
        uint64_t v19 = 0x796C7069746C756DLL;
        break;
      case 2:
        uint64_t v19 = 0x6E6565726373;
        break;
      case 3:
        unint64_t v18 = 0xE700000000000000;
        uint64_t v19 = 0x79616C7265766FLL;
        break;
      case 4:
        uint64_t v19 = 0x6E656B726164;
        break;
      case 5:
        unint64_t v18 = 0xE700000000000000;
        uint64_t v19 = 0x6E65746867696CLL;
        break;
      case 6:
        uint64_t v19 = 0x646F44726F6C6F63;
        unint64_t v18 = 0xEA00000000006567;
        break;
      case 7:
        uint64_t v19 = 0x727542726F6C6F63;
        goto LABEL_158;
      case 8:
        unsigned int v116 = 1952870259;
        goto LABEL_155;
      case 9:
        unsigned int v116 = 1685217640;
LABEL_155:
        uint64_t v19 = v116 | 0x6867694C00000000;
        unint64_t v18 = 0xE900000000000074;
        break;
      case 10:
        uint64_t v19 = 0x6E65726566666964;
        uint64_t v117 = 25955;
        goto LABEL_163;
      case 11:
        uint64_t v19 = 0x6F6973756C637865;
LABEL_158:
        unint64_t v18 = 0xE90000000000006ELL;
        break;
      case 12:
        unint64_t v18 = 0xE300000000000000;
        uint64_t v19 = 6649192;
        break;
      case 13:
        uint64_t v19 = 0x6974617275746173;
        unint64_t v18 = 0xEA00000000006E6FLL;
        break;
      case 14:
        unint64_t v18 = 0xE500000000000000;
        uint64_t v19 = 0x726F6C6F63;
        break;
      case 15:
        uint64_t v19 = 0x69736F6E696D756CLL;
        uint64_t v117 = 31092;
LABEL_163:
        unint64_t v18 = v117 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
        break;
      default:
        break;
    }
    unint64_t v118 = 0xE600000000000000;
    uint64_t v119 = 0x6C616D726F6ELL;
    switch(v17)
    {
      case 1:
        unint64_t v118 = 0xE800000000000000;
        uint64_t v119 = 0x796C7069746C756DLL;
        break;
      case 2:
        uint64_t v119 = 0x6E6565726373;
        break;
      case 3:
        unint64_t v118 = 0xE700000000000000;
        uint64_t v119 = 0x79616C7265766FLL;
        break;
      case 4:
        uint64_t v119 = 0x6E656B726164;
        break;
      case 5:
        unint64_t v118 = 0xE700000000000000;
        uint64_t v119 = 0x6E65746867696CLL;
        break;
      case 6:
        uint64_t v119 = 0x646F44726F6C6F63;
        unint64_t v118 = 0xEA00000000006567;
        break;
      case 7:
        uint64_t v119 = 0x727542726F6C6F63;
        goto LABEL_177;
      case 8:
        unsigned int v120 = 1952870259;
        goto LABEL_174;
      case 9:
        unsigned int v120 = 1685217640;
LABEL_174:
        uint64_t v119 = v120 | 0x6867694C00000000;
        unint64_t v118 = 0xE900000000000074;
        break;
      case 10:
        uint64_t v119 = 0x6E65726566666964;
        uint64_t v121 = 25955;
        goto LABEL_182;
      case 11:
        uint64_t v119 = 0x6F6973756C637865;
LABEL_177:
        unint64_t v118 = 0xE90000000000006ELL;
        break;
      case 12:
        unint64_t v118 = 0xE300000000000000;
        uint64_t v119 = 6649192;
        break;
      case 13:
        uint64_t v119 = 0x6974617275746173;
        unint64_t v118 = 0xEA00000000006E6FLL;
        break;
      case 14:
        unint64_t v118 = 0xE500000000000000;
        uint64_t v119 = 0x726F6C6F63;
        break;
      case 15:
        uint64_t v119 = 0x69736F6E696D756CLL;
        uint64_t v121 = 31092;
LABEL_182:
        unint64_t v118 = v121 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
        break;
      default:
        break;
    }
    uint64_t v5 = v140;
    if (v19 == v119 && v18 == v118)
    {
LABEL_225:
      swift_bridgeObjectRelease_n();
      sub_1C00F5F3C((uint64_t)v155);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      sub_1C00F5C8C((uint64_t)v162);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      goto LABEL_10;
    }
    char v122 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C00F5F3C((uint64_t)v155);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5C8C((uint64_t)v162);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    if ((v122 & 1) == 0) {
      return 0;
    }
    goto LABEL_10;
  }
  uint64_t v34 = sub_1C00F5F2C((uint64_t)v158);
  sub_1BFCF2D74(v10, (uint64_t)v154);
  if (sub_1C00F5F20((uint64_t)v154) == 1)
  {
    sub_1C00F5F2C((uint64_t)v154);
LABEL_239:
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5F3C((uint64_t)v155);
    goto LABEL_240;
  }
  uint64_t v35 = sub_1C00F5F2C((uint64_t)v154);
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F6034(v34, (uint64_t)v151);
  sub_1C00F6034(v35, (uint64_t)&v152);
  sub_1C00F6034(v34, (uint64_t)v153);
  if (sub_1C00F6090((uint64_t)v153) != 1)
  {
    uint64_t v138 = v34;
    uint64_t v136 = v2;
    uint64_t v58 = v4;
    uint64_t v59 = (uint64_t *)sub_1C00F609C((uint64_t)v153);
    uint64_t v60 = *v59;
    uint64_t v61 = v59[1];
    uint64_t v62 = v59[2];
    uint64_t v63 = v59[3];
    uint64_t v64 = v59[4];
    uint64_t v65 = v59[5];
    uint64_t v66 = v59[6];
    uint64_t v67 = v59[7];
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F6034(v35, (uint64_t)v150);
    int v68 = sub_1C00F6090((uint64_t)v150);
    uint64_t v69 = sub_1C00F609C((uint64_t)v150);
    if (v68 == 1)
    {
LABEL_242:
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
LABEL_243:
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F60AC((uint64_t)v151);
LABEL_244:
      sub_1C00F5F3C((uint64_t)v155);
      goto LABEL_245;
    }
    uint64_t v137 = v35;
    unint64_t v70 = *(void *)v69;
    unint64_t v71 = *(void *)(v69 + 8);
    uint64_t v145 = v60;
    uint64_t v146 = v61;
    *(void *)&long long v147 = v62;
    *((void *)&v147 + 1) = v63;
    *(void *)&long long v148 = v64;
    *((void *)&v148 + 1) = v65;
    *(void *)&long long v149 = v66;
    *((void *)&v149 + 1) = v67;
    v141[0] = v70;
    v141[1] = v71;
    long long v72 = *(_OWORD *)(v69 + 32);
    long long v142 = *(_OWORD *)(v69 + 16);
    long long v143 = v72;
    long long v144 = *(_OWORD *)(v69 + 48);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    BOOL v73 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)&v145, (uint64_t)v141);
    sub_1C00F60AC((uint64_t)v151);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    if (!v73) {
      goto LABEL_244;
    }
    uint64_t v4 = v58;
    uint64_t v2 = v136;
    uint64_t v74 = v138;
    goto LABEL_127;
  }
  uint64_t v36 = v4;
  uint64_t v37 = sub_1C00F609C((uint64_t)v153);
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F6034(v35, (uint64_t)v150);
  int v38 = sub_1C00F6090((uint64_t)v150);
  uint64_t v39 = sub_1C00F609C((uint64_t)v150);
  if (v38 != 1) {
    goto LABEL_242;
  }
  uint64_t v40 = v39;
  uint64_t v135 = v36;
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  if (*(double *)v37 != *(double *)v40 || *(double *)(v37 + 8) != *(double *)(v40 + 8)) {
    goto LABEL_243;
  }
  if (*(unsigned char *)(v37 + 48))
  {
    if ((*(unsigned char *)(v40 + 48) & 1) == 0
      || *(double *)(v37 + 16) != *(double *)(v40 + 16)
      || *(double *)(v37 + 24) != *(double *)(v40 + 24)
      || *(double *)(v37 + 32) != *(double *)(v40 + 32))
    {
      goto LABEL_243;
    }
    double v41 = *(double *)(v37 + 40);
    double v42 = *(double *)(v40 + 40);
  }
  else
  {
    if (*(unsigned char *)(v40 + 48)) {
      goto LABEL_243;
    }
    double v41 = *(double *)(v37 + 16);
    double v42 = *(double *)(v40 + 16);
  }
  if (v41 != v42 || *(double *)(v37 + 56) != *(double *)(v40 + 56) || *(double *)(v37 + 64) != *(double *)(v40 + 64)) {
    goto LABEL_243;
  }
  if (*(unsigned char *)(v37 + 104))
  {
    if ((*(unsigned char *)(v40 + 104) & 1) == 0
      || *(double *)(v37 + 72) != *(double *)(v40 + 72)
      || *(double *)(v37 + 80) != *(double *)(v40 + 80)
      || *(double *)(v37 + 88) != *(double *)(v40 + 88))
    {
      goto LABEL_243;
    }
    double v88 = *(double *)(v37 + 96);
    double v89 = *(double *)(v40 + 96);
  }
  else
  {
    if (*(unsigned char *)(v40 + 104)) {
      goto LABEL_243;
    }
    double v88 = *(double *)(v37 + 72);
    double v89 = *(double *)(v40 + 72);
  }
  if (v88 != v89) {
    goto LABEL_243;
  }
  uint64_t v139 = v34;
  uint64_t v90 = *(void *)(v37 + 112);
  uint64_t v91 = *(void *)(v40 + 112);
  uint64_t v92 = *(void *)(v90 + 16);
  if (v92 != *(void *)(v91 + 16))
  {
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    goto LABEL_251;
  }
  uint64_t v137 = v35;
  if (!v92)
  {
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    uint64_t v93 = v135;
    uint64_t v5 = v140;
LABEL_114:
    uint64_t v104 = *(void *)(v37 + 120);
    uint64_t v105 = *(void *)(v40 + 120);
    if (v104)
    {
      uint64_t v74 = v139;
      if (!v105 || (uint64_t v106 = *(void *)(v104 + 16), v106 != *(void *)(v105 + 16)))
      {
LABEL_236:
        sub_1C00F60AC((uint64_t)v151);
        sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
        goto LABEL_252;
      }
      if (v106 && v104 != v105)
      {
        if (*(double *)(v104 + 32) != *(double *)(v105 + 32)) {
          goto LABEL_236;
        }
        uint64_t v107 = (double *)(v104 + 40);
        uint64_t v108 = (double *)(v105 + 40);
        uint64_t v109 = v106 - 1;
        while (v109)
        {
          double v110 = *v107++;
          double v111 = v110;
          double v112 = *v108++;
          --v109;
          if (v111 != v112) {
            goto LABEL_236;
          }
        }
      }
      sub_1C00F60AC((uint64_t)v151);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      uint64_t v4 = v93;
    }
    else
    {
      sub_1C00F60AC((uint64_t)v151);
      sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      uint64_t v74 = v139;
      if (v105) {
        goto LABEL_252;
      }
      uint64_t v4 = v93;
      sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    }
LABEL_127:
    unint64_t v113 = 0xE600000000000000;
    uint64_t v114 = 0x6C616D726F6ELL;
    switch(*(unsigned char *)(v74 + 128))
    {
      case 1:
        unint64_t v113 = 0xE800000000000000;
        uint64_t v114 = 0x796C7069746C756DLL;
        break;
      case 2:
        uint64_t v114 = 0x6E6565726373;
        break;
      case 3:
        unint64_t v113 = 0xE700000000000000;
        uint64_t v114 = 0x79616C7265766FLL;
        break;
      case 4:
        uint64_t v114 = 0x6E656B726164;
        break;
      case 5:
        unint64_t v113 = 0xE700000000000000;
        uint64_t v114 = 0x6E65746867696CLL;
        break;
      case 6:
        uint64_t v114 = 0x646F44726F6C6F63;
        unint64_t v113 = 0xEA00000000006567;
        break;
      case 7:
        uint64_t v114 = 0x727542726F6C6F63;
        goto LABEL_198;
      case 8:
        unsigned int v123 = 1952870259;
        goto LABEL_195;
      case 9:
        unsigned int v123 = 1685217640;
LABEL_195:
        uint64_t v114 = v123 | 0x6867694C00000000;
        unint64_t v113 = 0xE900000000000074;
        break;
      case 0xA:
        uint64_t v114 = 0x6E65726566666964;
        uint64_t v124 = 25955;
        goto LABEL_203;
      case 0xB:
        uint64_t v114 = 0x6F6973756C637865;
LABEL_198:
        unint64_t v113 = 0xE90000000000006ELL;
        break;
      case 0xC:
        unint64_t v113 = 0xE300000000000000;
        uint64_t v114 = 6649192;
        break;
      case 0xD:
        uint64_t v114 = 0x6974617275746173;
        unint64_t v113 = 0xEA00000000006E6FLL;
        break;
      case 0xE:
        unint64_t v113 = 0xE500000000000000;
        uint64_t v114 = 0x726F6C6F63;
        break;
      case 0xF:
        uint64_t v114 = 0x69736F6E696D756CLL;
        uint64_t v124 = 31092;
LABEL_203:
        unint64_t v113 = v124 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
        break;
      default:
        break;
    }
    unint64_t v125 = 0xE600000000000000;
    uint64_t v126 = 0x6C616D726F6ELL;
    switch(*(unsigned char *)(v137 + 128))
    {
      case 1:
        unint64_t v125 = 0xE800000000000000;
        uint64_t v126 = 0x796C7069746C756DLL;
        break;
      case 2:
        uint64_t v126 = 0x6E6565726373;
        break;
      case 3:
        unint64_t v125 = 0xE700000000000000;
        uint64_t v126 = 0x79616C7265766FLL;
        break;
      case 4:
        uint64_t v126 = 0x6E656B726164;
        break;
      case 5:
        unint64_t v125 = 0xE700000000000000;
        uint64_t v126 = 0x6E65746867696CLL;
        break;
      case 6:
        uint64_t v126 = 0x646F44726F6C6F63;
        unint64_t v125 = 0xEA00000000006567;
        break;
      case 7:
        uint64_t v126 = 0x727542726F6C6F63;
        goto LABEL_217;
      case 8:
        unsigned int v127 = 1952870259;
        goto LABEL_214;
      case 9:
        unsigned int v127 = 1685217640;
LABEL_214:
        uint64_t v126 = v127 | 0x6867694C00000000;
        unint64_t v125 = 0xE900000000000074;
        break;
      case 0xA:
        uint64_t v126 = 0x6E65726566666964;
        uint64_t v128 = 25955;
        goto LABEL_222;
      case 0xB:
        uint64_t v126 = 0x6F6973756C637865;
LABEL_217:
        unint64_t v125 = 0xE90000000000006ELL;
        break;
      case 0xC:
        unint64_t v125 = 0xE300000000000000;
        uint64_t v126 = 6649192;
        break;
      case 0xD:
        uint64_t v126 = 0x6974617275746173;
        unint64_t v125 = 0xEA00000000006E6FLL;
        break;
      case 0xE:
        unint64_t v125 = 0xE500000000000000;
        uint64_t v126 = 0x726F6C6F63;
        break;
      case 0xF:
        uint64_t v126 = 0x69736F6E696D756CLL;
        uint64_t v128 = 31092;
LABEL_222:
        unint64_t v125 = v128 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
        break;
      default:
        break;
    }
    if (v114 == v126 && v113 == v125) {
      goto LABEL_225;
    }
    char v129 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C00F5F3C((uint64_t)v155);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5C8C((uint64_t)v162);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    if ((v129 & 1) == 0) {
      return 0;
    }
    goto LABEL_10;
  }
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  uint64_t v93 = v135;
  uint64_t v5 = v140;
  if (v90 == v91) {
    goto LABEL_114;
  }
  uint64_t v94 = (uint64_t *)(v90 + 32);
  uint64_t v95 = (unint64_t *)(v91 + 32);
  while (1)
  {
    uint64_t v96 = *v94++;
    uint64_t v145 = v96;
    unint64_t v97 = *v95++;
    v141[0] = v97;
    if ((static FormatColor.== infix(_:_:)(&v145, v141) & 1) == 0) {
      break;
    }
    if (!--v92) {
      goto LABEL_114;
    }
  }
LABEL_251:
  sub_1C00F60AC((uint64_t)v151);
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
LABEL_252:
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
  sub_1C00F5F3C((uint64_t)v155);
LABEL_245:
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
LABEL_246:
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
  sub_1C00F5C8C((uint64_t)v162);
LABEL_247:
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
  sub_1C00F5E3C((uint64_t)v161, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
LABEL_248:
  sub_1C00F5E3C((uint64_t)v160, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
  return 0;
}

uint64_t sub_1C00E88B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentOverlaySubgroup();
  MEMORY[0x1F4188790](v4);
  BOOL v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v22 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v18 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v23 = *(void *)(v8 + 72);
      uint64_t v13 = v11 - 1;
      while (1)
      {
        sub_1C00F70EC(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
        sub_1C00F70EC(a2 + v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
        BOOL v14 = *v10 == *v6 && v10[1] == v6[1];
        if (!v14 && (sub_1C1520A9C() & 1) == 0) {
          break;
        }
        uint64_t v15 = *(int *)(v4 + 20);
        uint64_t v16 = *(void *)((char *)v10 + v15);
        uint64_t v17 = *(void *)((char *)v6 + v15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v18 = sub_1C00DF460(v16, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
        sub_1C00F7154((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
        BOOL v20 = v13-- != 0;
        if (v18)
        {
          v12 += v23;
          if (v20) {
            continue;
          }
        }
        return v18 & 1;
      }
      sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
      sub_1C00F7154((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
      char v18 = 0;
    }
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

BOOL sub_1C00E8AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unsigned __int8 *)(a1 + 32);
  uint64_t v4 = (unsigned __int8 *)(a2 + 32);
  uint64_t v5 = v2 - 1;
  do
  {
    int v7 = *v3++;
    int v6 = v7;
    int v9 = *v4++;
    int v8 = v9;
    BOOL v11 = v5-- != 0;
    BOOL result = v6 == v8;
  }
  while (v6 == v8 && v11);
  return result;
}

uint64_t sub_1C00E8B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPropertyDefinition(0) - 8;
  MEMORY[0x1F4188790](v4);
  int v6 = (char *)&v343 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v364 = (uint64_t)&v343 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v10 && a1 != a2)
  {
    uint64_t v345 = v8;
    uint64_t v11 = 0;
    uint64_t v12 = a1 + 32;
    uint64_t v13 = a2 + 32;
    uint64_t v348 = v10;
    uint64_t v344 = v6;
    uint64_t v347 = a1 + 32;
    uint64_t v346 = a2 + 32;
    while (1)
    {
      BOOL v14 = (uint64_t *)(v12 + 88 * v11);
      uint64_t v15 = *v14;
      uint64_t v16 = v14[1];
      uint64_t v17 = v14[2];
      uint64_t v365 = v14[3];
      char v18 = (void *)v14[4];
      uint64_t v362 = v14[5];
      uint64_t v360 = v14[6];
      uint64_t v361 = v14[7];
      uint64_t v359 = v14[8];
      uint64_t v358 = v14[9];
      unsigned int v368 = *((unsigned __int8 *)v14 + 80);
      uint64_t v19 = (uint64_t *)(v13 + 88 * v11);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v23 = v19[2];
      uint64_t v22 = v19[3];
      uint64_t v25 = (void *)v19[4];
      uint64_t v24 = v19[5];
      uint64_t v26 = v19[7];
      uint64_t v366 = v19[6];
      uint64_t v367 = v24;
      uint64_t v357 = v19[8];
      uint64_t v356 = v19[9];
      unsigned int v27 = *((unsigned __int8 *)v19 + 80);
      BOOL v28 = v15 == v20 && v16 == v21;
      uint64_t v353 = v22;
      if (!v28)
      {
        char v29 = sub_1C1520A9C();
        uint64_t v22 = v353;
        if ((v29 & 1) == 0) {
          return 0;
        }
      }
      if (v365)
      {
        if (!v22) {
          return 0;
        }
        BOOL v30 = v17 == v23 && v365 == v22;
        if (!v30 && (sub_1C1520A9C() & 1) == 0) {
          return 0;
        }
      }
      else if (v22)
      {
        return 0;
      }
      uint64_t v370 = v18;
      unsigned int v355 = v27;
      uint64_t v354 = v26;
      uint64_t v369 = v25;
      uint64_t v349 = v11;
      if (v368 >> 6)
      {
        uint64_t v351 = v16;
        uint64_t v350 = v21;
        int v31 = v27 & 0xC0;
        if (v368 >> 6 == 1)
        {
          if (v31 != 64) {
            goto LABEL_132;
          }
          uint64_t v32 = v18[2];
          if (v32 != v25[2]) {
            goto LABEL_131;
          }
          if (v32) {
            BOOL v33 = v18 == v25;
          }
          else {
            BOOL v33 = 1;
          }
          if (!v33)
          {
            BOOL v34 = v18[4] == v25[4] && v18[5] == v25[5];
            if (!v34 && (sub_1C1520A9C() & 1) == 0) {
              goto LABEL_131;
            }
            uint64_t v35 = v32 - 1;
            if (v35)
            {
              uint64_t v201 = v25 + 7;
              unint64_t v202 = v18 + 7;
              while (1)
              {
                BOOL v203 = *(v202 - 1) == *(v201 - 1) && *v202 == *v201;
                if (!v203 && (sub_1C1520A9C() & 1) == 0) {
                  break;
                }
                v201 += 2;
                v202 += 2;
                if (!--v35) {
                  goto LABEL_33;
                }
              }
LABEL_131:
              uint64_t v255 = (uint64_t)v25;
              uint64_t v256 = v367;
              uint64_t v257 = v357;
              sub_1BFF1DB64(v255, v367, v366, v26, v357, v356, v355);
              uint64_t v258 = (uint64_t)v18;
              uint64_t v259 = (uint64_t)v18;
              uint64_t v261 = v361;
              uint64_t v260 = v362;
              uint64_t v262 = v359;
              uint64_t v263 = v360;
              uint64_t v264 = v358;
              unsigned __int8 v265 = v368;
              sub_1BFF1DB64(v259, v362, v360, v361, v359, v358, v368);
              sub_1BFEC28BC(v258, v260, v263, v261, v262, v264, v265);
              uint64_t v237 = (uint64_t)v369;
              uint64_t v238 = v256;
              uint64_t v239 = v366;
              uint64_t v240 = v26;
              uint64_t v241 = v257;
              uint64_t v242 = v356;
              unsigned __int8 v243 = v355;
              goto LABEL_142;
            }
          }
LABEL_33:
          uint64_t v36 = *(void *)(v362 + 16);
          if (v36 != *(void *)(v367 + 16))
          {
            uint64_t v305 = (uint64_t)v25;
            uint64_t v306 = v366;
            uint64_t v307 = v357;
            uint64_t v308 = v356;
            sub_1BFF1DB64(v305, v367, v366, v26, v357, v356, v355);
            uint64_t v309 = (uint64_t)v18;
            uint64_t v310 = (uint64_t)v18;
            uint64_t v311 = v361;
            uint64_t v312 = v362;
            uint64_t v313 = v360;
            uint64_t v314 = v358;
            unsigned __int8 v315 = v368;
            sub_1BFF1DB64(v310, v362, v360, v361, v359, v358, v368);
            uint64_t v316 = v308;
            LOBYTE(v308) = v355;
            sub_1BFF1DB64((uint64_t)v369, v367, v306, v26, v307, v316, v355);
            uint64_t v317 = v359;
            sub_1BFF1DB64(v309, v312, v313, v311, v359, v314, v315);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v309, v312, v313, v311, v317, v314, v315);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64((uint64_t)v369, v367, v366, v26, v307, v356, v308);
LABEL_130:
            uint64_t v244 = v361;
            uint64_t v245 = v359;
            uint64_t v246 = v358;
            sub_1BFEC28BC((uint64_t)v370, v362, v360, v361, v359, v358, v368);
            uint64_t v247 = (uint64_t)v369;
            uint64_t v248 = v366;
            uint64_t v249 = v367;
            uint64_t v250 = v354;
            uint64_t v251 = v357;
            uint64_t v252 = v356;
            unsigned __int8 v253 = v355;
            sub_1BFEC28BC((uint64_t)v369, v367, v366, v354, v357, v356, v355);
            sub_1BFEC28BC(v247, v249, v248, v250, v251, v252, v253);
            uint64_t v254 = v246;
            LOBYTE(v246) = v368;
            sub_1BFEC28BC((uint64_t)v370, v362, v360, v244, v245, v254, v368);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFEC28BC(v247, v249, v248, v250, v251, v252, v253);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v237 = (uint64_t)v370;
            uint64_t v238 = v362;
            uint64_t v239 = v360;
            uint64_t v240 = v244;
            uint64_t v241 = v245;
            uint64_t v242 = v358;
            unsigned __int8 v243 = v246;
            goto LABEL_142;
          }
          if (v36)
          {
            uint64_t v37 = v366;
            uint64_t v38 = v26;
            uint64_t v39 = v367;
            uint64_t v40 = v356;
            unsigned __int8 v41 = v355;
            sub_1BFF1DB64((uint64_t)v25, v367, v366, v38, v357, v356, v355);
            uint64_t v42 = (uint64_t)v18;
            uint64_t v43 = v362;
            uint64_t v44 = v360;
            uint64_t v45 = v358;
            unsigned __int8 v46 = v368;
            sub_1BFF1DB64(v42, v362, v360, v361, v359, v358, v368);
            uint64_t v47 = v39;
            uint64_t v48 = v37;
            uint64_t v49 = v354;
            uint64_t v50 = v357;
            sub_1BFF1DB64((uint64_t)v25, v47, v48, v354, v357, v40, v41);
            uint64_t v51 = (uint64_t)v370;
            uint64_t v52 = v361;
            uint64_t v53 = v359;
            sub_1BFF1DB64((uint64_t)v370, v43, v44, v361, v359, v45, v46);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v51, v43, v44, v52, v53, v45, v46);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v54 = v367;
            sub_1BFF1DB64((uint64_t)v369, v367, v366, v49, v50, v356, v355);
            if (v43 != v54)
            {
              uint64_t v55 = (uint64_t *)(v367 + 64);
              long long v56 = (uint64_t *)(v362 + 64);
              do
              {
                uint64_t v352 = v36;
                uint64_t v58 = *(v56 - 4);
                uint64_t v59 = *(v56 - 3);
                uint64_t v61 = *(v56 - 2);
                uint64_t v60 = *(v56 - 1);
                uint64_t v62 = *v56;
                uint64_t v63 = *(v55 - 4);
                uint64_t v64 = *(v55 - 3);
                uint64_t v66 = *(v55 - 2);
                uint64_t v65 = *(v55 - 1);
                uint64_t v363 = *v55;
                BOOL v67 = v58 == v63 && v59 == v64;
                if (!v67 && (sub_1C1520A9C() & 1) == 0) {
                  goto LABEL_130;
                }
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain();
                char v68 = sub_1BFEFAE14(v61, v66);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v68 & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_130;
                }
                if (v60 == v65 && v62 == v363)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  char v57 = sub_1C1520A9C();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v57 & 1) == 0) {
                    goto LABEL_130;
                  }
                }
                v55 += 5;
                v56 += 5;
                uint64_t v36 = v352 - 1;
              }
              while (v352 != 1);
            }
          }
          else
          {
            uint64_t v151 = (uint64_t)v25;
            uint64_t v152 = v366;
            uint64_t v153 = v357;
            uint64_t v154 = v356;
            sub_1BFF1DB64(v151, v367, v366, v26, v357, v356, v355);
            uint64_t v155 = (uint64_t)v18;
            uint64_t v156 = (uint64_t)v18;
            uint64_t v157 = v361;
            uint64_t v158 = v362;
            uint64_t v159 = v360;
            uint64_t v160 = v358;
            unsigned __int8 v161 = v368;
            sub_1BFF1DB64(v156, v362, v360, v361, v359, v358, v368);
            uint64_t v162 = v154;
            LOBYTE(v154) = v355;
            sub_1BFF1DB64((uint64_t)v369, v367, v152, v26, v153, v162, v355);
            uint64_t v163 = v359;
            sub_1BFF1DB64(v155, v158, v159, v157, v359, v160, v161);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v155, v158, v159, v157, v163, v160, v161);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64((uint64_t)v369, v367, v366, v26, v153, v356, v154);
          }
          unsigned __int8 v164 = v368;
          if (v368)
          {
            uint64_t v165 = v358;
            uint64_t v166 = v359;
            uint64_t v167 = v360;
            uint64_t v169 = v361;
            uint64_t v168 = v362;
            unsigned __int8 v192 = v355;
            uint64_t v193 = v356;
            uint64_t v171 = v357;
            if ((v355 & 1) == 0)
            {
LABEL_136:
              LODWORD(v364) = v368 & 1;
              LODWORD(v363) = v364 == 0;
              uint64_t v318 = v171;
              sub_1BFF429DC(v167, v169, v166, v165, v368 & 1);
              uint64_t v319 = v167;
              unsigned __int8 v320 = v164;
              uint64_t v321 = v169;
              uint64_t v322 = v366;
              uint64_t v177 = v354;
              uint64_t v323 = v356;
              char v324 = v363;
              sub_1BFF429DC(v366, v354, v318, v356, v363);
              uint64_t v325 = v321;
              uint64_t v168 = v362;
              sub_1BFEC41E8(v319, v325, v166, v165, v364);
              uint64_t v326 = v322;
              uint64_t v327 = v318;
              uint64_t v328 = v318;
              unsigned __int8 v329 = v355;
              sub_1BFEC41E8(v326, v177, v328, v323, v324);
LABEL_139:
              uint64_t v169 = v361;
              sub_1BFEC28BC((uint64_t)v370, v168, v360, v361, v166, v165, v320);
              unsigned __int8 v184 = v320;
              uint64_t v339 = (uint64_t)v369;
              uint64_t v341 = v366;
              uint64_t v340 = v367;
              sub_1BFEC28BC((uint64_t)v369, v367, v366, v177, v327, v323, v329);
              uint64_t v342 = v339;
              uint64_t v191 = v340;
              sub_1BFEC28BC(v342, v340, v341, v177, v327, v323, v329);
              uint64_t v167 = v360;
LABEL_140:
              uint64_t v214 = v359;
              sub_1BFEC28BC((uint64_t)v370, v168, v167, v169, v359, v358, v184);
              uint64_t v206 = v357;
              uint64_t v205 = v354;
              uint64_t v204 = v366;
              uint64_t v211 = v191;
              uint64_t v210 = (uint64_t)v369;
              uint64_t v195 = v356;
              unsigned __int8 v212 = v355;
LABEL_141:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1BFEC28BC(v210, v211, v204, v205, v206, v195, v212);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v237 = (uint64_t)v370;
              uint64_t v240 = v361;
              uint64_t v238 = v362;
              uint64_t v239 = v167;
              uint64_t v241 = v214;
              uint64_t v242 = v358;
              unsigned __int8 v243 = v368;
              goto LABEL_142;
            }
            if (v360 != v366 || v361 != v354)
            {
              char v194 = sub_1C1520A9C();
              LOBYTE(v171) = v357;
              if ((v194 & 1) == 0)
              {
                sub_1BFF429DC(v167, v169, v166, v165, 1);
                uint64_t v335 = v167;
                uint64_t v336 = v366;
                uint64_t v177 = v354;
                uint64_t v337 = v357;
                sub_1BFF429DC(v366, v354, v357, v193, 1);
                sub_1BFEC41E8(v335, v169, v166, v165, 1);
                uint64_t v338 = v336;
                uint64_t v327 = v337;
                sub_1BFEC41E8(v338, v177, v337, v193, 1);
                unsigned __int8 v329 = v192;
                unsigned __int8 v320 = v368;
                uint64_t v323 = v193;
                goto LABEL_139;
              }
            }
            uint64_t v195 = v193;
            if (v166) {
              uint64_t v196 = 0x6F74656C676E6973;
            }
            else {
              uint64_t v196 = 0x65636E6174736E69;
            }
            if (v166) {
              unint64_t v197 = 0xE90000000000006ELL;
            }
            else {
              unint64_t v197 = 0xE800000000000000;
            }
            if (v171) {
              uint64_t v198 = 0x6F74656C676E6973;
            }
            else {
              uint64_t v198 = 0x65636E6174736E69;
            }
            if (v171) {
              unint64_t v199 = 0xE90000000000006ELL;
            }
            else {
              unint64_t v199 = 0xE800000000000000;
            }
            if (v196 == v198 && v197 == v199)
            {
              uint64_t v200 = v169;
              LODWORD(v363) = 1;
            }
            else
            {
              uint64_t v200 = v169;
              LODWORD(v363) = sub_1C1520A9C();
            }
            uint64_t v204 = v366;
            uint64_t v205 = v354;
            uint64_t v206 = v357;
            sub_1BFF429DC(v366, v354, v357, v195, 1);
            sub_1BFF429DC(v167, v200, v166, v165, 1);
            sub_1BFF429DC(v167, v200, v166, v165, 1);
            sub_1BFF429DC(v204, v205, v206, v195, 1);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v207 = v200;
            sub_1BFEC41E8(v167, v200, v166, v165, 1);
            sub_1BFEC41E8(v204, v205, v206, v195, 1);
            sub_1BFEC41E8(v204, v205, v206, v195, 1);
            sub_1BFEC41E8(v167, v200, v166, v165, 1);
            uint64_t v208 = (uint64_t)v370;
            uint64_t v209 = v362;
            sub_1BFEC28BC((uint64_t)v370, v362, v167, v207, v166, v165, v368);
            uint64_t v210 = (uint64_t)v369;
            uint64_t v211 = v367;
            unsigned __int8 v212 = v355;
            sub_1BFEC28BC((uint64_t)v369, v367, v204, v205, v206, v195, v355);
            sub_1BFEC28BC(v210, v211, v204, v205, v206, v195, v212);
            uint64_t v213 = v209;
            uint64_t v214 = v359;
            sub_1BFEC28BC(v208, v213, v167, v361, v359, v358, v368);
            if ((v363 & 1) == 0) {
              goto LABEL_141;
            }
          }
          else
          {
            uint64_t v165 = v358;
            uint64_t v166 = v359;
            uint64_t v167 = v360;
            uint64_t v169 = v361;
            uint64_t v168 = v362;
            uint64_t v170 = v356;
            uint64_t v171 = v357;
            if (v355) {
              goto LABEL_136;
            }
            uint64_t v172 = *(void *)(v360 + 32);
            __int16 v173 = *(_WORD *)(v360 + 40);
            uint64_t v174 = v366;
            uint64_t v175 = *(void *)(v366 + 32);
            __int16 v176 = *(_WORD *)(v366 + 40);
            long long v374 = *(_OWORD *)(v360 + 16);
            uint64_t v375 = v172;
            __int16 v376 = v173;
            long long v371 = *(_OWORD *)(v366 + 16);
            uint64_t v372 = v175;
            __int16 v373 = v176;
            uint64_t v177 = v354;
            sub_1BFF429DC(v366, v354, v357, v356, 0);
            sub_1BFF429DC(v167, v169, v166, v165, 0);
            sub_1BFF429DC(v167, v169, v166, v165, 0);
            sub_1BFF429DC(v174, v177, v171, v170, 0);
            if ((static FormatCommandBinding.== infix(_:_:)(&v374, &v371) & 1) == 0
              || (sub_1C00F0CE0(v169, v177) & 1) == 0)
            {
              sub_1BFEC41E8(v167, v169, v166, v165, 0);
              uint64_t v330 = v167;
              uint64_t v331 = v366;
              uint64_t v332 = v357;
              sub_1BFEC41E8(v366, v177, v357, v170, 0);
              uint64_t v333 = v331;
              uint64_t v327 = v332;
              sub_1BFEC41E8(v333, v177, v332, v170, 0);
              uint64_t v334 = v330;
              unsigned __int8 v320 = v368;
              sub_1BFEC41E8(v334, v169, v166, v165, 0);
              uint64_t v323 = v170;
              unsigned __int8 v329 = v355;
              goto LABEL_139;
            }
            uint64_t v178 = v357;
            if (v166 == v357 && v165 == v170)
            {
              sub_1BFEC41E8(v167, v169, v166, v165, 0);
              uint64_t v179 = v366;
              uint64_t v180 = v354;
              sub_1BFEC41E8(v366, v354, v166, v165, 0);
              sub_1BFEC41E8(v179, v180, v166, v165, 0);
              sub_1BFEC41E8(v167, v169, v166, v165, 0);
              unsigned __int8 v181 = v368;
              sub_1BFEC28BC((uint64_t)v370, v168, v167, v169, v166, v165, v368);
              uint64_t v182 = v165;
              uint64_t v183 = v166;
              unsigned __int8 v184 = v181;
              uint64_t v185 = (uint64_t)v369;
              uint64_t v186 = v367;
              uint64_t v187 = v179;
              uint64_t v188 = v354;
              unsigned __int8 v189 = v355;
              sub_1BFEC28BC((uint64_t)v369, v367, v187, v354, v183, v182, v355);
              uint64_t v190 = v185;
              uint64_t v191 = v186;
              sub_1BFEC28BC(v190, v186, v366, v188, v183, v182, v189);
            }
            else
            {
              char v215 = sub_1C1520A9C();
              sub_1BFEC41E8(v167, v169, v166, v165, 0);
              uint64_t v216 = v169;
              uint64_t v217 = v366;
              uint64_t v218 = v354;
              sub_1BFEC41E8(v366, v354, v178, v170, 0);
              sub_1BFEC41E8(v217, v218, v178, v170, 0);
              sub_1BFEC41E8(v360, v216, v166, v165, 0);
              sub_1BFEC28BC((uint64_t)v370, v168, v360, v216, v166, v165, v368);
              uint64_t v219 = (uint64_t)v369;
              uint64_t v220 = v170;
              uint64_t v221 = v367;
              unsigned __int8 v222 = v355;
              sub_1BFEC28BC((uint64_t)v369, v367, v217, v218, v178, v220, v355);
              uint64_t v223 = v219;
              uint64_t v191 = v221;
              uint64_t v224 = v217;
              uint64_t v169 = v216;
              uint64_t v167 = v360;
              unsigned __int8 v225 = v222;
              unsigned __int8 v184 = v368;
              sub_1BFEC28BC(v223, v221, v224, v218, v178, v220, v225);
              if ((v215 & 1) == 0) {
                goto LABEL_140;
              }
            }
            uint64_t v214 = v359;
            sub_1BFEC28BC((uint64_t)v370, v168, v167, v169, v359, v358, v184);
            uint64_t v206 = v357;
            uint64_t v205 = v354;
            uint64_t v204 = v366;
            uint64_t v211 = v191;
            uint64_t v210 = (uint64_t)v369;
            uint64_t v195 = v356;
            unsigned __int8 v212 = v355;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEC28BC(v210, v211, v204, v205, v206, v195, v212);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v81 = (uint64_t)v370;
          uint64_t v84 = v361;
          uint64_t v82 = v362;
          uint64_t v83 = v167;
          uint64_t v85 = v214;
          uint64_t v86 = v358;
        }
        else
        {
          if (v31 != 128)
          {
LABEL_132:
            uint64_t v266 = (uint64_t)v25;
            uint64_t v267 = v367;
            sub_1BFF1DB64(v266, v367, v366, v26, v357, v356, v27);
            uint64_t v268 = (uint64_t)v18;
            uint64_t v269 = (uint64_t)v18;
            uint64_t v271 = v361;
            uint64_t v270 = v362;
            uint64_t v272 = v359;
            uint64_t v273 = v360;
            uint64_t v274 = v358;
            unsigned __int8 v275 = v368;
            sub_1BFF1DB64(v269, v362, v360, v361, v359, v358, v368);
            sub_1BFEC28BC(v268, v270, v273, v271, v272, v274, v275);
            uint64_t v237 = (uint64_t)v369;
            uint64_t v238 = v267;
            uint64_t v239 = v366;
            uint64_t v240 = v26;
            uint64_t v241 = v357;
            uint64_t v242 = v356;
            unsigned __int8 v243 = v27;
            goto LABEL_142;
          }
          uint64_t v88 = v18[2];
          if (v88 != v25[2])
          {
            uint64_t v276 = v367;
            uint64_t v277 = v357;
            uint64_t v278 = v356;
            sub_1BFF1DB64((uint64_t)v25, v367, v366, v26, v357, v356, v355);
            uint64_t v279 = (uint64_t)v18;
            uint64_t v280 = (uint64_t)v18;
            uint64_t v281 = v362;
            uint64_t v283 = v359;
            uint64_t v282 = v360;
            uint64_t v284 = v358;
            unsigned __int8 v285 = v368;
            sub_1BFF1DB64(v280, v362, v360, v361, v359, v358, v368);
            uint64_t v286 = v276;
            uint64_t v287 = v366;
            uint64_t v288 = v278;
            LOBYTE(v278) = v355;
            sub_1BFF1DB64((uint64_t)v369, v286, v366, v26, v277, v288, v355);
            sub_1BFF1DB64(v279, v281, v282, v361, v283, v284, v285);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v289 = v281;
            uint64_t v290 = v283;
            uint64_t v102 = v283;
            uint64_t v103 = (uint64_t)v369;
            sub_1BFF1DB64(v279, v289, v282, v361, v290, v284, v285);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v103, v367, v287, v26, v277, v356, v278);
LABEL_134:
            uint64_t v291 = (uint64_t)v370;
            uint64_t v292 = v360;
            uint64_t v293 = v102;
            sub_1BFEC28BC((uint64_t)v370, v362, v360, v361, v102, v358, v368);
            uint64_t v294 = v366;
            uint64_t v295 = v367;
            uint64_t v296 = v354;
            uint64_t v297 = v357;
            uint64_t v298 = v356;
            unsigned __int8 v299 = v355;
            sub_1BFEC28BC(v103, v367, v366, v354, v357, v356, v355);
            sub_1BFEC28BC(v103, v295, v294, v296, v297, v298, v299);
            uint64_t v300 = v291;
            uint64_t v301 = v362;
            uint64_t v302 = v292;
            uint64_t v303 = v293;
            uint64_t v304 = v358;
            LOBYTE(v293) = v368;
            sub_1BFEC28BC(v300, v362, v302, v361, v303, v358, v368);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFEC28BC(v103, v295, v294, v296, v297, v298, v299);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v237 = (uint64_t)v370;
            uint64_t v238 = v301;
            uint64_t v239 = v360;
            uint64_t v240 = v361;
            uint64_t v241 = v359;
            uint64_t v242 = v304;
            unsigned __int8 v243 = v293;
            goto LABEL_142;
          }
          if (v88)
          {
            uint64_t v363 = *(unsigned __int8 *)(v345 + 80);
            uint64_t v89 = v26;
            uint64_t v90 = v357;
            uint64_t v91 = v356;
            unsigned __int8 v92 = v355;
            sub_1BFF1DB64((uint64_t)v25, v367, v366, v89, v357, v356, v355);
            uint64_t v93 = (uint64_t)v18;
            uint64_t v95 = v361;
            uint64_t v94 = v362;
            uint64_t v97 = v359;
            uint64_t v96 = v360;
            uint64_t v98 = v358;
            unsigned __int8 v99 = v368;
            sub_1BFF1DB64(v93, v362, v360, v361, v359, v358, v368);
            sub_1BFF1DB64((uint64_t)v369, v367, v366, v354, v90, v91, v92);
            uint64_t v100 = (uint64_t)v370;
            sub_1BFF1DB64((uint64_t)v370, v94, v96, v95, v97, v98, v99);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v101 = v98;
            uint64_t v102 = v97;
            sub_1BFF1DB64(v100, v94, v96, v95, v97, v101, v99);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v103 = (uint64_t)v369;
            sub_1BFF1DB64((uint64_t)v369, v367, v366, v354, v90, v356, v92);
            uint64_t v104 = (uint64_t)v344;
            if (v100 != v103)
            {
              uint64_t v105 = (v363 + 32) & ~v363;
              uint64_t v106 = *(void *)(v345 + 72);
              do
              {
                uint64_t v107 = v364;
                sub_1C00F70EC((uint64_t)v370 + v105, v364, type metadata accessor for FormatPropertyDefinition);
                sub_1C00F70EC(v103 + v105, v104, type metadata accessor for FormatPropertyDefinition);
                BOOL v108 = _s8NewsFeed24FormatPropertyDefinitionO2eeoiySbAC_ACtFZ_0(v107, v104);
                sub_1C00F7154(v104, type metadata accessor for FormatPropertyDefinition);
                sub_1C00F7154(v107, type metadata accessor for FormatPropertyDefinition);
                if (!v108) {
                  goto LABEL_134;
                }
                v105 += v106;
              }
              while (--v88);
            }
          }
          else
          {
            uint64_t v124 = v367;
            uint64_t v125 = v357;
            uint64_t v126 = v356;
            sub_1BFF1DB64((uint64_t)v25, v367, v366, v26, v357, v356, v355);
            uint64_t v127 = (uint64_t)v18;
            uint64_t v128 = (uint64_t)v18;
            uint64_t v129 = v361;
            uint64_t v130 = v362;
            uint64_t v131 = v360;
            uint64_t v132 = v358;
            unsigned __int8 v133 = v368;
            sub_1BFF1DB64(v128, v362, v360, v361, v359, v358, v368);
            uint64_t v134 = v124;
            uint64_t v135 = v366;
            uint64_t v136 = v125;
            LOBYTE(v125) = v355;
            sub_1BFF1DB64((uint64_t)v369, v134, v366, v26, v136, v126, v355);
            sub_1BFF1DB64(v127, v130, v131, v129, v359, v132, v133);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v137 = v130;
            uint64_t v138 = v131;
            uint64_t v103 = (uint64_t)v369;
            uint64_t v102 = v359;
            sub_1BFF1DB64(v127, v137, v138, v129, v359, v132, v133);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v103, v367, v135, v26, v357, v126, v125);
          }
          uint64_t v139 = (uint64_t)v370;
          uint64_t v140 = v102;
          sub_1BFEC28BC((uint64_t)v370, v362, v360, v361, v102, v358, v368);
          uint64_t v141 = v366;
          uint64_t v142 = v367;
          uint64_t v143 = v354;
          uint64_t v144 = v357;
          uint64_t v145 = v356;
          unsigned __int8 v146 = v355;
          sub_1BFEC28BC(v103, v367, v366, v354, v357, v356, v355);
          sub_1BFEC28BC(v103, v142, v141, v143, v144, v145, v146);
          uint64_t v147 = v139;
          uint64_t v148 = v362;
          uint64_t v149 = v140;
          uint64_t v150 = v358;
          sub_1BFEC28BC(v147, v362, v360, v361, v149, v358, v368);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEC28BC(v103, v142, v141, v143, v144, v145, v146);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v81 = (uint64_t)v370;
          uint64_t v82 = v148;
          uint64_t v83 = v360;
          uint64_t v84 = v361;
          uint64_t v85 = v359;
          uint64_t v86 = v150;
        }
        unsigned __int8 v87 = v368;
      }
      else
      {
        if (v27 >= 0x40) {
          goto LABEL_132;
        }
        uint64_t v69 = v18[2];
        if (v69 != v25[2]) {
          goto LABEL_128;
        }
        uint64_t v70 = (uint64_t)v370;
        if (v69) {
          BOOL v71 = v370 == v369;
        }
        else {
          BOOL v71 = 1;
        }
        if (!v71)
        {
          uint64_t v109 = 0;
          while (1)
          {
            uint64_t v110 = v70 + v109 * 8;
            uint64_t v111 = *(void *)(v70 + v109 * 8 + 32);
            uint64_t v112 = *(void *)(v70 + v109 * 8 + 40);
            uint64_t v113 = *(void *)(v70 + v109 * 8 + 48);
            uint64_t v114 = *(void *)(v70 + v109 * 8 + 56);
            uint64_t v115 = *(void *)(v110 + 64);
            uint64_t v116 = *(void *)(v110 + 72);
            uint64_t v117 = v369[v109 + 6];
            uint64_t v118 = v369[v109 + 7];
            uint64_t v119 = v369[v109 + 8];
            uint64_t v120 = v369[v109 + 9];
            BOOL v121 = v111 == v369[v109 + 4] && v112 == v369[v109 + 5];
            if (!v121 && (sub_1C1520A9C() & 1) == 0) {
              break;
            }
            BOOL v122 = v113 == v117 && v114 == v118;
            if (!v122 && (sub_1C1520A9C() & 1) == 0) {
              break;
            }
            BOOL v123 = v115 == v119 && v116 == v120;
            if (!v123 && (sub_1C1520A9C() & 1) == 0) {
              break;
            }
            v109 += 6;
            --v69;
            uint64_t v70 = (uint64_t)v370;
            if (!v69) {
              goto LABEL_55;
            }
          }
LABEL_128:
          uint64_t v227 = v357;
          uint64_t v228 = v356;
          unsigned __int8 v229 = v355;
          sub_1BFF1DB64((uint64_t)v369, v367, v366, v354, v357, v356, v355);
          uint64_t v230 = (uint64_t)v370;
          uint64_t v231 = v361;
          uint64_t v232 = v362;
          uint64_t v233 = v359;
          uint64_t v234 = v360;
          uint64_t v235 = v358;
          unsigned __int8 v236 = v368;
          sub_1BFF1DB64((uint64_t)v370, v362, v360, v361, v359, v358, v368);
          sub_1BFEC28BC(v230, v232, v234, v231, v233, v235, v236);
          uint64_t v237 = (uint64_t)v369;
          uint64_t v239 = v366;
          uint64_t v238 = v367;
          uint64_t v240 = v354;
          uint64_t v241 = v227;
          uint64_t v242 = v228;
          unsigned __int8 v243 = v229;
LABEL_142:
          sub_1BFEC28BC(v237, v238, v239, v240, v241, v242, v243);
          return 0;
        }
LABEL_55:
        uint64_t v72 = v357;
        uint64_t v73 = v356;
        unsigned __int8 v74 = v355;
        sub_1BFF1DB64((uint64_t)v369, v367, v366, v354, v357, v356, v355);
        uint64_t v75 = v361;
        uint64_t v76 = v362;
        uint64_t v77 = v359;
        uint64_t v78 = v360;
        uint64_t v79 = v358;
        unsigned __int8 v80 = v368;
        sub_1BFF1DB64(v70, v362, v360, v361, v359, v358, v368);
        sub_1BFEC28BC(v70, v76, v78, v75, v77, v79, v80);
        uint64_t v81 = (uint64_t)v369;
        uint64_t v83 = v366;
        uint64_t v82 = v367;
        uint64_t v84 = v354;
        uint64_t v85 = v72;
        uint64_t v86 = v73;
        unsigned __int8 v87 = v74;
      }
      sub_1BFEC28BC(v81, v82, v83, v84, v85, v86, v87);
      uint64_t v11 = v349 + 1;
      uint64_t result = 1;
      uint64_t v12 = v347;
      uint64_t v13 = v346;
      if (v349 + 1 == v348) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_1C00EA854(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 64);
    for (uint64_t i = (uint64_t *)(a1 + 64); ; i += 5)
    {
      uint64_t v6 = *(i - 2);
      uint64_t v5 = *(i - 1);
      uint64_t v14 = *i;
      uint64_t v8 = *(v3 - 2);
      uint64_t v7 = *(v3 - 1);
      uint64_t v9 = *v3;
      BOOL v10 = *(i - 4) == *(v3 - 4) && *(i - 3) == *(v3 - 3);
      if (!v10 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      BOOL v11 = v6 == v8 && v5 == v7;
      if (!v11 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      char v12 = sub_1C00E0E68(v14, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if ((v12 & 1) == 0) {
        break;
      }
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C00EA9C4(uint64_t a1, uint64_t a2)
{
  return sub_1C00F53A0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatSlotTransform.== infix(_:_:));
}

uint64_t sub_1C00EA9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 48);
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v6 = *v3;
      if (*(v4 - 2) == *(v3 - 2) && *(v4 - 1) == *(v3 - 1))
      {
        if (v5 != v6) {
          return 0;
        }
      }
      else
      {
        char v8 = sub_1C1520A9C();
        uint64_t result = 0;
        if ((v8 & 1) == 0 || v5 != v6) {
          return result;
        }
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00EAA90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16))
  {
    char v18 = 0;
    return v18 & 1;
  }
  if (!v2 || a1 == a2)
  {
    char v18 = 1;
    return v18 & 1;
  }
  uint64_t v3 = v2 - 1;
  uint64_t v4 = (void *)(a2 + 56);
  uint64_t v5 = (void *)(a1 + 56);
  while (1)
  {
    uint64_t v6 = *(v5 - 3);
    uint64_t v7 = *(v5 - 2);
    int v8 = *((unsigned __int8 *)v5 - 8);
    uint64_t v10 = *(v4 - 3);
    uint64_t v9 = *(v4 - 2);
    int v11 = *((unsigned __int8 *)v4 - 8);
    uint64_t v12 = *v4;
    char v26 = *((unsigned char *)v4 - 8);
    char v27 = *((unsigned char *)v5 - 8);
    uint64_t v24 = *v5;
    uint64_t v25 = v3;
    if (!v27) {
      break;
    }
    if (v8 == 1)
    {
      if (v11 != 1) {
        goto LABEL_28;
      }
      sub_1BFF5B7E0(v6, v7, 1);
      swift_retain();
      sub_1BFF5B7E0(v10, v9, 1);
      uint64_t v13 = v12;
      swift_retain();
      uint64_t v14 = v6;
      sub_1BFF5B7CC(v6, v7, 1);
      uint64_t v15 = v9;
      sub_1BFF5B7CC(v10, v9, 1);
      uint64_t v16 = v10;
      if (((((v6 & 1) == 0) ^ v10) & 1) == 0)
      {
        sub_1BFF5B7CC(v10, v9, 1);
        swift_release();
        uint64_t v20 = v6;
        uint64_t v21 = v7;
        char v22 = 1;
        goto LABEL_30;
      }
    }
    else
    {
      if (v11 != 2) {
        goto LABEL_28;
      }
      sub_1BFF5B7E0(v6, v7, 2);
      swift_retain();
      sub_1BFF5B7E0(v10, v9, 2);
      uint64_t v13 = v12;
      swift_retain();
      sub_1BFF5B7CC(v6, v7, 2);
      uint64_t v15 = v9;
      sub_1BFF5B7CC(v10, v9, 2);
      uint64_t v14 = v6;
      uint64_t v16 = v10;
      if (v6 != v10)
      {
        sub_1BFF5B7CC(v10, v9, 2);
        swift_release();
        uint64_t v20 = v6;
        uint64_t v21 = v7;
        char v22 = 2;
        goto LABEL_30;
      }
    }
LABEL_21:
    char v18 = sub_1C11CB840(v24, v13);
    sub_1BFF5B7CC(v16, v15, v26);
    swift_release();
    sub_1BFF5B7CC(v14, v7, v27);
    swift_release();
    uint64_t v3 = v25 - 1;
    if (v18)
    {
      v4 += 4;
      v5 += 4;
      if (v25) {
        continue;
      }
    }
    return v18 & 1;
  }
  if (*((unsigned char *)v4 - 8))
  {
    swift_bridgeObjectRetain();
LABEL_28:
    sub_1BFF5B7E0(v10, v9, v11);
    sub_1BFF5B7CC(v6, v7, v8);
    sub_1BFF5B7CC(v10, v9, v11);
    char v18 = 0;
    return v18 & 1;
  }
  if (v6 == v10 && v7 == v9) {
    char v23 = 1;
  }
  else {
    char v23 = sub_1C1520A9C();
  }
  sub_1BFF5B7E0(v6, v7, 0);
  swift_retain();
  sub_1BFF5B7E0(v10, v9, 0);
  uint64_t v13 = v12;
  swift_retain();
  sub_1BFF5B7E0(v10, v9, 0);
  sub_1BFF5B7E0(v6, v7, 0);
  uint64_t v14 = v6;
  sub_1BFF5B7CC(v6, v7, 0);
  uint64_t v16 = v10;
  uint64_t v15 = v9;
  sub_1BFF5B7CC(v10, v9, 0);
  if (v23) {
    goto LABEL_21;
  }
  sub_1BFF5B7CC(v10, v9, 0);
  swift_release();
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  char v22 = 0;
LABEL_30:
  sub_1BFF5B7CC(v20, v21, v22);
  swift_release();
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_1C00EAE40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v9 = 0;
    return v9 & 1;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = v2 - 1;
    uint64_t v4 = (uint64_t *)(a2 + 40);
    uint64_t v5 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v8 = *v4;
      unint64_t v13 = *(v4 - 1);
      uint64_t v14 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if ((static FormatExpression.== infix(_:_:)(&v14, &v13) & 1) == 0) {
        break;
      }
      char v9 = sub_1C11CB840(v7, v8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      BOOL v11 = v3-- != 0;
      if (v9)
      {
        v4 += 2;
        v5 += 2;
        if (v11) {
          continue;
        }
      }
      return v9 & 1;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_14;
  }
  char v9 = 1;
  return v9 & 1;
}

uint64_t sub_1C00EAF74(uint64_t a1, uint64_t a2)
{
  return sub_1C00F53A0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatWebEmbedNodeContent.== infix(_:_:));
}

uint64_t sub_1C00EAF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatOptionsNodeStatement();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v33 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v11 || a1 == a2) {
    return 1;
  }
  uint64_t v12 = 0;
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(v8 + 72);
  while (1)
  {
    sub_1C00F70EC(v14 + v16 * v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    sub_1C00F70EC(v15 + v16 * v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    BOOL v18 = *v10 == *v6 && v10[1] == v6[1];
    if (!v18 && (sub_1C1520A9C() & 1) == 0) {
      break;
    }
    if ((static FormatOptionsNodeStatementValue.== infix(_:_:)((uint64_t)v10 + *(int *)(v4 + 20), (uint64_t)v6 + *(int *)(v4 + 20)) & 1) == 0)break; {
    uint64_t v19 = *(int *)(v4 + 24);
    }
    uint64_t v20 = *(void *)((char *)v10 + v19);
    uint64_t v21 = *(void *)((char *)v6 + v19);
    uint64_t v22 = *(void *)(v20 + 16);
    if (v22 != *(void *)(v21 + 16)) {
      break;
    }
    if (v22) {
      BOOL v23 = v20 == v21;
    }
    else {
      BOOL v23 = 1;
    }
    if (!v23)
    {
      uint64_t v24 = (unsigned __int8 *)(v20 + 32);
      uint64_t v25 = (unsigned __int8 *)(v21 + 32);
      do
      {
        unsigned int v28 = *v24++;
        unsigned int v27 = v28;
        unsigned int v30 = *v25++;
        unsigned int v29 = v30;
        if (v27 >> 6)
        {
          if (v27 >> 6 == 1)
          {
            int v31 = (v29 ^ v27) & 1;
            if ((v29 & 0xC0) != 0x40 || v31 != 0) {
              goto LABEL_33;
            }
          }
          else if ((v29 & 0xC0) != 0x80)
          {
            goto LABEL_33;
          }
        }
        else if (v29 > 0x3F || v27 != v29)
        {
          goto LABEL_33;
        }
        --v22;
      }
      while (v22);
    }
    ++v12;
    sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    sub_1C00F7154((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    uint64_t result = 1;
    if (v12 == v11) {
      return result;
    }
  }
LABEL_33:
  sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
  sub_1C00F7154((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
  return 0;
}

uint64_t sub_1C00EB218(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2) {
    return 1;
  }
  uint64_t v3 = a1;
  uint64_t result = 1;
  if (v3 != a2)
  {
    uint64_t v73 = 0;
    uint64_t v5 = v2 - 1;
    uint64_t v54 = v3;
    while (1)
    {
      uint64_t v6 = v3 + v73;
      uint64_t v7 = *(void *)(v3 + v73 + 32);
      uint64_t v8 = *(void *)(v3 + v73 + 40);
      uint64_t v10 = *(void *)(v3 + v73 + 48);
      uint64_t v9 = *(void *)(v3 + v73 + 56);
      uint64_t v11 = *(void *)(v3 + v73 + 64);
      uint64_t v12 = *(void *)(v3 + v73 + 72);
      uint64_t v14 = *(void *)(v3 + v73 + 80);
      uint64_t v13 = *(void *)(v3 + v73 + 88);
      int v15 = *(unsigned __int8 *)(v3 + v73 + 96);
      uint64_t v16 = *(unsigned __int8 *)(v3 + v73 + 97);
      double v56 = *(double *)(v3 + v73 + 104);
      char v17 = *(unsigned char *)(v3 + v73 + 112);
      char v18 = *(unsigned char *)(v6 + 113);
      uint64_t v19 = *(void *)(a2 + v73 + 32);
      uint64_t v20 = *(void *)(a2 + v73 + 40);
      uint64_t v21 = *(void *)(a2 + v73 + 48);
      uint64_t v22 = *(void *)(a2 + v73 + 56);
      uint64_t v23 = *(void *)(a2 + v73 + 64);
      uint64_t v24 = *(void *)(a2 + v73 + 72);
      uint64_t v25 = *(void *)(a2 + v73 + 80);
      uint64_t v26 = *(void *)(a2 + v73 + 88);
      char v27 = *(unsigned char *)(a2 + v73 + 96);
      int v28 = *(unsigned __int8 *)(a2 + v73 + 97);
      double v55 = *(double *)(a2 + v73 + 104);
      char v57 = *(unsigned char *)(a2 + v73 + 112);
      LOBYTE(v6) = *(unsigned char *)(a2 + v73 + 113);
      uint64_t v82 = v7;
      v85[0] = v7;
      v85[1] = v8;
      v85[2] = v10;
      v85[3] = v9;
      v85[4] = v11;
      v85[5] = v12;
      v85[6] = v14;
      v85[7] = v13;
      uint64_t v29 = v13;
      char v86 = v15;
      uint64_t v87 = v19;
      uint64_t v88 = v20;
      uint64_t v89 = v21;
      uint64_t v90 = v22;
      uint64_t v91 = v23;
      uint64_t v92 = v24;
      uint64_t v93 = v25;
      uint64_t v94 = v26;
      char v95 = v27;
      uint64_t v75 = v24;
      uint64_t v76 = v13;
      uint64_t v61 = v5;
      uint64_t v69 = v20;
      uint64_t v70 = v10;
      char v58 = v17;
      char v59 = v6;
      char v60 = v18;
      char v62 = v27;
      char v63 = v15;
      uint64_t v79 = v25;
      uint64_t v80 = v26;
      uint64_t v77 = v22;
      uint64_t v78 = v23;
      uint64_t v74 = v21;
      uint64_t v81 = v8;
      uint64_t v68 = v19;
      int v64 = v28;
      uint64_t v65 = v16;
      uint64_t v71 = v11;
      uint64_t v72 = v9;
      uint64_t v66 = v14;
      if (v15 == 1)
      {
        if ((v27 & 1) == 0) {
          goto LABEL_73;
        }
        v84[0] = v7;
        v84[1] = v8;
        v84[2] = v10;
        v84[3] = v9;
        v84[4] = v11;
        v84[5] = v12;
        v84[6] = v14;
        v84[7] = v13;
        v83[0] = v19;
        v83[1] = v20;
        v83[2] = v21;
        v83[3] = v22;
        v83[4] = v23;
        v83[5] = v24;
        v83[6] = v25;
        v83[7] = v26;
        uint64_t v30 = v19;
        uint64_t v31 = v20;
        uint64_t v32 = v21;
        uint64_t v33 = v24;
        sub_1C00F6248(v19, v20, v21, v22, v23, v24, v25, v26, 1);
        sub_1C00F6248(v82, v81, v10, v9, v71, v12, v14, v76, 1);
        sub_1C00F6248(v82, v81, v10, v9, v71, v12, v14, v76, 1);
        sub_1C00F6248(v30, v31, v32, v77, v78, v33, v79, v80, 1);
        sub_1C00F6248(v30, v31, v32, v77, v78, v33, v79, v80, 1);
        sub_1C00F6248(v82, v81, v10, v9, v71, v12, v14, v76, 1);
        BOOL v52 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)v84, (uint64_t)v83);
        sub_1C00F62C0((uint64_t)v85);
        sub_1C00F6368(v30, v31, v32, v77, v78, v33, v79, v80, 1);
        uint64_t v34 = v9;
        uint64_t v35 = v71;
        uint64_t v8 = v81;
        uint64_t v36 = v12;
        uint64_t v37 = v66;
        sub_1C00F6368(v82, v81, v10, v72, v71, v12, v66, v76, 1);
        if (!v52)
        {
          sub_1C00F6368(v68, v69, v74, v77, v78, v75, v79, v80, 1);
          sub_1C00F6368(v82, v81, v10, v72, v71, v12, v66, v76, 1);
          return 0;
        }
      }
      else
      {
        if (v27)
        {
LABEL_73:
          sub_1C00F6248(v19, v20, v21, v22, v23, v24, v25, v26, v15 ^ 1);
          sub_1C00F6248(v82, v8, v10, v9, v11, v12, v14, v29, v15);
          sub_1C00F62C0((uint64_t)v85);
          return 0;
        }
        v84[0] = v7;
        v83[0] = v19;
        uint64_t v38 = v23;
        uint64_t v39 = v25;
        sub_1C00F6248(v19, v20, v21, v22, v23, v24, v25, v26, 0);
        sub_1C00F6248(v82, v8, v10, v9, v11, v12, v14, v29, 0);
        sub_1C00F6248(v82, v8, v10, v9, v11, v12, v14, v29, 0);
        sub_1C00F6248(v68, v69, v74, v77, v38, v75, v39, v80, 0);
        sub_1C00F6248(v68, v69, v74, v77, v38, v75, v39, v80, 0);
        sub_1C00F6248(v82, v8, v10, v9, v11, v12, v14, v76, 0);
        char v53 = static FormatColor.== infix(_:_:)(v84, v83);
        sub_1C00F62C0((uint64_t)v85);
        sub_1C00F6368(v68, v69, v74, v77, v78, v75, v79, v80, 0);
        uint64_t v34 = v9;
        uint64_t v35 = v11;
        uint64_t v36 = v12;
        uint64_t v37 = v66;
        sub_1C00F6368(v82, v8, v10, v72, v11, v12, v66, v76, 0);
        if ((v53 & 1) == 0)
        {
          sub_1C00F6368(v68, v69, v74, v77, v78, v75, v79, v80, 0);
          sub_1C00F6368(v82, v8, v10, v72, v11, v12, v66, v76, 0);
          return 0;
        }
      }
      if (v65 == 16)
      {
        sub_1C00F6368(v68, v69, v74, v77, v78, v75, v79, v80, v62);
        sub_1C00F6368(v82, v8, v10, v34, v35, v36, v37, v76, v63);
        uint64_t v3 = v54;
        uint64_t v40 = v61;
        if (v64 != 16) {
          return 0;
        }
LABEL_61:
        if (v60)
        {
LABEL_62:
          if ((v59 & 1) == 0) {
            return 0;
          }
          goto LABEL_70;
        }
      }
      else
      {
        unint64_t v41 = 0xE600000000000000;
        uint64_t v42 = v37;
        uint64_t v43 = 0x6C616D726F6ELL;
        uint64_t v44 = v36;
        switch(v65)
        {
          case 1:
            unint64_t v41 = 0xE800000000000000;
            uint64_t v43 = 0x796C7069746C756DLL;
            break;
          case 2:
            uint64_t v43 = 0x6E6565726373;
            break;
          case 3:
            unint64_t v41 = 0xE700000000000000;
            uint64_t v43 = 0x79616C7265766FLL;
            break;
          case 4:
            uint64_t v43 = 0x6E656B726164;
            break;
          case 5:
            unint64_t v41 = 0xE700000000000000;
            uint64_t v43 = 0x6E65746867696CLL;
            break;
          case 6:
            uint64_t v43 = 0x646F44726F6C6F63;
            unint64_t v41 = 0xEA00000000006567;
            break;
          case 7:
            uint64_t v43 = 0x727542726F6C6F63;
            goto LABEL_27;
          case 8:
            unsigned int v45 = 1952870259;
            goto LABEL_24;
          case 9:
            unsigned int v45 = 1685217640;
LABEL_24:
            uint64_t v43 = v45 | 0x6867694C00000000;
            unint64_t v41 = 0xE900000000000074;
            break;
          case 10:
            uint64_t v43 = 0x6E65726566666964;
            uint64_t v46 = 25955;
            goto LABEL_32;
          case 11:
            uint64_t v43 = 0x6F6973756C637865;
LABEL_27:
            unint64_t v41 = 0xE90000000000006ELL;
            break;
          case 12:
            unint64_t v41 = 0xE300000000000000;
            uint64_t v43 = 6649192;
            break;
          case 13:
            uint64_t v43 = 0x6974617275746173;
            unint64_t v41 = 0xEA00000000006E6FLL;
            break;
          case 14:
            unint64_t v41 = 0xE500000000000000;
            uint64_t v43 = 0x726F6C6F63;
            break;
          case 15:
            uint64_t v43 = 0x69736F6E696D756CLL;
            uint64_t v46 = 31092;
LABEL_32:
            unint64_t v41 = v46 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
            break;
          default:
            break;
        }
        unint64_t v47 = 0xE600000000000000;
        uint64_t v48 = 0x6C616D726F6ELL;
        switch(v64)
        {
          case 0:
            goto LABEL_52;
          case 1:
            unint64_t v47 = 0xE800000000000000;
            uint64_t v48 = 0x796C7069746C756DLL;
            goto LABEL_52;
          case 2:
            uint64_t v48 = 0x6E6565726373;
            goto LABEL_52;
          case 3:
            unint64_t v47 = 0xE700000000000000;
            uint64_t v48 = 0x79616C7265766FLL;
            goto LABEL_52;
          case 4:
            uint64_t v48 = 0x6E656B726164;
            goto LABEL_52;
          case 5:
            unint64_t v47 = 0xE700000000000000;
            uint64_t v48 = 0x6E65746867696CLL;
            goto LABEL_52;
          case 6:
            uint64_t v48 = 0x646F44726F6C6F63;
            unint64_t v47 = 0xEA00000000006567;
            goto LABEL_52;
          case 7:
            uint64_t v48 = 0x727542726F6C6F63;
            goto LABEL_46;
          case 8:
            unsigned int v49 = 1952870259;
            goto LABEL_43;
          case 9:
            unsigned int v49 = 1685217640;
LABEL_43:
            uint64_t v48 = v49 | 0x6867694C00000000;
            unint64_t v47 = 0xE900000000000074;
            goto LABEL_52;
          case 10:
            uint64_t v48 = 0x6E65726566666964;
            uint64_t v50 = 25955;
            goto LABEL_51;
          case 11:
            uint64_t v48 = 0x6F6973756C637865;
LABEL_46:
            unint64_t v47 = 0xE90000000000006ELL;
            goto LABEL_52;
          case 12:
            unint64_t v47 = 0xE300000000000000;
            uint64_t v48 = 6649192;
            goto LABEL_52;
          case 13:
            uint64_t v48 = 0x6974617275746173;
            unint64_t v47 = 0xEA00000000006E6FLL;
            goto LABEL_52;
          case 14:
            unint64_t v47 = 0xE500000000000000;
            uint64_t v48 = 0x726F6C6F63;
            goto LABEL_52;
          case 15:
            uint64_t v48 = 0x69736F6E696D756CLL;
            uint64_t v50 = 31092;
LABEL_51:
            unint64_t v47 = v50 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
LABEL_52:
            if (v43 != v48 || v41 != v47)
            {
              char v51 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1C00F6368(v68, v69, v74, v77, v78, v75, v79, v80, v62);
              sub_1C00F6368(v82, v8, v70, v34, v35, v44, v42, v76, v63);
              uint64_t v3 = v54;
              uint64_t v40 = v61;
              if ((v51 & 1) == 0) {
                return 0;
              }
              goto LABEL_61;
            }
            swift_bridgeObjectRelease_n();
            sub_1C00F6368(v68, v69, v74, v77, v78, v75, v79, v80, v62);
            sub_1C00F6368(v82, v8, v70, v34, v35, v36, v42, v76, v63);
            uint64_t v3 = v54;
            uint64_t v40 = v61;
            if (v60) {
              goto LABEL_62;
            }
            break;
          default:
            sub_1C00F6368(v68, v69, v74, v77, v78, v75, v79, v80, v62);
            sub_1C00F6368(v82, v8, v70, v34, v35, v36, v36, v76, v63);
            return 0;
        }
      }
      if (v59) {
        return 0;
      }
      if (v58)
      {
        if (v56 == 0.0)
        {
          if ((v57 & 1) == 0 || v55 != 0.0) {
            return 0;
          }
        }
        else if ((v57 & 1) == 0 || v55 == 0.0)
        {
          return 0;
        }
      }
      else if ((v57 & 1) != 0 || v56 != v55)
      {
        return 0;
      }
LABEL_70:
      if (!v40) {
        return 1;
      }
      v73 += 88;
      uint64_t v5 = v40 - 1;
    }
  }
  return result;
}

uint64_t sub_1C00EBD00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v26 = a1 + 32;
    uint64_t v4 = a2 + 32;
    while (1)
    {
      uint64_t v6 = (void *)(v26 + 40 * v3);
      uint64_t v8 = v6[2];
      uint64_t v7 = v6[3];
      uint64_t v9 = v6[4];
      uint64_t v10 = (void *)(v4 + 40 * v3);
      uint64_t v12 = v10[2];
      uint64_t v11 = v10[3];
      uint64_t v13 = v10[4];
      BOOL v14 = *v6 == *v10 && v6[1] == v10[1];
      if (!v14 && (sub_1C1520A9C() & 1) == 0) {
        return 0;
      }
      if (v7)
      {
        if (!v11) {
          return 0;
        }
        BOOL v15 = v8 == v12 && v7 == v11;
        if (!v15 && (sub_1C1520A9C() & 1) == 0) {
          return 0;
        }
      }
      else if (v11)
      {
        return 0;
      }
      uint64_t v16 = *(void *)(v9 + 16);
      if (v16 != *(void *)(v13 + 16)) {
        return 0;
      }
      if (v16) {
        BOOL v17 = v9 == v13;
      }
      else {
        BOOL v17 = 1;
      }
      if (!v17)
      {
        char v18 = (uint64_t *)(v13 + 56);
        uint64_t v19 = (uint64_t *)(v9 + 56);
        do
        {
          uint64_t v20 = *(v19 - 1);
          uint64_t v21 = *v19;
          uint64_t v22 = *(v18 - 1);
          uint64_t v23 = *v18;
          BOOL v24 = *(v19 - 3) == *(v18 - 3) && *(v19 - 2) == *(v18 - 2);
          if (!v24 && (sub_1C1520A9C() & 1) == 0) {
            return 0;
          }
          BOOL v25 = v20 == v22 && v21 == v23;
          if (!v25 && (sub_1C1520A9C() & 1) == 0) {
            return 0;
          }
          v18 += 4;
          v19 += 4;
        }
        while (--v16);
      }
      ++v3;
      uint64_t result = 1;
      if (v3 == v2) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_1C00EBE94(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatPackage, (uint64_t (*)(void))type metadata accessor for FormatPackage, (uint64_t (*)(char *, char *))static FormatPackage.== infix(_:_:), (uint64_t (*)(void))type metadata accessor for FormatPackage);
}

uint64_t sub_1C00EBEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      uint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = v3[7];
        v19[6] = v3[6];
        v20[0] = v7;
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v3 + 121);
        long long v8 = v3[3];
        v19[2] = v3[2];
        v19[3] = v8;
        long long v9 = v3[5];
        v19[4] = v3[4];
        v19[5] = v9;
        long long v10 = v3[1];
        v19[0] = *v3;
        v19[1] = v10;
        long long v11 = v4[7];
        v17[6] = v4[6];
        v18[0] = v11;
        *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v4 + 121);
        long long v12 = v4[3];
        v17[2] = v4[2];
        v17[3] = v12;
        long long v13 = v4[5];
        v17[4] = v4[4];
        v17[5] = v13;
        long long v14 = v4[1];
        v17[0] = *v4;
        v17[1] = v14;
        char v15 = static PuzzleMenuConfig.== infix(_:_:)(v19, v17);
        if ((v15 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 9;
        v3 += 9;
      }
      while (v6);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C00EBFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      int v7 = *v3++;
      int v6 = v7;
      int v9 = *v4++;
      int v8 = v9;
      if (v6 == 1) {
        unint64_t v10 = 0x64656C6261736964;
      }
      else {
        unint64_t v10 = 0xD000000000000012;
      }
      if (v6 == 1) {
        unint64_t v11 = 0xE800000000000000;
      }
      else {
        unint64_t v11 = 0x80000001C15FCDC0;
      }
      if (v6) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 0x7463757274736564;
      }
      if (v6) {
        unint64_t v13 = v11;
      }
      else {
        unint64_t v13 = 0xEB00000000657669;
      }
      unint64_t v14 = 0x80000001C15FCDC0;
      if (v8 == 1) {
        unint64_t v15 = 0x64656C6261736964;
      }
      else {
        unint64_t v15 = 0xD000000000000012;
      }
      if (v8 == 1) {
        unint64_t v14 = 0xE800000000000000;
      }
      if (v8) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 0x7463757274736564;
      }
      if (v8) {
        unint64_t v17 = v14;
      }
      else {
        unint64_t v17 = 0xEB00000000657669;
      }
      if (v12 == v16 && v13 == v17)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v5 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

unint64_t sub_1C00EC130(unint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = result >> 62;
  if (result >> 62) {
    goto LABEL_35;
  }
  uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5 == v16) {
      goto LABEL_5;
    }
LABEL_31:
    char v14 = 0;
    return v14 & 1;
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_31;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_29;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v7 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v7;
  }
  if (v6 == v8)
  {
LABEL_29:
    char v14 = 1;
    return v14 & 1;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v9 = 0;
    unint64_t v10 = a2 & 0xC000000000000001;
    while (1)
    {
      if (v5 == v9)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_1C15204BC();
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = MEMORY[0x1C18C7CB0](v9, v3);
        if (v10) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v4 = *(void *)(v3 + 32 + 8 * v9);
        swift_retain();
        if (v10)
        {
LABEL_20:
          uint64_t v11 = MEMORY[0x1C18C7CB0](v9, a2);
          goto LABEL_24;
        }
      }
      if (v9 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_34;
      }
      uint64_t v11 = *(void *)(a2 + 32 + 8 * v9);
      swift_retain();
LABEL_24:
      uint64_t v18 = *(void *)(v4 + 16);
      unint64_t v17 = *(void *)(v11 + 16);
      if ((static FormatExpression.== infix(_:_:)(&v18, &v17) & 1) == 0)
      {
        swift_release();
        swift_release();
        goto LABEL_31;
      }
      swift_beginAccess();
      uint64_t v12 = *(void *)(v4 + 24);
      swift_beginAccess();
      uint64_t v13 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v14 = sub_1C00E0E68(v12, v13);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0 && v5 - 1 != v9++) {
        continue;
      }
      return v14 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00EC3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v9 = 0;
    return v9 & 1;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = v2 - 1;
    uint64_t v4 = (uint64_t *)(a2 + 40);
    uint64_t v5 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v8 = *v4;
      unint64_t v13 = *(v4 - 1);
      uint64_t v14 = v6;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatExpression.== infix(_:_:)(&v14, &v13) & 1) == 0) {
        break;
      }
      char v9 = sub_1C00EC4C8(v7, v8);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      BOOL v11 = v3-- != 0;
      if (v9)
      {
        v4 += 2;
        v5 += 2;
        if (v11) {
          continue;
        }
      }
      return v9 & 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_14;
  }
  char v9 = 1;
  return v9 & 1;
}

uint64_t sub_1C00EC4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v54 = a2 + 32;
  uint64_t v50 = a1 + 32;
  uint64_t v51 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v5 = *(void *)(v4 + 8 * v3);
    uint64_t v6 = *(void *)(v54 + 8 * v3);
    if ((v5 & 0x8000000000000000) == 0) {
      break;
    }
    if ((v6 & 0x8000000000000000) == 0) {
      return 0;
    }
    uint64_t v14 = v5 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v15 = *(void *)((v5 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v16 = *(void *)((v6 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v17 = *(void *)(v15 + 16);
    if (v17 != *(void *)(v16 + 16)) {
      return 0;
    }
    uint64_t v52 = *(void *)(v14 + 24);
    uint64_t v53 = *(void *)((v6 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    if (v17)
    {
      swift_retain_n();
      swift_retain_n();
      if (v15 != v16)
      {
        uint64_t v18 = (uint64_t *)(v16 + 40);
        uint64_t v19 = (uint64_t *)(v15 + 40);
        while (1)
        {
          uint64_t v20 = *(v19 - 1);
          uint64_t v21 = *v19;
          uint64_t v22 = *v18;
          unint64_t v55 = *(v18 - 1);
          uint64_t v56 = v20;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          if ((static FormatExpression.== infix(_:_:)(&v56, &v55) & 1) == 0) {
            break;
          }
          char v23 = sub_1C00EC4C8(v21, v22);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if ((v23 & 1) == 0) {
            goto LABEL_71;
          }
          v18 += 2;
          v19 += 2;
          if (!--v17) {
            goto LABEL_51;
          }
        }
        swift_release_n();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return 0;
      }
    }
    else
    {
      swift_retain_n();
      swift_retain_n();
    }
LABEL_51:
    if (v52)
    {
      uint64_t v4 = v50;
      uint64_t v2 = v51;
      if (!v53) {
        goto LABEL_71;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v45 = sub_1C00EC4C8(v52, v53);
      swift_release_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v45 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v4 = v50;
      uint64_t v2 = v51;
      if (v53)
      {
LABEL_71:
        swift_release_n();
        goto LABEL_74;
      }
      swift_release_n();
      swift_release_n();
    }
LABEL_60:
    ++v3;
    uint64_t result = 1;
    if (v3 == v2) {
      return result;
    }
  }
  if (v6 < 0) {
    return 0;
  }
  unsigned int v7 = *(unsigned __int8 *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v5 + 32);
  char v10 = *(unsigned char *)(v5 + 40);
  unsigned int v11 = *(unsigned __int8 *)(v6 + 16);
  uint64_t v13 = *(void *)(v6 + 24);
  uint64_t v12 = *(void *)(v6 + 32);
  switch((v7 >> 4) & 3)
  {
    case 1u:
      if ((v11 & 0x30) != 0x10) {
        return 0;
      }
      goto LABEL_24;
    case 2u:
      if ((v11 & 0x30) != 0x20) {
        return 0;
      }
LABEL_24:
      if ((v11 ^ v7)) {
        return 0;
      }
      goto LABEL_27;
    case 3u:
      if ((~v11 & 0x30) != 0) {
        return 0;
      }
LABEL_27:
      if ((*(unsigned char *)(v5 + 40) & 1) == 0)
      {
        if (*(unsigned char *)(v6 + 40))
        {
LABEL_72:
          swift_retain_n();
          swift_retain_n();
          sub_1C00F64A4(v13, v12, v10 ^ 1);
          sub_1C00F64A4(v8, v9, v10);
          sub_1C00F64E0(v8, v9, v10);
          uint64_t v47 = v13;
          uint64_t v48 = v12;
          char v49 = v10 ^ 1;
          goto LABEL_73;
        }
        uint64_t v35 = *(void *)(v8 + 16);
        if (v35 == *(void *)(v13 + 16))
        {
          if (!v35 || v8 == v13)
          {
            char v31 = 1;
          }
          else
          {
            uint64_t v36 = (unsigned __int8 *)(v8 + 32);
            uint64_t v37 = (unsigned __int8 *)(v13 + 32);
            uint64_t v38 = v35 - 1;
            do
            {
              int v40 = *v36++;
              int v39 = v40;
              int v42 = *v37++;
              int v41 = v42;
              BOOL v44 = v38-- != 0;
              char v31 = v39 == v41;
            }
            while (v39 == v41 && v44);
          }
        }
        else
        {
          char v31 = 0;
        }
        swift_retain_n();
        swift_retain_n();
        sub_1C00F64A4(v13, v12, 0);
        sub_1C00F64A4(v8, v9, 0);
        sub_1C00F64E0(v8, v9, 0);
        uint64_t v32 = v13;
        uint64_t v33 = v12;
        char v34 = 0;
        goto LABEL_59;
      }
      if ((*(unsigned char *)(v6 + 40) & 1) == 0) {
        goto LABEL_72;
      }
      uint64_t v24 = *(void *)(v8 + 16);
      if (v24 != *(void *)(v13 + 16)) {
        goto LABEL_69;
      }
      if (v24) {
        BOOL v25 = v8 == v13;
      }
      else {
        BOOL v25 = 1;
      }
      if (v25)
      {
LABEL_37:
        char v31 = sub_1C00E076C(*(void *)(v5 + 32), *(void *)(v6 + 32));
        swift_retain_n();
        swift_retain_n();
        sub_1C00F64A4(v13, v12, 1);
        sub_1C00F64A4(v8, v9, 1);
        sub_1C00F64E0(v8, v9, 1);
        uint64_t v32 = v13;
        uint64_t v33 = v12;
        char v34 = 1;
LABEL_59:
        sub_1C00F64E0(v32, v33, v34);
        swift_release_n();
        swift_release_n();
        if ((v31 & 1) == 0) {
          return 0;
        }
        goto LABEL_60;
      }
      uint64_t v26 = (unsigned __int8 *)(v8 + 32);
      char v27 = (unsigned __int8 *)(v13 + 32);
      while (1)
      {
        int v29 = *v26++;
        int v28 = v29;
        int v30 = *v27++;
        if (v28 != v30) {
          break;
        }
        if (!--v24) {
          goto LABEL_37;
        }
      }
LABEL_69:
      swift_retain_n();
      swift_retain_n();
      sub_1C00F64A4(v13, v12, 1);
      sub_1C00F64A4(v8, v9, 1);
      sub_1C00F64E0(v8, v9, 1);
      uint64_t v47 = v13;
      uint64_t v48 = v12;
      char v49 = 1;
LABEL_73:
      sub_1C00F64E0(v47, v48, v49);
      swift_release_n();
LABEL_74:
      swift_release_n();
      return 0;
    default:
      if ((v11 & 0x30) == 0)
      {
        switch(v7 >> 6)
        {
          case 1u:
            if ((v11 & 0xC0) != 0x40) {
              return 0;
            }
            goto LABEL_24;
          case 2u:
            if ((v11 & 0xC0) != 0x80) {
              return 0;
            }
            goto LABEL_24;
          case 3u:
            if (v11 <= 0xBF) {
              return 0;
            }
            goto LABEL_27;
          default:
            if (v11 >= 0x40) {
              return 0;
            }
            goto LABEL_24;
        }
      }
      return 0;
  }
}

uint64_t sub_1C00ECAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    do
    {
      ++v3;
      ++v4;
      unint64_t v5 = FormatItemTrait.rawValue.getter();
      uint64_t v7 = v6;
      if (v5 == FormatItemTrait.rawValue.getter() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00ECB98(uint64_t a1, uint64_t a2)
{
  return sub_1C00F53A0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatDecorationContent.== infix(_:_:));
}

uint64_t sub_1C00ECBB0(uint64_t a1, uint64_t a2)
{
  return sub_1C00F5234(a1, a2, (uint64_t (*)(char *, char *))static FormatButtonNodeAction.== infix(_:_:));
}

uint64_t sub_1C00ECBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v9 = 1;
    }
    else
    {
      uint64_t v3 = (uint64_t *)(a1 + 32);
      uint64_t v4 = (uint64_t *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v7 = *v3++;
        uint64_t v6 = v7;
        uint64_t v8 = *v4++;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v9 = sub_1C00AD194(v6, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL v11 = v5-- != 0;
      }
      while ((v9 & 1) != 0 && v11);
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1C00ECC78(uint64_t a1, uint64_t a2)
{
  return sub_1BFF6B430(a1, a2, MEMORY[0x1E4FAAFC8], &qword_1EA196BE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FAAFD8]);
}

uint64_t sub_1C00ECCC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v11 = 1;
    }
    else
    {
      uint64_t v3 = v2 - 1;
      uint64_t v4 = (long long *)(a1 + 48);
      uint64_t v5 = (unsigned char *)(a2 + 80);
      do
      {
        char v6 = *((unsigned char *)v4 + 32);
        long long v7 = *v4;
        long long v8 = v4[1];
        v17[0] = *(v4 - 1);
        v17[1] = v7;
        v17[2] = v8;
        char v18 = v6;
        char v9 = *v5;
        long long v10 = *((_OWORD *)v5 - 2);
        v15[0] = *((_OWORD *)v5 - 3);
        v15[1] = v10;
        void v15[2] = *((_OWORD *)v5 - 1);
        char v16 = v9;
        char v11 = _s8NewsFeed25FormatBezierPathComponentO2eeoiySbAC_ACtFZ_0((uint64_t)v17, (uint64_t)v15);
        BOOL v13 = v3-- != 0;
        if ((v11 & 1) == 0) {
          break;
        }
        uint64_t v4 = (long long *)((char *)v4 + 56);
        v5 += 56;
      }
      while (v13);
    }
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1C00ECD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  while (1)
  {
    uint64_t v6 = *(void *)(v4 + 16 * v3);
    uint64_t v7 = *(void *)(v4 + 16 * v3 + 8);
    long long v8 = (unint64_t *)(v5 + 16 * v3);
    unint64_t v9 = v8[1];
    unint64_t v13 = *v8;
    uint64_t v14 = v6;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = static FormatExpression.== infix(_:_:)(&v14, &v13);
    if ((result & 1) == 0 || (uint64_t v11 = *(void *)(v7 + 16), v11 != *(void *)(v9 + 16)))
    {
LABEL_18:
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    }
    if (v11) {
      break;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    swift_release();
LABEL_15:
    ++v3;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = 1;
    if (v3 == v2) {
      return result;
    }
  }
  if (v7 == v9)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v12 = 0;
  while (1)
  {
    uint64_t v14 = *(void *)(v7 + 8 * v12 + 32);
    if (v12 >= *(void *)(v9 + 16)) {
      break;
    }
    unint64_t v13 = *(void *)(v9 + 8 * v12 + 32);
    uint64_t result = static FormatAdjustment.== infix(_:_:)(&v14, &v13);
    if ((result & 1) == 0) {
      goto LABEL_18;
    }
    if (v11 == ++v12) {
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00ECF14(uint64_t a1, uint64_t a2)
{
  return sub_1C00F53A0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatVideoNodeContent.== infix(_:_:));
}

uint64_t sub_1C00ECF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (long long *)(a1 + 32);
    for (uint64_t i = (long long *)(a2 + 32); ; ++i)
    {
      long long v5 = *v3;
      long long v10 = *i;
      long long v11 = v5;
      unint64_t v8 = v10;
      uint64_t v9 = v5;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if ((static FormatExpression.== infix(_:_:)(&v9, &v8) & 1) == 0) {
        break;
      }
      char v6 = static FormatVideoNodeContent.== infix(_:_:)((char *)&v11 + 8, (char *)&v10 + 8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if ((v6 & 1) == 0) {
        return 0;
      }
      ++v3;
      if (!--v2) {
        return 1;
      }
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return 0;
}

uint64_t sub_1C00ED074(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v11 = 1;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v2 - 1;
      do
      {
        uint64_t v7 = *(void *)(a1 + v5 + 40);
        char v8 = *(unsigned char *)(a1 + v5 + 64);
        v18[0] = *(void *)(a1 + v5 + 32);
        v18[1] = v7;
        long long v19 = *(_OWORD *)(a1 + v5 + 48);
        char v20 = v8;
        uint64_t v9 = *(void *)(a2 + v5 + 40);
        char v10 = *(unsigned char *)(a2 + v5 + 64);
        v15[0] = *(void *)(a2 + v5 + 32);
        v15[1] = v9;
        long long v16 = *(_OWORD *)(a2 + v5 + 48);
        char v17 = v10;
        char v11 = _s8NewsFeed30FormatSponsoredBannerNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v18, (uint64_t)v15);
        BOOL v13 = v6-- != 0;
        if ((v11 & 1) == 0) {
          break;
        }
        v5 += 40;
      }
      while (v13);
    }
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1C00ED138(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 65);
    for (uint64_t i = (unsigned __int8 *)(a2 + 65); ; i += 40)
    {
      uint64_t v5 = *(uint64_t *)(v3 - 17);
      unsigned int v6 = *(v3 - 1);
      int v7 = *v3;
      uint64_t v31 = *(uint64_t *)(i - 17);
      uint64_t v32 = *(void *)(i - 9);
      uint64_t v33 = *(void *)(v3 - 9);
      LODWORD(v8) = *(i - 1);
      int v9 = *i;
      if (*(void *)(v3 - 33) != *(void *)(i - 33) || *(void *)(v3 - 25) != *(void *)(i - 25))
      {
        unsigned int v10 = *(v3 - 1);
        int v11 = *(i - 1);
        uint64_t v8 = *(void *)(v3 - 17);
        char v12 = sub_1C1520A9C();
        uint64_t v5 = v8;
        LODWORD(v8) = v11;
        unsigned int v6 = v10;
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      if (v6 > 0xFD) {
        break;
      }
      if (v8 > 0xFD)
      {
LABEL_30:
        char v19 = v8;
        uint64_t v20 = v5;
        sub_1BFEF6828(v5, v33, v6);
        sub_1BFEF6828(v31, v32, v19);
        sub_1BFEF68AC(v20, v33, v6);
        uint64_t v21 = v31;
        uint64_t v22 = v32;
        char v23 = v19;
        goto LABEL_36;
      }
      int v30 = v7;
      if ((v6 & 0x80) == 0)
      {
        if ((v8 & 0x80) != 0)
        {
          char v24 = v8;
          uint64_t v8 = v5;
          sub_1BFEF6828(v5, v33, v6);
          sub_1BFEF6828(v8, v33, v6);
          swift_bridgeObjectRetain();
          uint64_t v5 = v8;
          LOBYTE(v8) = v24;
LABEL_32:
          char v25 = v8;
          char v26 = v8;
          uint64_t v17 = v5;
          sub_1BFEF6828(v31, v32, v25);
          swift_bridgeObjectRetain();
          uint64_t v18 = v33;
          sub_1BFEF6828(v17, v33, v6);
          swift_bridgeObjectRetain();
          sub_1BFEF6828(v31, v32, v26);
          sub_1BFF04738(v17, v33, v6);
          sub_1BFF04738(v31, v32, v26);
          sub_1BFEF68AC(v17, v33, v6);
          sub_1BFEF68AC(v17, v33, v6);
          swift_bridgeObjectRelease();
          sub_1BFEF68AC(v31, v32, v26);
LABEL_35:
          swift_bridgeObjectRelease();
          uint64_t v21 = v17;
          uint64_t v22 = v18;
          char v23 = v6;
LABEL_36:
          sub_1BFEF68AC(v21, v22, v23);
          return 0;
        }
        if (*(double *)&v5 != *(double *)&v31)
        {
          uint64_t v18 = v33;
          char v27 = v8;
          uint64_t v17 = v5;
          sub_1BFEF6828(v5, v33, v6);
          sub_1BFEF6828(v31, v32, v27);
          swift_bridgeObjectRetain();
          sub_1BFEF6828(v17, v33, v6);
          sub_1BFF04738(v17, v33, v6);
          sub_1BFF04738(v31, v32, v27);
          goto LABEL_35;
        }
        uint64_t v13 = v5;
        sub_1BFEF6828(v5, v33, v6);
        sub_1BFEF6828(v13, v33, v6);
        sub_1BFEF6828(v13, v33, v6);
        sub_1BFEF6828(v31, v32, v8);
        sub_1BFEF6828(v13, v33, v6);
        sub_1BFEF6828(v31, v32, v8);
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v13, v33, v6);
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v31, v32, v8);
        char v28 = sub_1BFE00F10(v33, v32);
        sub_1BFF04738(v13, v33, v6);
        sub_1BFF04738(v31, v32, v8);
        sub_1BFEF68AC(v31, v32, v8);
        sub_1BFEF68AC(v13, v33, v6);
        sub_1BFEF68AC(v13, v33, v6);
        sub_1BFF04738(v13, v33, v6);
        swift_bridgeObjectRelease();
        sub_1BFEF68AC(v31, v32, v8);
        swift_bridgeObjectRelease();
        sub_1BFEF68AC(v13, v33, v6);
        uint64_t result = 0;
        if ((v28 & 1) == 0 || ((((v6 & 1) == 0) ^ v8) & 1) == 0) {
          return result;
        }
LABEL_19:
        if (v7 == 2) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
      if ((v8 & 0x80) == 0) {
        goto LABEL_32;
      }
      BOOL v29 = (v5 & 1) == 0;
      char v15 = v8;
      char v16 = v8;
      uint64_t v17 = v5;
      sub_1BFEF6828(v31, v32, v15);
      swift_bridgeObjectRetain();
      uint64_t v18 = v33;
      sub_1BFEF6828(v17, v33, v6);
      swift_bridgeObjectRetain();
      sub_1BFEF6828(v31, v32, v16);
      sub_1BFF04738(v17, v33, v6);
      sub_1BFF04738(v31, v32, v16);
      sub_1BFEF68AC(v17, v33, v6);
      if (((v29 ^ v31) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1BFEF68AC(v31, v32, v16);
        goto LABEL_35;
      }
      sub_1BFEF68AC(v17, v33, v6);
      swift_bridgeObjectRelease();
      sub_1BFEF68AC(v31, v32, v16);
      swift_bridgeObjectRelease();
      sub_1BFEF68AC(v17, v33, v6);
      LOBYTE(v7) = v30;
      if (v30 == 2)
      {
LABEL_5:
        if (v9 != 2) {
          return 0;
        }
        goto LABEL_6;
      }
LABEL_20:
      uint64_t result = 0;
      if (v9 == 2 || ((((v7 & 1) == 0) ^ v9) & 1) == 0) {
        return result;
      }
LABEL_6:
      v3 += 40;
      if (!--v2) {
        return 1;
      }
    }
    if (v8 <= 0xFD) {
      goto LABEL_30;
    }
    goto LABEL_19;
  }
  return 1;
}

uint64_t sub_1C00ED714(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v13 = 1;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v2 - 1;
      do
      {
        uint64_t v7 = *(void *)(a1 + v5 + 40);
        uint64_t v8 = *(void *)(a1 + v5 + 64);
        char v9 = *(unsigned char *)(a1 + v5 + 72);
        v21[0] = *(void *)(a1 + v5 + 32);
        v21[1] = v7;
        long long v22 = *(_OWORD *)(a1 + v5 + 48);
        uint64_t v23 = v8;
        char v24 = v9;
        uint64_t v10 = *(void *)(a2 + v5 + 40);
        uint64_t v11 = *(void *)(a2 + v5 + 64);
        char v12 = *(unsigned char *)(a2 + v5 + 72);
        v17[0] = *(void *)(a2 + v5 + 32);
        v17[1] = v10;
        long long v18 = *(_OWORD *)(a2 + v5 + 48);
        uint64_t v19 = v11;
        char v20 = v12;
        char v13 = _s8NewsFeed27FormatProgressViewNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v21, (uint64_t)v17);
        BOOL v15 = v6-- != 0;
        if ((v13 & 1) == 0) {
          break;
        }
        v5 += 48;
      }
      while (v15);
    }
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1C00ED7E8(uint64_t a1, uint64_t a2)
{
  return sub_1C00ED8EC(a1, a2, (uint64_t (*)(_OWORD *, _OWORD *))_s8NewsFeed20FormatVideoNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0);
}

uint64_t sub_1C00ED800(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = *(_OWORD *)(v3 + 112);
        v19[6] = *(_OWORD *)(v3 + 96);
        _OWORD v19[7] = v7;
        v19[8] = *(_OWORD *)(v3 + 128);
        uint64_t v20 = *(void *)(v3 + 144);
        long long v8 = *(_OWORD *)(v3 + 48);
        v19[2] = *(_OWORD *)(v3 + 32);
        v19[3] = v8;
        long long v9 = *(_OWORD *)(v3 + 80);
        v19[4] = *(_OWORD *)(v3 + 64);
        v19[5] = v9;
        long long v10 = *(_OWORD *)(v3 + 16);
        v19[0] = *(_OWORD *)v3;
        v19[1] = v10;
        long long v11 = *(_OWORD *)(v4 + 112);
        v17[6] = *(_OWORD *)(v4 + 96);
        _OWORD v17[7] = v11;
        v17[8] = *(_OWORD *)(v4 + 128);
        uint64_t v18 = *(void *)(v4 + 144);
        long long v12 = *(_OWORD *)(v4 + 48);
        void v17[2] = *(_OWORD *)(v4 + 32);
        _OWORD v17[3] = v12;
        long long v13 = *(_OWORD *)(v4 + 80);
        v17[4] = *(_OWORD *)(v4 + 64);
        v17[5] = v13;
        long long v14 = *(_OWORD *)(v4 + 16);
        v17[0] = *(_OWORD *)v4;
        v17[1] = v14;
        char v15 = _s8NewsFeed25FormatIssueCoverNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v19, (uint64_t)v17);
        if ((v15 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 152;
        v3 += 152;
      }
      while (v6);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C00ED8EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *, _OWORD *))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 == *(void *)(a2 + 16))
  {
    if (!v3 || a1 == a2)
    {
      char v19 = 1;
    }
    else
    {
      uint64_t v5 = a1 + 32;
      uint64_t v6 = a2 + 32;
      uint64_t v7 = v3 - 1;
      do
      {
        uint64_t v8 = v7;
        long long v9 = *(_OWORD *)(v5 + 144);
        v23[8] = *(_OWORD *)(v5 + 128);
        v23[9] = v9;
        char v24 = *(unsigned char *)(v5 + 160);
        long long v10 = *(_OWORD *)(v5 + 80);
        v23[4] = *(_OWORD *)(v5 + 64);
        v23[5] = v10;
        long long v11 = *(_OWORD *)(v5 + 112);
        v23[6] = *(_OWORD *)(v5 + 96);
        v23[7] = v11;
        long long v12 = *(_OWORD *)(v5 + 16);
        v23[0] = *(_OWORD *)v5;
        v23[1] = v12;
        long long v13 = *(_OWORD *)(v5 + 48);
        v23[2] = *(_OWORD *)(v5 + 32);
        v23[3] = v13;
        long long v14 = *(_OWORD *)(v6 + 144);
        v21[8] = *(_OWORD *)(v6 + 128);
        v21[9] = v14;
        char v22 = *(unsigned char *)(v6 + 160);
        long long v15 = *(_OWORD *)(v6 + 80);
        v21[4] = *(_OWORD *)(v6 + 64);
        v21[5] = v15;
        long long v16 = *(_OWORD *)(v6 + 112);
        v21[6] = *(_OWORD *)(v6 + 96);
        v21[7] = v16;
        long long v17 = *(_OWORD *)(v6 + 16);
        v21[0] = *(_OWORD *)v6;
        v21[1] = v17;
        long long v18 = *(_OWORD *)(v6 + 48);
        void v21[2] = *(_OWORD *)(v6 + 32);
        v21[3] = v18;
        char v19 = a3(v23, v21);
        if ((v19 & 1) == 0) {
          break;
        }
        uint64_t v7 = v8 - 1;
        v6 += 168;
        v5 += 168;
      }
      while (v8);
    }
  }
  else
  {
    char v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1C00ED9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v19 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      uint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = v3[11];
        v22[10] = v3[10];
        v22[11] = v7;
        v22[12] = v3[12];
        long long v8 = v3[7];
        v22[6] = v3[6];
        v22[7] = v8;
        long long v9 = v3[9];
        v22[8] = v3[8];
        v22[9] = v9;
        long long v10 = v3[3];
        _OWORD v22[2] = v3[2];
        v22[3] = v10;
        long long v11 = v3[5];
        v22[4] = v3[4];
        v22[5] = v11;
        long long v12 = v3[1];
        v22[0] = *v3;
        v22[1] = v12;
        long long v13 = v4[11];
        _OWORD v21[10] = v4[10];
        v21[11] = v13;
        v21[12] = v4[12];
        long long v14 = v4[7];
        v21[6] = v4[6];
        v21[7] = v14;
        long long v15 = v4[9];
        v21[8] = v4[8];
        v21[9] = v15;
        long long v16 = v4[3];
        void v21[2] = v4[2];
        v21[3] = v16;
        long long v17 = v4[5];
        v21[4] = v4[4];
        v21[5] = v17;
        long long v18 = v4[1];
        v21[0] = *v4;
        v21[1] = v18;
        char v19 = _s8NewsFeed27FormatLayeredMediaNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v22, (uint64_t)v21);
        if ((v19 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 13;
        v3 += 13;
      }
      while (v6);
    }
  }
  else
  {
    char v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1C00EDAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v26 = a1;
      while (1)
      {
        int v5 = *(unsigned __int8 *)(a1 + v4 + 48);
        uint64_t v6 = *(void *)(a1 + v4 + 56);
        int v7 = *(unsigned __int8 *)(a1 + v4 + 66);
        int v8 = *(unsigned __int16 *)(a1 + v4 + 64);
        int v28 = *(unsigned __int8 *)(a1 + v4 + 67);
        int v9 = *(unsigned __int8 *)(v3 + v4 + 48);
        uint64_t v10 = *(void *)(v3 + v4 + 56);
        int v11 = *(unsigned __int8 *)(v3 + v4 + 66);
        int v12 = *(unsigned __int16 *)(v3 + v4 + 64);
        int v13 = *(unsigned __int8 *)(v3 + v4 + 67);
        if (*(void *)(a1 + v4 + 32) != *(void *)(v3 + v4 + 32)
          || *(void *)(a1 + v4 + 40) != *(void *)(v3 + v4 + 40))
        {
          int v25 = *(unsigned __int8 *)(v3 + v4 + 67);
          uint64_t v14 = *(void *)(a1 + v4 + 56);
          uint64_t v15 = *(void *)(v3 + v4 + 56);
          uint64_t v16 = v2;
          int v17 = *(unsigned __int16 *)(v3 + v4 + 64);
          char v18 = sub_1C1520A9C();
          int v12 = v17;
          uint64_t v2 = v16;
          uint64_t v10 = v15;
          uint64_t v6 = v14;
          int v13 = v25;
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        if (v5 == 2)
        {
          if (v9 != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (v9 == 2 || ((((v5 & 1) == 0) ^ v9) & 1) == 0) {
            return result;
          }
        }
        uint64_t v20 = v8 | (v7 << 16);
        uint64_t v21 = v12 | (v11 << 16);
        if (BYTE2(v20) == 255)
        {
          if (BYTE2(v21) != 255) {
            goto LABEL_32;
          }
        }
        else
        {
          uint64_t v32 = v6;
          unsigned __int16 v33 = v20;
          char v34 = BYTE2(v20);
          if (BYTE2(v21) == 255)
          {
            uint64_t v23 = v10;
            sub_1BFFA742C(v6, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            sub_1BFFA742C(v6, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            sub_1BFFA742C(v6, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
            uint64_t v10 = v23;
LABEL_32:
            uint64_t v24 = v10;
            sub_1BFF9C7FC(v10, v21);
            sub_1BFF9C84C(v6, v20);
            sub_1BFF9C84C(v24, v21);
            return 0;
          }
          uint64_t v29 = v10;
          __int16 v30 = v12;
          char v31 = (v12 | (v11 << 16)) >> 16;
          sub_1BFFA742C(v6, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          sub_1BFFA742C(v6, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          char v22 = _s8NewsFeed31FormatSupplementaryNodePinTraitO2eeoiySbAC_ACtFZ_0((uint64_t)&v32, (uint64_t)&v29);
          sub_1BFFA742C(v32, v33, v34, (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
          sub_1BFF9C84C(v6, v20);
          if ((v22 & 1) == 0) {
            return 0;
          }
        }
        if (v28 == 3)
        {
          if (v13 != 3) {
            return 0;
          }
        }
        else
        {
          if (v13 == 3) {
            return 0;
          }
          if (v28 == 2)
          {
            if (v13 != 2) {
              return 0;
            }
          }
          else
          {
            uint64_t result = 0;
            if (v13 == 2 || ((v13 ^ v28) & 1) != 0) {
              return result;
            }
          }
        }
        v4 += 40;
        --v2;
        a1 = v26;
        uint64_t v3 = a2;
        if (!v2) {
          return 1;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_1C00EDE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00F6E80(0, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v61 - v9;
  sub_1C00F6ED4(0, (unint64_t *)&qword_1EA196BD8, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v79 = (uint64_t)&v61 - v13;
  uint64_t v14 = type metadata accessor for FormatOption();
  MEMORY[0x1F4188790](v14);
  uint64_t v81 = (uint64_t *)((char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (uint64_t *)((char *)&v61 - v19);
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21 == *(void *)(a2 + 16))
  {
    if (!v21 || a1 == a2) {
      return 1;
    }
    uint64_t v75 = v17;
    uint64_t v76 = v12;
    uint64_t v71 = v7;
    uint64_t v72 = v10;
    uint64_t v22 = 0;
    uint64_t v23 = a1 + 32;
    uint64_t v24 = a2 + 32;
    uint64_t v73 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v69 = v21;
    uint64_t v70 = v18;
    while (1)
    {
      uint64_t v26 = (uint64_t *)(v23 + 32 * v22);
      uint64_t v27 = *v26;
      uint64_t v28 = v26[1];
      int v29 = *((unsigned __int8 *)v26 + 16);
      uint64_t v30 = v26[3];
      char v31 = (uint64_t *)(v24 + 32 * v22);
      uint64_t v32 = *v31;
      uint64_t v33 = v31[1];
      int v34 = *((unsigned __int8 *)v31 + 16);
      uint64_t v80 = v31[3];
      if (v27 != v32 || v28 != v33)
      {
        uint64_t v36 = v28;
        uint64_t v37 = v4;
        uint64_t v38 = v23;
        char v39 = sub_1C1520A9C();
        uint64_t v23 = v38;
        uint64_t v4 = v37;
        uint64_t v28 = v36;
        uint64_t v21 = v69;
        uint64_t v18 = v70;
        if ((v39 & 1) == 0) {
          break;
        }
      }
      if (v29 == 2)
      {
        if (v34 != 2) {
          return 0;
        }
      }
      else
      {
        uint64_t result = 0;
        if (v34 == 2 || ((((v29 & 1) == 0) ^ v34) & 1) == 0) {
          return result;
        }
      }
      if (v30)
      {
        if (!v80) {
          return 0;
        }
        uint64_t v40 = *(void *)(v30 + 16);
        if (v40 != *(void *)(v80 + 16)) {
          return 0;
        }
        if (v40 && v30 != v80)
        {
          uint64_t v62 = v24;
          uint64_t v63 = v23;
          uint64_t v64 = v22;
          unint64_t v41 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
          uint64_t v65 = v28;
          uint64_t v42 = v18;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          uint64_t v66 = v33;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          unint64_t v43 = 0;
          uint64_t v74 = *(void *)(v42 + 72);
          BOOL v44 = v73;
          uint64_t v77 = v30;
          uint64_t v78 = v4;
          uint64_t v67 = v40;
          uint64_t v68 = v20;
          while (1)
          {
            uint64_t result = sub_1C00F70EC(v30 + v41, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatOption);
            if (v43 >= *(void *)(v80 + 16)) {
              break;
            }
            char v45 = v81;
            sub_1C00F70EC(v80 + v41, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for FormatOption);
            BOOL v46 = *v20 == *v45 && v20[1] == v45[1];
            if (!v46 && (sub_1C1520A9C() & 1) == 0) {
              goto LABEL_50;
            }
            uint64_t v47 = v20[2];
            unint64_t v82 = v81[2];
            uint64_t v83 = v47;
            if ((static FormatOptionValue.== infix(_:_:)(&v83, &v82) & 1) == 0) {
              goto LABEL_50;
            }
            uint64_t v48 = v20[3];
            uint64_t v49 = v81[3];
            if (v48 == 1)
            {
              if (v49 != 1) {
                goto LABEL_50;
              }
            }
            else
            {
              if (v49 == 1) {
                goto LABEL_50;
              }
              if (v48)
              {
                if (!v49) {
                  goto LABEL_50;
                }
                sub_1BFEF95A8(v81[3]);
                sub_1BFEF95A8(v48);
                char v50 = sub_1BFEFAE14(v48, v49);
                sub_1BFEF9514(v49);
                sub_1BFEF9514(v48);
                if ((v50 & 1) == 0) {
                  goto LABEL_50;
                }
              }
              else if (v49)
              {
                goto LABEL_50;
              }
            }
            uint64_t v51 = *(int *)(v75 + 28);
            uint64_t v52 = (uint64_t)v81 + v51;
            uint64_t v53 = v79;
            uint64_t v54 = v79 + *(int *)(v76 + 48);
            sub_1C00F63DC((uint64_t)v20 + v51, v79, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
            sub_1C00F63DC(v52, v54, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
            unint64_t v55 = *v44;
            uint64_t v56 = v78;
            if ((*v44)(v53, 1, v78) == 1)
            {
              if (v55(v54, 1, v56) != 1) {
                goto LABEL_49;
              }
              sub_1C00F6448(v79, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
            }
            else
            {
              uint64_t v57 = v79;
              uint64_t v58 = (uint64_t)v72;
              sub_1C00F63DC(v79, (uint64_t)v72, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
              if (v55(v54, 1, v56) == 1)
              {
                sub_1C00F7154(v58, type metadata accessor for FormatVersionRequirement);
                uint64_t v20 = v68;
LABEL_49:
                sub_1C00F6F38(v79, (unint64_t *)&qword_1EA196BD8, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
LABEL_50:
                sub_1C00F7154((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for FormatOption);
                sub_1C00F7154((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatOption);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                return 0;
              }
              uint64_t v59 = (uint64_t)v71;
              sub_1C00F6F94(v54, (uint64_t)v71, type metadata accessor for FormatVersionRequirement);
              char v60 = sub_1C02F0BB4(v58, v59);
              sub_1C00F7154(v58, type metadata accessor for FormatVersionRequirement);
              sub_1C00F7154(v59, type metadata accessor for FormatVersionRequirement);
              sub_1C00F6448(v57, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
              BOOL v44 = v73;
              uint64_t v40 = v67;
              uint64_t v20 = v68;
              if ((v60 & 1) == 0) {
                goto LABEL_50;
              }
            }
            ++v43;
            sub_1C00F7154((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for FormatOption);
            sub_1C00F7154((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatOption);
            v41 += v74;
            uint64_t v30 = v77;
            uint64_t v4 = v78;
            if (v40 == v43)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              uint64_t v21 = v69;
              uint64_t v18 = v70;
              uint64_t v23 = v63;
              uint64_t v22 = v64;
              uint64_t v24 = v62;
              goto LABEL_7;
            }
          }
          __break(1u);
          return result;
        }
      }
      else if (v80)
      {
        return 0;
      }
LABEL_7:
      ++v22;
      uint64_t result = 1;
      if (v22 == v21) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_1C00EE5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v2 - 1;
      do
      {
        uint64_t v7 = *(void *)(a1 + v5 + 40);
        char v8 = *(unsigned char *)(a1 + v5 + 64);
        __int16 v9 = *(_WORD *)(a1 + v5 + 88);
        char v10 = *(unsigned char *)(a1 + v5 + 90);
        v25[0] = *(void *)(a1 + v5 + 32);
        v25[1] = v7;
        long long v26 = *(_OWORD *)(a1 + v5 + 48);
        char v27 = v8;
        long long v28 = *(_OWORD *)(a1 + v5 + 72);
        __int16 v29 = v9;
        char v30 = v10;
        uint64_t v11 = *(void *)(a2 + v5 + 40);
        char v12 = *(unsigned char *)(a2 + v5 + 64);
        __int16 v13 = *(_WORD *)(a2 + v5 + 88);
        char v14 = *(unsigned char *)(a2 + v5 + 90);
        v19[0] = *(void *)(a2 + v5 + 32);
        v19[1] = v11;
        long long v20 = *(_OWORD *)(a2 + v5 + 48);
        char v21 = v12;
        long long v22 = *(_OWORD *)(a2 + v5 + 72);
        __int16 v23 = v13;
        char v24 = v14;
        char v15 = _s8NewsFeed23FormatWebEmbedNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v25, (uint64_t)v19);
        BOOL v17 = v6-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v5 += 64;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C00EE6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    goto LABEL_40;
  }
  if (!v2 || a1 == a2)
  {
    char v40 = 1;
    return v40 & 1;
  }
  uint64_t v3 = v2 - 1;
  uint64_t v4 = (uint64_t *)(a2 + 48);
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v5 - 2);
    uint64_t v6 = *(v5 - 1);
    uint64_t v9 = *v5;
    uint64_t v8 = v5[1];
    uint64_t v65 = v5[3];
    uint64_t v62 = v5[4];
    uint64_t v63 = v5[2];
    uint64_t v11 = *(v4 - 2);
    uint64_t v10 = *(v4 - 1);
    uint64_t v12 = *v4;
    uint64_t v13 = v4[1];
    uint64_t v60 = v10;
    uint64_t v61 = v4[2];
    uint64_t v64 = v4[3];
    uint64_t v66 = v4[4];
    unint64_t v67 = v5[5];
    uint64_t v55 = *v5;
    char v56 = v8;
    uint64_t v53 = v7;
    uint64_t v54 = v6;
    uint64_t v51 = v3;
    char v52 = v13;
    uint64_t v57 = v11;
    uint64_t v58 = *v4;
    unint64_t v59 = v4[5];
    uint64_t v49 = v5;
    char v50 = v4;
    if ((v8 & 4) != 0)
    {
      if ((v13 & 4) == 0)
      {
LABEL_26:
        sub_1C0007DB4(v7, v6, v9, v8);
        sub_1C0007DB4(v11, v10, v12, v13);
        sub_1C0007E38(v7, v6, v9, v8);
        sub_1C0007E38(v11, v10, v12, v13);
        goto LABEL_40;
      }
      *(void *)&long long v71 = *(v5 - 2);
      *(void *)&long long v68 = v11;
      uint64_t v21 = v11;
      uint64_t v22 = v11;
      uint64_t v23 = v10;
      sub_1C0007DB4(v21, v10, v12, v13);
      sub_1C0007DB4(v7, v6, v9, v8);
      sub_1C0007DB4(v22, v10, v12, v13);
      sub_1C0007DB4(v7, v6, v9, v8);
      sub_1C0007DB4(v7, v6, v9, v8);
      sub_1C0007DB4(v22, v10, v12, v13);
      sub_1C0007DB4(v7, v6, v9, v8);
      uint64_t v20 = v62;
      sub_1C0007EEC(v63, v65, v62);
      swift_retain();
      sub_1C0007DB4(v22, v10, v12, v13);
      uint64_t v18 = v61;
      sub_1C0007EEC(v61, v64, v66);
      swift_retain();
      char v48 = static FormatTextContent.== infix(_:_:)((uint64_t *)&v71, (unint64_t *)&v68);
      sub_1C0007E38(v7, v6, v9, v8);
      sub_1C0007E38(v22, v23, v12, v13);
      sub_1C0007E38(v22, v23, v12, v13);
      sub_1C0007E38(v7, v6, v9, v8);
      sub_1C0007E38(v22, v23, v12, v13);
      sub_1C0007E38(v7, v6, v9, v8);
      if ((v48 & 1) == 0)
      {
        sub_1C0007E38(v57, v60, v58, v13);
        sub_1C0007E9C(v61, v64, v66);
        swift_release();
        sub_1C0007E38(v7, v6, v55, v8);
        sub_1C0007E9C(v63, v65, v62);
        goto LABEL_39;
      }
    }
    else
    {
      if ((v13 & 4) != 0) {
        goto LABEL_26;
      }
      sub_1C0007DB4(v11, v10, v12, v13);
      sub_1C0007DB4(v7, v6, v9, v8);
      sub_1C0007DB4(v11, v10, v12, v13);
      sub_1C0007DB4(v7, v6, v9, v8);
      sub_1C0007DB4(v7, v6, v9, v8);
      sub_1C0007DB4(v11, v10, v12, v13);
      sub_1C0007DB4(v7, v6, v9, v8);
      sub_1C0007EEC(v63, v65, v62);
      swift_retain();
      sub_1C0007DB4(v11, v10, v12, v13);
      sub_1C0007EEC(v61, v64, v66);
      swift_retain();
      if ((sub_1C00EF598(v7, v11) & 1) == 0) {
        goto LABEL_29;
      }
      uint64_t v14 = *(void *)(v6 + 32);
      __int16 v15 = *(_WORD *)(v6 + 40);
      uint64_t v16 = *(void *)(v10 + 32);
      __int16 v17 = *(_WORD *)(v10 + 40);
      long long v71 = *(_OWORD *)(v6 + 16);
      uint64_t v72 = v14;
      __int16 v73 = v15;
      long long v68 = *(_OWORD *)(v10 + 16);
      uint64_t v69 = v16;
      __int16 v70 = v17;
      if ((static FormatCommandBinding.== infix(_:_:)(&v71, &v68) & 1) == 0
        || (sub_1C00F0728(v9, v12, static FormatTextContent.== infix(_:_:)) & 1) == 0)
      {
LABEL_29:
        sub_1C0007E38(v7, v6, v9, v8);
        sub_1C0007E38(v11, v10, v12, v13);
        sub_1C0007E38(v11, v10, v12, v13);
        sub_1C0007E38(v7, v6, v9, v8);
        sub_1C0007E38(v11, v10, v12, v13);
        sub_1C0007E38(v7, v6, v9, v8);
        sub_1C0007E38(v11, v10, v12, v13);
        uint64_t v43 = v61;
LABEL_32:
        sub_1C0007E9C(v43, v64, v66);
        swift_release();
        sub_1C0007E38(v7, v6, v9, v8);
        sub_1C0007E9C(v63, v65, v62);
        goto LABEL_39;
      }
      uint64_t v18 = v61;
      *(void *)&long long v71 = v8;
      *(void *)&long long v68 = v13;
      char v19 = static FormatTextContent.== infix(_:_:)((uint64_t *)&v71, (unint64_t *)&v68);
      sub_1C0007E38(v7, v6, v9, v8);
      sub_1C0007E38(v11, v60, v12, v13);
      sub_1C0007E38(v11, v60, v12, v13);
      sub_1C0007E38(v7, v6, v9, v8);
      sub_1C0007E38(v11, v60, v12, v13);
      sub_1C0007E38(v7, v6, v9, v8);
      if ((v19 & 1) == 0)
      {
        sub_1C0007E38(v11, v60, v58, v13);
        uint64_t v43 = v61;
        goto LABEL_32;
      }
      uint64_t v20 = v62;
    }
    if ((v20 & 0x2000000000000000) == 0) {
      break;
    }
    uint64_t v24 = v66;
    if ((v66 & 0x2000000000000000) == 0)
    {
LABEL_28:
      uint64_t v25 = v63;
      uint64_t v31 = v65;
      sub_1C0007EEC(v63, v65, v20);
      sub_1C0007EEC(v18, v64, v24);
      sub_1C0007E9C(v63, v65, v20);
      sub_1C0007E9C(v18, v64, v24);
      sub_1C0007E38(v57, v60, v58, v52);
      uint64_t v41 = v18;
      uint64_t v42 = v64;
      goto LABEL_34;
    }
    uint64_t v25 = v63;
    *(void *)&long long v71 = v63;
    uint64_t v30 = v18;
    *(void *)&long long v68 = v18;
    uint64_t v38 = v18;
    uint64_t v36 = v64;
    sub_1C0007EEC(v38, v64, v66);
    uint64_t v31 = v65;
    sub_1C0007EEC(v63, v65, v20);
    sub_1C0007EEC(v30, v64, v66);
    sub_1C0007EEC(v63, v65, v20);
    sub_1C0007EEC(v63, v65, v20);
    sub_1C0007EEC(v30, v64, v66);
    char v39 = static FormatSyncImageContent.== infix(_:_:)((uint64_t *)&v71, (unint64_t *)&v68);
    sub_1C0007E9C(v63, v65, v20);
    sub_1C0007E9C(v30, v64, v66);
    sub_1C0007E9C(v30, v64, v66);
    sub_1C0007E9C(v63, v65, v20);
    sub_1C0007E9C(v30, v64, v66);
    sub_1C0007E9C(v63, v65, v20);
    uint64_t v32 = v55;
    unint64_t v37 = v67;
    uint64_t v33 = v57;
    uint64_t v35 = v20;
    if ((v39 & 1) == 0)
    {
      sub_1C0007E38(v57, v60, v58, v52);
      sub_1C0007E9C(v30, v64, v66);
      swift_release();
      sub_1C0007E38(v53, v54, v55, v56);
      sub_1C0007E9C(v63, v65, v20);
      goto LABEL_39;
    }
LABEL_22:
    char v40 = sub_1C128DBB4(v37, v59);
    sub_1C0007E38(v33, v60, v58, v52);
    sub_1C0007E9C(v30, v36, v24);
    swift_release();
    sub_1C0007E38(v53, v54, v32, v56);
    sub_1C0007E9C(v25, v31, v35);
    swift_release();
    uint64_t v3 = v51 - 1;
    if (v40)
    {
      uint64_t v4 = v50 + 8;
      uint64_t v5 = v49 + 8;
      if (v51) {
        continue;
      }
    }
    return v40 & 1;
  }
  uint64_t v24 = v66;
  if ((v66 & 0x2000000000000000) != 0) {
    goto LABEL_28;
  }
  uint64_t v25 = v63;
  uint64_t v26 = *(void *)(v63 + 32);
  __int16 v27 = *(_WORD *)(v63 + 40);
  uint64_t v28 = *(void *)(v18 + 32);
  __int16 v29 = *(_WORD *)(v18 + 40);
  long long v71 = *(_OWORD *)(v63 + 16);
  uint64_t v72 = v26;
  __int16 v73 = v27;
  long long v68 = *(_OWORD *)(v18 + 16);
  uint64_t v69 = v28;
  __int16 v70 = v29;
  uint64_t v30 = v18;
  sub_1C0007EEC(v18, v64, v66);
  uint64_t v31 = v65;
  sub_1C0007EEC(v63, v65, v20);
  sub_1C0007EEC(v18, v64, v66);
  sub_1C0007EEC(v63, v65, v20);
  sub_1C0007EEC(v63, v65, v20);
  sub_1C0007EEC(v18, v64, v66);
  if (static FormatCommandBinding.== infix(_:_:)(&v71, &v68))
  {
    uint64_t v32 = v55;
    uint64_t v33 = v57;
    if ((sub_1C00EF224(v65, v64) & 1) == 0)
    {
      sub_1C0007E9C(v63, v65, v20);
      sub_1C0007E9C(v18, v64, v66);
      sub_1C0007E9C(v18, v64, v66);
      sub_1C0007E9C(v63, v65, v20);
      sub_1C0007E9C(v18, v64, v66);
      sub_1C0007E9C(v63, v65, v20);
      sub_1C0007E38(v57, v60, v58, v52);
      sub_1C0007E9C(v18, v64, v66);
      swift_release();
      sub_1C0007E38(v7, v54, v55, v56);
      sub_1C0007E9C(v63, v65, v20);
      goto LABEL_39;
    }
    *(void *)&long long v71 = v20;
    *(void *)&long long v68 = v66;
    char v34 = static FormatSyncImageContent.== infix(_:_:)((uint64_t *)&v71, (unint64_t *)&v68);
    sub_1C0007E9C(v63, v65, v20);
    sub_1C0007E9C(v30, v64, v66);
    sub_1C0007E9C(v30, v64, v66);
    sub_1C0007E9C(v63, v65, v20);
    uint64_t v35 = v20;
    sub_1C0007E9C(v30, v64, v66);
    sub_1C0007E9C(v63, v65, v20);
    if ((v34 & 1) == 0)
    {
      sub_1C0007E38(v57, v60, v58, v52);
      sub_1C0007E9C(v30, v64, v66);
      swift_release();
      sub_1C0007E38(v7, v54, v55, v56);
      uint64_t v44 = v63;
      uint64_t v45 = v65;
      uint64_t v46 = v20;
      goto LABEL_37;
    }
    uint64_t v36 = v64;
    unint64_t v37 = v67;
    goto LABEL_22;
  }
  sub_1C0007E9C(v63, v65, v20);
  sub_1C0007E9C(v18, v64, v66);
  sub_1C0007E9C(v18, v64, v66);
  sub_1C0007E9C(v63, v65, v20);
  sub_1C0007E9C(v18, v64, v66);
  sub_1C0007E9C(v63, v65, v20);
  sub_1C0007E38(v57, v60, v58, v52);
  uint64_t v41 = v18;
  uint64_t v42 = v64;
LABEL_34:
  sub_1C0007E9C(v41, v42, v24);
  swift_release();
  sub_1C0007E38(v7, v54, v55, v56);
  uint64_t v44 = v25;
  uint64_t v45 = v31;
  uint64_t v46 = v20;
LABEL_37:
  sub_1C0007E9C(v44, v45, v46);
LABEL_39:
  swift_release();
LABEL_40:
  char v40 = 0;
  return v40 & 1;
}

uint64_t sub_1C00EF224(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unint64_t *)(a2 + 56);
  for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    uint64_t v6 = *(i - 3);
    uint64_t v5 = *(i - 2);
    int v7 = *((unsigned __int8 *)i - 8);
    uint64_t v8 = *i;
    uint64_t v10 = *(v3 - 3);
    uint64_t v9 = *(v3 - 2);
    int v11 = *((unsigned __int8 *)v3 - 8);
    unint64_t v12 = *v3;
    v23[1] = v6;
    v23[2] = v5;
    char v24 = v7;
    uint64_t v25 = v8;
    v23[0] = v12;
    char v21 = v11;
    char v22 = v7;
    if (!v7) {
      break;
    }
    if (v7 == 1)
    {
      if (v11 != 1) {
        goto LABEL_23;
      }
      sub_1BFF5B7E0(v6, v5, 1);
      swift_retain();
      sub_1BFF5B7E0(v10, v9, 1);
      swift_retain();
      sub_1BFF5B7CC(v6, v5, 1);
      sub_1BFF5B7CC(v10, v9, 1);
      if (((((v6 & 1) == 0) ^ v10) & 1) == 0)
      {
        sub_1BFF5B7CC(v10, v9, 1);
        swift_release();
        uint64_t v18 = v6;
        uint64_t v19 = v5;
        char v20 = 1;
        goto LABEL_25;
      }
    }
    else
    {
      if (v11 != 2) {
        goto LABEL_23;
      }
      sub_1BFF5B7E0(v6, v5, 2);
      swift_retain();
      sub_1BFF5B7E0(v10, v9, 2);
      swift_retain();
      sub_1BFF5B7CC(v6, v5, 2);
      sub_1BFF5B7CC(v10, v9, 2);
      if (v6 != v10)
      {
        sub_1BFF5B7CC(v10, v9, 2);
        swift_release();
        uint64_t v18 = v6;
        uint64_t v19 = v5;
        char v20 = 2;
        goto LABEL_25;
      }
    }
LABEL_19:
    char v14 = static FormatSyncImageContent.== infix(_:_:)(&v25, v23);
    sub_1BFF5B7CC(v10, v9, v21);
    swift_release();
    sub_1BFF5B7CC(v6, v5, v22);
    swift_release();
    if ((v14 & 1) == 0) {
      return 0;
    }
    v3 += 4;
    if (!--v2) {
      return 1;
    }
  }
  if (v11)
  {
    char v16 = v11;
    swift_bridgeObjectRetain();
    LOBYTE(v11) = v16;
LABEL_23:
    char v17 = v11;
    sub_1BFF5B7E0(v10, v9, v11);
    sub_1BFF5B7CC(v6, v5, v7);
    sub_1BFF5B7CC(v10, v9, v17);
    return 0;
  }
  if (v6 == v10 && v5 == v9) {
    char v13 = 1;
  }
  else {
    char v13 = sub_1C1520A9C();
  }
  sub_1BFF5B7E0(v6, v5, 0);
  swift_retain();
  sub_1BFF5B7E0(v10, v9, 0);
  swift_retain();
  sub_1BFF5B7E0(v10, v9, 0);
  sub_1BFF5B7E0(v6, v5, 0);
  sub_1BFF5B7CC(v6, v5, 0);
  sub_1BFF5B7CC(v10, v9, 0);
  if (v13) {
    goto LABEL_19;
  }
  sub_1BFF5B7CC(v10, v9, 0);
  swift_release();
  uint64_t v18 = v6;
  uint64_t v19 = v5;
  char v20 = 0;
LABEL_25:
  sub_1BFF5B7CC(v18, v19, v20);
  swift_release();
  return 0;
}

uint64_t sub_1C00EF598(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16))
  {
LABEL_13:
    char v16 = 0;
    return v16 & 1;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = v2 - 1;
    uint64_t v4 = (uint64_t *)(a2 + 56);
    uint64_t v5 = (uint64_t *)(a1 + 56);
    while (1)
    {
      uint64_t v18 = v3;
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v8 = *(v5 - 3);
      uint64_t v9 = *(v5 - 2);
      uint64_t v10 = *(v4 - 2);
      uint64_t v11 = *v4;
      uint64_t v19 = *(v4 - 1);
      *(void *)&long long v20 = *(v4 - 3);
      *(void *)&long long v23 = v8;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatExpression.== infix(_:_:)((uint64_t *)&v23, (unint64_t *)&v20) & 1) == 0) {
        break;
      }
      uint64_t v12 = *(void *)(v9 + 32);
      __int16 v13 = *(_WORD *)(v9 + 40);
      uint64_t v14 = *(void *)(v10 + 32);
      __int16 v15 = *(_WORD *)(v10 + 40);
      long long v23 = *(_OWORD *)(v9 + 16);
      uint64_t v24 = v12;
      __int16 v25 = v13;
      long long v20 = *(_OWORD *)(v10 + 16);
      uint64_t v21 = v14;
      __int16 v22 = v15;
      if ((static FormatCommandBinding.== infix(_:_:)(&v23, &v20) & 1) == 0
        || (sub_1C00F0728(v6, v19, static FormatTextContent.== infix(_:_:)) & 1) == 0)
      {
        break;
      }
      *(void *)&long long v23 = v7;
      *(void *)&long long v20 = v11;
      char v16 = static FormatTextContent.== infix(_:_:)((uint64_t *)&v23, (unint64_t *)&v20);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v3 = v18 - 1;
      if (v16)
      {
        v4 += 4;
        v5 += 4;
        if (v18) {
          continue;
        }
      }
      return v16 & 1;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_13;
  }
  char v16 = 1;
  return v16 & 1;
}

BOOL sub_1C00EF7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = *(_OWORD *)(v3 + 144);
        v21[8] = *(_OWORD *)(v3 + 128);
        v21[9] = v7;
        _OWORD v21[10] = *(_OWORD *)(v3 + 160);
        char v22 = *(unsigned char *)(v3 + 176);
        long long v8 = *(_OWORD *)(v3 + 80);
        v21[4] = *(_OWORD *)(v3 + 64);
        v21[5] = v8;
        long long v9 = *(_OWORD *)(v3 + 112);
        v21[6] = *(_OWORD *)(v3 + 96);
        v21[7] = v9;
        long long v10 = *(_OWORD *)(v3 + 16);
        v21[0] = *(_OWORD *)v3;
        v21[1] = v10;
        long long v11 = *(_OWORD *)(v3 + 48);
        void v21[2] = *(_OWORD *)(v3 + 32);
        v21[3] = v11;
        long long v12 = *(_OWORD *)(v4 + 144);
        v19[8] = *(_OWORD *)(v4 + 128);
        _OWORD v19[9] = v12;
        v19[10] = *(_OWORD *)(v4 + 160);
        char v20 = *(unsigned char *)(v4 + 176);
        long long v13 = *(_OWORD *)(v4 + 80);
        v19[4] = *(_OWORD *)(v4 + 64);
        v19[5] = v13;
        long long v14 = *(_OWORD *)(v4 + 112);
        v19[6] = *(_OWORD *)(v4 + 96);
        _OWORD v19[7] = v14;
        long long v15 = *(_OWORD *)(v4 + 16);
        v19[0] = *(_OWORD *)v4;
        v19[1] = v15;
        long long v16 = *(_OWORD *)(v4 + 48);
        void v19[2] = *(_OWORD *)(v4 + 32);
        v19[3] = v16;
        BOOL v17 = _s8NewsFeed24FormatGroupNodeMaskStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v21, (uint64_t)v19);
        if (!v17) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 184;
        v3 += 184;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v17;
}

uint64_t sub_1C00EF8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = *(_OWORD *)(v3 + 112);
        v19[6] = *(_OWORD *)(v3 + 96);
        _OWORD v19[7] = v7;
        v19[8] = *(_OWORD *)(v3 + 128);
        __int16 v20 = *(_WORD *)(v3 + 144);
        long long v8 = *(_OWORD *)(v3 + 48);
        void v19[2] = *(_OWORD *)(v3 + 32);
        v19[3] = v8;
        long long v9 = *(_OWORD *)(v3 + 80);
        v19[4] = *(_OWORD *)(v3 + 64);
        v19[5] = v9;
        long long v10 = *(_OWORD *)(v3 + 16);
        v19[0] = *(_OWORD *)v3;
        v19[1] = v10;
        long long v11 = *(_OWORD *)(v4 + 112);
        v17[6] = *(_OWORD *)(v4 + 96);
        _OWORD v17[7] = v11;
        v17[8] = *(_OWORD *)(v4 + 128);
        __int16 v18 = *(_WORD *)(v4 + 144);
        long long v12 = *(_OWORD *)(v4 + 48);
        void v17[2] = *(_OWORD *)(v4 + 32);
        _OWORD v17[3] = v12;
        long long v13 = *(_OWORD *)(v4 + 80);
        v17[4] = *(_OWORD *)(v4 + 64);
        v17[5] = v13;
        long long v14 = *(_OWORD *)(v4 + 16);
        v17[0] = *(_OWORD *)v4;
        v17[1] = v14;
        char v15 = _s8NewsFeed20FormatGroupNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v19, (uint64_t)v17);
        if ((v15 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 152;
        v3 += 152;
      }
      while (v6);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

BOOL sub_1C00EF9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = *(_OWORD *)(v3 + 176);
        _OWORD v23[10] = *(_OWORD *)(v3 + 160);
        v23[11] = v7;
        uint64_t v24 = *(void *)(v3 + 192);
        long long v8 = *(_OWORD *)(v3 + 112);
        v23[6] = *(_OWORD *)(v3 + 96);
        v23[7] = v8;
        long long v9 = *(_OWORD *)(v3 + 144);
        v23[8] = *(_OWORD *)(v3 + 128);
        v23[9] = v9;
        long long v10 = *(_OWORD *)(v3 + 48);
        v23[2] = *(_OWORD *)(v3 + 32);
        unint64_t v23[3] = v10;
        long long v11 = *(_OWORD *)(v3 + 80);
        v23[4] = *(_OWORD *)(v3 + 64);
        v23[5] = v11;
        long long v12 = *(_OWORD *)(v3 + 16);
        v23[0] = *(_OWORD *)v3;
        v23[1] = v12;
        long long v13 = *(_OWORD *)(v4 + 176);
        _OWORD v21[10] = *(_OWORD *)(v4 + 160);
        _OWORD v21[11] = v13;
        uint64_t v22 = *(void *)(v4 + 192);
        long long v14 = *(_OWORD *)(v4 + 112);
        v21[6] = *(_OWORD *)(v4 + 96);
        v21[7] = v14;
        long long v15 = *(_OWORD *)(v4 + 144);
        v21[8] = *(_OWORD *)(v4 + 128);
        v21[9] = v15;
        long long v16 = *(_OWORD *)(v4 + 48);
        void v21[2] = *(_OWORD *)(v4 + 32);
        v21[3] = v16;
        long long v17 = *(_OWORD *)(v4 + 80);
        v21[4] = *(_OWORD *)(v4 + 64);
        v21[5] = v17;
        long long v18 = *(_OWORD *)(v4 + 16);
        v21[0] = *(_OWORD *)v4;
        v21[1] = v18;
        BOOL v19 = _s8NewsFeed20FormatImageNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v23, (uint64_t)v21);
        if (!v19) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 200;
        v3 += 200;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v19;
}

uint64_t sub_1C00EFA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      uint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = v3[7];
        v19[6] = v3[6];
        _OWORD v19[7] = v7;
        v20[0] = v3[8];
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v3 + 137);
        long long v8 = v3[3];
        void v19[2] = v3[2];
        v19[3] = v8;
        long long v9 = v3[5];
        v19[4] = v3[4];
        v19[5] = v9;
        long long v10 = v3[1];
        v19[0] = *v3;
        v19[1] = v10;
        long long v11 = v4[7];
        v17[6] = v4[6];
        _OWORD v17[7] = v11;
        v18[0] = v4[8];
        *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v4 + 137);
        long long v12 = v4[3];
        void v17[2] = v4[2];
        _OWORD v17[3] = v12;
        long long v13 = v4[5];
        v17[4] = v4[4];
        v17[5] = v13;
        long long v14 = v4[1];
        v17[0] = *v4;
        v17[1] = v14;
        char v15 = _s8NewsFeed19FormatViewNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v19, (uint64_t)v17);
        if ((v15 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 10;
        v3 += 10;
      }
      while (v6);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C00EFB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v23 = a1;
      while (1)
      {
        double v5 = *(double *)(a1 + v4 + 48);
        double v6 = *(double *)(a1 + v4 + 56);
        char v7 = *(unsigned char *)(a1 + v4 + 64);
        uint64_t v8 = *(void *)(a1 + v4 + 72);
        uint64_t v9 = *(unsigned __int8 *)(a1 + v4 + 84);
        uint64_t v10 = *(unsigned int *)(a1 + v4 + 80);
        double v11 = *(double *)(v3 + v4 + 48);
        double v12 = *(double *)(v3 + v4 + 56);
        int v13 = *(unsigned __int8 *)(v3 + v4 + 64);
        uint64_t v14 = *(void *)(v3 + v4 + 72);
        uint64_t v15 = *(unsigned __int8 *)(v3 + v4 + 84);
        uint64_t v16 = *(unsigned int *)(v3 + v4 + 80);
        if ((*(void *)(a1 + v4 + 32) != *(void *)(v3 + v4 + 32)
           || *(void *)(a1 + v4 + 40) != *(void *)(v3 + v4 + 40))
          && (sub_1C1520A9C() & 1) == 0)
        {
          return 0;
        }
        if (v7)
        {
          if (!v13) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (v13) {
            return result;
          }
          if (v5 != v11 || v6 != v12) {
            return result;
          }
        }
        if (v8)
        {
          if (!v14) {
            return 0;
          }
          swift_bridgeObjectRetain();
          uint64_t v19 = swift_bridgeObjectRetain();
          char v20 = sub_1C00E0974(v19, v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0) {
            return 0;
          }
        }
        else if (v14)
        {
          return 0;
        }
        uint64_t v21 = v10 | (v9 << 32);
        uint64_t v22 = v16 | (v15 << 32);
        if (BYTE4(v21) == 255)
        {
          if (BYTE4(v22) != 255) {
            return 0;
          }
          goto LABEL_6;
        }
        if (BYTE4(v22) == 255) {
          return 0;
        }
        if (!BYTE4(v21)) {
          break;
        }
        if (BYTE4(v21) == 1)
        {
          uint64_t result = 0;
          if (BYTE4(v22) != 1) {
            return result;
          }
          goto LABEL_31;
        }
        if (v10)
        {
          if (v10 == 1)
          {
            uint64_t result = 0;
            if (BYTE4(v22) != 2 || v16 != 1) {
              return result;
            }
          }
          else
          {
            uint64_t result = 0;
            if (BYTE4(v22) != 2 || v16 != 2) {
              return result;
            }
          }
        }
        else
        {
          uint64_t result = 0;
          if (BYTE4(v22) != 2 || v16) {
            return result;
          }
        }
LABEL_6:
        v4 += 56;
        --v2;
        a1 = v23;
        uint64_t v3 = a2;
        if (!v2) {
          return 1;
        }
      }
      uint64_t result = 0;
      if (BYTE4(v22)) {
        return result;
      }
LABEL_31:
      if (*(float *)&v10 != *(float *)&v16) {
        return result;
      }
      goto LABEL_6;
    }
  }
  return 1;
}

uint64_t sub_1C00EFD90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (unint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v6 = *(i - 1);
      uint64_t v5 = *i;
      unint64_t v7 = *(v3 - 1);
      unint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      unint64_t v12 = v7;
      uint64_t v13 = v6;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if ((static FormatTextContent.== infix(_:_:)(&v13, &v12) & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      unint64_t v12 = v8;
      uint64_t v13 = v5;
      BOOL v10 = static FormatTextNodeAlternativeLogic.== infix(_:_:)((unint64_t *)&v13, &v12);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (!v10) {
        return 0;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C00EFF14(uint64_t a1, uint64_t a2)
{
  return sub_1C00F1444(a1, a2, (void (*)(void))sub_1BFF415D4, (uint64_t (*)(char *, char *))static FormatTextSize.== infix(_:_:), (void (*)(void))sub_1BFF4160C);
}

uint64_t sub_1C00EFF54(uint64_t a1, uint64_t a2)
{
  return sub_1C00F53A0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatMicaNodeContent.== infix(_:_:));
}

uint64_t sub_1C00EFF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      uint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = v3[7];
        v19[6] = v3[6];
        v20[0] = v7;
        *(_OWORD *)((char *)v20 + 10) = *(_OWORD *)((char *)v3 + 122);
        long long v8 = v3[3];
        void v19[2] = v3[2];
        v19[3] = v8;
        long long v9 = v3[5];
        v19[4] = v3[4];
        v19[5] = v9;
        long long v10 = v3[1];
        v19[0] = *v3;
        v19[1] = v10;
        long long v11 = v4[7];
        v17[6] = v4[6];
        v18[0] = v11;
        *(_OWORD *)((char *)v18 + 10) = *(_OWORD *)((char *)v4 + 122);
        long long v12 = v4[3];
        void v17[2] = v4[2];
        _OWORD v17[3] = v12;
        long long v13 = v4[5];
        v17[4] = v4[4];
        v17[5] = v13;
        long long v14 = v4[1];
        v17[0] = *v4;
        v17[1] = v14;
        char v15 = _s8NewsFeed19FormatMicaNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v19, (uint64_t)v17);
        if ((v15 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 9;
        v3 += 9;
      }
      while (v6);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C00F004C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v9 = 0;
    return v9 & 1;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = v2 - 1;
    uint64_t v4 = (uint64_t *)(a2 + 40);
    uint64_t v5 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v8 = *v4;
      unint64_t v13 = *(v4 - 1);
      uint64_t v14 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if ((static FormatExpression.== infix(_:_:)(&v14, &v13) & 1) == 0) {
        break;
      }
      char v9 = sub_1C128DBB4(v7, v8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      BOOL v11 = v3-- != 0;
      if (v9)
      {
        v4 += 2;
        v5 += 2;
        if (v11) {
          continue;
        }
      }
      return v9 & 1;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_14;
  }
  char v9 = 1;
  return v9 & 1;
}

uint64_t sub_1C00F0180(uint64_t a1, uint64_t a2)
{
  return sub_1C00F53A0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatVisibility.== infix(_:_:));
}

uint64_t sub_1C00F0198(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, type metadata accessor for FormatCompilerSlotDefinition, type metadata accessor for FormatCompilerSlotDefinition, (uint64_t (*)(char *, char *))_s8NewsFeed28FormatCompilerSlotDefinitionV2eeoiySbAC_ACtFZ_0, type metadata accessor for FormatCompilerSlotDefinition);
}

uint64_t sub_1C00F01EC(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(char *, char *))static FormatSlotDefinition.== infix(_:_:), (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1C00F0240(uint64_t a1, uint64_t a2)
{
  return sub_1C00F03FC(a1, a2, (unint64_t *)&unk_1EB876740, (void (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(char *, char *))sub_1C0DBE284);
}

uint64_t sub_1C00F027C(uint64_t a1, uint64_t a2)
{
  return sub_1C00F03FC(a1, a2, (unint64_t *)&unk_1EB876730, (void (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(char *, char *))sub_1C0DBEA08);
}

uint64_t sub_1C00F02B8(uint64_t a1, uint64_t a2)
{
  return sub_1C00F03FC(a1, a2, &qword_1EB876760, (void (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(char *, char *))sub_1C0DBF2B8);
}

uint64_t sub_1C00F02F4(uint64_t a1, uint64_t a2)
{
  return sub_1C00F03FC(a1, a2, &qword_1EB876750, (void (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(char *, char *))sub_1C0DBFAAC);
}

uint64_t sub_1C00F0330(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, (uint64_t (*)(void))sub_1C00F6BC8, (uint64_t (*)(void))sub_1C00F6BC8, (uint64_t (*)(char *, char *))sub_1C0DC0330, (uint64_t (*)(void))sub_1C00F6BC8);
}

uint64_t sub_1C00F0384(uint64_t a1, uint64_t a2)
{
  return sub_1C00F03FC(a1, a2, (unint64_t *)&unk_1EB876770, (void (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(char *, char *))sub_1C0DC0914);
}

uint64_t sub_1C00F03C0(uint64_t a1, uint64_t a2)
{
  return sub_1C00F03FC(a1, a2, &qword_1EB876758, (void (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(char *, char *))sub_1C0DC10F0);
}

uint64_t sub_1C00F03FC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(void), uint64_t a5, uint64_t (*a6)(char *, char *))
{
  sub_1C00F6D04(0, a3, a4);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  long long v17 = (char *)&v27 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    if (!v18 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v27 = a1;
      uint64_t v28 = a2;
      uint64_t v19 = a6;
      unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v22 = v18 - 1;
      do
      {
        sub_1C00F6A00(v27 + v20, (uint64_t)v17, a3, a4);
        sub_1C00F6A00(v28 + v20, (uint64_t)v13, a3, a4);
        char v23 = v19(v17, v13);
        sub_1C00F6A70((uint64_t)v13, a3, a4);
        sub_1C00F6A70((uint64_t)v17, a3, a4);
        BOOL v25 = v22-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v20 += v21;
      }
      while (v25);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1C00F05C8(uint64_t a1, uint64_t a2)
{
  return sub_1C00F03FC(a1, a2, &qword_1EB876768, (void (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(char *, char *))sub_1C0DC18B0);
}

BOOL sub_1C00F0604(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

uint64_t sub_1C00F0618(uint64_t a1, uint64_t a2)
{
  return sub_1C00F0630(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatColor.== infix(_:_:));
}

uint64_t sub_1C00F0630(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t *))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 == *(void *)(a2 + 16))
  {
    if (!v3 || a1 == a2)
    {
      char v11 = 1;
    }
    else
    {
      uint64_t v5 = (uint64_t *)(a1 + 32);
      uint64_t v6 = (uint64_t *)(a2 + 32);
      uint64_t v7 = v3 - 1;
      do
      {
        uint64_t v9 = *v5++;
        uint64_t v8 = v9;
        uint64_t v10 = *v6++;
        uint64_t v15 = v10;
        uint64_t v16 = v8;
        char v11 = a3(&v16, &v15);
        BOOL v13 = v7-- != 0;
      }
      while ((v11 & 1) != 0 && v13);
    }
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1C00F06C8(uint64_t a1, uint64_t a2)
{
  return sub_1C00F53A0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatSymbolImageColor.== infix(_:_:));
}

uint64_t sub_1C00F06E0(uint64_t a1, uint64_t a2)
{
  return sub_1C00F53A0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatAsyncImageContent.== infix(_:_:));
}

uint64_t sub_1C00F06F8(uint64_t a1, uint64_t a2)
{
  return sub_1C00F5234(a1, a2, (uint64_t (*)(char *, char *))static FormatAsyncImageContent.== infix(_:_:));
}

uint64_t sub_1C00F0710(uint64_t a1, uint64_t a2)
{
  return sub_1C00F0728(a1, a2, (uint64_t (*)(uint64_t *, void *))static FormatAsyncImageContent.== infix(_:_:));
}

uint64_t sub_1C00F0728(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, void *))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v3 || a1 == a2) {
    return 1;
  }
  uint64_t v4 = (uint64_t *)(a2 + 56);
  for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    uint64_t v7 = *(i - 3);
    uint64_t v6 = *(i - 2);
    int v8 = *((unsigned __int8 *)i - 8);
    uint64_t v9 = *i;
    uint64_t v11 = *(v4 - 3);
    uint64_t v10 = *(v4 - 2);
    int v12 = *((unsigned __int8 *)v4 - 8);
    uint64_t v13 = *v4;
    v25[1] = v7;
    void v25[2] = v6;
    char v26 = v8;
    uint64_t v27 = v9;
    v25[0] = v13;
    char v23 = v12;
    char v24 = v8;
    if (!v8) {
      break;
    }
    if (v8 == 1)
    {
      if (v12 != 1) {
        goto LABEL_23;
      }
      sub_1BFF5B7E0(v7, v6, 1);
      swift_retain();
      sub_1BFF5B7E0(v11, v10, 1);
      swift_retain();
      sub_1BFF5B7CC(v7, v6, 1);
      sub_1BFF5B7CC(v11, v10, 1);
      if (((((v7 & 1) == 0) ^ v11) & 1) == 0)
      {
        sub_1BFF5B7CC(v11, v10, 1);
        swift_release();
        uint64_t v19 = v7;
        uint64_t v20 = v6;
        char v21 = 1;
        goto LABEL_25;
      }
    }
    else
    {
      if (v12 != 2) {
        goto LABEL_23;
      }
      sub_1BFF5B7E0(v7, v6, 2);
      swift_retain();
      sub_1BFF5B7E0(v11, v10, 2);
      swift_retain();
      sub_1BFF5B7CC(v7, v6, 2);
      sub_1BFF5B7CC(v11, v10, 2);
      if (v7 != v11)
      {
        sub_1BFF5B7CC(v11, v10, 2);
        swift_release();
        uint64_t v19 = v7;
        uint64_t v20 = v6;
        char v21 = 2;
        goto LABEL_25;
      }
    }
LABEL_19:
    char v15 = a3(&v27, v25);
    sub_1BFF5B7CC(v11, v10, v23);
    swift_release();
    sub_1BFF5B7CC(v7, v6, v24);
    swift_release();
    if ((v15 & 1) == 0) {
      return 0;
    }
    v4 += 4;
    if (!--v3) {
      return 1;
    }
  }
  if (v12)
  {
    char v17 = v12;
    swift_bridgeObjectRetain();
    LOBYTE(v12) = v17;
LABEL_23:
    char v18 = v12;
    sub_1BFF5B7E0(v11, v10, v12);
    sub_1BFF5B7CC(v7, v6, v8);
    sub_1BFF5B7CC(v11, v10, v18);
    return 0;
  }
  if (v7 == v11 && v6 == v10) {
    char v14 = 1;
  }
  else {
    char v14 = sub_1C1520A9C();
  }
  sub_1BFF5B7E0(v7, v6, 0);
  swift_retain();
  sub_1BFF5B7E0(v11, v10, 0);
  swift_retain();
  sub_1BFF5B7E0(v11, v10, 0);
  sub_1BFF5B7E0(v7, v6, 0);
  sub_1BFF5B7CC(v7, v6, 0);
  sub_1BFF5B7CC(v11, v10, 0);
  if (v14) {
    goto LABEL_19;
  }
  sub_1BFF5B7CC(v11, v10, 0);
  swift_release();
  uint64_t v19 = v7;
  uint64_t v20 = v6;
  char v21 = 0;
LABEL_25:
  sub_1BFF5B7CC(v19, v20, v21);
  swift_release();
  return 0;
}

BOOL sub_1C00F0AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (float *)(a1 + 36);
  uint64_t v4 = (float *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    float v7 = *v3++;
    float v8 = v7;
    float v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1C00F0B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a2 + 48);
    for (uint64_t i = (unsigned __int8 *)(a1 + 48); ; i += 24)
    {
      int v5 = *i;
      int v6 = *v3;
      BOOL v7 = *((void *)i - 2) == *((void *)v3 - 2) && *((void *)i - 1) == *((void *)v3 - 1);
      if (!v7 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      if (v5) {
        uint64_t v8 = 0x746C7561666564;
      }
      else {
        uint64_t v8 = 1685217635;
      }
      if (v5) {
        unint64_t v9 = 0xE700000000000000;
      }
      else {
        unint64_t v9 = 0xE400000000000000;
      }
      if (v6) {
        uint64_t v10 = 0x746C7561666564;
      }
      else {
        uint64_t v10 = 1685217635;
      }
      if (v6) {
        unint64_t v11 = 0xE700000000000000;
      }
      else {
        unint64_t v11 = 0xE400000000000000;
      }
      if (v8 == v10 && v9 == v11)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v13 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      v3 += 24;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1C00F0C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v8 = 1;
    }
    else
    {
      uint64_t v3 = v2 - 1;
      uint64_t v4 = (unsigned char *)(a2 + 48);
      int v5 = (unsigned char *)(a1 + 48);
      do
      {
        char v6 = *v5;
        long long v14 = *((_OWORD *)v5 - 1);
        char v15 = v6;
        char v7 = *v4;
        long long v12 = *((_OWORD *)v4 - 1);
        char v13 = v7;
        char v8 = _s8NewsFeed22FormatGroupRequirementO2eeoiySbAC_ACtFZ_0((uint64_t)&v14, (uint64_t)&v12);
        BOOL v10 = v3-- != 0;
        if ((v8 & 1) == 0) {
          break;
        }
        v4 += 24;
        v5 += 24;
      }
      while (v10);
    }
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1C00F0CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (void *)(a2 + 64);
  for (uint64_t i = (void *)(a1 + 64); ; i += 5)
  {
    uint64_t v7 = *(i - 4);
    uint64_t v6 = *(i - 3);
    int v8 = *((unsigned __int8 *)i - 16);
    uint64_t v9 = *(i - 1);
    uint64_t v10 = *(v3 - 4);
    uint64_t v39 = *(v3 - 3);
    uint64_t v40 = *i;
    LODWORD(v11) = *((unsigned __int8 *)v3 - 16);
    uint64_t v12 = *v3;
    char v37 = *((unsigned char *)v3 - 16);
    uint64_t v36 = v2;
    uint64_t v38 = *(v3 - 1);
    if (*((unsigned char *)i - 16)) {
      break;
    }
    if (*((unsigned char *)v3 - 16))
    {
      char v29 = *((unsigned char *)v3 - 16);
      uint64_t v11 = *(i - 3);
      swift_bridgeObjectRetain();
      uint64_t v6 = v11;
      LOBYTE(v11) = v29;
LABEL_29:
      uint64_t v30 = v6;
      sub_1BFF5B7E0(v10, v39, v11);
      sub_1BFF5B7CC(v7, v30, v8);
      sub_1BFF5B7CC(v10, v39, v11);
      return 0;
    }
    BOOL v20 = v7 == v10 && v6 == v39;
    if (v20)
    {
      uint64_t v18 = *(v3 - 4);
      uint64_t v26 = *(i - 3);
      sub_1BFF5B7E0(v7, v6, 0);
      swift_bridgeObjectRetain();
      sub_1BFF5B7E0(v7, v26, 0);
      swift_bridgeObjectRetain();
      sub_1BFF5B7E0(v7, v26, 0);
      sub_1BFF5B7E0(v7, v26, 0);
      sub_1BFF5B7CC(v7, v26, 0);
      uint64_t v15 = v7;
      uint64_t v27 = v7;
      uint64_t v17 = v26;
      sub_1BFF5B7CC(v27, v26, 0);
    }
    else
    {
      uint64_t v21 = *(i - 3);
      char v34 = sub_1C1520A9C();
      sub_1BFF5B7E0(v7, v21, 0);
      swift_bridgeObjectRetain();
      sub_1BFF5B7E0(v10, v39, 0);
      swift_bridgeObjectRetain();
      sub_1BFF5B7E0(v10, v39, 0);
      sub_1BFF5B7E0(v7, v21, 0);
      uint64_t v15 = v7;
      uint64_t v22 = v7;
      uint64_t v17 = v21;
      sub_1BFF5B7CC(v22, v21, 0);
      uint64_t v18 = v10;
      sub_1BFF5B7CC(v10, v39, 0);
      if ((v34 & 1) == 0)
      {
        sub_1BFF5B7CC(v10, v39, 0);
        swift_bridgeObjectRelease();
        uint64_t v31 = v15;
        uint64_t v32 = v21;
        char v33 = 0;
        goto LABEL_30;
      }
    }
LABEL_23:
    if (v9 == v38 && v40 == v12)
    {
      sub_1BFF5B7CC(v18, v39, v37);
      swift_bridgeObjectRelease();
      sub_1BFF5B7CC(v15, v17, v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v5 = sub_1C1520A9C();
      sub_1BFF5B7CC(v18, v39, v37);
      swift_bridgeObjectRelease();
      sub_1BFF5B7CC(v15, v17, v8);
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    v3 += 5;
    uint64_t v2 = v36 - 1;
    if (v36 == 1) {
      return 1;
    }
  }
  if (v8 == 1)
  {
    if (v11 != 1) {
      goto LABEL_29;
    }
    BOOL v13 = (*(i - 4) & 1) == 0;
    uint64_t v14 = *(i - 3);
    sub_1BFF5B7E0(v7, v6, 1);
    swift_bridgeObjectRetain();
    sub_1BFF5B7E0(v10, v39, 1);
    swift_bridgeObjectRetain();
    uint64_t v15 = v7;
    uint64_t v16 = v7;
    uint64_t v17 = v14;
    sub_1BFF5B7CC(v16, v14, 1);
    sub_1BFF5B7CC(v10, v39, 1);
    uint64_t v18 = v10;
    char v19 = v13 ^ v10;
    LOBYTE(v8) = 1;
    if ((v19 & 1) == 0)
    {
      sub_1BFF5B7CC(v10, v39, 1);
      swift_bridgeObjectRelease();
      uint64_t v31 = v15;
      uint64_t v32 = v14;
      char v33 = 1;
      goto LABEL_30;
    }
    goto LABEL_23;
  }
  if (v11 != 2) {
    goto LABEL_29;
  }
  uint64_t v23 = *(i - 3);
  sub_1BFF5B7E0(v7, v6, 2);
  swift_bridgeObjectRetain();
  sub_1BFF5B7E0(v10, v39, 2);
  swift_bridgeObjectRetain();
  uint64_t v24 = v7;
  uint64_t v35 = v9;
  uint64_t v25 = v7;
  uint64_t v17 = v23;
  sub_1BFF5B7CC(v24, v23, 2);
  sub_1BFF5B7CC(v10, v39, 2);
  uint64_t v18 = v10;
  uint64_t v15 = v25;
  BOOL v20 = v25 == v10;
  uint64_t v9 = v35;
  if (v20) {
    goto LABEL_23;
  }
  sub_1BFF5B7CC(v10, v39, 2);
  swift_bridgeObjectRelease();
  uint64_t v31 = v15;
  uint64_t v32 = v23;
  char v33 = 2;
LABEL_30:
  sub_1BFF5B7CC(v31, v32, v33);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C00F116C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 64);
    for (uint64_t i = (uint64_t *)(a1 + 64); ; i += 5)
    {
      uint64_t v7 = *(i - 2);
      uint64_t v6 = *(i - 1);
      uint64_t v8 = *i;
      uint64_t v9 = *(v3 - 2);
      uint64_t v13 = *(v3 - 1);
      uint64_t v14 = *v3;
      BOOL v10 = *(i - 4) == *(v3 - 4) && *(i - 3) == *(v3 - 3);
      if (!v10 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      char v11 = sub_1BFEFAE14(v7, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      if (v6 == v13 && v8 == v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v5 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C00F1358(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v7 = 1;
    }
    else
    {
      uint64_t v3 = (char *)(a1 + 32);
      uint64_t v4 = (char *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        char v7 = _s8NewsFeed19FormatTextNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(__dst, v9);
        if ((v7 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 528;
        v3 += 528;
      }
      while (v6);
    }
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1C00F1404(uint64_t a1, uint64_t a2)
{
  return sub_1C00F1444(a1, a2, (void (*)(void))sub_1BFF35EA4, (uint64_t (*)(char *, char *))static FormatSize.== infix(_:_:), (void (*)(void))sub_1BFF322A8);
}

uint64_t sub_1C00F1444(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t (*a4)(char *, char *), void (*a5)(void))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5 == *(void *)(a2 + 16))
  {
    if (!v5 || a1 == a2) {
      return 1;
    }
    uint64_t v8 = (long long *)(a1 + 32);
    for (uint64_t i = (long long *)(a2 + 32); ; ++i)
    {
      long long v13 = *v8;
      long long v14 = *i;
      long long v17 = v14;
      long long v18 = v13;
      unint64_t v15 = v14;
      uint64_t v16 = v13;
      swift_retain();
      a3(*((void *)&v13 + 1));
      swift_retain();
      a3(*((void *)&v14 + 1));
      if ((static FormatExpression.== infix(_:_:)(&v16, &v15) & 1) == 0) {
        break;
      }
      char v10 = a4((char *)&v18 + 8, (char *)&v17 + 8);
      swift_release();
      a5(*((void *)&v14 + 1));
      swift_release();
      a5(*((void *)&v13 + 1));
      if ((v10 & 1) == 0) {
        return 0;
      }
      ++v8;
      if (!--v5) {
        return 1;
      }
    }
    swift_release();
    a5(*((void *)&v14 + 1));
    swift_release();
    a5(*((void *)&v13 + 1));
  }
  return 0;
}

uint64_t sub_1C00F15BC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  unint64_t v5 = a1[4];
  unint64_t v6 = a2[4];
  swift_retain();
  swift_retain();
  LOBYTE(v5) = sub_1C11CB840(v5, v6);
  swift_release();
  swift_release();
  if ((v5 & 1) == 0) {
    return 0;
  }
  char v7 = a1 + 5;
  uint64_t v8 = a2 + 5;
  uint64_t v9 = v2 - 1;
  do
  {
    BOOL v10 = v9 == 0;
    if (!v9) {
      break;
    }
    unint64_t v12 = *v7++;
    unint64_t v11 = v12;
    unint64_t v13 = *v8++;
    swift_retain();
    swift_retain();
    LOBYTE(v11) = sub_1C11CB840(v11, v13);
    swift_release();
    swift_release();
    --v9;
  }
  while ((v11 & 1) != 0);
  return v10;
}

uint64_t sub_1C00F16CC(uint64_t a1, uint64_t a2)
{
  return sub_1C00DECCC(a1, a2, type metadata accessor for FormatItemNodeStyle.Selector, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t (*)(char *, char *))_s8NewsFeed19FormatItemNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0, type metadata accessor for FormatItemNodeStyle.Selector);
}

BOOL sub_1C00F1720(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (double *)(a1 + 40);
  uint64_t v4 = (double *)(a2 + 40);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    double v7 = *v3++;
    double v8 = v7;
    double v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1C00F178C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x1C18C7CB0](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)MEMORY[0x1C18C7CB0](0, a2);
LABEL_22:
    unint64_t v13 = v12;
    sub_1C00F70AC();
    char v14 = sub_1C151FB6C();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)MEMORY[0x1C18C7CB0](i - 4, a1);
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)MEMORY[0x1C18C7CB0](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        long long v18 = v17;
        char v19 = sub_1C151FB6C();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00F19FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 48;
    uint64_t v4 = a2 + 48;
    do
    {
      char v6 = *(unsigned char *)(v4 - 8);
      if (*(unsigned char *)(v3 - 8))
      {
        if (!*(unsigned char *)(v4 - 8)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)(v3 - 16) != *(void *)(v4 - 16)) {
          char v6 = 1;
        }
        if (v6) {
          return 0;
        }
      }
      if (*(unsigned char *)(v3 + 8))
      {
        if (!*(unsigned char *)(v4 + 8)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)v3 == *(void *)v4) {
          char v7 = *(unsigned char *)(v4 + 8);
        }
        else {
          char v7 = 1;
        }
        if (v7) {
          return 0;
        }
      }
      if (*(unsigned char *)(v3 + 24))
      {
        if (!*(unsigned char *)(v4 + 24)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)(v3 + 16) == *(void *)(v4 + 16)) {
          char v8 = *(unsigned char *)(v4 + 24);
        }
        else {
          char v8 = 1;
        }
        if (v8) {
          return 0;
        }
      }
      if (*(unsigned char *)(v3 + 40))
      {
        if (!*(unsigned char *)(v4 + 40)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)(v3 + 32) == *(void *)(v4 + 32)) {
          char v5 = *(unsigned char *)(v4 + 40);
        }
        else {
          char v5 = 1;
        }
        if (v5) {
          return 0;
        }
      }
      v4 += 64;
      v3 += 64;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00F1AE0(uint64_t a1, uint64_t a2)
{
  return sub_1C00F1B70(a1, a2, MEMORY[0x1E4FB77E8], &qword_1EB8628A8, MEMORY[0x1E4FB77E8]);
}

uint64_t sub_1C00F1B28(uint64_t a1, uint64_t a2)
{
  return sub_1C00F1B70(a1, a2, MEMORY[0x1E4FB7810], &qword_1EB8628D0, MEMORY[0x1E4FB7810]);
}

uint64_t sub_1C00F1B70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v10 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v11 == v12) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v11 != v12) {
    return 0;
  }
LABEL_5:
  if (!v11) {
    return 1;
  }
  uint64_t i = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v14 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v15 = a1;
  }
  else {
    uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  if (v10) {
    uint64_t v14 = v15;
  }
  unint64_t v16 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v17 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v18 = a2;
  }
  else {
    uint64_t v18 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v17 = v18;
  }
  if (v14 == v17) {
    return 1;
  }
  if (v11 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  unint64_t v29 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_53:
    uint64_t result = MEMORY[0x1C18C7CB0](0, a1);
    uint64_t v12 = result;
    goto LABEL_21;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t result = swift_retain();
LABEL_21:
  unint64_t v28 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_55:
    uint64_t v20 = MEMORY[0x1C18C7CB0](0, a2);
LABEL_24:
    if (*(void *)(v12 + 16) == *(void *)(v20 + 16) && *(void *)(v12 + 24) == *(void *)(v20 + 24)
      || (sub_1C1520A9C() & 1) != 0)
    {
      unint64_t v26 = v16;
      uint64_t v27 = i;
      a3 = (uint64_t (*)(void))a3(0);
      a5 = (void (*)(uint64_t))sub_1BFF6B648(a4, a5);
      char v21 = sub_1C151E5CC();
      swift_release();
      swift_release();
      if (v21)
      {
        a4 = (unint64_t *)(1 - v11);
        for (uint64_t i = 5; ; ++i)
        {
          uint64_t v11 = (unint64_t *)((char *)a4 + i) == (unint64_t *)5;
          if ((unint64_t *)((char *)a4 + i) == (unint64_t *)5) {
            return v11;
          }
          unint64_t v16 = i - 4;
          if (v29)
          {
            uint64_t v23 = MEMORY[0x1C18C7CB0](i - 4, a1);
            if (v28) {
              goto LABEL_33;
            }
          }
          else
          {
            if (v16 >= *(void *)(v27 + 16))
            {
              __break(1u);
LABEL_51:
              __break(1u);
              goto LABEL_52;
            }
            uint64_t v23 = *(void *)(a1 + 8 * i);
            swift_retain();
            if (v28)
            {
LABEL_33:
              uint64_t v24 = MEMORY[0x1C18C7CB0](i - 4, a2);
              goto LABEL_38;
            }
          }
          if (v16 >= *(void *)(v26 + 16)) {
            goto LABEL_51;
          }
          uint64_t v24 = *(void *)(a2 + 8 * i);
          swift_retain();
LABEL_38:
          BOOL v25 = *(void *)(v23 + 16) == *(void *)(v24 + 16) && *(void *)(v23 + 24) == *(void *)(v24 + 24);
          if (!v25 && (sub_1C1520A9C() & 1) == 0) {
            goto LABEL_43;
          }
          char v22 = sub_1C151E5CC();
          swift_release();
          swift_release();
          if ((v22 & 1) == 0) {
            return v11;
          }
        }
      }
    }
    else
    {
LABEL_43:
      swift_release();
      swift_release();
    }
    return 0;
  }
  if (*(void *)(v16 + 16))
  {
    uint64_t v20 = *(void *)(a2 + 32);
    swift_retain();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00F1EF8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    char v6 = (void *)sub_1C15204BC();
    swift_bridgeObjectRelease();
    if ((void *)v5 == v6) {
      goto LABEL_5;
    }
    return 0;
  }
  char v6 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v5 != v6) {
    return 0;
  }
LABEL_5:
  if (!v5) {
    return 1;
  }
  uint64_t v7 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v8 = a1;
  }
  else {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4) {
    uint64_t v7 = v8;
  }
  uint64_t v9 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v9 = v10;
  }
  if (v7 == v9) {
    return 1;
  }
  if (v5 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  unint64_t v22 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_53:
    uint64_t result = MEMORY[0x1C18C7CB0](0, a1);
    char v6 = (void *)result;
    goto LABEL_21;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_55;
  }
  char v6 = *(void **)(a1 + 32);
  uint64_t result = swift_retain();
LABEL_21:
  unint64_t v21 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_55:
    uint64_t v12 = (void *)MEMORY[0x1C18C7CB0](0, a2);
LABEL_24:
    if (v6[2] == v12[2] && v6[3] == v12[3] || (sub_1C1520A9C() & 1) != 0)
    {
      char v13 = sub_1C00F21C0(v6[4], v12[4]);
      swift_release();
      swift_release();
      if (v13)
      {
        uint64_t v14 = 1 - v5;
        for (uint64_t i = 5; ; ++i)
        {
          uint64_t v5 = v14 + i == 5;
          if (v14 + i == 5) {
            return v5;
          }
          unint64_t v17 = i - 4;
          if (v22)
          {
            uint64_t v18 = (void *)MEMORY[0x1C18C7CB0](i - 4, a1);
            if (v21) {
              goto LABEL_33;
            }
          }
          else
          {
            if (v17 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_51:
              __break(1u);
              goto LABEL_52;
            }
            uint64_t v18 = *(void **)(a1 + 8 * i);
            swift_retain();
            if (v21)
            {
LABEL_33:
              char v19 = (void *)MEMORY[0x1C18C7CB0](i - 4, a2);
              goto LABEL_38;
            }
          }
          if (v17 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          char v19 = *(void **)(a2 + 8 * i);
          swift_retain();
LABEL_38:
          BOOL v20 = v18[2] == v19[2] && v18[3] == v19[3];
          if (!v20 && (sub_1C1520A9C() & 1) == 0) {
            goto LABEL_43;
          }
          char v16 = sub_1C00F21C0(v18[4], v19[4]);
          swift_release();
          swift_release();
          if ((v16 & 1) == 0) {
            return v5;
          }
        }
      }
    }
    else
    {
LABEL_43:
      swift_release();
      swift_release();
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v12 = *(void **)(a2 + 32);
    swift_retain();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00F21C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1516D9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x1E4FB7810];
  sub_1C00F6E80(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v36 - v10;
  sub_1C00F6ED4(0, (unint64_t *)&qword_1EA196BC8, (unint64_t *)&qword_1EB8628E0, v8);
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
  MEMORY[0x1F4188790](v16);
  MEMORY[0x1F4188790](v17);
  unint64_t v22 = (double *)((char *)&v36 - v21);
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23 == *(void *)(a2 + 16))
  {
    uint64_t v47 = v13;
    uint64_t v39 = v11;
    if (!v23 || a1 == a2) {
      return 1;
    }
    uint64_t v45 = v18;
    uint64_t v46 = a1;
    char v37 = v7;
    unint64_t v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v41 = *(void *)(v19 + 72);
    uint64_t v42 = a2;
    uint64_t v43 = v20;
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v38 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v25 = v20;
    while (1)
    {
      sub_1C00F70EC(v46 + v24, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
      sub_1C00F70EC(a2 + v24, v25, (uint64_t (*)(void))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
      if (*(void *)v22 != *(void *)v25 || v22[1] != *(double *)(v25 + 8)) {
        break;
      }
      uint64_t v26 = *(int *)(v45 + 24);
      uint64_t v27 = v25 + v26;
      uint64_t v28 = (uint64_t)&v15[*(int *)(v47 + 48)];
      unint64_t v29 = (void (*)(uint64_t))MEMORY[0x1E4FB7810];
      sub_1C00F63DC((uint64_t)v22 + v26, (uint64_t)v15, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      sub_1C00F63DC(v27, v28, (unint64_t *)&qword_1EB8628E0, v29);
      uint64_t v30 = *v44;
      if ((*v44)(v15, 1, v4) == 1)
      {
        if (v30((char *)v28, 1, v4) != 1) {
          goto LABEL_16;
        }
        sub_1C00F6448((uint64_t)v15, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        a2 = v42;
        uint64_t v25 = v43;
      }
      else
      {
        uint64_t v31 = (uint64_t)v39;
        sub_1C00F63DC((uint64_t)v15, (uint64_t)v39, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        if (v30((char *)v28, 1, v4) == 1)
        {
          (*v38)(v31, v4);
LABEL_16:
          sub_1C00F6F38((uint64_t)v15, (unint64_t *)&qword_1EA196BC8, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
          uint64_t v25 = v43;
          break;
        }
        uint64_t v32 = v31;
        char v33 = v37;
        (*v36)(v37, v28, v4);
        sub_1BFF6B648(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
        int v40 = sub_1C151E5CC();
        char v34 = *v38;
        (*v38)((uint64_t)v33, v4);
        v34(v32, v4);
        sub_1C00F6448((uint64_t)v15, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        a2 = v42;
        uint64_t v25 = v43;
        if ((v40 & 1) == 0) {
          break;
        }
      }
      sub_1C00F7154(v25, (uint64_t (*)(void))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
      sub_1C00F7154((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
      v24 += v41;
      if (!--v23) {
        return 1;
      }
    }
    sub_1C00F7154(v25, (uint64_t (*)(void))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
    sub_1C00F7154((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
  }
  return 0;
}

uint64_t sub_1C00F274C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1516D9C();
  unint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v61 - v10;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v12 == v13) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v12 != v13) {
    return 0;
  }
LABEL_5:
  if (!v12) {
    return 1;
  }
  uint64_t v14 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v15 = a1;
  }
  else {
    uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a1 >> 62) {
    uint64_t v14 = v15;
  }
  unint64_t v16 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v17 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v18 = a2;
  }
  else {
    uint64_t v18 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v17 = v18;
  }
  if (v14 == v17) {
    return 1;
  }
  if (v12 < 0)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v70 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v72 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_69:
    uint64_t result = MEMORY[0x1C18C7CB0](0, a1, v9);
    uint64_t v13 = result;
    goto LABEL_21;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t result = swift_retain();
LABEL_21:
  unint64_t v71 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_71:
    uint64_t v20 = MEMORY[0x1C18C7CB0](0, a2, v9);
LABEL_24:
    uint64_t v21 = v20;
    if (*(void *)(v13 + 16) == *(void *)(v20 + 16) && (uint64_t v22 = v13, *(void *)(v13 + 24) == *(void *)(v20 + 24))
      || (v23 = v20, v24 = sub_1C1520A9C(), uint64_t v21 = v23, v22 = v13, (v24 & 1) != 0))
    {
      uint64_t v25 = *(void *)v22;
      uint64_t v26 = v22 + *(void *)(*(void *)v22 + 120);
      uint64_t v27 = *(void *)v21;
      uint64_t v28 = v21 + *(void *)(*(void *)v21 + 120);
      if (*(double *)v26 == *(double *)v28)
      {
        uint64_t v29 = *(void *)(v26 + 8);
        uint64_t v30 = *(void *)(v28 + 8);
        uint64_t v31 = *(void *)(v29 + 16);
        if (v31 == *(void *)(v30 + 16))
        {
          uint64_t v76 = v7;
          uint64_t v77 = v5 + 16;
          uint64_t v75 = (void (**)(char *, uint64_t))(v5 + 8);
          v61[1] = a2 + 32;
          v61[2] = a1 + 32;
          uint64_t v32 = 1;
          uint64_t v65 = a2;
          uint64_t v66 = v12;
          unint64_t v62 = v5;
          uint64_t v63 = a1;
          uint64_t v78 = v11;
          unint64_t v64 = v16;
          while (1)
          {
            if (v31 && v29 != v30)
            {
              if (*(double *)(v29 + 32) != *(double *)(v30 + 32)) {
                break;
              }
              if (v31 != 1)
              {
                if (*(double *)(v29 + 40) != *(double *)(v30 + 40)) {
                  break;
                }
                uint64_t v55 = (double *)(v29 + 48);
                char v56 = (double *)(v30 + 48);
                uint64_t v57 = v31 - 2;
                while (v57)
                {
                  double v58 = *v55++;
                  double v59 = v58;
                  double v60 = *v56++;
                  --v57;
                  if (v59 != v60) {
                    goto LABEL_60;
                  }
                }
              }
            }
            unint64_t v69 = v32;
            uint64_t v33 = *(void *)(v25 + 120);
            uint64_t v68 = v22;
            uint64_t v34 = v22 + v33;
            uint64_t v35 = v21;
            uint64_t v36 = type metadata accessor for FeedGroupBundleArticleQuotas();
            uint64_t v37 = *(int *)(v36 + 24);
            uint64_t v38 = *(void *)(v27 + 120);
            uint64_t v67 = v35;
            uint64_t v39 = v35 + v38;
            if ((MEMORY[0x1C18BE8B0](v34 + v37, v35 + v38 + v37) & 1) == 0) {
              break;
            }
            uint64_t v40 = *(int *)(v36 + 28);
            a1 = *(void *)(v39 + v40);
            uint64_t v79 = *(void *)(v34 + v40);
            uint64_t v41 = *(void *)(v79 + 16);
            if (v41 != *(void *)(a1 + 16)) {
              break;
            }
            if (v41 && v79 != a1)
            {
              unint64_t v5 = 0;
              unint64_t v16 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
              uint64_t v42 = *(void *)(v62 + 72);
              uint64_t v73 = a1;
              uint64_t v74 = v42;
              uint64_t v43 = *(void (**)(char *, unint64_t, uint64_t))(v62 + 16);
              while (1)
              {
                uint64_t v12 = (uint64_t)v78;
                a2 = v77;
                v43(v78, v79 + v16, v4);
                if (v5 >= *(void *)(a1 + 16)) {
                  break;
                }
                uint64_t v11 = (char *)v43;
                v43(v7, a1 + v16, v4);
                sub_1BFF6B648(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
                char v44 = sub_1C151E5CC();
                uint64_t v45 = *v75;
                (*v75)(v7, v4);
                v45((char *)v12, v4);
                if ((v44 & 1) == 0) {
                  goto LABEL_60;
                }
                ++v5;
                a1 = v73;
                v16 += v74;
                uint64_t v43 = (void (*)(char *, unint64_t, uint64_t))v11;
                if (v41 == v5) {
                  goto LABEL_42;
                }
              }
              __break(1u);
              goto LABEL_68;
            }
LABEL_42:
            swift_release();
            uint64_t result = swift_release();
            unint64_t v46 = v69;
            if (v69 == v66) {
              return 1;
            }
            if (v72)
            {
              uint64_t result = MEMORY[0x1C18C7CB0](v69, v63);
              unint64_t v48 = v64;
              uint64_t v47 = v65;
              if (!v71) {
                goto LABEL_48;
              }
            }
            else
            {
              unint64_t v48 = v64;
              uint64_t v47 = v65;
              if (v69 >= *(void *)(v70 + 16)) {
                goto LABEL_73;
              }
              uint64_t result = swift_retain();
              if (!v71)
              {
LABEL_48:
                if (v46 >= *(void *)(v48 + 16)) {
                  goto LABEL_74;
                }
                uint64_t v49 = result;
                uint64_t v50 = swift_retain();
                goto LABEL_50;
              }
            }
            uint64_t v49 = result;
            uint64_t v50 = MEMORY[0x1C18C7CB0](v46, v47);
LABEL_50:
            uint64_t v21 = v50;
            uint64_t v22 = v49;
            if (*(void *)(v49 + 16) == *(void *)(v50 + 16) && *(void *)(v49 + 24) == *(void *)(v50 + 24)
              || (v51 = v50, v52 = sub_1C1520A9C(), uint64_t v21 = v51, v46 = v69, v22 = v49, (v52 & 1) != 0))
            {
              uint64_t v25 = *(void *)v22;
              uint64_t v53 = v22 + *(void *)(*(void *)v22 + 120);
              uint64_t v27 = *(void *)v21;
              uint64_t v54 = v21 + *(void *)(*(void *)v21 + 120);
              if (*(double *)v53 == *(double *)v54)
              {
                uint64_t v32 = v46 + 1;
                uint64_t v29 = *(void *)(v53 + 8);
                uint64_t v30 = *(void *)(v54 + 8);
                uint64_t v31 = *(void *)(v29 + 16);
                if (v31 == *(void *)(v30 + 16)) {
                  continue;
                }
              }
            }
            break;
          }
        }
      }
    }
LABEL_60:
    swift_release();
    swift_release();
    return 0;
  }
  if (*(void *)(v16 + 16))
  {
    uint64_t v20 = swift_retain();
    goto LABEL_24;
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_1C00F2D8C(uint64_t a1, uint64_t a2)
{
  return sub_1BFF6B430(a1, a2, MEMORY[0x1E4FB7810], &qword_1EB8628D0, MEMORY[0x1E4FB7810], MEMORY[0x1E4FB7820]);
}

uint64_t sub_1C00F2DD4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)sub_1C15204BC();
    swift_bridgeObjectRelease();
    if ((void *)v5 == v6) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v6 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v5 != v6) {
    return 0;
  }
LABEL_5:
  if (!v5) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4) {
    uint64_t v8 = v9;
  }
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v5 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  unint64_t v25 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_53:
    uint64_t result = MEMORY[0x1C18C7CB0](0, a1);
    uint64_t v6 = (void *)result;
    goto LABEL_21;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t result = swift_retain();
LABEL_21:
  unint64_t v24 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_55:
    uint64_t v13 = (void *)MEMORY[0x1C18C7CB0](0, a2);
LABEL_24:
    if (v6[2] == v13[2] && v6[3] == v13[3] || (sub_1C1520A9C() & 1) != 0)
    {
      uint64_t v23 = v7;
      uint64_t v14 = v6[4];
      uint64_t v15 = v13[4];
      swift_release();
      swift_release();
      if (v14 == v15)
      {
        uint64_t v16 = 1 - v5;
        for (uint64_t i = 5; ; ++i)
        {
          uint64_t v5 = v16 + i == 5;
          if (v16 + i == 5) {
            return v5;
          }
          unint64_t v19 = i - 4;
          if (v25)
          {
            uint64_t v20 = (void *)MEMORY[0x1C18C7CB0](i - 4, a1);
            if (v24) {
              goto LABEL_33;
            }
          }
          else
          {
            if (v19 >= *(void *)(v23 + 16))
            {
              __break(1u);
LABEL_51:
              __break(1u);
              goto LABEL_52;
            }
            uint64_t v20 = *(void **)(a1 + 8 * i);
            swift_retain();
            if (v24)
            {
LABEL_33:
              uint64_t v21 = (void *)MEMORY[0x1C18C7CB0](i - 4, a2);
              goto LABEL_38;
            }
          }
          if (v19 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v21 = *(void **)(a2 + 8 * i);
          swift_retain();
LABEL_38:
          BOOL v22 = v20[2] == v21[2] && v20[3] == v21[3];
          if (!v22 && (sub_1C1520A9C() & 1) == 0) {
            goto LABEL_43;
          }
          uint64_t v18 = v20[4];
          uint64_t v7 = v21[4];
          swift_release();
          swift_release();
          if (v18 != v7) {
            return v5;
          }
        }
      }
    }
    else
    {
LABEL_43:
      swift_release();
      swift_release();
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v13 = *(void **)(a2 + 32);
    swift_retain();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C00F309C(unint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5 == v23) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v5) {
    return 1;
  }
  uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v3 < 0) {
    uint64_t v7 = v3;
  }
  else {
    uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4) {
    uint64_t v6 = v7;
  }
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8) {
    return 1;
  }
  if (v5 < 0)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    uint64_t result = MEMORY[0x1C18C7CB0](0, v3);
    unint64_t v10 = result;
    unint64_t v11 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0) {
      goto LABEL_21;
    }
LABEL_53:
    uint64_t v12 = MEMORY[0x1C18C7CB0](0, a2);
LABEL_23:
    if (*(void *)(v10 + 16) == *(void *)(v12 + 16) && *(void *)(v10 + 24) == *(void *)(v12 + 24)
      || (sub_1C1520A9C() & 1) != 0)
    {
      double v13 = *(double *)(v12 + 32);
      double v14 = *(double *)(v10 + 32);
      swift_release();
      swift_release();
      if (v14 == v13)
      {
        uint64_t v15 = 1 - v5;
        for (uint64_t i = 5; ; ++i)
        {
          uint64_t v5 = v15 + i == 5;
          if (v15 + i == 5) {
            return v5;
          }
          unint64_t v19 = i - 4;
          if (v24)
          {
            uint64_t v20 = MEMORY[0x1C18C7CB0](i - 4, v3);
            if (v11) {
              goto LABEL_32;
            }
          }
          else
          {
            if (v19 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
            uint64_t v20 = *(void *)(v3 + 8 * i);
            swift_retain();
            if (v11)
            {
LABEL_32:
              uint64_t v21 = MEMORY[0x1C18C7CB0](i - 4, a2);
              goto LABEL_37;
            }
          }
          if (v19 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_50;
          }
          uint64_t v21 = *(void *)(a2 + 8 * i);
          swift_retain();
LABEL_37:
          BOOL v22 = *(void *)(v20 + 16) == *(void *)(v21 + 16) && *(void *)(v20 + 24) == *(void *)(v21 + 24);
          if (!v22 && (sub_1C1520A9C() & 1) == 0) {
            goto LABEL_42;
          }
          double v17 = *(double *)(v21 + 32);
          double v18 = *(double *)(v20 + 32);
          swift_release();
          swift_release();
          if (v18 != v17) {
            return v5;
          }
        }
      }
    }
    else
    {
LABEL_42:
      swift_release();
      swift_release();
    }
    return 0;
  }
  unint64_t v24 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_52;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_55;
  }
  unint64_t v10 = *(void *)(v3 + 32);
  uint64_t result = swift_retain();
  unint64_t v11 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0) {
    goto LABEL_53;
  }
LABEL_21:
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v12 = *(void *)(a2 + 32);
    swift_retain();
    goto LABEL_23;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1C00F335C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v5 == v6) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5 != v6) {
    return 0;
  }
LABEL_5:
  if (!v5) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4) {
    uint64_t v8 = v9;
  }
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v5 < 0) {
    goto LABEL_68;
  }
  unint64_t v22 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_69:
    uint64_t result = MEMORY[0x1C18C7CB0](0, a1);
    uint64_t v6 = result;
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_71;
    }
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t result = swift_retain();
  }
  unint64_t v21 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_71:
    uint64_t v13 = MEMORY[0x1C18C7CB0](0, a2);
    goto LABEL_24;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v13 = *(void *)(a2 + 32);
    swift_retain();
LABEL_24:
    if (*(void *)(v6 + 16) == *(void *)(v13 + 16) && *(void *)(v6 + 24) == *(void *)(v13 + 24)
      || (sub_1C1520A9C() & 1) != 0)
    {
      uint64_t v20 = v7;
      uint64_t v14 = 1 - v5;
      for (uint64_t i = 5; ; ++i)
      {
        char v16 = *(unsigned char *)(v13 + 40);
        uint64_t v5 = *(void *)(v13 + 64);
        if (*(unsigned char *)(v6 + 40))
        {
          if (!*(unsigned char *)(v13 + 40)) {
            break;
          }
        }
        else
        {
          if (*(double *)(v6 + 32) != *(double *)(v13 + 32)) {
            char v16 = 1;
          }
          if (v16) {
            break;
          }
        }
        if (*(unsigned char *)(v6 + 56))
        {
          if (!*(unsigned char *)(v13 + 56)) {
            break;
          }
        }
        else
        {
          if (*(void *)(v6 + 48) == *(void *)(v13 + 48)) {
            char v17 = *(unsigned char *)(v13 + 56);
          }
          else {
            char v17 = 1;
          }
          if (v17) {
            break;
          }
        }
        if (*(void *)(v6 + 64))
        {
          if (!v5) {
            break;
          }
          swift_bridgeObjectRetain();
          uint64_t v18 = swift_bridgeObjectRetain();
          uint64_t v7 = sub_1BFEFAE14(v18, v5);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v7 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          if (v5) {
            break;
          }
          swift_release();
          swift_release();
        }
        if (v14 + i == 5) {
          return 1;
        }
        unint64_t v19 = i - 4;
        if (v22)
        {
          uint64_t v6 = MEMORY[0x1C18C7CB0](i - 4, a1);
          if (v21) {
            goto LABEL_52;
          }
        }
        else
        {
          if (v19 >= *(void *)(v20 + 16))
          {
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
          uint64_t v6 = *(void *)(a1 + 8 * i);
          swift_retain();
          if (v21)
          {
LABEL_52:
            uint64_t v13 = MEMORY[0x1C18C7CB0](i - 4, a2);
            goto LABEL_57;
          }
        }
        if (v19 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_67;
        }
        uint64_t v13 = *(void *)(a2 + 8 * i);
        swift_retain();
LABEL_57:
        if ((*(void *)(v6 + 16) != *(void *)(v13 + 16) || *(void *)(v6 + 24) != *(void *)(v13 + 24))
          && (sub_1C1520A9C() & 1) == 0)
        {
          break;
        }
      }
    }
    swift_release();
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C00F369C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v5 == v6) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5 != v6) {
    return 0;
  }
LABEL_5:
  if (!v5) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4) {
    uint64_t v8 = v9;
  }
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v5 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  unint64_t v25 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_53:
    uint64_t result = MEMORY[0x1C18C7CB0](0, a1);
    uint64_t v6 = result;
    goto LABEL_21;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t result = swift_retain();
LABEL_21:
  unint64_t v24 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_55:
    uint64_t v13 = MEMORY[0x1C18C7CB0](0, a2);
LABEL_24:
    if (*(void *)(v6 + 16) == *(void *)(v13 + 16) && *(void *)(v6 + 24) == *(void *)(v13 + 24)
      || (sub_1C1520A9C() & 1) != 0)
    {
      uint64_t v23 = v7;
      int v14 = *(unsigned __int8 *)(v6 + 32);
      int v15 = *(unsigned __int8 *)(v13 + 32);
      swift_release();
      swift_release();
      if (v14 == v15)
      {
        uint64_t v16 = 1 - v5;
        for (uint64_t i = 5; ; ++i)
        {
          uint64_t v5 = v16 + i == 5;
          if (v16 + i == 5) {
            return v5;
          }
          unint64_t v19 = i - 4;
          if (v25)
          {
            uint64_t v20 = MEMORY[0x1C18C7CB0](i - 4, a1);
            if (v24) {
              goto LABEL_33;
            }
          }
          else
          {
            if (v19 >= *(void *)(v23 + 16))
            {
              __break(1u);
LABEL_51:
              __break(1u);
              goto LABEL_52;
            }
            uint64_t v20 = *(void *)(a1 + 8 * i);
            swift_retain();
            if (v24)
            {
LABEL_33:
              uint64_t v21 = MEMORY[0x1C18C7CB0](i - 4, a2);
              goto LABEL_38;
            }
          }
          if (v19 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v21 = *(void *)(a2 + 8 * i);
          swift_retain();
LABEL_38:
          BOOL v22 = *(void *)(v20 + 16) == *(void *)(v21 + 16) && *(void *)(v20 + 24) == *(void *)(v21 + 24);
          if (!v22 && (sub_1C1520A9C() & 1) == 0) {
            goto LABEL_43;
          }
          int v18 = *(unsigned __int8 *)(v20 + 32);
          uint64_t v7 = *(unsigned __int8 *)(v21 + 32);
          swift_release();
          swift_release();
          if (v18 != v7) {
            return v5;
          }
        }
      }
    }
    else
    {
LABEL_43:
      swift_release();
      swift_release();
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v13 = *(void *)(a2 + 32);
    swift_retain();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

BOOL sub_1C00F3964(uint64_t a1, uint64_t a2)
{
  __s1[3] = *MEMORY[0x1E4F143B8];
  unint64_t v4 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v71 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v11 || a1 == a2) {
    return 1;
  }
  uint64_t v75 = 0;
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v78 = *(void *)(v8 + 72);
  uint64_t v79 = a1;
  uint64_t v13 = v11 - 1;
  uint64_t v80 = a2;
  while (1)
  {
    sub_1C00F70EC(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    sub_1C00F70EC(a2 + v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    if ((sub_1C15162AC() & 1) == 0) {
      goto LABEL_63;
    }
    uint64_t v14 = v4[5];
    uint64_t v15 = *(void *)&v10[v14];
    uint64_t v16 = *(void *)&v10[v14 + 8];
    char v17 = &v6[v14];
    BOOL v18 = v15 == *(void *)v17 && v16 == *((void *)v17 + 1);
    if (!v18 && (sub_1C1520A9C() & 1) == 0) {
      goto LABEL_63;
    }
    uint64_t v19 = v4[6];
    uint64_t v20 = *(void *)&v10[v19];
    uint64_t v21 = *(void *)&v10[v19 + 8];
    uint64_t v23 = *(void *)&v10[v19 + 16];
    unint64_t v22 = *(void *)&v10[v19 + 24];
    unint64_t v24 = &v6[v19];
    uint64_t v25 = *((void *)v24 + 1);
    uint64_t v26 = *((void *)v24 + 2);
    unint64_t v27 = *((void *)v24 + 3);
    BOOL v28 = v20 == *(void *)v24 && v21 == v25;
    uint64_t v81 = *((void *)v24 + 2);
    if (!v28)
    {
      uint64_t v29 = v10;
      uint64_t v30 = v6;
      unint64_t v31 = v12;
      uint64_t v32 = v13;
      unint64_t v33 = v22;
      uint64_t v34 = v4;
      unint64_t v35 = v27;
      uint64_t v36 = v23;
      uint64_t v37 = v25;
      char v38 = sub_1C1520A9C();
      uint64_t v25 = v37;
      uint64_t v23 = v36;
      unint64_t v27 = v35;
      unint64_t v4 = v34;
      unint64_t v22 = v33;
      uint64_t v13 = v32;
      unint64_t v12 = v31;
      uint64_t v6 = v30;
      uint64_t v10 = v29;
      uint64_t v26 = v81;
      if ((v38 & 1) == 0) {
        goto LABEL_63;
      }
    }
    if (v22 >> 60 == 15)
    {
      if (v27 >> 60 != 15) {
        break;
      }
      goto LABEL_52;
    }
    if (v27 >> 60 == 15) {
      break;
    }
    uint64_t v76 = v25;
    uint64_t v77 = v21;
    uint64_t v39 = 0;
    switch(v22 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v23), v23))
        {
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
        }
        uint64_t v39 = HIDWORD(v23) - (int)v23;
LABEL_25:
        sub_1BFE95820(v23, v22);
        break;
      case 2uLL:
        uint64_t v41 = *(void *)(v23 + 16);
        uint64_t v40 = *(void *)(v23 + 24);
        uint64_t v39 = v40 - v41;
        if (!__OFSUB__(v40, v41)) {
          goto LABEL_25;
        }
        goto LABEL_67;
      case 3uLL:
        break;
      default:
        uint64_t v39 = BYTE6(v22);
        break;
    }
    switch(v27 >> 62)
    {
      case 1uLL:
        LODWORD(v42) = HIDWORD(v81) - v81;
        if (__OFSUB__(HIDWORD(v81), v81)) {
          goto LABEL_68;
        }
        uint64_t v42 = (int)v42;
LABEL_31:
        if (v39 != v42)
        {
LABEL_61:
          uint64_t v69 = v23;
          unint64_t v70 = v22;
          goto LABEL_62;
        }
        if (v39 >= 1)
        {
          uint64_t v46 = v81;
          switch(v22 >> 62)
          {
            case 1uLL:
              uint64_t v73 = (int)v23;
              uint64_t v74 = (v23 >> 32) - (int)v23;
              if (v23 >> 32 < (int)v23) {
                goto LABEL_70;
              }
              sub_1C00C2AC0(v23, v22);
              swift_bridgeObjectRetain();
              sub_1C00C2AC0(v23, v22);
              swift_bridgeObjectRetain();
              sub_1C00C2AC0(v46, v27);
              sub_1C00C2AC0(v46, v27);
              uint64_t v50 = sub_1C151572C();
              if (!v50) {
                goto LABEL_41;
              }
              uint64_t v51 = sub_1C151575C();
              if (__OFSUB__(v73, v51)) {
                goto LABEL_72;
              }
              v50 += v73 - v51;
LABEL_41:
              sub_1C151574C();
              uint64_t v52 = v50;
              uint64_t v53 = v81;
              uint64_t v54 = v75;
              sub_1C10C9D30(v52, v81, v27, (char *)__s1);
              uint64_t v75 = v54;
              sub_1BFE95878(v23, v22);
              sub_1BFE95878(v53, v27);
              sub_1BFE95878(v23, v22);
              swift_bridgeObjectRelease();
              sub_1BFE95878(v53, v27);
              swift_bridgeObjectRelease();
              sub_1BFE95878(v23, v22);
              if ((__s1[0] & 1) == 0) {
                goto LABEL_63;
              }
              goto LABEL_52;
            case 2uLL:
              uint64_t v55 = *(void *)(v23 + 16);
              uint64_t v72 = *(void *)(v23 + 24);
              uint64_t v73 = v55;
              swift_bridgeObjectRetain();
              sub_1C00C2AC0(v23, v22);
              swift_bridgeObjectRetain();
              sub_1C00C2AC0(v46, v27);
              sub_1C00C2AC0(v46, v27);
              swift_retain();
              swift_retain();
              uint64_t v56 = sub_1C151572C();
              uint64_t v74 = v22 & 0x3FFFFFFFFFFFFFFFLL;
              if (v56)
              {
                uint64_t v57 = v56;
                uint64_t v58 = sub_1C151575C();
                uint64_t v59 = v73;
                if (__OFSUB__(v73, v58)) {
                  goto LABEL_73;
                }
                uint64_t v71 = v57 + v73 - v58;
              }
              else
              {
                uint64_t v71 = 0;
                uint64_t v59 = v73;
              }
              if (__OFSUB__(v72, v59)) {
                goto LABEL_71;
              }
              sub_1C151574C();
              uint64_t v61 = v81;
              uint64_t v62 = v75;
              sub_1C10C9D30(v71, v81, v27, (char *)__s1);
              uint64_t v75 = v62;
              swift_release();
              swift_release();
              sub_1BFE95878(v61, v27);
              sub_1BFE95878(v23, v22);
              swift_bridgeObjectRelease();
              sub_1BFE95878(v61, v27);
              LOBYTE(v61) = __s1[0];
              swift_bridgeObjectRelease();
              sub_1BFE95878(v23, v22);
              if (v61) {
                goto LABEL_52;
              }
              goto LABEL_63;
            case 3uLL:
              memset(__s1, 0, 14);
              swift_bridgeObjectRetain();
              sub_1C00C2AC0(v23, v22);
              swift_bridgeObjectRetain();
              sub_1C00C2AC0(v46, v27);
              sub_1C00C2AC0(v46, v27);
              uint64_t v48 = v46;
              unint64_t v49 = v27;
              uint64_t v47 = v46;
              goto LABEL_47;
            default:
              __s1[0] = v23;
              LOWORD(__s1[1]) = v22;
              BYTE2(__s1[1]) = BYTE2(v22);
              BYTE3(__s1[1]) = BYTE3(v22);
              BYTE4(__s1[1]) = BYTE4(v22);
              BYTE5(__s1[1]) = BYTE5(v22);
              uint64_t v47 = v81;
              swift_bridgeObjectRetain();
              sub_1C00C2AC0(v23, v22);
              swift_bridgeObjectRetain();
              sub_1C00C2AC0(v46, v27);
              sub_1C00C2AC0(v46, v27);
              uint64_t v48 = v46;
              unint64_t v49 = v27;
LABEL_47:
              uint64_t v60 = v75;
              sub_1C10C9D30((uint64_t)__s1, v48, v49, &v82);
              uint64_t v75 = v60;
              sub_1BFE95878(v47, v27);
              sub_1BFE95878(v23, v22);
              swift_bridgeObjectRelease();
              sub_1BFE95878(v47, v27);
              swift_bridgeObjectRelease();
              sub_1BFE95878(v23, v22);
              if ((v82 & 1) == 0) {
                goto LABEL_63;
              }
              goto LABEL_52;
          }
        }
LABEL_36:
        sub_1BFE95878(v23, v22);
        break;
      case 2uLL:
        uint64_t v44 = *(void *)(v81 + 16);
        uint64_t v43 = *(void *)(v81 + 24);
        BOOL v45 = __OFSUB__(v43, v44);
        uint64_t v42 = v43 - v44;
        if (!v45) {
          goto LABEL_31;
        }
        goto LABEL_69;
      case 3uLL:
        if (!v39) {
          goto LABEL_36;
        }
        goto LABEL_61;
      default:
        uint64_t v42 = BYTE6(v27);
        goto LABEL_31;
    }
LABEL_52:
    if (*(void *)&v10[v4[7]] != *(void *)&v6[v4[7]]) {
      goto LABEL_63;
    }
    uint64_t v63 = v4[8];
    uint64_t v64 = *(void *)&v10[v63];
    uint64_t v65 = *(void *)&v6[v63];
    sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    sub_1C00F7154((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    BOOL v67 = v13-- != 0;
    BOOL result = v64 == v65;
    if (v64 == v65)
    {
      a1 = v79;
      v12 += v78;
      a2 = v80;
      if (v67) {
        continue;
      }
    }
    return result;
  }
  sub_1C00C2AC0(v23, v22);
  sub_1C00C2AC0(v26, v27);
  sub_1BFE95878(v23, v22);
  uint64_t v69 = v26;
  unint64_t v70 = v27;
LABEL_62:
  sub_1BFE95878(v69, v70);
LABEL_63:
  sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  sub_1C00F7154((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  return 0;
}

uint64_t sub_1C00F41AC(uint64_t a1, uint64_t a2)
{
  return sub_1C00F4B68(a1, a2, sub_1C00B0120);
}

uint64_t sub_1C00F41C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentOverlaySubgroup();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v46 - v10);
  if ((unint64_t)a1 >> 62)
  {
    uint64_t v42 = v8;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v12 = v43;
    uint64_t v8 = v42;
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v13 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    uint64_t v44 = v8;
    BOOL v45 = (void *)v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v12 = (uint64_t)v45;
    uint64_t v8 = v44;
    if (v45 != v14) {
      return 0;
    }
  }
  else
  {
    uint64_t v14 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((void *)v12 != v14) {
      return 0;
    }
  }
  if (!v12) {
    return 1;
  }
  uint64_t v15 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v16 = a1;
  }
  else {
    uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a1 >> 62) {
    uint64_t v15 = v16;
  }
  uint64_t v17 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v18 = a2;
  }
  else {
    uint64_t v18 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v13) {
    uint64_t v17 = v18;
  }
  if (v15 == v17) {
    return 1;
  }
  if (v12 < 0)
  {
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v51 = v8;
  uint64_t v52 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v55 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_67:
    unint64_t v13 = v12;
    uint64_t result = MEMORY[0x1C18C7CB0](0, a1, v9);
    uint64_t v14 = (void *)result;
    goto LABEL_21;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_69;
  }
  unint64_t v13 = v12;
  uint64_t v14 = *(void **)(a1 + 32);
  uint64_t result = swift_retain();
LABEL_21:
  unint64_t v56 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_69:
    uint64_t v20 = (void *)MEMORY[0x1C18C7CB0](0, a2, v9);
    goto LABEL_24;
  }
  if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    return result;
  }
  uint64_t v20 = *(void **)(a2 + 32);
  swift_retain();
LABEL_24:
  if ((v14[2] != v20[2] || v14[3] != v20[3]) && (sub_1C1520A9C() & 1) == 0) {
    goto LABEL_59;
  }
  uint64_t v49 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v58 = v4;
  uint64_t v21 = v14[4];
  uint64_t v22 = v20[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v23 = sub_1C00E88B0(v21, v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v23)
  {
    if (v13 == 1) {
      return 1;
    }
    uint64_t v46 = a2 + 32;
    uint64_t v47 = a1 + 32;
    unint64_t v24 = 1;
    uint64_t v25 = v49;
    unint64_t v26 = v55;
    unint64_t v48 = v13;
    while (1)
    {
      if (v26)
      {
        uint64_t result = MEMORY[0x1C18C7CB0](v24, a1);
        unint64_t v27 = (void *)result;
        if (v56) {
          goto LABEL_35;
        }
      }
      else
      {
        if (v24 >= *(void *)(v52 + 16)) {
          goto LABEL_71;
        }
        unint64_t v27 = *(void **)(v47 + 8 * v24);
        uint64_t result = swift_retain();
        if (v56)
        {
LABEL_35:
          uint64_t v28 = MEMORY[0x1C18C7CB0](v24, a2);
          goto LABEL_40;
        }
      }
      if (v24 >= *(void *)(v25 + 16)) {
        goto LABEL_72;
      }
      uint64_t v28 = swift_retain();
LABEL_40:
      uint64_t v29 = v28;
      if (v27[2] != *(void *)(v28 + 16) || v27[3] != *(void *)(v28 + 24))
      {
        uint64_t v31 = v28;
        char v32 = sub_1C1520A9C();
        uint64_t v29 = v31;
        if ((v32 & 1) == 0) {
          goto LABEL_59;
        }
      }
      unint64_t v50 = v24;
      uint64_t v53 = v29;
      uint64_t v54 = v27;
      uint64_t v33 = v27[4];
      uint64_t v34 = *(void *)(v33 + 16);
      uint64_t v59 = *(void *)(v29 + 32);
      if (v34 != *(void *)(v59 + 16)) {
        goto LABEL_59;
      }
      if (v34 && v33 != v59)
      {
        uint64_t v35 = v51;
        unint64_t v36 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v57 = *(void *)(v35 + 72);
        while (1)
        {
          sub_1C00F70EC(v33 + v36, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
          sub_1C00F70EC(v59 + v36, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
          BOOL v37 = *v11 == *v6 && v11[1] == v6[1];
          if (!v37 && (sub_1C1520A9C() & 1) == 0) {
            break;
          }
          uint64_t v38 = *(int *)(v58 + 20);
          uint64_t v39 = *(void *)((char *)v11 + v38);
          uint64_t v40 = *(void *)((char *)v6 + v38);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v41 = sub_1C00DF460(v39, v40);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
          sub_1C00F7154((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
          if ((v41 & 1) == 0) {
            goto LABEL_58;
          }
          v36 += v57;
          if (!--v34)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v25 = v49;
            unint64_t v26 = v55;
            goto LABEL_32;
          }
        }
        sub_1C00F7154((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
        sub_1C00F7154((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
LABEL_58:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_59:
        swift_release();
        swift_release();
        return 0;
      }
LABEL_32:
      unint64_t v24 = v50 + 1;
      swift_release();
      swift_release();
      uint64_t result = 1;
      if (v24 == v48) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_1C00F4738(uint64_t a1, uint64_t a2)
{
  return sub_1C00F4B68(a1, a2, sub_1BFEC3A64);
}

uint64_t sub_1C00F4750(uint64_t a1, uint64_t a2)
{
  return sub_1C00F4B68(a1, a2, sub_1C00B0490);
}

uint64_t sub_1C00F4768(uint64_t a1, uint64_t a2)
{
  return sub_1C00F4B68(a1, a2, sub_1C00B073C);
}

uint64_t sub_1C00F4780(uint64_t a1, uint64_t a2)
{
  return sub_1C00F4B68(a1, a2, sub_1C00B0B60);
}

uint64_t sub_1C00F4798(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = v2 - 1;
  uint64_t v4 = (float64x2_t *)(a2 + 40);
  uint64_t v5 = (float64x2_t *)(a1 + 40);
  do
  {
    int32x2_t v6 = vmovn_s64(vceqq_f64(*v5, *v4));
    uint64_t result = ((*(void *)&v5[-1].f64[1] == *(void *)&v4[-1].f64[1]) & v6.i8[0]) & v6.i8[4];
    BOOL v9 = v3-- != 0;
    if (result != 1) {
      break;
    }
    uint64_t v4 = (float64x2_t *)((char *)v4 + 24);
    uint64_t v5 = (float64x2_t *)((char *)v5 + 24);
  }
  while (v9);
  return result;
}

unint64_t sub_1C00F4820(unint64_t result, uint64_t a2)
{
  uint64_t v4 = result;
  unint64_t v5 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6 == v24) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v4 < 0) {
    uint64_t v8 = v4;
  }
  else {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  if (v5) {
    uint64_t v7 = v8;
  }
  uint64_t v9 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v9 = v10;
  }
  if (v7 == v9) {
    return 1;
  }
  if (v6 < 0)
  {
    __break(1u);
LABEL_61:
    uint64_t result = MEMORY[0x1C18C7CB0](0, v4);
    uint64_t v11 = (void *)result;
    unint64_t v12 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0) {
      goto LABEL_21;
    }
LABEL_62:
    unint64_t v13 = (void *)MEMORY[0x1C18C7CB0](0, a2);
LABEL_23:
    if (v11[2] == v13[2] && v11[3] == v13[3] || (sub_1C1520A9C() & 1) != 0)
    {
      char v14 = sub_1C00F4798(v11[4], v13[4]);
      swift_release();
      uint64_t result = swift_release();
      if (v14)
      {
        if (v6 == 1) {
          return 1;
        }
        unint64_t v15 = 1;
        while (1)
        {
          if (v15 == v6) {
            goto LABEL_65;
          }
          if (v2)
          {
            uint64_t result = MEMORY[0x1C18C7CB0](v15, v4);
            uint64_t v16 = (void *)result;
            if (v12) {
              goto LABEL_35;
            }
          }
          else
          {
            if (v15 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_66;
            }
            uint64_t v16 = *(void **)(v4 + 32 + 8 * v15);
            uint64_t result = swift_retain();
            if (v12)
            {
LABEL_35:
              uint64_t v17 = (void *)MEMORY[0x1C18C7CB0](v15, a2);
              goto LABEL_40;
            }
          }
          if (v15 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_67;
          }
          uint64_t v17 = *(void **)(a2 + 32 + 8 * v15);
          swift_retain();
LABEL_40:
          BOOL v18 = v16[2] == v17[2] && v16[3] == v17[3];
          if (!v18 && (sub_1C1520A9C() & 1) == 0) {
            goto LABEL_54;
          }
          uint64_t v19 = v16[4];
          uint64_t v20 = v17[4];
          uint64_t v21 = *(void *)(v19 + 16);
          if (v21 != *(void *)(v20 + 16)) {
            goto LABEL_54;
          }
          if (v21 && v19 != v20)
          {
            uint64_t v22 = (double *)(v20 + 48);
            char v23 = (double *)(v19 + 48);
            while (*((void *)v23 - 2) == *((void *)v22 - 2) && *(v23 - 1) == *(v22 - 1) && *v23 == *v22)
            {
              v22 += 3;
              v23 += 3;
              if (!--v21) {
                goto LABEL_31;
              }
            }
            goto LABEL_54;
          }
LABEL_31:
          swift_release();
          swift_release();
          ++v15;
          uint64_t result = 1;
          if (v15 == v6) {
            return result;
          }
        }
      }
    }
    else
    {
LABEL_54:
      swift_release();
      swift_release();
    }
    return 0;
  }
  unint64_t v2 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0) {
    goto LABEL_61;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v11 = *(void **)(v4 + 32);
  uint64_t result = swift_retain();
  unint64_t v12 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0) {
    goto LABEL_62;
  }
LABEL_21:
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v13 = *(void **)(a2 + 32);
    swift_retain();
    goto LABEL_23;
  }
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_1C00F4B50(uint64_t a1, uint64_t a2)
{
  return sub_1C00F4B68(a1, a2, sub_1BFEFAE14);
}

uint64_t sub_1C00F4B68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  unint64_t v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)sub_1C15204BC();
    swift_bridgeObjectRelease();
    if ((void *)v7 == v8) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v8 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v7 != v8) {
    return 0;
  }
LABEL_5:
  if (!v7) {
    return 1;
  }
  uint64_t i = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v11 = a1;
  }
  else {
    uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  if (v6) {
    uint64_t v10 = v11;
  }
  uint64_t v12 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v13 = a2;
  }
  else {
    uint64_t v13 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v12 = v13;
  }
  if (v10 == v12) {
    return 1;
  }
  if (v7 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  unint64_t v25 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_53:
    uint64_t result = MEMORY[0x1C18C7CB0](0, a1);
    uint64_t v8 = (void *)result;
    goto LABEL_21;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v8 = *(void **)(a1 + 32);
  uint64_t result = swift_retain();
LABEL_21:
  unint64_t v24 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_55:
    unint64_t v15 = (void *)MEMORY[0x1C18C7CB0](0, a2);
LABEL_24:
    if (v8[2] == v15[2] && v8[3] == v15[3] || (sub_1C1520A9C() & 1) != 0)
    {
      char v16 = a3(v8[4], v15[4]);
      swift_release();
      swift_release();
      if (v16)
      {
        uint64_t v23 = i;
        uint64_t v17 = 1 - v7;
        for (uint64_t i = 5; ; ++i)
        {
          uint64_t v7 = v17 + i == 5;
          if (v17 + i == 5) {
            return v7;
          }
          unint64_t v19 = i - 4;
          if (v25)
          {
            uint64_t v20 = (void *)MEMORY[0x1C18C7CB0](i - 4, a1);
            if (v24) {
              goto LABEL_33;
            }
          }
          else
          {
            if (v19 >= *(void *)(v23 + 16))
            {
              __break(1u);
LABEL_51:
              __break(1u);
              goto LABEL_52;
            }
            uint64_t v20 = *(void **)(a1 + 8 * i);
            swift_retain();
            if (v24)
            {
LABEL_33:
              uint64_t v21 = (void *)MEMORY[0x1C18C7CB0](i - 4, a2);
              goto LABEL_38;
            }
          }
          if (v19 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v21 = *(void **)(a2 + 8 * i);
          swift_retain();
LABEL_38:
          BOOL v22 = v20[2] == v21[2] && v20[3] == v21[3];
          if (!v22 && (sub_1C1520A9C() & 1) == 0) {
            goto LABEL_43;
          }
          char v18 = a3(v20[4], v21[4]);
          swift_release();
          swift_release();
          if ((v18 & 1) == 0) {
            return v7;
          }
        }
      }
    }
    else
    {
LABEL_43:
      swift_release();
      swift_release();
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v15 = *(void **)(a2 + 32);
    swift_retain();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

BOOL sub_1C00F4E44(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1C00F4EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned char *)(a1 + 32);
    uint64_t v4 = (unsigned char *)(a2 + 32);
    do
    {
      if (*v3) {
        uint64_t v5 = 0x6B636F6C62;
      }
      else {
        uint64_t v5 = 0x776F6C6C6F66;
      }
      if (*v3) {
        unint64_t v6 = 0xE500000000000000;
      }
      else {
        unint64_t v6 = 0xE600000000000000;
      }
      if (*v4) {
        uint64_t v7 = 0x6B636F6C62;
      }
      else {
        uint64_t v7 = 0x776F6C6C6F66;
      }
      if (*v4) {
        unint64_t v8 = 0xE500000000000000;
      }
      else {
        unint64_t v8 = 0xE600000000000000;
      }
      if (v5 == v7 && v6 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      ++v3;
      ++v4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C00F4FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 64);
    for (uint64_t i = (uint64_t *)(a1 + 64); ; i += 5)
    {
      uint64_t v5 = *(i - 2);
      uint64_t v6 = *(i - 1);
      uint64_t v7 = *i;
      uint64_t v9 = *(v3 - 2);
      uint64_t v8 = *(v3 - 1);
      uint64_t v15 = *v3;
      BOOL v10 = *(i - 4) == *(v3 - 4) && *(i - 3) == *(v3 - 3);
      if (!v10 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      uint64_t v16 = v9;
      uint64_t v17 = v5;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if ((static FormatTextContent.== infix(_:_:)(&v17, &v16) & 1) == 0) {
        goto LABEL_19;
      }
      if (v6)
      {
        if (!v8
          || (swift_retain(),
              uint64_t v11 = swift_retain(),
              char v12 = _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v11, v8),
              swift_release(),
              swift_release(),
              (v12 & 1) == 0))
        {
LABEL_19:
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      else if (v8)
      {
        goto LABEL_19;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v13 = sub_1BFEFAE14(v7, v15);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if ((v13 & 1) == 0) {
        return 0;
      }
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C00F5204(uint64_t a1, uint64_t a2)
{
  return sub_1C00F53A0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatTextContent.== infix(_:_:));
}

uint64_t sub_1C00F521C(uint64_t a1, uint64_t a2)
{
  return sub_1C00F5234(a1, a2, (uint64_t (*)(char *, char *))static FormatTextContent.== infix(_:_:));
}

uint64_t sub_1C00F5234(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, char *))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 == *(void *)(a2 + 16))
  {
    if (!v3 || a1 == a2) {
      return 1;
    }
    uint64_t v5 = (long long *)(a1 + 32);
    for (uint64_t i = (long long *)(a2 + 32); ; ++i)
    {
      long long v7 = *v5;
      long long v12 = *i;
      long long v13 = v7;
      unint64_t v10 = v12;
      uint64_t v11 = v7;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if ((static FormatExpression.== infix(_:_:)(&v11, &v10) & 1) == 0) {
        break;
      }
      char v8 = a3((char *)&v13 + 8, (char *)&v12 + 8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if ((v8 & 1) == 0) {
        return 0;
      }
      ++v5;
      if (!--v3) {
        return 1;
      }
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return 0;
}

uint64_t sub_1C00F5388(uint64_t a1, uint64_t a2)
{
  return sub_1C00F53A0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatColor.== infix(_:_:));
}

uint64_t sub_1C00F53A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t *))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 == *(void *)(a2 + 16))
  {
    if (!v3 || a1 == a2) {
      return 1;
    }
    uint64_t v5 = (uint64_t *)(a2 + 48);
    for (uint64_t i = (uint64_t *)(a1 + 48); ; i += 3)
    {
      uint64_t v7 = *(i - 1);
      uint64_t v8 = *i;
      uint64_t v9 = *(v5 - 2);
      uint64_t v10 = *(v5 - 1);
      uint64_t v11 = *v5;
      uint64_t v14 = *(i - 2);
      uint64_t v15 = v7;
      uint64_t v16 = v8;
      uint64_t v13 = v11;
      if ((v14 != v9 || v7 != v10) && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      if ((a3(&v16, &v13) & 1) == 0) {
        break;
      }
      v5 += 3;
      if (!--v3) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t static FormatSyncImageContent.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  unint64_t v4 = (unint64_t)*a1 >> 62;
  if (!v4)
  {
    if (!(v3 >> 62))
    {
      uint64_t v15 = *(void *)(v2 + 112);
      char v16 = *(unsigned char *)(v2 + 104);
      __int16 v17 = *(_WORD *)(v2 + 64);
      char v18 = *(unsigned char *)(v2 + 40);
      uint64_t v19 = *(void *)(v2 + 32);
      uint64_t v20 = *(void *)(v3 + 32);
      char v21 = *(unsigned char *)(v3 + 40);
      __int16 v22 = *(_WORD *)(v3 + 64);
      char v23 = *(unsigned char *)(v3 + 104);
      uint64_t v24 = *(void *)(v3 + 112);
      long long v39 = *(_OWORD *)(v2 + 16);
      *(void *)&long long v40 = v19;
      BYTE8(v40) = v18;
      long long v41 = *(_OWORD *)(v2 + 48);
      __int16 v42 = v17;
      long long v43 = *(_OWORD *)(v2 + 72);
      long long v44 = *(_OWORD *)(v2 + 88);
      char v45 = v16;
      uint64_t v46 = v15;
      long long v31 = *(_OWORD *)(v3 + 16);
      *(void *)&long long v32 = v20;
      BYTE8(v32) = v21;
      long long v33 = *(_OWORD *)(v3 + 48);
      __int16 v34 = v22;
      long long v35 = *(_OWORD *)(v3 + 72);
      long long v36 = *(_OWORD *)(v3 + 88);
      char v37 = v23;
      uint64_t v38 = v24;
      swift_retain();
      swift_retain();
      BOOL v14 = _s8NewsFeed17FormatSymbolImageV2eeoiySbAC_ACtFZ_0(&v39, &v31);
      goto LABEL_7;
    }
LABEL_13:
    char v25 = 0;
    return v25 & 1;
  }
  if (v4 != 1)
  {
    if (v3 >> 62 == 2)
    {
      uint64_t v26 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v27 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v28 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      *(void *)&long long v39 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      *((void *)&v39 + 1) = v26;
      *(void *)&long long v31 = v27;
      *((void *)&v31 + 1) = v28;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (static FormatSyncImageContent.== infix(_:_:)(&v39, &v31))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v29 = sub_1C00F53A0(v26, v28, (uint64_t (*)(uint64_t *, uint64_t *))static FormatSyncImageContent.== infix(_:_:));
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if (v29)
        {
          char v25 = 1;
          return v25 & 1;
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    goto LABEL_13;
  }
  if (v3 >> 62 != 1) {
    goto LABEL_13;
  }
  uint64_t v5 = v2 & 0x3FFFFFFFFFFFFFFFLL;
  char v6 = *(unsigned char *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x40);
  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = v3 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v8 + 24);
  char v11 = *(unsigned char *)(v8 + 64);
  *(void *)&long long v39 = *(void *)(v5 + 16);
  *((void *)&v39 + 1) = v7;
  long long v12 = *(_OWORD *)(v5 + 48);
  long long v40 = *(_OWORD *)(v5 + 32);
  long long v41 = v12;
  LOBYTE(v42) = v6;
  *(void *)&long long v31 = v9;
  *((void *)&v31 + 1) = v10;
  long long v13 = *(_OWORD *)(v8 + 48);
  long long v32 = *(_OWORD *)(v8 + 32);
  long long v33 = v13;
  LOBYTE(v34) = v11;
  swift_retain();
  swift_retain();
  BOOL v14 = _s8NewsFeed17FormatBundleImageV2eeoiySbAC_ACtFZ_0((uint64_t)&v39, (uint64_t)&v31);
LABEL_7:
  char v25 = v14;
  swift_release();
  swift_release();
  return v25 & 1;
}

uint64_t sub_1C00F5724(unint64_t a1, unsigned __int8 a2, unint64_t a3, unsigned __int8 a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      unint64_t v15 = a1;
      char v16 = 1;
      if (a4 == 1)
      {
        unint64_t v14 = a3;
        sub_1BFC7E2FC(a1);
        sub_1BFC7E2FC(a1);
        char v8 = static FormatSlotTransform.== infix(_:_:)(&v15, &v14);
        sub_1C00544B4(v15);
        unint64_t v9 = a1;
        unsigned __int8 v10 = 1;
LABEL_13:
        sub_1C00F5B6C(v9, v10);
        return v8 & 1;
      }
      sub_1C00F5B34(a1, 1u);
      unint64_t v11 = a1;
      unsigned __int8 v12 = 1;
    }
    else
    {
      unint64_t v15 = a1;
      char v16 = 2;
      if (a4 == 2)
      {
        unint64_t v14 = a3;
        sub_1BFC7E2FC(a1);
        sub_1BFC7E2FC(a1);
        char v8 = static FormatSlotTransform.== infix(_:_:)(&v15, &v14);
        sub_1C00544B4(v15);
        unint64_t v9 = a1;
        unsigned __int8 v10 = 2;
        goto LABEL_13;
      }
      sub_1C00F5B34(a1, 2u);
      unint64_t v11 = a1;
      unsigned __int8 v12 = 2;
    }
  }
  else
  {
    unint64_t v15 = a1;
    char v16 = 0;
    if (!a4)
    {
      unint64_t v14 = a3;
      sub_1BFC7E2FC(a1);
      sub_1BFC7E2FC(a1);
      char v8 = static FormatSlotTransform.== infix(_:_:)(&v15, &v14);
      sub_1C00544B4(v15);
      unint64_t v9 = a1;
      unsigned __int8 v10 = 0;
      goto LABEL_13;
    }
    sub_1C00F5B34(a1, 0);
    unint64_t v11 = a1;
    unsigned __int8 v12 = 0;
  }
  sub_1C00F5B34(v11, v12);
  sub_1C00F5B34(a3, a4);
  sub_1C00544B4(a1);
  sub_1C00F5B6C(a1, a2);
  sub_1C00F5B6C(a3, a4);
  char v8 = 0;
  return v8 & 1;
}

uint64_t sub_1C00F58D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a1 + 32);
  __int16 v11 = *(_WORD *)(a1 + 40);
  uint64_t v12 = *(void *)(a4 + 32);
  __int16 v13 = *(_WORD *)(a4 + 40);
  long long v19 = *(_OWORD *)(a1 + 16);
  uint64_t v20 = v10;
  __int16 v21 = v11;
  long long v16 = *(_OWORD *)(a4 + 16);
  uint64_t v17 = v12;
  __int16 v18 = v13;
  if ((static FormatCommandBinding.== infix(_:_:)(&v19, &v16) & 1) != 0
    && (sub_1C00F0728(a2, a5, static FormatTextContent.== infix(_:_:)) & 1) != 0)
  {
    *(void *)&long long v19 = a3;
    *(void *)&long long v16 = a6;
    char v14 = static FormatTextContent.== infix(_:_:)((uint64_t *)&v19, (unint64_t *)&v16);
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

unint64_t sub_1C00F5994(uint64_t a1)
{
  unint64_t result = sub_1C0073A80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C00F59BC()
{
  unint64_t result = qword_1EB8919F8;
  if (!qword_1EB8919F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8919F8);
  }
  return result;
}

void *assignWithCopy for FormatSyncImageContent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for FormatSyncImageContent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1C00F5A8C(void *a1)
{
  return *a1 >> 62;
}

void *sub_1C00F5A98(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1C00F5AA8(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for FormatSyncImageContent()
{
  return &type metadata for FormatSyncImageContent;
}

uint64_t sub_1C00F5ACC(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 == 1) {
    return sub_1BFE74E64(result, a2);
  }
  if (!(a3 >> 6)) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C00F5AEC(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 == 1) {
    return sub_1BFF8F648(result, a2);
  }
  if (!(a3 >> 6)) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1C00F5B0C(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1BFF58F10(result);
  }
  return result;
}

unint64_t sub_1C00F5B20(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1BFF07CD8(result);
  }
  return result;
}

unint64_t sub_1C00F5B34(unint64_t result, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return sub_1BFC7E2FC(result);
  }
  return result;
}

unint64_t sub_1C00F5B6C(unint64_t result, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return sub_1C00544B4(result);
  }
  return result;
}

uint64_t sub_1C00F5BA4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C00F5C00(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 128) >> 5) & 3;
}

uint64_t sub_1C00F5C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14 < 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1BFDB3920(a7);
  }
}

uint64_t sub_1C00F5C8C(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 136);
  uint64_t v15 = *(void *)(a1 + 144);
  uint64_t v14 = *(void *)(a1 + 152);
  uint64_t v2 = *(void *)(a1 + 168);
  uint64_t v13 = *(void *)(a1 + 160);
  uint64_t v3 = *(void *)(a1 + 176);
  uint64_t v4 = *(void *)(a1 + 184);
  uint64_t v5 = *(void *)(a1 + 192);
  long long v11 = *(_OWORD *)(a1 + 216);
  long long v12 = *(_OWORD *)(a1 + 200);
  long long v10 = *(_OWORD *)(a1 + 232);
  uint64_t v6 = *(void *)(a1 + 248);
  uint64_t v7 = *(void *)(a1 + 256);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 264);
  sub_1BFF91120(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128), (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
  sub_1BFF91120(v16, v15, v14, v13, v2, v3, v4, v5, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v6, v7, v8, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
  return a1;
}

uint64_t sub_1C00F5DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BFDB3960(a7);
  }
}

uint64_t sub_1C00F5E3C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a1;
}

uint64_t sub_1C00F5EAC(uint64_t result)
{
  *(unsigned char *)(result + 128) &= 0x9Fu;
  return result;
}

uint64_t sub_1C00F5EBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C00F5F20(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 128) >> 7;
}

uint64_t sub_1C00F5F2C(uint64_t result)
{
  *(unsigned char *)(result + 128) &= ~0x80u;
  return result;
}

uint64_t sub_1C00F5F3C(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 136);
  uint64_t v2 = *(void *)(a1 + 152);
  uint64_t v15 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 160);
  uint64_t v4 = *(void *)(a1 + 168);
  uint64_t v5 = *(void *)(a1 + 176);
  uint64_t v6 = *(void *)(a1 + 184);
  uint64_t v7 = *(void *)(a1 + 192);
  long long v13 = *(_OWORD *)(a1 + 216);
  long long v14 = *(_OWORD *)(a1 + 200);
  long long v12 = *(_OWORD *)(a1 + 232);
  uint64_t v9 = *(void *)(a1 + 248);
  uint64_t v8 = *(void *)(a1 + 256);
  char v10 = *(unsigned char *)(a1 + 264);
  sub_1BFF92710(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
  sub_1BFF92710(v16, v15, v2, v3, v4, v5, v6, v7, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v8, v10);
  return a1;
}

uint64_t sub_1C00F6034(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C00F6090(uint64_t a1)
{
  return *(void *)(a1 + 104) >> 63;
}

uint64_t sub_1C00F609C(uint64_t result)
{
  *(void *)(result + 104) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1C00F60AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v13 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(a1 + 152);
  uint64_t v5 = *(void *)(a1 + 160);
  uint64_t v6 = *(void *)(a1 + 168);
  uint64_t v7 = *(void *)(a1 + 176);
  uint64_t v8 = *(void *)(a1 + 184);
  long long v11 = *(_OWORD *)(a1 + 208);
  long long v12 = *(_OWORD *)(a1 + 192);
  long long v10 = *(_OWORD *)(a1 + 224);
  sub_1C00F5DC0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104));
  sub_1C00F5DC0(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t *sub_1C00F6190(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1C00F61EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C00F6248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1BFDB3920(a7);
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_1C00F62C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 136);
  sub_1C00F6368(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  sub_1C00F6368(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1C00F6368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BFDB3960(a7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1C00F63DC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C00F6E80(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C00F6448(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C00F6E80(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C00F64A4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = vars8;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00F64E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a3)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C00F652C()
{
  if (!qword_1EB85EAE0)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85EAE0);
    }
  }
}

uint64_t sub_1C00F6584(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C00F65A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C00F6608(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 160);
  uint64_t v4 = *(void *)(a1 + 168);
  uint64_t v5 = *(void *)(a1 + 176);
  uint64_t v6 = *(void *)(a1 + 184);
  uint64_t v7 = *(void *)(a1 + 192);
  uint64_t v8 = *(void *)(a1 + 200);
  long long v15 = *(_OWORD *)(a1 + 208);
  long long v13 = *(_OWORD *)(a1 + 240);
  long long v14 = *(_OWORD *)(a1 + 224);
  long long v12 = *(_OWORD *)(a1 + 256);
  uint64_t v9 = *(void *)(a1 + 272);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 280);
  sub_1BFC5A634(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(_OWORD *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(unsigned char *)(a1 + 136));
  sub_1BFC5A634(v16, v2, v3, v4, v5, v6, v7, v8, v15, BYTE8(v15), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_1C00F670C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C00F676C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 88);
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v13 = *(void *)(a1 + 120);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 72);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 112);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFFC8784(v2, v3, v4);
  sub_1C006F0D4(v10, v9, v8, v7, v5);
  sub_1BFFC8784(v13, v12, v11);
  return a1;
}

uint64_t sub_1C00F6854(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 88);
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v13 = *(void *)(a1 + 120);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 72);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 112);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFFC879C(v2, v3, v4);
  sub_1C006F0EC(v10, v9, v8, v7, v5);
  sub_1BFFC879C(v13, v12, v11);
  return a1;
}

uint64_t sub_1C00F6940(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

unint64_t sub_1C00F69AC()
{
  unint64_t result = qword_1EB891640;
  if (!qword_1EB891640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB891640);
  }
  return result;
}

uint64_t sub_1C00F6A00(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(void))
{
  sub_1C00F6D04(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C00F6A70(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  sub_1C00F6D04(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C00F6ACC()
{
  unint64_t result = qword_1EB891400;
  if (!qword_1EB891400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB891400);
  }
  return result;
}

unint64_t sub_1C00F6B20()
{
  unint64_t result = qword_1EB890F10;
  if (!qword_1EB890F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890F10);
  }
  return result;
}

unint64_t sub_1C00F6B74()
{
  unint64_t result = qword_1EB8917A0;
  if (!qword_1EB8917A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8917A0);
  }
  return result;
}

void sub_1C00F6BC8()
{
  if (!qword_1EB87EF20)
  {
    type metadata accessor for FormatSnippet();
    sub_1BFF6B648(&qword_1EB891140, (void (*)(uint64_t))type metadata accessor for FormatSnippet);
    unint64_t v0 = type metadata accessor for FormatFileReference();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87EF20);
    }
  }
}

unint64_t sub_1C00F6C5C()
{
  unint64_t result = qword_1EB890F80;
  if (!qword_1EB890F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890F80);
  }
  return result;
}

unint64_t sub_1C00F6CB0()
{
  unint64_t result = qword_1EB890EE0;
  if (!qword_1EB890EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890EE0);
  }
  return result;
}

void sub_1C00F6D04(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = type metadata accessor for FormatFileReference();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C00F6D64()
{
  unint64_t result = qword_1EB890F50;
  if (!qword_1EB890F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890F50);
  }
  return result;
}

uint64_t sub_1C00F6DB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C00F6E04(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C00F6E80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C00F6ED4(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C00F6E80(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C00F6F38(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C00F6ED4(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C00F6F94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C00F70AC()
{
  unint64_t result = qword_1EB86FD88;
  if (!qword_1EB86FD88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB86FD88);
  }
  return result;
}

uint64_t sub_1C00F70EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C00F7154(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C00F71B4(uint64_t a1, float a2, uint64_t a3, uint64_t a4, void *a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    float v11 = a2;
    uint64_t v12 = a4;
    uint64_t v10 = a5;
    sub_1C00F782C(a1, &v11, &v10, 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C00F7248()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1C00F7280(void **a1, uint64_t a2)
{
  unint64_t v3 = (unint64_t)*a1;
  unint64_t v4 = (unint64_t)*a1 >> 62;
  if (!v4)
  {
    uint64_t v18 = *(void *)(a2 + 16);
    uint64_t v17 = *(void *)(a2 + 24);
    long long v19 = (void *)(v3 + OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier);
    swift_beginAccess();
    *long long v19 = v18;
    v19[1] = v17;
    Class v20 = (Class)(id)(v3 & 0x3FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1C151F8FC();
    uint64_t v21 = *(void *)(a2 + 96);
    if (v21)
    {
      objc_msgSend((id)v3, sel_setAccessibilityIgnoresInvertColors_, *(unsigned char *)(v21 + 80) & 1);
      if ((~*(void *)(v21 + 64) & 0xF000000000000007) != 0)
      {
        uint64_t v50 = *(void *)(v21 + 64);
        Class v22 = FormatColor.color.getter((uint64_t)(id)v3);
        goto LABEL_14;
      }
    }
    else
    {
      objc_msgSend((id)v3, sel_setAccessibilityIgnoresInvertColors_, 0);
    }
    id v36 = (id)v3;
    Class v22 = 0;
LABEL_14:
    objc_msgSend((id)v3, sel_setProgressTintColor_, v22);

    if (v21 && (~*(void *)(v21 + 72) & 0xF000000000000007) != 0)
    {
      uint64_t v50 = *(void *)(v21 + 72);
      Class v38 = FormatColor.color.getter((uint64_t)(id)v3);
    }
    else
    {
      id v37 = (id)v3;
      Class v38 = 0;
    }
    objc_msgSend((id)v3, sel_setTrackTintColor_, v38);
    Class v33 = v20;
    goto LABEL_39;
  }
  if (v4 != 1)
  {
    char v23 = *(unsigned char *)(a2 + 152);
    if ((v23 & 0xC0) != 0x40) {
      return;
    }
    Swift::Double v25 = *(double *)(a2 + 136);
    Swift::Double v24 = *(double *)(a2 + 144);
    Swift::Double v26 = *(double *)(a2 + 128);
    uint64_t v27 = *(void *)(a2 + 120);
    Swift::Double v28 = *(double *)(a2 + 112);
    NewsFeed::FormatLineCap v29 = v23 & 0x3F;
    uint64_t v31 = *(void *)(a2 + 16);
    uint64_t v30 = *(void *)(a2 + 24);
    long long v32 = (void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier);
    swift_beginAccess();
    *long long v32 = v31;
    v32[1] = v30;
    Class v33 = (Class)(id)(v3 & 0x3FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1C151F8FC();
    uint64_t v34 = *(void *)(a2 + 96);
    if (v34) {
      uint64_t v35 = *(unsigned char *)(v34 + 80) & 1;
    }
    else {
      uint64_t v35 = 0;
    }
    [(objc_class *)v33 setAccessibilityIgnoresInvertColors:v35];
    options.radius = v28;
    options.clockwise = v27 & 1;
    options.stepPercentage = v26;
    options.minPercentage = v25;
    options.maxPercentage = v24;
    options.lineCap = v29;
    FormatProgressCircleView.setUpCircleView(options:)(&options);
    if (v34 && (~*(void *)(v34 + 64) & 0xF000000000000007) != 0)
    {
      options.radius = *(Swift::Double *)(v34 + 64);
      Class v43 = FormatColor.color.getter(v42);
      Class v38 = v43;
    }
    else
    {
      Class v43 = (Class)objc_msgSend(self, sel_redColor);
      Class v38 = v43;
      if (!v34) {
        goto LABEL_36;
      }
    }
    if ((~*(void *)(v34 + 72) & 0xF000000000000007) != 0)
    {
      options.radius = *(Swift::Double *)(v34 + 72);
      Class v48 = FormatColor.color.getter((uint64_t)v43);
      goto LABEL_38;
    }
LABEL_36:
    Class v48 = (Class)objc_msgSend(self, sel_grayColor);
LABEL_38:
    Class v20 = v48;
    FormatProgressCircleView.setProgressColors(backgroundColor:strokeColor:)((UIColor)v38, (UIColor)v48);
    goto LABEL_39;
  }
  if (*(unsigned __int8 *)(a2 + 152) >= 0x40u) {
    return;
  }
  uint64_t v5 = (char *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
  uint64_t v7 = *(void *)(a2 + 136);
  uint64_t v6 = *(void *)(a2 + 144);
  uint64_t v9 = *(void *)(a2 + 120);
  uint64_t v8 = *(void *)(a2 + 128);
  uint64_t v10 = *(void *)(a2 + 112);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v13 = &v5[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier];
  swift_beginAccess();
  *(void *)uint64_t v13 = v12;
  *((void *)v13 + 1) = v11;
  long long v14 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C151F8FC();
  uint64_t v15 = *(void *)(a2 + 96);
  if (v15) {
    uint64_t v16 = *(unsigned char *)(v15 + 80) & 1;
  }
  else {
    uint64_t v16 = 0;
  }
  id v39 = objc_msgSend(v14, sel_setAccessibilityIgnoresInvertColors_, v16);
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_radius] = v10;
  v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_clockwise] = v9 & 1;
  long long v40 = &v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_stepPercentage];
  *(void *)long long v40 = v8;
  v40[8] = 0;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_minPercentage] = v7;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_maxPercentage] = v6;
  if (v15 && (~*(void *)(v15 + 64) & 0xF000000000000007) != 0)
  {
    uint64_t v50 = *(void *)(v15 + 64);
    Class v41 = FormatColor.color.getter((uint64_t)v39);
    Class v20 = v41;
  }
  else
  {
    Class v41 = (Class)objc_msgSend(self, sel_redColor);
    Class v20 = v41;
    if (!v15) {
      goto LABEL_31;
    }
  }
  if ((~*(void *)(v15 + 72) & 0xF000000000000007) != 0)
  {
    uint64_t v50 = *(void *)(v15 + 72);
    Class v44 = FormatColor.color.getter((uint64_t)v41);
    goto LABEL_33;
  }
LABEL_31:
  Class v44 = (Class)objc_msgSend(self, sel_grayColor);
LABEL_33:
  Class v45 = v44;
  id v46 = *(id *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer];
  id v47 = [(objc_class *)v20 CGColor];
  objc_msgSend(v46, sel_setFillColor_, v47);

  Class v33 = (Class)*(id *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer];
  Class v38 = (Class)[(objc_class *)v45 CGColor];
  [(objc_class *)v33 setFillColor:v38];

LABEL_39:
}

void sub_1C00F7794(uint64_t a1, void **a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v6 = (unint64_t)*a2;
  if ((unint64_t)*a2 >> 62)
  {
    uint64_t v8 = *a3;
    id v7 = (id)(v6 & 0x3FFFFFFFFFFFFFFFLL);
    sub_1BFE69FD4(a1, v7, &v8, a4);
  }
  else
  {
    uint64_t v8 = *a3;
    sub_1BFE69FD4(a1, (id)v6, &v8, a4);
  }
}

void sub_1C00F782C(uint64_t a1, float *a2, void **a3, char a4)
{
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x1E4FAC020];
  sub_1BFF07390(0, &qword_1EB885148, MEMORY[0x1E4FAC020]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (_DWORD *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v26 - v13;
  float v15 = *a2;
  unint64_t v16 = (unint64_t)*a3;
  sub_1C00F81B4(a1, (uint64_t)&v26 - v13, &qword_1EB885148, v8);
  uint64_t v17 = sub_1C151A7DC();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17) != 1)
  {
    sub_1C00F81B4((uint64_t)v14, (uint64_t)v11, &qword_1EB885148, MEMORY[0x1E4FAC020]);
    int v19 = (*(uint64_t (**)(_DWORD *, uint64_t))(v18 + 88))(v11, v17);
    if (v19 == *MEMORY[0x1E4FAC010])
    {
      (*(void (**)(_DWORD *, uint64_t))(v18 + 96))(v11, v17);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if (v19 != *MEMORY[0x1E4FAC018])
    {
      if (v19 == *MEMORY[0x1E4FAC000])
      {
        (*(void (**)(_DWORD *, uint64_t))(v18 + 96))(v11, v17);
        double v21 = 0.0;
        if (v15 > 0.0)
        {
          LODWORD(v21) = *v11;
LABEL_17:
          float v22 = *(float *)&v21 / v15;
          LODWORD(v21) = 1.0;
          if (v22 < 1.0)
          {
            double v21 = 0.0;
            if (v22 >= 0.0) {
              *(float *)&double v21 = v22;
            }
          }
        }
      }
      else
      {
        if (v19 != *MEMORY[0x1E4FAC008])
        {
          if (v19 == *MEMORY[0x1E4FABFF8]) {
            goto LABEL_5;
          }
          (*(void (**)(_DWORD *, uint64_t))(v18 + 8))(v11, v17);
          if (!(v16 >> 62))
          {
            objc_msgSend((id)v16, sel_setProgress_animated_, a4 & 1, 0.0);
            goto LABEL_31;
          }
          if (v16 >> 62 == 1)
          {
            id v24 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
            FormatProgressPieView.updatePieProgress(progress:)(0.0);
            goto LABEL_30;
          }
          id v24 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
          Swift::Double v25 = 0.0;
LABEL_29:
          FormatProgressCircleView.updateCircleProgress(progress:)(v25);
          goto LABEL_30;
        }
        (*(void (**)(_DWORD *, uint64_t))(v18 + 96))(v11, v17);
        double v21 = 0.0;
        if (v15 > 0.0)
        {
          double v21 = *(double *)v11;
          *(float *)&double v21 = *(double *)v11;
          goto LABEL_17;
        }
      }
      if (!(v16 >> 62))
      {
        objc_msgSend((id)v16, sel_setProgress_animated_, a4 & 1, v21);
LABEL_31:
        sub_1C00F8158((uint64_t)v14, &qword_1EB885148, MEMORY[0x1E4FAC020]);
        return;
      }
      double v23 = *(float *)&v21;
      if (v16 >> 62 == 1)
      {
        id v24 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
        FormatProgressPieView.updatePieProgress(progress:)(v23);
LABEL_30:

        goto LABEL_31;
      }
      id v24 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
      Swift::Double v25 = v23;
      goto LABEL_29;
    }
  }
LABEL_5:
  sub_1C00F8158((uint64_t)v14, &qword_1EB885148, MEMORY[0x1E4FAC020]);
  if (v16 >> 62)
  {
    if (v16 >> 62 == 1)
    {
      id v20 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
      FormatProgressPieView.updatePieProgress(progress:)(0.0);
    }
    else
    {
      id v20 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
      FormatProgressCircleView.updateCircleProgress(progress:)(0.0);
    }
  }
  else
  {
    objc_msgSend((id)v16, sel_setProgress_animated_, a4 & 1, 0.0);
  }
}

void sub_1C00F7C30(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, void *a5)
{
  void (*v29)(void **__return_ptr, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t);
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34[3];
  uint64_t v35;
  void *v36[5];
  uint64_t vars8;

  uint64_t v6 = v5;
  sub_1BFF07390(0, &qword_1EB885148, MEMORY[0x1E4FAC020]);
  MEMORY[0x1F4188790](v12 - 8);
  long long v14 = (char *)&v32 - v13;
  float v15 = *(float *)a1;
  uint64_t v16 = *(void *)(a1 + 8);
  unint64_t v17 = (unint64_t)*a3;
  v34[0] = (void *)v17;
  sub_1C00F7280(v34, a2);
  uint64_t v18 = *(void *)(a2 + 176);
  v36[0] = (void *)v17;
  uint64_t v19 = *(void *)(a2 + 96);
  if (v19)
  {
    id v20 = *(void **)(v19 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    id v20 = 0;
  }
  v34[0] = v20;
  sub_1C00F7794(v18, v36, (uint64_t *)v34, a4);
  swift_bridgeObjectRelease();
  if (v16 < 0)
  {
    Class v33 = a5;
    uint64_t v24 = *(void *)(v6 + 16);
    uint64_t v25 = *(void *)(v6 + 24);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x78);
    sub_1C00F804C(v16);
    v26(v24, v25);
    *(float *)id v36 = v15;
    v36[1] = (void *)v16;
    v34[0] = (void *)v17;
    sub_1C00F782C((uint64_t)v14, (float *)v36, v34, 0);
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    *(float *)(v28 + 24) = v15;
    *(void *)(v28 + 32) = v16;
    *(void *)(v28 + 40) = v17;
    NewsFeed::FormatLineCap v29 = *(void (**)(void **__return_ptr, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t))((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x88);
    uint64_t v30 = (id)(v17 & 0x3FFFFFFFFFFFFFFFLL);
    sub_1C00F804C(v16);
    swift_retain();
    v29(v36, v24, v25, sub_1C00F80F0, v28);
    swift_release();
    swift_release();
    sub_1C00F81B4((uint64_t)v36, (uint64_t)v34, &qword_1EB8713D8, (void (*)(uint64_t))sub_1C00F8100);
    if (v35)
    {
      __swift_project_boxed_opaque_existential_1(v34, v35);
      sub_1C1517E3C();
      sub_1C00F80E0(v16);
      sub_1C00F8158((uint64_t)v36, &qword_1EB8713D8, (void (*)(uint64_t))sub_1C00F8100);
      sub_1C00F8158((uint64_t)v14, &qword_1EB885148, MEMORY[0x1E4FAC020]);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    }
    else
    {
      sub_1C00F80E0(v16);
      sub_1C00F8158((uint64_t)v36, &qword_1EB8713D8, (void (*)(uint64_t))sub_1C00F8100);
      sub_1C00F8158((uint64_t)v14, &qword_1EB885148, MEMORY[0x1E4FAC020]);
      sub_1C00F8158((uint64_t)v34, &qword_1EB8713D8, (void (*)(uint64_t))sub_1C00F8100);
    }
  }
  else
  {
    double v22 = 0.0;
    if (v15 > 0.0)
    {
      *(float *)&double v21 = *(float *)&v16 / v15;
      LODWORD(v22) = 1.0;
      if ((float)(*(float *)&v16 / v15) < 1.0)
      {
        double v22 = 0.0;
        if (*(float *)&v21 >= 0.0) {
          *(float *)&double v22 = *(float *)&v16 / v15;
        }
      }
    }
    if (v17 >> 62)
    {
      double v23 = *(float *)&v22;
      Class v33 = (id)(v17 & 0x3FFFFFFFFFFFFFFFLL);
      if (v17 >> 62 == 1) {
        FormatProgressPieView.updatePieProgress(progress:)(v23);
      }
      else {
        FormatProgressCircleView.updateCircleProgress(progress:)(v23);
      }
      uint64_t v31 = v33;
    }
    else
    {
      objc_msgSend((id)v17, sel_setProgress_animated_, 0, v22, v21);
    }
  }
}

uint64_t sub_1C00F804C(uint64_t result)
{
  if (result < 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C00F805C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C00F8094()
{
  swift_release();
  sub_1C00F80E0(*(void *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_1C00F80E0(uint64_t result)
{
  if (result < 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C00F80F0(uint64_t a1)
{
  return sub_1C00F71B4(a1, *(float *)(v1 + 24), *(void *)(v1 + 16), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

unint64_t sub_1C00F8100()
{
  unint64_t result = qword_1EB8713D0;
  if (!qword_1EB8713D0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8713D0);
  }
  return result;
}

uint64_t sub_1C00F8158(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF07390(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C00F81B4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFF07390(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

id IssueCoverViewStyle.parentBackgroundColor.getter()
{
  return *v0;
}

NewsFeed::IssueCoverViewStyle __swiftcall IssueCoverViewStyle.init(parentBackgroundColor:)(NewsFeed::IssueCoverViewStyle parentBackgroundColor)
{
  v1->parentBackgroundColor.super.isa = parentBackgroundColor.parentBackgroundColor.super.isa;
  return parentBackgroundColor;
}

uint64_t IssueCoverViewRendererType.render(_:on:with:traits:coverViewStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = *(void *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 56);
  uint64_t v9 = *(void *)(a3 + 48);
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v11 = *a5;
  long long v12 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v12;
  void v19[2] = *(_OWORD *)(a1 + 32);
  uint64_t v20 = v7;
  char v21 = v8;
  long long v13 = *(_OWORD *)(a3 + 16);
  v16[0] = *(_OWORD *)a3;
  v16[1] = v13;
  _OWORD v16[2] = *(_OWORD *)(a3 + 32);
  uint64_t v17 = v9;
  uint64_t v18 = v10;
  uint64_t v15 = v11;
  return (*(uint64_t (**)(_OWORD *, uint64_t, _OWORD *, uint64_t, uint64_t *))(a7 + 8))(v19, a2, v16, a4, &v15);
}

ValueMetadata *type metadata accessor for IssueCoverViewStyle()
{
  return &type metadata for IssueCoverViewStyle;
}

uint64_t dispatch thunk of IssueCoverViewRendererType.render(_:on:with:traits:coverViewStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

void sub_1C00F82DC(uint64_t a1, unsigned char *a2, long long *a3, uint64_t a4, void **a5)
{
  uint64_t v6 = v5;
  char v8 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  uint64_t v87 = *(void *)(a1 + 24);
  uint64_t v11 = *(void **)(a1 + 32);
  uint64_t v10 = *(void **)(a1 + 40);
  long long v12 = *(void **)(a1 + 48);
  int v13 = *(unsigned __int8 *)(a1 + 56);
  long long v14 = a3[1];
  long long v95 = *a3;
  long long v96 = v14;
  long long v15 = a3[3];
  long long v97 = a3[2];
  long long v98 = v15;
  uint64_t v83 = *a5;
  id v84 = v10;
  sub_1C151F8FC();
  if (!v13)
  {
    id v24 = v8;
    id v25 = v9;
    uint64_t v26 = v7;
    uint64_t v27 = v9;
    uint64_t v28 = v11;
    NewsFeed::FormatLineCap v29 = v12;
    id v30 = v25;
    id v31 = v24;
    id v32 = v30;
    id v33 = objc_msgSend(v31, sel_identifier);
    uint64_t v21 = sub_1C151E62C();
    double v23 = v34;

    long long v12 = v29;
    uint64_t v11 = v28;
    uint64_t v9 = v27;
    uint64_t v7 = v26;
    sub_1C00FA1F0(v8, v26, v9, v87, v11, (uint64_t)v84, v12, 0);
    goto LABEL_5;
  }
  if (v13 == 1)
  {
    sub_1C00FA170(v8, v7, v9, v87, v11, (uint64_t)v84, v12, 1);
    id v81 = v12;
    id v16 = v8;
    swift_bridgeObjectRetain();
    uint64_t v76 = v11;
    uint64_t v17 = v5;
    uint64_t v18 = v8;
    uint64_t v19 = v9;
    id v20 = objc_msgSend(v16, sel_identifier);
    uint64_t v21 = sub_1C151E62C();
    double v23 = v22;
    swift_bridgeObjectRelease();

    long long v12 = v81;
    uint64_t v9 = v19;
    char v8 = v18;
    uint64_t v6 = v17;
    uint64_t v11 = v76;
LABEL_5:
    sub_1C00FA1F0(v8, v7, v9, v87, v11, (uint64_t)v84, v12, v13);
    goto LABEL_7;
  }
  double v23 = (void *)0xE400000000000000;
  uint64_t v21 = 1701736302;
LABEL_7:
  v35.value._countAndFlagsBits = v21;
  v35.value._object = v23;
  Swift::Bool v36 = IssueCoverView.prepareForReuse(identifier:)(v35);
  swift_bridgeObjectRelease();
  if (!v36) {
    return;
  }
  id v82 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C151F72C();
  *(void *)&long long v91 = v82;
  *((void *)&v91 + 1) = *((void *)&v97 + 1);
  *(void *)&long long v92 = v37;
  *((void *)&v92 + 1) = v38;
  *(void *)&long long v93 = v39;
  *((void *)&v93 + 1) = v40;
  *(void *)uint64_t v94 = v97;
  *(_OWORD *)&v94[8] = v98;
  __swift_project_boxed_opaque_existential_1(v6 + 7, v6[10]);
  *(void *)&v89[0] = v83;
  sub_1C14C212C(a2, (uint64_t)&v91, (void **)v89);
  if (v13)
  {
    if (v13 != 1)
    {
      unint64_t v56 = v82;
      goto LABEL_22;
    }
    uint64_t v41 = *(void *)(a4 + 16);
    if (v41)
    {
      uint64_t v42 = 0;
      while ((*(unsigned char *)(a4 + v42 + 32) & 1) == 0)
      {
        if (v41 == ++v42) {
          goto LABEL_14;
        }
      }
      id v63 = v8;
      swift_bridgeObjectRetain();
      id v64 = v11;
      id v65 = v12;
      if (!UIAccessibilityIsReduceMotionEnabled())
      {
        v90[0] = v63;
        v90[1] = v7;
        v90[2] = v9;
        v90[3] = v87;
        v89[0] = v95;
        v89[1] = v96;
        v89[2] = v97;
        v89[3] = v98;
        uint64_t v88 = v83;
        sub_1C00F8A00((uint64_t)v90, a2, v89, (uint64_t)&v91, a4, &v88);
        sub_1BFE4597C();
        uint64_t v66 = (void *)sub_1C151F56C();
        uint64_t v67 = swift_allocObject();
        long long v68 = v96;
        *(_OWORD *)(v67 + 48) = v95;
        *(_OWORD *)(v67 + 64) = v68;
        long long v69 = v98;
        *(_OWORD *)(v67 + 80) = v97;
        *(_OWORD *)(v67 + 96) = v69;
        long long v70 = v91;
        *(_OWORD *)(v67 + 136) = v92;
        long long v71 = *(_OWORD *)v94;
        *(_OWORD *)(v67 + 152) = v93;
        *(_OWORD *)(v67 + 168) = v71;
        *(void *)(v67 + 16) = v64;
        *(void *)(v67 + 24) = v84;
        *(void *)(v67 + 32) = v65;
        *(void *)(v67 + 40) = a2;
        *(void *)(v67 + 112) = v83;
        *(void *)(v67 + 184) = *(void *)&v94[16];
        *(_OWORD *)(v67 + 120) = v70;
        id v72 = v82;
        id v73 = v83;
        id v85 = v64;
        id v74 = v65;
        uint64_t v75 = a2;
        sub_1C15190FC();
        swift_release();
        swift_release();

        swift_release();
        swift_bridgeObjectRelease();

        goto LABEL_16;
      }
    }
    else
    {
LABEL_14:
      id v43 = v8;
      swift_bridgeObjectRetain();
      id v44 = v11;
      id v45 = v12;
    }
    id v46 = objc_msgSend(v11, sel_identifier);
    uint64_t v47 = sub_1C151E62C();
    Class v48 = v12;
    uint64_t v50 = v49;

    id v51 = v82;
    swift_retain();
    id v52 = v83;
    uint64_t v53 = v11;
    id v54 = v52;
    id v85 = v53;
    id v55 = v48;
    sub_1C0FAF7F4(v47, v50, a2, v6, v54, (uint64_t)&v91, v85, v55, (uint64_t)&v95);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();

LABEL_16:
    unint64_t v56 = v85;
LABEL_22:

    return;
  }
  id v78 = v8;
  id v80 = v9;
  uint64_t v57 = v12;
  id v58 = objc_msgSend(v78, sel_identifier);
  uint64_t v77 = sub_1C151E62C();
  uint64_t v60 = v59;

  sub_1C00FA170(v8, v7, v9, v87, v11, (uint64_t)v84, v57, 0);
  id v61 = v82;
  swift_retain();
  id v62 = v83;
  sub_1C0FAF7F4(v77, v60, a2, v6, v62, (uint64_t)&v91, v78, v80, (uint64_t)&v95);
  sub_1C00FA1F0(v8, v7, v9, v87, v11, (uint64_t)v84, v57, 0);
  swift_bridgeObjectRelease();
  swift_release();

  sub_1C00FA1F0(v8, v7, v9, v87, v11, (uint64_t)v84, v57, 0);
}

uint64_t sub_1C00F8A00(uint64_t a1, void *a2, long long *a3, uint64_t a4, uint64_t a5, void **a6)
{
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v46 = *(void *)(a1 + 24);
  long long v12 = a3[1];
  long long v53 = *a3;
  long long v54 = v12;
  long long v13 = a3[3];
  long long v55 = a3[2];
  long long v56 = v13;
  uint64_t v47 = *a6;
  sub_1BFC66384(v6 + 144, (uint64_t)v50);
  uint64_t v14 = v51;
  uint64_t v15 = v52;
  __swift_project_boxed_opaque_existential_1(v50, v51);
  id v44 = v9;
  id v16 = objc_msgSend(v9, sel_identifier);
  uint64_t v17 = sub_1C151E62C();
  uint64_t v19 = v18;

  uint64_t v20 = type metadata accessor for LayeredMediaLoader();
  uint64_t v21 = (void *)swift_allocObject();
  uint64_t v22 = type metadata accessor for LayeredMediaParser();
  double v23 = (void *)swift_allocObject();
  v23[2] = v17;
  unint64_t v23[3] = v19;
  v23[4] = v11;
  v23[5] = v46;
  v21[5] = v22;
  v21[6] = &protocol witness table for LayeredMediaParser;
  void v21[2] = v23;
  v49[3] = v20;
  v49[4] = &protocol witness table for LayeredMediaLoader;
  v49[0] = v21;
  uint64_t v24 = *(void *)(a5 + 16);
  if (v24)
  {
    id v25 = (unsigned char *)(a5 + 32);
    uint64_t v26 = &unk_1F1B653A0;
    uint64_t v27 = v45;
    uint64_t v28 = v44;
    while (*v25 == 1)
    {
      ++v25;
      if (!--v24)
      {
        uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
        break;
      }
    }
  }
  else
  {
    uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v27 = v45;
    uint64_t v28 = v44;
  }
  NewsFeed::FormatLineCap v29 = *(void (**)(void *, void *, uint64_t, uint64_t))(v15 + 8);
  swift_bridgeObjectRetain();
  v29(v49, v26, v14, v15);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  uint64_t v30 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  MEMORY[0x1F4188790](v30);
  type metadata accessor for LayeredMediaView(0);
  sub_1C151932C();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a2;
  *(void *)(v31 + 24) = v28;
  *(void *)(v31 + 32) = v10;
  *(void *)(v31 + 40) = v11;
  *(void *)(v31 + 48) = v46;
  *(void *)(v31 + 56) = v27;
  *(void *)(v31 + 64) = v47;
  long long v32 = v54;
  *(_OWORD *)(v31 + 72) = v53;
  *(_OWORD *)(v31 + 88) = v32;
  long long v33 = v56;
  *(_OWORD *)(v31 + 104) = v55;
  *(_OWORD *)(v31 + 120) = v33;
  long long v34 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v31 + 136) = *(_OWORD *)a4;
  long long v35 = *(_OWORD *)(a4 + 32);
  long long v36 = *(_OWORD *)(a4 + 48);
  *(void *)(v31 + 200) = *(void *)(a4 + 64);
  *(_OWORD *)(v31 + 184) = v36;
  *(_OWORD *)(v31 + 168) = v35;
  *(_OWORD *)(v31 + 152) = v34;
  id v37 = a2;
  id v38 = v28;
  swift_bridgeObjectRetain();
  swift_retain();
  id v39 = v47;
  sub_1BFF6757C((id *)a4);
  uint64_t v40 = (void *)sub_1C1518E7C();
  sub_1C1518FEC();
  swift_release();
  swift_release();

  uint64_t v41 = (void *)sub_1C1518E7C();
  uint64_t v42 = sub_1C151903C();
  swift_release();
  swift_release();

  return v42;
}

void sub_1C00F8D98(int a1, void *a2, id a3, void *a4, unsigned char *a5, uint64_t a6, void *a7, id *a8)
{
  id v14 = objc_msgSend(a3, sel_identifier);
  uint64_t v15 = sub_1C151E62C();
  uint64_t v17 = v16;

  swift_retain();
  id v18 = a7;
  sub_1BFF6757C(a8);
  id v19 = a3;
  id v20 = a4;
  sub_1C0FAF7F4(v15, v17, a5, a2, v18, (uint64_t)a8, v19, v20, a6);

  sub_1C00FA270(a8);
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_1C00F8EAC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1BFC81530(0, &qword_1EB895E78, (uint64_t)&type metadata for LayeredMediaLayer, MEMORY[0x1E4FBB320]);
  sub_1C151932C();
  swift_retain();
  uint64_t v4 = (void *)sub_1C1518E7C();
  sub_1BFC81530(0, &qword_1EB85DF48, (uint64_t)&type metadata for LayeredMediaLayerRenderable, v3);
  sub_1C1518FFC();
  swift_release();
  swift_release();

  uint64_t v5 = (void *)sub_1C151806C();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v7;
  type metadata accessor for LayeredMediaView(0);
  swift_retain();
  uint64_t v8 = sub_1C1518FFC();
  swift_release();

  swift_release();
  return v8;
}

uint64_t sub_1C00F9028()
{
  return sub_1C151911C();
}

void sub_1C00F90D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, uint64_t a12, id *a13)
{
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  swift_retain();
  id v20 = objc_msgSend(a6, sel_identifier);
  uint64_t v21 = sub_1C151E62C();
  uint64_t v23 = v22;

  swift_retain();
  id v25 = a11;
  sub_1BFF6757C(a13);
  uint64_t v24 = a5;
  swift_retain();
  swift_retain();
  sub_1C0FAF8F4(v21, v23, a9, v24, a10, v25, a12, (uint64_t)a13, v24, (uint64_t)sub_1C005A494, v19, a3, a4);

  swift_release();
  swift_release();
  sub_1C00FA270(a13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
}

void sub_1C00F9248(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 56), *(void *)(a2 + 80));
  v41[0] = a3;
  sub_1C14C287C((uint64_t)a1, v41);
  objc_msgSend(a1, sel_setClipsToBounds_, 1);
  sub_1C151F72C();
  objc_msgSend(a1, sel_setFrame_);
  id v16 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v16, sel_setCornerCurve_, *(void *)a5);

  id v17 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v17, sel_setCornerRadius_, *(double *)(a5 + 8));

  id v18 = objc_msgSend(a1, sel_layer);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(a5 + 56);
  if (v20)
  {
    if ((v20 & 2) != 0)
    {
      uint64_t v21 = 3;
      if ((v20 & 4) == 0) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v21 = 1;
      if ((v20 & 4) == 0) {
        goto LABEL_8;
      }
    }
    goto LABEL_7;
  }
  if ((v20 & 2) == 0)
  {
    uint64_t v21 = 0;
    if ((v20 & 4) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    v21 |= 4uLL;
    goto LABEL_8;
  }
  uint64_t v21 = 2;
  if ((v20 & 4) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((v20 & 8) != 0) {
    v21 |= 8uLL;
  }
  objc_msgSend(v18, sel_setMaskedCorners_, v21);

  uint64_t v22 = self;
  id v23 = objc_msgSend(v22, sel_mainScreen);
  objc_msgSend(v23, sel_nativeBounds);
  id v25 = v24;
  uint64_t v27 = v26;

  objc_msgSend(a6, sel_bounds);
  NewsFeed::FormatLineCap v29 = v28;
  uint64_t v31 = v30;
  id v32 = objc_msgSend(v22, sel_mainScreen);
  objc_msgSend(v32, sel_scale);
  long long v34 = v33;

  v41[0] = v25;
  v41[1] = v27;
  v41[2] = v29;
  v41[3] = v31;
  v41[4] = v34;
  id v35 = objc_msgSend(a1, sel_setAlpha_, 0.0);
  MEMORY[0x1F4188790](v35);
  sub_1C151932C();
  long long v36 = (void *)swift_allocObject();
  v36[2] = a1;
  v36[3] = a7;
  v36[4] = a8;
  id v37 = a1;
  swift_retain();
  id v38 = (void *)sub_1C1518E7C();
  type metadata accessor for IssueCoverViewRenderer();
  sub_1C151901C();
  swift_release();
  swift_release();

  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = a9;
  *(void *)(v39 + 24) = a10;
  swift_retain();
  uint64_t v40 = (void *)sub_1C1518E7C();
  sub_1C151903C();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1C00F95D4(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151A43C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1C00FA474(a1 + 16, (uint64_t)&v17);
  if (!v18)
  {
    sub_1C00FA504((uint64_t)&v17);
    goto LABEL_7;
  }
  sub_1BFC773DC(&v17, (uint64_t)&v19);
  uint64_t v22 = v6;
  __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
  sub_1C151A41C();
  char v10 = sub_1C151B9FC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  if (v10)
  {
LABEL_7:
    long long v15 = *(_OWORD *)(a3 + 16);
    long long v19 = *(_OWORD *)a3;
    long long v20 = v15;
    uint64_t v21 = *(void *)(a3 + 32);
    return sub_1C009DEDC(a2, &v19);
  }
  if (qword_1EB85EF70 != -1) {
    swift_once();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  long long v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 40) = v12;
  *(void *)(v11 + 56) = *(void *)(a3 + 32);
  type metadata accessor for LayeredMediaViewRenderer();
  long long v13 = a2;
  uint64_t v14 = sub_1C151931C();
  swift_release();
  return v14;
}

id sub_1C00F9844(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v7 = sub_1C151A43C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1C00FA474(a2 + 16, (uint64_t)&v21);
  if (v22)
  {
    sub_1BFC773DC(&v21, (uint64_t)aBlock);
    uint64_t v23 = v7;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v18);
    sub_1C151A42C();
    char v11 = sub_1C151B9FC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    if ((v11 & 1) == 0) {
      return objc_msgSend(a3, sel_setAlpha_, 1.0);
    }
  }
  else
  {
    sub_1C00FA504((uint64_t)&v21);
  }
  long long v13 = self;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  long long v19 = sub_1C00FA5C4;
  uint64_t v20 = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  uint64_t v18 = &block_descriptor_3;
  long long v15 = _Block_copy(aBlock);
  id v16 = a3;
  swift_release();
  objc_msgSend(v13, sel_animateWithDuration_animations_, v15, 0.15);
  _Block_release(v15);
  return (id)a4();
}

uint64_t sub_1C00F9AB8()
{
  if (qword_1EB85E5D8 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C270;
  sub_1C151F36C();
  sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C00F9C1C(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  __swift_project_boxed_opaque_existential_1(a2 + 7, a2[10]);
  v39[0] = a3;
  sub_1C14C2628(a1, v39, a4);
  uint64_t v14 = self;
  id v15 = a5;
  id v16 = a6;
  id v17 = objc_msgSend(v14, sel_mainScreen);
  objc_msgSend(v17, sel_scale);
  double v19 = v18;

  double v20 = *(double *)(a7 + 40);
  uint64_t v21 = *(void *)(a7 + 48);
  id v22 = v16;
  sub_1C151F72C();
  double v24 = v23;
  double v26 = v25;
  if (v20 > 0.0) {
    uint64_t v27 = *(void *)&v20;
  }
  else {
    uint64_t v27 = 0;
  }
  if (v20 > 0.0) {
    uint64_t v28 = v21;
  }
  else {
    uint64_t v28 = 0;
  }
  uint64_t v29 = type metadata accessor for IssueCoverImageProcessorRequest();
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = (void *)sub_1C017C088(v22, v27, v28, v20 <= 0.0, v30, v24, v26, v19);

  __swift_project_boxed_opaque_existential_1(a2 + 12, a2[15]);
  uint64_t v40 = v29;
  unint64_t v32 = sub_1C00FA6C4();
  unint64_t v41 = v32;
  v39[0] = v31;
  swift_retain();
  long long v33 = (void *)sub_1C151A52C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  if (v33)
  {
    id v34 = v33;
    sub_1C151CD6C();

    return swift_release();
  }
  else
  {
    uint64_t v40 = v29;
    unint64_t v41 = v32;
    v39[0] = v31;
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v36;
    *(void *)(v37 + 24) = a1;
    swift_retain();
    swift_retain();
    id v38 = a1;
    sub_1C151CD2C();
    swift_release();
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
}

uint64_t sub_1C00F9EBC()
{
  uint64_t v0 = sub_1C151A43C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result + 16;
    swift_beginAccess();
    sub_1C00FA474(v5, (uint64_t)&v6);
    if (v7)
    {
      sub_1BFC773DC(&v6, (uint64_t)v8);
      __swift_project_boxed_opaque_existential_1(v8, v8[3]);
      sub_1C151A42C();
      sub_1C151B9FC();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
    else
    {
      sub_1C00FA504((uint64_t)&v6);
    }
    sub_1C151CD4C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C00FA064()
{
  sub_1C00FA504(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1C00FA0C4(uint64_t a1, unsigned char *a2, long long *a3, uint64_t a4, void **a5)
{
}

uint64_t sub_1C00FA0E8()
{
  return swift_deallocObject();
}

void sub_1C00FA140(int a1, void *a2)
{
  sub_1C00F8D98(a1, a2, *(id *)(v2 + 16), *(void **)(v2 + 32), *(unsigned char **)(v2 + 40), v2 + 48, *(void **)(v2 + 112), (id *)(v2 + 120));
}

id sub_1C00FA170(id result, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8)
{
  if (a8)
  {
    if (a8 != 1) {
      return result;
    }
    id v9 = result;
    swift_bridgeObjectRetain();
  }
  else
  {
    a5 = result;
    a7 = a3;
  }
  id v10 = a5;
  return a7;
}

void sub_1C00FA1F0(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8)
{
  if (a8)
  {
    if (a8 != 1) {
      return;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    a5 = a1;
    a7 = a3;
  }
}

id *sub_1C00FA270(id *a1)
{
  return a1;
}

uint64_t sub_1C00FA29C()
{
  return sub_1C00F8EAC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C00FA2B8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C00FA318()
{
  return sub_1C00F9028();
}

void sub_1C00FA354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C00F90D0(a1, a2, a3, a4, *(void **)(v4 + 16), *(void **)(v4 + 24), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void **)(v4 + 56), *(void *)(v4 + 64), *(void **)(v4 + 72), *(void *)(v4 + 80), *(id **)(v4 + 88));
}

uint64_t sub_1C00FA394()
{
  return sub_1C00F95D4(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C00FA3B4()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1C00FA3F4(uint64_t a1, uint64_t a2)
{
  return sub_1C00F9844(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(void))(v2 + 24));
}

uint64_t sub_1C00FA414()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C00FA44C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C00FA474(uint64_t a1, uint64_t a2)
{
  sub_1BFEE7C5C(0, &qword_1EB8715B8, &qword_1EB8715B0, MEMORY[0x1E4FACAA0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C00FA504(uint64_t a1)
{
  sub_1BFEE7C5C(0, &qword_1EB8715B8, &qword_1EB8715B0, MEMORY[0x1E4FACAA0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C00FA58C()
{
  return swift_deallocObject();
}

id sub_1C00FA5C4()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
}

uint64_t sub_1C00FA5D8()
{
  return swift_deallocObject();
}

uint64_t sub_1C00FA610(uint64_t a1)
{
  return sub_1C009DE8C(a1, *(char **)(v1 + 16), v1 + 24);
}

uint64_t sub_1C00FA630()
{
  return sub_1C0BF94E4();
}

uint64_t sub_1C00FA64C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0BF9538(a1, a2);
}

uint64_t sub_1C00FA668()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

char *sub_1C00FA6A8@<X0>(uint64_t *a1@<X0>, char **a2@<X8>)
{
  return sub_1C0BF959C(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1C00FA6C4()
{
  unint64_t result = qword_1EB86EF88;
  if (!qword_1EB86EF88)
  {
    type metadata accessor for IssueCoverImageProcessorRequest();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86EF88);
  }
  return result;
}

uint64_t sub_1C00FA71C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C00FA754()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C00FA794()
{
  return sub_1C00F9EBC();
}

uint64_t sub_1C00FA7A0()
{
  return sub_1C015C5D4();
}

uint64_t sub_1C00FA7A8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C00FA860()
{
  return sub_1C0450E00();
}

uint64_t sub_1C00FA868@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C00FB064();
  *a1 = result;
  return result;
}

void sub_1C00FA898(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x776F6C6C61;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x65766F6D6572;
      goto LABEL_3;
    case 2:
      *a1 = 1885956979;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000012;
      a1[1] = 0x80000001C15FCB20;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C00FA928(unsigned __int8 *a1, char *a2)
{
  return sub_1C149357C(*a1, *a2);
}

uint64_t sub_1C00FA934()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C00FA994()
{
  return sub_1C151EAEC();
}

uint64_t FeedGroupEmitterRuleResult.description.getter()
{
  if (!*(unsigned char *)(v0 + 16))
  {
    uint64_t v1 = 0x202C65766F6D6552;
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v1 = 0x202C70696B53;
LABEL_5:
    uint64_t v3 = v1;
    sub_1C151E80C();
    return v3;
  }
  if (*(_OWORD *)v0 == 0) {
    return 0x776F6C6C41;
  }
  else {
    return 0x746E552070696B53;
  }
}

BOOL static FeedGroupEmitterRuleResult.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  unint64_t v3 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
LABEL_4:
    if (!*(unsigned char *)(a2 + 16)) {
      return v2 < v3;
    }
    goto LABEL_9;
  }
  if (v2 == 1)
  {
    unint64_t v2 = 2;
    goto LABEL_4;
  }
  unint64_t v2 = 3;
  if (*(_OWORD *)a1 != 0) {
    unint64_t v2 = 1;
  }
  if (*(unsigned char *)(a2 + 16))
  {
LABEL_9:
    if (v3 == 1)
    {
      unint64_t v3 = 2;
    }
    else
    {
      unint64_t v3 = 3;
      if (*(_OWORD *)a2 != 0) {
        unint64_t v3 = 1;
      }
    }
  }
  return v2 < v3;
}

BOOL sub_1C00FAB0C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  unint64_t v3 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
LABEL_4:
    if (!*(unsigned char *)(a2 + 16)) {
      return v2 < v3;
    }
    goto LABEL_9;
  }
  if (v2 == 1)
  {
    unint64_t v2 = 2;
    goto LABEL_4;
  }
  unint64_t v2 = 3;
  if (*(_OWORD *)a1 != 0) {
    unint64_t v2 = 1;
  }
  if (*(unsigned char *)(a2 + 16))
  {
LABEL_9:
    if (v3 == 1)
    {
      unint64_t v3 = 2;
    }
    else
    {
      unint64_t v3 = 3;
      if (*(_OWORD *)a2 != 0) {
        unint64_t v3 = 1;
      }
    }
  }
  return v2 < v3;
}

BOOL sub_1C00FAB74(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  unint64_t v3 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a2 + 16))
  {
LABEL_4:
    if (!*(unsigned char *)(a1 + 16)) {
      return v3 >= v2;
    }
    goto LABEL_9;
  }
  if (v3 == 1)
  {
    unint64_t v3 = 2;
    goto LABEL_4;
  }
  unint64_t v3 = 3;
  if (*(_OWORD *)a2 != 0) {
    unint64_t v3 = 1;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_9:
    if (v2 == 1)
    {
      unint64_t v2 = 2;
    }
    else
    {
      unint64_t v2 = 3;
      if (*(_OWORD *)a1 != 0) {
        unint64_t v2 = 1;
      }
    }
  }
  return v3 >= v2;
}

BOOL sub_1C00FABDC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  unint64_t v3 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
LABEL_4:
    if (!*(unsigned char *)(a2 + 16)) {
      return v2 >= v3;
    }
    goto LABEL_9;
  }
  if (v2 == 1)
  {
    unint64_t v2 = 2;
    goto LABEL_4;
  }
  unint64_t v2 = 3;
  if (*(_OWORD *)a1 != 0) {
    unint64_t v2 = 1;
  }
  if (*(unsigned char *)(a2 + 16))
  {
LABEL_9:
    if (v3 == 1)
    {
      unint64_t v3 = 2;
    }
    else
    {
      unint64_t v3 = 3;
      if (*(_OWORD *)a2 != 0) {
        unint64_t v3 = 1;
      }
    }
  }
  return v2 >= v3;
}

BOOL sub_1C00FAC44(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  unint64_t v3 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a2 + 16))
  {
LABEL_4:
    if (!*(unsigned char *)(a1 + 16)) {
      return v3 < v2;
    }
    goto LABEL_9;
  }
  if (v3 == 1)
  {
    unint64_t v3 = 2;
    goto LABEL_4;
  }
  unint64_t v3 = 3;
  if (*(_OWORD *)a2 != 0) {
    unint64_t v3 = 1;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_9:
    if (v2 == 1)
    {
      unint64_t v2 = 2;
    }
    else
    {
      unint64_t v2 = 3;
      if (*(_OWORD *)a1 != 0) {
        unint64_t v2 = 1;
      }
    }
  }
  return v3 < v2;
}

uint64_t _s8NewsFeed0B22GroupEmitterRuleResultO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a1 + 16) == 1)
    {
      unsigned __int8 v2 = 2;
      if (!*(unsigned char *)(a2 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      if (*(_OWORD *)a1 == 0) {
        unsigned __int8 v2 = 0;
      }
      else {
        unsigned __int8 v2 = 3;
      }
      if (!*(unsigned char *)(a2 + 16)) {
        goto LABEL_13;
      }
    }
  }
  else
  {
    unsigned __int8 v2 = 1;
    if (!*(unsigned char *)(a2 + 16))
    {
LABEL_13:
      char v3 = 1;
      return sub_1C149357C(v2, v3);
    }
  }
  if (*(unsigned char *)(a2 + 16) == 1)
  {
    char v3 = 2;
  }
  else if (*(_OWORD *)a2 == 0)
  {
    char v3 = 0;
  }
  else
  {
    char v3 = 3;
  }
  return sub_1C149357C(v2, v3);
}

unint64_t sub_1C00FAD20()
{
  unint64_t result = qword_1EA196BE8;
  if (!qword_1EA196BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196BE8);
  }
  return result;
}

uint64_t destroy for DebugFormatUploadEntryTarget(uint64_t a1)
{
  return sub_1BFDCA350(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed28DebugFormatUploadEntryTargetOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1BFDCA484(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugFormatUploadEntryTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1BFDCA484(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1BFDCA350(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugFormatUploadEntryTarget(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1BFDCA350(v4, v5, v6);
  return a1;
}

uint64_t sub_1C00FAE74(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C00FAE8C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupEmitterRuleResult()
{
  return &type metadata for FeedGroupEmitterRuleResult;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupEmitterRuleResult.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C00FAF80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupEmitterRuleResult.Kind()
{
  return &type metadata for FeedGroupEmitterRuleResult.Kind;
}

unint64_t sub_1C00FAFBC()
{
  unint64_t result = qword_1EA196BF0;
  if (!qword_1EA196BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196BF0);
  }
  return result;
}

unint64_t sub_1C00FB010()
{
  unint64_t result = qword_1EB865460;
  if (!qword_1EB865460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865460);
  }
  return result;
}

uint64_t sub_1C00FB064()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

NewsFeed::DebugFormatUploadTarget_optional __swiftcall DebugFormatUploadTarget.init(rawValue:)(Swift::String rawValue)
{
  unsigned __int8 v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unsigned __int8 v2 = v5;
  return result;
}

uint64_t DebugFormatUploadTarget.rawValue.getter()
{
  uint64_t v1 = 0x6D6F6F727377656ELL;
  if (*v0 != 1) {
    uint64_t v1 = 1752461154;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265536C61636F6CLL;
  }
}

uint64_t sub_1C00FB168(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C14835E4(*a1, *a2);
}

uint64_t sub_1C00FB174()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C00FB218()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C00FB2A8()
{
  return sub_1C1520E0C();
}

NewsFeed::DebugFormatUploadTarget_optional sub_1C00FB348(Swift::String *a1)
{
  return DebugFormatUploadTarget.init(rawValue:)(*a1);
}

void sub_1C00FB354(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEB00000000726576;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6D6F6F727377656ELL;
  if (v2 != 1)
  {
    uint64_t v5 = 1752461154;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7265536C61636F6CLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C00FB3B4(uint64_t a1)
{
  unint64_t v2 = sub_1C00FB6D4();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C00FB408(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C00FB6D4();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C00FB464(uint64_t a1)
{
  unint64_t v2 = sub_1C00FB6D4();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t DebugFormatUploadTarget.description.getter()
{
  unint64_t v1 = 0x6D6F6F727377654ELL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x786F62706F7244;
  }
}

unint64_t sub_1C00FB51C()
{
  unint64_t result = qword_1EA196BF8;
  if (!qword_1EA196BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196BF8);
  }
  return result;
}

uint64_t sub_1C00FB570()
{
  unint64_t v1 = 0x6D6F6F727377654ELL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x786F62706F7244;
  }
}

unsigned char *storeEnumTagSinglePayload for DebugFormatUploadTarget(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C00FB69CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadTarget()
{
  return &type metadata for DebugFormatUploadTarget;
}

unint64_t sub_1C00FB6D4()
{
  unint64_t result = qword_1EA196C00;
  if (!qword_1EA196C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196C00);
  }
  return result;
}

uint64_t DebugFormatBackendEnvironment.description.getter()
{
  uint64_t v1 = 0x676E6967617453;
  if (*v0 != 1) {
    uint64_t v1 = 0x69746375646F7250;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 16721;
  }
}

uint64_t sub_1C00FB77C@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unsigned __int8 v8 = (char *)&v19 - v7;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v19 - v10;
  if (!*v1)
  {
    sub_1C1515F7C();
    uint64_t v15 = sub_1C1515FDC();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15);
    if (result != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v11, v15);
    }
    goto LABEL_11;
  }
  if (*v1 == 1)
  {
    sub_1C1515F7C();
    uint64_t v12 = sub_1C1515FDC();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12);
    if (result != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v8, v12);
    }
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1C1515F7C();
  uint64_t v17 = sub_1C1515FDC();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v17);
  if (result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a1, v5, v17);
}

NewsFeed::DebugFormatBackendEnvironment_optional __swiftcall DebugFormatBackendEnvironment.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t DebugFormatBackendEnvironment.rawValue.getter()
{
  uint64_t v1 = 0x676E6967617473;
  if (*v0 != 1) {
    uint64_t v1 = 0x69746375646F7270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 24945;
  }
}

uint64_t sub_1C00FBAE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C147C5C4(*a1, *a2);
}

unint64_t sub_1C00FBAF4()
{
  unint64_t result = qword_1EA196C08;
  if (!qword_1EA196C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196C08);
  }
  return result;
}

uint64_t sub_1C00FBB48()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C00FBBE4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C00FBC6C()
{
  return sub_1C1520E0C();
}

NewsFeed::DebugFormatBackendEnvironment_optional sub_1C00FBD04(Swift::String *a1)
{
  return DebugFormatBackendEnvironment.init(rawValue:)(*a1);
}

void sub_1C00FBD10(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x676E6967617473;
  if (v2 != 1)
  {
    uint64_t v5 = 0x69746375646F7270;
    unint64_t v4 = 0xEA00000000006E6FLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 24945;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C00FBD68()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C00FBDC8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C00FBE18(uint64_t a1)
{
  unint64_t v2 = sub_1C00FC074();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C00FBE6C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C00FC074();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C00FBEC8(uint64_t a1)
{
  unint64_t v2 = sub_1C00FC074();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1C00FBF1C()
{
  uint64_t v1 = 0x676E6967617453;
  if (*v0 != 1) {
    uint64_t v1 = 0x69746375646F7250;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 16721;
  }
}

unsigned char *storeEnumTagSinglePayload for DebugFormatBackendEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C00FC03CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatBackendEnvironment()
{
  return &type metadata for DebugFormatBackendEnvironment;
}

unint64_t sub_1C00FC074()
{
  unint64_t result = qword_1EA1A53D0;
  if (!qword_1EA1A53D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A53D0);
  }
  return result;
}

uint64_t FormatContentTheme.themes.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentTheme.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentTheme.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

void *FormatContentTheme.__allocating_init(themes:properties:selectors:)(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = *a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

void *FormatContentTheme.init(themes:properties:selectors:)(void *a1, uint64_t a2, uint64_t a3)
{
  v3[2] = *a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t FormatContentTheme.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatContentTheme.init(from:)(a1);
  return v2;
}

void *FormatContentTheme.init(from:)(void *a1)
{
  int v3 = v1;
  uint64_t v5 = *v1;
  id v34 = v2;
  uint64_t v35 = v5;
  sub_1C00FC888(0, (unint64_t *)&unk_1EB861170, (void (*)(uint64_t))sub_1BFE89214);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned __int8 v8 = (char *)&v31 - v7;
  sub_1C00FC888(0, &qword_1EB862930, (void (*)(uint64_t))sub_1C00FC8DC);
  MEMORY[0x1F4188790](v9 - 8);
  char v11 = (char *)&v31 - v10;
  sub_1C00FCDD8(0, &qword_1EB863500, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v33 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v31 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C00FC998();
  uint64_t v16 = v34;
  sub_1C1520EBC();
  if (v16) {
    goto LABEL_12;
  }
  uint64_t v31 = v8;
  unint64_t v32 = v11;
  id v34 = v1;
  sub_1C00FCA30(0, &qword_1EB88F958, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileVersionURIReferenceCollection);
  char v36 = 1;
  sub_1C00FC9EC(&qword_1EB88F950, &qword_1EB88F958, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileVersionURIReferenceCollection);
  sub_1C152065C();
  if (v37)
  {
    if (*(void *)(v37 + 16))
    {
      int v3 = v34;
      _OWORD v34[2] = v37;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  sub_1C00FCB2C();
  uint64_t v17 = (void *)swift_allocError();
  *uint64_t v18 = 1;
  swift_willThrow();
  sub_1C00FCA30(0, (unint64_t *)&qword_1EB878E10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  char v36 = 0;
  sub_1C00FC9EC((unint64_t *)&unk_1EB878E00, (unint64_t *)&qword_1EB878E10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  sub_1C15206EC();

  int v3 = v34;
  _OWORD v34[2] = v37;
LABEL_7:
  sub_1C00FC8DC();
  uint64_t v20 = v19;
  LOBYTE(v37) = 2;
  sub_1BFEBC1E4(&qword_1EB85F2C8, 255, (void (*)(uint64_t))sub_1C00FC8DC);
  uint64_t v21 = (uint64_t)v32;
  sub_1C152065C();
  uint64_t v35 = 0;
  uint64_t v22 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v20) == 1)
  {
    sub_1C00FCAD0(v21, &qword_1EB862930, (void (*)(uint64_t))sub_1C00FC8DC);
    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v23 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v20);
  }
  v3[3] = v23;
  sub_1BFE89214();
  uint64_t v25 = v24;
  LOBYTE(v37) = 3;
  sub_1BFEBC1E4(&qword_1EB87C6E0, 255, (void (*)(uint64_t))sub_1BFE89214);
  uint64_t v26 = (uint64_t)v31;
  uint64_t v27 = v35;
  sub_1C152065C();
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v3;
  }
  uint64_t v29 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v26, 1, v25) == 1)
  {
    sub_1C00FCAD0(v26, (unint64_t *)&unk_1EB861170, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v30 = MEMORY[0x1E4FBC870];
  }
  else
  {
    uint64_t v30 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v25);
  }
  int v3 = v34;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v13);
  v3[4] = v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void sub_1C00FC888(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C00FC8DC()
{
  if (!qword_1EB85F2D0)
  {
    sub_1C0081A44();
    sub_1C00FC944();
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85F2D0);
    }
  }
}

unint64_t sub_1C00FC944()
{
  unint64_t result = qword_1EB874BE0;
  if (!qword_1EB874BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874BE0);
  }
  return result;
}

unint64_t sub_1C00FC998()
{
  unint64_t result = qword_1EB862E30;
  if (!qword_1EB862E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E30);
  }
  return result;
}

uint64_t sub_1C00FC9EC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C00FCA30(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C00FCA30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for FormatPackage();
    uint64_t v7 = sub_1BFEBC1E4((unint64_t *)&unk_1EB887270, 255, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C00FCAD0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C00FC888(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C00FCB2C()
{
  unint64_t result = qword_1EB882DE0;
  if (!qword_1EB882DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB882DE0);
  }
  return result;
}

uint64_t FormatContentTheme.encode(to:)(void *a1)
{
  int v3 = v1;
  sub_1C00FCDD8(0, &qword_1EA196C10, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C00FC998();
  sub_1C1520F0C();
  uint64_t v12 = v3[2];
  HIBYTE(v11) = 0;
  sub_1C00FCA30(0, (unint64_t *)&qword_1EB878E10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  sub_1C00FC9EC(&qword_1EB85D980, (unint64_t *)&qword_1EB878E10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  sub_1C152080C();
  if (!v2)
  {
    if (*(void *)(v3[3] + 16))
    {
      uint64_t v12 = v3[3];
      HIBYTE(v11) = 2;
      sub_1C00FCE3C();
      sub_1C00FCE94();
      sub_1C152080C();
    }
    if (*(void *)(v3[4] + 16))
    {
      uint64_t v12 = v3[4];
      HIBYTE(v11) = 3;
      sub_1BFEBC4B4();
      sub_1C00FCF04();
      sub_1C152080C();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1C00FCDD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C00FC998();
    unint64_t v7 = a3(a1, &type metadata for FormatContentTheme.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C00FCE3C()
{
  if (!qword_1EB879DC0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879DC0);
    }
  }
}

unint64_t sub_1C00FCE94()
{
  unint64_t result = qword_1EB85DEE0;
  if (!qword_1EB85DEE0)
  {
    sub_1C00FCE3C();
    sub_1C00FC944();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DEE0);
  }
  return result;
}

unint64_t sub_1C00FCF04()
{
  unint64_t result = qword_1EB85C4F0;
  if (!qword_1EB85C4F0)
  {
    sub_1BFEBC4B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C4F0);
  }
  return result;
}

uint64_t sub_1C00FCF6C(unsigned __int8 *a1, char *a2)
{
  return sub_1C148C150(*a1, *a2);
}

uint64_t sub_1C00FCF78()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C00FD058()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C00FD120()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C00FD1FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C00FD830();
  *a1 = result;
  return result;
}

void sub_1C00FD22C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x73656D656874;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x3273656D656874;
      goto LABEL_3;
    case 2:
      *a1 = 0x69747265706F7270;
      a1[1] = 0xEA00000000007365;
      break;
    case 3:
      *a1 = 0x726F7463656C6573;
      a1[1] = 0xE900000000000073;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C00FD2CC()
{
  uint64_t result = 0x73656D656874;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x3273656D656874;
      break;
    case 2:
      uint64_t result = 0x69747265706F7270;
      break;
    case 3:
      uint64_t result = 0x726F7463656C6573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C00FD360@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C00FD830();
  *a1 = result;
  return result;
}

uint64_t sub_1C00FD388(uint64_t a1)
{
  unint64_t v2 = sub_1C00FC998();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C00FD3C4(uint64_t a1)
{
  unint64_t v2 = sub_1C00FC998();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentTheme.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatContentTheme.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C00FD478(void *a1, uint64_t a2)
{
  a1[1] = sub_1BFEBC1E4(&qword_1EA196C18, a2, (void (*)(uint64_t))type metadata accessor for FormatContentTheme);
  a1[2] = sub_1BFEBC1E4(&qword_1EA196C20, v3, (void (*)(uint64_t))type metadata accessor for FormatContentTheme);
  uint64_t result = sub_1BFEBC1E4(&qword_1EA196C28, v4, (void (*)(uint64_t))type metadata accessor for FormatContentTheme);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatContentTheme()
{
  return self;
}

void *sub_1C00FD548@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatContentTheme.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C00FD5A0(void *a1)
{
  return FormatContentTheme.encode(to:)(a1);
}

uint64_t sub_1C00FD5C4(void **a1, void **a2)
{
  return _s8NewsFeed18FormatContentThemeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t method lookup function for FormatContentTheme(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatContentTheme);
}

uint64_t dispatch thunk of FormatContentTheme.__allocating_init(themes:properties:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FormatContentTheme.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for FormatContentTheme.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C00FD6F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentTheme.CodingKeys()
{
  return &type metadata for FormatContentTheme.CodingKeys;
}

unint64_t sub_1C00FD72C()
{
  unint64_t result = qword_1EA196C30;
  if (!qword_1EA196C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196C30);
  }
  return result;
}

unint64_t sub_1C00FD784()
{
  unint64_t result = qword_1EB8612B8;
  if (!qword_1EB8612B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8612B8);
  }
  return result;
}

unint64_t sub_1C00FD7DC()
{
  unint64_t result = qword_1EB862E38;
  if (!qword_1EB862E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E38);
  }
  return result;
}

uint64_t sub_1C00FD830()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

id SportsEmbedConfigurationKind.leagueTag.getter(unint64_t a1)
{
  switch(a1 >> 61)
  {
    case 1uLL:
      sub_1C00FD9D4();
      swift_retain();
      sub_1C151939C();
      id v2 = *(id *)(v4 + 56);
      swift_unknownObjectRetain();
      swift_release();
      swift_release();
      return v2;
    case 2uLL:
    case 3uLL:
    case 4uLL:
      id v1 = objc_msgSend(*(id *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x30), sel_eventLeagueTag);
      goto LABEL_5;
    case 5uLL:
      id v2 = *(id *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x38);
      goto LABEL_8;
    case 6uLL:
      id v2 = *(id *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
LABEL_8:
      swift_unknownObjectRetain();
      break;
    default:
      id v1 = objc_msgSend(*(id *)(a1 + 48), sel_eventLeagueTag);
LABEL_5:
      id v2 = v1;
      break;
  }
  return v2;
}

void sub_1C00FD9D4()
{
  if (!qword_1EB885090)
  {
    sub_1C00FDA38();
    sub_1C00FDA90();
    unint64_t v0 = sub_1C15193BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB885090);
    }
  }
}

void sub_1C00FDA38()
{
  if (!qword_1EB8900B0)
  {
    type metadata accessor for SportsBracketDataVisualization();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8900B0);
    }
  }
}

unint64_t sub_1C00FDA90()
{
  unint64_t result = qword_1EB8900C0;
  if (!qword_1EB8900C0)
  {
    sub_1C00FDA38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8900C0);
  }
  return result;
}

uint64_t SportsEmbedConfigurationKind.championshipTag.getter(unint64_t a1)
{
  if (a1 >> 61 != 1) {
    return 0;
  }
  sub_1C00FD9D4();
  swift_retain();
  sub_1C151939C();
  uint64_t v1 = *(void *)(v3 + 64);
  swift_unknownObjectRetain();
  swift_release();
  swift_release();
  return v1;
}

unint64_t SportsEmbedConfigurationKind.responseEmbedType.getter@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = 0x20605070304uLL >> ((result >> 58) & 0x38);
  return result;
}

uint64_t SportsEmbedConfigurationKind.umcCanonicalId.getter(unint64_t a1)
{
  switch(a1 >> 61)
  {
    case 1uLL:
      swift_retain();
      uint64_t v1 = SportsBracketGroupDataVisualization.umcCanonicalId.getter();
      swift_release();
      return v1;
    case 2uLL:
    case 3uLL:
    case 4uLL:
      uint64_t v1 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      goto LABEL_5;
    case 5uLL:
    case 6uLL:
      uint64_t v1 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      goto LABEL_5;
    default:
      uint64_t v1 = *(void *)(a1 + 32);
LABEL_5:
      swift_bridgeObjectRetain();
      return v1;
  }
}

uint64_t SportsEmbedConfigurationKind.description.getter(unint64_t a1)
{
  unint64_t v1 = a1 >> 61;
  uint64_t result = 0x726F635320786F42;
  switch(v1)
  {
    case 1uLL:
      uint64_t result = 0x74656B63617242;
      break;
    case 2uLL:
      uint64_t result = 0x79616C502079654BLL;
      break;
    case 3uLL:
      uint64_t result = 0x6F635320656E694CLL;
      break;
    case 4uLL:
      uint64_t result = 0x52207972756A6E49;
      break;
    case 5uLL:
      uint64_t result = 0x676E69646E617453;
      break;
    case 6uLL:
      uint64_t result = 0x65726F6353;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C00FDD54()
{
  uint64_t result = 0x726F635320786F42;
  switch(*v0 >> 61)
  {
    case 1:
      uint64_t result = 0x74656B63617242;
      break;
    case 2:
      uint64_t result = 0x79616C502079654BLL;
      break;
    case 3:
      uint64_t result = 0x6F635320656E694CLL;
      break;
    case 4:
      uint64_t result = 0x52207972756A6E49;
      break;
    case 5:
      uint64_t result = 0x676E69646E617453;
      break;
    case 6:
      uint64_t result = 0x65726F6353;
      break;
    default:
      return result;
  }
  return result;
}

void *assignWithCopy for FormatColorNotExpression(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for FormatColorNotExpression(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1C00FDED0(void *a1)
{
  return *a1 >> 61;
}

void *sub_1C00FDEDC(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigurationKind()
{
  return &type metadata for SportsEmbedConfigurationKind;
}

uint64_t static FormatCodingFalseStrategy.defaultValue.getter()
{
  return 0;
}

uint64_t static FormatCodingFalseStrategy.shouldEncode(wrappedValue:)(char a1)
{
  return a1 & 1;
}

uint64_t static FormatCodingTrueStrategy.defaultValue.getter()
{
  return 1;
}

BOOL static FormatCodingTrueStrategy.shouldEncode(wrappedValue:)(char a1)
{
  return (a1 & 1) == 0;
}

ValueMetadata *type metadata accessor for FormatCodingFalseStrategy()
{
  return &type metadata for FormatCodingFalseStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingTrueStrategy()
{
  return &type metadata for FormatCodingTrueStrategy;
}

uint64_t FormatSnippet.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSnippet.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatSnippet.name.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C00FE080(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.name.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.description.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C00FE1D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.description.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.description.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00FE314(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.children.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.children.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00FE448(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 72) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.options.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.options.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00FE57C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.types.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00FE6B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 88) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.types.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.types.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.__allocating_init(identifier:name:description:children:options:selectors:types:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = swift_allocObject();
  FormatSnippet.init(identifier:name:description:children:options:selectors:types:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

uint64_t FormatSnippet.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSnippet.__deallocating_deinit()
{
  FormatSnippet.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C00FE8D8(uint64_t a1)
{
  uint64_t result = sub_1C00FEA3C(&qword_1EB891140);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C00FE91C()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C00FE96C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00FE9B0(void *a1)
{
  a1[1] = sub_1C00FEA3C(&qword_1EB87D6A8);
  a1[2] = sub_1C00FEA3C(&qword_1EB87D6A0);
  uint64_t result = sub_1C00FEA3C(&qword_1EB891138);
  a1[3] = result;
  return result;
}

uint64_t sub_1C00FEA3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatSnippet();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C00FEA7C(void **a1, void **a2)
{
  return _s8NewsFeed13FormatSnippetC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C00FEA88@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00FEAD8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 56);
  *a2 = *(void *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00FEB28@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00FEB78@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00FEBC8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C00FEC18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSnippet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSnippet);
}

uint64_t dispatch thunk of FormatSnippet.__allocating_init(identifier:name:description:children:options:selectors:types:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

unint64_t sub_1C00FEC9C()
{
  sub_1BFCAE1DC(v0, (uint64_t)&v3);
  unint64_t result = 0xD000000000000023;
  switch(v6)
  {
    case 1:
    case 10:
    case 11:
      sub_1C00FEFD8((uint64_t)&v3);
      unint64_t result = 0xD000000000000021;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    case 5:
      unint64_t result = 0xD000000000000022;
      break;
    case 6:
    case 7:
      sub_1C00FEFD8((uint64_t)&v3);
      unint64_t result = 0xD000000000000026;
      break;
    case 8:
    case 9:
      sub_1C00FEFD8((uint64_t)&v3);
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 12:
      sub_1C00FEFD8((uint64_t)&v3);
      unint64_t result = 0xD000000000000020;
      break;
    case 13:
      int8x16_t v2 = vorrq_s8(v4, v5);
      if (*(void *)&vorr_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL)) | v3) {
        unint64_t result = 0x6C706D4920746F4ELL;
      }
      else {
        unint64_t result = 0xD000000000000019;
      }
      break;
    default:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
      unint64_t result = 0xD00000000000001BLL;
      break;
  }
  return result;
}

unint64_t sub_1C00FEF2C()
{
  unint64_t result = qword_1EB86BD70;
  if (!qword_1EB86BD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BD70);
  }
  return result;
}

unint64_t sub_1C00FEF80()
{
  unint64_t result = qword_1EA19C6D0;
  if (!qword_1EA19C6D0)
  {
    type metadata accessor for UIUserInterfaceIdiom(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C6D0);
  }
  return result;
}

uint64_t sub_1C00FEFD8(uint64_t a1)
{
  return a1;
}

uint64_t assignWithCopy for GroupLayoutFactoryError(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 0xD) {
      unsigned int v4 = *(_DWORD *)a1 + 13;
    }
    switch(v4)
    {
      case 0u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 1u:

        break;
      case 6u:
      case 7u:
        swift_bridgeObjectRelease();
        goto LABEL_6;
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
LABEL_6:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 0xD) {
      unsigned int v5 = *(_DWORD *)a2 + 13;
    }
    switch(v5)
    {
      case 0u:
        uint64_t v6 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 0;
        return a1;
      case 1u:
        uint64_t v9 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 40) = 1;
        id v10 = v9;
        return a1;
      case 2u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 40) = 2;
        return a1;
      case 3u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 40) = 3;
        return a1;
      case 4u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 40) = 4;
        return a1;
      case 5u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 40) = 5;
        return a1;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        char v11 = 6;
        goto LABEL_21;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        char v11 = 7;
LABEL_21:
        *(unsigned char *)(a1 + 40) = v11;
        swift_bridgeObjectRetain();
        goto LABEL_28;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v12 = 8;
        goto LABEL_27;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v12 = 9;
        goto LABEL_27;
      case 0xAu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v12 = 10;
        goto LABEL_27;
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v12 = 11;
        goto LABEL_27;
      case 0xCu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v12 = 12;
LABEL_27:
        *(unsigned char *)(a1 + 40) = v12;
LABEL_28:
        swift_bridgeObjectRetain();
        break;
      default:
        long long v7 = *a2;
        long long v8 = a2[1];
        *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for GroupLayoutFactoryError(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 0xD) {
      unsigned int v4 = *(_DWORD *)a1 + 13;
    }
    switch(v4)
    {
      case 0u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 1u:

        break;
      case 6u:
      case 7u:
        swift_bridgeObjectRelease();
        goto LABEL_6;
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
LABEL_6:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 0xD) {
      unsigned int v5 = *(_DWORD *)a2 + 13;
    }
    switch(v5)
    {
      case 0u:
        long long v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = 0;
        return a1;
      case 1u:
        *(void *)a1 = *(void *)a2;
        char v8 = 1;
        goto LABEL_26;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 2;
        goto LABEL_26;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 3;
        goto LABEL_26;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 4;
        goto LABEL_26;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 5;
        goto LABEL_26;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v8 = 6;
        goto LABEL_26;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v8 = 7;
        goto LABEL_26;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 8;
        goto LABEL_26;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 9;
        goto LABEL_26;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 10;
        goto LABEL_26;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 11;
        goto LABEL_26;
      case 0xCu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 12;
LABEL_26:
        *(unsigned char *)(a1 + 40) = v8;
        break;
      default:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLayoutFactoryError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF3 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 243);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 0xE) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GroupLayoutFactoryError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF2)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 243;
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C00FF610(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 0xD) {
    return (*(_DWORD *)a1 + 13);
  }
  return result;
}

uint64_t sub_1C00FF62C(uint64_t result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 13;
    LOBYTE(a2) = 13;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutFactoryError()
{
  return &type metadata for GroupLayoutFactoryError;
}

unint64_t sub_1C00FF664(uint64_t a1)
{
  unint64_t result = sub_1C0020AF0();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C00FF68C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void sub_1C00FF6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1C00FF6EC()
{
  return sub_1C151809C() & 1;
}

void sub_1C00FF71C(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(a1, v3, v4);
  if (v5)
  {
    id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                               + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), sel_JSONString));
    sub_1C151E62C();
  }
  id v7 = objc_msgSend(self, sel_generalPasteboard);
  id v8 = (id)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setString_, v8);
  swift_release();
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding()
{
  return &type metadata for FormatHeadlineBinding;
}

uint64_t sub_1C00FF850(void *a1, void *a2)
{
  long long v97 = a1;
  sub_1BFF5D620(0, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBB718]);
  uint64_t v98 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v90 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v7 = (uint64_t *)((char *)&v89 - v6);
  sub_1BFF5D620(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C610;
  v103[2] = a2;
  uint64_t v9 = sub_1C0182048((void (*)(char *))sub_1C0100530, (uint64_t)v103, (uint64_t)&unk_1F1B655C0);
  sub_1C09BCFA4(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v9, v105);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v10 = swift_allocObject();
  *(void *)(inited + 32) = v10;
  *(void *)(v10 + 48) = v106;
  long long v11 = v105[1];
  *(_OWORD *)(v10 + 16) = v105[0];
  *(_OWORD *)(v10 + 32) = v11;
  v102[2] = a2;
  uint64_t v12 = sub_1C0182048((void (*)(char *))sub_1C0100598, (uint64_t)v102, (uint64_t)&unk_1F1B655F8);
  sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v12, v107);
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v13 = swift_allocObject();
  *(void *)(inited + 72) = v13;
  *(void *)(v13 + 48) = v108;
  long long v14 = v107[1];
  *(_OWORD *)(v13 + 16) = v107[0];
  *(_OWORD *)(v13 + 32) = v14;
  uint64_t v15 = v97;
  v101[2] = a2;
  v101[3] = v97;
  unint64_t v16 = sub_1C0282C6C((void (*)(void))sub_1C01005B8, (uint64_t)v101, (uint64_t)&unk_1F1B65620);
  sub_1C09BCFA4(0x646E616D6D6F43, 0xE700000000000000, 0, 0, v16, v109);
  swift_bridgeObjectRelease();
  *(void *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 144) = &off_1F1BDEC90;
  uint64_t v17 = swift_allocObject();
  *(void *)(inited + 112) = v17;
  *(void *)(v17 + 48) = v110;
  long long v18 = v109[1];
  *(_OWORD *)(v17 + 16) = v109[0];
  *(_OWORD *)(v17 + 32) = v18;
  v100[2] = a2;
  v100[3] = v15;
  uint64_t v19 = sub_1C0182048((void (*)(char *))sub_1C01005D4, (uint64_t)v100, (uint64_t)&unk_1F1B656B8);
  sub_1C09BCFA4(1953394502, 0xE400000000000000, 0, 0, v19, v111);
  swift_bridgeObjectRelease();
  *(void *)(inited + 176) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 184) = &off_1F1BDEC90;
  uint64_t v20 = swift_allocObject();
  *(void *)(inited + 152) = v20;
  *(void *)(v20 + 48) = v112;
  long long v21 = v111[1];
  *(_OWORD *)(v20 + 16) = v111[0];
  *(_OWORD *)(v20 + 32) = v21;
  long long v96 = a2;
  v99[2] = a2;
  uint64_t v22 = sub_1C0182060((void (*)(char *))sub_1C01005F4, (uint64_t)v99, (uint64_t)&unk_1F1B656E0);
  sub_1C09BCFA4(0x74616F6C46, 0xE500000000000000, 0, 0, v22, v113);
  swift_bridgeObjectRelease();
  *(void *)(inited + 216) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 224) = &off_1F1BDEC90;
  uint64_t v23 = swift_allocObject();
  *(void *)(inited + 192) = v23;
  *(void *)(v23 + 48) = v114;
  long long v24 = v113[1];
  *(_OWORD *)(v23 + 16) = v113[0];
  *(_OWORD *)(v23 + 32) = v24;
  uint64_t v25 = MEMORY[0x1E4FBC860];
  *(void *)&long long v123 = MEMORY[0x1E4FBC860];
  uint64_t v26 = qword_1F1B65668;
  uint64_t v91 = inited + 32;
  if (qword_1F1B65668)
  {
    uint64_t v27 = &byte_1F1B65678;
    uint64_t v28 = (uint64_t)v96;
    do
    {
      char v29 = *v27++;
      LOBYTE(v119[0]) = v29;
      sub_1C11AD23C(v119, v28, (uint64_t *)v121);
      sub_1C1047634(*(uint64_t *)&v121[0]);
      --v26;
    }
    while (v26);
    uint64_t v25 = v123;
  }
  else
  {
    uint64_t v28 = (uint64_t)v96;
  }
  uint64_t v30 = sub_1C0233D40(v25);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(1954047316, 0xE400000000000000, 0, 0, v30, v115);
  swift_bridgeObjectRelease();
  *(void *)(inited + 256) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 264) = &off_1F1BDEC90;
  uint64_t v31 = swift_allocObject();
  *(void *)(inited + 232) = v31;
  *(void *)(v31 + 48) = v116;
  long long v32 = v115[1];
  *(_OWORD *)(v31 + 16) = v115[0];
  *(_OWORD *)(v31 + 32) = v32;
  MEMORY[0x1F4188790](v31);
  *(&v89 - 2) = (void *)v28;
  uint64_t v33 = sub_1C0182048((void (*)(char *))sub_1C0100614, (uint64_t)(&v89 - 4), (uint64_t)&unk_1F1B65690);
  sub_1C09BCFA4(5001813, 0xE300000000000000, 0, 0, v33, v117);
  swift_bridgeObjectRelease();
  *(void *)(inited + 296) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 304) = &off_1F1BDEC90;
  uint64_t v34 = swift_allocObject();
  *(void *)(inited + 272) = v34;
  *(void *)(v34 + 48) = v118;
  long long v35 = v117[1];
  *(_OWORD *)(v34 + 16) = v117[0];
  *(_OWORD *)(v34 + 32) = v35;
  sub_1C009BDC0(v28, (uint64_t)v119);
  *(void *)(inited + 336) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 344) = &off_1F1BDEC90;
  uint64_t v36 = swift_allocObject();
  long long v92 = (void *)inited;
  *(void *)(inited + 312) = v36;
  *(void *)(v36 + 48) = v120;
  long long v37 = v119[1];
  *(_OWORD *)(v36 + 16) = v119[0];
  *(_OWORD *)(v36 + 32) = v37;
  uint64_t v95 = type metadata accessor for FeedHeadline(0);
  *((void *)&v124 + 1) = v95;
  uint64_t v125 = sub_1BFEDDCD8((unint64_t *)&unk_1EB873778, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v123);
  sub_1BFF96680(v28, (uint64_t)boxed_opaque_existential_0);
  sub_1BFF7E884(&v123, (uint64_t *)v121);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
  uint64_t v39 = *(void *)&v121[0];
  *(void *)&v121[0] = MEMORY[0x1E4FBC860];
  sub_1C05F62D0(0, 0, 0);
  uint64_t v40 = *(void *)&v121[0];
  if (v39)
  {
    long long v97 = v7 + 2;
    while (1)
    {
      *(void *)&long long v123 = 91;
      *((void *)&v123 + 1) = 0xE100000000000000;
      uint64_t v104 = (void *)(v39 & -v39);
      uint64_t v104 = sub_1BFFBE5C8();
      sub_1BFED9C20();
      sub_1BFEDDCD8((unint64_t *)&qword_1EB879F30, (void (*)(uint64_t))sub_1BFED9C20);
      sub_1C151E55C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      unint64_t v41 = sub_1C029748C(1uLL, v123, *((unint64_t *)&v123 + 1));
      unint64_t v43 = v42;
      swift_bridgeObjectRelease();
      if (__OFSUB__(sub_1C151FDBC(), 1)) {
        break;
      }
      uint64_t v44 = sub_1C151FDAC();
      if (v45) {
        unint64_t v46 = v43;
      }
      else {
        unint64_t v46 = v44;
      }
      if (v46 >> 14 < v41 >> 14) {
        goto LABEL_25;
      }
      uint64_t v47 = sub_1C151FDEC();
      uint64_t v49 = v48;
      uint64_t v51 = v50;
      uint64_t v53 = v52;
      swift_bridgeObjectRelease();
      uint64_t v54 = MEMORY[0x1C18C6220](v47, v49, v51, v53);
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();
      uint64_t v57 = type metadata accessor for FormatInspectionItem(0);
      id v58 = (uint64_t *)((char *)v7 + *(int *)(v57 + 24));
      *id v58 = 0;
      v58[1] = 0xE000000000000000;
      uint64_t v59 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 0, 1, v59);
      *id v7 = v54;
      v7[1] = v56;
      uint64_t v60 = v97;
      *long long v97 = 0;
      v60[1] = 0;
      id v61 = (char *)v7 + *(int *)(v57 + 28);
      *(void *)id v61 = 0;
      *((void *)v61 + 1) = 0;
      v61[16] = -1;
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v7, 0, 1, v57);
      *(void *)&v121[0] = v40;
      unint64_t v63 = *(void *)(v40 + 16);
      unint64_t v62 = *(void *)(v40 + 24);
      if (v63 >= v62 >> 1)
      {
        sub_1C05F62D0(v62 > 1, v63 + 1, 1);
        uint64_t v40 = *(void *)&v121[0];
      }
      v39 ^= v39 & -v39;
      *(void *)(v40 + 16) = v63 + 1;
      sub_1C0100634((uint64_t)v7, v40+ ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))+ *(void *)(v98 + 72) * v63);
      if (!v39) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_1C09BCFA4(0x737469617254, 0xE600000000000000, 0, 0, v40, v121);
    swift_release();
    id v64 = v92;
    v92[47] = &type metadata for FormatInspectionGroup;
    v64[48] = &off_1F1BDEC90;
    uint64_t v65 = swift_allocObject();
    v64[44] = v65;
    *(void *)(v65 + 48) = v122;
    long long v66 = v121[1];
    *(_OWORD *)(v65 + 16) = v121[0];
    *(_OWORD *)(v65 + 32) = v66;
    uint64_t v67 = FeedHeadline.State.selectors.getter();
    int64_t v68 = v67[2];
    if (v68)
    {
      *(void *)&long long v123 = MEMORY[0x1E4FBC860];
      sub_1C05F62D0(0, v68, 0);
      uint64_t v69 = v123;
      uint64_t v70 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v71 = type metadata accessor for FormatInspectionItem.Value(0);
      uint64_t v72 = *(void *)(v71 - 8);
      id v73 = v90;
      long long v96 = v90 + 16;
      long long v97 = (void *)v71;
      uint64_t v95 = v70 - 8;
      id v74 = *(void (**)(void *, void, uint64_t, void *))(v72 + 56);
      uint64_t v93 = v72 + 56;
      uint64_t v94 = v74;
      uint64_t v89 = v67;
      uint64_t v75 = v67 + 5;
      do
      {
        uint64_t v76 = *(v75 - 1);
        uint64_t v77 = *v75;
        id v78 = (void *)((char *)v73 + *(int *)(v70 + 24));
        *id v78 = 0;
        v78[1] = 0xE000000000000000;
        uint64_t v79 = v97;
        swift_storeEnumTagMultiPayload();
        v94(v78, 0, 1, v79);
        *id v73 = v76;
        v73[1] = v77;
        id v80 = v96;
        *long long v96 = 0;
        v80[1] = 0;
        id v81 = (char *)v73 + *(int *)(v70 + 28);
        *(void *)id v81 = 0;
        *((void *)v81 + 1) = 0;
        v81[16] = -1;
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v73, 0, 1, v70);
        *(void *)&long long v123 = v69;
        uint64_t v82 = (uint64_t)v73;
        unint64_t v83 = *(void *)(v69 + 16);
        unint64_t v84 = *(void *)(v69 + 24);
        swift_bridgeObjectRetain();
        if (v83 >= v84 >> 1)
        {
          sub_1C05F62D0(v84 > 1, v83 + 1, 1);
          uint64_t v69 = v123;
        }
        v75 += 2;
        *(void *)(v69 + 16) = v83 + 1;
        sub_1C0100634(v82, v69+ ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))+ *(void *)(v98 + 72) * v83);
        --v68;
        id v73 = (void *)v82;
      }
      while (v68);
      swift_bridgeObjectRelease();
      id v64 = v92;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v69 = MEMORY[0x1E4FBC860];
    }
    sub_1C09BCFA4(0x6553206574617453, 0xEF73726F7463656CLL, 0, 0, v69, &v123);
    swift_bridgeObjectRelease();
    v64[52] = &type metadata for FormatInspectionGroup;
    v64[53] = &off_1F1BDEC90;
    uint64_t v85 = swift_allocObject();
    v64[49] = v85;
    *(void *)(v85 + 48) = v125;
    long long v86 = v124;
    *(_OWORD *)(v85 + 16) = v123;
    *(_OWORD *)(v85 + 32) = v86;
    uint64_t v87 = sub_1C131B79C((uint64_t)v64);
    swift_setDeallocating();
    sub_1C01004A4(0);
    swift_arrayDestroy();
    return (uint64_t)v87;
  }
  return result;
}

void sub_1C01004A4(uint64_t a1)
{
}

unint64_t sub_1C01004D8()
{
  unint64_t result = qword_1EA1974E0;
  if (!qword_1EA1974E0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1974E0);
  }
  return result;
}

uint64_t sub_1C0100530@<X0>(unsigned char *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1C1444220(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C0100550()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0100598@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C03EB26C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C01005B8@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0F8C508(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C01005D4@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1393428(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C01005F4@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0FD0AF4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C0100614@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0DED258(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C0100634(uint64_t a1, uint64_t a2)
{
  sub_1BFF5D620(0, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0100708(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C14854D8(*a1, *a2);
}

unint64_t sub_1C0100718()
{
  unint64_t result = qword_1EA196C38;
  if (!qword_1EA196C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196C38);
  }
  return result;
}

uint64_t sub_1C010076C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C01007D4()
{
  FormatBlendMode.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0100838()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C010089C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatBlendMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1C01008C4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C01008F4();
  unint64_t result = sub_1BFC618C4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C01008F4()
{
  unint64_t result = qword_1EA196C40;
  if (!qword_1EA196C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196C40);
  }
  return result;
}

unint64_t sub_1C0100948(uint64_t a1)
{
  unint64_t result = sub_1C0100970();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0100970()
{
  unint64_t result = qword_1EA196C48;
  if (!qword_1EA196C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA196C48);
  }
  return result;
}

unint64_t sub_1C01009C4(void *a1)
{
  a1[1] = sub_1BFCEA074();
  a1[2] = sub_1BFD0CBD0();
  unint64_t result = sub_1C0100718();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatBlendMode()
{
  return &type metadata for FormatBlendMode;
}

uint64_t sub_1C0100A34()
{
  return *v0;
}

uint64_t sub_1C0100A3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 56;
    unint64_t v5 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v24 = v3;
      uint64_t v6 = *(void *)(v4 + 40);
      uint64_t v25 = *(void *)(v4 + 32);
      sub_1BFEE0A78();
      sub_1BFEE0A78();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C10468B0(v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BFEE0654(v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = sub_1C1046A68(v25);
      uint64_t v27 = v2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0033494();
      uint64_t v8 = *(void *)(v26 + 16);
      int64_t v9 = *(void *)(v5 + 16);
      int64_t v10 = v9 + v8;
      if (__OFADD__(v9, v8)) {
        break;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
      {
        if (v9 <= v10) {
          int64_t v12 = v9 + v8;
        }
        else {
          int64_t v12 = v9;
        }
        unint64_t v5 = sub_1BFEC42E4(isUniquelyReferenced_nonNull_native, v12, 1, v5);
      }
      if (*(void *)(v26 + 16))
      {
        uint64_t v13 = *(void *)(v5 + 16);
        uint64_t v14 = (*(void *)(v5 + 24) >> 1) - v13;
        uint64_t v15 = *(void *)(type metadata accessor for FormatWebEmbed.Resolved() - 8);
        uint64_t v16 = *(void *)(v15 + 72);
        if (v14 < v8) {
          goto LABEL_24;
        }
        unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
        unint64_t v18 = v5 + v17 + v16 * v13;
        uint64_t v19 = v16 * v8;
        if (v26 + v17 < v18 + v19 && v18 < v26 + v17 + v19) {
          goto LABEL_26;
        }
        swift_arrayInitWithCopy();
        if (v8)
        {
          uint64_t v20 = *(void *)(v5 + 16);
          BOOL v21 = __OFADD__(v20, v8);
          uint64_t v22 = v20 + v8;
          if (v21) {
            goto LABEL_25;
          }
          *(void *)(v5 + 16) = v22;
        }
      }
      else if (v8)
      {
        goto LABEL_23;
      }
      v4 += 80;
      swift_bridgeObjectRelease();
      --v3;
      uint64_t v2 = v27;
      if (v24 == 1)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t result = sub_1C152052C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C0100E2C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_1BFF661B8(v7 > 1, v8 + 1, 1);
      }
      v4 += 4;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0100F04(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_1BFF661B8(v7 > 1, v8 + 1, 1);
      }
      v4 += 2;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0100FDC(uint64_t a1)
{
  sub_1BFEBC130();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    v15[1] = v1;
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1BFEDBBD4(0, v7, 0);
    uint64_t v8 = v16;
    uint64_t v9 = type metadata accessor for FormatContentSubgroup();
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v9 - 8) + 72);
    do
    {
      sub_1BFE338B4(v10 + *(int *)(v9 + 20), (uint64_t)v6, (uint64_t (*)(void))sub_1BFEBC130);
      uint64_t v16 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BFEDBBD4(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v16;
      }
      *(void *)(v8 + 16) = v13 + 1;
      sub_1C01054A0((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, (uint64_t (*)(void))sub_1BFEBC130);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1C01011D4(uint64_t a1)
{
  sub_1C0153B44(0, (unint64_t *)&unk_1EB894410, (void (*)(uint64_t))type metadata accessor for FormatService.ThemePackage);
  uint64_t v52 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v51 = (uint64_t)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v50 = (void *)((char *)v41 - v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v49 = (char *)v41 - v8;
  uint64_t v9 = type metadata accessor for FormatService.ThemePackage(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (!v13) {
    return v14;
  }
  v41[1] = v1;
  uint64_t v56 = MEMORY[0x1E4FBC860];
  sub_1C05F6550(0, v13, 0);
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v17 = result;
  uint64_t v18 = 0;
  uint64_t v19 = a1 + 64;
  uint64_t v42 = a1 + 80;
  int64_t v43 = v13;
  uint64_t v47 = v10;
  uint64_t v48 = a1;
  uint64_t v45 = a1 + 64;
  unint64_t v46 = v12;
  uint64_t v44 = v16;
  while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v22 = (unint64_t)v17 >> 6;
    if ((*(void *)(v19 + 8 * ((unint64_t)v17 >> 6)) & (1 << v17)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v16) {
      goto LABEL_26;
    }
    uint64_t v53 = v18;
    uint64_t v54 = 1 << v17;
    uint64_t v23 = v52;
    uint64_t v24 = v49;
    uint64_t v25 = (uint64_t)&v49[*(int *)(v52 + 48)];
    uint64_t v26 = *(void *)(a1 + 56);
    uint64_t v27 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v17);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    uint64_t v55 = *(void *)(v10 + 72);
    sub_1BFE338B4(v26 + v55 * v17, v25, type metadata accessor for FormatService.ThemePackage);
    *uint64_t v24 = v28;
    v24[1] = v29;
    uint64_t v30 = (uint64_t)v50;
    *uint64_t v50 = v28;
    *(void *)(v30 + 8) = v29;
    sub_1BFE338B4(v25, v30 + *(int *)(v23 + 48), type metadata accessor for FormatService.ThemePackage);
    uint64_t v31 = v51;
    sub_1C01531CC(v30, v51, (unint64_t *)&unk_1EB894410, (void (*)(uint64_t))type metadata accessor for FormatService.ThemePackage);
    swift_bridgeObjectRetain_n();
    uint64_t v32 = (uint64_t)v24;
    uint64_t v33 = (uint64_t)v46;
    sub_1C0153240(v32, (unint64_t *)&unk_1EB894410, (void (*)(uint64_t))type metadata accessor for FormatService.ThemePackage);
    sub_1BFE338B4(v31 + *(int *)(v23 + 48), v33, type metadata accessor for FormatService.ThemePackage);
    sub_1C0153240(v31, (unint64_t *)&unk_1EB894410, (void (*)(uint64_t))type metadata accessor for FormatService.ThemePackage);
    uint64_t v14 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F6550(0, *(void *)(v14 + 16) + 1, 1);
      uint64_t v14 = v56;
    }
    unint64_t v35 = *(void *)(v14 + 16);
    unint64_t v34 = *(void *)(v14 + 24);
    uint64_t v10 = v47;
    a1 = v48;
    if (v35 >= v34 >> 1)
    {
      sub_1C05F6550(v34 > 1, v35 + 1, 1);
      uint64_t v14 = v56;
    }
    *(void *)(v14 + 16) = v35 + 1;
    uint64_t result = sub_1C01054A0(v33, v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ v35 * v55, type metadata accessor for FormatService.ThemePackage);
    int64_t v20 = 1 << *(unsigned char *)(a1 + 32);
    if (v17 >= v20) {
      goto LABEL_27;
    }
    uint64_t v19 = v45;
    uint64_t v36 = *(void *)(v45 + 8 * v22);
    if ((v36 & v54) == 0) {
      goto LABEL_28;
    }
    LODWORD(v16) = v44;
    if (*(_DWORD *)(a1 + 36) != v44) {
      goto LABEL_29;
    }
    unint64_t v37 = v36 & (-2 << (v17 & 0x3F));
    if (v37)
    {
      int64_t v20 = __clz(__rbit64(v37)) | v17 & 0xFFFFFFFFFFFFFFC0;
      int64_t v21 = v43;
    }
    else
    {
      unint64_t v38 = v22 + 1;
      unint64_t v39 = (unint64_t)(v20 + 63) >> 6;
      int64_t v21 = v43;
      if (v22 + 1 < v39)
      {
        unint64_t v40 = *(void *)(v45 + 8 * v38);
        if (v40)
        {
LABEL_22:
          int64_t v20 = __clz(__rbit64(v40)) + (v38 << 6);
        }
        else
        {
          while (v39 - 2 != v22)
          {
            unint64_t v40 = *(void *)(v42 + 8 * v22++);
            if (v40)
            {
              unint64_t v38 = v22 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v18 = v53 + 1;
    uint64_t v17 = v20;
    if (v53 + 1 == v21) {
      return v14;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C0101678(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1BFF661B8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C18C7CB0](v5, a1);
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
        swift_retain();
      }
      swift_beginAccess();
      uint64_t v8 = *(void *)(v6 + 16);
      uint64_t v7 = *(void *)(v6 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      unint64_t v10 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      if (v10 >= v9 >> 1) {
        sub_1BFF661B8(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v12 + 16) = v10 + 1;
      uint64_t v11 = v12 + 16 * v10;
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 40) = v7;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C01017F4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C05F6598(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v24 = v7;
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    unint64_t v15 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    uint64_t result = swift_retain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1C05F6598(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v25 + 16) = v15 + 1;
    *(void *)(v25 + 8 * v15 + 32) = v13;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v24 + 1;
    uint64_t v6 = v9;
    if (v24 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C0101A18(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C05F6598(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v24 = v7;
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    unint64_t v15 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    uint64_t result = swift_retain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1C05F6598(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v25 + 16) = v15 + 1;
    *(void *)(v25 + 8 * v15 + 32) = v13 | 0x2000000000000000;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v24 + 1;
    uint64_t v6 = v9;
    if (v24 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C0101C40(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C05F6598(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v24 = v7;
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    unint64_t v15 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    uint64_t result = swift_retain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1C05F6598(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v25 + 16) = v15 + 1;
    *(void *)(v25 + 8 * v15 + 32) = v13 | 0x4000000000000000;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v24 + 1;
    uint64_t v6 = v9;
    if (v24 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C0101E68(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C05F6598(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v24 = v7;
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    unint64_t v15 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    uint64_t result = swift_retain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1C05F6598(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v25 + 16) = v15 + 1;
    *(void *)(v25 + 8 * v15 + 32) = v13 | 0x6000000000000000;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v24 + 1;
    uint64_t v6 = v9;
    if (v24 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C0102090(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C05F6598(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v24 = v7;
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    unint64_t v15 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    uint64_t result = swift_retain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1C05F6598(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v25 + 16) = v15 + 1;
    *(void *)(v25 + 8 * v15 + 32) = v13 | 0x8000000000000000;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v24 + 1;
    uint64_t v6 = v9;
    if (v24 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C01022B8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C05F6598(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v24 = v7;
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    unint64_t v15 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    uint64_t result = swift_retain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1C05F6598(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v25 + 16) = v15 + 1;
    *(void *)(v25 + 8 * v15 + 32) = v13 | 0xA000000000000000;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v24 + 1;
    uint64_t v6 = v9;
    if (v24 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C01024E4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C05F6598(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v24 = v7;
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    unint64_t v15 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    uint64_t result = swift_retain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1C05F6598(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v25 + 16) = v15 + 1;
    *(void *)(v25 + 8 * v15 + 32) = v13 | 0xC000000000000000;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v24 + 1;
    uint64_t v6 = v9;
    if (v24 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1C010270C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (void *)((char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0158D58(0, &qword_1EB870CF0, (uint64_t (*)(uint64_t))sub_1BFEBC130, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)v53 - v10;
  sub_1BFEBC130();
  uint64_t v64 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v60 = (uint64_t)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v53 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v55 = (uint64_t)v53 - v19;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v21 = a1;
    unint64_t v57 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v22 = a1 + v57;
    uint64_t v23 = *(void *)(v18 + 72);
    unint64_t v62 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v63 = v23;
    uint64_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    v53[1] = v21;
    swift_bridgeObjectRetain();
    unint64_t v61 = MEMORY[0x1E4FBC860];
    id v58 = v8;
    uint64_t v65 = v11;
    uint64_t v24 = v64;
    uint64_t v54 = a2;
    while (1)
    {
      sub_1BFE338B4(v22, (uint64_t)v16, (uint64_t (*)(void))sub_1BFEBC130);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
        sub_1C01054A0((uint64_t)&v16[*(int *)(v26 + 48)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFDDF774((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      }
      else
      {
        sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
        sub_1C01054A0((uint64_t)&v16[*(int *)(v27 + 48)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        uint64_t v28 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v16, v28);
      }
      uint64_t v30 = *v8;
      uint64_t v29 = v8[1];
      swift_bridgeObjectRetain();
      sub_1BFDDF774((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      if (!v29)
      {
        uint64_t v25 = (uint64_t)v65;
        (*v62)((uint64_t)v65, 1, 1, v24);
        goto LABEL_4;
      }
      uint64_t v31 = *a2;
      if (!*(void *)(*a2 + 16)) {
        goto LABEL_17;
      }
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_1BFEF2D8C(v30, v29);
      if ((v33 & 1) == 0) {
        break;
      }
      uint64_t v34 = *(void *)(*(void *)(v31 + 56) + 8 * v32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_1C151928C();
      uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)qword_1EB8799C8);
      MEMORY[0x1F4188790](v36);
      v53[-2] = v37;
      swift_bridgeObjectRetain();
      sub_1BFEDB93C((uint64_t (*)(char *))sub_1BFEDBC1C, (uint64_t)&v53[-4], v34);
      uint64_t v56 = v3;
      sub_1C014FD48((unint64_t *)&qword_1EB8714E0, 255, MEMORY[0x1E4FAB0A8]);
      uint64_t v38 = v64;
      uint64_t v39 = sub_1C151EC0C();
      swift_bridgeObjectRelease();
      uint64_t v40 = *(void *)(v39 + 16);
      if (v40)
      {
        uint64_t v41 = (uint64_t)v65;
        sub_1BFE338B4(v39 + v57 + (v40 - 1) * v63, (uint64_t)v65, (uint64_t (*)(void))sub_1BFEBC130);
        (*v62)(v41, 0, 1, v38);
      }
      else
      {
        (*v62)((uint64_t)v65, 1, 1, v38);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v56;
      a2 = v54;
LABEL_20:
      swift_bridgeObjectRetain();
      unint64_t v42 = sub_1BFEF2D8C(v30, v29);
      char v44 = v43;
      swift_bridgeObjectRelease();
      if (v44)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v46 = *a2;
        uint64_t v66 = *a2;
        *a2 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C106AEB4();
          uint64_t v46 = v66;
        }
        swift_bridgeObjectRelease();
        sub_1C091D59C(v42, v46);
        *a2 = v46;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v8 = v58;
      uint64_t v24 = v64;
      uint64_t v25 = (uint64_t)v65;
      if ((*v59)(v65, 1, v64) != 1)
      {
        uint64_t v47 = v25;
        uint64_t v48 = v55;
        sub_1C01054A0(v47, v55, (uint64_t (*)(void))sub_1BFEBC130);
        sub_1C01054A0(v48, v60, (uint64_t (*)(void))sub_1BFEBC130);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v49 = v61;
        }
        else {
          unint64_t v49 = sub_1BFEB9650(0, *(void *)(v61 + 16) + 1, 1, v61);
        }
        unint64_t v51 = *(void *)(v49 + 16);
        unint64_t v50 = *(void *)(v49 + 24);
        if (v51 >= v50 >> 1) {
          unint64_t v49 = sub_1BFEB9650(v50 > 1, v51 + 1, 1, v49);
        }
        *(void *)(v49 + 16) = v51 + 1;
        unint64_t v61 = v49;
        sub_1C01054A0(v60, v49 + v57 + v51 * v63, (uint64_t (*)(void))sub_1BFEBC130);
        uint64_t v24 = v64;
        goto LABEL_5;
      }
LABEL_4:
      sub_1C01530F8(v25, (uint64_t)&qword_1EB870CF0, (uint64_t)sub_1BFEBC130, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
LABEL_5:
      v22 += v63;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        return v61;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    (*v62)((uint64_t)v65, 1, 1, v64);
    goto LABEL_20;
  }
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1C0102F0C(uint64_t a1)
{
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v3 - 8);
  int v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v6 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v24 = (uint64_t)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v23 = (uint64_t)v21 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return MEMORY[0x1E4FBC860];
  }
  void v21[2] = v1;
  uint64_t v11 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v22 = v6;
  uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v15 = *(void *)(v12 + 72);
  v21[1] = a1;
  swift_bridgeObjectRetain();
  unint64_t v16 = MEMORY[0x1E4FBC860];
  do
  {
    sub_1BFE338B4(v13 + *(int *)(v11 + 32), (uint64_t)v5, (uint64_t (*)(void))sub_1BFECFC20);
    if ((*v14)(v5, 1, v25) == 1)
    {
      sub_1BFDDF774((uint64_t)v5, (uint64_t (*)(void))sub_1BFECFC20);
    }
    else
    {
      uint64_t v17 = v23;
      sub_1C01054A0((uint64_t)v5, v23, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1C01054A0(v17, v24, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v16 = sub_1C00313F4(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v19 = *(void *)(v16 + 16);
      unint64_t v18 = *(void *)(v16 + 24);
      if (v19 >= v18 >> 1) {
        unint64_t v16 = sub_1C00313F4(v18 > 1, v19 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v19 + 1;
      sub_1C01054A0(v24, v16+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    v13 += v15;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C0103228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatService.ThemePackage(0);
  uint64_t v78 = *(void *)(v4 - 8);
  uint64_t v79 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBC130();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01530C4(0);
  uint64_t v77 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v76 = (uint64_t)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v75 = (uint64_t)v59 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v74 = (uint64_t)v59 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v73 = (uint64_t)v59 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v72 = (uint64_t)v59 - v20;
  sub_1C0153B44(0, &qword_1EB890128, sub_1C01530C4);
  uint64_t v71 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v70 = (char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v69 = (void *)((char *)v59 - v24);
  MEMORY[0x1F4188790](v25);
  int64_t v68 = (void *)((char *)v59 - v26);
  uint64_t v83 = MEMORY[0x1E4FBC860];
  sub_1C05F6550(0, 0, 0);
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v60 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v67 = v27;
  if (!v27)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v83;
  }
  unint64_t v28 = 0;
  uint64_t v29 = v60 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v62 = *(void *)(v8 + 72);
  uint64_t v30 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v31 = a2;
  }
  else {
    uint64_t v31 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  v59[0] = v31;
  unint64_t v66 = a2 & 0xC000000000000001;
  uint64_t v64 = v6;
  uint64_t v61 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v65 = a2;
  uint64_t v63 = v10;
  while (1)
  {
    uint64_t result = sub_1BFE338B4(v29, (uint64_t)v10, (uint64_t (*)(void))sub_1BFEBC130);
    if ((unint64_t)a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1C15204BC();
      uint64_t result = swift_bridgeObjectRelease();
      if (v28 == v58)
      {
LABEL_20:
        sub_1BFDDF774((uint64_t)v10, (uint64_t (*)(void))sub_1BFEBC130);
        goto LABEL_21;
      }
    }
    else if (v28 == *(void *)(v30 + 16))
    {
      goto LABEL_20;
    }
    uint64_t v82 = v29;
    if (v66)
    {
      uint64_t v33 = MEMORY[0x1C18C7CB0](v28, a2);
      goto LABEL_11;
    }
    if (v28 >= *(void *)(v30 + 16)) {
      break;
    }
    uint64_t v33 = *(void *)(a2 + 8 * v28 + 32);
    swift_retain();
LABEL_11:
    uint64_t v34 = v77;
    uint64_t v35 = *(int *)(v77 + 48);
    id v81 = sub_1BFEBC130;
    uint64_t v36 = v73;
    sub_1C01054A0((uint64_t)v10, v73, (uint64_t (*)(void))sub_1BFEBC130);
    *(void *)(v36 + v35) = v33;
    uint64_t v37 = v36;
    uint64_t v38 = v72;
    sub_1C01054A0(v37, v72, (uint64_t (*)(void))sub_1C01530C4);
    uint64_t v39 = v71;
    uint64_t v40 = (uint64_t)&v70[*(int *)(v71 + 48)];
    sub_1C01054A0(v38, v40, (uint64_t (*)(void))sub_1C01530C4);
    uint64_t v41 = (uint64_t)v69;
    uint64_t v42 = (uint64_t)v69 + *(int *)(v39 + 48);
    *uint64_t v69 = v28;
    sub_1C01054A0(v40, v42, (uint64_t (*)(void))sub_1C01530C4);
    id v80 = sub_1C01530C4;
    char v43 = v68;
    sub_1C01531CC(v41, (uint64_t)v68, &qword_1EB890128, sub_1C01530C4);
    uint64_t v44 = *v43;
    uint64_t v45 = (uint64_t)v43 + *(int *)(v39 + 48);
    uint64_t v46 = *(void *)(v45 + *(int *)(v34 + 48));
    uint64_t v47 = v74;
    sub_1BFE338B4(v45, v74, (uint64_t (*)(void))sub_1BFEBC130);
    *(void *)(v47 + *(int *)(v34 + 48)) = v46;
    uint64_t v48 = *(int *)(v34 + 48);
    uint64_t v49 = v75;
    sub_1BFE338B4(v47, v75, (uint64_t (*)(void))sub_1BFEBC130);
    *(void *)(v49 + v48) = v46;
    uint64_t v50 = *(int *)(v34 + 48);
    uint64_t v51 = v76;
    sub_1BFE338B4(v47, v76, (uint64_t (*)(void))sub_1BFEBC130);
    swift_retain();
    sub_1BFDDF774(v47, (uint64_t (*)(void))sub_1C01530C4);
    *(void *)(v51 + v50) = v46;
    uint64_t v52 = (uint64_t)v64;
    *uint64_t v64 = v44;
    uint64_t v53 = v79;
    sub_1C01054A0(v49, v52 + *(int *)(v79 + 20), (uint64_t (*)(void))v81);
    *(void *)(v52 + *(int *)(v53 + 24)) = v46;
    swift_retain();
    sub_1BFDDF774(v51, (uint64_t (*)(void))sub_1BFEBC130);
    sub_1C0153240((uint64_t)v43, &qword_1EB890128, v80);
    uint64_t v54 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F6550(0, *(void *)(v54 + 16) + 1, 1);
      uint64_t v54 = v83;
    }
    uint64_t v55 = v82;
    unint64_t v57 = *(void *)(v54 + 16);
    unint64_t v56 = *(void *)(v54 + 24);
    uint64_t v10 = v63;
    uint64_t v30 = v61;
    if (v57 >= v56 >> 1)
    {
      sub_1C05F6550(v56 > 1, v57 + 1, 1);
      uint64_t v54 = v83;
    }
    ++v28;
    *(void *)(v54 + 16) = v57 + 1;
    sub_1C01054A0(v52, v54+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v57, type metadata accessor for FormatService.ThemePackage);
    uint64_t v29 = v55 + v62;
    a2 = v65;
    if (v67 == v28) {
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0103920(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(unint64_t *__return_ptr, uint64_t, uint64_t, void), uint64_t a5)
{
  void (*v103)(unint64_t *__return_ptr, uint64_t, uint64_t, void);
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  __int16 v129;
  uint64_t v130;

  uint64_t v6 = v5;
  uint64_t v104 = a5;
  uint64_t v103 = a4;
  sub_1BFEBC130();
  uint64_t v106 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v117 = (uint64_t)v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (unint64_t)v87 - v13;
  sub_1C01530C4(0);
  uint64_t v109 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v98 = (uint64_t)v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v97 = (uint64_t)v87 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v91 = (uint64_t)v87 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v90 = (uint64_t)v87 - v22;
  uint64_t v23 = type metadata accessor for FormatContentSubgroup();
  uint64_t v107 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v118 = (uint64_t)v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v93 = (uint64_t)v87 - v26;
  sub_1C0157BA4(0, &qword_1EB870D50, (void (*)(uint64_t))type metadata accessor for FormatContentSubgroup, sub_1C01530C4);
  uint64_t v102 = v27;
  MEMORY[0x1F4188790](v27);
  uint64_t v96 = (uint64_t)v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v89 = (uint64_t)v87 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v88 = (uint64_t)v87 - v32;
  uint64_t v33 = *(void *)(a1 + 16);
  uint64_t v34 = *(void *)(a2 + 16);
  uint64_t v105 = a3 >> 62;
  if (a3 >> 62) {
    goto LABEL_73;
  }
  uint64_t v35 = a3;
  uint64_t v36 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v37 = v36 >= v34 ? v34 : v36;
    a3 = v37 >= v33 ? v33 : v37;
    uint64_t v130 = MEMORY[0x1E4FBC860];
    sub_1C05F63E0(0, a3 & ~((uint64_t)a3 >> 63), 0);
    uint64_t v38 = v130;
    uint64_t v129 = 0;
    if ((a3 & 0x8000000000000000) != 0) {
      break;
    }
    uint64_t v101 = a1;
    uint64_t v99 = a2;
    uint64_t v33 = v35;
    uint64_t v100 = v35;
    if (a3)
    {
      unint64_t v92 = v14;
      uint64_t v34 = v35 & 0xFFFFFFFFFFFFFF8;
      if (v35 < 0) {
        uint64_t v39 = v35;
      }
      else {
        uint64_t v39 = v35 & 0xFFFFFFFFFFFFFF8;
      }
      v87[1] = v39;
      unint64_t v95 = v35 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      unint64_t v14 = 0;
      uint64_t v108 = a3;
      uint64_t v94 = v35 & 0xFFFFFFFFFFFFFF8;
      do
      {
        if (a3 == v14)
        {
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
        unint64_t v41 = *(void *)(a1 + 16);
        if (v14 == v41) {
          goto LABEL_77;
        }
        if (v14 >= v41) {
          goto LABEL_67;
        }
        sub_1BFE338B4(a1+ ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))+ *(void *)(v107 + 72) * v14, v118, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
        unint64_t v42 = *(void *)(a2 + 16);
        if (v14 == v42) {
          goto LABEL_76;
        }
        if (v14 >= v42) {
          goto LABEL_68;
        }
        uint64_t v116 = v38;
        sub_1BFE338B4(a2+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v14, v117, (uint64_t (*)(void))sub_1BFEBC130);
        if (v105)
        {
          swift_bridgeObjectRetain();
          uint64_t v60 = sub_1C15204BC();
          swift_bridgeObjectRelease();
          if (v14 == v60) {
            goto LABEL_75;
          }
        }
        else if (v14 == *(void *)(v34 + 16))
        {
          goto LABEL_75;
        }
        if (v95)
        {
          uint64_t v43 = MEMORY[0x1C18C7CB0](v14, v33);
        }
        else
        {
          if (v14 >= *(void *)(v34 + 16)) {
            goto LABEL_69;
          }
          uint64_t v43 = *(void *)(v33 + 8 * v14 + 32);
          swift_retain();
        }
        uint64_t v44 = v109;
        uint64_t v45 = *(int *)(v109 + 48);
        uint64_t v46 = v98;
        sub_1C01054A0(v117, v98, (uint64_t (*)(void))sub_1BFEBC130);
        *(void *)(v46 + v45) = v43;
        uint64_t v47 = v97;
        sub_1C01054A0(v46, v97, (uint64_t (*)(void))sub_1C01530C4);
        uint64_t v48 = v96;
        uint64_t v49 = v96 + *(int *)(v102 + 48);
        sub_1C01054A0(v118, v96, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
        sub_1C01054A0(v47, v49, (uint64_t (*)(void))sub_1C01530C4);
        v103(&v119, v48, v49, *(void *)(v49 + *(int *)(v44 + 48)));
        if (v6)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return sub_1C01530F8(v48, (uint64_t)&qword_1EB870D50, (uint64_t)type metadata accessor for FormatContentSubgroup, (uint64_t)sub_1C01530C4, (uint64_t (*)(void))sub_1C0157BA4);
        }
        uint64_t v115 = 0;
        sub_1C01530F8(v48, (uint64_t)&qword_1EB870D50, (uint64_t)type metadata accessor for FormatContentSubgroup, (uint64_t)sub_1C01530C4, (uint64_t (*)(void))sub_1C0157BA4);
        uint64_t v50 = v120;
        uint64_t v52 = v121;
        uint64_t v51 = v122;
        uint64_t v54 = v123;
        uint64_t v53 = v124;
        uint64_t v113 = v125;
        uint64_t v114 = v119;
        uint64_t v111 = v127;
        uint64_t v112 = v126;
        uint64_t v110 = v128;
        uint64_t v38 = v116;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1C05F63E0(0, *(void *)(v38 + 16) + 1, 1);
          uint64_t v38 = v130;
        }
        unint64_t v56 = *(void *)(v38 + 16);
        unint64_t v55 = *(void *)(v38 + 24);
        if (v56 >= v55 >> 1)
        {
          uint64_t result = sub_1C05F63E0(v55 > 1, v56 + 1, 1);
          uint64_t v38 = v130;
        }
        ++v14;
        *(void *)(v38 + 16) = v56 + 1;
        unint64_t v57 = (void *)(v38 + 80 * v56);
        v57[4] = v114;
        v57[5] = v50;
        v57[6] = v52;
        v57[7] = v51;
        v57[8] = v54;
        v57[9] = v53;
        uint64_t v58 = v112;
        v57[10] = v113;
        v57[11] = v58;
        uint64_t v59 = v110;
        v57[12] = v111;
        v57[13] = v59;
        a3 = v108;
        uint64_t v6 = v115;
        a1 = v101;
        a2 = v99;
        uint64_t v33 = v100;
        uint64_t v34 = v94;
      }
      while (v108 != v14);
      unint64_t v14 = v92;
      if (v129) {
        goto LABEL_64;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v34 = v33 & 0xFFFFFFFFFFFFFF8;
    if (v33 < 0) {
      uint64_t v61 = v33;
    }
    else {
      uint64_t v61 = v33 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v98 = v61;
    unint64_t v62 = *(void *)(a1 + 16);
    if (a3 == v62)
    {
LABEL_64:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v130;
    }
    LODWORD(v112) = HIBYTE(v129);
    uint64_t v110 = v33 & 0xFFFFFFFFFFFFFF8;
    uint64_t v111 = v33 & 0xC000000000000001;
    unint64_t v92 = v14;
    while (a3 < v62)
    {
      sub_1BFE338B4(a1+ ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))+ *(void *)(v107 + 72) * a3, v93, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
      if (v112) {
        goto LABEL_63;
      }
      unint64_t v63 = *(void *)(a2 + 16);
      if (a3 == v63) {
        goto LABEL_63;
      }
      if (a3 >= v63) {
        goto LABEL_71;
      }
      sub_1BFE338B4(a2+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * a3, v14, (uint64_t (*)(void))sub_1BFEBC130);
      if (v105)
      {
        swift_bridgeObjectRetain();
        uint64_t v86 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (a3 == v86)
        {
LABEL_62:
          sub_1BFDDF774(v14, (uint64_t (*)(void))sub_1BFEBC130);
LABEL_63:
          sub_1BFDDF774(v93, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
          goto LABEL_64;
        }
      }
      else if (a3 == *(void *)(v34 + 16))
      {
        goto LABEL_62;
      }
      uint64_t v108 = a3;
      if (v111)
      {
        uint64_t v64 = MEMORY[0x1C18C7CB0](a3, v33);
      }
      else
      {
        if (a3 >= *(void *)(v34 + 16)) {
          goto LABEL_72;
        }
        uint64_t v64 = *(void *)(v33 + 8 * a3 + 32);
        swift_retain();
      }
      uint64_t v65 = *(int *)(v109 + 48);
      uint64_t v66 = v14;
      uint64_t v67 = v91;
      sub_1C01054A0(v66, v91, (uint64_t (*)(void))sub_1BFEBC130);
      *(void *)(v67 + v65) = v64;
      uint64_t v68 = v90;
      sub_1C01054A0(v67, v90, (uint64_t (*)(void))sub_1C01530C4);
      uint64_t v69 = v102;
      uint64_t v70 = v89;
      uint64_t v71 = v89 + *(int *)(v102 + 48);
      sub_1C01054A0(v93, v89, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
      sub_1C01054A0(v68, v71, (uint64_t (*)(void))sub_1C01530C4);
      uint64_t v72 = v88;
      sub_1C0153158(v70, v88, (uint64_t)&qword_1EB870D50, (uint64_t)type metadata accessor for FormatContentSubgroup, (uint64_t)sub_1C01530C4, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C0157BA4);
      v103(&v119, v72, v72 + *(int *)(v69 + 48), *(void *)(v72 + *(int *)(v69 + 48) + *(int *)(v109 + 48)));
      sub_1C01530F8(v72, (uint64_t)&qword_1EB870D50, (uint64_t)type metadata accessor for FormatContentSubgroup, (uint64_t)sub_1C01530C4, (uint64_t (*)(void))sub_1C0157BA4);
      if (v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      unint64_t v73 = v119;
      uint64_t v74 = v121;
      uint64_t v75 = v122;
      uint64_t v76 = v123;
      uint64_t v117 = v124;
      uint64_t v118 = v120;
      uint64_t v115 = v126;
      uint64_t v116 = v125;
      uint64_t v113 = v128;
      uint64_t v114 = v127;
      uint64_t v77 = v130;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F63E0(0, *(void *)(v77 + 16) + 1, 1);
        uint64_t v77 = v130;
      }
      unint64_t v78 = v108;
      unint64_t v80 = *(void *)(v77 + 16);
      unint64_t v79 = *(void *)(v77 + 24);
      if (v80 >= v79 >> 1)
      {
        sub_1C05F63E0(v79 > 1, v80 + 1, 1);
        uint64_t v77 = v130;
      }
      a3 = v78 + 1;
      *(void *)(v77 + 16) = v80 + 1;
      id v81 = (void *)(v77 + 80 * v80);
      uint64_t v82 = v118;
      v81[4] = v73;
      v81[5] = v82;
      v81[6] = v74;
      v81[7] = v75;
      uint64_t v83 = v117;
      v81[8] = v76;
      v81[9] = v83;
      uint64_t v84 = v115;
      v81[10] = v116;
      v81[11] = v84;
      uint64_t v85 = v113;
      v81[12] = v114;
      v81[13] = v85;
      a1 = v101;
      unint64_t v62 = *(void *)(v101 + 16);
      a2 = v99;
      uint64_t v33 = v100;
      unint64_t v14 = v92;
      uint64_t v34 = v110;
      if (a3 == v62) {
        goto LABEL_64;
      }
    }
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1C15204BC();
    uint64_t v35 = a3;
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_75:
  sub_1BFDDF774(v117, (uint64_t (*)(void))sub_1BFEBC130);
LABEL_76:
  uint64_t result = sub_1BFDDF774(v118, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t FormatServiceType.resolve(content:pool:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = FormatServiceType.resolveResult(content:pool:options:)(a1, a2, a3, a4, a5);
  if (!v5)
  {
    uint64_t v7 = (void *)sub_1C1518E7C();
    type metadata accessor for FormatContent.Resolved();
    uint64_t v8 = sub_1C1518FFC();
    swift_release();

    return v8;
  }
  return result;
}

uint64_t FormatServiceType.resolveResult(content:pool:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a5;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for FormatServiceOptions();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v35 = *(void *)(v36 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v8;
  uint64_t v9 = type metadata accessor for FormatContentPool();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v26 = (uint64_t)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatContent(0);
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v28 + 64);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a4 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, &qword_1EB894210, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceResult, MEMORY[0x1E4FAB088]);
  uint64_t v32 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v29, a4);
  sub_1BFE338B4(v31, (uint64_t)v13, type metadata accessor for FormatContent);
  sub_1BFE338B4(v33, (uint64_t)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v34, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v20 = (v15 + *(unsigned __int8 *)(v28 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v21 = (v12 + *(unsigned __int8 *)(v30 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v22 = (v10 + *(unsigned __int8 *)(v36 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v37;
  *(void *)(v23 + 16) = a4;
  *(void *)(v23 + 24) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v23 + v19, v17, a4);
  sub_1C01054A0((uint64_t)v13, v23 + v20, type metadata accessor for FormatContent);
  sub_1C01054A0(v26, v23 + v21, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0((uint64_t)v27, v23 + v22, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  return sub_1C1518FDC();
}

uint64_t sub_1C0104A88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFE338B4(*a1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, a2, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
}

uint64_t sub_1C0104ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 8) + **(int **)(a7 + 8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v13;
  *uint64_t v13 = v7;
  v13[1] = sub_1C0104C04;
  return v15(a3, a4, a5, a6, a7);
}

uint64_t sub_1C0104C04(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x1F4188298](sub_1C015C338, 0, 0);
  }
}

uint64_t sub_1C0104D50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = type metadata accessor for FormatContent(0);
  uint64_t v40 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  unint64_t v7 = (v4 + v5 + v40) & ~v40;
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v37 = type metadata accessor for FormatContentPool();
  uint64_t v38 = *(unsigned __int8 *)(*(void *)(v37 - 8) + 80);
  unint64_t v9 = (v7 + v8 + v38) & ~v38;
  uint64_t v10 = *(void *)(*(void *)(v37 - 8) + 64);
  uint64_t v39 = (int *)type metadata accessor for FormatServiceOptions();
  uint64_t v35 = *(unsigned __int8 *)(*((void *)v39 - 1) + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_bridgeObjectRelease();
  unint64_t v11 = v1 + v7 + *(int *)(v6 + 20);
  uint64_t v12 = sub_1C151631C();
  uint64_t v33 = *(void (**)(unint64_t))(*(void *)(v12 - 8) + 8);
  uint64_t v34 = v12;
  v33(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = v1 + v7 + *(int *)(v6 + 40);
  uint64_t v14 = sub_1C151D6DC();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v36 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v36(v13, 1, v14)) {
    (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  unint64_t v16 = (v9 + v10 + v35) & ~v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v1 + v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v18 = v1 + v9 + *(int *)(v37 + 100);
  if (!v36(v17 + *(int *)(v37 + 100), 1, v14)) {
    (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v18, v14);
  }
  uint64_t v19 = v1 + v16;
  if (*(void *)(v1 + v16 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v1 + v16);
  }
  unint64_t v20 = (id *)(v19 + v39[10]);
  uint64_t v21 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21))
  {

    unint64_t v22 = (int *)type metadata accessor for FeedContext();
    uint64_t v23 = (char *)v20 + v22[5];
    uint64_t v24 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24))
    {
      ((void (*)(char *, uint64_t))v33)(&v23[*(int *)(v24 + 20)], v34);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v20 + v22[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20 + *(int *)(v21 + 20));
  }
  uint64_t v25 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = (char *)v20 + *(int *)(v25 + 40);
  uint64_t v27 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27))
  {
    uint64_t v28 = &v26[*(int *)(v27 + 24)];
    uint64_t v29 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29))
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = &v28[*(int *)(v29 + 24)];
      uint64_t v31 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v26[*(int *)(v27 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C01054A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0105508(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v9 = *(void *)(type metadata accessor for FormatContent(0) - 8);
  unint64_t v10 = (v8 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 64);
  uint64_t v15 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v16 = v13 + v14 + v15;
  uint64_t v17 = v1 + v8;
  uint64_t v18 = v1 + v10;
  uint64_t v19 = v1 + v13;
  uint64_t v20 = v1 + (v16 & ~v15);
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v21;
  *uint64_t v21 = v3;
  v21[1] = sub_1C005E7F4;
  return sub_1C0104ADC(a1, v17, v18, v19, v20, v6, v5);
}

uint64_t FormatServiceType.prefetch(content:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v29 = a4;
  uint64_t v6 = type metadata accessor for FormatServiceOptions();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v28 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v23 = (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatContent.Resolved();
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v24 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a3 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, &qword_1EB863E48, (uint64_t (*)(uint64_t))type metadata accessor for FormatContent.Resolved, MEMORY[0x1E4FAB088]);
  uint64_t v27 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v25, a3);
  sub_1BFE338B4(v26, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1BFE338B4(a2, (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v17 = (v12 + *(unsigned __int8 *)(v24 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v18 = (v9 + *(unsigned __int8 *)(v28 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v29;
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v16, v14, a3);
  sub_1C01054A0((uint64_t)v10, v19 + v17, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C01054A0(v23, v19 + v18, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  return sub_1C1518FDC();
}

uint64_t sub_1C0105A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 16) + **(int **)(a6 + 16));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1C005E7F4;
  return v14(a1, a3, a4, a5, a6);
}

uint64_t sub_1C0105B68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v52 = *(unsigned __int8 *)(*((void *)v6 - 1) + 80);
  unint64_t v7 = (v4 + v5 + v52) & ~v52;
  uint64_t v8 = *(void *)(*((void *)v6 - 1) + 64);
  uint64_t v9 = (int *)type metadata accessor for FormatServiceOptions();
  uint64_t v53 = *(unsigned __int8 *)(*((void *)v9 - 1) + 80);
  unint64_t v10 = v7 + v8 + v53;
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  uint64_t v11 = v1 + v7;
  swift_bridgeObjectRelease();
  unint64_t v12 = v1 + v7 + v6[5];
  uint64_t v13 = sub_1C151631C();
  uint64_t v50 = *(void (**)(unint64_t))(*(void *)(v13 - 8) + 8);
  uint64_t v51 = v13;
  v50(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  unint64_t v14 = v1 + v7 + v6[14];
  uint64_t v15 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((void *)v15 - 1) + 48))(v14, 1, v15))
  {
    unint64_t v48 = v10;
    uint64_t v49 = v1;
    swift_bridgeObjectRelease();
    unint64_t v16 = v14 + v15[5];
    swift_bridgeObjectRelease();
    uint64_t v17 = type metadata accessor for FormatWebEmbed();
    unint64_t v18 = v16 + *(int *)(v17 + 20);
    uint64_t v19 = sub_1C1515FDC();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v47 = *(void (**)(unint64_t, uint64_t))(v20 + 8);
    v47(v18, v19);
    unint64_t v21 = v16 + *(int *)(v17 + 24);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19)) {
      v47(v21, v19);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    unint64_t v22 = v14 + v15[8];
    uint64_t v23 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = type metadata accessor for GenericDataVisualization();
        v47(v22 + *(int *)(v24 + 20), v19);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    unint64_t v25 = v14 + v15[9];
    sub_1BFEC84E0();
    uint64_t v27 = v26;
    uint64_t v28 = *(void *)(v26 - 8);
    uint64_t v1 = v49;
    unint64_t v10 = v48;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v28 + 48))(v25, 1, v26)) {
      (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v25, v27);
    }
  }
  unint64_t v29 = v10 & ~v53;

  swift_bridgeObjectRelease();
  uint64_t v30 = v11 + v6[18];
  uint64_t v31 = sub_1C151D6DC();
  uint64_t v32 = *(void *)(v31 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v33 = v1 + v29;
  if (*(void *)(v1 + v29 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v1 + v29);
  }
  uint64_t v34 = (id *)(v33 + v9[10]);
  uint64_t v35 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
  {

    uint64_t v36 = (int *)type metadata accessor for FeedContext();
    uint64_t v37 = (char *)v34 + v36[5];
    uint64_t v38 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v37, 1, v38))
    {
      ((void (*)(char *, uint64_t))v50)(&v37[*(int *)(v38 + 20)], v51);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v34 + v36[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34 + *(int *)(v35 + 20));
  }
  uint64_t v39 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v40 = (char *)v34 + *(int *)(v39 + 40);
  uint64_t v41 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v40, 1, v41))
  {
    unint64_t v42 = &v40[*(int *)(v41 + 24)];
    uint64_t v43 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v42, 1, v43))
    {
      swift_bridgeObjectRelease();
      uint64_t v44 = &v42[*(int *)(v43 + 24)];
      uint64_t v45 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v40[*(int *)(v41 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0106400(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v9 = *(void *)(type metadata accessor for FormatContent.Resolved() - 8);
  unint64_t v10 = (v8 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v13 = v10 + v11 + v12;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + v10;
  uint64_t v16 = v1 + (v13 & ~v12);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v17;
  *uint64_t v17 = v3;
  v17[1] = sub_1C005E7F4;
  return sub_1C0105A40(a1, v14, v15, v16, v6, v5);
}

uint64_t sub_1C01065B8(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(v2 + 472);
  if (v3 != 2) {
    return v3 & 1;
  }
  if (qword_1EB87AF00 != -1) {
    swift_once();
  }
  sub_1C014FD48((unint64_t *)&unk_1EB874650, a2, (void (*)(uint64_t))type metadata accessor for FormatService);
  sub_1C1516FBC();
  uint64_t result = v5;
  *(unsigned char *)(v2 + 472) = v5;
  return result;
}

uint64_t sub_1C01066A8(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(v2 + 473);
  if (v3 != 2) {
    return v3 & 1;
  }
  if (qword_1EB87AF08 != -1) {
    swift_once();
  }
  sub_1C014FD48((unint64_t *)&unk_1EB874650, a2, (void (*)(uint64_t))type metadata accessor for FormatService);
  sub_1C1516FBC();
  uint64_t result = v5;
  *(unsigned char *)(v2 + 473) = v5;
  return result;
}

uint64_t FormatService.resolveResult(content:pool:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  type metadata accessor for FormatContentPool();
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = type metadata accessor for FormatServiceOptions();
  v4[22] = swift_task_alloc();
  type metadata accessor for FormatContent.Resolved();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  sub_1BFEE3854(0);
  v4[25] = swift_task_alloc();
  v4[26] = type metadata accessor for FormatContent(0);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0106914, 0, 0);
}

uint64_t sub_1C0106914()
{
  uint64_t v33 = v0;
  uint64_t v2 = (char *)v0[27];
  uint64_t v1 = (uint64_t *)v0[28];
  uint64_t v3 = v0[25];
  uint64_t v31 = v0[26];
  id v4 = objc_msgSend(*(id *)(v0[18] + 152), sel_appConfigurationManager);
  type metadata accessor for FeedAppConfigManager();
  *(void *)(swift_initStackObject() + 16) = v4;
  type metadata accessor for FormatFeedConfigManager();
  swift_initStackObject();
  sub_1C01A923C();
  uint64_t v5 = FeedAppConfigManager.segmentSetIds.getter();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1C014A274(v6, v5);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  v0[14] = v8;
  sub_1C0158D58(0, &qword_1EB879E70, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, MEMORY[0x1E4FBB320]);
  sub_1C0150838(&qword_1EB890AE8, &qword_1EB879E70, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup);
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  uint64_t v10 = sub_1C151E92C();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1C151D6DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
  uint64_t v32 = 0;
  FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, v2, 0, 0, v3, 0, &v32, v10, 0);
  swift_bridgeObjectRelease();
  sub_1BFDDF774(v3, (uint64_t (*)(void))sub_1BFEE3854);
  sub_1C0A203B8((uint64_t)v2, (uint64_t)v1);
  sub_1BFDDF774((uint64_t)v2, type metadata accessor for FormatContent);
  sub_1BFFDEB20();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C152C7E0;
  uint64_t v14 = *v1;
  uint64_t v13 = v1[1];
  *(void *)(v12 + 56) = v9;
  unint64_t v15 = sub_1BFE9C558();
  *(void *)(v12 + 64) = v15;
  *(void *)(v12 + 32) = v14;
  *(void *)(v12 + 40) = v13;
  uint64_t v16 = *(void *)(*(uint64_t *)((char *)v1 + *(int *)(v31 + 56)) + 16);
  uint64_t v17 = MEMORY[0x1E4FBB550];
  uint64_t v18 = MEMORY[0x1E4FBB5C8];
  *(void *)(v12 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v12 + 104) = v18;
  *(void *)(v12 + 72) = v16;
  uint64_t v19 = *(void *)(*(uint64_t *)((char *)v1 + *(int *)(v31 + 60)) + 16);
  *(void *)(v12 + 136) = v17;
  *(void *)(v12 + 144) = v18;
  *(void *)(v12 + 112) = v19;
  uint64_t v20 = qword_1EB87BD00;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB8799C8);
  uint64_t v22 = sub_1C151920C();
  *(void *)(v12 + 176) = v9;
  *(void *)(v12 + 184) = v15;
  *(void *)(v12 + 152) = v22;
  *(void *)(v12 + 160) = v23;
  if (qword_1EB8943F8 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB893CD8);
  uint64_t v24 = sub_1C151920C();
  *(void *)(v12 + 216) = v9;
  *(void *)(v12 + 224) = v15;
  *(void *)(v12 + 192) = v24;
  *(void *)(v12 + 200) = v25;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)swift_task_alloc();
  v0[29] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1C0106D64;
  uint64_t v27 = v0[28];
  uint64_t v28 = v0[17];
  uint64_t v29 = v0[16];
  return sub_1C0107A88(v27, v29, v28);
}

uint64_t sub_1C0106D64(uint64_t a1)
{
  id v4 = (void *)*v2;
  v4[30] = a1;
  v4[31] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1C010725C, 0, 0);
  }
  else
  {
    uint64_t v5 = a1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[32] = v6;
    *uint64_t v6 = v4;
    v6[1] = sub_1C0106EFC;
    uint64_t v7 = v4[24];
    uint64_t v8 = v4[17];
    return FormatService.prefetch(content:options:)(v7, v5, v8);
  }
}

uint64_t sub_1C0106EFC()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0107344;
  }
  else {
    uint64_t v2 = sub_1C0107010;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0107010()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[24];
  uint64_t v5 = v0[23];
  uint64_t v12 = v0[22];
  uint64_t v6 = v0[19];
  uint64_t v7 = v0[20];
  uint64_t v8 = v0[16];
  sub_1BFE338B4(v0[17], v12, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v3, v2, type metadata accessor for FormatContent);
  sub_1BFE338B4(v8, v7, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v4, v5, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1BFE338B4(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, v6, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  swift_release();
  type metadata accessor for FormatServiceResult();
  uint64_t v9 = swift_allocObject();
  sub_1C01054A0(v12, v9 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v2, v9 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, type metadata accessor for FormatContent);
  sub_1C01054A0(v7, v9 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v5, v9 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C01054A0(v6, v9 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_1C010725C()
{
  sub_1BFDDF774(*(void *)(v0 + 224), type metadata accessor for FormatContent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0107344()
{
  swift_release();
  sub_1BFDDF774(*(void *)(v0 + 224), type metadata accessor for FormatContent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BOOL sub_1C0107434(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v33 - v4;
  uint64_t v6 = (int *)type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 40);
  sub_1C0153C08(v9, (uint64_t)v5, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1C01054A0((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v10 = *(void *)&v8[v6[10]];
  swift_bridgeObjectRetain();
  sub_1BFDDF774((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_1C0153C08(v9, (uint64_t)v5, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    sub_1C01054A0((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v12 = *(void *)&v8[v6[10]];
    swift_bridgeObjectRetain();
    sub_1BFDDF774((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    if (qword_1EB8819F8 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_1EB8819E0;
    uint64_t v14 = unk_1EB8819E8;
    sub_1BFE40340(qword_1EB8819E0, unk_1EB8819E8);
    char v15 = sub_1C0451920(v13, v14, v12);
    swift_bridgeObjectRelease();
    sub_1BFEE653C(v13, v14);
    if ((v15 & 1) == 0) {
      return 0;
    }
  }
  sub_1C0153C08(v9, (uint64_t)v5, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1C01054A0((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v16 = *(void *)&v8[v6[11]];
  swift_bridgeObjectRetain();
  sub_1BFDDF774((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    sub_1C0153C08(v9, (uint64_t)v5, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    sub_1C01054A0((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v18 = *(void *)&v8[v6[11]];
    swift_bridgeObjectRetain();
    sub_1BFDDF774((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    if (qword_1EB8819F8 != -1) {
      swift_once();
    }
    uint64_t v19 = qword_1EB8819E0;
    uint64_t v20 = unk_1EB8819E8;
    sub_1BFE40340(qword_1EB8819E0, unk_1EB8819E8);
    char v21 = sub_1C0451920(v19, v20, v18);
    swift_bridgeObjectRelease();
    sub_1BFEE653C(v19, v20);
    if (v21) {
      return 0;
    }
  }
  sub_1C0153C08(v9, (uint64_t)v5, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1C01054A0((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v22 = *(void *)&v8[v6[8]];
  swift_bridgeObjectRetain();
  sub_1BFDDF774((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v34 = v6;
  uint64_t v23 = v36;
  sub_1BFDD320C(v36, v22, (uint64_t)&v37);
  swift_bridgeObjectRelease();
  *(void *)&long long v35 = v38;
  *((void *)&v35 + 1) = v37;
  int v24 = v39;
  sub_1C0153C08(v9, (uint64_t)v5, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1C01054A0((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v25 = *(void *)&v8[v34[9]];
  swift_bridgeObjectRetain();
  sub_1BFDDF774((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFDD2F80(v23, v25, (uint64_t)&v37);
  swift_bridgeObjectRelease();
  uint64_t v27 = v37;
  uint64_t v26 = v38;
  int v28 = v39;
  sub_1C0158E24();
  if (!v24)
  {
    sub_1BFDCA350(v27, v26, v28);
    uint64_t v29 = *((void *)&v35 + 1);
    uint64_t v30 = v35;
LABEL_14:
    unsigned __int8 v31 = 0;
    goto LABEL_17;
  }
  if (v24 == 1)
  {
    sub_1BFDCA350(v27, v26, v28);
    uint64_t v29 = *((void *)&v35 + 1);
    uint64_t v30 = v35;
LABEL_12:
    unsigned __int8 v31 = 1;
LABEL_17:
    sub_1BFDCA350(v29, v30, v31);
    return 0;
  }
  if (v35 != 0)
  {
    uint64_t v29 = v27;
    uint64_t v30 = v26;
    unsigned __int8 v31 = v28;
    goto LABEL_17;
  }
  if (!v28)
  {
    uint64_t v29 = v27;
    uint64_t v30 = v26;
    goto LABEL_14;
  }
  if (v28 == 1)
  {
    uint64_t v29 = v27;
    uint64_t v30 = v26;
    goto LABEL_12;
  }
  return !(v26 | v27);
}

uint64_t sub_1C0107A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[1103] = v3;
  v4[1097] = a3;
  v4[1091] = a2;
  v4[1085] = a1;
  v4[1109] = type metadata accessor for FormatContent.Resolved();
  v4[1115] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FormatWebEmbed.Resolved();
  v4[1121] = v5;
  v4[1127] = *(void *)(v5 - 8);
  v4[1133] = swift_task_alloc();
  sub_1BFEE6554(0);
  v4[1139] = swift_task_alloc();
  v4[1145] = type metadata accessor for FormatContentSubgroupFilterContext();
  v4[1151] = swift_task_alloc();
  v4[1157] = swift_task_alloc();
  sub_1BFEE3854(0);
  v4[1163] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatContent(0);
  v4[1169] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[1175] = v7;
  v4[1181] = *(void *)(v7 + 64);
  v4[1187] = swift_task_alloc();
  v4[1193] = swift_task_alloc();
  v4[1199] = swift_task_alloc();
  v4[1205] = swift_task_alloc();
  v4[1211] = swift_task_alloc();
  v4[1217] = swift_task_alloc();
  v4[1223] = swift_task_alloc();
  v4[1229] = swift_task_alloc();
  v4[1235] = swift_task_alloc();
  v4[1241] = swift_task_alloc();
  v4[1247] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FormatContentPool();
  v4[1253] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[1259] = v9;
  v4[1265] = *(void *)(v9 + 64);
  v4[1271] = swift_task_alloc();
  v4[1277] = swift_task_alloc();
  v4[1283] = swift_task_alloc();
  v4[1289] = swift_task_alloc();
  v4[1295] = swift_task_alloc();
  v4[1301] = swift_task_alloc();
  v4[1307] = swift_task_alloc();
  v4[1313] = swift_task_alloc();
  v4[1319] = swift_task_alloc();
  v4[1325] = swift_task_alloc();
  v4[1331] = swift_task_alloc();
  v4[1337] = swift_task_alloc();
  v4[1343] = swift_task_alloc();
  uint64_t v10 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[1349] = v10;
  v4[1355] = *(void *)(v10 + 64);
  v4[1361] = swift_task_alloc();
  v4[1367] = swift_task_alloc();
  v4[1373] = swift_task_alloc();
  v4[1379] = swift_task_alloc();
  v4[1385] = swift_task_alloc();
  v4[1391] = swift_task_alloc();
  v4[1397] = swift_task_alloc();
  v4[1403] = swift_task_alloc();
  v4[1409] = swift_task_alloc();
  v4[1415] = swift_task_alloc();
  v4[1421] = swift_task_alloc();
  v4[1427] = swift_task_alloc();
  v4[1433] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0107EE8, 0, 0);
}

uint64_t sub_1C0107EE8()
{
  uint64_t v1 = (long long *)(v0 + 967);
  uint64_t v2 = v0[1169];
  uint64_t v3 = v0[1103];
  uint64_t v4 = (uint64_t *)v0[1085];
  uint64_t v5 = *(void **)(v3 + 488);
  sub_1BFC66384(v3 + 496, (uint64_t)(v0 + 967));
  uint64_t v6 = v4[1];
  uint64_t v95 = *v4;
  uint64_t v7 = *(int *)(v2 + 64);
  uint64_t v8 = *(uint64_t *)((char *)v4 + *(int *)(v2 + 68));
  *((_DWORD *)v0 + 3382) = v7;
  uint64_t v9 = *(uint64_t *)((char *)v4 + v7);
  uint64_t v105 = MEMORY[0x1E4FBC860];
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v100 = v0;
  uint64_t v94 = v6;
  if (v10)
  {
    uint64_t v101 = (long long *)(v0 + 967);
    uint64_t v11 = v0[1091];
    uint64_t v98 = v5;
    uint64_t v12 = v9;
    id v13 = v5;
    swift_bridgeObjectRetain();
    uint64_t v93 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)(v12 + 48);
    uint64_t v15 = MEMORY[0x1E4FBC870];
    uint64_t v103 = v11;
    do
    {
      uint64_t v16 = v15;
      if ((~*v14 & 0xF000000000000007) == 0)
      {
        uint64_t v17 = *(void *)(v11 + 72);
        if (*(void *)(v17 + 16))
        {
          uint64_t v19 = *(v14 - 2);
          uint64_t v18 = *(v14 - 1);
          swift_bridgeObjectRetain();
          unint64_t v20 = sub_1BFEF2D8C(v19, v18);
          if (v21)
          {
            uint64_t v16 = *(void *)(*(void *)(v17 + 56) + (v20 << 6) + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v11 = v103;
            swift_bridgeObjectRelease();
            uint64_t v15 = MEMORY[0x1E4FBC870];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v16 = v15;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v16 = v15;
        }
      }
      v14 += 3;
      sub_1BFE72794(v16);
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v22 = v105;
    uint64_t v0 = v100;
    uint64_t v1 = v101;
    uint64_t v23 = v98;
    uint64_t v24 = v93;
  }
  else
  {
    id v25 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = MEMORY[0x1E4FBC860];
    uint64_t v24 = v8;
    uint64_t v23 = v5;
  }
  uint64_t v50 = v0[1433];
  uint64_t v52 = v0[1427];
  uint64_t v88 = v0[1421];
  uint64_t v59 = v0[1409];
  uint64_t v56 = v0[1415];
  uint64_t v62 = v0[1403];
  uint64_t v65 = v0[1397];
  uint64_t v68 = v0[1391];
  uint64_t v71 = v0[1385];
  uint64_t v85 = v0 + 1031;
  uint64_t v74 = v0[1379];
  uint64_t v77 = v0[1373];
  uint64_t v80 = v0[1367];
  id v81 = v0 + 1044;
  uint64_t v51 = v0[1355];
  uint64_t v86 = v0[1349];
  uint64_t v53 = v0[1343];
  uint64_t v55 = v0[1337];
  uint64_t v58 = v0[1331];
  uint64_t v61 = v0[1325];
  uint64_t v64 = v0[1319];
  uint64_t v67 = v0[1313];
  uint64_t v69 = v0[1307];
  uint64_t v84 = v0 + 242;
  uint64_t v72 = v0[1301];
  uint64_t v75 = v0[1295];
  uint64_t v78 = v0[1289];
  uint64_t v89 = v0[1259];
  uint64_t v90 = v0[1265];
  uint64_t v83 = v0[1247];
  uint64_t v54 = v0[1241];
  uint64_t v57 = v0[1235];
  uint64_t v60 = v0[1229];
  uint64_t v63 = v0[1223];
  uint64_t v66 = v0[1217];
  uint64_t v70 = v0[1211];
  uint64_t v73 = v0[1205];
  uint64_t v76 = v0[1199];
  uint64_t v79 = v0[1193];
  uint64_t v92 = v0[1181];
  uint64_t v87 = v0[1175];
  uint64_t v26 = v0[1169];
  uint64_t v82 = v0[1103];
  uint64_t v27 = v0[1097];
  uint64_t v104 = v0[1091];
  uint64_t v28 = v0[1085];
  uint64_t v29 = sub_1BFFB9A98(v22, v24);
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceResolverServices();
  uint64_t v30 = (void *)swift_allocObject();
  v0[1439] = v30;
  v30[2] = v23;
  sub_1BFC773DC(v1, (uint64_t)(v30 + 3));
  v30[8] = v95;
  v30[9] = v94;
  v30[10] = 0;
  v30[11] = 0;
  v30[12] = v29;
  *((_DWORD *)v0 + 3383) = *(_DWORD *)(v26 + 60);
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = v0;
  uint64_t v33 = sub_1C0100FDC(v31);
  v0[1445] = v33;
  swift_bridgeObjectRelease();
  uint64_t v99 = (uint64_t *)v28;
  uint64_t v102 = v27;
  uint64_t v96 = sub_1C014FF50(*(void *)(v28 + *(int *)(v26 + 56)));
  v0[1451] = v96;
  sub_1BFE338B4(v27, v50, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v34 = *(unsigned __int8 *)(v86 + 80);
  uint64_t v35 = (v34 + 32) & ~v34;
  uint64_t v36 = swift_allocObject();
  v32[1457] = v36;
  *(void *)(v36 + 16) = v82;
  *(void *)(v36 + 24) = v33;
  sub_1C01054A0(v50, v36 + v35, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C0158D58(255, &qword_1EB879EA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, MEMORY[0x1E4FBB320]);
  swift_asyncLet_begin();
  sub_1BFE338B4(v102, v52, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v37 = swift_allocObject();
  v100[1463] = v37;
  *(void *)(v37 + 16) = v82;
  *(void *)(v37 + 24) = v96;
  sub_1C01054A0(v52, v37 + v35, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_asyncLet_begin();
  sub_1BFE338B4(v104, v53, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v102, v88, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4(v28, v83, type metadata accessor for FormatContent);
  unint64_t v97 = (*(unsigned __int8 *)(v89 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  unint64_t v91 = (v90 + v34 + v97) & ~v34;
  unint64_t v38 = (v51 + *(unsigned __int8 *)(v87 + 80) + v91) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  uint64_t v39 = swift_allocObject();
  v100[1469] = v39;
  *(void *)(v39 + 16) = v82;
  sub_1C01054A0(v53, v39 + v97, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v88, v39 + v91, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v83, v39 + v38, type metadata accessor for FormatContent);
  *(void *)(v39 + ((v38 + v92 + 7) & 0xFFFFFFFFFFFFFFF8)) = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C015171C(255, (unint64_t *)&qword_1EB895E80, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  swift_asyncLet_begin();
  sub_1BFE338B4(v104, v55, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v102, v56, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4((uint64_t)v99, v54, type metadata accessor for FormatContent);
  uint64_t v40 = swift_allocObject();
  v100[1475] = v40;
  *(void *)(v40 + 16) = v82;
  sub_1C01054A0(v55, v40 + v97, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v56, v40 + v91, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v54, v40 + v38, type metadata accessor for FormatContent);
  swift_retain();
  swift_retain();
  sub_1C015192C();
  swift_asyncLet_begin();
  sub_1BFE338B4(v104, v58, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v102, v59, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4((uint64_t)v99, v57, type metadata accessor for FormatContent);
  uint64_t v41 = swift_allocObject();
  v100[1481] = v41;
  *(void *)(v41 + 16) = v82;
  sub_1C01054A0(v58, v41 + v97, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v59, v41 + v91, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v57, v41 + v38, type metadata accessor for FormatContent);
  swift_retain();
  swift_retain();
  sub_1C0151B74();
  swift_asyncLet_begin();
  sub_1BFE338B4(v104, v61, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v102, v62, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4((uint64_t)v99, v60, type metadata accessor for FormatContent);
  uint64_t v42 = swift_allocObject();
  v100[1487] = v42;
  *(void *)(v42 + 16) = v82;
  sub_1C01054A0(v61, v42 + v97, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v62, v42 + v91, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v60, v42 + v38, type metadata accessor for FormatContent);
  swift_retain();
  swift_retain();
  sub_1BFD35C60();
  swift_asyncLet_begin();
  sub_1BFE338B4(v104, v64, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v102, v65, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4((uint64_t)v99, v63, type metadata accessor for FormatContent);
  uint64_t v43 = swift_allocObject();
  v100[1493] = v43;
  *(void *)(v43 + 16) = v82;
  sub_1C01054A0(v64, v43 + v97, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v65, v43 + v91, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v63, v43 + v38, type metadata accessor for FormatContent);
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  sub_1BFE338B4(v104, v67, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v102, v68, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4((uint64_t)v99, v66, type metadata accessor for FormatContent);
  uint64_t v44 = swift_allocObject();
  v100[1499] = v44;
  *(void *)(v44 + 16) = v82;
  sub_1C01054A0(v67, v44 + v97, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v68, v44 + v91, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v66, v44 + v38, type metadata accessor for FormatContent);
  swift_retain();
  swift_retain();
  sub_1C0152108();
  swift_asyncLet_begin();
  sub_1BFE338B4(v104, v69, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v102, v71, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4((uint64_t)v99, v70, type metadata accessor for FormatContent);
  uint64_t v45 = swift_allocObject();
  v100[1505] = v45;
  *(void *)(v45 + 16) = v82;
  sub_1C01054A0(v69, v45 + v97, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v71, v45 + v91, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v70, v45 + v38, type metadata accessor for FormatContent);
  swift_retain();
  swift_retain();
  sub_1C0152334();
  swift_asyncLet_begin();
  sub_1BFE338B4(v104, v72, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v102, v74, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4((uint64_t)v99, v73, type metadata accessor for FormatContent);
  uint64_t v46 = swift_allocObject();
  v100[1511] = v46;
  *(void *)(v46 + 16) = v82;
  sub_1C01054A0(v72, v46 + v97, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v74, v46 + v91, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v73, v46 + v38, type metadata accessor for FormatContent);
  swift_retain();
  swift_retain();
  sub_1C01533E4(255, &qword_1EB884C10, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
  swift_asyncLet_begin();
  sub_1BFE338B4(v104, v75, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v102, v77, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4((uint64_t)v99, v76, type metadata accessor for FormatContent);
  uint64_t v47 = swift_allocObject();
  v100[1517] = v47;
  *(void *)(v47 + 16) = v82;
  sub_1C01054A0(v75, v47 + v97, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v77, v47 + v91, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v76, v47 + v38, type metadata accessor for FormatContent);
  swift_retain();
  swift_retain();
  sub_1C0065708();
  swift_asyncLet_begin();
  sub_1BFE338B4(v104, v78, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v102, v80, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4((uint64_t)v99, v79, type metadata accessor for FormatContent);
  uint64_t v48 = swift_allocObject();
  v100[1523] = v48;
  *(void *)(v48 + 16) = v82;
  sub_1C01054A0(v78, v48 + v97, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0(v80, v48 + v91, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v79, v48 + v38, type metadata accessor for FormatContent);
  swift_retain();
  swift_retain();
  sub_1BFEF9AD0(255, &qword_1EB890030, (uint64_t)&type metadata for SportsDataVisualization, MEMORY[0x1E4FBB320]);
  swift_asyncLet_begin();
  v100[1529] = sub_1C0122EFC(v102, v99);
  v100[1535] = sub_1C0123240(v102, v99);
  return MEMORY[0x1F41881E0](v84, v85, sub_1C0109038, v81);
}

uint64_t sub_1C0109038()
{
  v1[1541] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C010BC34, v1 + 1050);
  }
  else
  {
    v1[1547] = v1[1031];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 402, v1 + 1043, sub_1C0109158, v1 + 1122);
  }
}

uint64_t sub_1C0109158()
{
  v1[1553] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C010C6F4, v1 + 1128);
  }
  else
  {
    v1[1559] = v1[1043];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 562, v1 + 1055, sub_1C0109294, v1 + 1200);
  }
}

uint64_t sub_1C0109294()
{
  v1[1565] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C010D1B4, v1 + 1206);
  }
  else
  {
    v1[1571] = v1[1055];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 722, v1 + 1067, sub_1C01093DC, v1 + 1278);
  }
}

uint64_t sub_1C01093DC()
{
  v1[1577] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C010DC74, v1 + 1284);
  }
  else
  {
    v1[1583] = v1[1067];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 882, v1 + 1079, sub_1C010953C, v1 + 1356);
  }
}

uint64_t sub_1C010953C()
{
  v1[1589] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C010E734, v1 + 1362);
  }
  else
  {
    v1[1595] = v1[1079];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 802, v1 + 1001, sub_1C01096AC, v1 + 1434);
  }
}

uint64_t sub_1C01096AC()
{
  v1[1601] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C010F1F4, v1 + 1440);
  }
  else
  {
    v1[1607] = v1[1001];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 642, v1 + 1073, sub_1C0109824, v1 + 1512);
  }
}

uint64_t sub_1C0109824()
{
  v1[1613] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C010FCB4, v1 + 962);
  }
  else
  {
    v1[1619] = v1[1073];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 82, v1 + 1025, sub_1C01099A8, v1 + 1590);
  }
}

uint64_t sub_1C01099A8()
{
  v1[1625] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C0110770, v1 + 1596);
  }
  else
  {
    v1[1631] = v1[1025];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 2, v1 + 1013, sub_1C0109B30, v1 + 1668);
  }
}

uint64_t sub_1C0109B30()
{
  v1[1637] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C0111230, v1 + 1674);
  }
  else
  {
    v1[1643] = v1[1013];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 482, v1 + 1061, sub_1C0109CD4, v1 + 1746);
  }
}

uint64_t sub_1C0109CD4()
{
  v1[1649] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C0111CF0, v1 + 1752);
  }
  else
  {
    v1[1655] = v1[1061];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 322, v1 + 1049, sub_1C0109E80, v1 + 1824);
  }
}

uint64_t sub_1C0109E80()
{
  v1[1661] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 1013, sub_1C01127B0, v1 + 1830);
  }
  else
  {
    v1[1667] = v1[1049];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 162, v1 + 1037, sub_1C010A03C, v1 + 1902);
  }
}

uint64_t sub_1C010A03C()
{
  *(void *)(v1 + 13384) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 16, v1 + 8104, sub_1C0113270, v1 + 15264);
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C010A1E4, 0, 0);
  }
}

uint64_t sub_1C010A1E4()
{
  uint64_t v138 = v0;
  uint64_t v1 = *(void *)(v0 + 12856);
  uint64_t v2 = *(void *)(v0 + 12760);
  uint64_t v3 = *(void *)(v0 + 9352);
  uint64_t v4 = *(void *)(v0 + 8680);
  uint64_t v5 = *(void *)(v0 + 8296);
  swift_bridgeObjectRetain();
  uint64_t v136 = (void *)sub_1C0123468(v4, v1);
  uint64_t v6 = sub_1C01234FC(v4, v2);
  uint64_t v7 = (uint64_t *)(v4 + *(int *)(v3 + 32));
  uint64_t v8 = v7[1];
  uint64_t v9 = *(void *)(v0 + 13384);
  uint64_t v101 = v6;
  if (v8)
  {
    unint64_t v10 = *(void *)(v0 + 12568);
    uint64_t v11 = *v7;
    swift_bridgeObjectRetain();
    uint64_t v100 = sub_1C0149964(v10, v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v100 = 0;
  }
  if (*(void *)(*(void *)(v0 + 8680) + *(int *)(*(void *)(v0 + 9352) + 24) + 8))
  {
    uint64_t v12 = *(void **)(*(void *)(v0 + 11512) + 16);
    id v13 = (void *)sub_1C151E5EC();
    id v99 = objc_msgSend(v12, sel_subscriptionForTagID_, v13);
  }
  else
  {
    id v99 = 0;
  }
  uint64_t v127 = v9;
  if (v136)
  {
    if ((objc_msgSend((id)swift_unknownObjectRetain(), sel_isPurchaseSetup) & 1) != 0
      || objc_msgSend(v136, sel_isAuthenticationSetup))
    {
      uint64_t v14 = (void *)swift_unknownObjectRetain();
      FeedSubscriptionPaidAccess.init(paidAccessChecker:tag:)(v14, v136, (char *)v137);
      char v15 = (char)v137[0];
      goto LABEL_13;
    }
    swift_unknownObjectRelease();
  }
  char v15 = 3;
LABEL_13:
  char v98 = v15;
  uint64_t v16 = v5;
  uint64_t v17 = *(void *)(v0 + 13336);
  uint64_t v18 = *(void *)(v0 + 13240);
  uint64_t v113 = *(void *)(v0 + 13048);
  uint64_t v116 = *(void *)(v0 + 13144);
  uint64_t v124 = *(void *)(v0 + 12952);
  uint64_t v19 = *(void *)(v0 + 12856);
  unint64_t v119 = *(void *)(v0 + 12568);
  uint64_t v122 = *(void *)(v0 + 12664);
  uint64_t v126 = *(void *)(v0 + 12472);
  uint64_t v107 = *(id **)(v0 + 12232);
  uint64_t v109 = *(id **)(v0 + 12280);
  uint64_t v20 = *(void *)(v0 + 11608);
  uint64_t v111 = *(id ***)(v0 + 10264);
  uint64_t v102 = *(void *)(v0 + 10024);
  uint64_t v21 = *(void *)(v0 + 9304);
  uint64_t v22 = *(void *)(v0 + 8728);
  uint64_t v105 = sub_1C00B1A1C(*(void *)(v0 + 12760));
  swift_bridgeObjectRelease();
  unint64_t v104 = sub_1BFD35AC0(v19);
  swift_bridgeObjectRelease();
  unint64_t v23 = sub_1BFD35AC0(v18);
  swift_bridgeObjectRelease();
  uint64_t v24 = (char *)sub_1BFD35AC0(v17);
  swift_bridgeObjectRelease();
  size_t v25 = sub_1C00B1750(v16);
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C00B1648(v26);
  swift_bridgeObjectRelease();
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C00B1530(v28);
  swift_bridgeObjectRelease();
  uint64_t v103 = v22 + *(int *)(v102 + 100);
  sub_1BFE338B4(v103, v21, (uint64_t (*)(void))sub_1BFEE3854);
  unint64_t v30 = sub_1C018D14C(MEMORY[0x1E4FBC860]);
  FormatContentPool.init(headlines:headlineLists:issues:tags:tagFeeds:tagFeedFetches:puzzles:puzzleTypes:puzzleStatistics:placeholders:slotPlaceholders:webArchivePromises:resourcePromises:sportsDataVisualizations:genericDataVisualizations:sponsoredAdBanner:)(v119, v122, (unint64_t)v105, v104, v124, v30, v23, v24, v111, v25, (uint64_t)v27, (uint64_t)v29, v107, v109, v116, v113, v21);
  uint64_t v31 = sub_1C0103228(v20, v126);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 7912) = v31;
  sub_1C0158D58(0, &qword_1EB894438, type metadata accessor for FormatService.ThemePackage, MEMORY[0x1E4FBB320]);
  sub_1C0150838(&qword_1EB894440, &qword_1EB894438, type metadata accessor for FormatService.ThemePackage);
  uint64_t v32 = sub_1C151E93C();
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_1C01235D8(v32);
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)sub_1C01011D4(v33);
  swift_bridgeObjectRelease();
  v137[0] = v34;
  swift_bridgeObjectRetain();
  sub_1C0148650(v137);
  if (v127)
  {
    return swift_release();
  }
  unint64_t v133 = *(void *)(v0 + 12376);
  uint64_t v36 = *(int *)(v0 + 13532);
  uint64_t v128 = *(void *)(v0 + 11512);
  uint64_t v130 = *(void *)(v0 + 11560);
  uint64_t v37 = *(void *)(v0 + 10264);
  uint64_t v38 = *(void *)(v0 + 8776);
  uint64_t v39 = *(void *)(v0 + 8680);
  swift_bridgeObjectRelease();
  uint64_t v40 = v137[0];
  uint64_t v41 = swift_task_alloc();
  *(void *)(v41 + 16) = v38;
  *(void *)(v41 + 24) = v39;
  uint64_t v125 = sub_1C0182078((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C0152FD8, v41, (uint64_t)v40, v0 + 7816);
  swift_release();
  swift_task_dealloc();
  uint64_t v42 = *(void *)(v39 + v36);
  uint64_t v43 = (void *)swift_task_alloc();
  void v43[2] = v38;
  v43[3] = v39;
  v43[4] = v37;
  v43[5] = v128;
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1C0103920(v42, v130, v133, (void (*)(unint64_t *__return_ptr, uint64_t, uint64_t, void))sub_1C0152FF8, (uint64_t)v43);
  *(void *)(v0 + 13432) = 0;
  uint64_t v45 = v44;
  uint64_t v114 = *(void *)(v0 + 10888);
  uint64_t v46 = *(void *)(v0 + 9496);
  uint64_t v134 = *(void *)(v0 + 9352);
  uint64_t v131 = *(void *)(v0 + 9256);
  uint64_t v47 = *(void *)(v0 + 9208);
  uint64_t v117 = *(int **)(v0 + 9160);
  uint64_t v48 = *(void *)(v0 + 8776);
  uint64_t v49 = *(void *)(v0 + 8680);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v120 = v46;
  sub_1BFE338B4(v49, v46, type metadata accessor for FormatContent);
  sub_1BFE338B4(v48, v114, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4(v46, v47, type metadata accessor for FormatContent);
  sub_1BFE338B4(v114, v47 + v117[5], (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  *(void *)(v0 + 8056) = v45;
  sub_1BFEF9AD0(0, (unint64_t *)&unk_1EB890010, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, MEMORY[0x1E4FBB320]);
  sub_1C014FEEC((unint64_t *)&qword_1EB890020, (unint64_t *)&unk_1EB890010, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer);
  sub_1C0153018();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_1C151E91C();
  sub_1BFDDF774(v114, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFDDF774(v120, type metadata accessor for FormatContent);
  swift_bridgeObjectRelease();
  *(void *)(v47 + v117[6]) = v50;
  *(void *)(v47 + v117[7]) = v136;
  sub_1C01054A0(v47, v131, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroupFilterContext);
  uint64_t v51 = swift_task_alloc();
  *(void *)(v51 + 16) = v131;
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1C06218B0((uint64_t)sub_1C015306C, v51, v45);
  swift_task_dealloc();
  sub_1BFDDF774(v131, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroupFilterContext);
  swift_bridgeObjectRelease();
  uint64_t v53 = (uint64_t *)(v49 + *(int *)(v134 + 36));
  uint64_t v54 = v53[1];
  if (!v54)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 9016) + 56))(*(void *)(v0 + 9112), 1, 1, *(void *)(v0 + 8968));
    goto LABEL_29;
  }
  uint64_t v55 = *v53;
  uint64_t v56 = sub_1C0100A3C(v52);
  uint64_t v57 = *(void *)(v56 + 16);
  if (!v57)
  {
LABEL_27:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 9016) + 56))(*(void *)(v0 + 9112), 1, 1, *(void *)(v0 + 8968));
    swift_bridgeObjectRelease();
LABEL_29:
    uint64_t v65 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_31;
  }
  uint64_t v58 = v52;
  uint64_t v59 = *(void *)(v0 + 9064);
  uint64_t v60 = *(void *)(v0 + 9016);
  uint64_t v61 = v56 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
  uint64_t v62 = *(void *)(v60 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v63 = *(void **)(v0 + 9064);
    sub_1BFE338B4(v61, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
    BOOL v64 = *v63 == v55 && v54 == *(void *)(v59 + 8);
    if (v64 || (sub_1C1520A9C() & 1) != 0) {
      break;
    }
    sub_1BFDDF774(*(void *)(v0 + 9064), (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
    v61 += v62;
    if (!--v57)
    {
      swift_bridgeObjectRelease();
      uint64_t v52 = v58;
      goto LABEL_27;
    }
  }
  uint64_t v66 = *(void *)(v0 + 9112);
  uint64_t v67 = *(void *)(v0 + 9064);
  uint64_t v68 = *(void *)(v0 + 9016);
  uint64_t v69 = *(void *)(v0 + 8968);
  swift_bridgeObjectRelease();
  sub_1C01054A0(v67, v66, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v66, 0, 1, v69);
  swift_bridgeObjectRelease();
  uint64_t v65 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v52 = v58;
LABEL_31:
  uint64_t v70 = *(uint64_t **)(v0 + 8680);
  uint64_t v71 = *(uint64_t *)((char *)v70 + *(int *)(v0 + 13528));
  v137[0] = v65;
  uint64_t v72 = *(void *)(v71 + 16);
  uint64_t v123 = v52;
  if (v72)
  {
    uint64_t v135 = *(void *)(v0 + 10264);
    uint64_t v73 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
    while (1)
    {
      uint64_t v81 = *(v73 - 2);
      uint64_t v80 = *(v73 - 1);
      uint64_t v82 = *v73;
      if ((~*v73 & 0xF000000000000007) != 0)
      {
        sub_1C0158D58(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
        uint64_t v74 = (int *)(type metadata accessor for FormatOption() - 8);
        unint64_t v75 = (*(unsigned __int8 *)(*(void *)v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v74 + 80);
        uint64_t v76 = swift_allocObject();
        *(_OWORD *)(v76 + 16) = xmmword_1C1529AE0;
        uint64_t v77 = (uint64_t *)(v76 + v75);
        *uint64_t v77 = v81;
        v77[1] = v80;
        v77[2] = v82;
        v77[3] = 1;
        unint64_t v78 = v76 + v75 + v74[9];
        uint64_t v79 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v78, 1, 1, v79);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v83 = *(void *)(v135 + 72);
        if (!*(void *)(v83 + 16)) {
          goto LABEL_40;
        }
        swift_bridgeObjectRetain();
        unint64_t v84 = sub_1BFEF2D8C(v81, v80);
        if ((v85 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_40:
          uint64_t v76 = MEMORY[0x1E4FBC860];
          goto LABEL_34;
        }
        uint64_t v76 = *(void *)(*(void *)(v83 + 56) + (v84 << 6) + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_34:
      v73 += 3;
      sub_1BFDC11A4(v82);
      sub_1BFEDB748(v76);
      if (!--v72)
      {
        swift_bridgeObjectRelease();
        uint64_t v106 = v137[0];
        uint64_t v70 = *(uint64_t **)(v0 + 8680);
        goto LABEL_43;
      }
    }
  }
  uint64_t v106 = v65;
LABEL_43:
  uint64_t v112 = *(void *)(v0 + 10888);
  uint64_t v132 = *(void *)(v0 + 10264);
  uint64_t v121 = *(void *)(v0 + 10216);
  uint64_t v129 = *(void *)(v0 + 10168);
  uint64_t v86 = *(int **)(v0 + 9352);
  uint64_t v87 = *(void *)(v0 + 9112);
  uint64_t v88 = *(void **)(v0 + 8920);
  uint64_t v89 = *(int **)(v0 + 8872);
  uint64_t v115 = *(void *)(v0 + 9496);
  uint64_t v118 = *(void *)(v0 + 8728);
  uint64_t v90 = *(void *)(*(void *)(v0 + 11512) + 96);
  uint64_t v91 = v70[1];
  uint64_t v108 = *v70;
  uint64_t v110 = *(void *)(v0 + 8776);
  uint64_t v92 = (char *)v70 + v86[5];
  uint64_t v93 = (char *)v88 + v89[5];
  uint64_t v94 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v93, v92, v94);
  sub_1BFE338B4(v87, (uint64_t)v88 + v89[14], (uint64_t (*)(void))sub_1BFEE6554);
  uint64_t v95 = *(uint64_t *)((char *)v70 + v86[12]);
  uint64_t v96 = *(uint64_t *)((char *)v70 + v86[13]);
  sub_1BFE338B4(v103, (uint64_t)v88 + v89[18], (uint64_t (*)(void))sub_1BFEE3854);
  *uint64_t v88 = v108;
  v88[1] = v91;
  *(void *)((char *)v88 + v89[6]) = v96;
  *(void *)((char *)v88 + v89[7]) = v125;
  *(void *)((char *)v88 + v89[8]) = v123;
  *(void *)((char *)v88 + v89[9]) = v106;
  *(void *)((char *)v88 + v89[11]) = v136;
  *(void *)((char *)v88 + v89[12]) = v101;
  *(void *)((char *)v88 + v89[13]) = v100;
  *(void *)((char *)v88 + v89[15]) = v99;
  *((unsigned char *)v88 + v89[16]) = v98;
  *(void *)((char *)v88 + v89[17]) = v95;
  *(void *)((char *)v88 + v89[10]) = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFDDF774(v87, (uint64_t (*)(void))sub_1BFEE6554);
  sub_1BFE338B4(v110, v112, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4((uint64_t)v70, v115, type metadata accessor for FormatContent);
  sub_1BFE338B4(v118, v121, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFE338B4(v132, v129, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  type metadata accessor for FormatServiceResult();
  uint64_t v97 = swift_allocObject();
  *(void *)(v0 + 13480) = v97;
  sub_1C01054A0(v112, v97 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v115, v97 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, type metadata accessor for FormatContent);
  sub_1C01054A0(v121, v97 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C01054A0((uint64_t)v88, v97 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C01054A0(v129, v97 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFDDF774(v132, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 8104, sub_1C010B178, v0 + 8304);
}

uint64_t sub_1C010B178()
{
  return MEMORY[0x1F4188298](sub_1C010B194, 0, 0);
}

uint64_t sub_1C010B194()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C010B21C, v0 + 8256);
}

uint64_t sub_1C010B21C()
{
  return MEMORY[0x1F4188298](sub_1C010B238, 0, 0);
}

uint64_t sub_1C010B238()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C010B2C0, v0 + 8208);
}

uint64_t sub_1C010B2C0()
{
  return MEMORY[0x1F4188298](sub_1C010B2DC, 0, 0);
}

uint64_t sub_1C010B2DC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C010B364, v0 + 8160);
}

uint64_t sub_1C010B364()
{
  return MEMORY[0x1F4188298](sub_1C010B380, 0, 0);
}

uint64_t sub_1C010B380()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C010B408, v0 + 8112);
}

uint64_t sub_1C010B408()
{
  return MEMORY[0x1F4188298](sub_1C010B424, 0, 0);
}

uint64_t sub_1C010B424()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C010B4B0, v0 + 8064);
}

uint64_t sub_1C010B4B0()
{
  return MEMORY[0x1F4188298](sub_1C010B4CC, 0, 0);
}

uint64_t sub_1C010B4CC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C010B558, v0 + 8016);
}

uint64_t sub_1C010B558()
{
  return MEMORY[0x1F4188298](sub_1C010B574, 0, 0);
}

uint64_t sub_1C010B574()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C010B600, v0 + 7968);
}

uint64_t sub_1C010B600()
{
  return MEMORY[0x1F4188298](sub_1C010B61C, 0, 0);
}

uint64_t sub_1C010B61C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C010B6A8, v0 + 7920);
}

uint64_t sub_1C010B6A8()
{
  return MEMORY[0x1F4188298](sub_1C010B6C4, 0, 0);
}

uint64_t sub_1C010B6C4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C010B750, v0 + 7872);
}

uint64_t sub_1C010B750()
{
  return MEMORY[0x1F4188298](sub_1C010B76C, 0, 0);
}

uint64_t sub_1C010B76C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C010B7F4, v0 + 7824);
}

uint64_t sub_1C010B7F4()
{
  return MEMORY[0x1F4188298](sub_1C010B810, 0, 0);
}

uint64_t sub_1C010B810()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C010B898, v0 + 12480);
}

uint64_t sub_1C010B898()
{
  return MEMORY[0x1F4188298](sub_1C010B8B4, 0, 0);
}

uint64_t sub_1C010B8B4()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 13480);
  return v1(v2);
}

uint64_t sub_1C010BC34()
{
  return MEMORY[0x1F4188298](sub_1C010BC50, 0, 0);
}

uint64_t sub_1C010BC50()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C010BCD8, v0 + 8448);
}

uint64_t sub_1C010BCD8()
{
  return MEMORY[0x1F4188298](sub_1C010BCF4, 0, 0);
}

uint64_t sub_1C010BCF4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C010BD7C, v0 + 8496);
}

uint64_t sub_1C010BD7C()
{
  return MEMORY[0x1F4188298](sub_1C010BD98, 0, 0);
}

uint64_t sub_1C010BD98()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C010BE20, v0 + 8544);
}

uint64_t sub_1C010BE20()
{
  return MEMORY[0x1F4188298](sub_1C010BE3C, 0, 0);
}

uint64_t sub_1C010BE3C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C010BEC4, v0 + 8592);
}

uint64_t sub_1C010BEC4()
{
  return MEMORY[0x1F4188298](sub_1C010BEE0, 0, 0);
}

uint64_t sub_1C010BEE0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C010BF6C, v0 + 8640);
}

uint64_t sub_1C010BF6C()
{
  return MEMORY[0x1F4188298](sub_1C010BF88, 0, 0);
}

uint64_t sub_1C010BF88()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C010C014, v0 + 8688);
}

uint64_t sub_1C010C014()
{
  return MEMORY[0x1F4188298](sub_1C010C030, 0, 0);
}

uint64_t sub_1C010C030()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C010C0BC, v0 + 8736);
}

uint64_t sub_1C010C0BC()
{
  return MEMORY[0x1F4188298](sub_1C010C0D8, 0, 0);
}

uint64_t sub_1C010C0D8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C010C164, v0 + 8784);
}

uint64_t sub_1C010C164()
{
  return MEMORY[0x1F4188298](sub_1C010C180, 0, 0);
}

uint64_t sub_1C010C180()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C010C20C, v0 + 8832);
}

uint64_t sub_1C010C20C()
{
  return MEMORY[0x1F4188298](sub_1C010C228, 0, 0);
}

uint64_t sub_1C010C228()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C010C2B0, v0 + 8880);
}

uint64_t sub_1C010C2B0()
{
  return MEMORY[0x1F4188298](sub_1C010C2CC, 0, 0);
}

uint64_t sub_1C010C2CC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C010C354, v0 + 8928);
}

uint64_t sub_1C010C354()
{
  return MEMORY[0x1F4188298](sub_1C010C370, 0, 0);
}

uint64_t sub_1C010C370()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C010C6F4()
{
  return MEMORY[0x1F4188298](sub_1C010C710, 0, 0);
}

uint64_t sub_1C010C710()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C010C798, v0 + 9072);
}

uint64_t sub_1C010C798()
{
  return MEMORY[0x1F4188298](sub_1C010C7B4, 0, 0);
}

uint64_t sub_1C010C7B4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C010C83C, v0 + 9120);
}

uint64_t sub_1C010C83C()
{
  return MEMORY[0x1F4188298](sub_1C010C858, 0, 0);
}

uint64_t sub_1C010C858()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C010C8E0, v0 + 9168);
}

uint64_t sub_1C010C8E0()
{
  return MEMORY[0x1F4188298](sub_1C010C8FC, 0, 0);
}

uint64_t sub_1C010C8FC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C010C984, v0 + 9216);
}

uint64_t sub_1C010C984()
{
  return MEMORY[0x1F4188298](sub_1C010C9A0, 0, 0);
}

uint64_t sub_1C010C9A0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C010CA2C, v0 + 9264);
}

uint64_t sub_1C010CA2C()
{
  return MEMORY[0x1F4188298](sub_1C010CA48, 0, 0);
}

uint64_t sub_1C010CA48()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C010CAD4, v0 + 9312);
}

uint64_t sub_1C010CAD4()
{
  return MEMORY[0x1F4188298](sub_1C010CAF0, 0, 0);
}

uint64_t sub_1C010CAF0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C010CB7C, v0 + 9360);
}

uint64_t sub_1C010CB7C()
{
  return MEMORY[0x1F4188298](sub_1C010CB98, 0, 0);
}

uint64_t sub_1C010CB98()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C010CC24, v0 + 9408);
}

uint64_t sub_1C010CC24()
{
  return MEMORY[0x1F4188298](sub_1C010CC40, 0, 0);
}

uint64_t sub_1C010CC40()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C010CCCC, v0 + 9456);
}

uint64_t sub_1C010CCCC()
{
  return MEMORY[0x1F4188298](sub_1C010CCE8, 0, 0);
}

uint64_t sub_1C010CCE8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C010CD70, v0 + 9504);
}

uint64_t sub_1C010CD70()
{
  return MEMORY[0x1F4188298](sub_1C010CD8C, 0, 0);
}

uint64_t sub_1C010CD8C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C010CE14, v0 + 9552);
}

uint64_t sub_1C010CE14()
{
  return MEMORY[0x1F4188298](sub_1C010CE30, 0, 0);
}

uint64_t sub_1C010CE30()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C010D1B4()
{
  return MEMORY[0x1F4188298](sub_1C010D1D0, 0, 0);
}

uint64_t sub_1C010D1D0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C010D258, v0 + 9696);
}

uint64_t sub_1C010D258()
{
  return MEMORY[0x1F4188298](sub_1C010D274, 0, 0);
}

uint64_t sub_1C010D274()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C010D2FC, v0 + 9744);
}

uint64_t sub_1C010D2FC()
{
  return MEMORY[0x1F4188298](sub_1C010D318, 0, 0);
}

uint64_t sub_1C010D318()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C010D3A0, v0 + 9792);
}

uint64_t sub_1C010D3A0()
{
  return MEMORY[0x1F4188298](sub_1C010D3BC, 0, 0);
}

uint64_t sub_1C010D3BC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C010D444, v0 + 9840);
}

uint64_t sub_1C010D444()
{
  return MEMORY[0x1F4188298](sub_1C010D460, 0, 0);
}

uint64_t sub_1C010D460()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C010D4EC, v0 + 9888);
}

uint64_t sub_1C010D4EC()
{
  return MEMORY[0x1F4188298](sub_1C010D508, 0, 0);
}

uint64_t sub_1C010D508()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C010D594, v0 + 9936);
}

uint64_t sub_1C010D594()
{
  return MEMORY[0x1F4188298](sub_1C010D5B0, 0, 0);
}

uint64_t sub_1C010D5B0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C010D63C, v0 + 9984);
}

uint64_t sub_1C010D63C()
{
  return MEMORY[0x1F4188298](sub_1C010D658, 0, 0);
}

uint64_t sub_1C010D658()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C010D6E4, v0 + 10032);
}

uint64_t sub_1C010D6E4()
{
  return MEMORY[0x1F4188298](sub_1C010D700, 0, 0);
}

uint64_t sub_1C010D700()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C010D78C, v0 + 10080);
}

uint64_t sub_1C010D78C()
{
  return MEMORY[0x1F4188298](sub_1C010D7A8, 0, 0);
}

uint64_t sub_1C010D7A8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C010D830, v0 + 10128);
}

uint64_t sub_1C010D830()
{
  return MEMORY[0x1F4188298](sub_1C010D84C, 0, 0);
}

uint64_t sub_1C010D84C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C010D8D4, v0 + 10176);
}

uint64_t sub_1C010D8D4()
{
  return MEMORY[0x1F4188298](sub_1C010D8F0, 0, 0);
}

uint64_t sub_1C010D8F0()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C010DC74()
{
  return MEMORY[0x1F4188298](sub_1C010DC90, 0, 0);
}

uint64_t sub_1C010DC90()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C010DD18, v0 + 10320);
}

uint64_t sub_1C010DD18()
{
  return MEMORY[0x1F4188298](sub_1C010DD34, 0, 0);
}

uint64_t sub_1C010DD34()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C010DDBC, v0 + 10368);
}

uint64_t sub_1C010DDBC()
{
  return MEMORY[0x1F4188298](sub_1C010DDD8, 0, 0);
}

uint64_t sub_1C010DDD8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C010DE60, v0 + 10416);
}

uint64_t sub_1C010DE60()
{
  return MEMORY[0x1F4188298](sub_1C010DE7C, 0, 0);
}

uint64_t sub_1C010DE7C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C010DF04, v0 + 10464);
}

uint64_t sub_1C010DF04()
{
  return MEMORY[0x1F4188298](sub_1C010DF20, 0, 0);
}

uint64_t sub_1C010DF20()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C010DFAC, v0 + 10512);
}

uint64_t sub_1C010DFAC()
{
  return MEMORY[0x1F4188298](sub_1C010DFC8, 0, 0);
}

uint64_t sub_1C010DFC8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C010E054, v0 + 10560);
}

uint64_t sub_1C010E054()
{
  return MEMORY[0x1F4188298](sub_1C010E070, 0, 0);
}

uint64_t sub_1C010E070()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C010E0FC, v0 + 10608);
}

uint64_t sub_1C010E0FC()
{
  return MEMORY[0x1F4188298](sub_1C010E118, 0, 0);
}

uint64_t sub_1C010E118()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C010E1A4, v0 + 10656);
}

uint64_t sub_1C010E1A4()
{
  return MEMORY[0x1F4188298](sub_1C010E1C0, 0, 0);
}

uint64_t sub_1C010E1C0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C010E24C, v0 + 10704);
}

uint64_t sub_1C010E24C()
{
  return MEMORY[0x1F4188298](sub_1C010E268, 0, 0);
}

uint64_t sub_1C010E268()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C010E2F0, v0 + 10752);
}

uint64_t sub_1C010E2F0()
{
  return MEMORY[0x1F4188298](sub_1C010E30C, 0, 0);
}

uint64_t sub_1C010E30C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C010E394, v0 + 10800);
}

uint64_t sub_1C010E394()
{
  return MEMORY[0x1F4188298](sub_1C010E3B0, 0, 0);
}

uint64_t sub_1C010E3B0()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C010E734()
{
  return MEMORY[0x1F4188298](sub_1C010E750, 0, 0);
}

uint64_t sub_1C010E750()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C010E7D8, v0 + 10944);
}

uint64_t sub_1C010E7D8()
{
  return MEMORY[0x1F4188298](sub_1C010E7F4, 0, 0);
}

uint64_t sub_1C010E7F4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C010E87C, v0 + 10992);
}

uint64_t sub_1C010E87C()
{
  return MEMORY[0x1F4188298](sub_1C010E898, 0, 0);
}

uint64_t sub_1C010E898()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C010E920, v0 + 11040);
}

uint64_t sub_1C010E920()
{
  return MEMORY[0x1F4188298](sub_1C010E93C, 0, 0);
}

uint64_t sub_1C010E93C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C010E9C4, v0 + 11088);
}

uint64_t sub_1C010E9C4()
{
  return MEMORY[0x1F4188298](sub_1C010E9E0, 0, 0);
}

uint64_t sub_1C010E9E0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C010EA6C, v0 + 11136);
}

uint64_t sub_1C010EA6C()
{
  return MEMORY[0x1F4188298](sub_1C010EA88, 0, 0);
}

uint64_t sub_1C010EA88()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C010EB14, v0 + 11184);
}

uint64_t sub_1C010EB14()
{
  return MEMORY[0x1F4188298](sub_1C010EB30, 0, 0);
}

uint64_t sub_1C010EB30()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C010EBBC, v0 + 11232);
}

uint64_t sub_1C010EBBC()
{
  return MEMORY[0x1F4188298](sub_1C010EBD8, 0, 0);
}

uint64_t sub_1C010EBD8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C010EC64, v0 + 11280);
}

uint64_t sub_1C010EC64()
{
  return MEMORY[0x1F4188298](sub_1C010EC80, 0, 0);
}

uint64_t sub_1C010EC80()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C010ED0C, v0 + 11328);
}

uint64_t sub_1C010ED0C()
{
  return MEMORY[0x1F4188298](sub_1C010ED28, 0, 0);
}

uint64_t sub_1C010ED28()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C010EDB0, v0 + 11376);
}

uint64_t sub_1C010EDB0()
{
  return MEMORY[0x1F4188298](sub_1C010EDCC, 0, 0);
}

uint64_t sub_1C010EDCC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C010EE54, v0 + 11424);
}

uint64_t sub_1C010EE54()
{
  return MEMORY[0x1F4188298](sub_1C010EE70, 0, 0);
}

uint64_t sub_1C010EE70()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C010F1F4()
{
  return MEMORY[0x1F4188298](sub_1C010F210, 0, 0);
}

uint64_t sub_1C010F210()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C010F298, v0 + 11568);
}

uint64_t sub_1C010F298()
{
  return MEMORY[0x1F4188298](sub_1C010F2B4, 0, 0);
}

uint64_t sub_1C010F2B4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C010F33C, v0 + 11616);
}

uint64_t sub_1C010F33C()
{
  return MEMORY[0x1F4188298](sub_1C010F358, 0, 0);
}

uint64_t sub_1C010F358()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C010F3E0, v0 + 11664);
}

uint64_t sub_1C010F3E0()
{
  return MEMORY[0x1F4188298](sub_1C010F3FC, 0, 0);
}

uint64_t sub_1C010F3FC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C010F484, v0 + 11712);
}

uint64_t sub_1C010F484()
{
  return MEMORY[0x1F4188298](sub_1C010F4A0, 0, 0);
}

uint64_t sub_1C010F4A0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C010F52C, v0 + 11760);
}

uint64_t sub_1C010F52C()
{
  return MEMORY[0x1F4188298](sub_1C010F548, 0, 0);
}

uint64_t sub_1C010F548()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C010F5D4, v0 + 11808);
}

uint64_t sub_1C010F5D4()
{
  return MEMORY[0x1F4188298](sub_1C010F5F0, 0, 0);
}

uint64_t sub_1C010F5F0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C010F67C, v0 + 11856);
}

uint64_t sub_1C010F67C()
{
  return MEMORY[0x1F4188298](sub_1C010F698, 0, 0);
}

uint64_t sub_1C010F698()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C010F724, v0 + 11904);
}

uint64_t sub_1C010F724()
{
  return MEMORY[0x1F4188298](sub_1C010F740, 0, 0);
}

uint64_t sub_1C010F740()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C010F7CC, v0 + 11952);
}

uint64_t sub_1C010F7CC()
{
  return MEMORY[0x1F4188298](sub_1C010F7E8, 0, 0);
}

uint64_t sub_1C010F7E8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C010F870, v0 + 12000);
}

uint64_t sub_1C010F870()
{
  return MEMORY[0x1F4188298](sub_1C010F88C, 0, 0);
}

uint64_t sub_1C010F88C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C010F914, v0 + 12048);
}

uint64_t sub_1C010F914()
{
  return MEMORY[0x1F4188298](sub_1C010F930, 0, 0);
}

uint64_t sub_1C010F930()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C010FCB4()
{
  return MEMORY[0x1F4188298](sub_1C010FCD0, 0, 0);
}

uint64_t sub_1C010FCD0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C010FD58, v0 + 12192);
}

uint64_t sub_1C010FD58()
{
  return MEMORY[0x1F4188298](sub_1C010FD74, 0, 0);
}

uint64_t sub_1C010FD74()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C010FDFC, v0 + 12240);
}

uint64_t sub_1C010FDFC()
{
  return MEMORY[0x1F4188298](sub_1C010FE18, 0, 0);
}

uint64_t sub_1C010FE18()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C010FE9C, v0 + 12288);
}

uint64_t sub_1C010FE9C()
{
  return MEMORY[0x1F4188298](sub_1C010FEB8, 0, 0);
}

uint64_t sub_1C010FEB8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C010FF40, v0 + 12336);
}

uint64_t sub_1C010FF40()
{
  return MEMORY[0x1F4188298](sub_1C010FF5C, 0, 0);
}

uint64_t sub_1C010FF5C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C010FFE8, v0 + 12384);
}

uint64_t sub_1C010FFE8()
{
  return MEMORY[0x1F4188298](sub_1C0110004, 0, 0);
}

uint64_t sub_1C0110004()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C0110090, v0 + 12432);
}

uint64_t sub_1C0110090()
{
  return MEMORY[0x1F4188298](sub_1C01100AC, 0, 0);
}

uint64_t sub_1C01100AC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C0110138, v0 + 7776);
}

uint64_t sub_1C0110138()
{
  return MEMORY[0x1F4188298](sub_1C0110154, 0, 0);
}

uint64_t sub_1C0110154()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C01101E0, v0 + 12528);
}

uint64_t sub_1C01101E0()
{
  return MEMORY[0x1F4188298](sub_1C01101FC, 0, 0);
}

uint64_t sub_1C01101FC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C0110288, v0 + 12576);
}

uint64_t sub_1C0110288()
{
  return MEMORY[0x1F4188298](sub_1C01102A4, 0, 0);
}

uint64_t sub_1C01102A4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C011032C, v0 + 12624);
}

uint64_t sub_1C011032C()
{
  return MEMORY[0x1F4188298](sub_1C0110348, 0, 0);
}

uint64_t sub_1C0110348()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C01103D0, v0 + 12672);
}

uint64_t sub_1C01103D0()
{
  return MEMORY[0x1F4188298](sub_1C01103EC, 0, 0);
}

uint64_t sub_1C01103EC()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0110770()
{
  return MEMORY[0x1F4188298](sub_1C011078C, 0, 0);
}

uint64_t sub_1C011078C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C0110814, v0 + 12816);
}

uint64_t sub_1C0110814()
{
  return MEMORY[0x1F4188298](sub_1C0110830, 0, 0);
}

uint64_t sub_1C0110830()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C01108B8, v0 + 12864);
}

uint64_t sub_1C01108B8()
{
  return MEMORY[0x1F4188298](sub_1C01108D4, 0, 0);
}

uint64_t sub_1C01108D4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C011095C, v0 + 12912);
}

uint64_t sub_1C011095C()
{
  return MEMORY[0x1F4188298](sub_1C0110978, 0, 0);
}

uint64_t sub_1C0110978()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C0110A00, v0 + 12960);
}

uint64_t sub_1C0110A00()
{
  return MEMORY[0x1F4188298](sub_1C0110A1C, 0, 0);
}

uint64_t sub_1C0110A1C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C0110AA8, v0 + 13008);
}

uint64_t sub_1C0110AA8()
{
  return MEMORY[0x1F4188298](sub_1C0110AC4, 0, 0);
}

uint64_t sub_1C0110AC4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C0110B50, v0 + 13056);
}

uint64_t sub_1C0110B50()
{
  return MEMORY[0x1F4188298](sub_1C0110B6C, 0, 0);
}

uint64_t sub_1C0110B6C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C0110BF8, v0 + 13104);
}

uint64_t sub_1C0110BF8()
{
  return MEMORY[0x1F4188298](sub_1C0110C14, 0, 0);
}

uint64_t sub_1C0110C14()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C0110CA0, v0 + 13152);
}

uint64_t sub_1C0110CA0()
{
  return MEMORY[0x1F4188298](sub_1C0110CBC, 0, 0);
}

uint64_t sub_1C0110CBC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C0110D48, v0 + 13200);
}

uint64_t sub_1C0110D48()
{
  return MEMORY[0x1F4188298](sub_1C0110D64, 0, 0);
}

uint64_t sub_1C0110D64()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C0110DEC, v0 + 13248);
}

uint64_t sub_1C0110DEC()
{
  return MEMORY[0x1F4188298](sub_1C0110E08, 0, 0);
}

uint64_t sub_1C0110E08()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C0110E90, v0 + 13296);
}

uint64_t sub_1C0110E90()
{
  return MEMORY[0x1F4188298](sub_1C0110EAC, 0, 0);
}

uint64_t sub_1C0110EAC()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0111230()
{
  return MEMORY[0x1F4188298](sub_1C011124C, 0, 0);
}

uint64_t sub_1C011124C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C01112D4, v0 + 13440);
}

uint64_t sub_1C01112D4()
{
  return MEMORY[0x1F4188298](sub_1C01112F0, 0, 0);
}

uint64_t sub_1C01112F0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C0111378, v0 + 13488);
}

uint64_t sub_1C0111378()
{
  return MEMORY[0x1F4188298](sub_1C0111394, 0, 0);
}

uint64_t sub_1C0111394()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C011141C, v0 + 13536);
}

uint64_t sub_1C011141C()
{
  return MEMORY[0x1F4188298](sub_1C0111438, 0, 0);
}

uint64_t sub_1C0111438()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C01114C0, v0 + 13584);
}

uint64_t sub_1C01114C0()
{
  return MEMORY[0x1F4188298](sub_1C01114DC, 0, 0);
}

uint64_t sub_1C01114DC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C0111568, v0 + 13632);
}

uint64_t sub_1C0111568()
{
  return MEMORY[0x1F4188298](sub_1C0111584, 0, 0);
}

uint64_t sub_1C0111584()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C0111610, v0 + 13680);
}

uint64_t sub_1C0111610()
{
  return MEMORY[0x1F4188298](sub_1C011162C, 0, 0);
}

uint64_t sub_1C011162C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C01116B8, v0 + 13728);
}

uint64_t sub_1C01116B8()
{
  return MEMORY[0x1F4188298](sub_1C01116D4, 0, 0);
}

uint64_t sub_1C01116D4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C0111760, v0 + 13776);
}

uint64_t sub_1C0111760()
{
  return MEMORY[0x1F4188298](sub_1C011177C, 0, 0);
}

uint64_t sub_1C011177C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C0111808, v0 + 13824);
}

uint64_t sub_1C0111808()
{
  return MEMORY[0x1F4188298](sub_1C0111824, 0, 0);
}

uint64_t sub_1C0111824()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C01118AC, v0 + 13872);
}

uint64_t sub_1C01118AC()
{
  return MEMORY[0x1F4188298](sub_1C01118C8, 0, 0);
}

uint64_t sub_1C01118C8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C0111950, v0 + 13920);
}

uint64_t sub_1C0111950()
{
  return MEMORY[0x1F4188298](sub_1C011196C, 0, 0);
}

uint64_t sub_1C011196C()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0111CF0()
{
  return MEMORY[0x1F4188298](sub_1C0111D0C, 0, 0);
}

uint64_t sub_1C0111D0C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C0111D94, v0 + 14064);
}

uint64_t sub_1C0111D94()
{
  return MEMORY[0x1F4188298](sub_1C0111DB0, 0, 0);
}

uint64_t sub_1C0111DB0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C0111E38, v0 + 14112);
}

uint64_t sub_1C0111E38()
{
  return MEMORY[0x1F4188298](sub_1C0111E54, 0, 0);
}

uint64_t sub_1C0111E54()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C0111EDC, v0 + 14160);
}

uint64_t sub_1C0111EDC()
{
  return MEMORY[0x1F4188298](sub_1C0111EF8, 0, 0);
}

uint64_t sub_1C0111EF8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C0111F80, v0 + 14208);
}

uint64_t sub_1C0111F80()
{
  return MEMORY[0x1F4188298](sub_1C0111F9C, 0, 0);
}

uint64_t sub_1C0111F9C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C0112028, v0 + 14256);
}

uint64_t sub_1C0112028()
{
  return MEMORY[0x1F4188298](sub_1C0112044, 0, 0);
}

uint64_t sub_1C0112044()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C01120D0, v0 + 14304);
}

uint64_t sub_1C01120D0()
{
  return MEMORY[0x1F4188298](sub_1C01120EC, 0, 0);
}

uint64_t sub_1C01120EC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C0112178, v0 + 14352);
}

uint64_t sub_1C0112178()
{
  return MEMORY[0x1F4188298](sub_1C0112194, 0, 0);
}

uint64_t sub_1C0112194()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C0112220, v0 + 14400);
}

uint64_t sub_1C0112220()
{
  return MEMORY[0x1F4188298](sub_1C011223C, 0, 0);
}

uint64_t sub_1C011223C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C01122C8, v0 + 14448);
}

uint64_t sub_1C01122C8()
{
  return MEMORY[0x1F4188298](sub_1C01122E4, 0, 0);
}

uint64_t sub_1C01122E4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C011236C, v0 + 14496);
}

uint64_t sub_1C011236C()
{
  return MEMORY[0x1F4188298](sub_1C0112388, 0, 0);
}

uint64_t sub_1C0112388()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C0112410, v0 + 14544);
}

uint64_t sub_1C0112410()
{
  return MEMORY[0x1F4188298](sub_1C011242C, 0, 0);
}

uint64_t sub_1C011242C()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C01127B0()
{
  return MEMORY[0x1F4188298](sub_1C01127CC, 0, 0);
}

uint64_t sub_1C01127CC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C0112854, v0 + 14688);
}

uint64_t sub_1C0112854()
{
  return MEMORY[0x1F4188298](sub_1C0112870, 0, 0);
}

uint64_t sub_1C0112870()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C01128F8, v0 + 14736);
}

uint64_t sub_1C01128F8()
{
  return MEMORY[0x1F4188298](sub_1C0112914, 0, 0);
}

uint64_t sub_1C0112914()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C011299C, v0 + 14784);
}

uint64_t sub_1C011299C()
{
  return MEMORY[0x1F4188298](sub_1C01129B8, 0, 0);
}

uint64_t sub_1C01129B8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C0112A40, v0 + 14832);
}

uint64_t sub_1C0112A40()
{
  return MEMORY[0x1F4188298](sub_1C0112A5C, 0, 0);
}

uint64_t sub_1C0112A5C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C0112AE8, v0 + 14880);
}

uint64_t sub_1C0112AE8()
{
  return MEMORY[0x1F4188298](sub_1C0112B04, 0, 0);
}

uint64_t sub_1C0112B04()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C0112B90, v0 + 14928);
}

uint64_t sub_1C0112B90()
{
  return MEMORY[0x1F4188298](sub_1C0112BAC, 0, 0);
}

uint64_t sub_1C0112BAC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C0112C38, v0 + 14976);
}

uint64_t sub_1C0112C38()
{
  return MEMORY[0x1F4188298](sub_1C0112C54, 0, 0);
}

uint64_t sub_1C0112C54()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C0112CE0, v0 + 15024);
}

uint64_t sub_1C0112CE0()
{
  return MEMORY[0x1F4188298](sub_1C0112CFC, 0, 0);
}

uint64_t sub_1C0112CFC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C0112D88, v0 + 15072);
}

uint64_t sub_1C0112D88()
{
  return MEMORY[0x1F4188298](sub_1C0112DA4, 0, 0);
}

uint64_t sub_1C0112DA4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C0112E2C, v0 + 15120);
}

uint64_t sub_1C0112E2C()
{
  return MEMORY[0x1F4188298](sub_1C0112E48, 0, 0);
}

uint64_t sub_1C0112E48()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C0112ED0, v0 + 15168);
}

uint64_t sub_1C0112ED0()
{
  return MEMORY[0x1F4188298](sub_1C0112EEC, 0, 0);
}

uint64_t sub_1C0112EEC()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0113270()
{
  return MEMORY[0x1F4188298](sub_1C011328C, 0, 0);
}

uint64_t sub_1C011328C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C0113314, v0 + 15312);
}

uint64_t sub_1C0113314()
{
  return MEMORY[0x1F4188298](sub_1C0113330, 0, 0);
}

uint64_t sub_1C0113330()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C01133B8, v0 + 15360);
}

uint64_t sub_1C01133B8()
{
  return MEMORY[0x1F4188298](sub_1C01133D4, 0, 0);
}

uint64_t sub_1C01133D4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C011345C, v0 + 15408);
}

uint64_t sub_1C011345C()
{
  return MEMORY[0x1F4188298](sub_1C0113478, 0, 0);
}

uint64_t sub_1C0113478()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C0113500, v0 + 15456);
}

uint64_t sub_1C0113500()
{
  return MEMORY[0x1F4188298](sub_1C011351C, 0, 0);
}

uint64_t sub_1C011351C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C01135A8, v0 + 15504);
}

uint64_t sub_1C01135A8()
{
  return MEMORY[0x1F4188298](sub_1C01135C4, 0, 0);
}

uint64_t sub_1C01135C4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C0113650, v0 + 15552);
}

uint64_t sub_1C0113650()
{
  return MEMORY[0x1F4188298](sub_1C011366C, 0, 0);
}

uint64_t sub_1C011366C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C01136F8, v0 + 15600);
}

uint64_t sub_1C01136F8()
{
  return MEMORY[0x1F4188298](sub_1C0113714, 0, 0);
}

uint64_t sub_1C0113714()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C01137A0, v0 + 15648);
}

uint64_t sub_1C01137A0()
{
  return MEMORY[0x1F4188298](sub_1C01137BC, 0, 0);
}

uint64_t sub_1C01137BC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C0113848, v0 + 15696);
}

uint64_t sub_1C0113848()
{
  return MEMORY[0x1F4188298](sub_1C0113864, 0, 0);
}

uint64_t sub_1C0113864()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C01138EC, v0 + 15744);
}

uint64_t sub_1C01138EC()
{
  return MEMORY[0x1F4188298](sub_1C0113908, 0, 0);
}

uint64_t sub_1C0113908()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C0113990, v0 + 15792);
}

uint64_t sub_1C0113990()
{
  return MEMORY[0x1F4188298](sub_1C01139AC, 0, 0);
}

uint64_t sub_1C01139AC()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0113D30()
{
  return MEMORY[0x1F4188298](sub_1C0113D4C, 0, 0);
}

uint64_t sub_1C0113D4C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 8200, sub_1C0113DD4, v0 + 16080);
}

uint64_t sub_1C0113DD4()
{
  return MEMORY[0x1F4188298](sub_1C0113DF0, 0, 0);
}

uint64_t sub_1C0113DF0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 8296, sub_1C0113E78, v0 + 16128);
}

uint64_t sub_1C0113E78()
{
  return MEMORY[0x1F4188298](sub_1C0113E94, 0, 0);
}

uint64_t sub_1C0113E94()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 8392, sub_1C0113F1C, v0 + 16176);
}

uint64_t sub_1C0113F1C()
{
  return MEMORY[0x1F4188298](sub_1C0113F38, 0, 0);
}

uint64_t sub_1C0113F38()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 8488, sub_1C0113FC0, v0 + 16224);
}

uint64_t sub_1C0113FC0()
{
  return MEMORY[0x1F4188298](sub_1C0113FDC, 0, 0);
}

uint64_t sub_1C0113FDC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 8584, sub_1C0114068, v0 + 16272);
}

uint64_t sub_1C0114068()
{
  return MEMORY[0x1F4188298](sub_1C0114084, 0, 0);
}

uint64_t sub_1C0114084()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 6416, v0 + 8008, sub_1C0114110, v0 + 16320);
}

uint64_t sub_1C0114110()
{
  return MEMORY[0x1F4188298](sub_1C011412C, 0, 0);
}

uint64_t sub_1C011412C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 7056, v0 + 8632, sub_1C01141B8, v0 + 15984);
}

uint64_t sub_1C01141B8()
{
  return MEMORY[0x1F4188298](sub_1C01141D4, 0, 0);
}

uint64_t sub_1C01141D4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5776, v0 + 8536, sub_1C0114260, v0 + 15936);
}

uint64_t sub_1C0114260()
{
  return MEMORY[0x1F4188298](sub_1C011427C, 0, 0);
}

uint64_t sub_1C011427C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 8440, sub_1C0114308, v0 + 15888);
}

uint64_t sub_1C0114308()
{
  return MEMORY[0x1F4188298](sub_1C0114324, 0, 0);
}

uint64_t sub_1C0114324()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 8344, sub_1C01143AC, v0 + 15840);
}

uint64_t sub_1C01143AC()
{
  return MEMORY[0x1F4188298](sub_1C01143C8, 0, 0);
}

uint64_t sub_1C01143C8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 8248, sub_1C0114450, v0 + 12144);
}

uint64_t sub_1C0114450()
{
  return MEMORY[0x1F4188298](sub_1C011446C, 0, 0);
}

uint64_t sub_1C011446C()
{
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t FormatService.prefetch(content:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[357] = v3;
  v4[351] = a3;
  v4[345] = a2;
  v4[339] = a1;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[363] = v5;
  v4[369] = *(void *)(v5 + 64);
  v4[375] = swift_task_alloc();
  v4[381] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatContent.Resolved();
  v4[387] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[393] = v7;
  v4[399] = *(void *)(v7 + 64);
  v4[405] = swift_task_alloc();
  v4[411] = swift_task_alloc();
  v4[417] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0114950, 0, 0);
}

uint64_t sub_1C0114950()
{
  uint64_t v1 = v0[417];
  uint64_t v19 = v0[411];
  uint64_t v22 = v0[405];
  uint64_t v2 = v0[399];
  uint64_t v3 = v0[393];
  uint64_t v4 = v0[381];
  uint64_t v20 = v0[375];
  uint64_t v5 = v0[363];
  uint64_t v6 = v0[357];
  uint64_t v7 = v0[351];
  uint64_t v17 = v7;
  uint64_t v18 = v0[345];
  sub_1BFE338B4(v18, v1, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1BFE338B4(v7, v4, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v21 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v9 = (v2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + v9 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[418] = v11;
  sub_1C01054A0(v1, v11 + v8, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  *(void *)(v11 + v9) = v6;
  sub_1C01054A0(v4, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_retain();
  sub_1C0158D58(255, &qword_1EB879EA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, MEMORY[0x1E4FBB320]);
  swift_asyncLet_begin();
  sub_1BFE338B4(v18, v19, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1BFE338B4(v17, v20, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v12 = swift_allocObject();
  v0[419] = v12;
  sub_1C01054A0(v19, v12 + v8, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  *(void *)(v12 + v9) = v6;
  sub_1C01054A0(v20, v12 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_retain();
  sub_1BFEF9AD0(255, (unint64_t *)&unk_1EB890010, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, MEMORY[0x1E4FBB320]);
  swift_asyncLet_begin();
  unint64_t v13 = sub_1C01177A8(v18);
  uint64_t v14 = swift_allocObject();
  v0[420] = v14;
  *(void *)(v14 + 16) = v6;
  *(void *)(v14 + 24) = v13;
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  sub_1BFE338B4(v18, v22, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v15 = swift_allocObject();
  v0[421] = v15;
  *(void *)(v15 + 16) = v6;
  sub_1C01054A0(v22, v15 + ((v21 + 24) & ~v21), (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  return MEMORY[0x1F41881E0](v0 + 82, v0 + 333, sub_1C0114D5C, v0 + 334);
}

uint64_t sub_1C0114D5C(uint64_t a1, uint64_t a2)
{
  v3[422] = v2;
  if (v2)
  {
    return MEMORY[0x1F41881D0](v3 + 2, a2, sub_1C0115404, v3 + 340);
  }
  else
  {
    v3[423] = v3[333];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v3 + 242, v3 + 327, sub_1C0114E24, v3 + 328);
  }
}

uint64_t sub_1C0114E24()
{
  v1[424] = v0;
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C01156CC, 0, 0);
  }
  else
  {
    v1[425] = v1[327];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881D8](v1 + 162, v2, sub_1C0114ED8, v1 + 394);
  }
}

uint64_t sub_1C0114ED8(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41881D8](v2 + 16, a2, sub_1C0114EF4, v2 + 3200);
}

uint64_t sub_1C0114EF4()
{
  return MEMORY[0x1F4188298](sub_1C0114F10, 0, 0);
}

uint64_t sub_1C0114F10()
{
  uint64_t v23 = v0[423];
  uint64_t v24 = v0[425];
  uint64_t v1 = (int *)v0[387];
  uint64_t v2 = (void *)v0[345];
  uint64_t v3 = (void *)v0[339];
  uint64_t v21 = v2[1];
  uint64_t v22 = *v2;
  uint64_t v4 = v1[5];
  uint64_t v5 = (char *)v2 + v4;
  uint64_t v6 = (char *)v3 + v4;
  uint64_t v7 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v6, v5, v7);
  uint64_t v8 = *(void *)((char *)v2 + v1[11]);
  unint64_t v9 = *(void **)((char *)v2 + v1[12]);
  uint64_t v20 = *(void *)((char *)v2 + v1[13]);
  sub_1BFE338B4((uint64_t)v2 + v1[14], (uint64_t)v3 + v1[14], (uint64_t (*)(void))sub_1BFEE6554);
  unint64_t v10 = *(void **)((char *)v2 + v1[15]);
  char v19 = *((unsigned char *)v2 + v1[16]);
  uint64_t v11 = *(void *)((char *)v2 + v1[17]);
  uint64_t v12 = *(void *)((char *)v2 + v1[6]);
  uint64_t v13 = *(void *)((char *)v2 + v1[9]);
  uint64_t v18 = *(void *)((char *)v2 + v1[10]);
  sub_1BFE338B4((uint64_t)v2 + v1[18], (uint64_t)v3 + v1[18], (uint64_t (*)(void))sub_1BFEE3854);
  *uint64_t v3 = v22;
  v3[1] = v21;
  *(void *)((char *)v3 + v1[6]) = v12;
  *(void *)((char *)v3 + v1[7]) = v23;
  *(void *)((char *)v3 + v1[8]) = v24;
  *(void *)((char *)v3 + v1[9]) = v13;
  *(void *)((char *)v3 + v1[11]) = v8;
  *(void *)((char *)v3 + v1[12]) = v9;
  *(void *)((char *)v3 + v1[13]) = v20;
  *(void *)((char *)v3 + v1[15]) = v10;
  *((unsigned char *)v3 + v1[16]) = v19;
  *(void *)((char *)v3 + v1[17]) = v11;
  *(void *)((char *)v3 + v1[10]) = v18;
  id v14 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v15 = v9;
  swift_unknownObjectRetain();
  return MEMORY[0x1F41881D0](v0 + 2, v16, sub_1C0115144, v0 + 406);
}

uint64_t sub_1C0115144()
{
  return MEMORY[0x1F4188298](sub_1C0115160, 0, 0);
}

uint64_t sub_1C0115160()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v1, sub_1C01151D0, v0 + 3296);
}

uint64_t sub_1C01151D0()
{
  return MEMORY[0x1F4188298](sub_1C01151EC, 0, 0);
}

uint64_t sub_1C01151EC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 2616, sub_1C011526C, v0 + 2912);
}

uint64_t sub_1C011526C()
{
  return MEMORY[0x1F4188298](sub_1C0115288, 0, 0);
}

uint64_t sub_1C0115288()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 2664, sub_1C0115308, v0 + 2576);
}

uint64_t sub_1C0115308()
{
  return MEMORY[0x1F4188298](sub_1C0115324, 0, 0);
}

uint64_t sub_1C0115324()
{
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0115404()
{
  return MEMORY[0x1F4188298](sub_1C0115420, 0, 0);
}

uint64_t sub_1C0115420()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v1, sub_1C0115490, v0 + 2768);
}

uint64_t sub_1C0115490()
{
  return MEMORY[0x1F4188298](sub_1C01154AC, 0, 0);
}

uint64_t sub_1C01154AC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 2616, sub_1C011552C, v0 + 2816);
}

uint64_t sub_1C011552C()
{
  return MEMORY[0x1F4188298](sub_1C0115548, 0, 0);
}

uint64_t sub_1C0115548()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 2664, sub_1C01155C8, v0 + 2864);
}

uint64_t sub_1C01155C8()
{
  return MEMORY[0x1F4188298](sub_1C01155E4, 0, 0);
}

uint64_t sub_1C01155E4()
{
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C01156CC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 16, v1, sub_1C011573C, v0 + 2960);
}

uint64_t sub_1C011573C()
{
  return MEMORY[0x1F4188298](sub_1C0115758, 0, 0);
}

uint64_t sub_1C0115758()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v1, sub_1C01157C8, v0 + 3008);
}

uint64_t sub_1C01157C8()
{
  return MEMORY[0x1F4188298](sub_1C01157E4, 0, 0);
}

uint64_t sub_1C01157E4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 2616, sub_1C0115864, v0 + 3056);
}

uint64_t sub_1C0115864()
{
  return MEMORY[0x1F4188298](sub_1C0115880, 0, 0);
}

uint64_t sub_1C0115880()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 2664, sub_1C0115900, v0 + 3104);
}

uint64_t sub_1C0115900()
{
  return MEMORY[0x1F4188298](sub_1C011591C, 0, 0);
}

uint64_t sub_1C011591C()
{
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0115A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatContent.Resolved();
  v4[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[11] = v7;
  v4[12] = *(void *)(v7 + 64);
  v4[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0115B30, 0, 0);
}

uint64_t sub_1C0115B30()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  v0[2] = *(void *)(v7 + *(int *)(v0[10] + 28));
  sub_1BFE338B4(v7, v1, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1BFE338B4(v5, v4, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v6 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  v0[14] = v11;
  *(void *)(v11 + 16) = v8;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C01054A0(v4, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  sub_1C0158D58(0, &qword_1EB879EA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, MEMORY[0x1E4FBB320]);
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for FormatPackageInventory();
  uint64_t v16 = sub_1C0150838(&qword_1EB893B78, &qword_1EB879EA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory);
  *uint64_t v12 = v0;
  v12[1] = sub_1C0115D68;
  return MEMORY[0x1F415F048](&unk_1EA196D40, v11, v14, v15, v16);
}

uint64_t sub_1C0115D68(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v5 = sub_1C0115F48;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v5 = sub_1C0115ECC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0115ECC()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 136);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0115F48()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0115FB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  _OWORD v5[3] = a3;
  v5[6] = *a2;
  return MEMORY[0x1F4188298](sub_1C0115FE4, 0, 0);
}

uint64_t sub_1C0115FE4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = type metadata accessor for FormatContent.Resolved();
  uint64_t v3 = *(void *)(v1 + *(int *)(v2 + 36));
  uint64_t v4 = *(void *)(v1 + *(int *)(v2 + 44));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C01160A8;
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  return sub_1C0116218(v7, v3, v4, v6);
}

uint64_t sub_1C01160A8(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    return MEMORY[0x1F4188298](sub_1C01161F4, 0, 0);
  }
}

uint64_t sub_1C01161F4()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0116218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v5[12] = *v4;
  v5[13] = *(void *)(type metadata accessor for FormatOption() - 8);
  v5[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0116304, 0, 0);
}

uint64_t sub_1C0116304(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = v2;
  if (qword_1EB896B90 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 56);
  sub_1C014FD48((unint64_t *)&unk_1EB874650, a2, (void (*)(uint64_t))type metadata accessor for FormatService);
  sub_1C1516FBC();
  char v5 = *(unsigned char *)(v2 + 168);
  sub_1C0158D58(0, (unint64_t *)&qword_1EB87C700, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, MEMORY[0x1E4FAA880]);
  swift_unknownObjectRetain();
  swift_retain_n();
  uint64_t v6 = sub_1C1517F1C();
  *(void *)(v2 + 120) = v6;
  uint64_t v29 = v4;
  char v30 = 0;
  char v31 = v5;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  uint64_t v36 = 0;
  uint64_t v37 = v3;
  uint64_t v38 = v6;
  FormatPackageInventory.resources(context:)((uint64_t)&v29, v2 + 16);
  char v27 = v5;
  uint64_t v7 = *(void *)(v2 + 64);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = *(void *)(v2 + 104);
    uint64_t v10 = v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v12 = *(void *)(v2 + 72);
      uint64_t v13 = *(void *)(v2 + 56);
      sub_1BFE338B4(v10, *(void *)(v2 + 112), (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v29 = v13;
      char v30 = 0;
      char v31 = v5;
      long long v32 = 0u;
      long long v33 = 0u;
      long long v34 = 0u;
      long long v35 = 0u;
      uint64_t v36 = 0;
      uint64_t v37 = v12;
      uint64_t v38 = v6;
      swift_retain();
      sub_1BFF2871C((unint64_t *)(v2 + 16), (uint64_t)&v29);
      uint64_t v14 = *(void *)(v2 + 112);
      swift_release();
      sub_1BFDDF774(v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = *(void *)(v2 + 16);
  *(void *)(v2 + 128) = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v17 = *(void *)(v15 + 16);
  if (v17)
  {
    uint64_t v18 = *(void *)(type metadata accessor for FormatResource(0) - 8);
    uint64_t v19 = v15 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v20 = *(void *)(v18 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v21 = *(void *)(v2 + 72);
      uint64_t v29 = *(void *)(v2 + 56);
      char v30 = 0;
      char v31 = v27;
      long long v32 = 0u;
      long long v33 = 0u;
      long long v34 = 0u;
      long long v35 = 0u;
      uint64_t v36 = 0;
      uint64_t v37 = v21;
      uint64_t v38 = v6;
      FormatResource.loadableFonts(in:)((uint64_t)&v29);
      sub_1C1047AB8(v22);
      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    unint64_t v16 = v28;
  }
  uint64_t v23 = *(void *)(v2 + 80);
  uint64_t v24 = sub_1BFD43880(v16);
  swift_bridgeObjectRelease();
  *(void *)(v2 + 136) = *(void *)(v23 + 40);
  *(unsigned char *)(v2 + 169) = *(unsigned char *)(v23 + 48);
  *(void *)(v2 + 144) = FeedFontManager.load(fonts:downloadIfNeeded:)(v24);
  swift_bridgeObjectRelease();
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v2 + 152) = v25;
  *uint64_t v25 = v2;
  v25[1] = sub_1C01168B0;
  return MEMORY[0x1F415EBC8](v2 + 40);
}

uint64_t sub_1C01168B0()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0116C3C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C01169CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C01169CC()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = v0[6];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    type metadata accessor for FormatServiceError();
    sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
    swift_allocError();
    *uint64_t v2 = v1;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease_n();
    sub_1BFF1EAA0(0, 0);
    swift_unknownObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  sub_1BFF1EAA0(0, 0);
  swift_unknownObjectRelease();
  swift_release();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v7 = v0[7];
  return v6(v7);
}

uint64_t sub_1C0116C3C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  sub_1BFF1EAA0(0, 0);
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0116D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatContent.Resolved();
  v4[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[11] = v7;
  v4[12] = *(void *)(v7 + 64);
  v4[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0116E2C, 0, 0);
}

uint64_t sub_1C0116E2C()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  v0[2] = *(void *)(v7 + *(int *)(v0[10] + 32));
  sub_1BFE338B4(v7, v1, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1BFE338B4(v5, v4, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v6 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  v0[14] = v11;
  *(void *)(v11 + 16) = v8;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C01054A0(v4, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  sub_1BFEF9AD0(0, (unint64_t *)&unk_1EB890010, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, MEMORY[0x1E4FBB320]);
  uint64_t v14 = v13;
  uint64_t v15 = sub_1C014FEEC((unint64_t *)&qword_1EB890020, (unint64_t *)&unk_1EB890010, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer);
  *uint64_t v12 = v0;
  v12[1] = sub_1C011704C;
  return MEMORY[0x1F415F048](&unk_1EA196D18, v11, v14, &type metadata for FormatContentSubgroup.ResolvedContainer, v15);
}

uint64_t sub_1C011704C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v5 = sub_1C015C330;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v5 = sub_1C015C340;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C01171B0(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a3;
  long long v6 = a2[1];
  *(_OWORD *)(v5 + 48) = *a2;
  *(_OWORD *)(v5 + 64) = v6;
  long long v7 = a2[3];
  *(_OWORD *)(v5 + 80) = a2[2];
  *(_OWORD *)(v5 + 96) = v7;
  *(_OWORD *)(v5 + 112) = a2[4];
  return MEMORY[0x1F4188298](sub_1C01171EC, 0, 0);
}

uint64_t sub_1C01171EC()
{
  uint64_t v1 = v0[11];
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[10] & 0x7FFFFFFFFFFFFFFFLL;
  sub_1BFEE0A78();
  sub_1BFEE0A78();
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t v2 = *(void *)(v7 + *(int *)(type metadata accessor for FormatContent.Resolved() + 44));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C011739C;
  uint64_t v4 = v0[5];
  return sub_1C0116218(v6, v1, v2, v4);
}

uint64_t sub_1C011739C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1C0117738;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C01174C4;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C01174C4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 32);
  unint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = *v1;
  uint64_t v14 = v1[1];
  if ((*(void *)(v0 + 80) & 0x8000000000000000) != 0)
  {
    sub_1BFEE0A78();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v2 = v14;
    uint64_t v11 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C0033494();
    unint64_t v3 = v12 | 0x8000000000000000;
  }
  else
  {
    sub_1BFEE0A78();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v2 = v14;
    uint64_t v11 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C0033494();
    unint64_t v3 = v12;
  }
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 16);
  long long v6 = *(_OWORD *)(v0 + 48);
  long long v7 = *(_OWORD *)(v0 + 88);
  long long v8 = *(_OWORD *)(v0 + 104);
  *(void *)uint64_t v5 = v11;
  *(void *)(v5 + 8) = v2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = v3;
  *(_OWORD *)(v5 + 40) = v7;
  *(_OWORD *)(v5 + 56) = v8;
  *(void *)(v5 + 72) = v4;
  unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1C0117738()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1C01177A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (id *)((char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v72 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v67 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v61 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE6554(0);
  MEMORY[0x1F4188790](v9 - 8);
  BOOL v64 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v74 = (uint64_t)&v60 - v15;
  uint64_t v16 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v70 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v73 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v69 = (uint64_t)&v60 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v63 = (uint64_t)&v60 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v62 = (uint64_t)&v60 - v23;
  uint64_t v24 = type metadata accessor for FormatContent.Resolved();
  uint64_t v66 = *(int *)(v24 + 32);
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C0BF1170(v25);
  uint64_t v27 = a1;
  swift_bridgeObjectRelease();
  unint64_t v28 = sub_1C0102F0C(v26);
  uint64_t v65 = 0;
  uint64_t v29 = (uint64_t)v64;
  swift_bridgeObjectRelease();
  unint64_t v30 = v28;
  unint64_t v76 = v28;
  sub_1BFE338B4(v27 + *(int *)(v24 + 56), v29, (uint64_t (*)(void))sub_1BFEE6554);
  uint64_t v31 = v68;
  int v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 48))(v29, 1);
  uint64_t v72 = v16;
  if (v32 == 1)
  {
    sub_1BFDDF774(v29, (uint64_t (*)(void))sub_1BFEE6554);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v74, 1, 1, v16);
    uint64_t v33 = v16;
LABEL_4:
    sub_1BFDDF774(v74, (uint64_t (*)(void))sub_1BFECFC20);
    goto LABEL_10;
  }
  uint64_t v34 = v29 + *(int *)(v31 + 32);
  uint64_t v35 = v29;
  uint64_t v36 = v74;
  sub_1BFE338B4(v34, v74, (uint64_t (*)(void))sub_1BFECFC20);
  sub_1BFDDF774(v35, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
  int v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v36, 1, v16);
  uint64_t v33 = v16;
  if (v37 == 1) {
    goto LABEL_4;
  }
  uint64_t v38 = v62;
  sub_1C01054A0(v74, v62, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1BFE338B4(v38, v63, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v30 = sub_1C00313F4(0, *(void *)(v30 + 16) + 1, 1, v30);
  }
  unint64_t v40 = *(void *)(v30 + 16);
  unint64_t v39 = *(void *)(v30 + 24);
  if (v40 >= v39 >> 1) {
    unint64_t v30 = sub_1C00313F4(v39 > 1, v40 + 1, 1, v30);
  }
  *(void *)(v30 + 16) = v40 + 1;
  sub_1C01054A0(v63, v30+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v40, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  unint64_t v76 = v30;
  sub_1BFDDF774(v38, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v33 = v72;
LABEL_10:
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_1C0BF11C4(v41);
  swift_bridgeObjectRelease();
  uint64_t v75 = MEMORY[0x1E4FBC860];
  uint64_t v63 = *(void *)(v42 + 16);
  if (v63)
  {
    uint64_t v62 = v42 + 32;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56);
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
    uint64_t v60 = v42;
    swift_bridgeObjectRetain();
    uint64_t v45 = 0;
    uint64_t v71 = v2;
    do
    {
      uint64_t v46 = (void *)(v62 + 16 * v45);
      uint64_t v47 = *v46;
      uint64_t v48 = *(void *)(*v46 + 16);
      if (v48)
      {
        uint64_t v65 = *v46;
        uint64_t v66 = v45;
        uint64_t v49 = (char *)v46[1];
        uint64_t v50 = v61;
        uint64_t v51 = v47 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
        swift_bridgeObjectRetain_n();
        BOOL v64 = v49;
        swift_bridgeObjectRetain();
        uint64_t v74 = *(void *)(v50 + 72);
        uint64_t v52 = MEMORY[0x1E4FBC860];
        while (2)
        {
          sub_1BFE338B4(v51, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          sub_1BFE338B4((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:

              goto LABEL_24;
            case 3u:
              uint64_t v53 = v67;
              sub_1C01054A0((uint64_t)v4, v67, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
              sub_1BFE338B4(v53 + *(int *)(v68 + 32), (uint64_t)v13, (uint64_t (*)(void))sub_1BFECFC20);
              uint64_t v54 = v53;
              uint64_t v33 = v72;
              sub_1BFDDF774(v54, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
              goto LABEL_25;
            case 6u:
            case 7u:
              sub_1BFDDF774((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
              goto LABEL_24;
            case 8u:
              swift_bridgeObjectRelease();
              goto LABEL_24;
            default:
              swift_unknownObjectRelease();
LABEL_24:
              (*v43)(v13, 1, 1, v33);
LABEL_25:
              sub_1BFDDF774((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
              if ((*v44)(v13, 1, v33) == 1)
              {
                sub_1BFDDF774((uint64_t)v13, (uint64_t (*)(void))sub_1BFECFC20);
              }
              else
              {
                uint64_t v55 = v69;
                sub_1C01054A0((uint64_t)v13, v69, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
                sub_1C01054A0(v55, v73, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v52 = sub_1C00313F4(0, *(void *)(v52 + 16) + 1, 1, v52);
                }
                unint64_t v57 = *(void *)(v52 + 16);
                unint64_t v56 = *(void *)(v52 + 24);
                if (v57 >= v56 >> 1) {
                  uint64_t v52 = sub_1C00313F4(v56 > 1, v57 + 1, 1, v52);
                }
                *(void *)(v52 + 16) = v57 + 1;
                sub_1C01054A0(v73, v52+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v57, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
                uint64_t v33 = v72;
              }
              v51 += v74;
              if (--v48) {
                continue;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v45 = v66;
              break;
          }
          break;
        }
      }
      else
      {
        uint64_t v52 = MEMORY[0x1E4FBC860];
      }
      ++v45;
      sub_1BFDDFF34(v52);
      uint64_t v33 = v72;
    }
    while (v45 != v63);
    swift_bridgeObjectRelease_n();
    uint64_t v58 = v75;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v58 = MEMORY[0x1E4FBC860];
  }
  sub_1BFDDFF34(v58);
  return v76;
}

uint64_t sub_1C011813C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x1F4188298](sub_1C011815C, 0, 0);
}

uint64_t sub_1C011815C()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[52];
  uint64_t v3 = v1[53];
  __swift_project_boxed_opaque_existential_1(v1 + 49, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C0118268;
  uint64_t v5 = v0[3];
  return v7(v5, v2, v3);
}

uint64_t sub_1C0118268()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C0118360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x1F4188298](sub_1C0118380, 0, 0);
}

uint64_t sub_1C0118380()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[57];
  uint64_t v3 = v1[58];
  __swift_project_boxed_opaque_existential_1(v1 + 54, v2);
  type metadata accessor for FormatContent.Resolved();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C0BF1170(v4);
  v0[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C01184C0;
  return v8(v5, v2, v3);
}

uint64_t sub_1C01184C0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C01185D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C011870C, 0, 0);
}

uint64_t sub_1C011870C()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[9];
  uint64_t v19 = v0[11];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v1, 1, 1, v9);
  v0[2] = v8;
  sub_1BFE338B4(v1, v2, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v5, v4, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v11 = (v19 + *(unsigned __int8 *)(v6 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = swift_allocObject();
  v0[14] = v12;
  *(void *)(v12 + 16) = v7;
  sub_1C01054A0(v2, v12 + v10, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v4, v12 + v11, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[15] = v13;
  sub_1C0158D58(0, &qword_1EB87C328, (uint64_t (*)(uint64_t))sub_1BFEBC130, MEMORY[0x1E4FBB320]);
  uint64_t v15 = v14;
  uint64_t v16 = type metadata accessor for FormatPackageInventory();
  uint64_t v17 = sub_1C0150838(&qword_1EB894510, &qword_1EB87C328, (uint64_t (*)(uint64_t))sub_1BFEBC130);
  *uint64_t v13 = v0;
  v13[1] = sub_1C011897C;
  return MEMORY[0x1F415F048](&unk_1EA1971F8, v12, v15, v16, v17);
}

uint64_t sub_1C011897C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C0118B48;
  }
  else
  {
    uint64_t v6 = *(void *)(v4 + 104);
    swift_release();
    *(void *)(v4 + 136) = a1;
    sub_1BFDDF774(v6, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v5 = sub_1C0118AC4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0118AC4()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 136);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0118B48()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1BFF00BEC);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0118BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0118D28, 0, 0);
}

uint64_t sub_1C0118D28()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[9];
  uint64_t v19 = v0[11];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v1, 1, 1, v9);
  v0[2] = v8;
  sub_1BFE338B4(v1, v2, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v5, v4, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v11 = (v19 + *(unsigned __int8 *)(v6 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = swift_allocObject();
  v0[14] = v12;
  *(void *)(v12 + 16) = v7;
  sub_1C01054A0(v2, v12 + v10, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v4, v12 + v11, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[15] = v13;
  sub_1C0158D58(0, &qword_1EB87C328, (uint64_t (*)(uint64_t))sub_1BFEBC130, MEMORY[0x1E4FBB320]);
  uint64_t v15 = v14;
  uint64_t v16 = type metadata accessor for FormatPackageInventory();
  uint64_t v17 = sub_1C0150838(&qword_1EB894510, &qword_1EB87C328, (uint64_t (*)(uint64_t))sub_1BFEBC130);
  *uint64_t v13 = v0;
  v13[1] = sub_1C0118F98;
  return MEMORY[0x1F415F048](&unk_1EA196F40, v12, v15, v16, v17);
}

uint64_t sub_1C0118F98(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C015C344;
  }
  else
  {
    uint64_t v6 = *(void *)(v4 + 104);
    swift_release();
    *(void *)(v4 + 136) = a1;
    sub_1BFDDF774(v6, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v5 = sub_1C015C348;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C01190E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v11;
  *unint64_t v11 = v6;
  v11[1] = sub_1C0104C04;
  return sub_1C01191A8(a3, a4, a5, a6);
}

uint64_t sub_1C01191A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[21] = a4;
  v5[22] = v4;
  v5[19] = a2;
  v5[20] = a3;
  v5[18] = a1;
  sub_1C0158D58(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  v5[23] = swift_task_alloc();
  uint64_t v6 = sub_1C151631C();
  v5[24] = v6;
  v5[25] = *(void *)(v6 - 8);
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  uint64_t v7 = sub_1C1515FDC();
  v5[28] = v7;
  v5[29] = *(void *)(v7 - 8);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  sub_1BFF00BEC();
  v5[32] = swift_task_alloc();
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v5[37] = swift_task_alloc();
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  sub_1C0158DBC(0, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  v5[42] = swift_task_alloc();
  v5[43] = type metadata accessor for FormatArticleOverrides();
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  v5[47] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C01194A0, 0, 0);
}

uint64_t sub_1C01194A0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = FormatContent.requirements.getter();
  uint64_t v3 = Array<A>.articles.getter(v2);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 136) = v3;
  sub_1C0158D58(0, &qword_1EB880CC8, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, MEMORY[0x1E4FBB320]);
  sub_1C0150838(&qword_1EB880CD0, &qword_1EB880CC8, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle);
  unint64_t v4 = sub_1C151E92C();
  swift_bridgeObjectRelease();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 120) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 104) = v5;
  uint64_t v164 = v0 + 120;
  uint64_t v165 = (void *)(v0 + 104);
  unint64_t v163 = v4;
  uint64_t v133 = v1;
  if (*(unsigned char *)(v1 + 48))
  {
    if (v4 >> 62) {
      goto LABEL_71;
    }
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = (void *)(v0 + 104);
    if (!v6) {
      goto LABEL_74;
    }
    goto LABEL_4;
  }
  double v49 = *(double *)(v1 + 40);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v51 = (void *)(v0 + 104);
    if (!v50) {
      goto LABEL_74;
    }
  }
  else
  {
    uint64_t v50 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v51 = (void *)(v0 + 104);
    if (!v50) {
      goto LABEL_74;
    }
  }
  uint64_t v52 = 0;
  uint64_t v53 = *(void *)(v0 + 232);
  uint64_t v54 = *(void *)(v0 + 200);
  uint64_t v137 = *(void **)(v0 + 168);
  uint64_t v139 = *(void *)(v0 + 344);
  uint64_t v162 = (void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32);
  uint64_t v169 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
  unint64_t v171 = v4 & 0xC000000000000001;
  uint64_t v160 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  uint64_t v151 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  uint64_t v135 = (void (**)(uint64_t, void, uint64_t))(v53 + 32);
  uint64_t v129 = (void (**)(uint64_t, uint64_t))(v53 + 8);
  uint64_t v155 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
  uint64_t v156 = (void (**)(uint64_t, uint64_t))(v54 + 8);
  uint64_t v167 = v50;
  uint64_t v141 = *(void *)(v0 + 176);
  while (v171)
  {
    uint64_t v55 = MEMORY[0x1C18C7CB0](v52, v4);
    uint64_t v56 = v52 + 1;
    if (__OFADD__(v52, 1)) {
      goto LABEL_70;
    }
LABEL_39:
    uint64_t v57 = **(void **)(v0 + 144);
    if (*(void *)(v57 + 16))
    {
      uint64_t v59 = *(void *)(v55 + 16);
      uint64_t v58 = *(void *)(v55 + 24);
      swift_bridgeObjectRetain();
      unint64_t v60 = sub_1BFEF2D8C(v59, v58);
      if (v61)
      {
        uint64_t v62 = *(void **)(*(void *)(v57 + 56) + 8 * v60);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_getObjectType();
        id v63 = objc_msgSend(v62, sel_lastFetchedDate);
        if (v63)
        {
          BOOL v64 = v63;
          uint64_t v65 = *(void *)(v0 + 208);
          uint64_t v67 = *(void *)(v0 + 184);
          uint64_t v66 = *(void *)(v0 + 192);
          sub_1C15162BC();

          uint64_t v68 = *v162;
          (*v162)(v67, v65, v66);
          (*v169)(v67, 0, 1, v66);
          uint64_t v69 = v67;
          unint64_t v4 = v163;
          if ((*v160)(v69, 1, v66) != 1)
          {
            v68(*(void *)(v0 + 216), *(void *)(v0 + 184), *(void *)(v0 + 192));
            sub_1C151627C();
            if (v49 >= -v70)
            {
              uint64_t v73 = *(void *)(v0 + 360);
              uint64_t v74 = *(void *)(v0 + 336);
              uint64_t v75 = v55 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
              swift_beginAccess();
              sub_1C0153C08(v75, v74, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
              sub_1C01054A0(v74, v73, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
              id v76 = objc_msgSend(objc_msgSend(*(id *)(v141 + 152), sel_configurationManager), sel_configuration);
              uint64_t v22 = swift_unknownObjectRelease();
              uint64_t v149 = (uint64_t)v76;
              if (!v76) {
                goto LABEL_96;
              }
              uint64_t v77 = *(void *)(v0 + 352);
              uint64_t v78 = *(void *)(v0 + 336);
              uint64_t v143 = *(void *)(v0 + 272);
              uint64_t v145 = *(void *)(v0 + 224);
              uint64_t v147 = *(void **)(v141 + 136);
              uint64_t v79 = v137[9];
              uint64_t v80 = v137[11];
              uint64_t v130 = v137[10];
              uint64_t v132 = v137[8];
              sub_1C0153C08(v75, v78, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
              sub_1C01054A0(v78, v77, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
              sub_1BFE338B4(v77 + *(int *)(v139 + 36), v143, (uint64_t (*)(void))sub_1BFF00BEC);
              uint64_t v153 = v80;
              swift_bridgeObjectRetain();
              uint64_t v158 = v79;
              swift_bridgeObjectRetain();
              sub_1BFDDF774(v77, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
              uint64_t v81 = *v151;
              if ((*v151)(v143, 1, v145) == 1)
              {
                id v82 = objc_msgSend(v62, sel_routeURL);
                uint64_t v83 = *(void *)(v0 + 264);
                uint64_t v84 = *(void *)(v0 + 224);
                if (v82)
                {
                  char v85 = v82;
                  sub_1C1515F1C();

                  uint64_t v86 = *v155;
                  (*v155)(v83, 0, 1, v84);
                }
                else
                {
                  uint64_t v86 = *v155;
                  (*v155)(*(void *)(v0 + 264), 1, 1, v84);
                }
                uint64_t v89 = *(void *)(v0 + 272);
                sub_1C01054A0(*(void *)(v0 + 264), *(void *)(v0 + 280), (uint64_t (*)(void))sub_1BFF00BEC);
                sub_1BFDDF774(v89, (uint64_t (*)(void))sub_1BFF00BEC);
                if (v158)
                {
LABEL_62:
                  uint64_t v90 = *(void *)(v0 + 256);
                  uint64_t v91 = *(void *)(v0 + 224);
                  sub_1BFE338B4(*(void *)(v0 + 280), v90, (uint64_t (*)(void))sub_1BFF00BEC);
                  if (v81(v90, 1, v91) == 1)
                  {
                    sub_1BFDDF774(*(void *)(v0 + 256), (uint64_t (*)(void))sub_1BFF00BEC);
                    goto LABEL_64;
                  }
                  uint64_t v93 = *(void *)(v0 + 288);
                  uint64_t v94 = *(void *)(v0 + 240);
                  uint64_t v95 = *(void *)(v0 + 224);
                  (*v135)(v94, *(void *)(v0 + 256), v95);
                  sub_1C0C5D594(v94, v132, v158, v130, v153, v93);
                  (*v129)(v94, v95);
                  uint64_t v92 = 0;
LABEL_66:
                  uint64_t v96 = *(void *)(v0 + 360);
                  uint64_t v97 = *(void *)(v0 + 280);
                  uint64_t v98 = *(void *)(v0 + 288);
                  v86(v98, v92, 1, *(void *)(v0 + 224));
                  sub_1BFDDF774(v97, (uint64_t (*)(void))sub_1BFF00BEC);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  FCHeadlineProviding.overridden(by:configuration:assetManager:routeURL:)(v96, v149, v147, v98);
                  swift_unknownObjectRelease();
                  sub_1BFDDF774(v98, (uint64_t (*)(void))sub_1BFF00BEC);
                  uint64_t v99 = sub_1BFDDF774(v96, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
                  MEMORY[0x1C18C66D0](v99);
                  if (*(void *)((*(void *)(v0 + 120) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 120) & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    sub_1C151EC8C();
                  }
                  uint64_t v100 = *(void *)(v0 + 216);
                  uint64_t v101 = *(void *)(v0 + 192);
                  sub_1C151ECEC();
                  sub_1C151EBEC();
                  swift_unknownObjectRelease();
                  swift_release();
                  (*v156)(v100, v101);
                  unint64_t v4 = v163;
                  uint64_t v51 = (void *)(v0 + 104);
                  uint64_t v50 = v167;
                  goto LABEL_52;
                }
              }
              else
              {
                uint64_t v87 = *(void *)(v0 + 280);
                uint64_t v88 = *(void *)(v0 + 224);
                (*v135)(v87, *(void *)(v0 + 272), v88);
                uint64_t v86 = *v155;
                (*v155)(v87, 0, 1, v88);
                if (v158) {
                  goto LABEL_62;
                }
              }
LABEL_64:
              uint64_t v92 = 1;
              goto LABEL_66;
            }
            (*v156)(*(void *)(v0 + 216), *(void *)(v0 + 192));
            swift_unknownObjectRelease();
            goto LABEL_48;
          }
        }
        else
        {
          (*v169)(*(void *)(v0 + 184), 1, 1, *(void *)(v0 + 192));
        }
        uint64_t v71 = *(void *)(v0 + 184);
        swift_unknownObjectRelease();
        sub_1C01530F8(v71, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
LABEL_48:
        uint64_t v51 = (void *)(v0 + 104);
        uint64_t v50 = v167;
        goto LABEL_49;
      }
      swift_bridgeObjectRelease();
    }
LABEL_49:
    uint64_t v72 = swift_retain();
    MEMORY[0x1C18C66D0](v72);
    if (*(void *)((*v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_release();
LABEL_52:
    ++v52;
    if (v56 == v50) {
      goto LABEL_74;
    }
  }
  uint64_t v55 = *(void *)(v4 + 8 * v52 + 32);
  swift_retain();
  uint64_t v56 = v52 + 1;
  if (!__OFADD__(v52, 1)) {
    goto LABEL_39;
  }
LABEL_70:
  __break(1u);
LABEL_71:
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  uint64_t v7 = v165;
  if (v6)
  {
LABEL_4:
    uint64_t v8 = 0;
    uint64_t v9 = *(void *)(v0 + 232);
    uint64_t v136 = *(void **)(v0 + 168);
    uint64_t v138 = *(void *)(v0 + 344);
    unint64_t v166 = v4 & 0xC000000000000001;
    uint64_t v148 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v134 = (void (**)(uint64_t, void, uint64_t))(v9 + 32);
    unsigned __int8 v161 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v131 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v170 = v0;
    uint64_t v140 = v6;
    uint64_t v142 = *(void *)(v0 + 176);
    do
    {
      if (v166)
      {
        uint64_t v12 = MEMORY[0x1C18C7CB0](v8, v4);
        uint64_t v0 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_69;
        }
      }
      else
      {
        uint64_t v12 = *(void *)(v4 + 8 * v8 + 32);
        swift_retain();
        uint64_t v0 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
      }
      uint64_t v13 = **(void **)(v170 + 144);
      if (!*(void *)(v13 + 16)) {
        goto LABEL_6;
      }
      uint64_t v15 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1BFEF2D8C(v15, v14);
      if ((v17 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_6:
        uint64_t v10 = swift_retain();
        MEMORY[0x1C18C66D0](v10);
        if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
        goto LABEL_9;
      }
      uint64_t v159 = v0;
      uint64_t v18 = *(void *)(v170 + 376);
      uint64_t v19 = *(void *)(v170 + 336);
      uint64_t v168 = *(void **)(*(void *)(v13 + 56) + 8 * v16);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v20 = v12 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
      swift_beginAccess();
      sub_1C0153C08(v20, v19, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      sub_1C01054A0(v19, v18, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
      id v21 = objc_msgSend(objc_msgSend(*(id *)(v142 + 152), sel_configurationManager), sel_configuration);
      uint64_t v22 = swift_unknownObjectRelease();
      uint64_t v157 = (uint64_t)v21;
      if (!v21)
      {
        __break(1u);
LABEL_96:
        __break(1u);
        return MEMORY[0x1F415EBC8](v22);
      }
      uint64_t v23 = *(void *)(v170 + 368);
      uint64_t v24 = *(void *)(v170 + 336);
      uint64_t v25 = *(void *)(v170 + 312);
      uint64_t v150 = *(void *)(v170 + 224);
      swift_getObjectType();
      uint64_t v152 = *(void **)(v142 + 136);
      uint64_t v26 = v136[9];
      uint64_t v27 = v136[11];
      uint64_t v144 = v136[10];
      uint64_t v146 = v136[8];
      sub_1C0153C08(v20, v24, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      sub_1C01054A0(v24, v23, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
      sub_1BFE338B4(v23 + *(int *)(v138 + 36), v25, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v154 = v27;
      uint64_t v28 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFDDF774(v23, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
      uint64_t v29 = *v148;
      if ((*v148)(v25, 1, v150) == 1)
      {
        id v30 = objc_msgSend(v168, sel_routeURL);
        uint64_t v31 = *(void *)(v170 + 304);
        uint64_t v32 = *(void *)(v170 + 224);
        if (v30)
        {
          uint64_t v33 = v30;
          sub_1C1515F1C();

          uint64_t v34 = *v161;
          (*v161)(v31, 0, 1, v32);
        }
        else
        {
          uint64_t v34 = *v161;
          (*v161)(*(void *)(v170 + 304), 1, 1, v32);
        }
        uint64_t v44 = *(void *)(v170 + 312);
        sub_1C01054A0(*(void *)(v170 + 304), *(void *)(v170 + 320), (uint64_t (*)(void))sub_1BFF00BEC);
        sub_1BFDDF774(v44, (uint64_t (*)(void))sub_1BFF00BEC);
        if (v28)
        {
LABEL_22:
          int v37 = (void *)v170;
          uint64_t v38 = *(void *)(v170 + 296);
          uint64_t v39 = *(void *)(v170 + 224);
          sub_1BFE338B4(*(void *)(v170 + 320), v38, (uint64_t (*)(void))sub_1BFF00BEC);
          if (v29(v38, 1, v39) == 1)
          {
            sub_1BFDDF774(*(void *)(v170 + 296), (uint64_t (*)(void))sub_1BFF00BEC);
            uint64_t v40 = 1;
          }
          else
          {
            uint64_t v41 = *(void *)(v170 + 328);
            uint64_t v42 = *(void *)(v170 + 248);
            uint64_t v43 = *(void *)(v170 + 224);
            (*v134)(v42, *(void *)(v170 + 296), v43);
            sub_1C0C5D594(v42, v146, v28, v144, v154, v41);
            (*v131)(v42, v43);
            uint64_t v40 = 0;
          }
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v35 = *(void *)(v170 + 320);
        uint64_t v36 = *(void *)(v170 + 224);
        (*v134)(v35, *(void *)(v170 + 312), v36);
        uint64_t v34 = *v161;
        (*v161)(v35, 0, 1, v36);
        if (v28) {
          goto LABEL_22;
        }
      }
      uint64_t v40 = 1;
      int v37 = (void *)v170;
LABEL_28:
      uint64_t v45 = v37[47];
      uint64_t v46 = v37[40];
      uint64_t v47 = v37[41];
      v34(v47, v40, 1, v37[28]);
      sub_1BFDDF774(v46, (uint64_t (*)(void))sub_1BFF00BEC);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      FCHeadlineProviding.overridden(by:configuration:assetManager:routeURL:)(v45, v157, v152, v47);
      swift_unknownObjectRelease();
      sub_1BFDDF774(v47, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v48 = sub_1BFDDF774(v45, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
      MEMORY[0x1C18C66D0](v48);
      if (*(void *)((v37[15] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37[15] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      swift_unknownObjectRelease();
      unint64_t v4 = v163;
      uint64_t v7 = v165;
      uint64_t v6 = v140;
      uint64_t v0 = v159;
LABEL_9:
      swift_release();
      ++v8;
      BOOL v11 = v0 == v6;
      uint64_t v0 = v170;
    }
    while (!v11);
  }
LABEL_74:
  swift_bridgeObjectRelease();
  uint64_t v102 = type metadata accessor for FormatServiceOptions();
  sub_1BFFDEB20();
  uint64_t v103 = swift_allocObject();
  *(_OWORD *)(v103 + 16) = xmmword_1C152C7F0;
  unint64_t v104 = *(void *)(v0 + 120);
  *(void *)(v0 + 384) = v104;
  if (v104 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v105 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v105 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v106 = MEMORY[0x1E4FBB550];
  uint64_t v107 = MEMORY[0x1E4FBB5C8];
  *(void *)(v103 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v103 + 64) = v107;
  *(void *)(v103 + 32) = v105;
  unint64_t v108 = *(void *)(v0 + 104);
  *(void *)(v0 + 392) = v108;
  if (v108 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v109 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v109 = *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v110 = *(uint64_t **)(v0 + 160);
  *(void *)(v103 + 96) = v106;
  *(void *)(v103 + 104) = v107;
  *(void *)(v103 + 72) = v109;
  uint64_t v112 = *v110;
  uint64_t v111 = v110[1];
  *(void *)(v103 + 136) = MEMORY[0x1E4FBB1A0];
  *(void *)(v103 + 144) = sub_1BFE9C558();
  *(void *)(v103 + 112) = v112;
  *(void *)(v103 + 120) = v111;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  if (v108 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v113 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v113 = *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v113)
  {
    sub_1BFC66384(*(void *)(v0 + 176) + 16, v164 - 104);
    uint64_t v114 = *(void *)(v0 + 40);
    uint64_t v115 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v164 - 104), v114);
    unint64_t v116 = swift_bridgeObjectRetain();
    uint64_t v117 = sub_1C0101678(v116);
    swift_bridgeObjectRelease();
    double v118 = *(double *)(v133 + 40);
    int v119 = *(unsigned __int8 *)(v133 + 48);
    uint64_t v120 = self;
    if (v119 == 1)
    {
      if (v118 == 0.0) {
        id v121 = objc_msgSend(v120, sel_defaultCachePolicy, v129);
      }
      else {
        id v121 = objc_msgSend(v120, sel_cachedOnlyCachePolicy, v129);
      }
    }
    else
    {
      id v121 = objc_msgSend(v120, sel_cachePolicyWithSoftMaxAge_, v118);
    }
    uint64_t v126 = *(void *)(v0 + 152);
    id v127 = v121;
    *(void *)(v0 + 400) = HeadlineServiceType.headlines(for:failIfAnyMissing:cachePolicy:purpose:)(v117, 1, (uint64_t)v127, *(void *)(v126 + *(int *)(v102 + 48)), v114, v115);

    swift_bridgeObjectRelease();
    uint64_t v128 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v128;
    *uint64_t v128 = v0;
    v128[1] = sub_1C011A8EC;
    uint64_t v22 = v164 - 8;
    return MEMORY[0x1F415EBC8](v22);
  }
  uint64_t v123 = *(void *)(v0 + 152);
  uint64_t v122 = *(uint64_t **)(v0 + 160);
  swift_bridgeObjectRelease();
  unint64_t v172 = sub_1C012617C(v104, v123, v122, MEMORY[0x1E4FBC870]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v124 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v124(v172);
}

uint64_t sub_1C011A8EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1C011AEBC;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    uint64_t v3 = sub_1C011AA30;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C011AA30()
{
  unint64_t v1 = v0[14];
  if (v1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 0;
      uint64_t v34 = v0;
      unint64_t v36 = v1 & 0xC000000000000001;
      unint64_t v4 = (void *)MEMORY[0x1E4FBC868];
      unint64_t v35 = v1;
      while (1)
      {
        if (v36)
        {
          uint64_t v7 = (void *)MEMORY[0x1C18C7CB0](v3, v1);
          uint64_t v8 = v3 + 1;
          if (__OFADD__(v3, 1)) {
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v7 = (void *)swift_unknownObjectRetain();
          uint64_t v8 = v3 + 1;
          if (__OFADD__(v3, 1))
          {
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        unint64_t v1 = v2;
        uint64_t v0 = v7;
        id v9 = objc_msgSend(v7, sel_identifier);
        uint64_t v10 = sub_1C151E62C();
        uint64_t v12 = v11;

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v15 = sub_1BFEF2D8C(v10, v12);
        uint64_t v16 = v4[2];
        BOOL v17 = (v14 & 1) == 0;
        uint64_t v18 = v16 + v17;
        if (__OFADD__(v16, v17)) {
          goto LABEL_27;
        }
        char v19 = v14;
        if (v4[3] >= v18)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if (v14) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_1C106AF80();
            if (v19) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_1C1055408(v18, isUniquelyReferenced_nonNull_native);
          unint64_t v20 = sub_1BFEF2D8C(v10, v12);
          if ((v19 & 1) != (v21 & 1))
          {
            return sub_1C1520CFC();
          }
          unint64_t v15 = v20;
          if (v19)
          {
LABEL_4:
            uint64_t v5 = v4[7];
            swift_unknownObjectRelease();
            *(void *)(v5 + 8 * v15) = v0;
            goto LABEL_5;
          }
        }
        v4[(v15 >> 6) + 8] |= 1 << v15;
        uint64_t v22 = (uint64_t *)(v4[6] + 16 * v15);
        *uint64_t v22 = v10;
        v22[1] = v12;
        *(void *)(v4[7] + 8 * v15) = v0;
        uint64_t v23 = v4[2];
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v23 + 1;
        if (v24) {
          goto LABEL_28;
        }
        v4[2] = v25;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v3;
        uint64_t v2 = v1;
        BOOL v6 = v8 == v1;
        unint64_t v1 = v35;
        if (v6)
        {
          swift_bridgeObjectRelease();
          uint64_t v0 = v34;
          goto LABEL_31;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v4 = (void *)MEMORY[0x1E4FBC868];
LABEL_31:
  uint64_t v28 = (void *)v0[21];
  uint64_t v27 = v0[22];
  uint64_t v30 = v0[19];
  uint64_t v29 = (uint64_t *)v0[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  unint64_t v31 = swift_bridgeObjectRetain();
  unint64_t v32 = sub_1C0149DAC(v31, (uint64_t)v4, v27, v28);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFE52C14(v0[15]);
  unint64_t v37 = sub_1C012617C(v32, v30, v29, MEMORY[0x1E4FBC870]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = (uint64_t (*)(unint64_t))v0[1];
  return v33(v37);
}

uint64_t sub_1C011AEBC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C011B034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C0104C04;
  v10[12] = a5;
  v10[13] = a2;
  v10[10] = a3;
  v10[11] = a4;
  return MEMORY[0x1F4188298](sub_1C011B120, 0, 0);
}

uint64_t sub_1C011B0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  return MEMORY[0x1F4188298](sub_1C011B120, 0, 0);
}

uint64_t sub_1C011B120()
{
  unint64_t v2 = v0[12];
  uint64_t v3 = FormatContent.requirements.getter();
  uint64_t v4 = Array<A>.articleLists.getter(v3);
  swift_bridgeObjectRelease();
  uint64_t v73 = v0;
  v0[7] = v4;
  unint64_t v5 = (unint64_t)(v0 + 7);
  sub_1C0158D58(0, &qword_1EB88FFC0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleList, MEMORY[0x1E4FBB320]);
  sub_1C0150838(&qword_1EB88FFC8, &qword_1EB88FFC0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleList);
  unint64_t v68 = v5;
  unint64_t v6 = sub_1C151E92C();
  swift_bridgeObjectRelease();
  uint64_t v7 = FormatContent.requirements.getter();
  unint64_t v8 = Array<A>.articles.getter(v7);
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
  unint64_t v72 = v6;
  if (v9)
  {
    uint64_t v78 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
    {
      __break(1u);
      goto LABEL_74;
    }
    uint64_t v11 = v10;
    uint64_t v12 = 0;
    uint64_t v13 = v78;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        uint64_t v14 = MEMORY[0x1C18C7CB0](v12, v8);
      }
      else
      {
        uint64_t v14 = *(void *)(v8 + 8 * v12 + 32);
        swift_retain();
      }
      uint64_t v16 = *(void *)(v14 + 16);
      uint64_t v15 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      unint64_t v18 = *(void *)(v78 + 16);
      unint64_t v17 = *(void *)(v78 + 24);
      if (v18 >= v17 >> 1) {
        sub_1BFF661B8(v17 > 1, v18 + 1, 1);
      }
      ++v12;
      *(void *)(v78 + 16) = v18 + 1;
      unint64_t v19 = v78 + 16 * v18;
      *(void *)(v19 + 32) = v16;
      *(void *)(v19 + 40) = v15;
    }
    while (v9 != v12);
    swift_bridgeObjectRelease();
    uint64_t v10 = v11;
    unint64_t v6 = v72;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  unint64_t v5 = (unint64_t)v73;
  uint64_t v71 = sub_1BFEF4060(v13);
  v73[14] = v71;
  swift_bridgeObjectRelease();
  uint64_t v74 = (void *)sub_1C018D180(v10);
  v73[8] = v10;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_16;
    }
LABEL_51:
    swift_bridgeObjectRelease();
    unint64_t v2 = MEMORY[0x1E4FBC860];
LABEL_52:
    v73[15] = v2;
    v73[16] = v74;
    uint64_t v1 = type metadata accessor for FormatServiceOptions();
    sub_1BFFDEB20();
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1C152C7F0;
    uint64_t v47 = v74[2];
    uint64_t v48 = MEMORY[0x1E4FBB550];
    uint64_t v49 = MEMORY[0x1E4FBB5C8];
    *(void *)(v46 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v46 + 64) = v49;
    *(void *)(v46 + 32) = v47;
    unint64_t v50 = v2 >> 62;
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v51 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v52 = (uint64_t *)v73[12];
    *(void *)(v46 + 96) = v48;
    *(void *)(v46 + 104) = v49;
    *(void *)(v46 + 72) = v51;
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    *(void *)(v46 + 136) = MEMORY[0x1E4FBB1A0];
    *(void *)(v46 + 144) = sub_1BFE9C558();
    *(void *)(v46 + 112) = v54;
    *(void *)(v46 + 120) = v53;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    if (v50)
    {
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v55 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v8 = MEMORY[0x1E4FBC860];
    if (!v55)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v66 = (uint64_t (*)(void *))v73[1];
      return v66(v74);
    }
    sub_1BFC66384(v73[13] + 16, v68 - 40);
    uint64_t v10 = v73[5];
    unint64_t v5 = v73[6];
    __swift_project_boxed_opaque_existential_1((void *)(v68 - 40), v10);
    if (!v50)
    {
      uint64_t v56 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      unint64_t v75 = v5;
      uint64_t v77 = v10;
      if (v56)
      {
LABEL_59:
        uint64_t v57 = sub_1BFF661B8(0, v56 & ~(v56 >> 63), 0);
        if (v56 < 0)
        {
          __break(1u);
          return MEMORY[0x1F415EBC8](v57);
        }
        uint64_t v58 = 0;
        unint64_t v59 = v8;
        do
        {
          if ((v2 & 0xC000000000000001) != 0)
          {
            uint64_t v60 = MEMORY[0x1C18C7CB0](v58, v2);
          }
          else
          {
            uint64_t v60 = *(void *)(v2 + 8 * v58 + 32);
            swift_retain();
          }
          uint64_t v61 = *(void *)(v60 + 16);
          uint64_t v62 = *(void *)(v60 + 24);
          swift_bridgeObjectRetain();
          swift_release();
          unint64_t v64 = *(void *)(v59 + 16);
          unint64_t v63 = *(void *)(v59 + 24);
          if (v64 >= v63 >> 1) {
            sub_1BFF661B8(v63 > 1, v64 + 1, 1);
          }
          ++v58;
          *(void *)(v59 + 16) = v64 + 1;
          unint64_t v65 = v59 + 16 * v64;
          *(void *)(v65 + 32) = v61;
          *(void *)(v65 + 40) = v62;
        }
        while (v56 != v58);
        swift_bridgeObjectRelease();
LABEL_76:
        v73[17] = (*(uint64_t (**)(unint64_t, void, uint64_t))(v75 + 16))(v59, *(void *)(v73[11] + *(int *)(v1 + 48)), v77);
        swift_bridgeObjectRelease();
        uint64_t v67 = (void *)swift_task_alloc();
        v73[18] = v67;
        *uint64_t v67 = v73;
        v67[1] = sub_1C011BA78;
        uint64_t v57 = v68 + 16;
        return MEMORY[0x1F415EBC8](v57);
      }
LABEL_75:
      swift_bridgeObjectRelease();
      unint64_t v59 = MEMORY[0x1E4FBC860];
      goto LABEL_76;
    }
LABEL_74:
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1C15204BC();
    unint64_t v75 = v5;
    uint64_t v77 = v10;
    if (v56) {
      goto LABEL_59;
    }
    goto LABEL_75;
  }
  unint64_t v2 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_51;
  }
LABEL_16:
  uint64_t v20 = 0;
  char v21 = (unint64_t *)(v68 + 8);
  uint64_t v1 = v73[10];
  unint64_t v76 = v6 & 0xC000000000000001;
  unint64_t v70 = v2;
  uint64_t v69 = v1;
  while (1)
  {
    if (v76)
    {
      unint64_t v8 = MEMORY[0x1C18C7CB0](v20, v6);
      uint64_t v23 = v20 + 1;
      if (__OFADD__(v20, 1)) {
        goto LABEL_46;
      }
    }
    else
    {
      unint64_t v8 = *(void *)(v6 + 8 * v20 + 32);
      swift_retain();
      uint64_t v23 = v20 + 1;
      if (__OFADD__(v20, 1))
      {
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
    }
    uint64_t v24 = *(void *)(v1 + 8);
    if (!*(void *)(v24 + 16)) {
      goto LABEL_33;
    }
    uint64_t v25 = *(void *)(v8 + 16);
    uint64_t v26 = *(void *)(v8 + 24);
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1BFEF2D8C(v25, v26);
    if ((v28 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_33:
      uint64_t v40 = swift_retain();
      MEMORY[0x1C18C66D0](v40);
      unint64_t v5 = *(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v5 >= *(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      swift_release();
      goto LABEL_19;
    }
    uint64_t v29 = (uint64_t *)v73[12];
    uint64_t v1 = v73[11];
    unint64_t v30 = *(void *)(*(void *)(v24 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void *)(v8 + 16);
    uint64_t v31 = *(void *)(v8 + 24);
    swift_bridgeObjectRetain();
    unint64_t v2 = sub_1C012617C(v30, v1, v29, v71);
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v6 = v32;
    unint64_t v5 = sub_1BFEF2D8C(v32, v31);
    uint64_t v35 = v74[2];
    BOOL v36 = (v34 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36)) {
      goto LABEL_47;
    }
    uint64_t v1 = v34;
    if (v74[3] < v37) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v34 & 1) == 0) {
        goto LABEL_38;
      }
    }
    else
    {
      sub_1C106AF98();
      if ((v1 & 1) == 0)
      {
LABEL_38:
        v74[(v5 >> 6) + 8] |= 1 << v5;
        uint64_t v41 = (unint64_t *)(v74[6] + 16 * v5);
        *uint64_t v41 = v6;
        v41[1] = v31;
        *(void *)(v74[7] + 8 * v5) = v2;
        uint64_t v42 = v74[2];
        BOOL v43 = __OFADD__(v42, 1);
        uint64_t v44 = v42 + 1;
        if (v43) {
          goto LABEL_48;
        }
        v74[2] = v44;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      }
    }
LABEL_17:
    uint64_t v22 = v74[7];
    v5 *= 8;
    swift_bridgeObjectRelease();
    *(void *)(v22 + v5) = v2;
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    char v21 = (unint64_t *)(v68 + 8);
    unint64_t v2 = v70;
    uint64_t v1 = v69;
    unint64_t v6 = v72;
LABEL_19:
    ++v20;
    if (v23 == v2)
    {
      swift_bridgeObjectRelease();
      unint64_t v2 = *v21;
      goto LABEL_52;
    }
  }
  sub_1C1055474(v37, isUniquelyReferenced_nonNull_native);
  unint64_t v38 = sub_1BFEF2D8C(v6, v31);
  if ((v1 & 1) == (v39 & 1))
  {
    unint64_t v5 = v38;
    if ((v1 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_17;
  }
  return sub_1C1520CFC();
}

uint64_t sub_1C011BA78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1C011BF78;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    uint64_t v3 = sub_1C011BBCC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1C011BBCC()
{
  int64_t v1 = 0;
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v40 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(*(void *)(v0 + 72) + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & v3;
  int64_t v41 = (unint64_t)(63 - v5) >> 6;
  uint64_t v7 = *(void **)(v0 + 128);
  while (1)
  {
    if (v6)
    {
      uint64_t v44 = (v6 - 1) & v6;
      int64_t v45 = v1;
      unint64_t v9 = __clz(__rbit64(v6)) | (v1 << 6);
      goto LABEL_22;
    }
    int64_t v10 = v1 + 1;
    if (__OFADD__(v1, 1)) {
      goto LABEL_42;
    }
    if (v10 >= v41) {
      break;
    }
    unint64_t v11 = *(void *)(v40 + 8 * v10);
    int64_t v12 = v1 + 1;
    if (!v11)
    {
      int64_t v12 = v1 + 2;
      if (v1 + 2 >= v41) {
        break;
      }
      unint64_t v11 = *(void *)(v40 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v1 + 3;
        if (v1 + 3 >= v41) {
          break;
        }
        unint64_t v11 = *(void *)(v40 + 8 * v12);
        if (!v11)
        {
          uint64_t v13 = v1 + 4;
          if (v1 + 4 >= v41) {
            break;
          }
          unint64_t v11 = *(void *)(v40 + 8 * v13);
          if (!v11)
          {
            while (1)
            {
              int64_t v12 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_43;
              }
              if (v12 >= v41) {
                goto LABEL_34;
              }
              unint64_t v11 = *(void *)(v40 + 8 * v12);
              ++v13;
              if (v11) {
                goto LABEL_21;
              }
            }
          }
          int64_t v12 = v1 + 4;
        }
      }
    }
LABEL_21:
    uint64_t v44 = (v11 - 1) & v11;
    int64_t v45 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_22:
    uint64_t v14 = 8 * v9;
    unint64_t v15 = *(void *)(*(void *)(v43 + 56) + v14);
    id v16 = *(id *)(*(void *)(v43 + 48) + v14);
    swift_bridgeObjectRetain();
    id v17 = objc_msgSend(v16, sel_identifier);
    if (!v17) {
      goto LABEL_44;
    }
    unint64_t v18 = v17;
    uint64_t v19 = v42[14];
    uint64_t v20 = v42[11];
    char v21 = (uint64_t *)v42[12];
    uint64_t v22 = sub_1C151E62C();
    uint64_t v24 = v23;

    unint64_t v25 = sub_1C012617C(v15, v20, v21, v19);
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = sub_1BFEF2D8C(v22, v24);
    uint64_t v29 = v7[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return;
    }
    char v32 = v27;
    if (v7[3] >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v27) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1C106AF98();
        if (v32) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1C1055474(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_1BFEF2D8C(v22, v24);
      if ((v32 & 1) != (v34 & 1))
      {
        sub_1C1520CFC();
        return;
      }
      unint64_t v28 = v33;
      if (v32)
      {
LABEL_4:
        uint64_t v8 = v7[7];
        swift_bridgeObjectRelease();
        *(void *)(v8 + 8 * v28) = v25;
        goto LABEL_5;
      }
    }
    v7[(v28 >> 6) + 8] |= 1 << v28;
    uint64_t v35 = (uint64_t *)(v7[6] + 16 * v28);
    *uint64_t v35 = v22;
    v35[1] = v24;
    *(void *)(v7[7] + 8 * v28) = v25;
    uint64_t v36 = v7[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_41;
    }
    v7[2] = v38;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    unint64_t v6 = v44;
    int64_t v1 = v45;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v39 = (void (*)(void *))v42[1];
  v39(v7);
}

uint64_t sub_1C011BF78()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  int64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C011BFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  int64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *int64_t v10 = v5;
  v10[1] = sub_1C0104C04;
  v10[11] = a5;
  v10[12] = a2;
  v10[9] = a3;
  v10[10] = a4;
  return MEMORY[0x1F4188298](sub_1C011C0C8, 0, 0);
}

uint64_t sub_1C011C0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  return MEMORY[0x1F4188298](sub_1C011C0C8, 0, 0);
}

uint64_t sub_1C011C0C8()
{
  uint64_t v1 = FormatContent.requirements.getter();
  uint64_t v2 = Array<A>.issues.getter(v1);
  swift_bridgeObjectRelease();
  v0[2] = v2;
  sub_1C0158D58(0, &qword_1EB880CB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssue, MEMORY[0x1E4FBB320]);
  sub_1C0150838(&qword_1EB880CB8, &qword_1EB880CB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssue);
  unint64_t v3 = sub_1C151E92C();
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  v0[3] = MEMORY[0x1E4FBC860];
  unint64_t v6 = v0 + 3;
  v0[4] = v5;
  uint64_t v7 = v0 + 4;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204BC();
    uint64_t v4 = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        uint64_t v47 = v0;
        unint64_t v10 = v3 & 0xC000000000000001;
        uint64_t v11 = *(void *)(v0[9] + 16);
        uint64_t v48 = v0 + 3;
        unint64_t v49 = v3;
        unint64_t v51 = v3 & 0xC000000000000001;
        uint64_t v52 = v8;
        uint64_t v50 = v11;
        while (1)
        {
          if (v10)
          {
            uint64_t v13 = (void *)MEMORY[0x1C18C7CB0](v9, v3);
            if (!*(void *)(v11 + 16)) {
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t v13 = *(void **)(v3 + 8 * v9 + 32);
            swift_retain();
            if (!*(void *)(v11 + 16)) {
              goto LABEL_6;
            }
          }
          uint64_t v14 = v13[2];
          uint64_t v15 = v13[3];
          swift_bridgeObjectRetain();
          unint64_t v16 = sub_1BFEF2D8C(v14, v15);
          if (v17)
          {
            id v18 = *(id *)(*(void *)(v11 + 56) + 8 * v16);
            swift_bridgeObjectRelease();
            uint64_t v19 = v13[7];
            if (v13[5])
            {
              id v20 = objc_allocWithZone(MEMORY[0x1E4F7E510]);
              swift_bridgeObjectRetain_n();
              id v21 = v18;
              swift_bridgeObjectRetain_n();
              uint64_t v22 = (void *)sub_1C151E5EC();
              swift_bridgeObjectRelease();
              if (!v19)
              {
                uint64_t v23 = 0;
                goto LABEL_21;
              }
LABEL_20:
              uint64_t v23 = (void *)sub_1C151E5EC();
              swift_bridgeObjectRelease();
LABEL_21:
              id v25 = objc_msgSend(v20, sel_initWithTitle_issueDescription_, v22, v23);

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E4F8]), sel_initWithIssue_overrides_, v18, v25);

              swift_bridgeObjectRelease();
              id v26 = (id)swift_bridgeObjectRelease();
              unint64_t v6 = v48;
              unint64_t v3 = v49;
            }
            else
            {
              if (v19)
              {
                id v20 = objc_allocWithZone(MEMORY[0x1E4F7E510]);
                swift_bridgeObjectRetain_n();
                id v24 = v18;
                uint64_t v22 = 0;
                goto LABEL_20;
              }
              id v26 = v18;
            }
            MEMORY[0x1C18C66D0](v26);
            uint64_t v8 = v52;
            if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();

            uint64_t v11 = v50;
            unint64_t v10 = v51;
            goto LABEL_9;
          }
          swift_bridgeObjectRelease();
LABEL_6:
          uint64_t v12 = swift_retain();
          MEMORY[0x1C18C66D0](v12);
          if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
LABEL_9:
          ++v9;
          swift_release();
          if (v8 == v9)
          {
            swift_bridgeObjectRelease();
            unint64_t v27 = *v6;
            uint64_t v0 = v47;
            goto LABEL_29;
          }
        }
      }
      __break(1u);
      return MEMORY[0x1F415EBC8](v4);
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v27 = MEMORY[0x1E4FBC860];
LABEL_29:
  v0[13] = v27;
  type metadata accessor for FormatServiceOptions();
  sub_1BFFDEB20();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C152C7F0;
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v30 = MEMORY[0x1E4FBB550];
  uint64_t v31 = MEMORY[0x1E4FBB5C8];
  *(void *)(v28 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v28 + 64) = v31;
  *(void *)(v28 + 32) = v29;
  unint64_t v32 = v0[4];
  v0[14] = v32;
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  char v34 = (uint64_t *)v0[11];
  *(void *)(v28 + 96) = v30;
  *(void *)(v28 + 104) = v31;
  *(void *)(v28 + 72) = v33;
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *(void *)(v28 + 136) = MEMORY[0x1E4FBB1A0];
  *(void *)(v28 + 144) = sub_1BFE9C558();
  *(void *)(v28 + 112) = v36;
  *(void *)(v28 + 120) = v35;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v43)
    {
LABEL_35:
      BOOL v37 = (void *)v0[12];
      uint64_t v38 = v37[10];
      uint64_t v39 = v37[11];
      __swift_project_boxed_opaque_existential_1(v37 + 7, v38);
      unint64_t v40 = swift_bridgeObjectRetain();
      uint64_t v41 = sub_1C0101678(v40);
      swift_bridgeObjectRelease();
      v0[15] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 8))(v41, v38, v39);
      swift_bridgeObjectRelease();
      uint64_t v42 = (void *)swift_task_alloc();
      v0[16] = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_1C011C7EC;
      uint64_t v4 = (uint64_t)(v0 + 5);
      return MEMORY[0x1F415EBC8](v4);
    }
  }
  else if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_35;
  }
  swift_bridgeObjectRelease();
  v0[8] = v27;
  sub_1C015171C(0, &qword_1EB87BD40, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  sub_1C0154020();
  sub_1C01540A4();
  uint64_t v44 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  int64_t v45 = (uint64_t (*)(uint64_t))v0[1];
  return v45(v44);
}

uint64_t sub_1C011C7EC()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C011CCDC;
  }
  else
  {
    uint64_t v2 = sub_1C011C938;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C011C938()
{
  unint64_t v1 = v0[5];
  if (v1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 0;
      uint64_t v31 = v0;
      unint64_t v33 = v1 & 0xC000000000000001;
      uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
      unint64_t v32 = v1;
      while (1)
      {
        if (v33)
        {
          uint64_t v7 = (void *)MEMORY[0x1C18C7CB0](v3, v1);
          uint64_t v8 = v3 + 1;
          if (__OFADD__(v3, 1)) {
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v7 = *(id *)(v1 + 8 * v3 + 32);
          uint64_t v8 = v3 + 1;
          if (__OFADD__(v3, 1))
          {
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        unint64_t v1 = v2;
        uint64_t v0 = v7;
        id v9 = objc_msgSend(v7, sel_identifier);
        uint64_t v10 = sub_1C151E62C();
        uint64_t v12 = v11;

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v15 = sub_1BFEF2D8C(v10, v12);
        uint64_t v16 = v4[2];
        BOOL v17 = (v14 & 1) == 0;
        uint64_t v18 = v16 + v17;
        if (__OFADD__(v16, v17)) {
          goto LABEL_27;
        }
        char v19 = v14;
        if (v4[3] >= v18)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if (v14) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_1C106AF68();
            if (v19) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_1C10553F0(v18, isUniquelyReferenced_nonNull_native);
          unint64_t v20 = sub_1BFEF2D8C(v10, v12);
          if ((v19 & 1) != (v21 & 1))
          {
            return sub_1C1520CFC();
          }
          unint64_t v15 = v20;
          if (v19)
          {
LABEL_4:
            uint64_t v5 = v4[7];

            *(void *)(v5 + 8 * v15) = v0;
            goto LABEL_5;
          }
        }
        v4[(v15 >> 6) + 8] |= 1 << v15;
        uint64_t v22 = (uint64_t *)(v4[6] + 16 * v15);
        *uint64_t v22 = v10;
        v22[1] = v12;
        *(void *)(v4[7] + 8 * v15) = v0;
        uint64_t v23 = v4[2];
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v23 + 1;
        if (v24) {
          goto LABEL_28;
        }
        v4[2] = v25;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v3;
        uint64_t v2 = v1;
        BOOL v6 = v8 == v1;
        unint64_t v1 = v32;
        if (v6)
        {
          swift_bridgeObjectRelease();
          uint64_t v0 = v31;
          goto LABEL_31;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
LABEL_31:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C0149F64(v27, (uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C1047AD0(v0[3]);
  v0[7] = v28;
  sub_1C015171C(0, &qword_1EB87BD40, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  sub_1C0154020();
  sub_1C01540A4();
  uint64_t v29 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  uint64_t v30 = (uint64_t (*)(uint64_t))v0[1];
  return v30(v29);
}

uint64_t sub_1C011CCDC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C011CCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C0104C04;
  v10[6] = a5;
  v10[7] = a2;
  void v10[4] = a3;
  void v10[5] = a4;
  return MEMORY[0x1F4188298](sub_1C011CDE0, 0, 0);
}

uint64_t sub_1C011CDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  return MEMORY[0x1F4188298](sub_1C011CDE0, 0, 0);
}

uint64_t sub_1C011CDE0()
{
  unint64_t isUniquelyReferenced_nonNull_native = (unint64_t)(v0 + 2);
  uint64_t v102 = v0 + 3;
  uint64_t v2 = v0[4];
  uint64_t v3 = FormatContent.requirements.getter();
  unint64_t v4 = Array<A>.tags.getter(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C0101678(v4);
  swift_bridgeObjectRelease();
  uint64_t v107 = sub_1BFEF4060(v5);
  swift_bridgeObjectRelease();
  BOOL v6 = (void *)sub_1C018D1AC(MEMORY[0x1E4FBC860]);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v103 = v7 + 64;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & v8;
  int64_t v104 = (unint64_t)(63 - v10) >> 6;
  uint64_t v105 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  for (i = v0; ; uint64_t v0 = i)
  {
    v0[8] = v6;
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_96;
    }
    if (v15 >= v104) {
      break;
    }
    unint64_t v16 = *(void *)(v103 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v104) {
        break;
      }
      unint64_t v16 = *(void *)(v103 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v104) {
          break;
        }
        unint64_t v16 = *(void *)(v103 + 8 * v12);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v104) {
            break;
          }
          unint64_t v16 = *(void *)(v103 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v12 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_98;
              }
              if (v12 >= v104) {
                goto LABEL_33;
              }
              unint64_t v16 = *(void *)(v103 + 8 * v12);
              ++v17;
              if (v16) {
                goto LABEL_21;
              }
            }
          }
          int64_t v12 = v17;
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_22:
    uint64_t v18 = (uint64_t *)(*(void *)(v105 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(*(void *)(v105 + 56) + 8 * v14);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v23 = sub_1BFEF2D8C(v20, v19);
    uint64_t v24 = v6[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    char v27 = v22;
    if (v6[3] >= v26)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v22) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1C106AF50();
        if (v27) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1C10553D8(v26, isUniquelyReferenced_nonNull_native);
      unint64_t v28 = sub_1BFEF2D8C(v20, v19);
      if ((v27 & 1) != (v29 & 1))
      {
LABEL_86:
        return sub_1C1520CFC();
      }
      unint64_t v23 = v28;
      if (v27)
      {
LABEL_4:
        unint64_t isUniquelyReferenced_nonNull_native = v6[7];
        swift_unknownObjectRelease();
        *(void *)(isUniquelyReferenced_nonNull_native + 8 * v23) = v21;
        goto LABEL_5;
      }
    }
    v6[(v23 >> 6) + 8] |= 1 << v23;
    uint64_t v30 = (uint64_t *)(v6[6] + 16 * v23);
    *uint64_t v30 = v20;
    v30[1] = v19;
    *(void *)(v6[7] + 8 * v23) = v21;
    uint64_t v31 = v6[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_95;
    }
    _OWORD v6[2] = v33;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
LABEL_33:
  swift_release();
  int64_t v34 = 0;
  uint64_t v35 = v107 + 56;
  uint64_t v36 = -1;
  uint64_t v37 = -1 << *(unsigned char *)(v107 + 32);
  if (-v37 < 64) {
    uint64_t v36 = ~(-1 << -(char)v37);
  }
  unint64_t v38 = v36 & *(void *)(v107 + 56);
  int64_t v39 = (unint64_t)(63 - v37) >> 6;
  unint64_t v40 = (void *)MEMORY[0x1E4FBC860];
LABEL_36:
  v0[9] = v40;
  if (v38)
  {
LABEL_37:
    unint64_t v41 = __clz(__rbit64(v38));
    v38 &= v38 - 1;
    unint64_t v42 = v41 | (v34 << 6);
    goto LABEL_52;
  }
  while (1)
  {
    int64_t v43 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      goto LABEL_97;
    }
    if (v43 >= v39) {
      break;
    }
    unint64_t v44 = *(void *)(v35 + 8 * v43);
    ++v34;
    if (v44) {
      goto LABEL_51;
    }
    int64_t v34 = v43 + 1;
    if (v43 + 1 >= v39) {
      break;
    }
    unint64_t v44 = *(void *)(v35 + 8 * v34);
    if (v44) {
      goto LABEL_51;
    }
    int64_t v34 = v43 + 2;
    if (v43 + 2 >= v39) {
      break;
    }
    unint64_t v44 = *(void *)(v35 + 8 * v34);
    if (v44) {
      goto LABEL_51;
    }
    int64_t v45 = v43 + 3;
    if (v45 >= v39) {
      break;
    }
    unint64_t v44 = *(void *)(v35 + 8 * v45);
    if (!v44)
    {
      while (1)
      {
        int64_t v34 = v45 + 1;
        if (__OFADD__(v45, 1)) {
          break;
        }
        if (v34 >= v39) {
          goto LABEL_61;
        }
        unint64_t v44 = *(void *)(v35 + 8 * v34);
        ++v45;
        if (v44) {
          goto LABEL_51;
        }
      }
LABEL_99:
      __break(1u);
      while (2)
      {
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        swift_bridgeObjectRetain_n();
        uint64_t v75 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (!v75) {
          goto LABEL_104;
        }
LABEL_67:
        uint64_t v76 = 0;
        unint64_t v108 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
        uint64_t v77 = (void *)MEMORY[0x1E4FBC868];
        unint64_t v106 = isUniquelyReferenced_nonNull_native;
LABEL_70:
        if (v108)
        {
          uint64_t v80 = (void *)MEMORY[0x1C18C7CB0](v76, isUniquelyReferenced_nonNull_native);
          uint64_t v81 = v76 + 1;
          if (__OFADD__(v76, 1)) {
            continue;
          }
        }
        else
        {
          uint64_t v80 = (void *)swift_unknownObjectRetain();
          uint64_t v81 = v76 + 1;
          if (__OFADD__(v76, 1)) {
            continue;
          }
        }
        break;
      }
      unint64_t isUniquelyReferenced_nonNull_native = v75;
      uint64_t v0 = v80;
      id v82 = objc_msgSend(v80, sel_identifier);
      uint64_t v83 = sub_1C151E62C();
      uint64_t v85 = v84;

      char v86 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v88 = sub_1BFEF2D8C(v83, v85);
      uint64_t v89 = v77[2];
      BOOL v90 = (v87 & 1) == 0;
      uint64_t v91 = v89 + v90;
      if (__OFADD__(v89, v90)) {
        goto LABEL_101;
      }
      char v92 = v87;
      if (v77[3] >= v91)
      {
        if (v86)
        {
          if ((v87 & 1) == 0) {
            goto LABEL_82;
          }
        }
        else
        {
          sub_1C106AF50();
          if ((v92 & 1) == 0) {
            goto LABEL_82;
          }
        }
      }
      else
      {
        sub_1C10553D8(v91, v86);
        unint64_t v93 = sub_1BFEF2D8C(v83, v85);
        if ((v92 & 1) != (v94 & 1)) {
          goto LABEL_86;
        }
        unint64_t v88 = v93;
        if ((v92 & 1) == 0)
        {
LABEL_82:
          v77[(v88 >> 6) + 8] |= 1 << v88;
          uint64_t v95 = (uint64_t *)(v77[6] + 16 * v88);
          *uint64_t v95 = v83;
          v95[1] = v85;
          *(void *)(v77[7] + 8 * v88) = v0;
          uint64_t v96 = v77[2];
          BOOL v32 = __OFADD__(v96, 1);
          uint64_t v97 = v96 + 1;
          if (v32) {
            goto LABEL_102;
          }
          v77[2] = v97;
          swift_bridgeObjectRetain();
          goto LABEL_69;
        }
      }
      uint64_t v78 = v77[7];
      swift_unknownObjectRelease();
      *(void *)(v78 + 8 * v88) = v0;
LABEL_69:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v76;
      uint64_t v75 = isUniquelyReferenced_nonNull_native;
      BOOL v79 = v81 == isUniquelyReferenced_nonNull_native;
      uint64_t v0 = i;
      unint64_t isUniquelyReferenced_nonNull_native = v106;
      if (v79) {
        goto LABEL_105;
      }
      goto LABEL_70;
    }
    int64_t v34 = v45;
LABEL_51:
    unint64_t v38 = (v44 - 1) & v44;
    unint64_t v42 = __clz(__rbit64(v44)) + (v34 << 6);
LABEL_52:
    uint64_t v46 = (uint64_t *)(*(void *)(v107 + 48) + 16 * v42);
    uint64_t v48 = *v46;
    uint64_t v47 = v46[1];
    uint64_t v49 = v6[2];
    swift_bridgeObjectRetain();
    if (!v49
      || (swift_bridgeObjectRetain(),
          sub_1BFEF2D8C(v48, v47),
          unint64_t isUniquelyReferenced_nonNull_native = v50,
          swift_bridgeObjectRelease(),
          (isUniquelyReferenced_nonNull_native & 1) == 0))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v40 = sub_1BFEF9B68(0, v40[2] + 1, 1, v40);
      }
      unint64_t v51 = v40;
      unint64_t v52 = v40[2];
      uint64_t v53 = v51;
      unint64_t v54 = v51[3];
      unint64_t isUniquelyReferenced_nonNull_native = v52 + 1;
      if (v52 >= v54 >> 1) {
        uint64_t v53 = sub_1BFEF9B68((void *)(v54 > 1), v52 + 1, 1, v53);
      }
      void v53[2] = isUniquelyReferenced_nonNull_native;
      uint64_t v55 = &v53[2 * v52];
      unint64_t v40 = v53;
      v55[4] = v48;
      v55[5] = v47;
      uint64_t v0 = i;
      goto LABEL_36;
    }
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_37;
    }
  }
LABEL_61:
  uint64_t v56 = (uint64_t *)v0[6];
  swift_release();
  type metadata accessor for FormatServiceOptions();
  sub_1BFFDEB20();
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1C152C7F0;
  uint64_t v58 = v6[2];
  uint64_t v59 = MEMORY[0x1E4FBB550];
  uint64_t v60 = MEMORY[0x1E4FBB5C8];
  *(void *)(v57 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v57 + 64) = v60;
  *(void *)(v57 + 32) = v58;
  uint64_t v61 = v40[2];
  *(void *)(v57 + 96) = v59;
  *(void *)(v57 + 104) = v60;
  *(void *)(v57 + 72) = v61;
  uint64_t v63 = *v56;
  uint64_t v62 = v56[1];
  *(void *)(v57 + 136) = MEMORY[0x1E4FBB1A0];
  *(void *)(v57 + 144) = sub_1BFE9C558();
  *(void *)(v57 + 112) = v63;
  *(void *)(v57 + 120) = v62;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  unint64_t v64 = (void *)v0[7];
  if (v40[2])
  {
    uint64_t v65 = v0[5];
    uint64_t v66 = v64[15];
    uint64_t v67 = v64[16];
    __swift_project_boxed_opaque_existential_1(v64 + 12, v66);
    double v68 = *(double *)(v65 + 40);
    LODWORD(v65) = *(unsigned __int8 *)(v65 + 48);
    uint64_t v69 = self;
    swift_bridgeObjectRetain();
    if (v65 == 1)
    {
      if (v68 == 0.0) {
        id v70 = objc_msgSend(v69, sel_defaultCachePolicy);
      }
      else {
        id v70 = objc_msgSend(v69, sel_cachedOnlyCachePolicy);
      }
    }
    else
    {
      id v70 = objc_msgSend(v69, sel_cachePolicyWithSoftMaxAge_, v68);
    }
    id v99 = v70;
    v0[10] = (*(uint64_t (**)(void *, id, uint64_t, uint64_t))(v67 + 24))(v40, v99, v66, v67);

    swift_bridgeObjectRelease();
    uint64_t v100 = (void *)swift_task_alloc();
    v0[11] = v100;
    *uint64_t v100 = v0;
    v100[1] = sub_1C011D7A8;
    return MEMORY[0x1F415EBC8](v102);
  }
  else
  {
    uint64_t v72 = v0[5];
    uint64_t v71 = (uint64_t *)v0[6];
    uint64_t v73 = swift_bridgeObjectRetain();
    unint64_t v74 = sub_1BFD35AC0(v73);
    swift_bridgeObjectRelease();
    unint64_t isUniquelyReferenced_nonNull_native = sub_1C0125E68(v74, v72, v71);
    swift_release();
    if (isUniquelyReferenced_nonNull_native >> 62) {
      goto LABEL_103;
    }
    uint64_t v75 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v75) {
      goto LABEL_67;
    }
LABEL_104:
    uint64_t v77 = (void *)MEMORY[0x1E4FBC868];
LABEL_105:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v101 = (uint64_t (*)(void *))v0[1];
    return v101(v77);
  }
}

uint64_t sub_1C011D7A8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1C011DBF8;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C011D8F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C011D8F0()
{
  unint64_t isUniquelyReferenced_nonNull_native = sub_1C0125E68(*(void *)(v0 + 24), *(void *)(v0 + 40), *(uint64_t **)(v0 + 48));
  swift_bridgeObjectRelease();
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 0;
      unint64_t v27 = isUniquelyReferenced_nonNull_native;
      unint64_t v28 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
      uint64_t v26 = v0;
      uint64_t v4 = *(void **)(v0 + 64);
      while (1)
      {
        if (v28)
        {
          BOOL v6 = (void *)MEMORY[0x1C18C7CB0](v3, isUniquelyReferenced_nonNull_native);
          uint64_t v0 = v3 + 1;
          if (__OFADD__(v3, 1)) {
            goto LABEL_26;
          }
        }
        else
        {
          BOOL v6 = (void *)swift_unknownObjectRetain();
          uint64_t v0 = v3 + 1;
          if (__OFADD__(v3, 1))
          {
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        uint64_t v7 = v6;
        id v8 = objc_msgSend(v6, sel_identifier);
        uint64_t v9 = sub_1C151E62C();
        uint64_t v11 = v10;

        unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v13 = sub_1BFEF2D8C(v9, v11);
        uint64_t v14 = v4[2];
        BOOL v15 = (v12 & 1) == 0;
        uint64_t v16 = v14 + v15;
        if (__OFADD__(v14, v15)) {
          goto LABEL_27;
        }
        char v17 = v12;
        if (v4[3] >= v16)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if (v12) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_1C106AF50();
            if (v17) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_1C10553D8(v16, isUniquelyReferenced_nonNull_native);
          unint64_t v18 = sub_1BFEF2D8C(v9, v11);
          if ((v17 & 1) != (v19 & 1))
          {
            return sub_1C1520CFC();
          }
          unint64_t v13 = v18;
          if (v17)
          {
LABEL_4:
            uint64_t v5 = v4[7];
            swift_unknownObjectRelease();
            *(void *)(v5 + 8 * v13) = v7;
            goto LABEL_5;
          }
        }
        v4[(v13 >> 6) + 8] |= 1 << v13;
        uint64_t v20 = (uint64_t *)(v4[6] + 16 * v13);
        *uint64_t v20 = v9;
        v20[1] = v11;
        *(void *)(v4[7] + 8 * v13) = v7;
        uint64_t v21 = v4[2];
        BOOL v22 = __OFADD__(v21, 1);
        uint64_t v23 = v21 + 1;
        if (v22) {
          goto LABEL_28;
        }
        v4[2] = v23;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v3;
        unint64_t isUniquelyReferenced_nonNull_native = v27;
        if (v0 == v2)
        {
          uint64_t v0 = v26;
          goto LABEL_31;
        }
      }
    }
  }
  uint64_t v4 = *(void **)(v0 + 64);
LABEL_31:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  BOOL v25 = *(uint64_t (**)(void *))(v0 + 8);
  return v25(v4);
}

uint64_t sub_1C011DBF8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C011DC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_1C0104C04;
  return sub_1C011DD14(a3, a4, a5);
}

uint64_t sub_1C011DD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  sub_1C0158D58(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  v4[15] = swift_task_alloc();
  v4[16] = type metadata accessor for FormatServiceOptions();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C011DE18, 0, 0);
}

uint64_t sub_1C011DE18()
{
  uint64_t v1 = v0;
  uint64_t v2 = FormatContent.requirements.getter();
  unint64_t v3 = Array<A>.tagFeeds.getter(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1C0101678(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1BFEF4060(v4);
  swift_bridgeObjectRelease();
  if (!*(void *)(v5 + 16))
  {
    swift_bridgeObjectRelease();
    unint64_t v50 = sub_1C018D180(MEMORY[0x1E4FBC860]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v51 = (uint64_t (*)(unint64_t))v0[1];
    return v51(v50);
  }
  int64_t v6 = 0;
  uint64_t v76 = v0 + 8;
  uint64_t v7 = v0[11];
  uint64_t v78 = *(void *)(v7 + 40);
  id v8 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v9 = *(void *)(v7 + 24);
  v0[8] = MEMORY[0x1E4FBC860];
  uint64_t v10 = v5 + 56;
  uint64_t v11 = -1;
  uint64_t v12 = -1 << *(unsigned char *)(v5 + 32);
  if (-v12 < 64) {
    uint64_t v11 = ~(-1 << -(char)v12);
  }
  unint64_t v13 = v11 & *(void *)(v5 + 56);
  int64_t v74 = (unint64_t)(63 - v12) >> 6;
  uint64_t v14 = v8;
  BOOL v15 = v1;
  unint64_t v77 = v9;
LABEL_5:
  uint64_t v73 = v14;
  v15[19] = v14;
  v15[20] = v8;
  if (v13)
  {
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v17 = v16 | (v6 << 6);
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v18 >= v74) {
      break;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v18);
    ++v6;
    if (v19) {
      goto LABEL_20;
    }
    int64_t v6 = v18 + 1;
    if (v18 + 1 >= v74) {
      break;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v6);
    if (v19) {
      goto LABEL_20;
    }
    int64_t v6 = v18 + 2;
    if (v18 + 2 >= v74) {
      break;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v6);
    if (v19) {
      goto LABEL_20;
    }
    int64_t v20 = v18 + 3;
    if (v20 >= v74) {
      break;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v6 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          break;
        }
        if (v6 >= v74) {
          goto LABEL_38;
        }
        unint64_t v19 = *(void *)(v10 + 8 * v6);
        ++v20;
        if (v19) {
          goto LABEL_20;
        }
      }
LABEL_53:
      __break(1u);
LABEL_54:
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!v38) {
        goto LABEL_55;
      }
LABEL_40:
      uint64_t v79 = MEMORY[0x1E4FBC860];
      uint64_t v39 = sub_1BFF661B8(0, v38 & ~(v38 >> 63), 0);
      if ((v38 & 0x8000000000000000) == 0)
      {
        uint64_t v40 = 0;
        uint64_t v41 = v79;
        unint64_t v75 = v9 & 0xC000000000000001;
        unint64_t v42 = v15;
        unint64_t v43 = v9;
        do
        {
          if (v75)
          {
            uint64_t v44 = MEMORY[0x1C18C7CB0](v40, v9);
          }
          else
          {
            uint64_t v44 = *(void *)(v9 + 8 * v40 + 32);
            swift_retain();
          }
          uint64_t v45 = *(void *)(v44 + 16);
          uint64_t v46 = *(void *)(v44 + 24);
          swift_bridgeObjectRetain();
          swift_release();
          unint64_t v48 = *(void *)(v79 + 16);
          unint64_t v47 = *(void *)(v79 + 24);
          if (v48 >= v47 >> 1) {
            sub_1BFF661B8(v47 > 1, v48 + 1, 1);
          }
          ++v40;
          *(void *)(v79 + 16) = v48 + 1;
          unint64_t v49 = v79 + 16 * v48;
          *(void *)(v49 + 32) = v45;
          *(void *)(v49 + 40) = v46;
          unint64_t v9 = v43;
        }
        while (v38 != v40);
        BOOL v15 = v42;
        swift_bridgeObjectRelease();
        goto LABEL_56;
      }
      __break(1u);
      return MEMORY[0x1F415EBC8](v39);
    }
    int64_t v6 = v20;
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v6 << 6);
LABEL_21:
    uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    uint64_t v24 = *(void *)(v9 + 16);
    swift_bridgeObjectRetain();
    if (v24 && (sub_1BFEF2D8C(v23, v22), (v25 & 1) != 0))
    {
      if (!*(void *)(v78 + 16)) {
        goto LABEL_33;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v8 = sub_1BFEF9B68(0, v8[2] + 1, 1, v8);
      }
      unint64_t v27 = v8[2];
      unint64_t v26 = v8[3];
      uint64_t v28 = v78;
      if (v27 >= v26 >> 1)
      {
        BOOL v32 = sub_1BFEF9B68((void *)(v26 > 1), v27 + 1, 1, v8);
        uint64_t v28 = v78;
        id v8 = v32;
      }
      v8[2] = v27 + 1;
      uint64_t v29 = &v8[2 * v27];
      v29[4] = v23;
      v29[5] = v22;
      unint64_t v9 = v77;
      *uint64_t v76 = v8;
      if (!*(void *)(v28 + 16))
      {
LABEL_33:
        uint64_t v33 = v73;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v33 = sub_1BFEF9B68(0, v73[2] + 1, 1, v73);
        }
        unint64_t v35 = v33[2];
        unint64_t v34 = v33[3];
        uint64_t v14 = v33;
        if (v35 >= v34 >> 1) {
          uint64_t v14 = sub_1BFEF9B68((void *)(v34 > 1), v35 + 1, 1, v33);
        }
        _OWORD v14[2] = v35 + 1;
        uint64_t v36 = &v14[2 * v35];
        v36[4] = v23;
        v36[5] = v22;
        unint64_t v9 = v77;
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRetain();
    sub_1BFEF2D8C(v23, v22);
    char v31 = v30;
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0) {
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
    v15[20] = v8;
    if (v13) {
      goto LABEL_6;
    }
  }
LABEL_38:
  swift_release();
  uint64_t v37 = FormatContent.requirements.getter();
  unint64_t v9 = Array<A>.articles.getter(v37);
  swift_bridgeObjectRelease();
  if (v9 >> 62) {
    goto LABEL_54;
  }
  uint64_t v38 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v38) {
    goto LABEL_40;
  }
LABEL_55:
  swift_bridgeObjectRelease();
  uint64_t v41 = MEMORY[0x1E4FBC860];
LABEL_56:
  uint64_t v53 = v15[16];
  v15[21] = sub_1BFEF4060(v41);
  swift_bridgeObjectRelease();
  unint64_t v54 = v15;
  uint64_t v55 = v73[2];
  *((_DWORD *)v54 + 62) = *(_DWORD *)(v53 + 52);
  sub_1BFFDEB20();
  if (!v55)
  {
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_1C1529AE0;
    sub_1C0153EDC();
    swift_bridgeObjectRetain();
    uint64_t v67 = MEMORY[0x1E4FBB1A0];
    uint64_t v68 = sub_1C151E3CC();
    uint64_t v70 = v69;
    swift_bridgeObjectRelease();
    *(void *)(v66 + 56) = v67;
    *(void *)(v66 + 64) = sub_1BFE9C558();
    *(void *)(v66 + 32) = v68;
    *(void *)(v66 + 40) = v70;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    uint64_t v71 = (void *)sub_1C1518E7C();
    v54[28] = sub_1C1518FCC();

    uint64_t v72 = (void *)swift_task_alloc();
    v54[29] = v72;
    void *v72 = v54;
    v72[1] = sub_1C011EF48;
    uint64_t v39 = (uint64_t)(v54 + 10);
    return MEMORY[0x1F415EBC8](v39);
  }
  uint64_t v56 = (uint64_t *)v54[13];
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1C152C7F0;
  uint64_t v58 = *(void *)(v77 + 16);
  uint64_t v59 = MEMORY[0x1E4FBB550];
  uint64_t v60 = MEMORY[0x1E4FBB5C8];
  *(void *)(v57 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v57 + 64) = v60;
  *(void *)(v57 + 32) = v58;
  uint64_t v61 = v8[2];
  *(void *)(v57 + 96) = v59;
  *(void *)(v57 + 104) = v60;
  *(void *)(v57 + 72) = v61;
  uint64_t v62 = *v56;
  uint64_t v63 = v56[1];
  *(void *)(v57 + 136) = MEMORY[0x1E4FBB1A0];
  *(void *)(v57 + 144) = sub_1BFE9C558();
  *(void *)(v57 + 112) = v62;
  *(void *)(v57 + 120) = v63;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  unint64_t v64 = (void *)swift_task_alloc();
  v54[22] = v64;
  *unint64_t v64 = v54;
  v64[1] = sub_1C011E618;
  uint64_t v65 = v54[12];
  v64[5] = v54[14];
  v64[6] = v65;
  v64[3] = v76;
  v64[4] = v77;
  return MEMORY[0x1F4188298](sub_1C01266D0, 0, 0);
}

uint64_t sub_1C011E618(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 184) = a1;
  *(void *)(v3 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C011F288;
  }
  else
  {
    uint64_t v4 = sub_1C011E748;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C011E748()
{
  uint64_t v1 = FormatContent.requirements.getter();
  unint64_t v2 = Array<A>.tagFeeds.getter(v1);
  swift_bridgeObjectRelease();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    uint64_t v3 = v4;
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      if (v3 >= 1)
      {
        uint64_t v5 = 0;
        char v6 = 1;
        double v7 = 0.0;
        while (1)
        {
          if ((v2 & 0xC000000000000001) != 0)
          {
            uint64_t v11 = MEMORY[0x1C18C7CB0](v5++, v2);
            double v9 = *(double *)(v11 + 32);
            char v10 = *(unsigned char *)(v11 + 40);
            swift_unknownObjectRelease();
            if ((v6 & 1) == 0) {
              goto LABEL_5;
            }
          }
          else
          {
            uint64_t v12 = *(void *)(v2 + 32 + 8 * v5++);
            double v9 = *(double *)(v12 + 32);
            char v10 = *(unsigned char *)(v12 + 40);
            if ((v6 & 1) == 0)
            {
LABEL_5:
              if (v7 > v9) {
                double v8 = v7;
              }
              else {
                double v8 = v9;
              }
              if (v10) {
                double v9 = v7;
              }
              else {
                double v9 = v8;
              }
              char v10 = 0;
            }
          }
          double v7 = v9;
          char v6 = v10;
          if (v5 == v3) {
            goto LABEL_20;
          }
        }
      }
      __break(1u);
      goto LABEL_56;
    }
  }
  char v10 = 1;
  double v9 = 0.0;
LABEL_20:
  swift_bridgeObjectRelease_n();
  uint64_t v13 = FormatContent.requirements.getter();
  unint64_t v14 = Array<A>.tagFeeds.getter(v13);
  swift_bridgeObjectRelease();
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    uint64_t v15 = v4;
    uint64_t v52 = v0;
    if (v4) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v52 = v0;
    if (v15)
    {
LABEL_22:
      if (v15 < 1)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        return MEMORY[0x1F415EBC8](v4);
      }
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      char v18 = 1;
      while (1)
      {
        if ((v14 & 0xC000000000000001) != 0)
        {
          uint64_t v22 = MEMORY[0x1C18C7CB0](v16++, v14);
          uint64_t v20 = *(void *)(v22 + 48);
          char v21 = *(unsigned char *)(v22 + 56);
          swift_unknownObjectRelease();
          if ((v18 & 1) == 0) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t v23 = *(void *)(v14 + 32 + 8 * v16++);
          uint64_t v20 = *(void *)(v23 + 48);
          char v21 = *(unsigned char *)(v23 + 56);
          if ((v18 & 1) == 0)
          {
LABEL_24:
            if (v20 <= v17) {
              uint64_t v19 = v17;
            }
            else {
              uint64_t v19 = v20;
            }
            if (v21) {
              uint64_t v20 = v17;
            }
            else {
              uint64_t v20 = v19;
            }
            char v21 = 0;
          }
        }
        uint64_t v17 = v20;
        char v18 = v21;
        if (v16 == v15) {
          goto LABEL_39;
        }
      }
    }
  }
  uint64_t v20 = 0;
  char v21 = 1;
LABEL_39:
  uint64_t v24 = *(void *)(v52 + 144);
  uint64_t v25 = *(void *)(v52 + 112);
  uint64_t v26 = *(void *)(v52 + 96);
  swift_bridgeObjectRelease_n();
  sub_1BFC66384(v25 + 16, v52 + 16);
  uint64_t v27 = *(void *)(v52 + 48);
  uint64_t v51 = *(void *)(v52 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v52 + 16), v51);
  sub_1BFE338B4(v26, v24, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v28 = *(void *)(v52 + 144);
  if (v21) {
    uint64_t v20 = *(void *)(v28 + 80);
  }
  uint64_t v29 = *(void *)(v52 + 136);
  uint64_t v30 = *(void *)(v52 + 120);
  uint64_t v31 = *(void *)(v52 + 96);
  sub_1BFDDF774(v28, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C151630C();
  uint64_t v32 = sub_1C151631C();
  uint64_t v33 = *(void *)(v32 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  sub_1BFE338B4(v31, v29, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v34 = *(void *)(v52 + 136);
  if (v10) {
    double v9 = *(double *)(v34 + 72);
  }
  uint64_t v35 = *(void *)(v52 + 120);
  sub_1BFDDF774(v34, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v35, 1, v32) == 1)
  {
    uint64_t v36 = 0;
  }
  else
  {
    uint64_t v37 = *(void *)(v52 + 120);
    uint64_t v36 = (void *)sub_1C151621C();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v32);
  }
  id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E380]), sel_initWithStartDate_timeInterval_, v36, v9);

  if (!v38) {
    goto LABEL_57;
  }
  uint64_t v39 = *(void *)(v52 + 96);
  double v40 = *(double *)(v39 + 40);
  int v41 = *(unsigned __int8 *)(v39 + 48);
  unint64_t v42 = self;
  if (v41 == 1)
  {
    if (v40 == 0.0) {
      id v43 = objc_msgSend(v42, sel_defaultCachePolicy);
    }
    else {
      id v43 = objc_msgSend(v42, sel_cachedOnlyCachePolicy);
    }
  }
  else
  {
    id v43 = objc_msgSend(v42, sel_cachePolicyWithSoftMaxAge_, v40);
  }
  uint64_t v44 = *(void *)(v52 + 184);
  uint64_t v45 = *(int *)(v52 + 248);
  uint64_t v46 = *(void *)(v52 + 128);
  uint64_t v47 = *(void *)(v52 + 96);
  id v48 = v43;
  *(void *)(v52 + 200) = (*(uint64_t (**)(uint64_t, uint64_t, id, uint64_t, id, void, void, uint64_t, uint64_t))(v27 + 56))(v44, v20, v38, 1, v48, *(void *)(v47 + *(int *)(v46 + 48)), *(void *)(v47 + v45), v51, v27);
  swift_bridgeObjectRelease();

  unint64_t v49 = (void *)swift_task_alloc();
  *(void *)(v52 + 208) = v49;
  *unint64_t v49 = v52;
  v49[1] = sub_1C011EC80;
  uint64_t v4 = v52 + 72;
  return MEMORY[0x1F415EBC8](v4);
}

uint64_t sub_1C011EC80()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1C011F308;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    uint64_t v3 = sub_1C011EDE4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C011EDE4()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 96);
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v1;
  sub_1C015171C(0, (unint64_t *)&qword_1EB895E80, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v5 = sub_1C151E36C();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v5);
}

uint64_t sub_1C011EF48()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C011F208;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C011F0A4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C011F0A4()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 96);
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v1;
  sub_1C015171C(0, (unint64_t *)&qword_1EB895E80, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v5 = sub_1C151E36C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v5);
}

uint64_t sub_1C011F208()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C011F288()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C011F308()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C011F390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  double v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v9;
  *double v9 = v5;
  v9[1] = sub_1C0104C04;
  return sub_1C011F448(a3, a4, a5);
}

uint64_t sub_1C011F448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_1C151E17C();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C011F50C, 0, 0);
}

uint64_t sub_1C011F50C()
{
  uint64_t v1 = FormatContent.requirements.getter();
  unint64_t v2 = Array<A>.puzzles.getter(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C018D1C8(MEMORY[0x1E4FBC860]);
  if (v2 >> 62) {
    goto LABEL_25;
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v102 = isUniquelyReferenced_nonNull_native;
  while (v4)
  {
    uint64_t v5 = 0;
    unint64_t v96 = v2;
    unint64_t v99 = v2 & 0xC000000000000001;
    while (v99)
    {
      uint64_t v8 = MEMORY[0x1C18C7CB0](v5, v2);
      uint64_t v9 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_22;
      }
LABEL_11:
      uint64_t v11 = *(void *)(v8 + 16);
      uint64_t v10 = *(void *)(v8 + 24);
      swift_bridgeObjectRetain();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v13 = sub_1BFEF2D8C(v11, v10);
      uint64_t v14 = v3[2];
      BOOL v15 = (v12 & 1) == 0;
      uint64_t v16 = v14 + v15;
      if (__OFADD__(v14, v15)) {
        goto LABEL_23;
      }
      unint64_t v2 = v12;
      if (v3[3] >= v16)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v12) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_1C106B168();
          if (v2) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_1C10557B0(v16, isUniquelyReferenced_nonNull_native);
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v3;
        unint64_t v17 = sub_1BFEF2D8C(v11, v10);
        if ((v2 & 1) != (v18 & 1))
        {
LABEL_58:
          return sub_1C1520CFC();
        }
        unint64_t v13 = v17;
        if (v2)
        {
LABEL_4:
          char v6 = v3;
          uint64_t v7 = v3[7];
          swift_release();
          *(void *)(v7 + 8 * v13) = v8;
          uint64_t v3 = v6;
          goto LABEL_5;
        }
      }
      v3[(v13 >> 6) + 8] |= 1 << v13;
      uint64_t v19 = (uint64_t *)(v3[6] + 16 * v13);
      *uint64_t v19 = v11;
      v19[1] = v10;
      *(void *)(v3[7] + 8 * v13) = v8;
      uint64_t v20 = v3[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_24;
      }
      v3[2] = v22;
      swift_bridgeObjectRetain();
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v5;
      uint64_t isUniquelyReferenced_nonNull_native = v102;
      unint64_t v2 = v96;
      if (v9 == v4) {
        goto LABEL_26;
      }
    }
    uint64_t v8 = *(void *)(v2 + 8 * v5 + 32);
    swift_retain();
    uint64_t v9 = v5 + 1;
    if (!__OFADD__(v5, 1)) {
      goto LABEL_11;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v102 = isUniquelyReferenced_nonNull_native;
  }
LABEL_26:
  uint64_t v23 = (uint64_t)v3;
  *(void *)(isUniquelyReferenced_nonNull_native + 72) = v3;
  uint64_t v24 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
  swift_bridgeObjectRelease_n();
  uint64_t v25 = (void *)sub_1C018D32C(MEMORY[0x1E4FBC860]);
  uint64_t v26 = *(void *)(v24 + 48);
  uint64_t v95 = v26 + 64;
  uint64_t v27 = -1;
  uint64_t v28 = -1 << *(unsigned char *)(v26 + 32);
  if (-v28 < 64) {
    uint64_t v27 = ~(-1 << -(char)v28);
  }
  unint64_t v29 = v27 & *(void *)(v26 + 64);
  int64_t v97 = (unint64_t)(63 - v28) >> 6;
  uint64_t v100 = v26;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v31 = 0;
  while (1)
  {
    *(void *)(isUniquelyReferenced_nonNull_native + 80) = v25;
    if (v29)
    {
      unint64_t v33 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v34 = v33 | (v31 << 6);
      goto LABEL_47;
    }
    int64_t v35 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      goto LABEL_103;
    }
    if (v35 >= v97)
    {
LABEL_61:
      swift_release();
      uint64_t v52 = v23 + 64;
      uint64_t v53 = -1;
      uint64_t v54 = -1 << *(unsigned char *)(v23 + 32);
      if (-v54 < 64) {
        uint64_t v53 = ~(-1 << -(char)v54);
      }
      unint64_t v55 = v53 & *(void *)(v23 + 64);
      int64_t v56 = (unint64_t)(63 - v54) >> 6;
      uint64_t result = swift_bridgeObjectRetain();
      int64_t v57 = 0;
      uint64_t v58 = (void *)MEMORY[0x1E4FBC860];
LABEL_64:
      uint64_t v101 = v58;
      *(void *)(isUniquelyReferenced_nonNull_native + 88) = v58;
      if (v55)
      {
LABEL_65:
        unint64_t v59 = __clz(__rbit64(v55));
        v55 &= v55 - 1;
        unint64_t v60 = v59 | (v57 << 6);
        goto LABEL_84;
      }
      while (1)
      {
        int64_t v61 = v57 + 1;
        if (__OFADD__(v57, 1)) {
          goto LABEL_102;
        }
        if (v61 >= v56) {
          goto LABEL_93;
        }
        unint64_t v62 = *(void *)(v52 + 8 * v61);
        ++v57;
        if (!v62)
        {
          int64_t v57 = v61 + 1;
          if (v61 + 1 >= v56) {
            goto LABEL_93;
          }
          unint64_t v62 = *(void *)(v52 + 8 * v57);
          if (!v62)
          {
            int64_t v57 = v61 + 2;
            if (v61 + 2 >= v56) {
              goto LABEL_93;
            }
            unint64_t v62 = *(void *)(v52 + 8 * v57);
            if (!v62)
            {
              int64_t v57 = v61 + 3;
              if (v61 + 3 >= v56) {
                goto LABEL_93;
              }
              unint64_t v62 = *(void *)(v52 + 8 * v57);
              if (!v62)
              {
                int64_t v57 = v61 + 4;
                if (v61 + 4 >= v56) {
                  goto LABEL_93;
                }
                unint64_t v62 = *(void *)(v52 + 8 * v57);
                if (!v62)
                {
                  int64_t v63 = v61 + 5;
                  if (v63 >= v56)
                  {
LABEL_93:
                    int64_t v74 = (void *)isUniquelyReferenced_nonNull_native;
                    unint64_t v75 = *(uint64_t **)(isUniquelyReferenced_nonNull_native + 32);
                    swift_release();
                    type metadata accessor for FormatServiceOptions();
                    sub_1BFFDEB20();
                    uint64_t v76 = swift_allocObject();
                    *(_OWORD *)(v76 + 16) = xmmword_1C152C7F0;
                    uint64_t v77 = v25[2];
                    uint64_t v78 = MEMORY[0x1E4FBB550];
                    uint64_t v79 = MEMORY[0x1E4FBB5C8];
                    *(void *)(v76 + 56) = MEMORY[0x1E4FBB550];
                    *(void *)(v76 + 64) = v79;
                    *(void *)(v76 + 32) = v77;
                    uint64_t v80 = v101[2];
                    *(void *)(v76 + 96) = v78;
                    *(void *)(v76 + 104) = v79;
                    *(void *)(v76 + 72) = v80;
                    uint64_t v82 = *v75;
                    uint64_t v81 = v75[1];
                    *(void *)(v76 + 136) = MEMORY[0x1E4FBB1A0];
                    *(void *)(v76 + 144) = sub_1BFE9C558();
                    *(void *)(v76 + 112) = v82;
                    *(void *)(v76 + 120) = v81;
                    swift_bridgeObjectRetain();
                    sub_1C151F38C();
                    sub_1C15197BC();
                    swift_bridgeObjectRelease();
                    if (v101[2])
                    {
                      uint64_t v84 = *(void *)(isUniquelyReferenced_nonNull_native + 56);
                      uint64_t v83 = *(void *)(isUniquelyReferenced_nonNull_native + 64);
                      uint64_t v85 = (void *)v74[5];
                      uint64_t v86 = v74[6];
                      uint64_t v87 = v85[33];
                      uint64_t v88 = v85[34];
                      __swift_project_boxed_opaque_existential_1(v85 + 30, v87);
                      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
                      (*(void (**)(uint64_t, void, uint64_t))(v84 + 104))(v83, *MEMORY[0x1E4FBCB28], v86);
                      swift_bridgeObjectRetain();
                      uint64_t v89 = sub_1C151F5BC();
                      v74[12] = v89;
                      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v86);
                      uint64_t v98 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 + 88)
                                                                                                 + **(int **)(v88 + 88));
                      BOOL v90 = (void *)swift_task_alloc();
                      v74[13] = v90;
                      *BOOL v90 = v74;
                      v90[1] = sub_1C011FF1C;
                      return v98(v101, 1, v89, v87, v88);
                    }
                    else
                    {
                      uint64_t v91 = swift_bridgeObjectRetain();
                      unint64_t v92 = sub_1BFD35AC0(v91);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRetain();
                      unint64_t v93 = sub_1C0149B10(MEMORY[0x1E4FBC868], v92, v23);
                      swift_bridgeObjectRelease_n();
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_task_dealloc();
                      char v94 = (uint64_t (*)(void *))v74[1];
                      return v94(v93);
                    }
                  }
                  unint64_t v62 = *(void *)(v52 + 8 * v63);
                  if (!v62)
                  {
                    while (1)
                    {
                      int64_t v57 = v63 + 1;
                      if (__OFADD__(v63, 1)) {
                        goto LABEL_105;
                      }
                      if (v57 >= v56) {
                        goto LABEL_93;
                      }
                      unint64_t v62 = *(void *)(v52 + 8 * v57);
                      ++v63;
                      if (v62) {
                        goto LABEL_83;
                      }
                    }
                  }
                  int64_t v57 = v63;
                }
              }
            }
          }
        }
LABEL_83:
        unint64_t v55 = (v62 - 1) & v62;
        unint64_t v60 = __clz(__rbit64(v62)) + (v57 << 6);
LABEL_84:
        unint64_t v64 = (uint64_t *)(*(void *)(v23 + 48) + 16 * v60);
        uint64_t v66 = *v64;
        uint64_t v65 = v64[1];
        uint64_t v67 = v25[2];
        swift_bridgeObjectRetain();
        if (!v67
          || (swift_bridgeObjectRetain(), sub_1BFEF2D8C(v66, v65),
                                          char v69 = v68,
                                          swift_bridgeObjectRelease(),
                                          (v69 & 1) == 0))
        {
          uint64_t v70 = v101;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1BFEF9B68(0, v101[2] + 1, 1, v101);
            uint64_t v70 = (void *)result;
          }
          unint64_t v72 = v70[2];
          unint64_t v71 = v70[3];
          uint64_t v58 = v70;
          if (v72 >= v71 >> 1)
          {
            uint64_t result = (uint64_t)sub_1BFEF9B68((void *)(v71 > 1), v72 + 1, 1, v70);
            uint64_t v58 = (void *)result;
          }
          v58[2] = v72 + 1;
          uint64_t v73 = &v58[2 * v72];
          v73[4] = v66;
          v73[5] = v65;
          uint64_t isUniquelyReferenced_nonNull_native = v102;
          goto LABEL_64;
        }
        uint64_t result = swift_bridgeObjectRelease();
        if (v55) {
          goto LABEL_65;
        }
      }
    }
    unint64_t v36 = *(void *)(v95 + 8 * v35);
    ++v31;
    if (!v36)
    {
      int64_t v31 = v35 + 1;
      if (v35 + 1 >= v97) {
        goto LABEL_61;
      }
      unint64_t v36 = *(void *)(v95 + 8 * v31);
      if (!v36)
      {
        int64_t v31 = v35 + 2;
        if (v35 + 2 >= v97) {
          goto LABEL_61;
        }
        unint64_t v36 = *(void *)(v95 + 8 * v31);
        if (!v36) {
          break;
        }
      }
    }
LABEL_46:
    unint64_t v29 = (v36 - 1) & v36;
    unint64_t v34 = __clz(__rbit64(v36)) + (v31 << 6);
LABEL_47:
    id v38 = (uint64_t *)(*(void *)(v100 + 48) + 16 * v34);
    uint64_t v40 = *v38;
    uint64_t v39 = v38[1];
    uint64_t v41 = *(void *)(*(void *)(v100 + 56) + 8 * v34);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v44 = sub_1BFEF2D8C(v40, v39);
    uint64_t v45 = v25[2];
    BOOL v46 = (v43 & 1) == 0;
    uint64_t result = v45 + v46;
    if (__OFADD__(v45, v46))
    {
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
    char v47 = v43;
    if (v25[3] >= result)
    {
      if (v42)
      {
        if (v43) {
          goto LABEL_29;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1C106AF38();
        if (v47) {
          goto LABEL_29;
        }
      }
    }
    else
    {
      sub_1C10550A8(result, v42);
      uint64_t result = sub_1BFEF2D8C(v40, v39);
      if ((v47 & 1) != (v48 & 1)) {
        goto LABEL_58;
      }
      unint64_t v44 = result;
      if (v47)
      {
LABEL_29:
        uint64_t v32 = v25[7];
        swift_unknownObjectRelease();
        *(void *)(v32 + 8 * v44) = v41;
        goto LABEL_30;
      }
    }
    v25[(v44 >> 6) + 8] |= 1 << v44;
    unint64_t v49 = (uint64_t *)(v25[6] + 16 * v44);
    *unint64_t v49 = v40;
    v49[1] = v39;
    *(void *)(v25[7] + 8 * v44) = v41;
    uint64_t v50 = v25[2];
    BOOL v21 = __OFADD__(v50, 1);
    uint64_t v51 = v50 + 1;
    if (v21) {
      goto LABEL_101;
    }
    void v25[2] = v51;
    swift_bridgeObjectRetain();
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
    uint64_t isUniquelyReferenced_nonNull_native = v102;
  }
  int64_t v37 = v35 + 3;
  if (v37 >= v97) {
    goto LABEL_61;
  }
  unint64_t v36 = *(void *)(v95 + 8 * v37);
  if (v36)
  {
    int64_t v31 = v37;
    goto LABEL_46;
  }
  while (1)
  {
    int64_t v31 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v31 >= v97) {
      goto LABEL_61;
    }
    unint64_t v36 = *(void *)(v95 + 8 * v31);
    ++v37;
    if (v36) {
      goto LABEL_46;
    }
  }
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
  return result;
}

uint64_t sub_1C011FF1C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 112) = a1;
  *(void *)(v4 + 120) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void **)(v3 + 96);
  if (v1)
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    char v6 = sub_1C01202A4;
  }
  else
  {

    swift_bridgeObjectRelease();
    char v6 = sub_1C0120098;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

void sub_1C0120098()
{
  unint64_t v1 = v0[14];
  unint64_t v13 = MEMORY[0x1E4FBC860];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_14;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v3 = 0;
  uint64_t v4 = v0[14] + 32;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = (void *)MEMORY[0x1C18C7CB0](v3, v0[14]);
    }
    else
    {
      uint64_t v5 = *(void **)(v4 + 8 * v3);
      swift_unknownObjectRetain();
    }
    id v6 = objc_msgSend(v5, sel_puzzleType, v13);
    swift_getObjectType();
    char v7 = FCPuzzleTypeProviding.isAllowed.getter();
    swift_unknownObjectRelease();
    if (v7)
    {
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
    }
    else
    {
      swift_unknownObjectRelease();
    }
    ++v3;
  }
  while (v2 != v3);
  swift_bridgeObjectRelease();
  unint64_t v8 = v13;
LABEL_15:
  uint64_t v9 = v0[9];
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C0149B10(v10, v8, v9);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v12 = (void (*)(void *))v0[1];
  v12(v11);
}

uint64_t sub_1C01202A4()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0120314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  void v10[4] = a5;
  void v10[5] = a2;
  v10[2] = a3;
  v10[3] = a4;
  v10[1] = sub_1C0104C04;
  return MEMORY[0x1F4188298](sub_1C0120400, 0, 0);
}

uint64_t sub_1C01203DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1C0120400, 0, 0);
}

uint64_t sub_1C0120400()
{
  uint64_t v1 = FormatContent.requirements.getter();
  unint64_t v2 = Array<A>.puzzleTypes.getter(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C018D364(MEMORY[0x1E4FBC860]);
  if (v2 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    char v43 = v0;
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    char v43 = v0;
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 0;
      unint64_t v44 = v2;
      unint64_t v46 = v2 & 0xC000000000000001;
      do
      {
        if (v46)
        {
          uint64_t v8 = MEMORY[0x1C18C7CB0](v5, v2);
          uint64_t v0 = (void *)(v5 + 1);
          if (__OFADD__(v5, 1)) {
            goto LABEL_25;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(v2 + 8 * v5 + 32);
          swift_retain();
          uint64_t v0 = (void *)(v5 + 1);
          if (__OFADD__(v5, 1))
          {
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
        }
        unint64_t v2 = v4;
        uint64_t v10 = *(void *)(v8 + 16);
        uint64_t v9 = *(void *)(v8 + 24);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v13 = sub_1BFEF2D8C(v10, v9);
        uint64_t v14 = v3[2];
        BOOL v15 = (v12 & 1) == 0;
        uint64_t v16 = v14 + v15;
        if (__OFADD__(v14, v15)) {
          goto LABEL_26;
        }
        char v17 = v12;
        if (v3[3] >= v16)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if (v12) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_1C106B180();
            if (v17) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_1C10557C8(v16, isUniquelyReferenced_nonNull_native);
          unint64_t v18 = sub_1BFEF2D8C(v10, v9);
          if ((v17 & 1) != (v19 & 1))
          {
            return sub_1C1520CFC();
          }
          unint64_t v13 = v18;
          if (v17)
          {
LABEL_4:
            uint64_t v6 = v3[7];
            swift_release();
            *(void *)(v6 + 8 * v13) = v8;
            goto LABEL_5;
          }
        }
        v3[(v13 >> 6) + 8] |= 1 << v13;
        uint64_t v20 = (uint64_t *)(v3[6] + 16 * v13);
        *uint64_t v20 = v10;
        v20[1] = v9;
        *(void *)(v3[7] + 8 * v13) = v8;
        uint64_t v21 = v3[2];
        BOOL v22 = __OFADD__(v21, 1);
        uint64_t v23 = v21 + 1;
        if (v22) {
          goto LABEL_27;
        }
        v3[2] = v23;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v5;
        uint64_t v4 = v2;
        BOOL v7 = v0 == (void *)v2;
        unint64_t v2 = v44;
      }
      while (!v7);
    }
  }
  v43[6] = v3;
  swift_bridgeObjectRelease_n();
  if (v3[2])
  {
    uint64_t v25 = (uint64_t *)v43[4];
    unint64_t v26 = sub_1C01289F4(v43[2], (uint64_t)v3, v43[5]);
    uint64_t v28 = v27;
    v43[7] = v26;
    v43[8] = v27;
    type metadata accessor for FormatServiceOptions();
    sub_1BFFDEB20();
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C152C7F0;
    uint64_t v30 = *(void *)(v26 + 16);
    uint64_t v31 = MEMORY[0x1E4FBB550];
    uint64_t v32 = MEMORY[0x1E4FBB5C8];
    *(void *)(v29 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v29 + 64) = v32;
    *(void *)(v29 + 32) = v30;
    uint64_t v33 = *(void *)(v28 + 16);
    *(void *)(v29 + 96) = v31;
    *(void *)(v29 + 104) = v32;
    *(void *)(v29 + 72) = v33;
    uint64_t v35 = *v25;
    uint64_t v34 = v25[1];
    *(void *)(v29 + 136) = MEMORY[0x1E4FBB1A0];
    *(void *)(v29 + 144) = sub_1BFE9C558();
    *(void *)(v29 + 112) = v35;
    *(void *)(v29 + 120) = v34;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    if (*(void *)(v28 + 16))
    {
      unint64_t v36 = (void *)v43[5];
      id v37 = objc_msgSend(self, sel_cachePolicyWithSoftMaxAge_, 120.0);
      v43[9] = v37;
      uint64_t v38 = v36[33];
      uint64_t v39 = v36[34];
      __swift_project_boxed_opaque_existential_1(v36 + 30, v38);
      uint64_t v45 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t))(*(void *)(v39 + 128)
                                                                           + **(int **)(v39 + 128));
      id v40 = v37;
      uint64_t v41 = (void *)swift_task_alloc();
      v43[10] = v41;
      *uint64_t v41 = v43;
      v41[1] = sub_1C012090C;
      return v45(v28, v37, 25, v38, v39);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v26 = sub_1C018D348(MEMORY[0x1E4FBC860]);
  }
  char v42 = (uint64_t (*)(unint64_t))v43[1];
  return v42(v26);
}

uint64_t sub_1C012090C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[11] = a1;
  v3[12] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1C0120C10;
  }
  else
  {
    uint64_t v5 = (void *)v3[9];
    swift_bridgeObjectRelease();

    uint64_t v4 = sub_1C0120A2C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

void sub_1C0120A2C()
{
  unint64_t v1 = v0[11];
  unint64_t v11 = MEMORY[0x1E4FBC860];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v4 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_14;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      MEMORY[0x1C18C7CB0](i, v0[11]);
    }
    else {
      swift_unknownObjectRetain();
    }
    swift_getObjectType();
    if (FCPuzzleTypeProviding.isAllowed.getter())
    {
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v4 = v11;
LABEL_15:
  uint64_t v5 = (void *)v0[9];
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[5];
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = sub_1C0149C58(v6, v4, v7, v8);
  swift_release();
  swift_bridgeObjectRelease_n();

  swift_release();
  uint64_t v10 = (void (*)(uint64_t))v0[1];
  v10(v9);
}

uint64_t sub_1C0120C10()
{
  unint64_t v1 = *(void **)(v0 + 72);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0120C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_1C0120D54;
  return sub_1C0120EC4(a3, a4, a5);
}

uint64_t sub_1C0120D54(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x1F4188298](sub_1C0120EA0, 0, 0);
  }
}

uint64_t sub_1C0120EA0()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0120EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for PuzzleStatistic();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0120F98, 0, 0);
}

uint64_t sub_1C0120F98()
{
  uint64_t v1 = FormatContent.requirements.getter();
  uint64_t v2 = Array<A>.puzzleStatistics.getter(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C018D5E4(MEMORY[0x1E4FBC860]);
  uint64_t v4 = v2[2];
  if (v4)
  {
    unint64_t v49 = v0;
    swift_bridgeObjectRetain();
    uint64_t v5 = v2 + 8;
    while (1)
    {
      uint64_t v50 = v4;
      uint64_t v8 = *(v5 - 4);
      uint64_t v7 = *(v5 - 3);
      long long v51 = *((_OWORD *)v5 - 1);
      uint64_t v9 = *v5;
      uint64_t v52 = *(void *)(v8 + 16);
      uint64_t v53 = *(void *)(v8 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v55 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v18 = sub_1BFEF2D8C(v52, v53);
      uint64_t v19 = v3[2];
      BOOL v20 = (v11 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20))
      {
        __break(1u);
LABEL_31:
        __break(1u);
        return MEMORY[0x1F4188080](v21, v11, v12, v13, v14, v15, v16, v17);
      }
      char v22 = v11;
      if (v3[3] >= v21)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v23 = v55;
          if (v11) {
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t v21 = (uint64_t)sub_1C106B198();
          uint64_t v23 = v55;
          if (v22) {
            goto LABEL_3;
          }
        }
      }
      else
      {
        sub_1C10557E0(v21, isUniquelyReferenced_nonNull_native);
        uint64_t v21 = sub_1BFEF2D8C(v52, v53);
        if ((v22 & 1) != (v11 & 1))
        {
          return sub_1C1520CFC();
        }
        unint64_t v18 = v21;
        uint64_t v23 = v55;
        if (v22)
        {
LABEL_3:
          uint64_t v6 = v3[7] + 40 * v18;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)uint64_t v6 = v8;
          *(void *)(v6 + 8) = v7;
          *(_OWORD *)(v6 + 16) = v51;
          *(void *)(v6 + 32) = v23;
          goto LABEL_4;
        }
      }
      v3[(v18 >> 6) + 8] |= 1 << v18;
      uint64_t v24 = (uint64_t *)(v3[6] + 16 * v18);
      *uint64_t v24 = v52;
      v24[1] = v53;
      uint64_t v25 = v3[7] + 40 * v18;
      *(void *)uint64_t v25 = v8;
      *(void *)(v25 + 8) = v7;
      *(_OWORD *)(v25 + 16) = v51;
      *(void *)(v25 + 32) = v23;
      uint64_t v26 = v3[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27) {
        goto LABEL_31;
      }
      v3[2] = v28;
      swift_bridgeObjectRetain();
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 += 5;
      --v4;
      if (v50 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v0 = v49;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (!v3[2])
  {
    swift_bridgeObjectRelease();
    unint64_t v30 = sub_1C018D398(MEMORY[0x1E4FBC860]);
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    char v48 = (uint64_t (*)(unint64_t))v0[1];
    return v48(v30);
  }
  uint64_t v29 = (uint64_t *)v0[5];
  unint64_t v30 = sub_1C01294F8(v0[3], (uint64_t)v3);
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  v0[11] = v30;
  v0[12] = v32;
  type metadata accessor for FormatServiceOptions();
  sub_1BFFDEB20();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C152C7F0;
  uint64_t v34 = *(void *)(v30 + 16);
  uint64_t v35 = MEMORY[0x1E4FBB550];
  uint64_t v36 = MEMORY[0x1E4FBB5C8];
  *(void *)(v33 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v33 + 64) = v36;
  *(void *)(v33 + 32) = v34;
  uint64_t v37 = *(void *)(v32 + 16);
  *(void *)(v33 + 96) = v35;
  *(void *)(v33 + 104) = v36;
  *(void *)(v33 + 72) = v37;
  uint64_t v39 = *v29;
  uint64_t v38 = v29[1];
  *(void *)(v33 + 136) = MEMORY[0x1E4FBB1A0];
  *(void *)(v33 + 144) = sub_1BFE9C558();
  *(void *)(v33 + 112) = v39;
  *(void *)(v33 + 120) = v38;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  if (!*(void *)(v32 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  uint64_t v40 = v0[6];
  sub_1C0153798(0);
  uint64_t v42 = v41;
  sub_1C0158D58(0, &qword_1EB86DDF0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatistic, MEMORY[0x1E4FBB320]);
  uint64_t v44 = v43;
  uint64_t v45 = swift_task_alloc();
  v0[13] = v45;
  *(void *)(v45 + 16) = v32;
  *(void *)(v45 + 24) = v40;
  unint64_t v46 = (void *)swift_task_alloc();
  v0[14] = v46;
  *unint64_t v46 = v0;
  v46[1] = sub_1C01214D8;
  BOOL v15 = &unk_1EA196EC0;
  uint64_t v21 = (uint64_t)(v0 + 2);
  uint64_t v11 = v42;
  uint64_t v12 = v44;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v16 = v45;
  uint64_t v17 = v42;
  return MEMORY[0x1F4188080](v21, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_1C01214D8()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_1C0121AEC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C0121648;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0121648()
{
  uint64_t v41 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[2];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v1[8];
    uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    uint64_t v7 = (void *)v1[11];
    swift_bridgeObjectRetain();
    uint64_t v36 = v6;
    while (1)
    {
      uint64_t v37 = v3;
      uint64_t v9 = (id *)v1[10];
      sub_1BFE338B4(v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      id v10 = objc_msgSend(*v9, sel_identifier);
      uint64_t v11 = sub_1C151E62C();
      uint64_t v13 = v12;

      PuzzleStatisticCategory.statisticType.getter(&v38);
      uint64_t v14 = v1;
      uint64_t v17 = v1 + 9;
      uint64_t v15 = v1[9];
      uint64_t v16 = v17[1];
      uint64_t v39 = (void *)v11;
      uint64_t v40 = v13;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = (uint64_t)v39;
      uint64_t v18 = v40;
      sub_1BFE338B4(v16, v15, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v39 = v7;
      unint64_t v22 = sub_1BFEF2D8C(v19, v18);
      uint64_t v23 = v7[2];
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24))
      {
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0121AC8);
      }
      char v26 = v21;
      if (v7[3] >= v25)
      {
        uint64_t v1 = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C106AECC();
          uint64_t v7 = v39;
        }
      }
      else
      {
        sub_1C105503C(v25, isUniquelyReferenced_nonNull_native);
        uint64_t v7 = v39;
        unint64_t v27 = sub_1BFEF2D8C(v19, v18);
        if ((v26 & 1) != (v28 & 1))
        {
          return sub_1C1520CFC();
        }
        unint64_t v22 = v27;
        uint64_t v1 = v14;
      }
      uint64_t v29 = v1[9];
      if (v26)
      {
        sub_1C0153880(v29, v7[7] + v22 * v36);
      }
      else
      {
        v7[(v22 >> 6) + 8] |= 1 << v22;
        unint64_t v30 = (uint64_t *)(v7[6] + 16 * v22);
        *unint64_t v30 = v19;
        v30[1] = v18;
        sub_1C01054A0(v29, v7[7] + v22 * v36, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        uint64_t v31 = v7[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32) {
          goto LABEL_23;
        }
        v7[2] = v33;
        swift_bridgeObjectRetain();
      }
      uint64_t v8 = v1[10];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFDDF774(v8, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      v5 += v36;
      uint64_t v3 = v37 - 1;
      if (v37 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
  }
  uint64_t v7 = (void *)v1[11];
LABEL_16:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = (uint64_t (*)(void *))v1[1];
  return v34(v7);
}

uint64_t sub_1C0121AEC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0121B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_1C0104C04;
  v8[3] = a5;
  void v8[4] = a2;
  return MEMORY[0x1F4188298](sub_1C0121C2C, 0, 0);
}

uint64_t sub_1C0121C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  return MEMORY[0x1F4188298](sub_1C0121C2C, 0, 0);
}

uint64_t sub_1C0121C2C()
{
  uint64_t v1 = FormatContent.requirements.getter();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (int8x16_t *)(v1 + 40);
    while (1)
    {
      if (v3[2].i8[0] == 17)
      {
        int8x16_t v4 = vorrq_s8(*v3, v3[1]);
        if (!(*(void *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | v3[-1].i64[1])) {
          break;
        }
      }
      v3 += 3;
      if (!--v2) {
        goto LABEL_9;
      }
    }
    uint64_t v5 = (void *)v0[4];
    swift_bridgeObjectRelease();
    uint64_t v6 = v5[47];
    uint64_t v7 = v5[48];
    __swift_project_boxed_opaque_existential_1(v5 + 44, v6);
    v0[5] = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[6] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1C0121DA8;
    return MEMORY[0x1F415EBC8](v0 + 2);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    unint64_t v9 = sub_1C018D770(MEMORY[0x1E4FBC860]);
    uint64_t v10 = (uint64_t (*)(unint64_t))v0[1];
    return v10(v9);
  }
}

uint64_t sub_1C0121DA8()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0121EE0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C0121EC4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0121EC4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1C0121EE0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0121F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C0104C04;
  v10[15] = a5;
  v10[16] = a2;
  v10[13] = a3;
  v10[14] = a4;
  return MEMORY[0x1F4188298](sub_1C0122030, 0, 0);
}

uint64_t sub_1C012200C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[15] = a3;
  v4[16] = v3;
  v4[13] = a1;
  v4[14] = a2;
  return MEMORY[0x1F4188298](sub_1C0122030, 0, 0);
}

uint64_t sub_1C0122030()
{
  uint64_t v132 = v0;
  v0[2] = MEMORY[0x1E4FBC860];
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = v1[13];
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C01017F4(v3);
  swift_bridgeObjectRelease();
  sub_1C10475A4(v4);
  uint64_t v5 = v1[14];
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C0101A18(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = v7;
  unint64_t v9 = v0;
  sub_1C10475A4(v8);
  uint64_t v10 = v1[15];
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C0101C40(v11);
  uint64_t v129 = v10;
  swift_bridgeObjectRelease();
  sub_1C10475A4(v12);
  uint64_t v13 = v1[16];
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C0101E68(v14);
  uint64_t v128 = v13;
  swift_bridgeObjectRelease();
  sub_1C10475A4(v15);
  uint64_t v16 = v1[17];
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C0102090(v17);
  uint64_t v130 = v16;
  swift_bridgeObjectRelease();
  sub_1C10475A4(v18);
  uint64_t v127 = v1[18];
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C01022B8(v19);
  swift_bridgeObjectRelease();
  sub_1C10475A4(v20);
  uint64_t v21 = v1[19];
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C01024E4(v22);
  uint64_t v125 = v21;
  swift_bridgeObjectRelease();
  sub_1C10475A4(v23);
  uint64_t v24 = MEMORY[0x1E4FBC870];
  v9[10] = MEMORY[0x1E4FBC870];
  v9[11] = v24;
  uint64_t v25 = FormatContent.requirements.getter();
  unint64_t v26 = Array<A>.scores.getter(v25);
  uint64_t v27 = swift_bridgeObjectRelease();
  uint64_t v126 = v9;
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C15204BC();
    uint64_t v27 = swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v35 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v35)
    {
LABEL_3:
      if (v35 >= 1)
      {
        uint64_t v36 = 0;
        while (1)
        {
          if ((v26 & 0xC000000000000001) != 0)
          {
            uint64_t v39 = (void *)MEMORY[0x1C18C7CB0](v36, v26);
            if (!*(void *)(v2 + 16)) {
              goto LABEL_5;
            }
          }
          else
          {
            uint64_t v39 = *(void **)(v26 + 8 * v36 + 32);
            swift_retain();
            if (!*(void *)(v2 + 16)) {
              goto LABEL_5;
            }
          }
          uint64_t v40 = v39[4];
          uint64_t v41 = v39[5];
          swift_bridgeObjectRetain();
          sub_1BFEF2D8C(v40, v41);
          LOBYTE(v40) = v42;
          swift_bridgeObjectRelease();
          if (v40)
          {
            swift_release();
            goto LABEL_6;
          }
LABEL_5:
          uint64_t v37 = v39[2];
          uint64_t v38 = v39[3];
          swift_bridgeObjectRetain();
          sub_1BFEFFC1C(&v131, v37, v38);
          swift_release();
          swift_bridgeObjectRelease();
LABEL_6:
          if (v35 == ++v36) {
            goto LABEL_14;
          }
        }
      }
      __break(1u);
      goto LABEL_109;
    }
  }
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v43 = FormatContent.requirements.getter();
  unint64_t v44 = Array<A>.standings.getter(v43);
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1C15204BC();
    uint64_t v27 = swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v45)
    {
LABEL_16:
      if (v45 < 1)
      {
LABEL_109:
        __break(1u);
        goto LABEL_110;
      }
      for (uint64_t i = 0; v45 != i; ++i)
      {
        if ((v44 & 0xC000000000000001) != 0)
        {
          uint64_t v49 = MEMORY[0x1C18C7CB0](i, v44);
        }
        else
        {
          uint64_t v49 = *(void *)(v44 + 8 * i + 32);
          swift_retain();
        }
        uint64_t v47 = *(void *)(v49 + 24);
        if (*(void *)(v5 + 16))
        {
          uint64_t v50 = *(void *)(v49 + 16);
          swift_bridgeObjectRetain();
          sub_1BFEF2D8C(v50, v47);
          LOBYTE(v50) = v51;
          swift_bridgeObjectRelease();
          if (v50)
          {
            swift_release();
            continue;
          }
          uint64_t v47 = *(void *)(v49 + 24);
        }
        uint64_t v48 = *(void *)(v49 + 16);
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(&v131, v48, v47);
        swift_release();
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v52 = FormatContent.requirements.getter();
  unint64_t v53 = Array<A>.brackets.getter(v52);
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v53 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_1C15204BC();
    uint64_t v27 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v55 = v129;
  if (v54)
  {
    if (v54 < 1)
    {
LABEL_110:
      __break(1u);
      goto LABEL_111;
    }
    for (uint64_t j = 0; v54 != j; ++j)
    {
      if ((v53 & 0xC000000000000001) != 0)
      {
        uint64_t v59 = MEMORY[0x1C18C7CB0](j, v53);
      }
      else
      {
        uint64_t v59 = *(void *)(v53 + 8 * j + 32);
        swift_retain();
      }
      uint64_t v57 = *(void *)(v59 + 24);
      if (*(void *)(v55 + 16))
      {
        uint64_t v60 = *(void *)(v59 + 16);
        swift_bridgeObjectRetain();
        sub_1BFEF2D8C(v60, v57);
        char v62 = v61;
        swift_bridgeObjectRelease();
        if (v62)
        {
          swift_release();
          goto LABEL_35;
        }
        uint64_t v57 = *(void *)(v59 + 24);
      }
      uint64_t v58 = *(void *)(v59 + 16);
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v131, v58, v57);
      swift_release();
      swift_bridgeObjectRelease();
LABEL_35:
      uint64_t v55 = v129;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = FormatContent.requirements.getter();
  unint64_t v64 = Array<A>.boxScores.getter(v63);
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v64 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1C15204BC();
    uint64_t v27 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v65 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v66 = v125;
  uint64_t v67 = v128;
  if (v65)
  {
    if (v65 < 1)
    {
LABEL_111:
      __break(1u);
      goto LABEL_112;
    }
    uint64_t v68 = 0;
    unint64_t v69 = v64 & 0xC000000000000001;
    do
    {
      if (v69)
      {
        uint64_t v72 = MEMORY[0x1C18C7CB0](v68, v64);
      }
      else
      {
        uint64_t v72 = *(void *)(v64 + 8 * v68 + 32);
        swift_retain();
      }
      uint64_t v70 = *(void *)(v72 + 24);
      if (*(void *)(v67 + 16))
      {
        unint64_t v73 = v64;
        uint64_t v74 = v66;
        uint64_t v75 = *(void *)(v72 + 16);
        swift_bridgeObjectRetain();
        sub_1BFEF2D8C(v75, v70);
        char v77 = v76;
        swift_bridgeObjectRelease();
        if (v77)
        {
          swift_release();
          uint64_t v66 = v74;
          unint64_t v64 = v73;
          goto LABEL_49;
        }
        uint64_t v70 = *(void *)(v72 + 24);
        uint64_t v66 = v74;
        unint64_t v64 = v73;
      }
      uint64_t v71 = *(void *)(v72 + 16);
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v131, v71, v70);
      swift_release();
      swift_bridgeObjectRelease();
LABEL_49:
      ++v68;
      uint64_t v67 = v128;
    }
    while (v65 != v68);
  }
  swift_bridgeObjectRelease();
  uint64_t v78 = FormatContent.requirements.getter();
  unint64_t v79 = Array<A>.lineScores.getter(v78);
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v79 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v80 = sub_1C15204BC();
    uint64_t v27 = swift_bridgeObjectRelease();
    if (v80) {
      goto LABEL_58;
    }
  }
  else
  {
    uint64_t v80 = *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v80)
    {
LABEL_58:
      if (v80 < 1)
      {
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      for (uint64_t k = 0; v80 != k; ++k)
      {
        if ((v79 & 0xC000000000000001) != 0)
        {
          uint64_t v84 = MEMORY[0x1C18C7CB0](k, v79);
        }
        else
        {
          uint64_t v84 = *(void *)(v79 + 8 * k + 32);
          swift_retain();
        }
        uint64_t v82 = *(void *)(v84 + 24);
        if (*(void *)(v130 + 16))
        {
          uint64_t v85 = *(void *)(v84 + 16);
          swift_bridgeObjectRetain();
          sub_1BFEF2D8C(v85, v82);
          LOBYTE(v85) = v86;
          swift_bridgeObjectRelease();
          if (v85)
          {
            swift_release();
            continue;
          }
          uint64_t v82 = *(void *)(v84 + 24);
        }
        uint64_t v83 = *(void *)(v84 + 16);
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(&v131, v83, v82);
        swift_release();
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v87 = FormatContent.requirements.getter();
  unint64_t v88 = Array<A>.injuryReports.getter(v87);
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v88 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v89 = sub_1C15204BC();
    uint64_t v27 = swift_bridgeObjectRelease();
    if (v89) {
      goto LABEL_74;
    }
  }
  else
  {
    uint64_t v89 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v89)
    {
LABEL_74:
      if (v89 < 1)
      {
LABEL_113:
        __break(1u);
        goto LABEL_114;
      }
      for (uint64_t m = 0; v89 != m; ++m)
      {
        if ((v88 & 0xC000000000000001) != 0)
        {
          uint64_t v93 = MEMORY[0x1C18C7CB0](m, v88);
        }
        else
        {
          uint64_t v93 = *(void *)(v88 + 8 * m + 32);
          swift_retain();
        }
        uint64_t v91 = *(void *)(v93 + 24);
        if (*(void *)(v127 + 16))
        {
          uint64_t v94 = *(void *)(v93 + 16);
          swift_bridgeObjectRetain();
          sub_1BFEF2D8C(v94, v91);
          char v96 = v95;
          swift_bridgeObjectRelease();
          if (v96)
          {
            swift_release();
            continue;
          }
          uint64_t v91 = *(void *)(v93 + 24);
        }
        uint64_t v92 = *(void *)(v93 + 16);
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(&v131, v92, v91);
        swift_release();
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v97 = FormatContent.requirements.getter();
  unint64_t v98 = Array<A>.keyPlayers.getter(v97);
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v98 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v99 = sub_1C15204BC();
    uint64_t v27 = swift_bridgeObjectRelease();
    if (v99) {
      goto LABEL_88;
    }
  }
  else
  {
    uint64_t v99 = *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v99)
    {
LABEL_88:
      if (v99 < 1)
      {
LABEL_114:
        __break(1u);
        return MEMORY[0x1F4188080](v27, v28, v29, v30, v31, v32, v33, v34);
      }
      for (uint64_t n = 0; v99 != n; ++n)
      {
        if ((v98 & 0xC000000000000001) != 0)
        {
          uint64_t v103 = MEMORY[0x1C18C7CB0](n, v98);
        }
        else
        {
          uint64_t v103 = *(void *)(v98 + 8 * n + 32);
          swift_retain();
        }
        uint64_t v101 = *(void *)(v103 + 24);
        if (*(void *)(v66 + 16))
        {
          uint64_t v104 = *(void *)(v103 + 16);
          swift_bridgeObjectRetain();
          sub_1BFEF2D8C(v104, v101);
          LOBYTE(v104) = v105;
          swift_bridgeObjectRelease();
          if (v104)
          {
            swift_release();
            continue;
          }
          uint64_t v101 = *(void *)(v103 + 24);
        }
        uint64_t v102 = *(void *)(v103 + 16);
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(&v131, v102, v101);
        swift_release();
        swift_bridgeObjectRelease();
      }
    }
  }
  unint64_t v106 = (uint64_t *)v126[15];
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceOptions();
  sub_1BFFDEB20();
  uint64_t v107 = swift_allocObject();
  *(_OWORD *)(v107 + 16) = xmmword_1C152C7F0;
  uint64_t v108 = v126[2];
  uint64_t v109 = *(void *)(v108 + 16);
  uint64_t v110 = MEMORY[0x1E4FBB550];
  uint64_t v111 = MEMORY[0x1E4FBB5C8];
  *(void *)(v107 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v107 + 64) = v111;
  *(void *)(v107 + 32) = v109;
  uint64_t v112 = v126[10];
  v126[17] = v112;
  uint64_t v113 = *(void *)(v112 + 16);
  *(void *)(v107 + 96) = v110;
  *(void *)(v107 + 104) = v111;
  *(void *)(v107 + 72) = v113;
  uint64_t v115 = *v106;
  uint64_t v114 = v106[1];
  *(void *)(v107 + 136) = MEMORY[0x1E4FBB1A0];
  *(void *)(v107 + 144) = sub_1BFE9C558();
  *(void *)(v107 + 112) = v115;
  *(void *)(v107 + 120) = v114;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v116 = *(void *)(v112 + 16);
  uint64_t v117 = v126[11];
  v126[18] = v117;
  if (v116 || *(void *)(v117 + 16))
  {
    uint64_t v118 = v126[16];
    sub_1BFEF9AD0(0, &qword_1EB890030, (uint64_t)&type metadata for SportsDataVisualization, MEMORY[0x1E4FBB320]);
    uint64_t v120 = v119;
    id v121 = (void *)swift_task_alloc();
    v126[19] = v121;
    _OWORD v121[2] = v112;
    v121[3] = v118;
    v121[4] = v117;
    swift_bridgeObjectRetain();
    uint64_t v122 = (void *)swift_task_alloc();
    v126[20] = v122;
    *uint64_t v122 = v126;
    v122[1] = sub_1C0122CB8;
    char v28 = &type metadata for SportsDataVisualizationResult;
    uint64_t v134 = v120;
    BOOL v32 = &unk_1EA196E50;
    uint64_t v27 = (uint64_t)(v126 + 12);
    uint64_t v29 = v120;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v33 = v121;
    uint64_t v34 = &type metadata for SportsDataVisualizationResult;
    return MEMORY[0x1F4188080](v27, v28, v29, v30, v31, v32, v33, v34);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v123 = (uint64_t (*)(uint64_t))v126[1];
  return v123(v108);
}

uint64_t sub_1C0122CB8()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_1C0122E98;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C0122E18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0122E18()
{
  uint64_t v3 = v0[2];
  sub_1C10475A4(v0[12]);
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  return v1(v3);
}

uint64_t sub_1C0122E98()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0122EFC(uint64_t a1, void *a2)
{
  uint64_t v3 = FormatContent.requirements.getter();
  uint64_t v4 = Array<A>.webArchives.getter(v3);
  swift_bridgeObjectRelease();
  int64_t v5 = v4[2];
  if (v5)
  {
    uint64_t v25 = a2;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1C05F6530(0, v5, 0);
    uint64_t v6 = v26;
    uint64_t v7 = v4 + 7;
    do
    {
      uint64_t v8 = *(v7 - 3);
      uint64_t v9 = *(v7 - 2);
      uint64_t v10 = *(v7 - 1);
      uint64_t v11 = *v7;
      unint64_t v13 = *(void *)(v26 + 16);
      unint64_t v12 = *(void *)(v26 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1) {
        sub_1C05F6530(v12 > 1, v13 + 1, 1);
      }
      v7 += 4;
      *(void *)(v26 + 16) = v13 + 1;
      uint64_t v14 = (void *)(v26 + 32 * v13);
      _OWORD v14[4] = v8;
      v14[5] = v9;
      v14[6] = v10;
      v14[7] = v11;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    a2 = v25;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for FormatServiceOptions();
  sub_1BFFDEB20();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C1527210;
  uint64_t v16 = *(void *)(v6 + 16);
  uint64_t v17 = MEMORY[0x1E4FBB5C8];
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v15 + 64) = v17;
  *(void *)(v15 + 32) = v16;
  uint64_t v18 = *a2;
  uint64_t v19 = a2[1];
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 104) = sub_1BFE9C558();
  *(void *)(v15 + 72) = v18;
  *(void *)(v15 + 80) = v19;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  uint64_t v21 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v21);
  sub_1C01533E4(0, (unint64_t *)&unk_1EB879BC0, (void (*)(uint64_t))type metadata accessor for WebArchive);
  sub_1C151932C();
  uint64_t v22 = (void *)sub_1C1518E7C();
  sub_1C01533E4(0, &qword_1EB879BD8, (void (*)(uint64_t))type metadata accessor for FormatWebArchiveResource.Resolved);
  sub_1C1518FFC();
  swift_release();

  sub_1C0100E2C(v6);
  swift_bridgeObjectRelease();
  sub_1BFEF9AD0(0, (unint64_t *)&qword_1EB879F20, v20, MEMORY[0x1E4FBB320]);
  sub_1C014FEEC((unint64_t *)&unk_1EB879F40, (unint64_t *)&qword_1EB879F20, v20);
  uint64_t v23 = sub_1C1518F8C();
  swift_bridgeObjectRelease();
  swift_release();
  return v23;
}

uint64_t sub_1C0123240(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = FormatContent.requirements.getter();
  uint64_t v4 = Array<A>.resources.getter(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C0100F04((uint64_t)v4);
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceOptions();
  sub_1BFFDEB20();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1527210;
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v8 = MEMORY[0x1E4FBB5C8];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 32) = v7;
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 104) = sub_1BFE9C558();
  *(void *)(v6 + 72) = v10;
  *(void *)(v6 + 80) = v9;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  sub_1C0153314();
  sub_1C151932C();
  unint64_t v12 = (void *)sub_1C1518E7C();
  sub_1C01533E4(0, &qword_1EB879BD0, (void (*)(uint64_t))type metadata accessor for FormatContentResource.Resolved);
  sub_1C1518FFC();
  swift_release();

  sub_1BFEF9AD0(0, (unint64_t *)&qword_1EB879F20, v11, MEMORY[0x1E4FBB320]);
  sub_1C014FEEC((unint64_t *)&unk_1EB879F40, (unint64_t *)&qword_1EB879F20, v11);
  uint64_t v13 = sub_1C1518F8C();
  swift_bridgeObjectRelease();
  swift_release();
  return v13;
}

uint64_t sub_1C0123468(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 24));
  uint64_t v4 = v3[1];
  if (!v4 || !*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v5 = *v3;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BFEF2D8C(v5, v4);
  if (v7)
  {
    uint64_t v8 = *(void *)(*(void *)(a2 + 56) + 8 * v6);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v8 = 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_1C01234FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 28));
  uint64_t v4 = v3[1];
  if (!v4 || !*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v5 = *v3;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BFEF2D8C(v5, v4);
  if (v7)
  {
    uint64_t v8 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
    id v9 = v8;
  }
  else
  {
    uint64_t v8 = 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C012358C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for FormatService.ThemePackage(0) + 24));
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C01235D8(uint64_t a1)
{
  sub_1C0158D58(0, &qword_1EB894318, type metadata accessor for FormatService.ThemePackage, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v50 = (uint64_t)v45 - v3;
  uint64_t v4 = type metadata accessor for FormatService.ThemePackage(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v49 = (uint64_t)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v46 = (uint64_t)v45 - v8;
  uint64_t v56 = MEMORY[0x1E4FBC868];
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v48 = a1 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
  if (-v10 < 64) {
    uint64_t v11 = ~(-1 << -(char)v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v9;
  v45[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v47 = (unint64_t)(63 - v10) >> 6;
  uint64_t v53 = a1;
  uint64_t v54 = v7;
  char v51 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v12) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v16 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v16 >= v47) {
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v48 + 8 * v16);
    if (v17)
    {
LABEL_20:
      unint64_t v12 = (v17 - 1) & v17;
      unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
      for (i = v16; ; unint64_t v15 = v14 | (i << 6))
      {
        uint64_t v19 = (uint64_t *)(*(void *)(v53 + 48) + 16 * v15);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        uint64_t v22 = *(void *)(*(void *)(v53 + 56) + 8 * v15);
        uint64_t v23 = qword_1EB87BD00;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_1C151928C();
        uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB8799C8);
        MEMORY[0x1F4188790](v25);
        v45[-2] = v26;
        swift_bridgeObjectRetain();
        sub_1C0621C88((uint64_t (*)(char *))sub_1C015329C, (uint64_t)&v45[-4], v22);
        sub_1C014FD48((unint64_t *)&qword_1EB8714E0, 255, MEMORY[0x1E4FAB0A8]);
        uint64_t v27 = sub_1C151EC0C();
        swift_bridgeObjectRelease();
        uint64_t v28 = *(void *)(v27 + 16);
        if (v28)
        {
          uint64_t v29 = v50;
          sub_1BFE338B4(v27+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * (v28 - 1), v50, type metadata accessor for FormatService.ThemePackage);
          uint64_t v30 = 0;
        }
        else
        {
          uint64_t v30 = 1;
          uint64_t v29 = v50;
        }
        (*v52)(v29, v30, 1, v4);
        swift_bridgeObjectRelease();
        if ((*v51)(v29, 1, v4) == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = sub_1C01530F8(v29, (uint64_t)&qword_1EB894318, (uint64_t)type metadata accessor for FormatService.ThemePackage, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
          if (!v12) {
            goto LABEL_8;
          }
        }
        else
        {
          uint64_t v31 = v29;
          uint64_t v32 = v46;
          sub_1C01054A0(v31, v46, type metadata accessor for FormatService.ThemePackage);
          sub_1C01054A0(v32, v49, type metadata accessor for FormatService.ThemePackage);
          uint64_t v33 = v56;
          unint64_t v34 = *(void *)(v56 + 16);
          if (*(void *)(v56 + 24) <= v34)
          {
            sub_1C1055420(v34 + 1, 1);
            uint64_t v33 = v56;
          }
          sub_1C1520DBC();
          sub_1C151E77C();
          uint64_t result = sub_1C1520E0C();
          uint64_t v35 = v33 + 64;
          uint64_t v36 = -1 << *(unsigned char *)(v33 + 32);
          unint64_t v37 = result & ~v36;
          unint64_t v38 = v37 >> 6;
          if (((-1 << v37) & ~*(void *)(v33 + 64 + 8 * (v37 >> 6))) != 0)
          {
            unint64_t v39 = __clz(__rbit64((-1 << v37) & ~*(void *)(v33 + 64 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v40 = 0;
            unint64_t v41 = (unint64_t)(63 - v36) >> 6;
            do
            {
              if (++v38 == v41 && (v40 & 1) != 0)
              {
                __break(1u);
                goto LABEL_46;
              }
              BOOL v42 = v38 == v41;
              if (v38 == v41) {
                unint64_t v38 = 0;
              }
              v40 |= v42;
              uint64_t v43 = *(void *)(v35 + 8 * v38);
            }
            while (v43 == -1);
            unint64_t v39 = __clz(__rbit64(~v43)) + (v38 << 6);
          }
          *(void *)(v35 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
          unint64_t v44 = (void *)(*(void *)(v33 + 48) + 16 * v39);
          *unint64_t v44 = v21;
          v44[1] = v20;
          sub_1C01054A0(v49, *(void *)(v33 + 56) + *(void *)(v54 + 72) * v39, type metadata accessor for FormatService.ThemePackage);
          ++*(void *)(v33 + 16);
          uint64_t result = swift_bridgeObjectRelease();
          if (!v12) {
            goto LABEL_8;
          }
        }
LABEL_7:
        unint64_t v14 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
      }
    }
    int64_t v18 = i + 2;
    if (i + 2 >= v47) {
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v48 + 8 * v18);
    if (!v17)
    {
      int64_t v18 = i + 3;
      if (i + 3 >= v47) {
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v48 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = i + 4;
        if (i + 4 >= v47) {
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v48 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = i + 5;
          if (i + 5 < v47)
          {
            unint64_t v17 = *(void *)(v48 + 8 * v18);
            if (v17) {
              goto LABEL_19;
            }
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_47;
              }
              if (v16 >= v47) {
                break;
              }
              unint64_t v17 = *(void *)(v48 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_20;
              }
            }
          }
LABEL_45:
          sub_1BFEFB808();
          return v56;
        }
      }
    }
LABEL_19:
    int64_t v16 = v18;
    goto LABEL_20;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1C0123C98(uint64_t a1)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v103 = (char *)v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  unint64_t v88 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v87 = (char *)v79 - v7;
  uint64_t v93 = sub_1C15156FC();
  uint64_t v8 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v111 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WebArchive();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v101 = v10;
  uint64_t v102 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, &qword_1EB878460, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebArchiveResource.Resolved, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v95 = (uint64_t)v79 - v15;
  uint64_t v94 = type metadata accessor for FormatWebArchiveResource.Resolved();
  uint64_t v16 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94 - 8);
  uint64_t v91 = (uint64_t)v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  char v86 = (char *)v79 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v85 = (uint64_t)v79 - v21;
  uint64_t v22 = &qword_1EB879BF8;
  sub_1C0153B44(0, &qword_1EB879BF8, (void (*)(uint64_t))type metadata accessor for WebArchive);
  uint64_t v108 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v84 = (void *)((char *)v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  uint64_t v110 = (void *)((char *)v79 - v26);
  MEMORY[0x1F4188790](v27);
  uint64_t v100 = (char *)v79 - v28;
  uint64_t v29 = *(void *)(a1 + 64);
  uint64_t v90 = a1 + 64;
  uint64_t v30 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v113 = MEMORY[0x1E4FBC868];
  if (-v30 < 64) {
    uint64_t v31 = ~(-1 << -(char)v30);
  }
  else {
    uint64_t v31 = -1;
  }
  unint64_t v32 = v31 & v29;
  v79[1] = v30;
  int64_t v89 = (unint64_t)(63 - v30) >> 6;
  uint64_t v99 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v83 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v82 = (void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v81 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v92 = (void (**)(char *, uint64_t))(v8 + 8);
  unint64_t v98 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v80 = v16;
  uint64_t v97 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  uint64_t v104 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  unint64_t v96 = 0x80000001C1604020;
  uint64_t v107 = v13;
  if (v32) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v35 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v35 < v89)
    {
      unint64_t v36 = *(void *)(v90 + 8 * v35);
      int64_t v37 = i + 1;
      if (v36) {
        goto LABEL_23;
      }
      int64_t v37 = i + 2;
      if (i + 2 >= v89) {
        goto LABEL_42;
      }
      unint64_t v36 = *(void *)(v90 + 8 * v37);
      if (v36) {
        goto LABEL_23;
      }
      int64_t v37 = i + 3;
      if (i + 3 >= v89) {
        goto LABEL_42;
      }
      unint64_t v36 = *(void *)(v90 + 8 * v37);
      if (v36) {
        goto LABEL_23;
      }
      int64_t v37 = i + 4;
      if (i + 4 >= v89) {
        goto LABEL_42;
      }
      unint64_t v36 = *(void *)(v90 + 8 * v37);
      if (v36)
      {
LABEL_23:
        uint64_t v109 = (v36 - 1) & v36;
        unint64_t v34 = __clz(__rbit64(v36)) + (v37 << 6);
        for (i = v37; ; unint64_t v34 = __clz(__rbit64(v32)) | (i << 6))
        {
          unint64_t v39 = (uint64_t *)(*(void *)(v104 + 48) + 16 * v34);
          uint64_t v40 = *v39;
          uint64_t v41 = v39[1];
          uint64_t v42 = v108;
          uint64_t v43 = v100;
          sub_1BFE338B4(*(void *)(v104 + 56) + *(void *)(v102 + 72) * v34, (uint64_t)&v100[*(int *)(v108 + 48)], (uint64_t (*)(void))type metadata accessor for WebArchive);
          *uint64_t v43 = v40;
          v43[1] = v41;
          unint64_t v44 = v110;
          sub_1C01531CC((uint64_t)v43, (uint64_t)v110, v22, (void (*)(uint64_t))type metadata accessor for WebArchive);
          uint64_t v45 = (void *)((char *)v44 + *(int *)(v42 + 48));
          uint64_t v46 = v45[1];
          uint64_t v106 = *v45;
          sub_1BFE338B4((uint64_t)v45, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WebArchive);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C15156EC();
          sub_1C15156AC();
          uint64_t v47 = sub_1C1515E6C();
          MEMORY[0x1C18BD1A0](v47);
          swift_bridgeObjectRetain();
          sub_1C15156DC();
          uint64_t v48 = (uint64_t)v103;
          sub_1C151565C();
          uint64_t v49 = v48;
          if ((*v99)(v48, 1, v112) == 1)
          {
            swift_bridgeObjectRelease();
            sub_1BFDDF774((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WebArchive);
            (*v92)(v111, v93);
            sub_1BFDDF774(v48, (uint64_t (*)(void))sub_1BFF00BEC);
            uint64_t v50 = 1;
            uint64_t v51 = v95;
            uint64_t v52 = v94;
          }
          else
          {
            uint64_t v53 = *v83;
            uint64_t v54 = v87;
            (*v83)(v87, v49, v112);
            uint64_t v55 = v22;
            uint64_t v56 = v86;
            *(void *)char v86 = v106;
            *((void *)v56 + 1) = v46;
            uint64_t v57 = v94;
            (*v82)(&v56[*(int *)(v94 + 20)], v54, v112);
            uint64_t v58 = v88;
            sub_1C1515EDC();
            uint64_t v52 = v57;
            sub_1BFDDF774((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for WebArchive);
            uint64_t v59 = v54;
            uint64_t v60 = v93;
            uint64_t v13 = v107;
            (*v81)(v59, v112);
            (*v92)(v111, v60);
            v53(&v56[*(int *)(v52 + 24)], (uint64_t)v58, v112);
            uint64_t v61 = (uint64_t)v56;
            uint64_t v22 = v55;
            uint64_t v51 = v95;
            sub_1C01054A0(v61, v95, (uint64_t (*)(void))type metadata accessor for FormatWebArchiveResource.Resolved);
            uint64_t v50 = 0;
          }
          (*v98)(v51, v50, 1, v52);
          if ((*v97)(v51, 1, v52) == 1)
          {
            sub_1C0153240((uint64_t)v110, v22, (void (*)(uint64_t))type metadata accessor for WebArchive);
            uint64_t result = sub_1C01530F8(v51, (uint64_t)&qword_1EB878460, (uint64_t)type metadata accessor for FormatWebArchiveResource.Resolved, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
            unint64_t v32 = v109;
            if (!v109) {
              goto LABEL_8;
            }
          }
          else
          {
            uint64_t v62 = v85;
            sub_1C01054A0(v51, v85, (uint64_t (*)(void))type metadata accessor for FormatWebArchiveResource.Resolved);
            uint64_t v63 = v84;
            uint64_t v64 = (uint64_t)v84 + *(int *)(v108 + 48);
            uint64_t v65 = *v110;
            uint64_t v66 = v110[1];
            *uint64_t v84 = *v110;
            v63[1] = v66;
            sub_1C01054A0((uint64_t)v45, v64, (uint64_t (*)(void))type metadata accessor for WebArchive);
            sub_1C01054A0(v62, v91, (uint64_t (*)(void))type metadata accessor for FormatWebArchiveResource.Resolved);
            uint64_t v67 = v113;
            unint64_t v68 = *(void *)(v113 + 16);
            if (*(void *)(v113 + 24) <= v68)
            {
              sub_1C1055B44(v68 + 1, 1);
              uint64_t v67 = v113;
            }
            sub_1C1520DBC();
            sub_1C151E77C();
            uint64_t result = sub_1C1520E0C();
            uint64_t v69 = v67 + 64;
            uint64_t v70 = -1 << *(unsigned char *)(v67 + 32);
            unint64_t v71 = result & ~v70;
            unint64_t v72 = v71 >> 6;
            if (((-1 << v71) & ~*(void *)(v67 + 64 + 8 * (v71 >> 6))) != 0)
            {
              unint64_t v73 = __clz(__rbit64((-1 << v71) & ~*(void *)(v67 + 64 + 8 * (v71 >> 6)))) | v71 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              char v74 = 0;
              unint64_t v75 = (unint64_t)(63 - v70) >> 6;
              do
              {
                if (++v72 == v75 && (v74 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_43;
                }
                BOOL v76 = v72 == v75;
                if (v72 == v75) {
                  unint64_t v72 = 0;
                }
                v74 |= v76;
                uint64_t v77 = *(void *)(v69 + 8 * v72);
              }
              while (v77 == -1);
              unint64_t v73 = __clz(__rbit64(~v77)) + (v72 << 6);
            }
            *(void *)(v69 + ((v73 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v73;
            uint64_t v78 = (void *)(*(void *)(v67 + 48) + 16 * v73);
            *uint64_t v78 = v65;
            v78[1] = v66;
            sub_1C01054A0(v91, *(void *)(v67 + 56) + *(void *)(v80 + 72) * v73, (uint64_t (*)(void))type metadata accessor for FormatWebArchiveResource.Resolved);
            ++*(void *)(v67 + 16);
            uint64_t result = sub_1BFDDF774(v64, (uint64_t (*)(void))type metadata accessor for WebArchive);
            uint64_t v13 = v107;
            unint64_t v32 = v109;
            if (!v109) {
              goto LABEL_8;
            }
          }
LABEL_7:
          uint64_t v109 = (v32 - 1) & v32;
        }
      }
      int64_t v38 = i + 5;
      if (i + 5 < v89)
      {
        unint64_t v36 = *(void *)(v90 + 8 * v38);
        if (v36)
        {
          int64_t v37 = i + 5;
          goto LABEL_23;
        }
        while (1)
        {
          int64_t v37 = v38 + 1;
          if (__OFADD__(v38, 1)) {
            goto LABEL_44;
          }
          if (v37 >= v89) {
            break;
          }
          unint64_t v36 = *(void *)(v90 + 8 * v37);
          ++v38;
          if (v36) {
            goto LABEL_23;
          }
        }
      }
    }
LABEL_42:
    sub_1BFEFB808();
    return v113;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

void sub_1C0124918(uint64_t a1)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72 - 8);
  uint64_t v67 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for FormatContentResource.Resolved();
  uint64_t v59 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v71 = (uint64_t)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v64 = (void *)((char *)v58 - v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v63 = (uint64_t)v58 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v62 = (uint64_t)v58 - v13;
  uint64_t v78 = MEMORY[0x1E4FBC868];
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v69 = a1 + 64;
  uint64_t v15 = -1 << *(unsigned char *)(a1 + 32);
  if (-v15 < 64) {
    uint64_t v16 = ~(-1 << -(char)v15);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  v58[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v68 = (unint64_t)(63 - v15) >> 6;
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v73 = a1;
  swift_bridgeObjectRetain();
  int64_t v74 = 0;
  uint64_t v19 = &selRef_setSpacing_;
  uint64_t v65 = v4;
  uint64_t v61 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v17) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v21 = v74 + 1;
  if (!__OFADD__(v74, 1))
  {
    if (v21 < v68)
    {
      unint64_t v22 = *(void *)(v69 + 8 * v21);
      int64_t v23 = v74 + 1;
      if (v22) {
        goto LABEL_23;
      }
      int64_t v23 = v74 + 2;
      if (v74 + 2 >= v68) {
        goto LABEL_39;
      }
      unint64_t v22 = *(void *)(v69 + 8 * v23);
      if (v22) {
        goto LABEL_23;
      }
      int64_t v23 = v74 + 3;
      if (v74 + 3 >= v68) {
        goto LABEL_39;
      }
      unint64_t v22 = *(void *)(v69 + 8 * v23);
      if (v22) {
        goto LABEL_23;
      }
      int64_t v23 = v74 + 4;
      if (v74 + 4 >= v68) {
        goto LABEL_39;
      }
      unint64_t v22 = *(void *)(v69 + 8 * v23);
      if (v22)
      {
LABEL_23:
        int64_t v74 = v23;
        uint64_t v75 = (v22 - 1) & v22;
        for (unint64_t i = __clz(__rbit64(v22)) + (v23 << 6); ; unint64_t i = __clz(__rbit64(v17)) | (v74 << 6))
        {
          uint64_t v25 = (uint64_t *)(*(void *)(v73 + 48) + 16 * i);
          uint64_t v27 = *v25;
          uint64_t v26 = v25[1];
          uint64_t v28 = *(void **)(*(void *)(v73 + 56) + 8 * i);
          swift_bridgeObjectRetain();
          id v29 = v28;
          id v30 = [v29 v19[28]];
          uint64_t v31 = sub_1C151E62C();
          uint64_t v33 = v32;

          uint64_t v76 = 0x7373612D7377656ELL;
          unint64_t v77 = 0xEA00000000007465;
          sub_1C151E80C();
          sub_1C151E80C();
          sub_1C1515F7C();
          swift_bridgeObjectRelease();
          uint64_t v34 = v72;
          if ((*v18)(v4, 1, v72) == 1)
          {
            swift_bridgeObjectRelease();
            sub_1BFDDF774((uint64_t)v4, (uint64_t (*)(void))sub_1BFF00BEC);

            swift_bridgeObjectRelease();
            unint64_t v17 = v75;
            if (!v75) {
              goto LABEL_8;
            }
          }
          else
          {
            id v70 = v29;
            int64_t v35 = *v60;
            unint64_t v36 = v4;
            int64_t v37 = v67;
            (*v60)(v67, v36, v34);
            int64_t v38 = v64;
            *uint64_t v64 = v31;
            v38[1] = v33;
            v35((char *)v38 + *(int *)(v66 + 20), v37, v34);
            uint64_t v39 = v71;
            uint64_t v40 = (uint64_t)v38;
            uint64_t v41 = v63;
            sub_1C01054A0(v40, v63, (uint64_t (*)(void))type metadata accessor for FormatContentResource.Resolved);
            uint64_t v42 = v41;
            uint64_t v43 = v62;
            sub_1C01054A0(v42, v62, (uint64_t (*)(void))type metadata accessor for FormatContentResource.Resolved);
            sub_1C01054A0(v43, v39, (uint64_t (*)(void))type metadata accessor for FormatContentResource.Resolved);
            uint64_t v44 = v78;
            unint64_t v45 = *(void *)(v78 + 16);
            if (*(void *)(v78 + 24) <= v45)
            {
              sub_1C1055B98(v45 + 1, 1);
              uint64_t v44 = v78;
            }
            sub_1C1520DBC();
            sub_1C151E77C();
            uint64_t v46 = sub_1C1520E0C();
            uint64_t v47 = v44 + 64;
            uint64_t v48 = -1 << *(unsigned char *)(v44 + 32);
            unint64_t v49 = v46 & ~v48;
            unint64_t v50 = v49 >> 6;
            uint64_t v4 = v65;
            uint64_t v18 = v61;
            uint64_t v19 = &selRef_setSpacing_;
            if (((-1 << v49) & ~*(void *)(v44 + 64 + 8 * (v49 >> 6))) != 0)
            {
              unint64_t v51 = __clz(__rbit64((-1 << v49) & ~*(void *)(v44 + 64 + 8 * (v49 >> 6)))) | v49 & 0x7FFFFFFFFFFFFFC0;
              uint64_t v52 = v70;
            }
            else
            {
              char v53 = 0;
              unint64_t v54 = (unint64_t)(63 - v48) >> 6;
              uint64_t v52 = v70;
              do
              {
                if (++v50 == v54 && (v53 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_40;
                }
                BOOL v55 = v50 == v54;
                if (v50 == v54) {
                  unint64_t v50 = 0;
                }
                v53 |= v55;
                uint64_t v56 = *(void *)(v47 + 8 * v50);
              }
              while (v56 == -1);
              unint64_t v51 = __clz(__rbit64(~v56)) + (v50 << 6);
            }
            *(void *)(v47 + ((v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v51;
            uint64_t v57 = (void *)(*(void *)(v44 + 48) + 16 * v51);
            *uint64_t v57 = v27;
            v57[1] = v26;
            sub_1C01054A0(v71, *(void *)(v44 + 56) + *(void *)(v59 + 72) * v51, (uint64_t (*)(void))type metadata accessor for FormatContentResource.Resolved);
            ++*(void *)(v44 + 16);

            unint64_t v17 = v75;
            if (!v75) {
              goto LABEL_8;
            }
          }
LABEL_7:
          uint64_t v75 = (v17 - 1) & v17;
        }
      }
      int64_t v24 = v74 + 5;
      if (v74 + 5 < v68)
      {
        unint64_t v22 = *(void *)(v69 + 8 * v24);
        if (v22)
        {
          int64_t v23 = v74 + 5;
          goto LABEL_23;
        }
        while (1)
        {
          int64_t v23 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_41;
          }
          if (v23 >= v68) {
            break;
          }
          unint64_t v22 = *(void *)(v69 + 8 * v23);
          ++v24;
          if (v22) {
            goto LABEL_23;
          }
        }
      }
    }
LABEL_39:
    sub_1BFEFB808();
    return;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t sub_1C0124FE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, void *a3@<X8>)
{
  type metadata accessor for FormatServiceOptions();
  sub_1BFFDEB20();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C152C7F0;
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1BFE9C558();
  *(void *)(v6 + 64) = v10;
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v8;
  uint64_t v11 = *(void *)(a1 + *(int *)(type metadata accessor for FormatService.ThemePackage(0) + 24));
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void *)(v11 + 24);
  *(void *)(v6 + 96) = v9;
  *(void *)(v6 + 104) = v10;
  *(void *)(v6 + 72) = v12;
  *(void *)(v6 + 80) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0125110();
  *(void *)(v6 + 136) = v9;
  *(void *)(v6 + 144) = v10;
  *(void *)(v6 + 112) = v14;
  *(void *)(v6 + 120) = v15;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  *a3 = v11;
  return swift_retain();
}

uint64_t sub_1C0125110()
{
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBC130();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE338B4(v0, (uint64_t)v13, (uint64_t (*)(void))sub_1BFEBC130);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    sub_1BFDDF774((uint64_t)&v13[*(int *)(v14 + 48)], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFDDF774((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    return 0x6E693D657079747BLL;
  }
  else
  {
    sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v17 = (uint64_t)&v13[*(int *)(v16 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    sub_1C01054A0(v17, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    unint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v21 = 0xD000000000000013;
    unint64_t v22 = 0x80000001C1603F20;
    sub_1BFE338B4((uint64_t)&v6[*(int *)(v4 + 28)], (uint64_t)v3, (uint64_t (*)(void))sub_1BFEC0CE8);
    uint64_t v18 = sub_1C151928C();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v3, 1, v18) == 1)
    {
      sub_1BFDDF774((uint64_t)v3, (uint64_t (*)(void))sub_1BFEC0CE8);
    }
    else
    {
      sub_1C151920C();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v18);
    }
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C1515E2C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    unint64_t v15 = v21;
    sub_1BFDDF774((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v15;
}

uint64_t sub_1C01255EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  unint64_t v50 = a5;
  uint64_t v51 = a7;
  uint64_t v48 = a6;
  uint64_t v46 = a8;
  sub_1BFEBC130();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01530C4(0);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (char *)&v45 - v20;
  sub_1BFE338B4(a2, (uint64_t)&v45 - v20, (uint64_t (*)(void))sub_1BFEBC130);
  *(void *)&v21[*(int *)(v16 + 56)] = a3;
  uint64_t v47 = v21;
  sub_1BFE338B4((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))sub_1BFEBC130);
  sub_1C01054A0((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(void))sub_1BFEBC130);
  type metadata accessor for FormatServiceOptions();
  uint64_t v49 = a4;
  sub_1BFFDEB20();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C152A660;
  uint64_t v24 = *v50;
  uint64_t v23 = v50[1];
  uint64_t v25 = MEMORY[0x1E4FBB1A0];
  *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v26 = sub_1BFE9C558();
  *(void *)(v22 + 32) = v24;
  *(void *)(v22 + 40) = v23;
  uint64_t v27 = *a1;
  uint64_t v28 = a1[1];
  unint64_t v50 = a1;
  *(void *)(v22 + 96) = v25;
  *(void *)(v22 + 104) = v26;
  *(void *)(v22 + 64) = v26;
  *(void *)(v22 + 72) = v27;
  *(void *)(v22 + 80) = v28;
  uint64_t v29 = *(void *)(a3 + 16);
  uint64_t v30 = *(void *)(a3 + 24);
  *(void *)(v22 + 136) = v25;
  *(void *)(v22 + 144) = v26;
  *(void *)(v22 + 112) = v29;
  *(void *)(v22 + 120) = v30;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1C0125110();
  *(void *)(v22 + 176) = v25;
  *(void *)(v22 + 184) = v26;
  *(void *)(v22 + 152) = v31;
  *(void *)(v22 + 160) = v32;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v33 = (unsigned char *)(a3 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  swift_beginAccess();
  if (*v33 == 4)
  {
    uint64_t v34 = v58;
    sub_1C0DC330C(a3, v48, v49, v51, &v52);
    swift_release();
    if (!v34)
    {
      uint64_t v35 = v53;
      uint64_t v36 = v57;
      int64_t v37 = v46;
      *uint64_t v46 = v52;
      *((void *)v37 + 2) = v35;
      *(_OWORD *)((char *)v37 + 24) = v54;
      *(_OWORD *)((char *)v37 + 40) = v55;
      *(_OWORD *)((char *)v37 + 56) = v56;
      *((void *)v37 + 9) = v36;
    }
  }
  else
  {
    uint64_t v38 = v58;
    sub_1C0DC330C(a3, v48, v49, v51, &v52);
    swift_release();
    if (!v38)
    {
      uint64_t v39 = v53;
      uint64_t v40 = v54;
      uint64_t v41 = v57;
      unint64_t v42 = *((void *)&v54 + 1) | 0x8000000000000000;
      uint64_t v43 = v46;
      *uint64_t v46 = v52;
      *((void *)v43 + 2) = v39;
      *((void *)v43 + 3) = v40;
      *((void *)v43 + 4) = v42;
      *(_OWORD *)((char *)v43 + 40) = v55;
      *(_OWORD *)((char *)v43 + 56) = v56;
      *((void *)v43 + 9) = v41;
    }
  }
  sub_1BFDDF774((uint64_t)v14, (uint64_t (*)(void))sub_1BFEBC130);
  return sub_1BFDDF774((uint64_t)v47, (uint64_t (*)(void))sub_1C01530C4);
}

id *FormatService.deinit()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 25));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 30));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 35));

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 44));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 49));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 54));
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 62));
  return v0;
}

uint64_t FormatService.__deallocating_deinit()
{
  FormatService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0125A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C0125AF8;
  return FormatService.resolveResult(content:pool:options:)(a1, a2, a3);
}

uint64_t sub_1C0125AF8(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1C0125BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C005E7F4;
  return FormatService.prefetch(content:options:)(a1, a2, a3);
}

uint64_t sub_1C0125CAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = a1[7];
  uint64_t v7 = a1[8];
  uint64_t v8 = a1[9];
  uint64_t v28 = *a1;
  uint64_t v26 = a1[4];
  uint64_t v27 = a1[2];
  sub_1BFEE0A78();
  uint64_t v25 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = v6;
  swift_bridgeObjectRelease();
  uint64_t v10 = v5;
  swift_bridgeObjectRelease();
  uint64_t v11 = v4;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v12 = v3;
  swift_bridgeObjectRelease();
  uint64_t v13 = v2;
  swift_bridgeObjectRelease();
  uint64_t v14 = v8;
  uint64_t v15 = *(void *)(v8 + 16);
  if (v15)
  {
    uint64_t v16 = (uint64_t *)(v8 + 32);
    uint64_t v17 = v15 - 1;
    do
    {
      uint64_t v18 = *v16++;
      v30[11] = v18;
      v30[0] = v28;
      v30[1] = v13;
      v30[2] = v27;
      v30[3] = v12;
      v30[4] = v26;
      v30[5] = v11;
      v30[6] = v10;
      _OWORD v30[7] = v9;
      v30[8] = v25;
      v30[9] = v14;
      uint64_t v19 = v14;
      char v20 = sub_1C0C319CC(a2, v30);
      char v21 = v20;
      BOOL v23 = v17-- != 0;
      if ((v20 & 1) == 0) {
        break;
      }
      uint64_t v14 = v19;
    }
    while (v23);
  }
  else
  {
    char v21 = 1;
  }
  swift_bridgeObjectRelease();
  return v21 & 1;
}

uint64_t sub_1C0125E10@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C0123C98(*a1);
  *a2 = result;
  return result;
}

void sub_1C0125E3C(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1C0124918(*a1);
  *a2 = v3;
}

unint64_t sub_1C0125E68(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v7 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v28) {
      goto LABEL_4;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v8 = *(void *)(a2 + 64);
  if (v8 == 1) {
    goto LABEL_4;
  }
  uint64_t v30 = v3;
  type metadata accessor for FormatServiceOptions();
  sub_1BFFDEB20();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1527210;
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v31 = v11;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v14 = sub_1BFE9C558();
  *(void *)(v10 + 64) = v14;
  unint64_t v29 = v14;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v12;
  swift_bridgeObjectRetain();
  id v15 = (id)FCTagFilterOptionsToNSString();
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  *(void *)(v10 + 96) = v13;
  *(void *)(v10 + 104) = v14;
  *(void *)(v10 + 72) = v16;
  *(void *)(v10 + 80) = v18;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v19 = self;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  char v20 = (void *)sub_1C151EBAC();
  id v21 = objc_msgSend(v19, sel_filterTags_options_context_, v20, v8, *(void *)(v30 + 152));

  unint64_t v9 = sub_1C151EBCC();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C152C7F0;
  *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v22 + 64) = v29;
  *(void *)(v22 + 32) = v31;
  *(void *)(v22 + 40) = v12;
  if (v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v24 = MEMORY[0x1E4FBB550];
  uint64_t v25 = MEMORY[0x1E4FBB5C8];
  *(void *)(v22 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v22 + 104) = v25;
  *(void *)(v22 + 72) = v23;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v22 + 136) = v24;
  *(void *)(v22 + 144) = v25;
  *(void *)(v22 + 112) = v26;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_1C012617C(unint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a4 + 16);
  swift_bridgeObjectRetain();
  if (v9)
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1C0150530(a1, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!(v10 >> 62)) {
      goto LABEL_3;
    }
  }
  else
  {
    unint64_t v10 = a1;
    if (!(a1 >> 62))
    {
LABEL_3:
      if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return v10;
      }
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v49) {
    return v10;
  }
LABEL_4:
  id v53 = *(id *)(a2 + 56);
  uint64_t v54 = 0;
  uint64_t v11 = type metadata accessor for FormatServiceOptions();
  uint64_t v59 = *(int *)(v11 + 52);
  uint64_t v51 = v4;
  sub_1BFFDEB20();
  uint64_t v58 = v12;
  uint64_t v13 = swift_allocObject();
  long long v57 = xmmword_1C152C7F0;
  *(_OWORD *)(v13 + 16) = xmmword_1C152C7F0;
  long long v52 = a3;
  uint64_t v14 = *a3;
  uint64_t v15 = a3[1];
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v17 = sub_1BFE9C558();
  *(void *)(v13 + 64) = v17;
  unint64_t v55 = v17;
  unint64_t v56 = a1;
  uint64_t v18 = a2;
  unint64_t v19 = v17;
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v15;
  swift_bridgeObjectRetain();
  id v20 = (id)FCFeedFilterOptionsToNSString();
  uint64_t v21 = sub_1C151E62C();
  uint64_t v23 = v22;

  *(void *)(v13 + 96) = v16;
  *(void *)(v13 + 104) = v19;
  *(void *)(v13 + 72) = v21;
  *(void *)(v13 + 80) = v23;
  uint64_t v24 = *(void *)(*(void *)(v18 + *(int *)(v11 + 44)) + 16);
  uint64_t v25 = MEMORY[0x1E4FBB5C8];
  *(void *)(v13 + 136) = MEMORY[0x1E4FBB550];
  *(void *)(v13 + 144) = v25;
  *(void *)(v13 + 112) = v24;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v26 = self;
  uint64_t v27 = *(void **)(v51 + 152);
  id v28 = objc_msgSend(objc_msgSend(v27, sel_configurationManager), sel_configuration);
  swift_unknownObjectRelease();
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_1BFE71F8C(v29);
  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)sub_1C151EBAC();
  swift_release();
  id v31 = objc_msgSend(v26, sel_transformationWithFilterOptions_configuration_context_otherArticleIDs_, v53, v28, v27, v30);
  swift_unknownObjectRelease();

  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB895E90);
  uint64_t v32 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v53 = v31;
  id v33 = objc_msgSend(v31, sel_transformHeadlinesWithResult_, v32);

  sub_1BFC39268(0, (unint64_t *)&unk_1EB871090);
  unint64_t v34 = sub_1C151EBCC();

  MEMORY[0x1F4188790](v35);
  uint64_t v36 = v52;
  v50[2] = v18;
  void v50[3] = v52;
  uint64_t v37 = sub_1C0282F68((void (*)(uint64_t *__return_ptr, id *))sub_1C0153F80, (uint64_t)v50, v34);
  swift_bridgeObjectRelease();
  uint64_t v60 = v37;
  sub_1C015171C(0, (unint64_t *)&qword_1EB895E80, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  sub_1C0153F9C();
  uint64_t v38 = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1C151E92C();
  swift_bridgeObjectRelease();
  unint64_t v39 = v56;
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v57;
  uint64_t v41 = *v36;
  uint64_t v42 = v36[1];
  unint64_t v43 = v55;
  *(void *)(v40 + 56) = v38;
  *(void *)(v40 + 64) = v43;
  *(void *)(v40 + 32) = v41;
  *(void *)(v40 + 40) = v42;
  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v45 = MEMORY[0x1E4FBB550];
  *(void *)(v40 + 96) = MEMORY[0x1E4FBB550];
  uint64_t v46 = MEMORY[0x1E4FBB5C8];
  *(void *)(v40 + 104) = MEMORY[0x1E4FBB5C8];
  *(void *)(v40 + 72) = v44;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v40 + 136) = v45;
  *(void *)(v40 + 144) = v46;
  *(void *)(v40 + 112) = v47;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C01266AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1C01266D0, 0, 0);
}

uint64_t sub_1C01266D0()
{
  uint64_t v1 = **(void **)(v0 + 24);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void **)(v0 + 40);
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = v2[15];
    uint64_t v5 = v2[16];
    __swift_project_boxed_opaque_existential_1(v2 + 12, v4);
    double v6 = *(double *)(v3 + 40);
    int v7 = *(unsigned __int8 *)(v3 + 48);
    uint64_t v8 = self;
    swift_bridgeObjectRetain();
    if (v7 == 1)
    {
      if (v6 == 0.0) {
        id v9 = objc_msgSend(v8, sel_defaultCachePolicy);
      }
      else {
        id v9 = objc_msgSend(v8, sel_cachedOnlyCachePolicy);
      }
    }
    else
    {
      id v9 = objc_msgSend(v8, sel_cachePolicyWithSoftMaxAge_, v6);
    }
    id v14 = v9;
    *(void *)(v0 + 56) = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v5 + 24))(v1, v14, v4, v5);

    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_1C01268B0;
    return MEMORY[0x1F415EBC8](v0 + 16);
  }
  else
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1BFD35AC0(v10);
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v12(v11);
  }
}

uint64_t sub_1C01268B0()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0126A64;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C01269CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C01269CC()
{
  unint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1BFD35AC0(v2);
  swift_bridgeObjectRelease();
  sub_1C1047AE8(v1);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_1C0126A64()
{
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0126AC8(void *a1, unint64_t *a2, uint64_t *a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  unint64_t v11 = *a4;
  unint64_t v12 = sub_1C012617C(*a4, a6, a7, a8);
  type metadata accessor for FormatServiceOptions();
  sub_1BFFDEB20();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C152C7F0;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = sub_1BFE9C558();
  *(void *)(v13 + 32) = v9;
  *(void *)(v13 + 40) = v10;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = MEMORY[0x1E4FBB550];
  uint64_t v16 = MEMORY[0x1E4FBB5C8];
  *(void *)(v13 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v13 + 104) = v16;
  *(void *)(v13 + 72) = v14;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v13 + 136) = v15;
  *(void *)(v13 + 144) = v16;
  *(void *)(v13 + 112) = v17;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  *a1 = v9;
  a1[1] = v10;
  *a2 = v12;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0126C7C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1BFCD1D64(a1, a2);
}

void sub_1C0126C94(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v81 = a3;
  uint64_t v82 = a5;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v79 = *(void *)(v9 - 8);
  uint64_t v80 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v78 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v62 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v62 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v76 = (char *)&v62 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v77 = (uint64_t)&v62 - v22;
  sub_1C0158DBC(0, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v62 - v24;
  uint64_t v26 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1F4188790](v26);
  id v28 = (char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  if (!*(void *)(a2 + 16))
  {
    id v54 = 0;
    unint64_t v55 = v82;
LABEL_18:
    *unint64_t v55 = v54;
    return;
  }
  uint64_t v74 = (uint64_t)&v62 - v30;
  uint64_t v75 = v5;
  uint64_t v31 = *a1;
  uint64_t v32 = *(void *)(*a1 + 16);
  uint64_t v33 = *(void *)(*a1 + 24);
  swift_bridgeObjectRetain();
  unint64_t v34 = sub_1BFEF2D8C(v32, v33);
  if ((v35 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    id v54 = 0;
    unint64_t v55 = v82;
    goto LABEL_18;
  }
  uint64_t v72 = v18;
  uint64_t v69 = v15;
  uint64_t v36 = *(void **)(*(void *)(a2 + 56) + 8 * v34);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = v31 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1C0153C08(v37, (uint64_t)v25, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1C01054A0((uint64_t)v25, v74, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  uint64_t v38 = v81;
  unint64_t v39 = *(void **)(v81 + 152);
  uint64_t v40 = v36;
  swift_unknownObjectRetain();
  id v41 = objc_msgSend(objc_msgSend(v39, sel_configurationManager), sel_configuration);
  swift_unknownObjectRelease();
  uint64_t v70 = (uint64_t)v41;
  if (v41)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v66 = *(void **)(v38 + 136);
    uint64_t v67 = ObjectType;
    uint64_t v43 = a4[9];
    uint64_t v64 = a4[8];
    uint64_t v44 = a4[11];
    uint64_t v63 = a4[10];
    sub_1C0153C08(v37, (uint64_t)v25, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    sub_1C01054A0((uint64_t)v25, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    uint64_t v45 = (uint64_t)v72;
    sub_1BFE338B4((uint64_t)&v28[*(int *)(v26 + 36)], (uint64_t)v72, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v71 = v44;
    swift_bridgeObjectRetain();
    uint64_t v81 = v43;
    swift_bridgeObjectRetain();
    sub_1BFDDF774((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    uint64_t v47 = v79;
    uint64_t v46 = v80;
    uint64_t v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
    int v48 = v65(v45, 1, v80);
    uint64_t v49 = (uint64_t)v69;
    int64_t v68 = v40;
    if (v48 == 1)
    {
      id v50 = objc_msgSend(v40, sel_routeURL);
      uint64_t v51 = (uint64_t)v76;
      if (v50)
      {
        long long v52 = v50;
        sub_1C1515F1C();

        id v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
        v53(v49, 0, 1, v46);
      }
      else
      {
        id v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
        v53(v49, 1, 1, v46);
      }
      uint64_t v56 = (uint64_t)v72;
      sub_1C01054A0(v49, v51, (uint64_t (*)(void))sub_1BFF00BEC);
      sub_1BFDDF774(v56, (uint64_t (*)(void))sub_1BFF00BEC);
    }
    else
    {
      uint64_t v51 = (uint64_t)v76;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v76, v45, v46);
      id v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
      v53(v51, 0, 1, v46);
    }
    uint64_t v57 = v78;
    if (v81)
    {
      sub_1BFE338B4(v51, v78, (uint64_t (*)(void))sub_1BFF00BEC);
      if (v65(v57, 1, v46) != 1)
      {
        uint64_t v60 = (uint64_t)v73;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v73, v57, v46);
        uint64_t v59 = v77;
        sub_1C0C5D594(v60, v64, v81, v63, v71, v77);
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v60, v46);
        uint64_t v58 = 0;
        unint64_t v55 = v82;
        goto LABEL_17;
      }
      sub_1BFDDF774(v57, (uint64_t (*)(void))sub_1BFF00BEC);
    }
    uint64_t v58 = 1;
    unint64_t v55 = v82;
    uint64_t v59 = v77;
LABEL_17:
    v53(v59, v58, 1, v46);
    sub_1BFDDF774(v51, (uint64_t (*)(void))sub_1BFF00BEC);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = v74;
    id v54 = FCHeadlineProviding.overridden(by:configuration:assetManager:routeURL:)(v74, v70, v66, v59);
    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease();
    sub_1BFDDF774(v59, (uint64_t (*)(void))sub_1BFF00BEC);
    sub_1BFDDF774(v61, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    goto LABEL_18;
  }
  __break(1u);
}

id sub_1C012741C@<X0>(id *a1@<X0>, uint64_t *a2@<X2>, void *a3@<X8>)
{
  id v5 = *a1;
  if (objc_msgSend(*a1, sel_isFiltered))
  {
    type metadata accessor for FormatServiceOptions();
    sub_1BFFDEB20();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C152C7F0;
    uint64_t v8 = *a2;
    uint64_t v7 = a2[1];
    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v10 = sub_1BFE9C558();
    *(void *)(v6 + 64) = v10;
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v7;
    swift_bridgeObjectRetain();
    id v11 = objc_msgSend(objc_msgSend(v5, sel_item), sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v12 = sub_1C151E62C();
    uint64_t v14 = v13;

    *(void *)(v6 + 96) = v9;
    *(void *)(v6 + 104) = v10;
    *(void *)(v6 + 72) = v12;
    *(void *)(v6 + 80) = v14;
    objc_msgSend(v5, sel_filteredReasons);
    id v15 = (id)FCFeedFilterOptionsToNSString();
    uint64_t v16 = sub_1C151E62C();
    uint64_t v18 = v17;

    *(void *)(v6 + 136) = v9;
    *(void *)(v6 + 144) = v10;
    *(void *)(v6 + 112) = v16;
    *(void *)(v6 + 120) = v18;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    id result = 0;
  }
  else
  {
    id result = objc_msgSend(v5, sel_item);
  }
  *a3 = result;
  return result;
}

void sub_1C01275CC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_identifier);
  uint64_t v4 = sub_1C151E62C();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_1C0127634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  _OWORD v5[3] = a1;
  sub_1C0064478(0);
  v5[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C01276CC, 0, 0);
}

uint64_t sub_1C01276CC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 64);
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = sub_1C151EE9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
    uint64_t v5 = (void *)swift_allocObject();
    v5[2] = 0;
    _OWORD v5[3] = 0;
    v5[4] = v3;
    v5[5] = v1;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C01281A0(v2, (uint64_t)&unk_1EA196E68, (uint64_t)v5);
    sub_1BFDDF774(v2, (uint64_t (*)(void))sub_1C0064478);
  }
  uint64_t v6 = *(void *)(v0 + 56);
  if (*(void *)(v6 + 16))
  {
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 48);
    uint64_t v9 = sub_1C151EE9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    unint64_t v10 = (void *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    void v10[4] = v8;
    void v10[5] = v6;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C01281A0(v7, (uint64_t)&unk_1EA196E78, (uint64_t)v10);
    sub_1BFDDF774(v7, (uint64_t (*)(void))sub_1C0064478);
  }
  *(void *)(v0 + 16) = **(void **)(v0 + 32);
  id v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v11;
  sub_1C01536DC();
  uint64_t v13 = v12;
  uint64_t v14 = sub_1C014FD48(&qword_1EA196E90, 255, (void (*)(uint64_t))sub_1C01536DC);
  *id v11 = v0;
  v11[1] = sub_1C0127954;
  return MEMORY[0x1F415F0E8](v13, v14);
}

uint64_t sub_1C0127954(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1C0127C84;
  }
  else {
    uint64_t v4 = sub_1C0127A68;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C0127A68()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_25:
    uint64_t v17 = (void *)v0[3];
    swift_bridgeObjectRelease();
    *uint64_t v17 = v4;
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  uint64_t v3 = (uint64_t *)(v1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v5 = *v3;
    uint64_t v6 = *(void *)(*v3 + 16);
    int64_t v7 = v4[2];
    int64_t v8 = v7 + v6;
    if (__OFADD__(v7, v6)) {
      break;
    }
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= v4[3] >> 1)
    {
      if (*(void *)(v5 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v7 <= v8) {
        int64_t v10 = v7 + v6;
      }
      else {
        int64_t v10 = v7;
      }
      uint64_t v4 = sub_1C0EDF770(isUniquelyReferenced_nonNull_native, v10, 1, v4);
      if (*(void *)(v5 + 16))
      {
LABEL_14:
        uint64_t v11 = v4[2];
        if ((v4[3] >> 1) - v11 < v6) {
          goto LABEL_30;
        }
        unint64_t v12 = (unint64_t)&v4[v11 + 4];
        if (v5 + 32 < v12 + 8 * v6 && v12 < v5 + 32 + 8 * v6) {
          return sub_1C152052C();
        }
        swift_arrayInitWithCopy();
        if (v6)
        {
          uint64_t v14 = v4[2];
          BOOL v15 = __OFADD__(v14, v6);
          uint64_t v16 = v14 + v6;
          if (v15) {
            goto LABEL_31;
          }
          v4[2] = v16;
        }
        goto LABEL_4;
      }
    }
    if (v6)
    {
      __break(1u);
      break;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    ++v3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return sub_1C152052C();
}

uint64_t sub_1C0127C84()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0127CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *uint64_t v9 = v5;
  v9[3] = a5;
  v9[4] = a4;
  v9[1] = sub_1C005E7F4;
  v9[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0127DC8, 0, 0);
}

uint64_t sub_1C0127DA4(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0127DC8, 0, 0);
}

uint64_t sub_1C0127DC8()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C05F65C8(0, v2, 0);
    uint64_t v3 = v25;
    uint64_t v4 = sub_1BFD44A04(v1);
    int64_t v5 = v4;
    int v7 = v6;
    char v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v1 + 32))
    {
      if (((*(void *)(v1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(v1 + 36) != v7) {
        goto LABEL_16;
      }
      int64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v5);
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      type metadata accessor for SportsDataVisualizationAllRequest();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v12;
      *(void *)(v13 + 24) = v11;
      *(_WORD *)(v13 + 32) = 1;
      swift_bridgeObjectRetain_n();
      uint64_t v26 = sub_1C151EFFC();
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v27, v12, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v13 + 40) = v26;
      unint64_t v15 = *(void *)(v25 + 16);
      unint64_t v14 = *(void *)(v25 + 24);
      if (v15 >= v14 >> 1) {
        sub_1C05F65C8(v14 > 1, v15 + 1, 1);
      }
      uint64_t v16 = v24[3];
      *(void *)(v25 + 16) = v15 + 1;
      unint64_t v17 = v25 + 32 * v15;
      *(void *)(v17 + 40) = 0;
      *(void *)(v17 + 48) = 0;
      *(void *)(v17 + 32) = v13;
      *(unsigned char *)(v17 + 56) = 1;
      uint64_t v4 = sub_1BFD43BF8(v5, v7, v9 & 1, v16);
      int64_t v5 = v4;
      int v7 = v18;
      char v9 = v19 & 1;
      if (!--v2)
      {
        sub_1C0153754(v4, v18, v19 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_11:
    uint64_t v20 = *(void *)(v24[4] + 344);
    uint64_t ObjectType = swift_getObjectType();
    v24[5] = SportsDataServiceType.fetchDataVisualizations(requests:)(v3, ObjectType, v20);
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)swift_task_alloc();
    v24[6] = v22;
    *uint64_t v22 = v24;
    v22[1] = sub_1C0128064;
    uint64_t v4 = v24[2];
  }
  return MEMORY[0x1F415EBC8](v4);
}

uint64_t sub_1C0128064()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C0121EE0, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C01281A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C0064478(0);
  MEMORY[0x1F4188790](v7 - 8);
  char v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE338B4(a1, (uint64_t)v9, (uint64_t (*)(void))sub_1C0064478);
  uint64_t v10 = sub_1C151EE9C();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1BFDDF774((uint64_t)v9, (uint64_t (*)(void))sub_1C0064478);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_1C151EDBC();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C151EE8C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    void v19[2] = v12;
    _OWORD v19[3] = v14;
  }
  v18[1] = 1;
  _OWORD v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C0128390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *char v9 = v5;
  v9[3] = a5;
  v9[4] = a4;
  v9[1] = sub_1BFC542F4;
  v9[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0128470, 0, 0);
}

uint64_t sub_1C012844C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0128470, 0, 0);
}

uint64_t sub_1C0128470()
{
  uint64_t v1 = *(void *)(v0 + 24);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1C05F65C8(0, v2, 0);
    uint64_t v3 = v26;
    uint64_t v4 = sub_1BFD44A04(v1);
    int64_t v5 = v4;
    int v7 = v6;
    char v9 = v8 & 1;
    uint64_t v23 = v1;
    uint64_t v24 = v1 + 56;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v1 + 32))
    {
      if (((*(void *)(v24 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(v1 + 36) != v7) {
        goto LABEL_16;
      }
      uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v5);
      uint64_t v11 = *v10;
      uint64_t v12 = v10[1];
      unint64_t v14 = *(void *)(v26 + 16);
      unint64_t v13 = *(void *)(v26 + 24);
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1) {
        sub_1C05F65C8(v13 > 1, v14 + 1, 1);
      }
      uint64_t v15 = v25[3];
      *(void *)(v26 + 16) = v14 + 1;
      unint64_t v16 = v26 + 32 * v14;
      *(void *)(v16 + 32) = v11;
      *(void *)(v16 + 40) = v12;
      *(void *)(v16 + 48) = 1;
      *(unsigned char *)(v16 + 56) = 2;
      uint64_t v4 = sub_1BFD43BF8(v5, v7, v9 & 1, v15);
      int64_t v5 = v4;
      int v7 = v17;
      char v9 = v18 & 1;
      --v2;
      uint64_t v1 = v23;
      if (!v2)
      {
        sub_1C0153754(v4, v17, v18 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_11:
    uint64_t v19 = *(void *)(v25[4] + 344);
    uint64_t ObjectType = swift_getObjectType();
    v25[5] = SportsDataServiceType.fetchDataVisualizations(requests:)(v3, ObjectType, v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)swift_task_alloc();
    v25[6] = v21;
    *uint64_t v21 = v25;
    v21[1] = sub_1C012869C;
    uint64_t v4 = v25[2];
  }
  return MEMORY[0x1F415EBC8](v4);
}

uint64_t sub_1C012869C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C015C328, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C01287D8(void *a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  swift_getObjectType();
  id v6 = objc_msgSend(v5, sel_identifier);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  id v10 = objc_msgSend(v5, sel_identifier);
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  if (*(void *)(a3 + 16) && (unint64_t v14 = sub_1BFEF2D8C(v11, v13), (v15 & 1) != 0))
  {
    unint64_t v16 = *(_OWORD **)(*(void *)(a3 + 56) + 8 * v14);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    long long v17 = v16[8];
    long long v30 = v16[7];
    long long v31 = v17;
    long long v18 = v16[10];
    long long v32 = v16[9];
    long long v33 = v18;
    long long v19 = v16[3];
    long long v20 = v16[5];
    long long v21 = v16[6];
    long long v27 = v16[4];
    long long v28 = v20;
    long long v29 = v21;
    long long v25 = v16[2];
    long long v26 = v19;
    sub_1C0153E30((uint64_t)&v25);
    swift_release();
    v34[6] = v31;
    v34[7] = v32;
    v34[8] = v33;
    _OWORD v34[2] = v27;
    v34[3] = v28;
    v34[4] = v29;
    v34[5] = v30;
    v34[0] = v25;
    v34[1] = v26;
    nullsub_1(v34);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C0153C7C(v34);
  }
  sub_1C0153CA0((uint64_t)v34, (uint64_t)v35, &qword_1EB862D60, (uint64_t)&type metadata for FormatPuzzle.Overrides);
  sub_1C0153CA0((uint64_t)v35, (uint64_t)v34, &qword_1EB862D60, (uint64_t)&type metadata for FormatPuzzle.Overrides);
  id v22 = FCPuzzleProviding.overridden(by:)((uint64_t)v34);
  sub_1C0153D20(v35);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v34[0] = *a1;
  *a1 = 0x8000000000000000;
  sub_1C10659A8((uint64_t)v22, v7, v9, isUniquelyReferenced_nonNull_native);
  *a1 = *(void *)&v34[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01289F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v74 = a3;
  sub_1C0158DBC(0, &qword_1EB86C820, (uint64_t (*)(void))sub_1C0153BB4, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v71 = (uint64_t)&v71 - v6;
  sub_1C0158D58(0, &qword_1EB865D40, type metadata accessor for FormatPuzzleType.Overrides, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v71 - v8;
  id v10 = (void *)sub_1C018D348(MEMORY[0x1E4FBC860]);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v72 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v73 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v75 = v11;
  swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v78 = a2;
  while (1)
  {
    if (v15)
    {
      uint64_t v76 = (v15 - 1) & v15;
      int64_t v77 = v16;
      unint64_t v18 = __clz(__rbit64(v15)) | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_73;
    }
    if (v19 >= v73) {
      break;
    }
    unint64_t v20 = *(void *)(v72 + 8 * v19);
    int64_t v21 = v16 + 1;
    if (!v20)
    {
      int64_t v21 = v16 + 2;
      if (v16 + 2 >= v73) {
        break;
      }
      unint64_t v20 = *(void *)(v72 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v16 + 3;
        if (v16 + 3 >= v73) {
          break;
        }
        unint64_t v20 = *(void *)(v72 + 8 * v21);
        if (!v20)
        {
          uint64_t v22 = v16 + 4;
          if (v16 + 4 >= v73) {
            break;
          }
          unint64_t v20 = *(void *)(v72 + 8 * v22);
          if (!v20)
          {
            while (1)
            {
              int64_t v21 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_74;
              }
              if (v21 >= v73) {
                goto LABEL_37;
              }
              unint64_t v20 = *(void *)(v72 + 8 * v21);
              ++v22;
              if (v20) {
                goto LABEL_21;
              }
            }
          }
          int64_t v21 = v16 + 4;
        }
      }
    }
LABEL_21:
    uint64_t v76 = (v20 - 1) & v20;
    int64_t v77 = v21;
    unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    uint64_t v23 = (uint64_t *)(*(void *)(v75 + 48) + 16 * v18);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    uint64_t v26 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v26 && (unint64_t v27 = sub_1BFEF2D8C(v25, v24), (v28 & 1) != 0))
    {
      uint64_t v29 = *(void *)(*(void *)(a2 + 56) + 8 * v27) + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
      swift_beginAccess();
      uint64_t v30 = v29;
      uint64_t v31 = v71;
      sub_1C0153C08(v30, v71, &qword_1EB86C820, (uint64_t (*)(void))sub_1C0153BB4, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      sub_1C01054A0(v31, (uint64_t)v9, type metadata accessor for FormatPuzzleType.Overrides);
      uint64_t v32 = type metadata accessor for FormatPuzzleType.Overrides(0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v9, 0, 1, v32);
    }
    else
    {
      uint64_t v33 = type metadata accessor for FormatPuzzleType.Overrides(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v9, 1, 1, v33);
    }
    swift_getObjectType();
    id v34 = FCPuzzleTypeProviding.overridden(by:assetManager:)((uint64_t)v9, *(void **)(v74 + 136));
    char v35 = v9;
    sub_1C01530F8((uint64_t)v9, (uint64_t)&qword_1EB865D40, (uint64_t)type metadata accessor for FormatPuzzleType.Overrides, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = v10;
    unint64_t v38 = sub_1BFEF2D8C(v25, v24);
    uint64_t v39 = v10[2];
    BOOL v40 = (v37 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40))
    {
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    char v42 = v37;
    if (v10[3] >= v41)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        id v10 = v79;
        if (v37) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1C106AF20();
        id v10 = v79;
        if (v42) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1C1055090(v41, isUniquelyReferenced_nonNull_native);
      unint64_t v43 = sub_1BFEF2D8C(v25, v24);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_76;
      }
      unint64_t v38 = v43;
      id v10 = v79;
      if (v42)
      {
LABEL_4:
        uint64_t v17 = v10[7];
        swift_unknownObjectRelease();
        *(void *)(v17 + 8 * v38) = v34;
        goto LABEL_5;
      }
    }
    v10[(v38 >> 6) + 8] |= 1 << v38;
    uint64_t v45 = (uint64_t *)(v10[6] + 16 * v38);
    *uint64_t v45 = v25;
    v45[1] = v24;
    *(void *)(v10[7] + 8 * v38) = v34;
    uint64_t v46 = v10[2];
    BOOL v47 = __OFADD__(v46, 1);
    uint64_t v48 = v46 + 1;
    if (v47) {
      goto LABEL_71;
    }
    v10[2] = v48;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v16 = v77;
    a2 = v78;
    uint64_t v9 = v35;
    unint64_t v15 = v76;
  }
LABEL_37:
  swift_release();
  uint64_t v49 = a2 + 64;
  uint64_t v50 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v51 = -1;
  if (v50 < 64) {
    uint64_t v51 = ~(-1 << v50);
  }
  unint64_t v52 = v51 & *(void *)(a2 + 64);
  int64_t v53 = (unint64_t)(v50 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v54 = 0;
  unint64_t v55 = (void *)MEMORY[0x1E4FBC860];
  if (v52) {
    goto LABEL_42;
  }
LABEL_43:
  int64_t v58 = v54 + 1;
  if (__OFADD__(v54, 1)) {
    goto LABEL_72;
  }
  if (v58 >= v53) {
    goto LABEL_69;
  }
  unint64_t v59 = *(void *)(v49 + 8 * v58);
  ++v54;
  if (v59)
  {
LABEL_60:
    unint64_t v52 = (v59 - 1) & v59;
    for (unint64_t i = __clz(__rbit64(v59)) + (v54 << 6); ; unint64_t i = v56 | (v54 << 6))
    {
      uint64_t v61 = (uint64_t *)(*(void *)(v78 + 48) + 16 * i);
      uint64_t v63 = *v61;
      uint64_t v62 = v61[1];
      uint64_t v64 = v10[2];
      swift_bridgeObjectRetain();
      if (v64
        && (swift_bridgeObjectRetain(), sub_1BFEF2D8C(v63, v62), char v66 = v65, swift_bridgeObjectRelease(), (v66 & 1) != 0))
      {
        swift_bridgeObjectRelease();
        if (!v52) {
          goto LABEL_43;
        }
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v55 = sub_1BFEF9B68(0, v55[2] + 1, 1, v55);
        }
        unint64_t v68 = v55[2];
        unint64_t v67 = v55[3];
        if (v68 >= v67 >> 1) {
          unint64_t v55 = sub_1BFEF9B68((void *)(v67 > 1), v68 + 1, 1, v55);
        }
        v55[2] = v68 + 1;
        uint64_t v69 = &v55[2 * v68];
        v69[4] = v63;
        v69[5] = v62;
        if (!v52) {
          goto LABEL_43;
        }
      }
LABEL_42:
      unint64_t v56 = __clz(__rbit64(v52));
      v52 &= v52 - 1;
    }
  }
  int64_t v54 = v58 + 1;
  if (v58 + 1 >= v53)
  {
LABEL_69:
    swift_release();
    return (uint64_t)v10;
  }
  unint64_t v59 = *(void *)(v49 + 8 * v54);
  if (v59) {
    goto LABEL_60;
  }
  int64_t v54 = v58 + 2;
  if (v58 + 2 >= v53) {
    goto LABEL_69;
  }
  unint64_t v59 = *(void *)(v49 + 8 * v54);
  if (v59) {
    goto LABEL_60;
  }
  int64_t v54 = v58 + 3;
  if (v58 + 3 >= v53) {
    goto LABEL_69;
  }
  unint64_t v59 = *(void *)(v49 + 8 * v54);
  if (v59) {
    goto LABEL_60;
  }
  int64_t v54 = v58 + 4;
  if (v58 + 4 >= v53) {
    goto LABEL_69;
  }
  unint64_t v59 = *(void *)(v49 + 8 * v54);
  if (v59) {
    goto LABEL_60;
  }
  int64_t v60 = v58 + 5;
  if (v60 >= v53) {
    goto LABEL_69;
  }
  unint64_t v59 = *(void *)(v49 + 8 * v60);
  if (v59)
  {
    int64_t v54 = v60;
    goto LABEL_60;
  }
  while (1)
  {
    int64_t v54 = v60 + 1;
    if (__OFADD__(v60, 1)) {
      break;
    }
    if (v54 >= v53) {
      goto LABEL_69;
    }
    unint64_t v59 = *(void *)(v49 + 8 * v54);
    ++v60;
    if (v59) {
      goto LABEL_60;
    }
  }
LABEL_75:
  __break(1u);
LABEL_76:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0129168(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a4;
  sub_1C0158DBC(0, &qword_1EB86C820, (uint64_t (*)(void))sub_1C0153BB4, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v30 - v8;
  sub_1C0158D58(0, &qword_1EB865D40, type metadata accessor for FormatPuzzleType.Overrides, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v30 - v11;
  uint64_t v13 = *a2;
  v30[1] = swift_getObjectType();
  id v14 = objc_msgSend(v13, sel_identifier);
  uint64_t v31 = sub_1C151E62C();
  uint64_t v16 = v15;

  id v17 = objc_msgSend(v13, sel_identifier);
  uint64_t v18 = sub_1C151E62C();
  uint64_t v20 = v19;

  if (*(void *)(a3 + 16) && (unint64_t v21 = sub_1BFEF2D8C(v18, v20), (v22 & 1) != 0))
  {
    uint64_t v23 = *(void *)(*(void *)(a3 + 56) + 8 * v21);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v24 = v23 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
    swift_beginAccess();
    sub_1C0153C08(v24, (uint64_t)v9, &qword_1EB86C820, (uint64_t (*)(void))sub_1C0153BB4, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    sub_1C01054A0((uint64_t)v9, (uint64_t)v12, type metadata accessor for FormatPuzzleType.Overrides);
    swift_release();
    uint64_t v25 = type metadata accessor for FormatPuzzleType.Overrides(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 0, 1, v25);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = type metadata accessor for FormatPuzzleType.Overrides(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 1, 1, v26);
  }
  id v27 = FCPuzzleTypeProviding.overridden(by:assetManager:)((uint64_t)v12, *(void **)(v32 + 136));
  sub_1C01530F8((uint64_t)v12, (uint64_t)&qword_1EB865D40, (uint64_t)type metadata accessor for FormatPuzzleType.Overrides, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = *a1;
  *a1 = 0x8000000000000000;
  sub_1C106597C((uint64_t)v27, v31, v16, isUniquelyReferenced_nonNull_native);
  *a1 = v33;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01294F8(uint64_t a1, uint64_t a2)
{
  uint64_t v89 = a2;
  sub_1C0153798(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v84 = (uint64_t)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PuzzleStatistic();
  uint64_t v90 = *(void *)(v5 - 8);
  uint64_t v91 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, &qword_1EB86DD98, (uint64_t (*)(uint64_t))sub_1C0153B14, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v79 - v12);
  id v14 = (void *)sub_1C018D398(MEMORY[0x1E4FBC860]);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(v15 + 64);
  int64_t v85 = v15 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  char v86 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((unint64_t)(v17 + 63) >> 6);
  uint64_t v87 = v15;
  uint64_t v83 = (char *)v86 - 1;
  swift_bridgeObjectRetain();
  uint64_t v88 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v88 << 6);
LABEL_8:
      uint64_t v22 = *(void *)(v87 + 56);
      uint64_t v23 = (void *)(*(void *)(v87 + 48) + 16 * v21);
      uint64_t v24 = v23[1];
      *uint64_t v10 = *v23;
      v10[1] = v24;
      uint64_t v25 = v22 + *(void *)(v90 + 72) * v21;
      sub_1C0153B14(0);
      uint64_t v27 = v26;
      sub_1BFE338B4(v25, (uint64_t)v10 + *(int *)(v26 + 48), (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 0, 1, v27);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    uint64_t v28 = v88 + 1;
    if (__OFADD__(v88, 1)) {
      goto LABEL_76;
    }
    if (v28 < (uint64_t)v86)
    {
      unint64_t v29 = *(void *)(v85 + 8 * v28);
      if (v29) {
        goto LABEL_12;
      }
      uint64_t v30 = v88 + 2;
      ++v88;
      if (v28 + 1 < (uint64_t)v86)
      {
        unint64_t v29 = *(void *)(v85 + 8 * v30);
        if (v29) {
          goto LABEL_15;
        }
        uint64_t v88 = v28 + 1;
        if (v28 + 2 < (uint64_t)v86)
        {
          unint64_t v29 = *(void *)(v85 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          uint64_t v30 = v28 + 3;
          uint64_t v88 = v28 + 2;
          if (v28 + 3 < (uint64_t)v86) {
            break;
          }
        }
      }
    }
LABEL_26:
    sub_1C0153B14(0);
    uint64_t v27 = v31;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v10, 1, 1, v31);
    unint64_t v19 = 0;
LABEL_27:
    sub_1C0153158((uint64_t)v10, (uint64_t)v13, (uint64_t)&qword_1EB86DD98, (uint64_t)sub_1C0153B14, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C0158D58);
    sub_1C0153B14(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v13, 1, v27) == 1)
    {
      swift_release();
      uint64_t v47 = *(void *)(v89 + 64);
      uint64_t v83 = (char *)(v89 + 64);
      uint64_t v48 = 1 << *(unsigned char *)(v89 + 32);
      uint64_t v49 = -1;
      if (v48 < 64) {
        uint64_t v49 = ~(-1 << v48);
      }
      unint64_t v50 = v49 & v47;
      uint64_t v87 = v90 + 56;
      int64_t v85 = (unint64_t)(v48 + 63) >> 6;
      char v86 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
      swift_bridgeObjectRetain();
      int64_t v51 = 0;
      uint64_t v82 = (void *)MEMORY[0x1E4FBC860];
LABEL_42:
      uint64_t v52 = v84;
      uint64_t v53 = v91;
      if (v50)
      {
LABEL_43:
        unint64_t v54 = __clz(__rbit64(v50));
        v50 &= v50 - 1;
        unint64_t v55 = v54 | (v51 << 6);
        goto LABEL_58;
      }
      while (1)
      {
        int64_t v56 = v51 + 1;
        if (__OFADD__(v51, 1)) {
          goto LABEL_74;
        }
        if (v56 >= v85) {
          goto LABEL_72;
        }
        unint64_t v57 = *(void *)&v83[8 * v56];
        ++v51;
        if (!v57)
        {
          int64_t v51 = v56 + 1;
          if (v56 + 1 >= v85) {
            goto LABEL_72;
          }
          unint64_t v57 = *(void *)&v83[8 * v51];
          if (!v57)
          {
            int64_t v51 = v56 + 2;
            if (v56 + 2 >= v85) {
              goto LABEL_72;
            }
            unint64_t v57 = *(void *)&v83[8 * v51];
            if (!v57)
            {
              int64_t v58 = v56 + 3;
              if (v58 >= v85)
              {
LABEL_72:
                swift_release();
                return (uint64_t)v14;
              }
              unint64_t v57 = *(void *)&v83[8 * v58];
              if (!v57)
              {
                while (1)
                {
                  int64_t v51 = v58 + 1;
                  if (__OFADD__(v58, 1)) {
                    goto LABEL_77;
                  }
                  if (v51 >= v85) {
                    goto LABEL_72;
                  }
                  unint64_t v57 = *(void *)&v83[8 * v51];
                  ++v58;
                  if (v57) {
                    goto LABEL_57;
                  }
                }
              }
              int64_t v51 = v58;
            }
          }
        }
LABEL_57:
        unint64_t v50 = (v57 - 1) & v57;
        unint64_t v55 = __clz(__rbit64(v57)) + (v51 << 6);
LABEL_58:
        unint64_t v59 = (uint64_t *)(*(void *)(v89 + 48) + 16 * v55);
        uint64_t v60 = v59[1];
        uint64_t v61 = (uint64_t *)(*(void *)(v89 + 56) + 40 * v55);
        uint64_t v62 = *v61;
        uint64_t v88 = v61[1];
        uint64_t v63 = v61[2];
        if (v14[2])
        {
          uint64_t v64 = *v59;
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v65 = sub_1BFEF2D8C(v64, v60);
          if (v66)
          {
            uint64_t v67 = v90;
            uint64_t v52 = v84;
            sub_1BFE338B4(v14[7] + *(void *)(v90 + 72) * v65, v84, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
            unint64_t v68 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56);
            uint64_t v53 = v91;
            v68(v52, 0, 1, v91);
          }
          else
          {
            uint64_t v52 = v84;
            uint64_t v53 = v91;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v87)(v84, 1, 1, v91);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v87)(v52, 1, 1, v53);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        if ((*v86)(v52, 1, v53) == 1)
        {
          sub_1BFDDF774(v52, (uint64_t (*)(void))sub_1C0153798);
          uint64_t v69 = *(void *)(v62 + 24);
          uint64_t v80 = *(void *)(v62 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v70 = v82;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v81 = v69;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v70 = sub_1C0EE069C(0, v70[2] + 1, 1, v70);
          }
          unint64_t v73 = v70[2];
          unint64_t v72 = v70[3];
          uint64_t v74 = (void *)(v73 + 1);
          if (v73 >= v72 >> 1)
          {
            uint64_t v82 = (void *)(v73 + 1);
            int64_t v77 = sub_1C0EE069C((void *)(v72 > 1), v73 + 1, 1, v70);
            uint64_t v74 = v82;
            uint64_t v70 = v77;
          }
          v70[2] = v74;
          uint64_t v82 = v70;
          uint64_t v75 = &v70[4 * v73];
          uint64_t v76 = v81;
          v75[4] = v80;
          v75[5] = v76;
          v75[6] = v88;
          v75[7] = v63;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_42;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1BFDDF774(v52, (uint64_t (*)(void))sub_1C0153798);
        uint64_t v53 = v91;
        if (v50) {
          goto LABEL_43;
        }
      }
    }
    uint64_t v32 = *v13;
    uint64_t v33 = v13[1];
    sub_1C01054A0((uint64_t)v13 + *(int *)(v27 + 48), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    int v34 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v92 = v14;
    unint64_t v36 = sub_1BFEF2D8C(v32, v33);
    uint64_t v37 = v14[2];
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    char v40 = v35;
    if (v14[3] >= v39)
    {
      if (v34)
      {
        id v14 = v92;
        if (v35) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1C106AECC();
        id v14 = v92;
        if (v40) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1C105503C(v39, v34);
      unint64_t v41 = sub_1BFEF2D8C(v32, v33);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_79;
      }
      unint64_t v36 = v41;
      id v14 = v92;
      if (v40)
      {
LABEL_4:
        sub_1C0153880((uint64_t)v7, v14[7] + *(void *)(v90 + 72) * v36);
        goto LABEL_5;
      }
    }
    v14[(v36 >> 6) + 8] |= 1 << v36;
    unint64_t v43 = (uint64_t *)(v14[6] + 16 * v36);
    *unint64_t v43 = v32;
    v43[1] = v33;
    sub_1C01054A0((uint64_t)v7, v14[7] + *(void *)(v90 + 72) * v36, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    uint64_t v44 = v14[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_75;
    }
    _OWORD v14[2] = v46;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v29 = *(void *)(v85 + 8 * v30);
  if (v29)
  {
LABEL_15:
    uint64_t v28 = v30;
LABEL_12:
    unint64_t v19 = (v29 - 1) & v29;
    unint64_t v21 = __clz(__rbit64(v29)) + (v28 << 6);
    uint64_t v88 = v28;
    goto LABEL_8;
  }
  while (1)
  {
    uint64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= (uint64_t)v86)
    {
      uint64_t v88 = (uint64_t)v83;
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v85 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_12;
    }
  }
LABEL_78:
  __break(1u);
LABEL_79:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0129EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = type metadata accessor for PuzzleStatistic();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  sub_1C0153798(0);
  v4[18] = v6;
  v4[19] = *(void *)(v6 - 8);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  sub_1C0064478(0);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C012A05C, 0, 0);
}

uint64_t sub_1C012A05C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = sub_1C151EE9C();
    uint64_t v4 = *(void *)(v3 - 8);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v26 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v25 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t *)(v1 + 56);
    while (1)
    {
      uint64_t v8 = *(void *)(v0 + 176);
      uint64_t v7 = *(void *)(v0 + 184);
      uint64_t v9 = *(v5 - 2);
      uint64_t v30 = *(v5 - 3);
      uint64_t v10 = *v5;
      uint64_t v28 = v2;
      uint64_t v29 = *(v5 - 1);
      v27(v7, 1, 1, v3);
      uint64_t v11 = swift_allocObject();
      swift_weakInit();
      uint64_t v12 = (void *)swift_allocObject();
      v12[2] = 0;
      uint64_t v13 = v12 + 2;
      void v12[3] = 0;
      v12[4] = v11;
      v12[5] = v30;
      void v12[6] = v9;
      v12[7] = v29;
      v12[8] = v10;
      sub_1BFE338B4(v7, v8, (uint64_t (*)(void))sub_1C0064478);
      LODWORD(v11) = (*v26)(v8, 1, v3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = *(void *)(v0 + 176);
      if (v11 == 1)
      {
        sub_1BFDDF774(*(void *)(v0 + 176), (uint64_t (*)(void))sub_1C0064478);
        if (!*v13) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_1C151EE8C();
        (*v25)(v14, v3);
        if (!*v13)
        {
LABEL_8:
          uint64_t v15 = 0;
          uint64_t v17 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = sub_1C151EDBC();
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v18 = **(void **)(v0 + 88);
      uint64_t v19 = v17 | v15;
      if (v17 | v15)
      {
        uint64_t v19 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v15;
        *(void *)(v0 + 40) = v17;
      }
      uint64_t v6 = *(void *)(v0 + 184);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v19;
      *(void *)(v0 + 64) = v18;
      swift_task_create();
      swift_release();
      sub_1BFDDF774(v6, (uint64_t (*)(void))sub_1C0064478);
      v5 += 4;
      uint64_t v2 = v28 - 1;
      if (v28 == 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  *(void *)(v0 + 72) = **(void **)(v0 + 88);
  unint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v20;
  sub_1C0153A40();
  uint64_t v22 = v21;
  uint64_t v23 = sub_1C014FD48(&qword_1EB86FD80, 255, (void (*)(uint64_t))sub_1C0153A40);
  *unint64_t v20 = v0;
  v20[1] = sub_1C012A3F0;
  return MEMORY[0x1F415F0E8](v22, v23);
}

uint64_t sub_1C012A3F0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 200) = a1;
  *(void *)(v3 + 208) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1C012A77C;
  }
  else {
    uint64_t v4 = sub_1C012A504;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C012A504()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    unint64_t v7 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v9 = *(void *)(v0 + 160);
      uint64_t v8 = *(void *)(v0 + 168);
      uint64_t v10 = *(void *)(v0 + 112);
      sub_1BFE338B4(v5, v8, (uint64_t (*)(void))sub_1C0153798);
      sub_1C01054A0(v8, v9, (uint64_t (*)(void))sub_1C0153798);
      int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v10);
      uint64_t v12 = *(void *)(v0 + 160);
      if (v11 == 1)
      {
        sub_1BFDDF774(v12, (uint64_t (*)(void))sub_1C0153798);
      }
      else
      {
        uint64_t v14 = *(void *)(v0 + 128);
        uint64_t v13 = *(void *)(v0 + 136);
        sub_1C01054A0(v12, v13, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        sub_1C01054A0(v13, v14, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v7 = sub_1C0EE07BC(0, *(void *)(v7 + 16) + 1, 1, v7);
        }
        unint64_t v16 = *(void *)(v7 + 16);
        unint64_t v15 = *(void *)(v7 + 24);
        if (v16 >= v15 >> 1) {
          unint64_t v7 = sub_1C0EE07BC(v15 > 1, v16 + 1, 1, v7);
        }
        uint64_t v17 = *(void *)(v0 + 128);
        *(void *)(v7 + 16) = v16 + 1;
        sub_1C01054A0(v17, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v16, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      }
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = MEMORY[0x1E4FBC860];
  }
  **(void **)(v0 + 80) = v7;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1C012A77C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C012A820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[5] = a1;
  v8[6] = a4;
  return MEMORY[0x1F4188298](sub_1C012A848, 0, 0);
}

uint64_t sub_1C012A848()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 88) = Strong;
  if (!Strong)
  {
    type metadata accessor for FormatServiceError();
    sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_5;
  }
  uint64_t v2 = (void *)Strong;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void **)(v0 + 80);
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v3;
  v5._object = v4;
  PuzzleStatisticType.init(rawValue:)(v5);
  *(unsigned char *)(v0 + 153) = v18;
  if (v18 == 9)
  {
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 80);
    sub_1C0153AC0();
    swift_allocError();
    *uint64_t v8 = v7;
    v8[1] = v6;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();
LABEL_5:
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  uint64_t v12 = *(void *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 64);
  uint64_t v13 = v2[33];
  uint64_t v14 = v2[34];
  __swift_project_boxed_opaque_existential_1(v2 + 30, v13);
  sub_1BFEF9AD0(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  *(void *)(v0 + 96) = v15;
  *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
  *(void *)(v15 + 32) = v12;
  *(void *)(v15 + 40) = v11;
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 104) + **(int **)(v14 + 104));
  swift_bridgeObjectRetain();
  unint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v16;
  *unint64_t v16 = v0;
  v16[1] = sub_1C012AB08;
  return v17(v15, v13, v14);
}

uint64_t sub_1C012AB08(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1C012B06C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C012AC24;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

void sub_1C012AC24()
{
  unint64_t v1 = *(void *)(v0 + 112);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_13;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = MEMORY[0x1C18C7CB0](0, *(void *)(v0 + 112));
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v2 = *(void *)(*(void *)(v0 + 112) + 32);
    swift_unknownObjectRetain();
  }
  *(void *)(v0 + 128) = v2;
  swift_bridgeObjectRelease();
  swift_getObjectType();
  if (FCPuzzleTypeProviding.isAllowed.getter())
  {
    char v3 = *(unsigned char *)(v0 + 153);
    uint64_t v4 = *(void **)(v0 + 88);
    uint64_t v5 = v4[38];
    uint64_t v6 = v4[39];
    __swift_project_boxed_opaque_existential_1(v4 + 35, v5);
    *(unsigned char *)(v0 + 152) = v3;
    uint64_t v13 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 16) + **(int **)(v6 + 16));
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1C012AEA4;
    uint64_t v8 = *(void *)(v0 + 40);
    v13(v8, v0 + 152, v2, v5, v6);
    return;
  }
  swift_release();
  swift_unknownObjectRelease();
LABEL_13:
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v11 = type metadata accessor for PuzzleStatistic();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = *(void (**)(void))(v0 + 8);
  v12();
}

uint64_t sub_1C012AEA4()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C012B0D8;
  }
  else {
    uint64_t v2 = sub_1C012AFB8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C012AFB8()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = type metadata accessor for PuzzleStatistic();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  char v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C012B06C()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C012B0D8()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C012B148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_1C0104C04;
  return sub_1C012B200(a2, a4, a5);
}

uint64_t sub_1C012B200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[799] = v3;
  v4[793] = a3;
  v4[787] = a2;
  v4[781] = a1;
  sub_1C0154268();
  v4[805] = v5;
  v4[811] = swift_task_alloc();
  v4[817] = swift_task_alloc();
  uint64_t v6 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[823] = v6;
  v4[829] = *(void *)(v6 + 64);
  v4[835] = swift_task_alloc();
  v4[841] = swift_task_alloc();
  v4[847] = swift_task_alloc();
  v4[853] = swift_task_alloc();
  v4[859] = swift_task_alloc();
  v4[865] = swift_task_alloc();
  v4[871] = swift_task_alloc();
  v4[877] = swift_task_alloc();
  v4[883] = swift_task_alloc();
  sub_1BFEBC130();
  v4[889] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[895] = v8;
  v4[901] = *(void *)(v8 + 64);
  v4[907] = swift_task_alloc();
  v4[913] = swift_task_alloc();
  v4[919] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v10 = *(void *)(v9 - 8);
  v4[925] = v10;
  v4[931] = *(void *)(v10 + 64);
  v4[937] = swift_task_alloc();
  v4[943] = swift_task_alloc();
  v4[949] = swift_task_alloc();
  v4[955] = swift_task_alloc();
  v4[961] = swift_task_alloc();
  v4[967] = swift_task_alloc();
  v4[973] = swift_task_alloc();
  v4[979] = swift_task_alloc();
  v4[985] = swift_task_alloc();
  v4[991] = swift_task_alloc();
  v4[997] = swift_task_alloc();
  v4[1003] = swift_task_alloc();
  sub_1C0154398(0);
  uint64_t v12 = *(void *)(v11 - 8);
  v4[1009] = v12;
  v4[1015] = *(void *)(v12 + 64);
  v4[1021] = swift_task_alloc();
  v4[1027] = swift_task_alloc();
  v4[1033] = swift_task_alloc();
  v4[1039] = swift_task_alloc();
  v4[1045] = swift_task_alloc();
  v4[1051] = swift_task_alloc();
  v4[1057] = swift_task_alloc();
  v4[1063] = swift_task_alloc();
  v4[1069] = swift_task_alloc();
  v4[1075] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C012B5AC, 0, 0);
}

uint64_t sub_1C012B5AC()
{
  if (qword_1EB88CB60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C04A645C(v0[781]);
  if (v1)
  {
    uint64_t v9 = v1;
    sub_1BFC3E5C0(0);
    sub_1BFC3E5C0(0);
    sub_1BFC3E5C0(0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(v9);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[1081] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C012B908;
    uint64_t v5 = v0[1075];
    uint64_t v6 = v0[793];
    uint64_t v7 = v0[787];
    uint64_t v8 = v0[781];
    return sub_1C0133E64(v5, v8, v7, v6);
  }
}

uint64_t sub_1C012B908()
{
  *(void *)(*(void *)v1 + 8696) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C012E5D0;
  }
  else {
    uint64_t v2 = sub_1C012BA1C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C012BA1C()
{
  sub_1BFE338B4(v0[781], v0[919], (uint64_t (*)(void))sub_1BFEBC130);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = v0[997];
  uint64_t v3 = v0[919];
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v5 = v3 + *(int *)(v4 + 48);
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v2, 1, 1, v6);
    sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v8 = type metadata accessor for FormatPackage;
    uint64_t v9 = v3;
  }
  else
  {
    sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v11 = v3 + *(int *)(v10 + 48);
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v3, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
    uint64_t v8 = type metadata accessor for FormatMetadata;
    uint64_t v9 = v11;
  }
  sub_1BFDDF774(v9, (uint64_t (*)(void))v8);
  uint64_t v12 = v0[997];
  sub_1BFE338B4(v0[787], v0[991], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C1515FDC();
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  uint64_t v14 = v0[1003];
  uint64_t v15 = v0[997];
  uint64_t v16 = v0[991];
  if (v13 == 1)
  {
    sub_1C01054A0(v16, v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
    sub_1BFDDF774(v15, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  else
  {
    sub_1BFDDF774(v16, (uint64_t (*)(void))sub_1BFF00BEC);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v14, v15, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  uint64_t v67 = v0[1075];
  uint64_t v17 = v0[1069];
  uint64_t v40 = v0[1063];
  uint64_t v45 = v0[1057];
  uint64_t v48 = v0[1051];
  uint64_t v51 = v0[1045];
  uint64_t v54 = v0[1039];
  uint64_t v60 = v0[1027];
  uint64_t v57 = v0[1033];
  uint64_t v63 = v0[1021];
  uint64_t v76 = v0[1015];
  uint64_t v74 = v0[1009];
  uint64_t v18 = v0[1003];
  uint64_t v19 = v0[985];
  uint64_t v39 = v0[979];
  uint64_t v44 = v0[973];
  uint64_t v47 = v0[967];
  uint64_t v50 = v0[961];
  uint64_t v53 = v0[955];
  uint64_t v56 = v0[949];
  uint64_t v59 = v0[943];
  uint64_t v62 = v0[937];
  uint64_t v72 = v0[931];
  uint64_t v68 = v0[925];
  uint64_t v20 = v0[913];
  uint64_t v75 = v0[895];
  uint64_t v21 = v0[883];
  uint64_t v38 = v0[877];
  uint64_t v41 = v21;
  uint64_t v43 = v0[871];
  uint64_t v46 = v0[865];
  uint64_t v49 = v0[859];
  uint64_t v52 = v0[853];
  uint64_t v55 = v0[847];
  uint64_t v58 = v0[841];
  uint64_t v61 = v0[835];
  uint64_t v22 = v0[823];
  uint64_t v64 = v0[817];
  uint64_t v23 = v0[799];
  uint64_t v24 = v0[793];
  uint64_t v71 = v24;
  uint64_t v25 = v0[781];
  uint64_t v65 = v0[829];
  sub_1BFE338B4(v67, v17, (uint64_t (*)(void))sub_1C0154398);
  sub_1BFE338B4(v18, v19, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v24, v21, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFE338B4(v25, v20, (uint64_t (*)(void))sub_1BFEBC130);
  unint64_t v70 = (*(unsigned __int8 *)(v74 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  uint64_t v26 = *(unsigned __int8 *)(v22 + 80);
  unint64_t v69 = (v76 + *(unsigned __int8 *)(v68 + 80) + v70) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  unint64_t v66 = ((v72 + v26 + v69) & ~v26) + v65;
  unint64_t v73 = (v72 + v26 + v69) & ~v26;
  unint64_t v27 = (v66 + *(unsigned __int8 *)(v75 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  uint64_t v28 = swift_allocObject();
  v0[1093] = v28;
  *(void *)(v28 + 16) = v23;
  sub_1C01054A0(v17, v28 + v70, (uint64_t (*)(void))sub_1C0154398);
  sub_1C01054A0(v19, v28 + v69, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v41, v28 + v73, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C01054A0(v20, v28 + v27, (uint64_t (*)(void))sub_1BFEBC130);
  swift_retain();
  swift_retain();
  char v42 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C0158D58(255, &qword_1EB879EA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, MEMORY[0x1E4FBB320]);
  swift_asyncLet_begin();
  sub_1BFE338B4(v67, v40, (uint64_t (*)(void))sub_1C0154398);
  sub_1BFE338B4(v18, v39, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v71, v38, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v29 = swift_allocObject();
  v0[1099] = v29;
  *(void *)(v29 + 16) = v23;
  sub_1C01054A0(v40, v29 + v70, (uint64_t (*)(void))sub_1C0154398);
  sub_1C01054A0(v39, v29 + v69, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v38, v29 + v73, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_retain();
  sub_1C01543E0();
  swift_asyncLet_begin();
  sub_1BFE338B4(v67, v45, (uint64_t (*)(void))sub_1C0154398);
  sub_1BFE338B4(v18, v44, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v71, v43, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v30 = swift_allocObject();
  v0[1105] = v30;
  *(void *)(v30 + 16) = v23;
  sub_1C01054A0(v45, v30 + v70, (uint64_t (*)(void))sub_1C0154398);
  sub_1C01054A0(v44, v30 + v69, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v43, v30 + v73, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_retain();
  sub_1C0154470();
  swift_asyncLet_begin();
  sub_1BFE338B4(v67, v48, (uint64_t (*)(void))sub_1C0154398);
  sub_1BFE338B4(v18, v47, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v71, v46, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v31 = swift_allocObject();
  v0[1111] = v31;
  *(void *)(v31 + 16) = v23;
  sub_1C01054A0(v48, v31 + v70, (uint64_t (*)(void))sub_1C0154398);
  sub_1C01054A0(v47, v31 + v69, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v46, v31 + v73, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_retain();
  sub_1C0158D58(255, &qword_1EB880CC0, (uint64_t (*)(uint64_t))sub_1BFF1D9F4, v42);
  swift_asyncLet_begin();
  sub_1BFE338B4(v67, v51, (uint64_t (*)(void))sub_1C0154398);
  sub_1BFE338B4(v18, v50, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v71, v49, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v32 = swift_allocObject();
  v0[1117] = v32;
  *(void *)(v32 + 16) = v23;
  sub_1C01054A0(v51, v32 + v70, (uint64_t (*)(void))sub_1C0154398);
  sub_1C01054A0(v50, v32 + v69, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v49, v32 + v73, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_retain();
  sub_1BFCFCDCC();
  swift_asyncLet_begin();
  sub_1BFE338B4(v67, v54, (uint64_t (*)(void))sub_1C0154398);
  sub_1BFE338B4(v18, v53, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v71, v52, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v33 = swift_allocObject();
  v0[1123] = v33;
  *(void *)(v33 + 16) = v23;
  sub_1C01054A0(v54, v33 + v70, (uint64_t (*)(void))sub_1C0154398);
  sub_1C01054A0(v53, v33 + v69, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v52, v33 + v73, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_retain();
  sub_1C0154538();
  swift_asyncLet_begin();
  sub_1BFE338B4(v67, v57, (uint64_t (*)(void))sub_1C0154398);
  sub_1BFE338B4(v18, v56, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v71, v55, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v34 = swift_allocObject();
  v0[1129] = v34;
  *(void *)(v34 + 16) = v23;
  sub_1C01054A0(v57, v34 + v70, (uint64_t (*)(void))sub_1C0154398);
  sub_1C01054A0(v56, v34 + v69, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v55, v34 + v73, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_retain();
  sub_1C01545C8();
  swift_asyncLet_begin();
  sub_1BFE338B4(v67, v60, (uint64_t (*)(void))sub_1C0154398);
  sub_1BFE338B4(v18, v59, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v71, v58, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v35 = swift_allocObject();
  v0[1135] = v35;
  *(void *)(v35 + 16) = v23;
  sub_1C01054A0(v60, v35 + v70, (uint64_t (*)(void))sub_1C0154398);
  sub_1C01054A0(v59, v35 + v69, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v58, v35 + v73, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_retain();
  sub_1BFC917A8();
  swift_asyncLet_begin();
  sub_1BFE338B4(v67, v63, (uint64_t (*)(void))sub_1C0154398);
  sub_1BFE338B4(v18, v62, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v71, v61, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  uint64_t v36 = swift_allocObject();
  v0[1141] = v36;
  *(void *)(v36 + 16) = v23;
  sub_1C01054A0(v63, v36 + v70, (uint64_t (*)(void))sub_1C0154398);
  sub_1C01054A0(v62, v36 + v69, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v61, v36 + v73, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  swift_retain();
  sub_1BFDDC374();
  swift_asyncLet_begin();
  sub_1BFE338B4(v67, v64, (uint64_t (*)(void))sub_1C0154398);
  return MEMORY[0x1F41881E0](v0 + 82, v0 + 775, sub_1C012C914, v0 + 776);
}

uint64_t sub_1C012C914()
{
  *(void *)(v1 + 9176) = v0;
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C012E86C, 0, 0);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 6536);
    uint64_t v3 = *(int *)(*(void *)(v1 + 6440) + 48);
    *(_DWORD *)(v1 + 10088) = v3;
    uint64_t v4 = *(void *)(v1 + 6200);
    *(void *)(v1 + 9224) = v4;
    *(void *)(v2 + v3) = v4;
    swift_bridgeObjectRetain_n();
    return MEMORY[0x1F41881E0](v1 + 1936, v1 + 5960, sub_1C012C9FC, v1 + 6688);
  }
}

uint64_t sub_1C012C9FC()
{
  *(void *)(v1 + 9272) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1C012F1B8, 0, 0);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 6536);
    uint64_t v3 = *(int *)(*(void *)(v1 + 6440) + 64);
    *(_DWORD *)(v1 + 10092) = v3;
    uint64_t v4 = *(void *)(v1 + 5960);
    *(void *)(v1 + 9320) = v4;
    *(void *)(v2 + v3) = v4;
    swift_bridgeObjectRetain_n();
    return MEMORY[0x1F41881E0](v1 + 3216, v1 + 6056, sub_1C012CAEC, v1 + 7168);
  }
}

uint64_t sub_1C012CAEC()
{
  *(void *)(v1 + 9368) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1C012FB14, 0, 0);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 6536);
    uint64_t v3 = *(int *)(*(void *)(v1 + 6440) + 80);
    *(_DWORD *)(v1 + 10136) = v3;
    uint64_t v4 = *(void *)(v1 + 6056);
    *(void *)(v1 + 9416) = v4;
    *(void *)(v2 + v3) = v4;
    swift_bridgeObjectRetain_n();
    return MEMORY[0x1F41881E0](v1 + 4496, v1 + 6152, sub_1C012CBEC, v1 + 7648);
  }
}

uint64_t sub_1C012CBEC()
{
  *(void *)(v1 + 9464) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1C0130484, 0, 0);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 6536);
    uint64_t v3 = *(int *)(*(void *)(v1 + 6440) + 96);
    *(_DWORD *)(v1 + 10140) = v3;
    uint64_t v4 = *(void *)(v1 + 6152);
    *(void *)(v1 + 9512) = v4;
    *(void *)(v2 + v3) = v4;
    swift_bridgeObjectRetain_n();
    return MEMORY[0x1F41881E0](v1 + 5136, v1 + 5864, sub_1C012CCF8, v1 + 8128);
  }
}

uint64_t sub_1C012CCF8()
{
  *(void *)(v1 + 9560) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1C0130E00, 0, 0);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 6536);
    uint64_t v3 = *(int *)(*(void *)(v1 + 6440) + 112);
    *(_DWORD *)(v1 + 10184) = v3;
    uint64_t v4 = *(void *)(v1 + 5864);
    *(void *)(v1 + 9608) = v4;
    *(void *)(v2 + v3) = v4;
    swift_bridgeObjectRetain_n();
    return MEMORY[0x1F41881E0](v1 + 3856, v1 + 5816, sub_1C012CE0C, v1 + 5824);
  }
}

uint64_t sub_1C012CE0C()
{
  *(void *)(v1 + 9656) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1C0131790, 0, 0);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 6536);
    uint64_t v3 = *(int *)(*(void *)(v1 + 6440) + 128);
    *(_DWORD *)(v1 + 10188) = v3;
    uint64_t v4 = *(void *)(v1 + 5816);
    *(void *)(v1 + 9704) = v4;
    *(void *)(v2 + v3) = v4;
    swift_bridgeObjectRetain_n();
    return MEMORY[0x1F41881E0](v1 + 2576, v1 + 6104, sub_1C012CF2C, v1 + 9088);
  }
}

uint64_t sub_1C012CF2C()
{
  *(void *)(v1 + 9752) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1C013212C, 0, 0);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 6536);
    uint64_t v3 = *(int *)(*(void *)(v1 + 6440) + 144);
    *(_DWORD *)(v1 + 10232) = v3;
    uint64_t v4 = *(void *)(v1 + 6104);
    *(void *)(v1 + 9800) = v4;
    *(void *)(v2 + v3) = v4;
    swift_bridgeObjectRetain_n();
    return MEMORY[0x1F41881E0](v1 + 1296, v1 + 6008, sub_1C012D064, v1 + 9568);
  }
}

uint64_t sub_1C012D064()
{
  *(void *)(v1 + 9848) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1C0132ADC, 0, 0);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 6536);
    uint64_t v3 = *(int *)(*(void *)(v1 + 6440) + 160);
    *(_DWORD *)(v1 + 10236) = v3;
    uint64_t v4 = *(void *)(v1 + 6008);
    *(void *)(v1 + 9896) = v4;
    *(void *)(v2 + v3) = v4;
    swift_bridgeObjectRetain_n();
    return MEMORY[0x1F41881E0](v1 + 16, v1 + 5912, sub_1C012D1A8, v1 + 10048);
  }
}

uint64_t sub_1C012D1A8()
{
  *(void *)(v1 + 9944) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C013349C;
  }
  else
  {
    *(_DWORD *)(v1 + 10280) = *(_DWORD *)(*(void *)(v1 + 6440) + 176);
    uint64_t v2 = sub_1C012D2A0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C012D2A0()
{
  uint64_t v21 = *(void *)(v0 + 9944);
  uint64_t v1 = *(void *)(v0 + 9896);
  uint64_t v19 = *(void *)(v0 + 9704);
  uint64_t v20 = *(void *)(v0 + 9800);
  uint64_t v18 = *(void *)(v0 + 9608);
  uint64_t v2 = *(void *)(v0 + 9512);
  uint64_t v3 = *(void *)(v0 + 9416);
  uint64_t v4 = *(void *)(v0 + 9320);
  uint64_t v5 = *(void *)(v0 + 9224);
  uint64_t v6 = *(void *)(v0 + 7256);
  uint64_t v7 = *(void *)(v0 + 6536);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 6488);
  uint64_t v9 = *(void *)(v0 + 6248);
  uint64_t v10 = *(void *)(v0 + 5912);
  *(void *)(v7 + *(int *)(v0 + 10280)) = v10;
  sub_1BFE338B4(v7, (uint64_t)v8, (uint64_t (*)(void))sub_1C0154398);
  sub_1BFE338B4(v9, v6, (uint64_t (*)(void))sub_1BFEBC130);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_1C0F7AB44(v8, v5, v4, v3, v2, v18, v19, v20, v1, v10, v6);
  *(void *)(v0 + 9992) = v21;
  uint64_t v12 = *(void *)(v0 + 6536);
  if (v21)
  {
    sub_1BFDDF774(*(void *)(v0 + 6536), (uint64_t (*)(void))sub_1C0154268);
    int v13 = sub_1C012DD20;
    uint64_t v14 = v0 + 16;
    uint64_t v15 = v0 + 5912;
    uint64_t v16 = v0 + 10528;
  }
  else
  {
    *(void *)(v0 + 10040) = sub_1C04A6A40(*(void *)(v0 + 6248), (uint64_t)v11);
    swift_retain();
    swift_release();
    sub_1BFDDF774(v12, (uint64_t (*)(void))sub_1C0154268);
    int v13 = sub_1C012D484;
    uint64_t v14 = v0 + 16;
    uint64_t v15 = v0 + 5912;
    uint64_t v16 = v0 + 8608;
  }
  return MEMORY[0x1F41881D0](v14, v15, v13, v16);
}

uint64_t sub_1C012D484()
{
  return MEMORY[0x1F4188298](sub_1C012D4A0, 0, 0);
}

uint64_t sub_1C012D4A0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C012D528, v0 + 8368);
}

uint64_t sub_1C012D528()
{
  return MEMORY[0x1F4188298](sub_1C012D544, 0, 0);
}

uint64_t sub_1C012D544()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C012D5CC, v0 + 6112);
}

uint64_t sub_1C012D5CC()
{
  return MEMORY[0x1F4188298](sub_1C012D5E8, 0, 0);
}

uint64_t sub_1C012D5E8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C012D670, v0 + 6064);
}

uint64_t sub_1C012D670()
{
  return MEMORY[0x1F4188298](sub_1C012D68C, 0, 0);
}

uint64_t sub_1C012D68C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C012D718, v0 + 6016);
}

uint64_t sub_1C012D718()
{
  return MEMORY[0x1F4188298](sub_1C012D734, 0, 0);
}

uint64_t sub_1C012D734()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C012D7C0, v0 + 5968);
}

uint64_t sub_1C012D7C0()
{
  return MEMORY[0x1F4188298](sub_1C012D7DC, 0, 0);
}

uint64_t sub_1C012D7DC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C012D864, v0 + 5920);
}

uint64_t sub_1C012D864()
{
  return MEMORY[0x1F4188298](sub_1C012D880, 0, 0);
}

uint64_t sub_1C012D880()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C012D908, v0 + 5872);
}

uint64_t sub_1C012D908()
{
  return MEMORY[0x1F4188298](sub_1C012D924, 0, 0);
}

uint64_t sub_1C012D924()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C012D9AC, v0 + 5776);
}

uint64_t sub_1C012D9AC()
{
  return MEMORY[0x1F4188298](sub_1C012D9C8, 0, 0);
}

uint64_t sub_1C012D9C8()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = v0[1255];
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v4);
}

uint64_t sub_1C012DD20()
{
  return MEMORY[0x1F4188298](sub_1C012DD3C, 0, 0);
}

uint64_t sub_1C012DD3C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C012DDC4, v0 + 10576);
}

uint64_t sub_1C012DDC4()
{
  return MEMORY[0x1F4188298](sub_1C012DDE0, 0, 0);
}

uint64_t sub_1C012DDE0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C012DE68, v0 + 10624);
}

uint64_t sub_1C012DE68()
{
  return MEMORY[0x1F4188298](sub_1C012DE84, 0, 0);
}

uint64_t sub_1C012DE84()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C012DF0C, v0 + 10672);
}

uint64_t sub_1C012DF0C()
{
  return MEMORY[0x1F4188298](sub_1C012DF28, 0, 0);
}

uint64_t sub_1C012DF28()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C012DFB4, v0 + 10720);
}

uint64_t sub_1C012DFB4()
{
  return MEMORY[0x1F4188298](sub_1C012DFD0, 0, 0);
}

uint64_t sub_1C012DFD0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C012E05C, v0 + 10768);
}

uint64_t sub_1C012E05C()
{
  return MEMORY[0x1F4188298](sub_1C012E078, 0, 0);
}

uint64_t sub_1C012E078()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C012E100, v0 + 10816);
}

uint64_t sub_1C012E100()
{
  return MEMORY[0x1F4188298](sub_1C012E11C, 0, 0);
}

uint64_t sub_1C012E11C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C012E1A4, v0 + 10864);
}

uint64_t sub_1C012E1A4()
{
  return MEMORY[0x1F4188298](sub_1C012E1C0, 0, 0);
}

uint64_t sub_1C012E1C0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C012E248, v0 + 10912);
}

uint64_t sub_1C012E248()
{
  return MEMORY[0x1F4188298](sub_1C012E264, 0, 0);
}

uint64_t sub_1C012E264()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FB0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C012E5D0()
{
  sub_1BFC3E5C0(0);
  sub_1BFC3E5C0(0);
  sub_1BFC3E5C0(0);
  sub_1BFC3E5C0(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C012E86C()
{
  sub_1BFDDF774(*(void *)(v0 + 6536), (uint64_t (*)(void))sub_1C0154398);
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 5912, sub_1C012E908, v0 + 6256);
}

uint64_t sub_1C012E908()
{
  return MEMORY[0x1F4188298](sub_1C012E924, 0, 0);
}

uint64_t sub_1C012E924()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C012E9AC, v0 + 6304);
}

uint64_t sub_1C012E9AC()
{
  return MEMORY[0x1F4188298](sub_1C012E9C8, 0, 0);
}

uint64_t sub_1C012E9C8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C012EA50, v0 + 6352);
}

uint64_t sub_1C012EA50()
{
  return MEMORY[0x1F4188298](sub_1C012EA6C, 0, 0);
}

uint64_t sub_1C012EA6C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C012EAF4, v0 + 6400);
}

uint64_t sub_1C012EAF4()
{
  return MEMORY[0x1F4188298](sub_1C012EB10, 0, 0);
}

uint64_t sub_1C012EB10()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C012EB9C, v0 + 6448);
}

uint64_t sub_1C012EB9C()
{
  return MEMORY[0x1F4188298](sub_1C012EBB8, 0, 0);
}

uint64_t sub_1C012EBB8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C012EC44, v0 + 6496);
}

uint64_t sub_1C012EC44()
{
  return MEMORY[0x1F4188298](sub_1C012EC60, 0, 0);
}

uint64_t sub_1C012EC60()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C012ECE8, v0 + 6544);
}

uint64_t sub_1C012ECE8()
{
  return MEMORY[0x1F4188298](sub_1C012ED04, 0, 0);
}

uint64_t sub_1C012ED04()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C012ED8C, v0 + 6592);
}

uint64_t sub_1C012ED8C()
{
  return MEMORY[0x1F4188298](sub_1C012EDA8, 0, 0);
}

uint64_t sub_1C012EDA8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C012EE30, v0 + 6640);
}

uint64_t sub_1C012EE30()
{
  return MEMORY[0x1F4188298](sub_1C012EE4C, 0, 0);
}

uint64_t sub_1C012EE4C()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FB0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C012F1B8()
{
  uint64_t v1 = *(void *)(v0 + 6536);
  swift_bridgeObjectRelease();
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 5912, sub_1C012F264, v0 + 6736);
}

uint64_t sub_1C012F264()
{
  return MEMORY[0x1F4188298](sub_1C012F280, 0, 0);
}

uint64_t sub_1C012F280()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C012F308, v0 + 6784);
}

uint64_t sub_1C012F308()
{
  return MEMORY[0x1F4188298](sub_1C012F324, 0, 0);
}

uint64_t sub_1C012F324()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C012F3AC, v0 + 6832);
}

uint64_t sub_1C012F3AC()
{
  return MEMORY[0x1F4188298](sub_1C012F3C8, 0, 0);
}

uint64_t sub_1C012F3C8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C012F450, v0 + 6880);
}

uint64_t sub_1C012F450()
{
  return MEMORY[0x1F4188298](sub_1C012F46C, 0, 0);
}

uint64_t sub_1C012F46C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C012F4F8, v0 + 6928);
}

uint64_t sub_1C012F4F8()
{
  return MEMORY[0x1F4188298](sub_1C012F514, 0, 0);
}

uint64_t sub_1C012F514()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C012F5A0, v0 + 6976);
}

uint64_t sub_1C012F5A0()
{
  return MEMORY[0x1F4188298](sub_1C012F5BC, 0, 0);
}

uint64_t sub_1C012F5BC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C012F644, v0 + 7024);
}

uint64_t sub_1C012F644()
{
  return MEMORY[0x1F4188298](sub_1C012F660, 0, 0);
}

uint64_t sub_1C012F660()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C012F6E8, v0 + 7072);
}

uint64_t sub_1C012F6E8()
{
  return MEMORY[0x1F4188298](sub_1C012F704, 0, 0);
}

uint64_t sub_1C012F704()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C012F78C, v0 + 7120);
}

uint64_t sub_1C012F78C()
{
  return MEMORY[0x1F4188298](sub_1C012F7A8, 0, 0);
}

uint64_t sub_1C012F7A8()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FB0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C012FB14()
{
  uint64_t v1 = *(void *)(v0 + 6536);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 5912, sub_1C012FBD4, v0 + 7216);
}

uint64_t sub_1C012FBD4()
{
  return MEMORY[0x1F4188298](sub_1C012FBF0, 0, 0);
}

uint64_t sub_1C012FBF0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C012FC78, v0 + 7264);
}

uint64_t sub_1C012FC78()
{
  return MEMORY[0x1F4188298](sub_1C012FC94, 0, 0);
}

uint64_t sub_1C012FC94()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C012FD1C, v0 + 7312);
}

uint64_t sub_1C012FD1C()
{
  return MEMORY[0x1F4188298](sub_1C012FD38, 0, 0);
}

uint64_t sub_1C012FD38()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C012FDC0, v0 + 7360);
}

uint64_t sub_1C012FDC0()
{
  return MEMORY[0x1F4188298](sub_1C012FDDC, 0, 0);
}

uint64_t sub_1C012FDDC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C012FE68, v0 + 7408);
}

uint64_t sub_1C012FE68()
{
  return MEMORY[0x1F4188298](sub_1C012FE84, 0, 0);
}

uint64_t sub_1C012FE84()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C012FF10, v0 + 7456);
}

uint64_t sub_1C012FF10()
{
  return MEMORY[0x1F4188298](sub_1C012FF2C, 0, 0);
}

uint64_t sub_1C012FF2C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C012FFB4, v0 + 7504);
}

uint64_t sub_1C012FFB4()
{
  return MEMORY[0x1F4188298](sub_1C012FFD0, 0, 0);
}

uint64_t sub_1C012FFD0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C0130058, v0 + 7552);
}

uint64_t sub_1C0130058()
{
  return MEMORY[0x1F4188298](sub_1C0130074, 0, 0);
}

uint64_t sub_1C0130074()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C01300FC, v0 + 7600);
}

uint64_t sub_1C01300FC()
{
  return MEMORY[0x1F4188298](sub_1C0130118, 0, 0);
}

uint64_t sub_1C0130118()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FB0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C0130484()
{
  uint64_t v1 = *(void *)(v0 + 6536);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 5912, sub_1C0130550, v0 + 7696);
}

uint64_t sub_1C0130550()
{
  return MEMORY[0x1F4188298](sub_1C013056C, 0, 0);
}

uint64_t sub_1C013056C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C01305F4, v0 + 7744);
}

uint64_t sub_1C01305F4()
{
  return MEMORY[0x1F4188298](sub_1C0130610, 0, 0);
}

uint64_t sub_1C0130610()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C0130698, v0 + 7792);
}

uint64_t sub_1C0130698()
{
  return MEMORY[0x1F4188298](sub_1C01306B4, 0, 0);
}

uint64_t sub_1C01306B4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C013073C, v0 + 7840);
}

uint64_t sub_1C013073C()
{
  return MEMORY[0x1F4188298](sub_1C0130758, 0, 0);
}

uint64_t sub_1C0130758()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C01307E4, v0 + 7888);
}

uint64_t sub_1C01307E4()
{
  return MEMORY[0x1F4188298](sub_1C0130800, 0, 0);
}

uint64_t sub_1C0130800()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C013088C, v0 + 7936);
}

uint64_t sub_1C013088C()
{
  return MEMORY[0x1F4188298](sub_1C01308A8, 0, 0);
}

uint64_t sub_1C01308A8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C0130930, v0 + 7984);
}

uint64_t sub_1C0130930()
{
  return MEMORY[0x1F4188298](sub_1C013094C, 0, 0);
}

uint64_t sub_1C013094C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C01309D4, v0 + 8032);
}

uint64_t sub_1C01309D4()
{
  return MEMORY[0x1F4188298](sub_1C01309F0, 0, 0);
}

uint64_t sub_1C01309F0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C0130A78, v0 + 8080);
}

uint64_t sub_1C0130A78()
{
  return MEMORY[0x1F4188298](sub_1C0130A94, 0, 0);
}

uint64_t sub_1C0130A94()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FB0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C0130E00()
{
  uint64_t v1 = *(void *)(v0 + 6536);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 5912, sub_1C0130EE0, v0 + 8176);
}

uint64_t sub_1C0130EE0()
{
  return MEMORY[0x1F4188298](sub_1C0130EFC, 0, 0);
}

uint64_t sub_1C0130EFC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C0130F84, v0 + 8224);
}

uint64_t sub_1C0130F84()
{
  return MEMORY[0x1F4188298](sub_1C0130FA0, 0, 0);
}

uint64_t sub_1C0130FA0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C0131028, v0 + 8272);
}

uint64_t sub_1C0131028()
{
  return MEMORY[0x1F4188298](sub_1C0131044, 0, 0);
}

uint64_t sub_1C0131044()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C01310CC, v0 + 8320);
}

uint64_t sub_1C01310CC()
{
  return MEMORY[0x1F4188298](sub_1C01310E8, 0, 0);
}

uint64_t sub_1C01310E8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C0131174, v0 + 6160);
}

uint64_t sub_1C0131174()
{
  return MEMORY[0x1F4188298](sub_1C0131190, 0, 0);
}

uint64_t sub_1C0131190()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C013121C, v0 + 8416);
}

uint64_t sub_1C013121C()
{
  return MEMORY[0x1F4188298](sub_1C0131238, 0, 0);
}

uint64_t sub_1C0131238()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C01312C0, v0 + 8464);
}

uint64_t sub_1C01312C0()
{
  return MEMORY[0x1F4188298](sub_1C01312DC, 0, 0);
}

uint64_t sub_1C01312DC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C0131364, v0 + 8512);
}

uint64_t sub_1C0131364()
{
  return MEMORY[0x1F4188298](sub_1C0131380, 0, 0);
}

uint64_t sub_1C0131380()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C0131408, v0 + 8560);
}

uint64_t sub_1C0131408()
{
  return MEMORY[0x1F4188298](sub_1C0131424, 0, 0);
}

uint64_t sub_1C0131424()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FB0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C0131790()
{
  uint64_t v1 = *(void *)(v0 + 6536);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 5912, sub_1C013187C, v0 + 8656);
}

uint64_t sub_1C013187C()
{
  return MEMORY[0x1F4188298](sub_1C0131898, 0, 0);
}

uint64_t sub_1C0131898()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C0131920, v0 + 8704);
}

uint64_t sub_1C0131920()
{
  return MEMORY[0x1F4188298](sub_1C013193C, 0, 0);
}

uint64_t sub_1C013193C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C01319C4, v0 + 8752);
}

uint64_t sub_1C01319C4()
{
  return MEMORY[0x1F4188298](sub_1C01319E0, 0, 0);
}

uint64_t sub_1C01319E0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C0131A68, v0 + 8800);
}

uint64_t sub_1C0131A68()
{
  return MEMORY[0x1F4188298](sub_1C0131A84, 0, 0);
}

uint64_t sub_1C0131A84()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C0131B10, v0 + 8848);
}

uint64_t sub_1C0131B10()
{
  return MEMORY[0x1F4188298](sub_1C0131B2C, 0, 0);
}

uint64_t sub_1C0131B2C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C0131BB8, v0 + 8896);
}

uint64_t sub_1C0131BB8()
{
  return MEMORY[0x1F4188298](sub_1C0131BD4, 0, 0);
}

uint64_t sub_1C0131BD4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C0131C5C, v0 + 8944);
}

uint64_t sub_1C0131C5C()
{
  return MEMORY[0x1F4188298](sub_1C0131C78, 0, 0);
}

uint64_t sub_1C0131C78()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C0131D00, v0 + 8992);
}

uint64_t sub_1C0131D00()
{
  return MEMORY[0x1F4188298](sub_1C0131D1C, 0, 0);
}

uint64_t sub_1C0131D1C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C0131DA4, v0 + 9040);
}

uint64_t sub_1C0131DA4()
{
  return MEMORY[0x1F4188298](sub_1C0131DC0, 0, 0);
}

uint64_t sub_1C0131DC0()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FB0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C013212C()
{
  uint64_t v1 = *(void *)(v0 + 6536);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 5912, sub_1C013222C, v0 + 9136);
}

uint64_t sub_1C013222C()
{
  return MEMORY[0x1F4188298](sub_1C0132248, 0, 0);
}

uint64_t sub_1C0132248()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C01322D0, v0 + 9184);
}

uint64_t sub_1C01322D0()
{
  return MEMORY[0x1F4188298](sub_1C01322EC, 0, 0);
}

uint64_t sub_1C01322EC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C0132374, v0 + 9232);
}

uint64_t sub_1C0132374()
{
  return MEMORY[0x1F4188298](sub_1C0132390, 0, 0);
}

uint64_t sub_1C0132390()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C0132418, v0 + 9280);
}

uint64_t sub_1C0132418()
{
  return MEMORY[0x1F4188298](sub_1C0132434, 0, 0);
}

uint64_t sub_1C0132434()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C01324C0, v0 + 9328);
}

uint64_t sub_1C01324C0()
{
  return MEMORY[0x1F4188298](sub_1C01324DC, 0, 0);
}

uint64_t sub_1C01324DC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C0132568, v0 + 9376);
}

uint64_t sub_1C0132568()
{
  return MEMORY[0x1F4188298](sub_1C0132584, 0, 0);
}

uint64_t sub_1C0132584()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C013260C, v0 + 9424);
}

uint64_t sub_1C013260C()
{
  return MEMORY[0x1F4188298](sub_1C0132628, 0, 0);
}

uint64_t sub_1C0132628()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C01326B0, v0 + 9472);
}

uint64_t sub_1C01326B0()
{
  return MEMORY[0x1F4188298](sub_1C01326CC, 0, 0);
}

uint64_t sub_1C01326CC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C0132754, v0 + 9520);
}

uint64_t sub_1C0132754()
{
  return MEMORY[0x1F4188298](sub_1C0132770, 0, 0);
}

uint64_t sub_1C0132770()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FB0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C0132ADC()
{
  uint64_t v1 = *(void *)(v0 + 6536);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 5912, sub_1C0132BEC, v0 + 9616);
}

uint64_t sub_1C0132BEC()
{
  return MEMORY[0x1F4188298](sub_1C0132C08, 0, 0);
}

uint64_t sub_1C0132C08()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C0132C90, v0 + 9664);
}

uint64_t sub_1C0132C90()
{
  return MEMORY[0x1F4188298](sub_1C0132CAC, 0, 0);
}

uint64_t sub_1C0132CAC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C0132D34, v0 + 9712);
}

uint64_t sub_1C0132D34()
{
  return MEMORY[0x1F4188298](sub_1C0132D50, 0, 0);
}

uint64_t sub_1C0132D50()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C0132DD8, v0 + 9760);
}

uint64_t sub_1C0132DD8()
{
  return MEMORY[0x1F4188298](sub_1C0132DF4, 0, 0);
}

uint64_t sub_1C0132DF4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C0132E80, v0 + 9808);
}

uint64_t sub_1C0132E80()
{
  return MEMORY[0x1F4188298](sub_1C0132E9C, 0, 0);
}

uint64_t sub_1C0132E9C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C0132F28, v0 + 9856);
}

uint64_t sub_1C0132F28()
{
  return MEMORY[0x1F4188298](sub_1C0132F44, 0, 0);
}

uint64_t sub_1C0132F44()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C0132FCC, v0 + 9904);
}

uint64_t sub_1C0132FCC()
{
  return MEMORY[0x1F4188298](sub_1C0132FE8, 0, 0);
}

uint64_t sub_1C0132FE8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C0133070, v0 + 9952);
}

uint64_t sub_1C0133070()
{
  return MEMORY[0x1F4188298](sub_1C013308C, 0, 0);
}

uint64_t sub_1C013308C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C0133114, v0 + 10000);
}

uint64_t sub_1C0133114()
{
  return MEMORY[0x1F4188298](sub_1C0133130, 0, 0);
}

uint64_t sub_1C0133130()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FB0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C013349C()
{
  uint64_t v1 = *(void *)(v0 + 6536);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 5912, sub_1C01335B4, v0 + 10096);
}

uint64_t sub_1C01335B4()
{
  return MEMORY[0x1F4188298](sub_1C01335D0, 0, 0);
}

uint64_t sub_1C01335D0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 6008, sub_1C0133658, v0 + 10144);
}

uint64_t sub_1C0133658()
{
  return MEMORY[0x1F4188298](sub_1C0133674, 0, 0);
}

uint64_t sub_1C0133674()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 2576, v0 + 6104, sub_1C01336FC, v0 + 10192);
}

uint64_t sub_1C01336FC()
{
  return MEMORY[0x1F4188298](sub_1C0133718, 0, 0);
}

uint64_t sub_1C0133718()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3856, v0 + 5816, sub_1C01337A0, v0 + 10240);
}

uint64_t sub_1C01337A0()
{
  return MEMORY[0x1F4188298](sub_1C01337BC, 0, 0);
}

uint64_t sub_1C01337BC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 5136, v0 + 5864, sub_1C0133848, v0 + 10288);
}

uint64_t sub_1C0133848()
{
  return MEMORY[0x1F4188298](sub_1C0133864, 0, 0);
}

uint64_t sub_1C0133864()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 4496, v0 + 6152, sub_1C01338F0, v0 + 10336);
}

uint64_t sub_1C01338F0()
{
  return MEMORY[0x1F4188298](sub_1C013390C, 0, 0);
}

uint64_t sub_1C013390C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 3216, v0 + 6056, sub_1C0133994, v0 + 10384);
}

uint64_t sub_1C0133994()
{
  return MEMORY[0x1F4188298](sub_1C01339B0, 0, 0);
}

uint64_t sub_1C01339B0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 5960, sub_1C0133A38, v0 + 10432);
}

uint64_t sub_1C0133A38()
{
  return MEMORY[0x1F4188298](sub_1C0133A54, 0, 0);
}

uint64_t sub_1C0133A54()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 6200, sub_1C0133ADC, v0 + 10480);
}

uint64_t sub_1C0133ADC()
{
  return MEMORY[0x1F4188298](sub_1C0133AF8, 0, 0);
}

uint64_t sub_1C0133AF8()
{
  uint64_t v1 = v0[1075];
  sub_1BFDDF774(v0[1003], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFDDF774(v1, (uint64_t (*)(void))sub_1C0154398);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FB0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FC0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FD0);
  sub_1BFC3E5C0((uint64_t)&unk_1EA196FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C0133E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_1BFF00BEC();
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  type metadata accessor for FormatMetadata();
  v5[10] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  sub_1BFEBC130();
  v5[17] = v7;
  v5[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0133FF8, 0, 0);
}

uint64_t sub_1C0133FF8()
{
  sub_1BFE338B4(v0[3], v0[18], (uint64_t (*)(void))sub_1BFEBC130);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = v0[18];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = v0[2];
    sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v5 = v2 + *(int *)(v4 + 48);
    sub_1C01054A0(v2, v3, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    sub_1C0154398(0);
    sub_1C01054A0(v5, v3 + *(int *)(v6 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  uint64_t v9 = v0[16];
  uint64_t v10 = v0[11];
  uint64_t v11 = v0[12];
  uint64_t v12 = v0[10];
  sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v14 = v2 + *(int *)(v13 + 48);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v15(v9, v2, v10);
  sub_1C01054A0(v14, v12, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C1515F2C();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v19 = v0 + 9;
    uint64_t v18 = v0[9];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[12];
    sub_1BFE338B4(v0[4], v18, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
    if (v22(v18, 1, v20) != 1)
    {
      uint64_t v19 = v0 + 8;
      uint64_t v36 = v0[8];
      uint64_t v37 = v22;
      uint64_t v23 = v0[14];
      uint64_t v25 = v0[11];
      uint64_t v24 = v0[12];
      uint64_t v26 = v0[7];
      v15(v23, v0[9], v25);
      sub_1C1515E3C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v26, v23, v25);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v25);
      sub_1C1515F6C();
      swift_bridgeObjectRelease();
      sub_1BFDDF774(v26, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
      if (v37(v36, 1, v25) != 1)
      {
        uint64_t v33 = v0[15];
        uint64_t v34 = v0[13];
        uint64_t v35 = v0[11];
        v15(v34, v0[8], v35);
        v15(v33, v34, v35);
        goto LABEL_10;
      }
    }
    sub_1BFDDF774(*v19, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  (*(void (**)(void, void, void))(v0[12] + 16))(v0[15], v0[16], v0[11]);
LABEL_10:
  unint64_t v27 = (void *)swift_task_alloc();
  v0[19] = v27;
  *unint64_t v27 = v0;
  v27[1] = sub_1C0134480;
  uint64_t v28 = v0[15];
  uint64_t v29 = v0[10];
  uint64_t v31 = v0[5];
  uint64_t v30 = v0[6];
  uint64_t v32 = v0[2];
  return sub_1C013DA44(v32, v28, v30, v31, v29);
}

uint64_t sub_1C0134480()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C01346B0;
  }
  else {
    uint64_t v2 = sub_1C0134594;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0134594()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[10];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0[12] + 8);
  v4(v0[15], v2);
  sub_1BFDDF774(v3, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v4(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C01346B0()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[10];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0[12] + 8);
  v4(v0[15], v2);
  sub_1BFDDF774(v3, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v4(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C01347E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[41] = a4;
  v5[42] = v4;
  v5[39] = a2;
  v5[40] = a3;
  v5[38] = a1;
  sub_1BFF00BEC();
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  type metadata accessor for FormatMetadata();
  v5[46] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v5[47] = v6;
  v5[48] = *(void *)(v6 - 8);
  v5[49] = swift_task_alloc();
  v5[50] = swift_task_alloc();
  v5[51] = swift_task_alloc();
  v5[52] = swift_task_alloc();
  sub_1C0158DBC(0, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v5[53] = v7;
  v5[54] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C01349AC, 0, 0);
}

uint64_t sub_1C01349AC()
{
  sub_1C0153C08(v0[39], v0[54], &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (long long *)v0[54];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = (_OWORD *)v0[38];
    sub_1C0157FF8(0, qword_1EB873CA0);
    uint64_t v5 = (uint64_t)v2 + *(int *)(v4 + 48);
    long long v43 = v2[6];
    long long v44 = v2[7];
    long long v45 = v2[8];
    long long v41 = v2[4];
    long long v42 = v2[5];
    long long v39 = v2[2];
    long long v40 = v2[3];
    long long v37 = *v2;
    long long v38 = v2[1];
    sub_1C0158DBC(0, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1C01054A0(v5, (uint64_t)v3 + *(int *)(v6 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    v3[6] = v43;
    v3[7] = v44;
    v3[8] = v45;
    v3[2] = v39;
    v3[3] = v40;
    v3[4] = v41;
    v3[5] = v42;
    *uint64_t v3 = v37;
    v3[1] = v38;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  uint64_t v9 = v0[52];
  uint64_t v10 = v0[47];
  uint64_t v11 = v0[48];
  uint64_t v12 = v0[46];
  sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v14 = (uint64_t)v2 + *(int *)(v13 + 48);
  uint64_t v15 = *(void (**)(uint64_t, long long *, uint64_t))(v11 + 32);
  v15(v9, v2, v10);
  sub_1C01054A0(v14, v12, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C1515F2C();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v18 = v0[47];
    uint64_t v19 = v0[48];
    uint64_t v20 = v0[45];
    sub_1BFE338B4(v0[40], v20, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (v21(v20, 1, v18) == 1)
    {
      uint64_t v22 = v0 + 45;
    }
    else
    {
      uint64_t v23 = v0[50];
      uint64_t v36 = v21;
      uint64_t v24 = v0[47];
      uint64_t v25 = v0[48];
      uint64_t v35 = v0[44];
      uint64_t v26 = v0[43];
      v15(v23, (long long *)v0[45], v24);
      sub_1C1515E3C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v23, v24);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
      sub_1C1515F6C();
      swift_bridgeObjectRelease();
      sub_1BFDDF774(v26, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
      if (v36(v35, 1, v24) != 1)
      {
        uint64_t v32 = v0[51];
        uint64_t v33 = (long long *)v0[49];
        uint64_t v34 = v0[47];
        v15((uint64_t)v33, (long long *)v0[44], v34);
        v15(v32, v33, v34);
        goto LABEL_12;
      }
      uint64_t v22 = v0 + 44;
    }
    sub_1BFDDF774(*v22, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  (*(void (**)(void, void, void))(v0[48] + 16))(v0[51], v0[52], v0[47]);
LABEL_12:
  unint64_t v27 = *(void **)(v0[42] + 136);
  uint64_t v28 = (void *)sub_1C1515E9C();
  id v29 = objc_msgSend(v27, sel_assetHandleForURL_lifetimeHint_, v28, 1);
  v0[55] = v29;

  uint64_t v30 = (void *)swift_task_alloc();
  v0[56] = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_1C0134EE0;
  uint64_t v31 = v0[41];
  return sub_1C013EFC4((uint64_t)(v0 + 2), (uint64_t)v29, v31);
}

uint64_t sub_1C0134EE0()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C01351D4;
  }
  else {
    uint64_t v2 = sub_1C0134FF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0134FF4()
{
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(_OWORD **)(v0 + 304);

  long long v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 272) = v7;
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 144);
  long long v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 208) = v8;
  long long v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 240) = v9;
  long long v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 176) = v10;
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BFE338B4(v5, (uint64_t)v6 + *(int *)(v11 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  *uint64_t v6 = *(_OWORD *)(v0 + 160);
  long long v12 = *(_OWORD *)(v0 + 224);
  long long v14 = *(_OWORD *)(v0 + 176);
  long long v13 = *(_OWORD *)(v0 + 192);
  uint64_t v6[3] = *(_OWORD *)(v0 + 208);
  v6[4] = v12;
  v6[1] = v14;
  _OWORD v6[2] = v13;
  long long v15 = *(_OWORD *)(v0 + 288);
  long long v17 = *(_OWORD *)(v0 + 240);
  long long v16 = *(_OWORD *)(v0 + 256);
  v6[7] = *(_OWORD *)(v0 + 272);
  v6[8] = v15;
  v6[5] = v17;
  v6[6] = v16;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v18(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v18(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1C01351D4()
{
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 368);

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v6(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1C0135308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[37] = a4;
  v5[38] = v4;
  v5[35] = a2;
  v5[36] = a3;
  v5[34] = a1;
  sub_1BFF00BEC();
  v5[39] = swift_task_alloc();
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  type metadata accessor for FormatMetadata();
  v5[42] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v5[43] = v6;
  v5[44] = *(void *)(v6 - 8);
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  v5[47] = swift_task_alloc();
  v5[48] = swift_task_alloc();
  sub_1C0158DBC(0, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v5[49] = v7;
  v5[50] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C01354D4, 0, 0);
}

uint64_t sub_1C01354D4()
{
  sub_1C0153C08(v0[35], v0[50], &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (long long *)v0[50];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = (_OWORD *)v0[34];
    sub_1C0157FF8(0, &qword_1EB873B40);
    uint64_t v5 = (uint64_t)v2 + *(int *)(v4 + 48);
    long long v41 = v2[4];
    long long v42 = v2[5];
    *(_OWORD *)long long v43 = v2[6];
    *(_OWORD *)&v43[9] = *(long long *)((char *)v2 + 105);
    long long v37 = *v2;
    long long v38 = v2[1];
    long long v39 = v2[2];
    long long v40 = v2[3];
    sub_1C0158DBC(0, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1C01054A0(v5, (uint64_t)v3 + *(int *)(v6 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    v3[4] = v41;
    v3[5] = v42;
    v3[6] = *(_OWORD *)v43;
    *(_OWORD *)((char *)v3 + 105) = *(_OWORD *)&v43[9];
    *uint64_t v3 = v37;
    v3[1] = v38;
    v3[2] = v39;
    v3[3] = v40;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  uint64_t v9 = v0[48];
  uint64_t v10 = v0[43];
  uint64_t v11 = v0[44];
  uint64_t v12 = v0[42];
  sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v14 = (uint64_t)v2 + *(int *)(v13 + 48);
  long long v15 = *(void (**)(uint64_t, long long *, uint64_t))(v11 + 32);
  v15(v9, v2, v10);
  sub_1C01054A0(v14, v12, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C1515F2C();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v18 = v0[43];
    uint64_t v19 = v0[44];
    uint64_t v20 = v0[41];
    sub_1BFE338B4(v0[36], v20, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (v21(v20, 1, v18) == 1)
    {
      uint64_t v22 = v0 + 41;
    }
    else
    {
      uint64_t v23 = v0[46];
      uint64_t v36 = v21;
      uint64_t v24 = v0[43];
      uint64_t v25 = v0[44];
      uint64_t v35 = v0[40];
      uint64_t v26 = v0[39];
      v15(v23, (long long *)v0[41], v24);
      sub_1C1515E3C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v23, v24);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
      sub_1C1515F6C();
      swift_bridgeObjectRelease();
      sub_1BFDDF774(v26, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
      if (v36(v35, 1, v24) != 1)
      {
        uint64_t v32 = v0[47];
        uint64_t v33 = (long long *)v0[45];
        uint64_t v34 = v0[43];
        v15((uint64_t)v33, (long long *)v0[40], v34);
        v15(v32, v33, v34);
        goto LABEL_12;
      }
      uint64_t v22 = v0 + 40;
    }
    sub_1BFDDF774(*v22, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  (*(void (**)(void, void, void))(v0[44] + 16))(v0[47], v0[48], v0[43]);
LABEL_12:
  unint64_t v27 = *(void **)(v0[38] + 136);
  uint64_t v28 = (void *)sub_1C1515E9C();
  id v29 = objc_msgSend(v27, sel_assetHandleForURL_lifetimeHint_, v28, 1);
  v0[51] = v29;

  uint64_t v30 = (void *)swift_task_alloc();
  v0[52] = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_1C0135A08;
  uint64_t v31 = v0[37];
  return sub_1C013F934((uint64_t)(v0 + 2), (uint64_t)v29, v31);
}

uint64_t sub_1C0135A08()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0135CFC;
  }
  else {
    uint64_t v2 = sub_1C0135B1C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0135B1C()
{
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = *(_OWORD **)(v0 + 272);

  long long v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v7;
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 249) = *(_OWORD *)(v0 + 121);
  long long v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 160) = v8;
  long long v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v9;
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BFE338B4(v5, (uint64_t)v6 + *(int *)(v10 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  long long v11 = *(_OWORD *)(v0 + 192);
  long long v13 = *(_OWORD *)(v0 + 144);
  long long v12 = *(_OWORD *)(v0 + 160);
  _OWORD v6[2] = *(_OWORD *)(v0 + 176);
  uint64_t v6[3] = v11;
  *uint64_t v6 = v13;
  v6[1] = v12;
  long long v15 = *(_OWORD *)(v0 + 224);
  long long v14 = *(_OWORD *)(v0 + 240);
  long long v16 = *(_OWORD *)(v0 + 208);
  *(_OWORD *)((char *)v6 + 105) = *(_OWORD *)(v0 + 249);
  v6[5] = v15;
  v6[6] = v14;
  v6[4] = v16;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v17(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v17(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1C0135CFC()
{
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 336);

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v6(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1C0135E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_1BFF00BEC();
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  type metadata accessor for FormatMetadata();
  v5[10] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  sub_1C00F6BC8();
  v5[17] = v7;
  v5[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0135FC4, 0, 0);
}

uint64_t sub_1C0135FC4()
{
  sub_1BFE338B4(v0[3], v0[18], (uint64_t (*)(void))sub_1C00F6BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = (uint64_t *)v0[18];
    uint64_t v2 = (void *)v0[2];
    sub_1C0157BA4(0, (unint64_t *)&qword_1EB87D788, (void (*)(uint64_t))type metadata accessor for FormatSnippet, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v4 = (uint64_t)v1 + *(int *)(v3 + 48);
    uint64_t v5 = *v1;
    sub_1BFF1D9F4(0);
    sub_1C01054A0(v4, (uint64_t)v2 + *(int *)(v6 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    *uint64_t v2 = v5;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  uint64_t v9 = v0[18];
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[11];
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[10];
  sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v15 = v9 + *(int *)(v14 + 48);
  long long v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  v16(v10, v9, v11);
  sub_1C01054A0(v15, v13, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C1515F2C();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (!v18)
  {
    uint64_t v20 = v0 + 9;
    uint64_t v19 = v0[9];
    uint64_t v21 = v0[11];
    uint64_t v22 = v0[12];
    sub_1BFE338B4(v0[4], v19, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    if (v23(v19, 1, v21) != 1)
    {
      uint64_t v20 = v0 + 8;
      uint64_t v36 = v0[8];
      long long v37 = v23;
      uint64_t v24 = v0[14];
      uint64_t v26 = v0[11];
      uint64_t v25 = v0[12];
      uint64_t v27 = v0[7];
      v16(v24, v0[9], v26);
      sub_1C1515E3C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v27, v24, v26);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v26);
      sub_1C1515F6C();
      swift_bridgeObjectRelease();
      sub_1BFDDF774(v27, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
      if (v37(v36, 1, v26) != 1)
      {
        uint64_t v33 = v0[15];
        uint64_t v34 = v0[13];
        uint64_t v35 = v0[11];
        v16(v34, v0[8], v35);
        v16(v33, v34, v35);
        goto LABEL_10;
      }
    }
    sub_1BFDDF774(*v20, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  (*(void (**)(void, void, void))(v0[12] + 16))(v0[15], v0[16], v0[11]);
LABEL_10:
  uint64_t v28 = *(void **)(v0[6] + 136);
  id v29 = (void *)sub_1C1515E9C();
  id v30 = objc_msgSend(v28, sel_assetHandleForURL_lifetimeHint_, v29, 1);
  v0[19] = v30;

  uint64_t v31 = (void *)swift_task_alloc();
  v0[20] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_1C013646C;
  uint64_t v32 = v0[5];
  return sub_1C0140288((uint64_t)v30, v32);
}

uint64_t sub_1C013646C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C01366F4;
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    uint64_t v5 = sub_1C0136594;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C0136594()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = *(void **)(v0 + 16);

  sub_1BFF1D9F4(0);
  sub_1BFE338B4(v6, (uint64_t)v7 + *(int *)(v8 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  *uint64_t v7 = v1;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(v2, v4);
  sub_1BFDDF774(v6, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v9(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1C01366F4()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 80);

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v6(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1C0136828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[14] = a4;
  v5[15] = v4;
  v5[12] = a2;
  v5[13] = a3;
  v5[11] = a1;
  sub_1BFF00BEC();
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  type metadata accessor for FormatMetadata();
  v5[19] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v5[20] = v6;
  v5[21] = *(void *)(v6 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  sub_1C0158DBC(0, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v5[26] = v7;
  v5[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C01369F4, 0, 0);
}

uint64_t sub_1C01369F4()
{
  sub_1C0153C08(v0[12], v0[27], (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (long long *)v0[27];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = v0[11];
    sub_1C0157FF8(0, &qword_1EB873D70);
    uint64_t v5 = (uint64_t)v2 + *(int *)(v4 + 48);
    long long v39 = v2[1];
    long long v41 = *v2;
    uint64_t v6 = *((void *)v2 + 4);
    uint64_t v7 = *((void *)v2 + 5);
    uint64_t v8 = *((void *)v2 + 8);
    sub_1C0158DBC(0, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    long long v38 = v2[3];
    sub_1C01054A0(v5, v3 + *(int *)(v9 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    *(_OWORD *)uint64_t v3 = v41;
    *(_OWORD *)(v3 + 16) = v39;
    *(void *)(v3 + 32) = v6;
    *(void *)(v3 + 40) = v7;
    *(_OWORD *)(v3 + 48) = v38;
    *(void *)(v3 + 64) = v8;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  uint64_t v12 = v0[25];
  uint64_t v13 = v0[20];
  uint64_t v14 = v0[21];
  uint64_t v15 = v0[19];
  sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v17 = (uint64_t)v2 + *(int *)(v16 + 48);
  uint64_t v18 = *(void (**)(uint64_t, long long *, uint64_t))(v14 + 32);
  v18(v12, v2, v13);
  sub_1C01054A0(v17, v15, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C1515F2C();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (!v20)
  {
    uint64_t v22 = v0 + 18;
    uint64_t v21 = v0[18];
    uint64_t v23 = v0[20];
    uint64_t v24 = v0[21];
    sub_1BFE338B4(v0[13], v21, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    if (v25(v21, 1, v23) != 1)
    {
      uint64_t v22 = v0 + 17;
      uint64_t v40 = v0[17];
      uint64_t v26 = v0[23];
      long long v42 = v25;
      uint64_t v28 = v0[20];
      uint64_t v27 = v0[21];
      uint64_t v29 = v0[16];
      v18(v26, (long long *)v0[18], v28);
      sub_1C1515E3C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v29, v26, v28);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v28);
      sub_1C1515F6C();
      swift_bridgeObjectRelease();
      sub_1BFDDF774(v29, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
      if (v42(v40, 1, v28) != 1)
      {
        uint64_t v35 = v0[24];
        uint64_t v36 = (long long *)v0[22];
        uint64_t v37 = v0[20];
        v18((uint64_t)v36, (long long *)v0[17], v37);
        v18(v35, v36, v37);
        goto LABEL_10;
      }
    }
    sub_1BFDDF774(*v22, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  (*(void (**)(void, void, void))(v0[21] + 16))(v0[24], v0[25], v0[20]);
LABEL_10:
  id v30 = *(void **)(v0[15] + 136);
  uint64_t v31 = (void *)sub_1C1515E9C();
  id v32 = objc_msgSend(v30, sel_assetHandleForURL_lifetimeHint_, v31, 1);
  v0[28] = v32;

  uint64_t v33 = (void *)swift_task_alloc();
  v0[29] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_1C0136F14;
  uint64_t v34 = v0[14];
  return sub_1C0140B68((uint64_t)(v0 + 2), (uint64_t)v32, v34);
}

uint64_t sub_1C0136F14()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C01371F8;
  }
  else {
    uint64_t v2 = sub_1C0137028;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0137028()
{
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 88);

  long long v15 = *(_OWORD *)(v0 + 32);
  long long v16 = *(_OWORD *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 80);
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  long long v14 = *(_OWORD *)(v0 + 64);
  sub_1BFE338B4(v5, v6 + *(int *)(v10 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  *(_OWORD *)uint64_t v6 = v16;
  *(_OWORD *)(v6 + 16) = v15;
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v8;
  *(_OWORD *)(v6 + 48) = v14;
  *(void *)(v6 + 64) = v9;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v11(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v11(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1C01371F8()
{
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 152);

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v6(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1C013732C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  sub_1BFF00BEC();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  type metadata accessor for FormatMetadata();
  v5[24] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v5[25] = v6;
  v5[26] = *(void *)(v6 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  sub_1C0158DBC(0, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v5[31] = v7;
  v5[32] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C01374F8, 0, 0);
}

uint64_t sub_1C01374F8()
{
  sub_1C0153C08(v0[17], v0[32], &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (long long *)v0[32];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = v0[16];
    sub_1C0157FF8(0, &qword_1EB876998);
    uint64_t v5 = (uint64_t)v2 + *(int *)(v4 + 48);
    long long v42 = v2[1];
    long long v44 = *v2;
    long long v41 = v2[2];
    uint64_t v6 = *((void *)v2 + 6);
    uint64_t v7 = *((void *)v2 + 7);
    char v8 = *((unsigned char *)v2 + 80);
    char v9 = *((unsigned char *)v2 + 104);
    sub_1C0158DBC(0, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    long long v39 = v2[4];
    long long v40 = *(long long *)((char *)v2 + 88);
    sub_1C01054A0(v5, v3 + *(int *)(v10 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    *(_OWORD *)uint64_t v3 = v44;
    *(_OWORD *)(v3 + 16) = v42;
    *(_OWORD *)(v3 + 32) = v41;
    *(void *)(v3 + 48) = v6;
    *(void *)(v3 + 56) = v7;
    *(_OWORD *)(v3 + 64) = v39;
    *(unsigned char *)(v3 + 80) = v8;
    *(_OWORD *)(v3 + 88) = v40;
    *(unsigned char *)(v3 + 104) = v9;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  uint64_t v13 = v0[30];
  uint64_t v14 = v0[25];
  uint64_t v15 = v0[26];
  uint64_t v16 = v0[24];
  sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v18 = (uint64_t)v2 + *(int *)(v17 + 48);
  uint64_t v19 = *(void (**)(uint64_t, long long *, uint64_t))(v15 + 32);
  v19(v13, v2, v14);
  sub_1C01054A0(v18, v16, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C1515F2C();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (!v21)
  {
    uint64_t v23 = v0 + 23;
    uint64_t v22 = v0[23];
    uint64_t v24 = v0[25];
    uint64_t v25 = v0[26];
    sub_1BFE338B4(v0[18], v22, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    if (v26(v22, 1, v24) != 1)
    {
      uint64_t v23 = v0 + 22;
      uint64_t v43 = v0[22];
      uint64_t v27 = v0[28];
      long long v45 = v26;
      uint64_t v29 = v0[25];
      uint64_t v28 = v0[26];
      uint64_t v30 = v0[21];
      v19(v27, (long long *)v0[23], v29);
      sub_1C1515E3C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v30, v27, v29);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v29);
      sub_1C1515F6C();
      swift_bridgeObjectRelease();
      sub_1BFDDF774(v30, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
      if (v45(v43, 1, v29) != 1)
      {
        uint64_t v36 = v0[29];
        uint64_t v37 = (long long *)v0[27];
        uint64_t v38 = v0[25];
        v19((uint64_t)v37, (long long *)v0[22], v38);
        v19(v36, v37, v38);
        goto LABEL_10;
      }
    }
    sub_1BFDDF774(*v23, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  (*(void (**)(void, void, void))(v0[26] + 16))(v0[29], v0[30], v0[25]);
LABEL_10:
  uint64_t v31 = *(void **)(v0[20] + 136);
  id v32 = (void *)sub_1C1515E9C();
  id v33 = objc_msgSend(v31, sel_assetHandleForURL_lifetimeHint_, v32, 1);
  v0[33] = v33;

  uint64_t v34 = (void *)swift_task_alloc();
  v0[34] = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_1C0137A44;
  uint64_t v35 = v0[19];
  return sub_1C014145C((uint64_t)(v0 + 2), (uint64_t)v33, v35);
}

uint64_t sub_1C0137A44()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0137D50;
  }
  else {
    uint64_t v2 = sub_1C0137B58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0137B58()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v19 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 128);

  long long v17 = *(_OWORD *)(v0 + 32);
  long long v18 = *(_OWORD *)(v0 + 16);
  long long v16 = *(_OWORD *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72);
  char v8 = *(unsigned char *)(v0 + 96);
  char v9 = *(unsigned char *)(v0 + 120);
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  long long v14 = *(_OWORD *)(v0 + 80);
  long long v15 = *(_OWORD *)(v0 + 104);
  sub_1BFE338B4(v4, v5 + *(int *)(v10 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  *(_OWORD *)uint64_t v5 = v18;
  *(_OWORD *)(v5 + 16) = v17;
  *(_OWORD *)(v5 + 32) = v16;
  *(void *)(v5 + 48) = v6;
  *(void *)(v5 + 56) = v7;
  *(_OWORD *)(v5 + 64) = v14;
  *(unsigned char *)(v5 + 80) = v8;
  *(_OWORD *)(v5 + 88) = v15;
  *(unsigned char *)(v5 + 104) = v9;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v11(v1, v2);
  sub_1BFDDF774(v4, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v11(v19, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1C0137D50()
{
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 192);

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v6(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1C0137E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[16] = a4;
  v5[17] = v4;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  sub_1BFF00BEC();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  type metadata accessor for FormatMetadata();
  v5[21] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v5[22] = v6;
  v5[23] = *(void *)(v6 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  sub_1C0158DBC(0, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v5[28] = v7;
  v5[29] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0138050, 0, 0);
}

uint64_t sub_1C0138050()
{
  sub_1C0153C08(v0[14], v0[29], &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (long long *)v0[29];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = v0[13];
    sub_1C0157FF8(0, &qword_1EB873BA0);
    uint64_t v5 = (uint64_t)v2 + *(int *)(v4 + 48);
    long long v40 = v2[1];
    long long v42 = *v2;
    long long v38 = v2[3];
    long long v39 = v2[2];
    uint64_t v6 = *((void *)v2 + 8);
    uint64_t v7 = *((void *)v2 + 9);
    char v8 = *((unsigned char *)v2 + 80);
    sub_1C0158DBC(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1C01054A0(v5, v3 + *(int *)(v9 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    *(_OWORD *)uint64_t v3 = v42;
    *(_OWORD *)(v3 + 16) = v40;
    *(_OWORD *)(v3 + 32) = v39;
    *(_OWORD *)(v3 + 48) = v38;
    *(void *)(v3 + 64) = v6;
    *(void *)(v3 + 72) = v7;
    *(unsigned char *)(v3 + 80) = v8;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  uint64_t v12 = v0[27];
  uint64_t v13 = v0[22];
  uint64_t v14 = v0[23];
  uint64_t v15 = v0[21];
  sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v17 = (uint64_t)v2 + *(int *)(v16 + 48);
  long long v18 = *(void (**)(uint64_t, long long *, uint64_t))(v14 + 32);
  v18(v12, v2, v13);
  sub_1C01054A0(v17, v15, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C1515F2C();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (!v20)
  {
    uint64_t v22 = v0 + 20;
    uint64_t v21 = v0[20];
    uint64_t v23 = v0[22];
    uint64_t v24 = v0[23];
    sub_1BFE338B4(v0[15], v21, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    if (v25(v21, 1, v23) != 1)
    {
      uint64_t v22 = v0 + 19;
      uint64_t v41 = v0[19];
      uint64_t v26 = v0[25];
      uint64_t v43 = v25;
      uint64_t v28 = v0[22];
      uint64_t v27 = v0[23];
      uint64_t v29 = v0[18];
      v18(v26, (long long *)v0[20], v28);
      sub_1C1515E3C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v29, v26, v28);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v28);
      sub_1C1515F6C();
      swift_bridgeObjectRelease();
      sub_1BFDDF774(v29, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
      if (v43(v41, 1, v28) != 1)
      {
        uint64_t v35 = v0[26];
        uint64_t v36 = (long long *)v0[24];
        uint64_t v37 = v0[22];
        v18((uint64_t)v36, (long long *)v0[19], v37);
        v18(v35, v36, v37);
        goto LABEL_10;
      }
    }
    sub_1BFDDF774(*v22, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  (*(void (**)(void, void, void))(v0[23] + 16))(v0[26], v0[27], v0[22]);
LABEL_10:
  uint64_t v30 = *(void **)(v0[17] + 136);
  uint64_t v31 = (void *)sub_1C1515E9C();
  id v32 = objc_msgSend(v30, sel_assetHandleForURL_lifetimeHint_, v31, 1);
  v0[30] = v32;

  id v33 = (void *)swift_task_alloc();
  v0[31] = v33;
  *id v33 = v0;
  v33[1] = sub_1C0138578;
  uint64_t v34 = v0[16];
  return sub_1C0141CC4((uint64_t)(v0 + 2), (uint64_t)v32, v34);
}

uint64_t sub_1C0138578()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0138864;
  }
  else {
    uint64_t v2 = sub_1C013868C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C013868C()
{
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 104);

  long long v16 = *(_OWORD *)(v0 + 32);
  long long v17 = *(_OWORD *)(v0 + 16);
  long long v14 = *(_OWORD *)(v0 + 64);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  char v9 = *(unsigned char *)(v0 + 96);
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BFE338B4(v5, v6 + *(int *)(v10 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  *(_OWORD *)uint64_t v6 = v17;
  *(_OWORD *)(v6 + 16) = v16;
  *(_OWORD *)(v6 + 32) = v15;
  *(_OWORD *)(v6 + 48) = v14;
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 72) = v8;
  *(unsigned char *)(v6 + 80) = v9;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v11(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v11(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1C0138864()
{
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 168);

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v6(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1C0138998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  sub_1BFF00BEC();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  type metadata accessor for FormatMetadata();
  v5[24] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v5[25] = v6;
  v5[26] = *(void *)(v6 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  sub_1C0158DBC(0, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v5[31] = v7;
  v5[32] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0138B64, 0, 0);
}

uint64_t sub_1C0138B64()
{
  sub_1C0153C08(v0[17], v0[32], (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (long long *)v0[32];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = v0[16];
    sub_1C0157FF8(0, &qword_1EB8752C8);
    uint64_t v5 = (uint64_t)v2 + *(int *)(v4 + 48);
    long long v43 = v2[1];
    long long v45 = *v2;
    long long v41 = v2[3];
    long long v42 = v2[2];
    uint64_t v6 = *((void *)v2 + 8);
    char v7 = *((unsigned char *)v2 + 72);
    uint64_t v8 = *((void *)v2 + 12);
    __int16 v9 = *((_WORD *)v2 + 52);
    char v10 = *((unsigned char *)v2 + 106);
    sub_1C0158DBC(0, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    long long v40 = v2[5];
    sub_1C01054A0(v5, v3 + *(int *)(v11 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    *(_OWORD *)uint64_t v3 = v45;
    *(_OWORD *)(v3 + 16) = v43;
    *(_OWORD *)(v3 + 32) = v42;
    *(_OWORD *)(v3 + 48) = v41;
    *(void *)(v3 + 64) = v6;
    *(unsigned char *)(v3 + 72) = v7;
    *(_OWORD *)(v3 + 80) = v40;
    *(void *)(v3 + 96) = v8;
    *(unsigned char *)(v3 + 106) = v10;
    *(_WORD *)(v3 + 104) = v9;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  uint64_t v14 = v0[30];
  uint64_t v15 = v0[25];
  uint64_t v16 = v0[26];
  uint64_t v17 = v0[24];
  sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v19 = (uint64_t)v2 + *(int *)(v18 + 48);
  uint64_t v20 = *(void (**)(uint64_t, long long *, uint64_t))(v16 + 32);
  v20(v14, v2, v15);
  sub_1C01054A0(v19, v17, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C1515F2C();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (!v22)
  {
    uint64_t v24 = v0 + 23;
    uint64_t v23 = v0[23];
    uint64_t v25 = v0[25];
    uint64_t v26 = v0[26];
    sub_1BFE338B4(v0[18], v23, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v27(v23, 1, v25) != 1)
    {
      uint64_t v24 = v0 + 22;
      uint64_t v44 = v0[22];
      uint64_t v28 = v0[28];
      uint64_t v46 = v27;
      uint64_t v30 = v0[25];
      uint64_t v29 = v0[26];
      uint64_t v31 = v0[21];
      v20(v28, (long long *)v0[23], v30);
      sub_1C1515E3C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v31, v28, v30);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v30);
      sub_1C1515F6C();
      swift_bridgeObjectRelease();
      sub_1BFDDF774(v31, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      if (v46(v44, 1, v30) != 1)
      {
        uint64_t v37 = v0[29];
        long long v38 = (long long *)v0[27];
        uint64_t v39 = v0[25];
        v20((uint64_t)v38, (long long *)v0[22], v39);
        v20(v37, v38, v39);
        goto LABEL_10;
      }
    }
    sub_1BFDDF774(*v24, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  (*(void (**)(void, void, void))(v0[26] + 16))(v0[29], v0[30], v0[25]);
LABEL_10:
  id v32 = *(void **)(v0[20] + 136);
  id v33 = (void *)sub_1C1515E9C();
  id v34 = objc_msgSend(v32, sel_assetHandleForURL_lifetimeHint_, v33, 1);
  v0[33] = v34;

  uint64_t v35 = (void *)swift_task_alloc();
  v0[34] = v35;
  *uint64_t v35 = v0;
  v35[1] = sub_1C01390BC;
  uint64_t v36 = v0[19];
  return sub_1C01425B8((uint64_t)(v0 + 2), (uint64_t)v34, v36);
}

uint64_t sub_1C01390BC()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0137D50;
  }
  else {
    uint64_t v2 = sub_1C01391D0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C01391D0()
{
  uint64_t v20 = *(void *)(v0 + 240);
  uint64_t v19 = *(void *)(v0 + 232);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 128);

  long long v17 = *(_OWORD *)(v0 + 32);
  long long v18 = *(_OWORD *)(v0 + 16);
  long long v15 = *(_OWORD *)(v0 + 64);
  long long v16 = *(_OWORD *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 112);
  __int16 v8 = *(_WORD *)(v0 + 120);
  char v9 = *(unsigned char *)(v0 + 122);
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  long long v14 = *(_OWORD *)(v0 + 96);
  sub_1BFE338B4(v3, v4 + *(int *)(v10 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  *(_OWORD *)uint64_t v4 = v18;
  *(_OWORD *)(v4 + 16) = v17;
  *(_OWORD *)(v4 + 32) = v16;
  *(_OWORD *)(v4 + 48) = v15;
  *(void *)(v4 + 64) = v5;
  *(unsigned char *)(v4 + 72) = v6;
  *(_OWORD *)(v4 + 80) = v14;
  *(void *)(v4 + 96) = v7;
  *(unsigned char *)(v4 + 106) = v9;
  *(_WORD *)(v4 + 104) = v8;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v19, v1);
  sub_1BFDDF774(v3, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v11(v20, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1C01393DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  sub_1BFF00BEC();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  type metadata accessor for FormatMetadata();
  v5[17] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v5[18] = v6;
  v5[19] = *(void *)(v6 - 8);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  sub_1C0158DBC(0, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v5[24] = v7;
  v5[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C01395A8, 0, 0);
}

uint64_t sub_1C01395A8()
{
  sub_1C0153C08(v0[10], v0[25], (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (long long *)v0[25];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = v0[9];
    sub_1C0157FF8(0, &qword_1EB876020);
    uint64_t v5 = (uint64_t)v2 + *(int *)(v4 + 48);
    long long v37 = v2[1];
    long long v39 = *v2;
    long long v36 = v2[2];
    uint64_t v6 = *((void *)v2 + 6);
    sub_1C0158DBC(0, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1C01054A0(v5, v3 + *(int *)(v7 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    *(_OWORD *)uint64_t v3 = v39;
    *(_OWORD *)(v3 + 16) = v37;
    *(_OWORD *)(v3 + 32) = v36;
    *(void *)(v3 + 48) = v6;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    __int16 v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  uint64_t v10 = v0[23];
  uint64_t v11 = v0[18];
  uint64_t v12 = v0[19];
  uint64_t v13 = v0[17];
  sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v15 = (uint64_t)v2 + *(int *)(v14 + 48);
  long long v16 = *(void (**)(uint64_t, long long *, uint64_t))(v12 + 32);
  v16(v10, v2, v11);
  sub_1C01054A0(v15, v13, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C1515F2C();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (!v18)
  {
    uint64_t v20 = v0 + 16;
    uint64_t v19 = v0[16];
    uint64_t v21 = v0[18];
    uint64_t v22 = v0[19];
    sub_1BFE338B4(v0[11], v19, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    if (v23(v19, 1, v21) != 1)
    {
      uint64_t v20 = v0 + 15;
      uint64_t v38 = v0[15];
      uint64_t v24 = v0[21];
      long long v40 = v23;
      uint64_t v26 = v0[18];
      uint64_t v25 = v0[19];
      uint64_t v27 = v0[14];
      v16(v24, (long long *)v0[16], v26);
      sub_1C1515E3C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v27, v24, v26);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v26);
      sub_1C1515F6C();
      swift_bridgeObjectRelease();
      sub_1BFDDF774(v27, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
      if (v40(v38, 1, v26) != 1)
      {
        uint64_t v33 = v0[22];
        id v34 = (long long *)v0[20];
        uint64_t v35 = v0[18];
        v16((uint64_t)v34, (long long *)v0[15], v35);
        v16(v33, v34, v35);
        goto LABEL_10;
      }
    }
    sub_1BFDDF774(*v20, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  (*(void (**)(void, void, void))(v0[19] + 16))(v0[22], v0[23], v0[18]);
LABEL_10:
  uint64_t v28 = *(void **)(v0[13] + 136);
  uint64_t v29 = (void *)sub_1C1515E9C();
  id v30 = objc_msgSend(v28, sel_assetHandleForURL_lifetimeHint_, v29, 1);
  v0[26] = v30;

  uint64_t v31 = (void *)swift_task_alloc();
  v0[27] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_1C0139AC0;
  uint64_t v32 = v0[12];
  return sub_1C0142ED8((uint64_t)(v0 + 2), (uint64_t)v30, v32);
}

uint64_t sub_1C0139AC0()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0139D9C;
  }
  else {
    uint64_t v2 = sub_1C0139BD4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0139BD4()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 72);

  long long v13 = *(_OWORD *)(v0 + 32);
  long long v14 = *(_OWORD *)(v0 + 16);
  long long v12 = *(_OWORD *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 64);
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BFE338B4(v5, v6 + *(int *)(v8 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  *(_OWORD *)uint64_t v6 = v14;
  *(_OWORD *)(v6 + 16) = v13;
  *(_OWORD *)(v6 + 32) = v12;
  *(void *)(v6 + 48) = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v1, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v9(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1C0139D9C()
{
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 136);

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  sub_1BFDDF774(v5, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v6(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1C0139ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  _OWORD v5[3] = a1;
  uint64_t v6 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v5[8] = v6;
  v5[9] = *(void *)(v6 + 64);
  v5[10] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v8 = *(void *)(v7 - 8);
  v5[11] = v8;
  v5[12] = *(void *)(v8 + 64);
  v5[13] = swift_task_alloc();
  sub_1BFEBC130();
  uint64_t v10 = *(void *)(v9 - 8);
  v5[14] = v10;
  v5[15] = *(void *)(v10 + 64);
  v5[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013A05C, 0, 0);
}

uint64_t sub_1C013A05C()
{
  uint64_t v1 = *(void *)(v0[4] + 56);
  v0[17] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[18] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C013A114;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return sub_1C013A74C(v1, v3, v4);
}

uint64_t sub_1C013A114(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C013A294, 0, 0);
  }
}

uint64_t sub_1C013A294()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v6 = v0[10];
  uint64_t v22 = v0[15];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[8];
  uint64_t v10 = v0[5];
  uint64_t v9 = v0[6];
  uint64_t v11 = v0[3];
  v0[2] = v0[19];
  uint64_t v23 = v4;
  sub_1BFE338B4(v7, v1, (uint64_t (*)(void))sub_1BFEBC130);
  sub_1BFE338B4(v10, v2, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v9, v6, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v13 = (v22 + *(unsigned __int8 *)(v5 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v14 = (v23 + *(unsigned __int8 *)(v8 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  v0[20] = v15;
  *(void *)(v15 + 16) = v11;
  sub_1C01054A0(v1, v15 + v12, (uint64_t (*)(void))sub_1BFEBC130);
  sub_1C01054A0(v2, v15 + v13, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v6, v15 + v14, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_retain();
  long long v16 = (void *)swift_task_alloc();
  v0[21] = v16;
  sub_1C0158D58(0, &qword_1EB894428, (uint64_t (*)(uint64_t))sub_1C0154398, MEMORY[0x1E4FBB320]);
  uint64_t v18 = v17;
  uint64_t v19 = type metadata accessor for FormatPackageInventory();
  uint64_t v20 = sub_1C0150838(&qword_1EB894430, &qword_1EB894428, (uint64_t (*)(uint64_t))sub_1C0154398);
  *long long v16 = v0;
  v16[1] = sub_1C013A52C;
  return MEMORY[0x1F415F048](&unk_1EA1971D0, v15, v18, v19, v20);
}

uint64_t sub_1C013A52C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1C013A6B8, 0, 0);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1C013A6B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C013A74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013A874, 0, 0);
}

uint64_t sub_1C013A874()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  v0[2] = v0[3];
  sub_1BFE338B4(v8, v1, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v6, v3, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  *(void *)(v11 + 16) = v7;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v3, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  sub_1C0158D58(0, &qword_1EB87C328, (uint64_t (*)(uint64_t))sub_1BFEBC130, MEMORY[0x1E4FBB320]);
  uint64_t v14 = v13;
  sub_1C0154398(0);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C0150838(&qword_1EB894510, &qword_1EB87C328, (uint64_t (*)(uint64_t))sub_1BFEBC130);
  *unint64_t v12 = v0;
  v12[1] = sub_1C013AAA4;
  return MEMORY[0x1F415F048](&unk_1EA1971E0, v11, v14, v16, v17);
}

uint64_t sub_1C013AAA4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1F4188298](sub_1C015C334, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1C013AC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013AD78, 0, 0);
}

uint64_t sub_1C013AD78()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  v0[2] = v0[3];
  sub_1BFE338B4(v8, v1, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v6, v3, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  *(void *)(v11 + 16) = v7;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v3, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  sub_1C0157F68();
  uint64_t v14 = v13;
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C014FD48((unint64_t *)&unk_1EB8944E0, 255, (void (*)(uint64_t))sub_1C0157F68);
  *unint64_t v12 = v0;
  v12[1] = sub_1C013AAA4;
  return MEMORY[0x1F415F048](&unk_1EA197188, v11, v14, v16, v17);
}

uint64_t sub_1C013AFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013B0F4, 0, 0);
}

uint64_t sub_1C013B0F4()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  v0[2] = v0[3];
  sub_1BFE338B4(v8, v1, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v6, v3, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  *(void *)(v11 + 16) = v7;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v3, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  sub_1C0157D7C();
  uint64_t v14 = v13;
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C014FD48((unint64_t *)&unk_1EB8944A0, 255, (void (*)(uint64_t))sub_1C0157D7C);
  *unint64_t v12 = v0;
  v12[1] = sub_1C013AAA4;
  return MEMORY[0x1F415F048](&unk_1EA197148, v11, v14, v16, v17);
}

uint64_t sub_1C013B348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013B470, 0, 0);
}

uint64_t sub_1C013B470()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  v0[2] = v0[3];
  sub_1BFE338B4(v8, v1, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v6, v3, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  *(void *)(v11 + 16) = v7;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v3, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  sub_1C0158D58(0, (unint64_t *)&unk_1EB894518, (uint64_t (*)(uint64_t))sub_1C00F6BC8, MEMORY[0x1E4FBB320]);
  uint64_t v14 = v13;
  sub_1BFF1D9F4(0);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C0150838(&qword_1EB894528, (unint64_t *)&unk_1EB894518, (uint64_t (*)(uint64_t))sub_1C00F6BC8);
  *unint64_t v12 = v0;
  v12[1] = sub_1C013AAA4;
  return MEMORY[0x1F415F048](&unk_1EA197110, v11, v14, v16, v17);
}

uint64_t sub_1C013B6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013B7C8, 0, 0);
}

uint64_t sub_1C013B7C8()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  v0[2] = v0[3];
  sub_1BFE338B4(v8, v1, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v6, v3, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  *(void *)(v11 + 16) = v7;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v3, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  sub_1C01579B8();
  uint64_t v14 = v13;
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C014FD48((unint64_t *)&unk_1EB894500, 255, (void (*)(uint64_t))sub_1C01579B8);
  *unint64_t v12 = v0;
  v12[1] = sub_1C013AAA4;
  return MEMORY[0x1F415F048](&unk_1EA1970D8, v11, v14, v16, v17);
}

uint64_t sub_1C013BA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013BB44, 0, 0);
}

uint64_t sub_1C013BB44()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  v0[2] = v0[3];
  sub_1BFE338B4(v8, v1, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v6, v3, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  *(void *)(v11 + 16) = v7;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v3, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  sub_1C01577CC();
  uint64_t v14 = v13;
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C014FD48(&qword_1EB894488, 255, (void (*)(uint64_t))sub_1C01577CC);
  *unint64_t v12 = v0;
  v12[1] = sub_1C013AAA4;
  return MEMORY[0x1F415F048](&unk_1EA1970A0, v11, v14, v16, v17);
}

uint64_t sub_1C013BD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013BEC0, 0, 0);
}

uint64_t sub_1C013BEC0()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  v0[2] = v0[3];
  sub_1BFE338B4(v8, v1, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v6, v3, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  *(void *)(v11 + 16) = v7;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v3, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  sub_1C01575E0();
  uint64_t v14 = v13;
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C014FD48((unint64_t *)&unk_1EB8944C0, 255, (void (*)(uint64_t))sub_1C01575E0);
  *unint64_t v12 = v0;
  v12[1] = sub_1C013AAA4;
  return MEMORY[0x1F415F048](&unk_1EA197068, v11, v14, v16, v17);
}

uint64_t sub_1C013C114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013C23C, 0, 0);
}

uint64_t sub_1C013C23C()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  v0[2] = v0[3];
  sub_1BFE338B4(v8, v1, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v6, v3, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  *(void *)(v11 + 16) = v7;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v3, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  sub_1C01573F4();
  uint64_t v14 = v13;
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C014FD48(&qword_1EB894458, 255, (void (*)(uint64_t))sub_1C01573F4);
  *unint64_t v12 = v0;
  v12[1] = sub_1C013C490;
  return MEMORY[0x1F415F048](&unk_1EA197030, v11, v14, v16, v17);
}

uint64_t sub_1C013C490(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1F4188298](sub_1C013C63C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1C013C63C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C013C6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 + 64);
  v4[9] = swift_task_alloc();
  sub_1BFF00BEC();
  uint64_t v7 = *(void *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 + 64);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013C7D4, 0, 0);
}

uint64_t sub_1C013C7D4()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  v0[2] = v0[3];
  sub_1BFE338B4(v8, v1, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE338B4(v6, v3, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  *(void *)(v11 + 16) = v7;
  sub_1C01054A0(v1, v11 + v9, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C01054A0(v3, v11 + v10, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  sub_1C0157114();
  uint64_t v14 = v13;
  sub_1C0158DBC(0, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C014FD48(&qword_1EB894470, 255, (void (*)(uint64_t))sub_1C0157114);
  *unint64_t v12 = v0;
  v12[1] = sub_1C013AAA4;
  return MEMORY[0x1F415F048](&unk_1EA196FF8, v11, v14, v16, v17);
}

uint64_t sub_1C013CA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  _OWORD v6[2] = a1;
  uint64_t v6[3] = a2;
  sub_1BFEBC130();
  v6[8] = v7;
  v6[9] = swift_task_alloc();
  v6[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013CAD4, 0, 0);
}

uint64_t sub_1C013CAD4()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v6 = v5;
  uint64_t v7 = v1 + *(int *)(v5 + 48);
  sub_1BFE338B4(v4, v1, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  sub_1BFE338B4(v3, v2, (uint64_t (*)(void))sub_1BFEBC130);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v9 = v0[9];
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C01054A0(v9 + *(int *)(v6 + 48), v7, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFDDF774(v9, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    sub_1C01054A0(v9 + *(int *)(v10 + 48), v7, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v11 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
  }
  swift_storeEnumTagMultiPayload();
  unint64_t v12 = (void *)swift_task_alloc();
  v0[11] = v12;
  *unint64_t v12 = v0;
  v12[1] = sub_1C013CD1C;
  uint64_t v13 = v0[10];
  uint64_t v14 = v0[6];
  uint64_t v15 = v0[7];
  return sub_1C012B200(v13, v14, v15);
}

uint64_t sub_1C013CD1C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[12] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[10];
  if (v1)
  {
    sub_1BFDDF774(v5, (uint64_t (*)(void))sub_1BFEBC130);
    uint64_t v6 = sub_1C013CF04;
  }
  else
  {
    v4[13] = a1;
    sub_1BFDDF774(v5, (uint64_t (*)(void))sub_1BFEBC130);
    uint64_t v6 = sub_1C013CE8C;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1C013CE8C()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 104);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C013CF04()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C013CF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  *unint64_t v12 = v6;
  v12[1] = sub_1C0104C04;
  return sub_1C0139ED0(a2, a3, a4, a5, a6);
}

uint64_t sub_1C013D038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D060, 0, 0);
}

uint64_t sub_1C013D060()
{
  uint64_t v1 = *(void *)(v0[4] + 64);
  v0[7] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C013D118;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return sub_1C013AC50(v1, v3, v4);
}

uint64_t sub_1C013D118(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    return MEMORY[0x1F4188298](sub_1C015C33C, 0, 0);
  }
}

uint64_t sub_1C013D28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D2B4, 0, 0);
}

uint64_t sub_1C013D2B4()
{
  uint64_t v1 = *(void *)(v0[4] + 72);
  v0[7] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C013D118;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return sub_1C013AFCC(v1, v3, v4);
}

uint64_t sub_1C013D36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D394, 0, 0);
}

uint64_t sub_1C013D394()
{
  uint64_t v1 = *(void *)(v0[4] + 88);
  v0[7] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C013D118;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return sub_1C013B348(v1, v3, v4);
}

uint64_t sub_1C013D44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D474, 0, 0);
}

uint64_t sub_1C013D474()
{
  uint64_t v1 = *(void *)(v0[4] + 80);
  v0[7] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C013D118;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return sub_1C013B6A0(v1, v3, v4);
}

uint64_t sub_1C013D52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D554, 0, 0);
}

uint64_t sub_1C013D554()
{
  uint64_t v1 = *(void *)(v0[4] + 96);
  v0[7] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C013D118;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return sub_1C013BA1C(v1, v3, v4);
}

uint64_t sub_1C013D60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D634, 0, 0);
}

uint64_t sub_1C013D634()
{
  uint64_t v1 = *(void *)(v0[4] + 104);
  v0[7] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C013D118;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return sub_1C013BD98(v1, v3, v4);
}

uint64_t sub_1C013D6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D714, 0, 0);
}

uint64_t sub_1C013D714()
{
  uint64_t v1 = *(void *)(v0[4] + 112);
  v0[7] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C013D7CC;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return sub_1C013C114(v1, v3, v4);
}

uint64_t sub_1C013D7CC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    return MEMORY[0x1F4188298](sub_1C013D940, 0, 0);
  }
}

uint64_t sub_1C013D940()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C013D964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D98C, 0, 0);
}

uint64_t sub_1C013D98C()
{
  uint64_t v1 = *(void *)(v0[4] + 152);
  v0[7] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C013D118;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return sub_1C013C6AC(v1, v3, v4);
}

uint64_t sub_1C013DA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  sub_1BFF00BEC();
  v5[15] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  type metadata accessor for FormatPackage();
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013DB74, 0, 0);
}

uint64_t sub_1C013DB74()
{
  uint64_t v1 = *(void **)(v0[12] + 136);
  uint64_t v2 = (void *)sub_1C1515E9C();
  id v3 = objc_msgSend(v1, sel_assetHandleForURL_lifetimeHint_, v2, 1);
  v0[21] = v3;

  uint64_t v4 = (void *)swift_task_alloc();
  v0[22] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C013DC4C;
  uint64_t v5 = v0[20];
  uint64_t v6 = v0[13];
  return sub_1C013E540(v5, (uint64_t)v3, v6);
}

uint64_t sub_1C013DC4C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C013DD60;
  }
  else {
    uint64_t v2 = sub_1C013DDF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C013DD60()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C013DDF4()
{
  uint64_t v1 = sub_1BFE338B4(*(void *)(v0 + 160), *(void *)(v0 + 152), (uint64_t (*)(void))type metadata accessor for FormatPackage);
  if ((sub_1C01066A8(v1, v2) & 1) != 0
    && (*(void *)(v0 + 16) = sub_1C1515E2C(),
        *(void *)(v0 + 24) = v3,
        *(void *)(v0 + 32) = 0x786F62706F72642FLL,
        *(void *)(v0 + 40) = 0xE90000000000002FLL,
        sub_1BFF27ECC(),
        char v4 = sub_1C151FF0C(),
        swift_bridgeObjectRelease(),
        (v4 & 1) == 0))
  {
    if (qword_1EA194508 != -1) {
      swift_once();
    }
    type metadata accessor for FormatService();
    sub_1C014FD48((unint64_t *)&unk_1EB874650, v11, (void (*)(uint64_t))type metadata accessor for FormatService);
    sub_1C1516FBC();
    if (qword_1EA194510 != -1) {
      swift_once();
    }
    uint64_t v12 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 128);
    uint64_t v13 = *(void *)(v0 + 120);
    sub_1C1516FBC();
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v20);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 136) + 32))(*(void *)(v0 + 144), *(void *)(v0 + 120), *(void *)(v0 + 128));
      uint64_t v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_1C013E25C;
      uint64_t v15 = *(void *)(v0 + 144);
      uint64_t v16 = *(void *)(v0 + 104);
      uint64_t v17 = *(void *)(v0 + 112);
      uint64_t v18 = *(void *)(v0 + 96);
      uint64_t v19 = *(void *)(v0 + 80);
      return sub_1C013DA44(v19, v15, v18, v16, v17);
    }
  }
  else
  {

    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 80);
    sub_1BFDDF774(*(void *)(v0 + 152), (uint64_t (*)(void))type metadata accessor for FormatPackage);
    sub_1C01054A0(v5, v7, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    sub_1C0154398(0);
    sub_1BFE338B4(v6, v7 + *(int *)(v8 + 36), (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  return result;
}

uint64_t sub_1C013E25C()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C013E458;
  }
  else {
    uint64_t v2 = sub_1C013E370;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C013E370()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_1BFDDF774(v2, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  sub_1BFDDF774(v1, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1C013E458()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_1BFDDF774(v2, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  sub_1BFDDF774(v1, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1C013E540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0158D58(0, &qword_1EB8745F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, MEMORY[0x1E4FBB718]);
  v4[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatPackage();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, v5);
  v4[16] = swift_task_alloc();
  uint64_t v7 = sub_1C1515FDC();
  v4[17] = v7;
  v4[18] = *(void *)(v7 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FormatService.CacheFormatFile(0);
  v4[21] = v8;
  v4[22] = *(void *)(v8 - 8);
  v4[23] = swift_task_alloc();
  uint64_t v9 = sub_1C151E24C();
  v4[24] = v9;
  v4[25] = *(void *)(v9 - 8);
  v4[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013E7D4, 0, 0);
}

uint64_t sub_1C013E7D4()
{
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v1 = *(uint64_t **)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 192);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t *v1 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCBD8], v3);
  char v4 = sub_1C151E26C();
  uint64_t v5 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 160);
  uint64_t v9 = *(void *)(v0 + 136);
  uint64_t v10 = *(void *)(v0 + 144);
  uint64_t v11 = *(void *)(v0 + 128);
  id v12 = objc_msgSend(*(id *)(v0 + 72), sel_remoteURL);
  sub_1C1515F1C();

  sub_1C1518DCC();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v0 + 216) = v13;
  *(void *)(v0 + 224) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v8, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
  {
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v15 = qword_1EB87D640;
    uint64_t v16 = type metadata accessor for FormatService.CacheFormatFile;
    uint64_t v17 = MEMORY[0x1E4FBB718];
LABEL_9:
    uint64_t v28 = sub_1C01530F8(v14, (uint64_t)v15, (uint64_t)v16, v17, (uint64_t (*)(void))sub_1C0158D58);
    if (sub_1C01065B8(v28, v29)) {
      objc_msgSend(*(id *)(*(void *)(v0 + 88) + 136), sel_d_resetAssetHandle_, *(void *)(v0 + 72));
    }
    uint64_t v31 = *(void **)(v0 + 72);
    uint64_t v30 = *(void *)(v0 + 80);
    uint64_t v32 = *(void *)(v30 + 40);
    char v33 = *(unsigned char *)(v30 + 48);
    uint64_t v34 = swift_task_alloc();
    *(void *)(v34 + 16) = v31;
    *(void *)(v34 + 24) = v32;
    *(unsigned char *)(v34 + 32) = v33;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901F8);
    sub_1C151932C();
    swift_task_dealloc();
    *(void *)(swift_allocObject() + 16) = v31;
    id v35 = v31;
    long long v36 = (void *)sub_1C1518E7C();
    *(void *)(v0 + 232) = sub_1C1518FFC();

    swift_release();
    swift_release();
    long long v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v37;
    *long long v37 = v0;
    v37[1] = sub_1C013ECA0;
    uint64_t v5 = v0 + 48;
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v18 = *(void *)(v0 + 184);
  uint64_t v19 = *(void *)(v0 + 112);
  sub_1C01054A0(*(void *)(v0 + 128), v18, type metadata accessor for FormatService.CacheFormatFile);
  sub_1C0EB8150((_OWORD *)(v0 + 16));
  sub_1BFDDF774(v18, type metadata accessor for FormatService.CacheFormatFile);
  char v20 = swift_dynamicCast();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v19 + 56);
  if ((v20 & 1) == 0)
  {
    uint64_t v27 = *(void *)(v0 + 96);
    v21(v27, 1, 1, *(void *)(v0 + 104));
    uint64_t v15 = &qword_1EB8745F0;
    uint64_t v16 = type metadata accessor for FormatPackage;
    uint64_t v17 = MEMORY[0x1E4FBB718];
    uint64_t v14 = v27;
    goto LABEL_9;
  }
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = *(void *)(v0 + 96);
  uint64_t v24 = *(void *)(v0 + 64);
  v21(v23, 0, 1, *(void *)(v0 + 104));
  sub_1C01054A0(v23, v22, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  sub_1C01054A0(v22, v24, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_1C013ECA0()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C013EF00;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C013EDBC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C013EDBC()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void **)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48);
  unint64_t v6 = *(void *)(v0 + 56);
  id v7 = objc_msgSend(v3, sel_remoteURL);
  sub_1C1515F1C();

  sub_1C0143ECC(v5, v6, v1, (uint64_t)v3, v2, v4);
  (*(void (**)(void, void))(v0 + 216))(*(void *)(v0 + 152), *(void *)(v0 + 136));
  sub_1BFE95664(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1C013EF00()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C013EFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[65] = v3;
  v4[63] = a2;
  v4[64] = a3;
  v4[62] = a1;
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  v4[66] = swift_task_alloc();
  uint64_t v5 = sub_1C1515FDC();
  v4[67] = v5;
  v4[68] = *(void *)(v5 - 8);
  v4[69] = swift_task_alloc();
  v4[70] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatService.CacheFormatFile(0);
  v4[71] = v6;
  v4[72] = *(void *)(v6 - 8);
  v4[73] = swift_task_alloc();
  uint64_t v7 = sub_1C151E24C();
  v4[74] = v7;
  v4[75] = *(void *)(v7 - 8);
  v4[76] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013F1B0, 0, 0);
}

uint64_t sub_1C013F1B0()
{
  uint64_t v1 = *(uint64_t **)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 592);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t *v1 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCBD8], v3);
  char v4 = sub_1C151E26C();
  uint64_t v5 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v6 = *(void *)(v0 + 576);
  uint64_t v7 = *(void *)(v0 + 568);
  uint64_t v8 = *(void *)(v0 + 560);
  uint64_t v9 = *(void *)(v0 + 544);
  uint64_t v10 = *(void *)(v0 + 536);
  uint64_t v11 = *(void *)(v0 + 528);
  id v12 = objc_msgSend(*(id *)(v0 + 504), sel_remoteURL);
  sub_1C1515F1C();

  sub_1C1518DCC();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(void *)(v0 + 616) = v13;
  *(void *)(v0 + 624) = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v8, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v7) == 1)
  {
    uint64_t v14 = sub_1C01530F8(*(void *)(v0 + 528), (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
LABEL_8:
    if (sub_1C01065B8(v14, v15)) {
      objc_msgSend(*(id *)(*(void *)(v0 + 520) + 136), sel_d_resetAssetHandle_, *(void *)(v0 + 504));
    }
    uint64_t v27 = *(void **)(v0 + 504);
    uint64_t v26 = *(void *)(v0 + 512);
    uint64_t v28 = *(void *)(v26 + 40);
    char v29 = *(unsigned char *)(v26 + 48);
    uint64_t v30 = swift_task_alloc();
    *(void *)(v30 + 16) = v27;
    *(void *)(v30 + 24) = v28;
    *(unsigned char *)(v30 + 32) = v29;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901F8);
    sub_1C151932C();
    swift_task_dealloc();
    *(void *)(swift_allocObject() + 16) = v27;
    id v31 = v27;
    uint64_t v32 = (void *)sub_1C1518E7C();
    *(void *)(v0 + 632) = sub_1C1518FFC();

    swift_release();
    swift_release();
    char v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 640) = v33;
    *char v33 = v0;
    v33[1] = sub_1C013F630;
    uint64_t v5 = v0 + 480;
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v16 = *(void *)(v0 + 584);
  sub_1C01054A0(*(void *)(v0 + 528), v16, type metadata accessor for FormatService.CacheFormatFile);
  sub_1C0EB8150((_OWORD *)(v0 + 448));
  sub_1BFDDF774(v16, type metadata accessor for FormatService.CacheFormatFile);
  uint64_t v14 = swift_dynamicCast();
  if ((v14 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v17 = *(_OWORD **)(v0 + 496);
  nullsub_1(v0 + 16);
  sub_1C0153CA0(v0 + 16, v0 + 304, &qword_1EA1971B0, (uint64_t)&type metadata for FormatGroup);
  sub_1C0153CA0(v0 + 304, v0 + 160, &qword_1EA1971B0, (uint64_t)&type metadata for FormatGroup);
  *uint64_t v17 = *(_OWORD *)(v0 + 160);
  long long v18 = *(_OWORD *)(v0 + 224);
  long long v20 = *(_OWORD *)(v0 + 176);
  long long v19 = *(_OWORD *)(v0 + 192);
  _OWORD v17[3] = *(_OWORD *)(v0 + 208);
  v17[4] = v18;
  v17[1] = v20;
  void v17[2] = v19;
  long long v21 = *(_OWORD *)(v0 + 288);
  long long v23 = *(_OWORD *)(v0 + 240);
  long long v22 = *(_OWORD *)(v0 + 256);
  _OWORD v17[7] = *(_OWORD *)(v0 + 272);
  _OWORD v17[8] = v21;
  v17[5] = v23;
  v17[6] = v22;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1C013F630()
{
  *(void *)(*(void *)v1 + 648) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C013F888;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C013F74C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C013F74C()
{
  uint64_t v1 = *(void *)(v0 + 552);
  uint64_t v3 = *(void **)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 512);
  unint64_t v5 = *(void *)(v0 + 488);
  uint64_t v4 = *(_OWORD **)(v0 + 496);
  uint64_t v6 = *(void *)(v0 + 480);
  id v7 = objc_msgSend(v3, sel_remoteURL);
  sub_1C1515F1C();

  sub_1C014473C(v6, v5, v1, (uint64_t)v3, v2, v4);
  (*(void (**)(void, void))(v0 + 616))(*(void *)(v0 + 552), *(void *)(v0 + 536));
  sub_1BFE95664(v6, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1C013F888()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C013F934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[58] = a3;
  v4[59] = v3;
  v4[56] = a1;
  v4[57] = a2;
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  v4[60] = swift_task_alloc();
  uint64_t v5 = sub_1C1515FDC();
  v4[61] = v5;
  v4[62] = *(void *)(v5 - 8);
  v4[63] = swift_task_alloc();
  v4[64] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatService.CacheFormatFile(0);
  v4[65] = v6;
  v4[66] = *(void *)(v6 - 8);
  v4[67] = swift_task_alloc();
  uint64_t v7 = sub_1C151E24C();
  v4[68] = v7;
  v4[69] = *(void *)(v7 - 8);
  v4[70] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C013FB1C, 0, 0);
}

uint64_t sub_1C013FB1C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 560);
  uint64_t v2 = *(void *)(v0 + 552);
  uint64_t v3 = *(void *)(v0 + 544);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t *v1 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCBD8], v3);
  char v4 = sub_1C151E26C();
  uint64_t v5 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v6 = *(void *)(v0 + 528);
  uint64_t v7 = *(void *)(v0 + 520);
  uint64_t v8 = *(void *)(v0 + 512);
  uint64_t v9 = *(void *)(v0 + 488);
  uint64_t v10 = *(void *)(v0 + 496);
  uint64_t v11 = *(void *)(v0 + 480);
  id v12 = objc_msgSend(*(id *)(v0 + 456), sel_remoteURL);
  sub_1C1515F1C();

  sub_1C1518DCC();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v0 + 568) = v13;
  *(void *)(v0 + 576) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v8, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v7) == 1)
  {
    uint64_t v14 = sub_1C01530F8(*(void *)(v0 + 480), (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
LABEL_8:
    if (sub_1C01065B8(v14, v15)) {
      objc_msgSend(*(id *)(*(void *)(v0 + 472) + 136), sel_d_resetAssetHandle_, *(void *)(v0 + 456));
    }
    uint64_t v27 = *(void **)(v0 + 456);
    uint64_t v26 = *(void *)(v0 + 464);
    uint64_t v28 = *(void *)(v26 + 40);
    char v29 = *(unsigned char *)(v26 + 48);
    uint64_t v30 = swift_task_alloc();
    *(void *)(v30 + 16) = v27;
    *(void *)(v30 + 24) = v28;
    *(unsigned char *)(v30 + 32) = v29;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901F8);
    sub_1C151932C();
    swift_task_dealloc();
    *(void *)(swift_allocObject() + 16) = v27;
    id v31 = v27;
    uint64_t v32 = (void *)sub_1C1518E7C();
    *(void *)(v0 + 584) = sub_1C1518FFC();

    swift_release();
    swift_release();
    char v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 592) = v33;
    *char v33 = v0;
    v33[1] = sub_1C013FF90;
    uint64_t v5 = v0 + 432;
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v16 = *(void *)(v0 + 536);
  sub_1C01054A0(*(void *)(v0 + 480), v16, type metadata accessor for FormatService.CacheFormatFile);
  sub_1C0EB8150((_OWORD *)(v0 + 400));
  sub_1BFDDF774(v16, type metadata accessor for FormatService.CacheFormatFile);
  uint64_t v14 = swift_dynamicCast();
  if ((v14 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v17 = *(_OWORD **)(v0 + 448);
  nullsub_1(v0 + 16);
  sub_1C0153CA0(v0 + 16, v0 + 272, &qword_1EA197170, (uint64_t)&type metadata for FormatItem);
  sub_1C0153CA0(v0 + 272, v0 + 144, &qword_1EA197170, (uint64_t)&type metadata for FormatItem);
  long long v18 = *(_OWORD *)(v0 + 192);
  long long v20 = *(_OWORD *)(v0 + 144);
  long long v19 = *(_OWORD *)(v0 + 160);
  void v17[2] = *(_OWORD *)(v0 + 176);
  _OWORD v17[3] = v18;
  *uint64_t v17 = v20;
  v17[1] = v19;
  long long v22 = *(_OWORD *)(v0 + 224);
  long long v21 = *(_OWORD *)(v0 + 240);
  long long v23 = *(_OWORD *)(v0 + 208);
  *(_OWORD *)((char *)v17 + 105) = *(_OWORD *)(v0 + 249);
  v17[5] = v22;
  v17[6] = v21;
  v17[4] = v23;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1C013FF90()
{
  *(void *)(*(void *)v1 + 600) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C01401E0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C01400AC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C01400AC()
{
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v4 = *(_OWORD **)(v0 + 448);
  uint64_t v3 = *(void **)(v0 + 456);
  uint64_t v5 = *(void *)(v0 + 432);
  unint64_t v6 = *(void *)(v0 + 440);
  id v7 = objc_msgSend(v3, sel_remoteURL);
  sub_1C1515F1C();

  sub_1C0144F2C(v5, v6, v1, v3, v2, v4);
  (*(void (**)(void, void))(v0 + 568))(*(void *)(v0 + 504), *(void *)(v0 + 488));
  sub_1BFE95664(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1C01401E0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0140288(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  v3[12] = swift_task_alloc();
  uint64_t v4 = sub_1C1515FDC();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FormatService.CacheFormatFile(0);
  v3[17] = v5;
  v3[18] = *(void *)(v5 - 8);
  v3[19] = swift_task_alloc();
  uint64_t v6 = sub_1C151E24C();
  v3[20] = v6;
  v3[21] = *(void *)(v6 - 8);
  v3[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0140470, 0, 0);
}

uint64_t sub_1C0140470()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(uint64_t **)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t *v1 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCBD8], v3);
  char v4 = sub_1C151E26C();
  uint64_t v5 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v9 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  uint64_t v11 = *(void *)(v0 + 96);
  id v12 = objc_msgSend(*(id *)(v0 + 72), sel_remoteURL);
  sub_1C1515F1C();

  sub_1C1518DCC();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v0 + 184) = v13;
  *(void *)(v0 + 192) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v8, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
  {
    uint64_t v14 = sub_1C01530F8(*(void *)(v0 + 96), (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
LABEL_8:
    if (sub_1C01065B8(v14, v15)) {
      objc_msgSend(*(id *)(*(void *)(v0 + 88) + 136), sel_d_resetAssetHandle_, *(void *)(v0 + 72));
    }
    long long v21 = *(void **)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 80);
    uint64_t v22 = *(void *)(v20 + 40);
    char v23 = *(unsigned char *)(v20 + 48);
    uint64_t v24 = swift_task_alloc();
    *(void *)(v24 + 16) = v21;
    *(void *)(v24 + 24) = v22;
    *(unsigned char *)(v24 + 32) = v23;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901F8);
    sub_1C151932C();
    swift_task_dealloc();
    *(void *)(swift_allocObject() + 16) = v21;
    id v25 = v21;
    uint64_t v26 = (void *)sub_1C1518E7C();
    *(void *)(v0 + 200) = sub_1C1518FFC();

    swift_release();
    swift_release();
    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_1C0140870;
    uint64_t v5 = v0 + 48;
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v16 = *(void *)(v0 + 152);
  sub_1C01054A0(*(void *)(v0 + 96), v16, type metadata accessor for FormatService.CacheFormatFile);
  sub_1C0EB8150((_OWORD *)(v0 + 16));
  sub_1BFDDF774(v16, type metadata accessor for FormatService.CacheFormatFile);
  type metadata accessor for FormatSnippet();
  uint64_t v14 = swift_dynamicCast();
  if ((v14 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v17 = *(void *)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v18(v17);
}

uint64_t sub_1C0140870()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0140AC0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C014098C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C014098C()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void **)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48);
  unint64_t v6 = *(void *)(v0 + 56);
  id v7 = objc_msgSend(v4, sel_remoteURL);
  sub_1C1515F1C();

  uint64_t v8 = sub_1C01456F0(v5, v6, v2, v4, v3);
  (*(void (**)(void, void))(v0 + 184))(*(void *)(v0 + 120), *(void *)(v0 + 104));
  sub_1BFE95664(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  if (!v1) {
    uint64_t v9 = v8;
  }
  return v10(v9);
}

uint64_t sub_1C0140AC0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0140B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[19] = a3;
  v4[20] = v3;
  v4[17] = a1;
  v4[18] = a2;
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  v4[21] = swift_task_alloc();
  uint64_t v5 = sub_1C1515FDC();
  v4[22] = v5;
  v4[23] = *(void *)(v5 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatService.CacheFormatFile(0);
  v4[26] = v6;
  v4[27] = *(void *)(v6 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v7 = sub_1C151E24C();
  v4[29] = v7;
  v4[30] = *(void *)(v7 - 8);
  v4[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0140D50, 0, 0);
}

uint64_t sub_1C0140D50()
{
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v1 = *(uint64_t **)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 232);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t *v1 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCBD8], v3);
  char v4 = sub_1C151E26C();
  uint64_t v5 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v7 = *(void *)(v0 + 216);
  uint64_t v8 = *(void *)(v0 + 200);
  uint64_t v9 = *(void *)(v0 + 176);
  uint64_t v10 = *(void *)(v0 + 184);
  uint64_t v11 = *(void *)(v0 + 168);
  id v12 = objc_msgSend(*(id *)(v0 + 144), sel_remoteURL);
  sub_1C1515F1C();

  sub_1C1518DCC();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v0 + 256) = v13;
  *(void *)(v0 + 264) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v8, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
  {
    uint64_t v14 = sub_1C01530F8(*(void *)(v0 + 168), (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
LABEL_8:
    if (sub_1C01065B8(v14, v15)) {
      objc_msgSend(*(id *)(*(void *)(v0 + 160) + 136), sel_d_resetAssetHandle_, *(void *)(v0 + 144));
    }
    uint64_t v26 = *(void **)(v0 + 144);
    uint64_t v25 = *(void *)(v0 + 152);
    uint64_t v27 = *(void *)(v25 + 40);
    char v28 = *(unsigned char *)(v25 + 48);
    uint64_t v29 = swift_task_alloc();
    *(void *)(v29 + 16) = v26;
    *(void *)(v29 + 24) = v27;
    *(unsigned char *)(v29 + 32) = v28;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901F8);
    sub_1C151932C();
    swift_task_dealloc();
    *(void *)(swift_allocObject() + 16) = v26;
    id v30 = v26;
    id v31 = (void *)sub_1C1518E7C();
    *(void *)(v0 + 272) = sub_1C1518FFC();

    swift_release();
    swift_release();
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_1C0141168;
    uint64_t v5 = v0 + 120;
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v16 = *(void *)(v0 + 224);
  sub_1C01054A0(*(void *)(v0 + 168), v16, type metadata accessor for FormatService.CacheFormatFile);
  sub_1C0EB8150((_OWORD *)(v0 + 88));
  sub_1BFDDF774(v16, type metadata accessor for FormatService.CacheFormatFile);
  uint64_t v14 = swift_dynamicCast();
  if ((v14 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v17 = *(void *)(v0 + 136);
  uint64_t v18 = *(void *)(v0 + 24);
  uint64_t v19 = *(void *)(v0 + 80);
  long long v20 = *(_OWORD *)(v0 + 32);
  long long v21 = *(_OWORD *)(v0 + 48);
  long long v22 = *(_OWORD *)(v0 + 64);
  *(void *)uint64_t v17 = *(void *)(v0 + 16);
  *(void *)(v17 + 8) = v18;
  *(_OWORD *)(v17 + 16) = v20;
  *(_OWORD *)(v17 + 32) = v21;
  *(_OWORD *)(v17 + 48) = v22;
  *(void *)(v17 + 64) = v19;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_1C0141168()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C01413B4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C0141284;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0141284()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void **)(v0 + 136);
  uint64_t v3 = *(void **)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 120);
  unint64_t v6 = *(void *)(v0 + 128);
  id v7 = objc_msgSend(v3, sel_remoteURL);
  sub_1C1515F1C();

  sub_1C0145E28(v5, v6, v1, v3, v2, v4);
  (*(void (**)(void, void))(v0 + 256))(*(void *)(v0 + 192), *(void *)(v0 + 176));
  sub_1BFE95664(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1C01413B4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C014145C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  v4[26] = swift_task_alloc();
  uint64_t v5 = sub_1C1515FDC();
  v4[27] = v5;
  v4[28] = *(void *)(v5 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatService.CacheFormatFile(0);
  v4[31] = v6;
  v4[32] = *(void *)(v6 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v7 = sub_1C151E24C();
  v4[34] = v7;
  v4[35] = *(void *)(v7 - 8);
  v4[36] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0141644, 0, 0);
}