unint64_t sub_1C08F5688()
{
  unint64_t result;

  result = qword_1EA1A0AF0;
  if (!qword_1EA1A0AF0)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0AF0);
  }
  return result;
}

uint64_t sub_1C08F56DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F56F4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F570C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08F5724()
{
  unint64_t result = qword_1EA1A0B00;
  if (!qword_1EA1A0B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B00);
  }
  return result;
}

void sub_1C08F5778()
{
  if (!qword_1EA1A0B08)
  {
    sub_1C089D2DC();
    sub_1C085F050(&qword_1EA19DE78, (void (*)(uint64_t))sub_1C089D2DC);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0B08);
    }
  }
}

unint64_t sub_1C08F580C()
{
  unint64_t result = qword_1EA1A0B10;
  if (!qword_1EA1A0B10)
  {
    sub_1C0908CDC(255, &qword_1EA1A0AF8, (void (*)(void))sub_1C08F5724, (void (*)(void))sub_1C08F5688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B10);
  }
  return result;
}

uint64_t sub_1C08F589C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08F58A8()
{
  unint64_t result = qword_1EA1A0B18;
  if (!qword_1EA1A0B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B18);
  }
  return result;
}

unint64_t sub_1C08F58FC()
{
  unint64_t result = qword_1EA1A0B20;
  if (!qword_1EA1A0B20)
  {
    sub_1BFEFF3E8(255, &qword_1EA19DE38, (uint64_t (*)(void))sub_1C089C014, (uint64_t)&type metadata for FormatMicaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B20);
  }
  return result;
}

unint64_t sub_1C08F598C()
{
  unint64_t result = qword_1EA1A0B28;
  if (!qword_1EA1A0B28)
  {
    sub_1BFEFF3E8(255, &qword_1EA19DE20, (uint64_t (*)(void))sub_1C089C014, (uint64_t)&type metadata for FormatMicaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B28);
  }
  return result;
}

uint64_t sub_1C08F5A1C()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F5A40()
{
  unint64_t result = qword_1EA1A0B30;
  if (!qword_1EA1A0B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B30);
  }
  return result;
}

uint64_t sub_1C08F5A94()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5AAC()
{
  return sub_1C09090D8((uint64_t)sub_1C07F6B14, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08F5AD8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5AF0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5B08()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C089BD98, &qword_1EA19DE00, (void (*)(uint64_t))sub_1C089BD98, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F5B6C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08F5B84()
{
  unint64_t result = qword_1EB85EAC8;
  if (!qword_1EB85EAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EAC8);
  }
  return result;
}

uint64_t sub_1C08F5BD8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08F5BF0()
{
  unint64_t result = qword_1EB85EBE0;
  if (!qword_1EB85EBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EBE0);
  }
  return result;
}

uint64_t sub_1C08F5C44()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5C5C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5C74()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5C8C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5CA4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08F5CBC()
{
  if (!qword_1EA1A0B38)
  {
    sub_1C089BD98();
    sub_1C085F050(&qword_1EA19DE00, (void (*)(uint64_t))sub_1C089BD98);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0B38);
    }
  }
}

uint64_t sub_1C08F5D50()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5D68()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0822758);
}

uint64_t sub_1C08F5D80()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5D98()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5DB0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0898964, &qword_1EA19DDB0, (void (*)(uint64_t))sub_1C0898964, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F5E14()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5E2C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5E44()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5E5C()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F5E80()
{
  unint64_t result = qword_1EA1A0B40;
  if (!qword_1EA1A0B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B40);
  }
  return result;
}

unint64_t sub_1C08F5ED4()
{
  unint64_t result = qword_1EB8605B0;
  if (!qword_1EB8605B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8605B0);
  }
  return result;
}

uint64_t sub_1C08F5F28()
{
  return sub_1C08E51C4();
}

uint64_t sub_1C08F5F34()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5F4C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0819E14);
}

uint64_t sub_1C08F5F64()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5F7C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F5F94()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0898580, &qword_1EA19DD60, (void (*)(uint64_t))sub_1C0898580, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F5FF8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6010()
{
  return sub_1C09090D8((uint64_t)sub_1C07F5B84, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08F603C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C08F6098()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F60B0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F60C8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0898258, &qword_1EB86CCB8, (void (*)(uint64_t))sub_1C0898258, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F612C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6144()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08F615C()
{
  unint64_t result = qword_1EB85ED18;
  if (!qword_1EB85ED18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ED18);
  }
  return result;
}

uint64_t sub_1C08F61B0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F61C8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F61E0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081EA14);
}

uint64_t sub_1C08F61F8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6210()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6228()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0897F70, &qword_1EB892130, (void (*)(uint64_t))sub_1C0897F70, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F628C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F62A4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F62BC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081E888);
}

uint64_t sub_1C08F62D4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F62EC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0897BF8, &qword_1EB892120, (void (*)(uint64_t))sub_1C0897BF8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F6350()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6368()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6380()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6398()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F63BC()
{
  unint64_t result = qword_1EB862F88;
  if (!qword_1EB862F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862F88);
  }
  return result;
}

uint64_t sub_1C08F6410()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6428()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08207E8);
}

uint64_t sub_1C08F6440()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6458()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0897868, &qword_1EB892000, (void (*)(uint64_t))sub_1C0897868, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F64BC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F64D4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F64EC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6504()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F6510()
{
  unint64_t result = qword_1EB868FB8;
  if (!qword_1EB868FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868FB8);
  }
  return result;
}

unint64_t sub_1C08F6564()
{
  unint64_t result = qword_1EB85BD08;
  if (!qword_1EB85BD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BD08);
  }
  return result;
}

unint64_t sub_1C08F65B8()
{
  unint64_t result = qword_1EA1A0B48;
  if (!qword_1EA1A0B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B48);
  }
  return result;
}

uint64_t sub_1C08F660C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6624()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081FE8C);
}

unint64_t sub_1C08F663C()
{
  unint64_t result = qword_1EB85C230;
  if (!qword_1EB85C230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C230);
  }
  return result;
}

uint64_t sub_1C08F6690()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F66A8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F66C0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0897580, &qword_1EB892050, (void (*)(uint64_t))sub_1C0897580, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F6724()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F673C()
{
  return sub_1C09090D8((uint64_t)sub_1C07F1C70, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

unint64_t sub_1C08F6768()
{
  unint64_t result = qword_1EB86B170;
  if (!qword_1EB86B170)
  {
    sub_1BFE9DEBC(255, &qword_1EB890038, (uint64_t)&type metadata for FormatLayeredMediaFilter, MEMORY[0x1E4FBB320]);
    sub_1C007056C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B170);
  }
  return result;
}

uint64_t sub_1C08F67FC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6814()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F682C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0897244, &qword_1EB8922A0, (void (*)(uint64_t))sub_1C0897244, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F6890()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F68A8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F68C0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F68D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F68F0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6908()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6920()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6938()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6950()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6968()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6980()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6998()
{
  return sub_1C09090D8((uint64_t)sub_1C07F1AB4, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08F69C4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F69DC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F69F4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0897084, &qword_1EB892290, (void (*)(uint64_t))sub_1C0897084, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F6A58()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6A70()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6A88()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6AA0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6AB8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6AD0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6AE8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6B00()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6B18()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6B30()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08F6B48()
{
  if (!qword_1EB892FE0)
  {
    sub_1C0897084();
    sub_1C085F050(&qword_1EB892290, (void (*)(uint64_t))sub_1C0897084);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892FE0);
    }
  }
}

unint64_t sub_1C08F6BDC()
{
  unint64_t result = qword_1EB884F20;
  if (!qword_1EB884F20)
  {
    sub_1C0908CDC(255, &qword_1EB884F28, (void (*)(void))sub_1C006C7FC, (void (*)(void))sub_1C006C850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884F20);
  }
  return result;
}

uint64_t sub_1C08F6C6C()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F6C78()
{
  unint64_t result = qword_1EB8689F0;
  if (!qword_1EB8689F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8689F0);
  }
  return result;
}

unint64_t sub_1C08F6CCC()
{
  unint64_t result = qword_1EA1A0B50;
  if (!qword_1EA1A0B50)
  {
    sub_1BFEFF3E8(255, &qword_1EA19DD20, (uint64_t (*)(void))sub_1C0896950, (uint64_t)&type metadata for FormatLayeredMediaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B50);
  }
  return result;
}

uint64_t sub_1C08F6D5C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6D74()
{
  return sub_1C09090D8((uint64_t)sub_1C07F2C98, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08F6DA0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6DB8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6DD0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0896824, &qword_1EB891FF0, (void (*)(uint64_t))sub_1C0896824, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F6E34()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6E4C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6E64()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6E7C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6E94()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6EAC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6EC4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08F6EDC()
{
  unint64_t result = qword_1EB85C158;
  if (!qword_1EB85C158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C158);
  }
  return result;
}

void sub_1C08F6F30()
{
  if (!qword_1EB892E90)
  {
    sub_1C0896824();
    sub_1C085F050(&qword_1EB891FF0, (void (*)(uint64_t))sub_1C0896824);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892E90);
    }
  }
}

uint64_t sub_1C08F6FC4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F6FDC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081EB44);
}

uint64_t sub_1C08F6FF4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F700C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7024()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0896240, &qword_1EB892110, (void (*)(uint64_t))sub_1C0896240, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F7088()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F70A0()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F70C4()
{
  unint64_t result = qword_1EB86CB78;
  if (!qword_1EB86CB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CB78);
  }
  return result;
}

uint64_t sub_1C08F7118()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7130()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08261B4);
}

uint64_t sub_1C08F7148()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7160()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0895F98, &qword_1EB891BF0, (void (*)(uint64_t))sub_1C0895F98, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

void sub_1C08F71C4()
{
  if (!qword_1EB892C90)
  {
    sub_1C0895F98();
    sub_1C085F050(&qword_1EB891BF0, (void (*)(uint64_t))sub_1C0895F98);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892C90);
    }
  }
}

uint64_t sub_1C08F7258()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08F7264()
{
  unint64_t result = qword_1EB863100;
  if (!qword_1EB863100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863100);
  }
  return result;
}

uint64_t sub_1C08F72B8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F72D0()
{
  return sub_1C09090D8((uint64_t)sub_1C07F50B8, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

unint64_t sub_1C08F72FC()
{
  unint64_t result = qword_1EB86CA28;
  if (!qword_1EB86CA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CA28);
  }
  return result;
}

uint64_t sub_1C08F7350()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7368()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7380()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0895144, &qword_1EB891DB0, (void (*)(uint64_t))sub_1C0895144, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F73E4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08F73FC()
{
  unint64_t result = qword_1EB8613F8;
  if (!qword_1EB8613F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8613F8);
  }
  return result;
}

uint64_t sub_1C08F7450()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7468()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7480()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7498()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F74B0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F74C8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F74E0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F74F8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7510()
{
  return sub_1C09090D8((uint64_t)sub_1C07F4EF8, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08F753C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7554()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F756C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0894F84, &qword_1EB891DA0, (void (*)(uint64_t))sub_1C0894F84, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F75D0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F75E8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7600()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7618()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7630()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7648()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7660()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7678()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08F7690()
{
  if (!qword_1EB892D68)
  {
    sub_1C0894F84();
    sub_1C085F050(&qword_1EB891DA0, (void (*)(uint64_t))sub_1C0894F84);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892D68);
    }
  }
}

uint64_t sub_1C08F7724()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08F7730()
{
  unint64_t result = qword_1EB86DE00;
  if (!qword_1EB86DE00)
  {
    sub_1BFE9DEBC(255, &qword_1EB86DDF8, (uint64_t)&type metadata for FormatSourceItem, MEMORY[0x1E4FBB320]);
    sub_1C08F77C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86DE00);
  }
  return result;
}

unint64_t sub_1C08F77C4()
{
  unint64_t result = qword_1EB8914D0;
  if (!qword_1EB8914D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8914D0);
  }
  return result;
}

uint64_t sub_1C08F7818()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7830()
{
  return sub_1C09090D8((uint64_t)sub_1C07F6CFC, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08F785C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7874()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08947DC, &qword_1EB892540, (void (*)(uint64_t))sub_1C08947DC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F78D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F78F0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7908()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7920()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7938()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08F7950()
{
  unint64_t result = qword_1EB8914D8;
  if (!qword_1EB8914D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8914D8);
  }
  return result;
}

void sub_1C08F79A4()
{
  if (!qword_1EB893138)
  {
    sub_1C08947DC();
    sub_1C085F050(&qword_1EB892540, (void (*)(uint64_t))sub_1C08947DC);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893138);
    }
  }
}

unint64_t sub_1C08F7A38()
{
  unint64_t result = qword_1EB890B30;
  if (!qword_1EB890B30)
  {
    sub_1C0908CDC(255, &qword_1EB890B38, (void (*)(void))sub_1C08F7950, (void (*)(void))sub_1C08F77C4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890B30);
  }
  return result;
}

uint64_t sub_1C08F7AC8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7AE0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0820918);
}

uint64_t sub_1C08F7AF8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7B10()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0894228, &qword_1EB86CDA8, (void (*)(uint64_t))sub_1C0894228, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F7B74()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7B8C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7BA4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08F7BBC()
{
  if (!qword_1EB86DF58)
  {
    sub_1C0894228();
    sub_1C085F050(&qword_1EB86CDA8, (void (*)(uint64_t))sub_1C0894228);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DF58);
    }
  }
}

uint64_t sub_1C08F7C50()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7C68()
{
  return sub_1C09090D8((uint64_t)sub_1C07F7368, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08F7C94()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7CAC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7CC4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7CDC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0891478, &qword_1EB892450, (void (*)(uint64_t))sub_1C0891478, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F7D40()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7D58()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7D70()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7D88()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F7DA0()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F7DAC()
{
  unint64_t result = qword_1EA1A0B58;
  if (!qword_1EA1A0B58)
  {
    sub_1BFEFF3E8(255, &qword_1EA19DD08, (uint64_t (*)(void))sub_1C08912FC, (uint64_t)&type metadata for FormatIssueCoverContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B58);
  }
  return result;
}

uint64_t sub_1C08F7E3C()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F7E48()
{
  unint64_t result = qword_1EA1A0B60;
  if (!qword_1EA1A0B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B60);
  }
  return result;
}

uint64_t sub_1C08F7E9C()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C08F7EA8()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F7ECC()
{
  unint64_t result = qword_1EA1A0B68;
  if (!qword_1EA1A0B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B68);
  }
  return result;
}

uint64_t sub_1C08F7F20()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1C08F7F44()
{
  return sub_1C08E51C4();
}

uint64_t sub_1C08F7F50()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F7F74()
{
  unint64_t result = qword_1EA1A0B70;
  if (!qword_1EA1A0B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B70);
  }
  return result;
}

unint64_t sub_1C08F7FC8()
{
  unint64_t result = qword_1EB861378;
  if (!qword_1EB861378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB861378);
  }
  return result;
}

uint64_t sub_1C08F801C()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F8028()
{
  unint64_t result = qword_1EA1A0B78;
  if (!qword_1EA1A0B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B78);
  }
  return result;
}

uint64_t sub_1C08F807C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08F8088()
{
  unint64_t result = qword_1EB866480;
  if (!qword_1EB866480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866480);
  }
  return result;
}

uint64_t sub_1C08F80DC()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F8100()
{
  unint64_t result = qword_1EA1A0B80;
  if (!qword_1EA1A0B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B80);
  }
  return result;
}

uint64_t sub_1C08F8154()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F8178()
{
  unint64_t result = qword_1EA1A0B88;
  if (!qword_1EA1A0B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B88);
  }
  return result;
}

uint64_t sub_1C08F81CC()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C08F81D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F81F0()
{
  return sub_1C09090D8((uint64_t)sub_1C07F3EDC, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

unint64_t sub_1C08F821C()
{
  unint64_t result = qword_1EB867038;
  if (!qword_1EB867038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867038);
  }
  return result;
}

uint64_t sub_1C08F8270()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8288()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F82A0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0890E60, &qword_1EB891EB0, (void (*)(uint64_t))sub_1C0890E60, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F8304()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F831C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8334()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F834C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8364()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F837C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8394()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F83AC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F83C4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F83DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F83F4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F840C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8424()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F843C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8454()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F846C()
{
  return sub_1C09090D8((uint64_t)sub_1C07F3C78, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08F8498()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F84B0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0890C18, &qword_1EB891EA0, (void (*)(uint64_t))sub_1C0890C18, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F8514()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F852C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8544()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F855C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8574()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F858C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F85A4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F85BC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F85D4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F85EC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8604()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F861C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8634()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F864C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8664()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08F867C()
{
  if (!qword_1EB892DE8)
  {
    sub_1C0890C18();
    sub_1C085F050(&qword_1EB891EA0, (void (*)(uint64_t))sub_1C0890C18);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892DE8);
    }
  }
}

unint64_t sub_1C08F8710()
{
  unint64_t result = qword_1EB884E88;
  if (!qword_1EB884E88)
  {
    sub_1C0908CDC(255, &qword_1EB884E90, (void (*)(void))sub_1C0077E90, (void (*)(void))sub_1C0077EE4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884E88);
  }
  return result;
}

unint64_t sub_1C08F87A0()
{
  unint64_t result = qword_1EB86B2A8;
  if (!qword_1EB86B2A8)
  {
    sub_1BFE9DEBC(255, &qword_1EB86B2A0, (uint64_t)&type metadata for FormatImageNodeRequestAdjustment, MEMORY[0x1E4FBB320]);
    sub_1C0068DB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B2A8);
  }
  return result;
}

uint64_t sub_1C08F8834()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F884C()
{
  return sub_1C0870698((uint64_t (*)(void, void, void, void, void))sub_1C081D8EC);
}

uint64_t sub_1C08F8864()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F887C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08900A8, &qword_1EB892210, (void (*)(uint64_t))sub_1C08900A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F88E0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F88F8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8910()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088FD30, &qword_1EB892200, (void (*)(uint64_t))sub_1C088FD30, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F8974()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08F8980()
{
  unint64_t result = qword_1EB8697D8;
  if (!qword_1EB8697D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8697D8);
  }
  return result;
}

uint64_t sub_1C08F89D4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F89EC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0820B04);
}

unint64_t sub_1C08F8A04()
{
  unint64_t result = qword_1EB867EA8;
  if (!qword_1EB867EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867EA8);
  }
  return result;
}

uint64_t sub_1C08F8A58()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8A70()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8A88()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088FA48, &qword_1EB891FE0, (void (*)(uint64_t))sub_1C088FA48, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F8AEC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08F8B04()
{
  unint64_t result = qword_1EB867EB0;
  if (!qword_1EB867EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867EB0);
  }
  return result;
}

uint64_t sub_1C08F8B58()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08F8B64()
{
  unint64_t result = qword_1EB860158;
  if (!qword_1EB860158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860158);
  }
  return result;
}

unint64_t sub_1C08F8BB8()
{
  unint64_t result = qword_1EB8668E0;
  if (!qword_1EB8668E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8668E0);
  }
  return result;
}

unint64_t sub_1C08F8C0C()
{
  unint64_t result = qword_1EB867490;
  if (!qword_1EB867490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867490);
  }
  return result;
}

unint64_t sub_1C08F8C60()
{
  unint64_t result = qword_1EA1A0B90;
  if (!qword_1EA1A0B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B90);
  }
  return result;
}

unint64_t sub_1C08F8CB4()
{
  unint64_t result = qword_1EA1AF880;
  if (!qword_1EA1AF880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AF880);
  }
  return result;
}

uint64_t sub_1C08F8D08()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8D20()
{
  return sub_1C09090D8((uint64_t)sub_1C07F6320, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08F8D4C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8D64()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8D7C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088F78C, &qword_1EB8925D0, (void (*)(uint64_t))sub_1C088F78C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F8DE0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8DF8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8E10()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8E28()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8E40()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8E58()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8E70()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08F8E88()
{
  if (!qword_1EB893180)
  {
    sub_1C088F78C();
    sub_1C085F050(&qword_1EB8925D0, (void (*)(uint64_t))sub_1C088F78C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893180);
    }
  }
}

uint64_t sub_1C08F8F1C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8F34()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08210C8);
}

uint64_t sub_1C08F8F4C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8F64()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8F7C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088EFDC, &qword_1EB86CD68, (void (*)(uint64_t))sub_1C088EFDC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F8FE0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F8FF8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9010()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9028()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F904C()
{
  unint64_t result = qword_1EA1A0B98;
  if (!qword_1EA1A0B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0B98);
  }
  return result;
}

unint64_t sub_1C08F90A0()
{
  unint64_t result = qword_1EA1A0BA0;
  if (!qword_1EA1A0BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BA0);
  }
  return result;
}

uint64_t sub_1C08F90F4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F910C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081DB18);
}

uint64_t sub_1C08F9124()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F913C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9154()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088EBF8, &qword_1EA19DCA0, (void (*)(uint64_t))sub_1C088EBF8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F91B8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F91D0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F91E8()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081D9E0);
}

uint64_t sub_1C08F9200()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9218()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9230()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088E910, &qword_1EB8921F0, (void (*)(uint64_t))sub_1C088E910, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F9294()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F92AC()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F92B8()
{
  unint64_t result = qword_1EA1A0BA8;
  if (!qword_1EA1A0BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BA8);
  }
  return result;
}

uint64_t sub_1C08F930C()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F9330()
{
  unint64_t result = qword_1EB864958;
  if (!qword_1EB864958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864958);
  }
  return result;
}

uint64_t sub_1C08F9384()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F9390()
{
  unint64_t result = qword_1EB864948;
  if (!qword_1EB864948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864948);
  }
  return result;
}

uint64_t sub_1C08F93E4()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08F93F0()
{
  unint64_t result = qword_1EB866DB0;
  if (!qword_1EB866DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866DB0);
  }
  return result;
}

uint64_t sub_1C08F9444()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08F9450()
{
  unint64_t result = qword_1EB864970;
  if (!qword_1EB864970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864970);
  }
  return result;
}

uint64_t sub_1C08F94A4()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F94B0()
{
  unint64_t result = qword_1EB86FC08;
  if (!qword_1EB86FC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FC08);
  }
  return result;
}

uint64_t sub_1C08F9504()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F9510()
{
  unint64_t result = qword_1EA1A0BB0;
  if (!qword_1EA1A0BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BB0);
  }
  return result;
}

uint64_t sub_1C08F9564()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F9588()
{
  unint64_t result = qword_1EB866DA0;
  if (!qword_1EB866DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866DA0);
  }
  return result;
}

uint64_t sub_1C08F95DC()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F9600()
{
  unint64_t result = qword_1EB866DA8;
  if (!qword_1EB866DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866DA8);
  }
  return result;
}

uint64_t sub_1C08F9654()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C08F9660()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08F966C()
{
  unint64_t result = qword_1EB862EF8;
  if (!qword_1EB862EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862EF8);
  }
  return result;
}

uint64_t sub_1C08F96C0()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F96CC()
{
  unint64_t result = qword_1EB866DF0;
  if (!qword_1EB866DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866DF0);
  }
  return result;
}

uint64_t sub_1C08F9720()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C08F972C()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C08F9738()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08F975C()
{
  unint64_t result = qword_1EA1A0BB8;
  if (!qword_1EA1A0BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BB8);
  }
  return result;
}

uint64_t sub_1C08F97B0()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08F97BC()
{
  unint64_t result = qword_1EB866E20;
  if (!qword_1EB866E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866E20);
  }
  return result;
}

uint64_t sub_1C08F9810()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9828()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9840()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088E420, &qword_1EB891CE0, (void (*)(uint64_t))sub_1C088E420, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F98A4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F98BC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F98D4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08F98EC()
{
  if (!qword_1EB892D08)
  {
    sub_1C088E420();
    sub_1C085F050(&qword_1EB891CE0, (void (*)(uint64_t))sub_1C088E420);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892D08);
    }
  }
}

uint64_t sub_1C08F9980()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9998()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F99B0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F99C8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088D5D4, &qword_1EB892530, (void (*)(uint64_t))sub_1C088D5D4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

void sub_1C08F9A2C()
{
  if (!qword_1EB893130)
  {
    sub_1C088D5D4();
    sub_1C085F050(&qword_1EB892530, (void (*)(uint64_t))sub_1C088D5D4);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893130);
    }
  }
}

uint64_t sub_1C08F9AC0()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08F9ACC()
{
  unint64_t result = qword_1EB867028;
  if (!qword_1EB867028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867028);
  }
  return result;
}

unint64_t sub_1C08F9B20()
{
  unint64_t result = qword_1EB86B080;
  if (!qword_1EB86B080)
  {
    sub_1BFE9DEBC(255, &qword_1EB88FFA8, (uint64_t)&type metadata for FormatBundle, MEMORY[0x1E4FBB320]);
    sub_1C08F9BB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B080);
  }
  return result;
}

unint64_t sub_1C08F9BB4()
{
  unint64_t result = qword_1EB8657B0;
  if (!qword_1EB8657B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8657B0);
  }
  return result;
}

unint64_t sub_1C08F9C08()
{
  unint64_t result = qword_1EA1A0BC0;
  if (!qword_1EA1A0BC0)
  {
    sub_1BFE9DEBC(255, &qword_1EA19DC48, (uint64_t)&type metadata for FormatPlatform, MEMORY[0x1E4FBB320]);
    sub_1C08F9C9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BC0);
  }
  return result;
}

unint64_t sub_1C08F9C9C()
{
  unint64_t result = qword_1EA1A0BC8;
  if (!qword_1EA1A0BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BC8);
  }
  return result;
}

unint64_t sub_1C08F9CF0()
{
  unint64_t result = qword_1EB86B1E0;
  if (!qword_1EB86B1E0)
  {
    sub_1BFE9DEBC(255, &qword_1EB890068, (uint64_t)&type metadata for FormatGroupColumnSystemKind, MEMORY[0x1E4FBB320]);
    sub_1C08F9D84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B1E0);
  }
  return result;
}

unint64_t sub_1C08F9D84()
{
  unint64_t result = qword_1EB88C9B0;
  if (!qword_1EB88C9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C9B0);
  }
  return result;
}

unint64_t sub_1C08F9DD8()
{
  unint64_t result = qword_1EB86C458;
  if (!qword_1EB86C458)
  {
    sub_1BFEFF3E8(255, &qword_1EB86C468, (uint64_t (*)(void))sub_1C086DF2C, (uint64_t)&type metadata for FormatSelector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C458);
  }
  return result;
}

uint64_t sub_1C08F9E68()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9E80()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081EE88);
}

uint64_t sub_1C08F9E98()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9EB0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9EC8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088C2EC, &qword_1EB892100, (void (*)(uint64_t))sub_1C088C2EC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08F9F2C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9F44()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9F5C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C08F9FB8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9FD0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08F9FE8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA000()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA018()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081ECB4);
}

uint64_t sub_1C08FA030()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA048()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA060()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088C12C, &qword_1EB8920F0, (void (*)(uint64_t))sub_1C088C12C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FA0C4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA0DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA0F4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA10C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA124()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08FA13C()
{
  if (!qword_1EB892F10)
  {
    sub_1C088C12C();
    sub_1C085F050(&qword_1EB8920F0, (void (*)(uint64_t))sub_1C088C12C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892F10);
    }
  }
}

unint64_t sub_1C08FA1D0()
{
  unint64_t result = qword_1EB884EF0;
  if (!qword_1EB884EF0)
  {
    sub_1C0908CDC(255, &qword_1EB884EF8, (void (*)(void))sub_1C0070BA8, (void (*)(void))sub_1C0070BFC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884EF0);
  }
  return result;
}

uint64_t sub_1C08FA260()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA278()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08237C8);
}

uint64_t sub_1C08FA290()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA2A8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088BCBC, &qword_1EB891D90, (void (*)(uint64_t))sub_1C088BCBC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FA30C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA324()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08FA33C()
{
  if (!qword_1EB892D60)
  {
    sub_1C088BCBC();
    sub_1C085F050(&qword_1EB891D90, (void (*)(uint64_t))sub_1C088BCBC);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892D60);
    }
  }
}

uint64_t sub_1C08FA3D0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA3E8()
{
  return sub_1C09090D8((uint64_t)sub_1C07F651C, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08FA414()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA42C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA444()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA45C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA474()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA48C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FA4A4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088B4F0, &qword_1EB8925C0, (void (*)(uint64_t))sub_1C088B4F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

void sub_1C08FA508()
{
  if (!qword_1EB893178)
  {
    sub_1C088B4F0();
    sub_1C085F050(&qword_1EB8925C0, (void (*)(uint64_t))sub_1C088B4F0);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893178);
    }
  }
}

uint64_t sub_1C08FA59C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FA5A8()
{
  unint64_t result = qword_1EB8617C0;
  if (!qword_1EB8617C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8617C0);
  }
  return result;
}

unint64_t sub_1C08FA5FC()
{
  unint64_t result = qword_1EB866960;
  if (!qword_1EB866960)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&qword_1EB888F20, (uint64_t (*)(void))sub_1C01D3D48, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866960);
  }
  return result;
}

uint64_t sub_1C08FA68C()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08FA6B0()
{
  unint64_t result = qword_1EA1A0BD0;
  if (!qword_1EA1A0BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BD0);
  }
  return result;
}

unint64_t sub_1C08FA704()
{
  unint64_t result = qword_1EA1A0BD8;
  if (!qword_1EA1A0BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BD8);
  }
  return result;
}

uint64_t sub_1C08FA758()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FA764()
{
  unint64_t result = qword_1EB86C728;
  if (!qword_1EB86C728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C728);
  }
  return result;
}

uint64_t sub_1C08FA7B8()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C08FA7DC()
{
  unint64_t result = qword_1EA1A0BE0;
  if (!qword_1EA1A0BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BE0);
  }
  return result;
}

uint64_t sub_1C08FA830()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FA83C()
{
  unint64_t result = qword_1EB866458;
  if (!qword_1EB866458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866458);
  }
  return result;
}

uint64_t sub_1C08FA890()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FA89C()
{
  unint64_t result = qword_1EB862E40;
  if (!qword_1EB862E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E40);
  }
  return result;
}

unint64_t sub_1C08FA8F0()
{
  unint64_t result = qword_1EB862F00;
  if (!qword_1EB862F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862F00);
  }
  return result;
}

unint64_t sub_1C08FA944()
{
  unint64_t result = qword_1EA1A0BE8;
  if (!qword_1EA1A0BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BE8);
  }
  return result;
}

uint64_t sub_1C08FA998()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FA9A4()
{
  unint64_t result = qword_1EA1A0BF0;
  if (!qword_1EA1A0BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BF0);
  }
  return result;
}

unint64_t sub_1C08FA9F8()
{
  unint64_t result = qword_1EA1A0BF8;
  if (!qword_1EA1A0BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0BF8);
  }
  return result;
}

unint64_t sub_1C08FAA4C()
{
  unint64_t result = qword_1EA1A0C00;
  if (!qword_1EA1A0C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C00);
  }
  return result;
}

uint64_t sub_1C08FAAA0()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FAAAC()
{
  unint64_t result = qword_1EB866438;
  if (!qword_1EB866438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866438);
  }
  return result;
}

unint64_t sub_1C08FAB00()
{
  unint64_t result = qword_1EB8617C8;
  if (!qword_1EB8617C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8617C8);
  }
  return result;
}

unint64_t sub_1C08FAB54()
{
  unint64_t result = qword_1EA1A6A10;
  if (!qword_1EA1A6A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6A10);
  }
  return result;
}

uint64_t sub_1C08FABA8()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FABB4()
{
  unint64_t result = qword_1EB860188;
  if (!qword_1EB860188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860188);
  }
  return result;
}

unint64_t sub_1C08FAC08()
{
  unint64_t result = qword_1EA1A0C08;
  if (!qword_1EA1A0C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C08);
  }
  return result;
}

uint64_t sub_1C08FAC5C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAC74()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081E144);
}

uint64_t sub_1C08FAC8C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FACA4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0889E9C, &qword_1EB892180, (void (*)(uint64_t))sub_1C0889E9C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

unint64_t sub_1C08FAD08()
{
  unint64_t result = qword_1EB86B138;
  if (!qword_1EB86B138)
  {
    sub_1BFE9DEBC(255, &qword_1EB86B130, (uint64_t)&type metadata for FormatGroupRequirement, MEMORY[0x1E4FBB320]);
    sub_1C007443C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B138);
  }
  return result;
}

uint64_t sub_1C08FAD9C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FADB4()
{
  return sub_1C09090D8((uint64_t)sub_1C07F7164, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08FADE0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FADF8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAE10()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0889B24, &qword_1EB892480, (void (*)(uint64_t))sub_1C0889B24, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FAE74()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAE8C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAEA4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAEBC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAED4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08228A0);
}

uint64_t sub_1C08FAEEC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAF04()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAF1C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08897E8, &qword_1EA19DBF8, (void (*)(uint64_t))sub_1C08897E8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FAF80()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAF98()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAFB0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAFC8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FAFE0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081FF78);
}

uint64_t sub_1C08FAFF8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB010()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB028()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0889500, &qword_1EB892040, (void (*)(uint64_t))sub_1C0889500, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FB08C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB0A4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08278D8);
}

uint64_t sub_1C08FB0BC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB0D4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB0EC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0889218, &qword_1EB892520, (void (*)(uint64_t))sub_1C0889218, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FB150()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB168()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB180()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB198()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB1B0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB1C8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB1E0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0824C7C);
}

uint64_t sub_1C08FB1F8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB210()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0889058, &qword_1EB891CD0, (void (*)(uint64_t))sub_1C0889058, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FB274()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08FB28C()
{
  if (!qword_1EB892D00)
  {
    sub_1C0889058();
    sub_1C085F050(&qword_1EB891CD0, (void (*)(uint64_t))sub_1C0889058);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892D00);
    }
  }
}

uint64_t sub_1C08FB320()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB338()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081F014);
}

uint64_t sub_1C08FB350()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB368()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB380()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08864D0, &qword_1EA19DBB0, (void (*)(uint64_t))sub_1C08864D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FB3E4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB3FC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081A1A4);
}

uint64_t sub_1C08FB414()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB42C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0886194, &qword_1EA19DB68, (void (*)(uint64_t))sub_1C0886194, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FB490()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB4A8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB4C0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB4D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB4F0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB508()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB520()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB538()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB550()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0885E58, &qword_1EB86CEF8, (void (*)(uint64_t))sub_1C0885E58, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FB5B4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB5CC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB5E4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08211F8);
}

uint64_t sub_1C08FB5FC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB614()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB62C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0885B1C, &qword_1EB86CD58, (void (*)(uint64_t))sub_1C0885B1C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FB690()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB6A8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB6C0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0821330);
}

uint64_t sub_1C08FB6D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB6F0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB708()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB720()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB738()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB750()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0885834, &qword_1EB891FA0, (void (*)(uint64_t))sub_1C0885834, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FB7B4()
{
  return sub_1C08E51C4();
}

uint64_t sub_1C08FB7C0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB7D8()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0820BDC);
}

uint64_t sub_1C08FB7F0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB808()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB820()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088554C, &qword_1EB891FD0, (void (*)(uint64_t))sub_1C088554C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FB884()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB89C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB8B4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB8CC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB8E4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08229C8);
}

uint64_t sub_1C08FB8FC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB914()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB92C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB944()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB95C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB974()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0885210, &qword_1EA19DB20, (void (*)(uint64_t))sub_1C0885210, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FB9D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FB9F0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0822B10);
}

uint64_t sub_1C08FBA08()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBA20()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBA38()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0884F28, &qword_1EB891E80, (void (*)(uint64_t))sub_1C0884F28, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FBA9C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBAB4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBACC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08FBAE4()
{
  unint64_t result = qword_1EB85FE68;
  if (!qword_1EB85FE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FE68);
  }
  return result;
}

uint64_t sub_1C08FBB38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C08FBB70()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FBB7C()
{
  unint64_t result = qword_1EA1A0C10;
  if (!qword_1EA1A0C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C10);
  }
  return result;
}

uint64_t sub_1C08FBBD0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBBE8()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0821460);
}

unint64_t sub_1C08FBC00()
{
  unint64_t result = qword_1EA1A0C18;
  if (!qword_1EA1A0C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C18);
  }
  return result;
}

uint64_t sub_1C08FBC54()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBC6C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBC84()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0884B44, &qword_1EB86CD48, (void (*)(uint64_t))sub_1C0884B44, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FBCE8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBD00()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FBD0C()
{
  unint64_t result = qword_1EB8663F0;
  if (!qword_1EB8663F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8663F0);
  }
  return result;
}

unint64_t sub_1C08FBD60()
{
  unint64_t result = qword_1EB866E08;
  if (!qword_1EB866E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866E08);
  }
  return result;
}

unint64_t sub_1C08FBDB4()
{
  unint64_t result = qword_1EB86D440;
  if (!qword_1EB86D440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86D440);
  }
  return result;
}

uint64_t sub_1C08FBE08()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBE20()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081F188);
}

uint64_t sub_1C08FBE38()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBE50()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FBE68()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0884808, &qword_1EA19DAD0, (void (*)(uint64_t))sub_1C0884808, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FBECC()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FBED8()
{
  unint64_t result = qword_1EB86F080;
  if (!qword_1EB86F080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F080);
  }
  return result;
}

uint64_t sub_1C08FBF2C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FBF38()
{
  unint64_t result = qword_1EA1A0C20;
  if (!qword_1EA1A0C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C20);
  }
  return result;
}

unint64_t sub_1C08FBF8C()
{
  unint64_t result = qword_1EA1A0C28;
  if (!qword_1EA1A0C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C28);
  }
  return result;
}

uint64_t sub_1C08FBFE0()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FBFEC()
{
  unint64_t result = qword_1EB85C2A8;
  if (!qword_1EB85C2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C2A8);
  }
  return result;
}

unint64_t sub_1C08FC040()
{
  unint64_t result = qword_1EB85E680;
  if (!qword_1EB85E680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E680);
  }
  return result;
}

unint64_t sub_1C08FC094()
{
  unint64_t result = qword_1EB866CD0;
  if (!qword_1EB866CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866CD0);
  }
  return result;
}

uint64_t sub_1C08FC0E8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC100()
{
  return sub_1C09090D8((uint64_t)sub_1C07F2508, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08FC12C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC144()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0883DB4, &qword_1EB8922D0, (void (*)(uint64_t))sub_1C0883DB4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FC1A8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC1C0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC1D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC1F0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC208()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC220()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC238()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC250()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC268()
{
  return sub_1C0870698((uint64_t (*)(void, void, void, void, void))sub_1C082626C);
}

uint64_t sub_1C08FC280()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC298()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC2B0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0883ACC, &qword_1EB8920E0, (void (*)(uint64_t))sub_1C0883ACC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FC314()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC32C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC344()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC35C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08837E4, &qword_1EB891BE0, (void (*)(uint64_t))sub_1C08837E4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FC3C0()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08FC3CC()
{
  unint64_t result = qword_1EA1A0C30;
  if (!qword_1EA1A0C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C30);
  }
  return result;
}

uint64_t sub_1C08FC420()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08FC42C()
{
  unint64_t result = qword_1EA1A0C38;
  if (!qword_1EA1A0C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C38);
  }
  return result;
}

uint64_t sub_1C08FC480()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC498()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC4B0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC4C8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0883454, &qword_1EB891F90, (void (*)(uint64_t))sub_1C0883454, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FC52C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FC538()
{
  unint64_t result = qword_1EB85B728;
  if (!qword_1EB85B728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B728);
  }
  return result;
}

unint64_t sub_1C08FC58C()
{
  unint64_t result = qword_1EA1A0C40;
  if (!qword_1EA1A0C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C40);
  }
  return result;
}

uint64_t sub_1C08FC5E0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC5F8()
{
  return sub_1C09090D8((uint64_t)sub_1C07F5E58, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08FC624()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC63C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC654()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0882F14, &qword_1EB891BD0, (void (*)(uint64_t))sub_1C0882F14, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FC6B8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC6D0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC6E8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC700()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08FC718(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C08FC768()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FC774()
{
  unint64_t result = qword_1EB862E08;
  if (!qword_1EB862E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E08);
  }
  return result;
}

uint64_t sub_1C08FC7C8()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FC7D4()
{
  unint64_t result = qword_1EB866D78;
  if (!qword_1EB866D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866D78);
  }
  return result;
}

unint64_t sub_1C08FC828()
{
  unint64_t result = qword_1EA1A0C50;
  if (!qword_1EA1A0C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C50);
  }
  return result;
}

unint64_t sub_1C08FC87C()
{
  unint64_t result = qword_1EA1A0C58;
  if (!qword_1EA1A0C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C58);
  }
  return result;
}

uint64_t sub_1C08FC8D0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC8E8()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C082972C);
}

unint64_t sub_1C08FC900()
{
  unint64_t result = qword_1EB8645A8;
  if (!qword_1EB8645A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8645A8);
  }
  return result;
}

uint64_t sub_1C08FC954()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC96C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC984()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC99C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC9B4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FC9CC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088298C, &qword_1EB86CFB8, (void (*)(uint64_t))sub_1C088298C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FCA30()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08FCA48()
{
  unint64_t result = qword_1EA1A0C60;
  if (!qword_1EA1A0C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C60);
  }
  return result;
}

uint64_t sub_1C08FCA9C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FCAA8()
{
  unint64_t result = qword_1EB8645A0;
  if (!qword_1EB8645A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8645A0);
  }
  return result;
}

uint64_t sub_1C08FCAFC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCB14()
{
  return sub_1C0870698((uint64_t (*)(void, void, void, void, void))sub_1C0828C98);
}

uint64_t sub_1C08FCB2C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCB44()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCB5C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0882650, &qword_1EB8921E0, (void (*)(uint64_t))sub_1C0882650, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FCBC0()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08FCBCC()
{
  unint64_t result = qword_1EA1A0C68;
  if (!qword_1EA1A0C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C68);
  }
  return result;
}

uint64_t sub_1C08FCC20()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCC38()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0824E38);
}

uint64_t sub_1C08FCC50()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCC68()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0882314, &qword_1EB891CC0, (void (*)(uint64_t))sub_1C0882314, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FCCCC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCCE4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0824FAC);
}

uint64_t sub_1C08FCCFC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCD14()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCD2C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C088202C, &qword_1EB891CB0, (void (*)(uint64_t))sub_1C088202C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FCD90()
{
  return sub_1C08E51C4();
}

uint64_t sub_1C08FCD9C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCDB4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081A330);
}

uint64_t sub_1C08FCDCC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCDE4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCDFC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0881CF0, &qword_1EB86CF38, (void (*)(uint64_t))sub_1C0881CF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FCE60()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCE78()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0820098);
}

uint64_t sub_1C08FCE90()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCEA8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0881A94, &qword_1EA19DA48, (void (*)(uint64_t))sub_1C0881A94, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

void sub_1C08FCF0C()
{
  if (!qword_1EA1A0C70)
  {
    sub_1C0881A94();
    sub_1C085F050(&qword_1EA19DA48, (void (*)(uint64_t))sub_1C0881A94);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0C70);
    }
  }
}

uint64_t sub_1C08FCFA0()
{
  return sub_1C08E51C4();
}

uint64_t sub_1C08FCFAC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCFC4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FCFDC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087E738, &qword_1EA19D9F8, (void (*)(uint64_t))sub_1C087E738, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FD040()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD058()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08198F8);
}

uint64_t sub_1C08FD070()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD088()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD0A0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087E3A8, &qword_1EB892440, (void (*)(uint64_t))sub_1C087E3A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FD104()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08FD11C()
{
  unint64_t result = qword_1EA1A0C78;
  if (!qword_1EA1A0C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C78);
  }
  return result;
}

uint64_t sub_1C08FD170()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD188()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081A414);
}

uint64_t sub_1C08FD1A0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD1B8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD1D0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087E06C, &qword_1EB892400, (void (*)(uint64_t))sub_1C087E06C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FD234()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD24C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FD258()
{
  unint64_t result = qword_1EB869328;
  if (!qword_1EB869328)
  {
    sub_1BFEFF3E8(255, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869328);
  }
  return result;
}

unint64_t sub_1C08FD2E8()
{
  unint64_t result = qword_1EB863108;
  if (!qword_1EB863108)
  {
    sub_1BFEFF3E8(255, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863108);
  }
  return result;
}

unint64_t sub_1C08FD378()
{
  unint64_t result = qword_1EB863110;
  if (!qword_1EB863110)
  {
    sub_1C08FC718(255, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863110);
  }
  return result;
}

unint64_t sub_1C08FD3FC()
{
  unint64_t result = qword_1EA1A0C88;
  if (!qword_1EA1A0C88)
  {
    sub_1BFEFF3E8(255, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C88);
  }
  return result;
}

unint64_t sub_1C08FD48C()
{
  unint64_t result = qword_1EB869320;
  if (!qword_1EB869320)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869320);
  }
  return result;
}

uint64_t sub_1C08FD51C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD534()
{
  return sub_1C09090D8((uint64_t)sub_1C07F1F7C, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C08FD560()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD578()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD590()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD5A8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087D4E8, &qword_1EB8921D0, (void (*)(uint64_t))sub_1C087D4E8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FD60C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD624()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD63C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD654()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FD660()
{
  unint64_t result = qword_1EB85B5A8;
  if (!qword_1EB85B5A8)
  {
    sub_1C08FC718(255, &qword_1EB873F08, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B5A8);
  }
  return result;
}

uint64_t sub_1C08FD6E4()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FD6F0()
{
  unint64_t result = qword_1EB85BDF0;
  if (!qword_1EB85BDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BDF0);
  }
  return result;
}

unint64_t sub_1C08FD744()
{
  unint64_t result = qword_1EB866920;
  if (!qword_1EB866920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866920);
  }
  return result;
}

unint64_t sub_1C08FD798()
{
  unint64_t result = qword_1EA1AB3E0;
  if (!qword_1EA1AB3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB3E0);
  }
  return result;
}

unint64_t sub_1C08FD7EC()
{
  unint64_t result = qword_1EB862F90;
  if (!qword_1EB862F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862F90);
  }
  return result;
}

unint64_t sub_1C08FD840()
{
  unint64_t result = qword_1EA1A0C90;
  if (!qword_1EA1A0C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C90);
  }
  return result;
}

uint64_t sub_1C08FD894()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C08FD8CC()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1C08FD8F0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD908()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C082395C);
}

uint64_t sub_1C08FD920()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD938()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD950()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087CFBC, &qword_1EB891D80, (void (*)(uint64_t))sub_1C087CFBC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FD9B4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD9CC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD9E4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FD9FC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDA14()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087CC80, &qword_1EA19D998, (void (*)(uint64_t))sub_1C087CC80, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FDA78()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDA90()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDAA8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDAC0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087C944, &qword_1EA19D950, (void (*)(uint64_t))sub_1C087C944, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FDB24()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDB3C()
{
  return sub_1C0870698((uint64_t (*)(void, void, void, void, void))sub_1C081A59C);
}

uint64_t sub_1C08FDB54()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDB6C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDB84()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087C65C, &qword_1EB86CF28, (void (*)(uint64_t))sub_1C087C65C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FDBE8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDC00()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FDC0C()
{
  unint64_t result = qword_1EA1A0C98;
  if (!qword_1EA1A0C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0C98);
  }
  return result;
}

unint64_t sub_1C08FDC60()
{
  unint64_t result = qword_1EA1A0CA0;
  if (!qword_1EA1A0CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CA0);
  }
  return result;
}

uint64_t sub_1C08FDCB4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDCCC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081BA00);
}

uint64_t sub_1C08FDCE4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDCFC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDD14()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087C23C, &qword_1EB86CEC8, (void (*)(uint64_t))sub_1C087C23C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FDD78()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDD90()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDDA8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDDC0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08295F4);
}

uint64_t sub_1C08FDDD8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDDF0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDE08()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087BF54, &qword_1EB86CFC8, (void (*)(uint64_t))sub_1C087BF54, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FDE6C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDE84()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDE9C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081E260);
}

uint64_t sub_1C08FDEB4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDECC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDEE4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087BC6C, &qword_1EB892170, (void (*)(uint64_t))sub_1C087BC6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FDF48()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDF60()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDF78()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FDF90()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FDF9C()
{
  unint64_t result = qword_1EB866450;
  if (!qword_1EB866450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866450);
  }
  return result;
}

uint64_t sub_1C08FDFF0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE008()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE020()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE038()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087B888, &qword_1EB8923F0, (void (*)(uint64_t))sub_1C087B888, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FE09C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE0B4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE0CC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE0E4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE0FC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087B5A0, &qword_1EB86CDE8, (void (*)(uint64_t))sub_1C087B5A0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FE160()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FE16C()
{
  unint64_t result = qword_1EB86C440;
  if (!qword_1EB86C440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C440);
  }
  return result;
}

unint64_t sub_1C08FE1C0()
{
  unint64_t result = qword_1EB86C520;
  if (!qword_1EB86C520)
  {
    sub_1BFEFF3E8(255, &qword_1EB891390, (uint64_t (*)(void))sub_1C087B428, (uint64_t)&type metadata for FormatSystemColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C520);
  }
  return result;
}

unint64_t sub_1C08FE250()
{
  unint64_t result = qword_1EA1A0CA8;
  if (!qword_1EA1A0CA8)
  {
    sub_1BFEFF3E8(255, &qword_1EB86C518, (uint64_t (*)(void))sub_1C087B344, (uint64_t)&type metadata for FormatFixedColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CA8);
  }
  return result;
}

unint64_t sub_1C08FE2E0()
{
  unint64_t result = qword_1EA1A0CB0;
  if (!qword_1EA1A0CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CB0);
  }
  return result;
}

unint64_t sub_1C08FE334()
{
  unint64_t result = qword_1EB85B7E8;
  if (!qword_1EB85B7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B7E8);
  }
  return result;
}

unint64_t sub_1C08FE388()
{
  unint64_t result = qword_1EA1A0CB8;
  if (!qword_1EA1A0CB8)
  {
    sub_1C087AEA4(255, &qword_1EA19D8F8, (void (*)(void))sub_1C087AFF4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CB8);
  }
  return result;
}

unint64_t sub_1C08FE404()
{
  unint64_t result = qword_1EA1A0CC0;
  if (!qword_1EA1A0CC0)
  {
    sub_1C087AEA4(255, &qword_1EA19D8E0, (void (*)(void))sub_1C087AF20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CC0);
  }
  return result;
}

uint64_t sub_1C08FE480()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE498()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0823A38);
}

uint64_t sub_1C08FE4B0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE4C8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE4E0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087AA58, &qword_1EA19D8A8, (void (*)(uint64_t))sub_1C087AA58, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FE544()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE55C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0823B1C);
}

uint64_t sub_1C08FE574()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE58C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE5A4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087A71C, &qword_1EA19D860, (void (*)(uint64_t))sub_1C087A71C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FE608()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE620()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE638()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FE644()
{
  unint64_t result = qword_1EB866878;
  if (!qword_1EB866878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866878);
  }
  return result;
}

uint64_t sub_1C08FE698()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE6B0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081E388);
}

uint64_t sub_1C08FE6C8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE6E0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087A3E0, &qword_1EB892160, (void (*)(uint64_t))sub_1C087A3E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FE744()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FE750()
{
  unint64_t result = qword_1EB867330;
  if (!qword_1EB867330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867330);
  }
  return result;
}

unint64_t sub_1C08FE7A4()
{
  unint64_t result = qword_1EB8605D0;
  if (!qword_1EB8605D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8605D0);
  }
  return result;
}

unint64_t sub_1C08FE7F8()
{
  unint64_t result = qword_1EA1A0CD0;
  if (!qword_1EA1A0CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CD0);
  }
  return result;
}

unint64_t sub_1C08FE84C()
{
  unint64_t result = qword_1EB866FE0;
  if (!qword_1EB866FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866FE0);
  }
  return result;
}

uint64_t sub_1C08FE8A0()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FE8AC()
{
  unint64_t result = qword_1EB85ED58;
  if (!qword_1EB85ED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ED58);
  }
  return result;
}

unint64_t sub_1C08FE900()
{
  unint64_t result = qword_1EB860668;
  if (!qword_1EB860668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860668);
  }
  return result;
}

unint64_t sub_1C08FE954()
{
  unint64_t result = qword_1EB862E20;
  if (!qword_1EB862E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E20);
  }
  return result;
}

uint64_t sub_1C08FE9A8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE9C0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE9D8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FE9F0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0879F48, &qword_1EB8924C0, (void (*)(uint64_t))sub_1C0879F48, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FEA54()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEA6C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEA84()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEA9C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0879C0C, &qword_1EB86CCF8, (void (*)(uint64_t))sub_1C0879C0C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FEB00()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FEB0C()
{
  unint64_t result = qword_1EB86FBB8;
  if (!qword_1EB86FBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FBB8);
  }
  return result;
}

uint64_t sub_1C08FEB60()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEB78()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08273E0);
}

uint64_t sub_1C08FEB90()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEBA8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08799F8, &qword_1EB8925A0, (void (*)(uint64_t))sub_1C08799F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FEC0C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEC24()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEC3C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08FEC54()
{
  if (!qword_1EB893168)
  {
    sub_1C08799F8();
    sub_1C085F050(&qword_1EB8925A0, (void (*)(uint64_t))sub_1C08799F8);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893168);
    }
  }
}

uint64_t sub_1C08FECE8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FED00()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0821D54);
}

uint64_t sub_1C08FED18()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FED30()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FED48()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087934C, &qword_1EB891F30, (void (*)(uint64_t))sub_1C087934C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FEDAC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEDC4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08288B4);
}

uint64_t sub_1C08FEDDC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEDF4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087918C, &qword_1EB892470, (void (*)(uint64_t))sub_1C087918C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FEE58()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEE70()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEE88()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C08FEEA0()
{
  if (!qword_1EB8930D0)
  {
    sub_1C087918C();
    sub_1C085F050(&qword_1EB892470, (void (*)(uint64_t))sub_1C087918C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8930D0);
    }
  }
}

uint64_t sub_1C08FEF34()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C08FEF40()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEF58()
{
  return sub_1C0870698((uint64_t (*)(void, void, void, void, void))sub_1C081DC58);
}

uint64_t sub_1C08FEF70()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FEF88()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08777F4, &qword_1EB8921C0, (void (*)(uint64_t))sub_1C08777F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FEFEC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF004()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF01C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF034()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF04C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF064()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087750C, &qword_1EB892280, (void (*)(uint64_t))sub_1C087750C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FF0C8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF0E0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF0F8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF110()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C08FF11C()
{
  unint64_t result = qword_1EA1A0CD8;
  if (!qword_1EA1A0CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CD8);
  }
  return result;
}

uint64_t sub_1C08FF170()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF188()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF1A0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08771D0, &qword_1EB892420, (void (*)(uint64_t))sub_1C08771D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FF204()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C08FF21C()
{
  unint64_t result = qword_1EB860AA8;
  if (!qword_1EB860AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860AA8);
  }
  return result;
}

uint64_t sub_1C08FF270()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF288()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF2A0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF2B8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF2D0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0876EE8, &qword_1EB8923E0, (void (*)(uint64_t))sub_1C0876EE8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FF334()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF34C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF364()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF37C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF394()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF3AC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0876C00, &qword_1EB8922B0, (void (*)(uint64_t))sub_1C0876C00, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FF410()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF428()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF440()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF458()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF470()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0821E4C);
}

uint64_t sub_1C08FF488()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF4A0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08768C4, &qword_1EB86CD38, (void (*)(uint64_t))sub_1C08768C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FF504()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF51C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0819BB0);
}

uint64_t sub_1C08FF534()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF54C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF564()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0876588, &qword_1EB86CF48, (void (*)(uint64_t))sub_1C0876588, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FF5C8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF5E0()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FF5EC()
{
  unint64_t result = qword_1EB86DC78;
  if (!qword_1EB86DC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86DC78);
  }
  return result;
}

unint64_t sub_1C08FF640()
{
  unint64_t result = qword_1EB86DD68;
  if (!qword_1EB86DD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86DD68);
  }
  return result;
}

uint64_t sub_1C08FF694()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF6AC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF6C4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0876150, &qword_1EB86CE98, (void (*)(uint64_t))sub_1C0876150, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FF728()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF740()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF758()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF770()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FF77C()
{
  unint64_t result = qword_1EB85C290;
  if (!qword_1EB85C290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C290);
  }
  return result;
}

unint64_t sub_1C08FF7D0()
{
  unint64_t result = qword_1EB860B70;
  if (!qword_1EB860B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860B70);
  }
  return result;
}

unint64_t sub_1C08FF824()
{
  unint64_t result = qword_1EB869248;
  if (!qword_1EB869248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869248);
  }
  return result;
}

unint64_t sub_1C08FF878()
{
  unint64_t result = qword_1EB86D3F8;
  if (!qword_1EB86D3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86D3F8);
  }
  return result;
}

uint64_t sub_1C08FF8CC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF8E4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081B1A8);
}

uint64_t sub_1C08FF8FC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF914()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0875E14, &qword_1EB892330, (void (*)(uint64_t))sub_1C0875E14, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FF978()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF990()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF9A8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF9C0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FF9D8()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081CFAC);
}

uint64_t sub_1C08FF9F0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFA08()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0875B2C, &qword_1EB892270, (void (*)(uint64_t))sub_1C0875B2C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FFA6C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFA84()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFA9C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFAB4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFACC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C082311C);
}

uint64_t sub_1C08FFAE4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFAFC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08757B4, &qword_1EB891E60, (void (*)(uint64_t))sub_1C08757B4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FFB60()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFB78()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081A80C);
}

uint64_t sub_1C08FFB90()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFBA8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFBC0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0875478, &qword_1EA19D800, (void (*)(uint64_t))sub_1C0875478, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FFC24()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFC3C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081BB7C);
}

uint64_t sub_1C08FFC54()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFC6C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFC84()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087513C, &qword_1EA19D7B8, (void (*)(uint64_t))sub_1C087513C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FFCE8()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C08FFCF4()
{
  unint64_t result = qword_1EB8678C8;
  if (!qword_1EB8678C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8678C8);
  }
  return result;
}

unint64_t sub_1C08FFD48()
{
  unint64_t result = qword_1EA1A0CE0;
  if (!qword_1EA1A0CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CE0);
  }
  return result;
}

unint64_t sub_1C08FFD9C()
{
  unint64_t result = qword_1EA1A0CE8;
  if (!qword_1EA1A0CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CE8);
  }
  return result;
}

unint64_t sub_1C08FFDF0()
{
  unint64_t result = qword_1EA1A0CF0;
  if (!qword_1EA1A0CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CF0);
  }
  return result;
}

uint64_t sub_1C08FFE44()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFE5C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081C78C);
}

uint64_t sub_1C08FFE74()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFE8C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0874CB0, &qword_1EA19D758, (void (*)(uint64_t))sub_1C0874CB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C08FFEF0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFF08()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFF20()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFF38()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFF50()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C08FFF68()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0826690);
}

unint64_t sub_1C08FFF80()
{
  unint64_t result = qword_1EB86B180;
  if (!qword_1EB86B180)
  {
    sub_1BFE9DEBC(255, &qword_1EB86B178, (uint64_t)&type metadata for FormatBezierPathComponent, MEMORY[0x1E4FBB320]);
    sub_1C0900014();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B180);
  }
  return result;
}

unint64_t sub_1C0900014()
{
  unint64_t result = qword_1EB8678E0;
  if (!qword_1EB8678E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8678E0);
  }
  return result;
}

uint64_t sub_1C0900068()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900080()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900098()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087488C, &qword_1EB86CC68, (void (*)(uint64_t))sub_1C087488C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09000FC()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0900108()
{
  unint64_t result = qword_1EB8605D8;
  if (!qword_1EB8605D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8605D8);
  }
  return result;
}

unint64_t sub_1C090015C()
{
  unint64_t result = qword_1EA1A0CF8;
  if (!qword_1EA1A0CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0CF8);
  }
  return result;
}

uint64_t sub_1C09001B0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09001C8()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0823C98);
}

uint64_t sub_1C09001E0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09001F8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0874358, &qword_1EB891D70, (void (*)(uint64_t))sub_1C0874358, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

void sub_1C090025C()
{
  if (!qword_1EB892D50)
  {
    sub_1C0874358();
    sub_1C085F050(&qword_1EB891D70, (void (*)(uint64_t))sub_1C0874358);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892D50);
    }
  }
}

uint64_t sub_1C09002F0()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C09002FC()
{
  unint64_t result = qword_1EA1A0D00;
  if (!qword_1EA1A0D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D00);
  }
  return result;
}

unint64_t sub_1C0900350()
{
  unint64_t result = qword_1EB85AD40;
  if (!qword_1EB85AD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85AD40);
  }
  return result;
}

uint64_t sub_1C09003A4()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C09003B0()
{
  unint64_t result = qword_1EA1A0D08;
  if (!qword_1EA1A0D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D08);
  }
  return result;
}

uint64_t sub_1C0900404()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0900410()
{
  unint64_t result = qword_1EB85B990;
  if (!qword_1EB85B990)
  {
    sub_1BFEFF3E8(255, &qword_1EB875B60, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B990);
  }
  return result;
}

unint64_t sub_1C09004A0()
{
  unint64_t result = qword_1EB85BE78;
  if (!qword_1EB85BE78)
  {
    sub_1BFEFF3E8(255, &qword_1EB8783F8, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BE78);
  }
  return result;
}

unint64_t sub_1C0900530()
{
  unint64_t result = qword_1EB866948;
  if (!qword_1EB866948)
  {
    sub_1BFEFF3E8(255, &qword_1EB866958, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866948);
  }
  return result;
}

uint64_t sub_1C09005C0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09005D8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09005F0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087355C, &qword_1EB892510, (void (*)(uint64_t))sub_1C087355C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0900654()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090066C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900684()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090069C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09006B4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0826780);
}

uint64_t sub_1C09006CC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09006E4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09006FC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0873208, &qword_1EB86CC58, (void (*)(uint64_t))sub_1C0873208, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0900760()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900778()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081F480);
}

uint64_t sub_1C0900790()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09007A8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09007C0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0872F20, &qword_1EB86CDD8, (void (*)(uint64_t))sub_1C0872F20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0900824()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090083C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900854()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090086C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900884()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090089C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09008B4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081F278);
}

uint64_t sub_1C09008CC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09008E4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0872B84, &qword_1EB86CDC8, (void (*)(uint64_t))sub_1C0872B84, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

unint64_t sub_1C0900948()
{
  unint64_t result = qword_1EB860CF0;
  if (!qword_1EB860CF0)
  {
    sub_1BFE9DEBC(255, &qword_1EB860CE8, (uint64_t)&type metadata for FormatAnimationNodeStyle.Selector, MEMORY[0x1E4FBB320]);
    sub_1C007199C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860CF0);
  }
  return result;
}

uint64_t sub_1C09009DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09009F4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900A0C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900A24()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900A3C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0900A54()
{
  if (!qword_1EB86DF68)
  {
    sub_1C0872B84();
    sub_1C085F050(&qword_1EB86CDC8, (void (*)(uint64_t))sub_1C0872B84);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DF68);
    }
  }
}

unint64_t sub_1C0900AE8()
{
  unint64_t result = qword_1EB85F2E8;
  if (!qword_1EB85F2E8)
  {
    sub_1C0908CDC(255, &qword_1EB85F2F0, (void (*)(void))sub_1C0071948, (void (*)(void))sub_1C007199C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F2E8);
  }
  return result;
}

uint64_t sub_1C0900B78()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900B90()
{
  return sub_1C09090D8((uint64_t)sub_1C07F7518, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0900BBC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900BD4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900BEC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C087254C, &qword_1EB86CFA8, (void (*)(uint64_t))sub_1C087254C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0900C50()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900C68()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900C80()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0900C98()
{
  unint64_t result = qword_1EB8608D8;
  if (!qword_1EB8608D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8608D8);
  }
  return result;
}

uint64_t sub_1C0900CEC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900D04()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0900D1C()
{
  if (!qword_1EB86E058)
  {
    sub_1C087254C();
    sub_1C085F050(&qword_1EB86CFA8, (void (*)(uint64_t))sub_1C087254C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86E058);
    }
  }
}

uint64_t sub_1C0900DB0()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0900DBC()
{
  unint64_t result = qword_1EB867D70;
  if (!qword_1EB867D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867D70);
  }
  return result;
}

unint64_t sub_1C0900E10()
{
  unint64_t result = qword_1EA1A0D10;
  if (!qword_1EA1A0D10)
  {
    sub_1BFEFF3E8(255, &qword_1EA19D6F0, (uint64_t (*)(void))sub_1C04674D4, (uint64_t)&type metadata for FormatSizeEquation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeKeyPathAnimation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D10);
  }
  return result;
}

uint64_t sub_1C0900EA0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900EB8()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0828EBC);
}

uint64_t sub_1C0900ED0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900EE8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900F00()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0871E18, &qword_1EA19D6E0, (void (*)(uint64_t))sub_1C0871E18, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0900F64()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900F7C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900F94()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0900FAC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0900FC4()
{
  if (!qword_1EA1A0D18)
  {
    sub_1C0871E18();
    sub_1C085F050(&qword_1EA19D6E0, (void (*)(uint64_t))sub_1C0871E18);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0D18);
    }
  }
}

uint64_t sub_1C0901058()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0901064()
{
  unint64_t result = qword_1EB864720;
  if (!qword_1EB864720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864720);
  }
  return result;
}

uint64_t sub_1C09010B8()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1C09010DC()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1C0901100()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C0901124()
{
  unint64_t result = qword_1EA1A0D28;
  if (!qword_1EA1A0D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D28);
  }
  return result;
}

unint64_t sub_1C0901178()
{
  unint64_t result = qword_1EB8608C8;
  if (!qword_1EB8608C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8608C8);
  }
  return result;
}

uint64_t sub_1C09011CC()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C09011D8()
{
  unint64_t result = qword_1EA1A0D30;
  if (!qword_1EA1A0D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D30);
  }
  return result;
}

unint64_t sub_1C090122C()
{
  unint64_t result = qword_1EB8605C0;
  if (!qword_1EB8605C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8605C0);
  }
  return result;
}

unint64_t sub_1C0901280()
{
  unint64_t result = qword_1EA1A0D38;
  if (!qword_1EA1A0D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D38);
  }
  return result;
}

uint64_t sub_1C09012D4()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C09012E0()
{
  unint64_t result = qword_1EB85B588;
  if (!qword_1EB85B588)
  {
    sub_1BFEFF3E8(255, &qword_1EB873EB8, (uint64_t (*)(void))sub_1C086E9C4, (uint64_t)&type metadata for FormatAccessibilityTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B588);
  }
  return result;
}

uint64_t sub_1C0901370()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901388()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081BD04);
}

uint64_t sub_1C09013A0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09013B8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09013D0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0870CA8, &qword_1EA19D680, (void (*)(uint64_t))sub_1C0870CA8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0901434()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C090144C()
{
  if (!qword_1EA1A0D40)
  {
    sub_1C0870CA8();
    sub_1C085F050(&qword_1EA19D680, (void (*)(uint64_t))sub_1C0870CA8);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0D40);
    }
  }
}

uint64_t sub_1C09014E0()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C09014EC()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C09014F8()
{
  unint64_t result = qword_1EA1A0D48;
  if (!qword_1EA1A0D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D48);
  }
  return result;
}

uint64_t sub_1C090154C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901564()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090157C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0870384, &qword_1EB86CCA8, (void (*)(uint64_t))sub_1C0870384, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09015E0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09015F8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901610()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C0901634()
{
  unint64_t result = qword_1EA1A0D50;
  if (!qword_1EA1A0D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D50);
  }
  return result;
}

uint64_t sub_1C0901688()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0901694()
{
  unint64_t result = qword_1EA1A0D58;
  if (!qword_1EA1A0D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D58);
  }
  return result;
}

uint64_t sub_1C09016E8()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C09016F4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090170C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081CEC0);
}

uint64_t sub_1C0901724()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090173C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901754()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086FFA0, &qword_1EA19D618, (void (*)(uint64_t))sub_1C086FFA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09017B8()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C09017C4()
{
  return sub_1C08E51C4();
}

uint64_t sub_1C09017D0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09017E8()
{
  return sub_1C09090D8((uint64_t)sub_1C07F5FBC, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0901814()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090182C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086FD8C, &qword_1EB891BC0, (void (*)(uint64_t))sub_1C086FD8C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0901890()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09018A8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09018C0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09018D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09018F0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901908()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901920()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0901938()
{
  unint64_t result = qword_1EB86C848;
  if (!qword_1EB86C848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C848);
  }
  return result;
}

void sub_1C090198C()
{
  if (!qword_1EB892C78)
  {
    sub_1C086FD8C();
    sub_1C085F050(&qword_1EB891BC0, (void (*)(uint64_t))sub_1C086FD8C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892C78);
    }
  }
}

unint64_t sub_1C0901A20()
{
  unint64_t result = qword_1EB8917F8;
  if (!qword_1EB8917F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8917F8);
  }
  return result;
}

uint64_t sub_1C0901A74()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901A8C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0819CE0);
}

uint64_t sub_1C0901AA4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901ABC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901AD4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086EF04, &qword_1EA19D5D0, (void (*)(uint64_t))sub_1C086EF04, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0901B38()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0901B44()
{
  unint64_t result = qword_1EB866CD8;
  if (!qword_1EB866CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866CD8);
  }
  return result;
}

uint64_t sub_1C0901B98()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C0901BBC()
{
  unint64_t result = qword_1EB8668F8;
  if (!qword_1EB8668F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8668F8);
  }
  return result;
}

uint64_t sub_1C0901C10()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C0901C34()
{
  unint64_t result = qword_1EB869BA8;
  if (!qword_1EB869BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869BA8);
  }
  return result;
}

uint64_t sub_1C0901C88()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901CA0()
{
  return sub_1C09090D8((uint64_t)sub_1C07F296C, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0901CCC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901CE4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901CFC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086ED44, &qword_1EB8920A0, (void (*)(uint64_t))sub_1C086ED44, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0901D60()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901D78()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901D90()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901DA8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0901DC0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0901DD8()
{
  if (!qword_1EB892EE8)
  {
    sub_1C086ED44();
    sub_1C085F050(&qword_1EB8920A0, (void (*)(uint64_t))sub_1C086ED44);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892EE8);
    }
  }
}

uint64_t sub_1C0901E6C()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0901E78()
{
  unint64_t result = qword_1EB865EE8;
  if (!qword_1EB865EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865EE8);
  }
  return result;
}

unint64_t sub_1C0901ECC()
{
  unint64_t result = qword_1EB85B580;
  if (!qword_1EB85B580)
  {
    sub_1BFEFF3E8(255, &qword_1EB85CF08, (uint64_t (*)(void))sub_1C0355D40, (uint64_t)&type metadata for FormatPatternAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B580);
  }
  return result;
}

unint64_t sub_1C0901F5C()
{
  unint64_t result = qword_1EB85FC30;
  if (!qword_1EB85FC30)
  {
    sub_1BFEFF3E8(255, &qword_1EB85FC40, (uint64_t (*)(void))sub_1C025A6FC, (uint64_t)&type metadata for FormatPatternDirection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FC30);
  }
  return result;
}

uint64_t sub_1C0901FEC()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C0901FF8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902010()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0819A78);
}

uint64_t sub_1C0902028()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902040()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902058()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086E770, &qword_1EB892430, (void (*)(uint64_t))sub_1C086E770, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09020BC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09020D4()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C09020E0()
{
  unint64_t result = qword_1EB86A4D8;
  if (!qword_1EB86A4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A4D8);
  }
  return result;
}

uint64_t sub_1C0902134()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0902140()
{
  unint64_t result = qword_1EB866C80;
  if (!qword_1EB866C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866C80);
  }
  return result;
}

uint64_t sub_1C0902194()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C09021A0()
{
  unint64_t result = qword_1EA1A0D60;
  if (!qword_1EA1A0D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D60);
  }
  return result;
}

uint64_t sub_1C09021F4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090220C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C082932C);
}

uint64_t sub_1C0902224()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090223C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902254()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086E38C, &qword_1EB892620, (void (*)(uint64_t))sub_1C086E38C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09022B8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09022D0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09022E8()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0829454);
}

uint64_t sub_1C0902300()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902318()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086E0A4, &qword_1EB892630, (void (*)(uint64_t))sub_1C086E0A4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C090237C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902394()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09023AC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09023C4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09023DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09023F4()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C0902418()
{
  unint64_t result = qword_1EA1A0D68;
  if (!qword_1EA1A0D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D68);
  }
  return result;
}

uint64_t sub_1C090246C()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0902478()
{
  unint64_t result = qword_1EA1A0D70;
  if (!qword_1EA1A0D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D70);
  }
  return result;
}

uint64_t sub_1C09024CC()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C09024D8()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1C09024FC()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0902508()
{
  unint64_t result = qword_1EA1A0D78;
  if (!qword_1EA1A0D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D78);
  }
  return result;
}

uint64_t sub_1C090255C()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0902568()
{
  unint64_t result = qword_1EB8706E8;
  if (!qword_1EB8706E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8706E8);
  }
  return result;
}

uint64_t sub_1C09025BC()
{
  return sub_1C08E51C4();
}

uint64_t sub_1C09025C8()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C09025D4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09025EC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081C248);
}

uint64_t sub_1C0902604()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090261C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902634()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086DA8C, &qword_1EB892310, (void (*)(uint64_t))sub_1C086DA8C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0902698()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09026B0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081F7F0);
}

uint64_t sub_1C09026C8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09026E0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086D8CC, &qword_1EB8920B0, (void (*)(uint64_t))sub_1C086D8CC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

void sub_1C0902744()
{
  if (!qword_1EB892EF0)
  {
    sub_1C086D8CC();
    sub_1C085F050(&qword_1EB8920B0, (void (*)(uint64_t))sub_1C086D8CC);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892EF0);
    }
  }
}

uint64_t sub_1C09027D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09027F0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081AEEC);
}

uint64_t sub_1C0902808()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902820()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902838()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902850()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902868()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902880()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086D550, &qword_1EB892340, (void (*)(uint64_t))sub_1C086D550, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09028E4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09028FC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902914()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902930()
{
  return sub_1C08197A4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

unint64_t sub_1C090293C()
{
  unint64_t result = qword_1EA1A0D80;
  if (!qword_1EA1A0D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D80);
  }
  return result;
}

uint64_t sub_1C0902990()
{
  return sub_1C08E51C4();
}

uint64_t sub_1C090299C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09029B4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08255D0);
}

uint64_t sub_1C09029CC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09029E4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09029FC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086D268, &qword_1EB891C50, (void (*)(uint64_t))sub_1C086D268, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0902A60()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902A78()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902A90()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902AA8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902AC0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902AD8()
{
  return sub_1C09090D8((uint64_t)sub_1C07F4A5C, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0902B04()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902B1C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902B34()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902B4C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086CE60, &qword_1EB891E10, (void (*)(uint64_t))sub_1C086CE60, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0902BB0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902BC8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902BE0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902BF8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902C10()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0824854);
}

uint64_t sub_1C0902C28()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902C40()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902C58()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086CB24, &qword_1EA19D568, (void (*)(uint64_t))sub_1C086CB24, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0902CBC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902CD4()
{
  return sub_1C09090D8((uint64_t)sub_1C07F7674, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0902D00()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902D18()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902D30()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086C740, &qword_1EA19D520, (void (*)(uint64_t))sub_1C086C740, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0902D94()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902DAC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0902DC4()
{
  unint64_t result = qword_1EB85AD30;
  if (!qword_1EB85AD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85AD30);
  }
  return result;
}

uint64_t sub_1C0902E18()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0902E30()
{
  unint64_t result = qword_1EB85AD38;
  if (!qword_1EB85AD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85AD38);
  }
  return result;
}

uint64_t sub_1C0902E84()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0902E90()
{
  unint64_t result = qword_1EA1A0D88;
  if (!qword_1EA1A0D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D88);
  }
  return result;
}

uint64_t sub_1C0902EE4()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0902EF0()
{
  unint64_t result = qword_1EB865C10;
  if (!qword_1EB865C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865C10);
  }
  return result;
}

uint64_t sub_1C0902F44()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0902F50()
{
  unint64_t result = qword_1EA1A0D90;
  if (!qword_1EA1A0D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D90);
  }
  return result;
}

uint64_t sub_1C0902FA4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902FBC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081F624);
}

uint64_t sub_1C0902FD4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0902FEC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903004()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086C35C, &qword_1EB8920D0, (void (*)(uint64_t))sub_1C086C35C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0903068()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903080()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903098()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09030B0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09030C8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09030E0()
{
  return sub_1C09090D8((uint64_t)sub_1C07F2824, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C090310C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903124()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086C19C, &qword_1EB8920C0, (void (*)(uint64_t))sub_1C086C19C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0903188()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09031A0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09031B8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09031D0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09031E8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0903200()
{
  if (!qword_1EB892EF8)
  {
    sub_1C086C19C();
    sub_1C085F050(&qword_1EB8920C0, (void (*)(uint64_t))sub_1C086C19C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892EF8);
    }
  }
}

unint64_t sub_1C0903294()
{
  unint64_t result = qword_1EB884EE0;
  if (!qword_1EB884EE0)
  {
    sub_1C0908CDC(255, &qword_1EB884EE8, (void (*)(void))sub_1C00722A0, (void (*)(void))sub_1C00722F4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884EE0);
  }
  return result;
}

uint64_t sub_1C0903324()
{
  return sub_1C08E51C4();
}

uint64_t sub_1C0903330()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C090333C()
{
  unint64_t result = qword_1EB85B590;
  if (!qword_1EB85B590)
  {
    sub_1BFEFF3E8(255, &qword_1EB873EC8, (uint64_t (*)(void))sub_1C086BEE8, (uint64_t)&type metadata for FormatAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B590);
  }
  return result;
}

unint64_t sub_1C09033CC()
{
  unint64_t result = qword_1EA1A0D98;
  if (!qword_1EA1A0D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0D98);
  }
  return result;
}

uint64_t sub_1C0903420()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903438()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0828A58);
}

uint64_t sub_1C0903450()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903468()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903480()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086BA98, &qword_1EB892460, (void (*)(uint64_t))sub_1C086BA98, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09034E4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09034FC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903514()
{
  return sub_1C09090D8((uint64_t)sub_1C07F2E64, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

unint64_t sub_1C0903540()
{
  unint64_t result = qword_1EA1A0DA0;
  if (!qword_1EA1A0DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0DA0);
  }
  return result;
}

uint64_t sub_1C0903594()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09035AC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09035C4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086B60C, &qword_1EB86CD98, (void (*)(uint64_t))sub_1C086B60C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0903628()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0903640()
{
  unint64_t result = qword_1EA1A0DA8;
  if (!qword_1EA1A0DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0DA8);
  }
  return result;
}

uint64_t sub_1C0903694()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C09036AC()
{
  unint64_t result = qword_1EA1A0DB0;
  if (!qword_1EA1A0DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0DB0);
  }
  return result;
}

uint64_t sub_1C0903700()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903718()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0903730()
{
  unint64_t result = qword_1EA1A0DB8;
  if (!qword_1EA1A0DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0DB8);
  }
  return result;
}

uint64_t sub_1C0903784()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0903790()
{
  unint64_t result = qword_1EA1A0DC0;
  if (!qword_1EA1A0DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0DC0);
  }
  return result;
}

unint64_t sub_1C09037E4()
{
  unint64_t result = qword_1EA1A0DC8;
  if (!qword_1EA1A0DC8)
  {
    sub_1BFEFF3E8(255, &qword_1EA19D4B8, (uint64_t (*)(void))sub_1C086B494, (uint64_t)&type metadata for FormatMediaTimingFunctionName, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0DC8);
  }
  return result;
}

unint64_t sub_1C0903874()
{
  unint64_t result = qword_1EA1A0DD0;
  if (!qword_1EA1A0DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0DD0);
  }
  return result;
}

uint64_t sub_1C09038C8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09038E0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0828414);
}

uint64_t sub_1C09038F8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903910()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086B120, &qword_1EB8924B0, (void (*)(uint64_t))sub_1C086B120, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0903974()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090398C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09039A4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09039BC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09039D4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09039EC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081CB18);
}

uint64_t sub_1C0903A04()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903A1C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903A34()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086AE38, &qword_1EB86CE78, (void (*)(uint64_t))sub_1C086AE38, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0903A98()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903AB0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903AC8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903AE0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903AF8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903B10()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903B28()
{
  return sub_1C09090D8((uint64_t)sub_1C07F1974, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0903B54()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903B6C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903B84()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086AC78, &qword_1EB86CE68, (void (*)(uint64_t))sub_1C086AC78, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0903BE8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903C00()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903C18()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903C30()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903C48()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0903C60()
{
  if (!qword_1EB86DFB8)
  {
    sub_1C086AC78();
    sub_1C085F050(&qword_1EB86CE68, (void (*)(uint64_t))sub_1C086AC78);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DFB8);
    }
  }
}

unint64_t sub_1C0903CF4()
{
  unint64_t result = qword_1EB863C08;
  if (!qword_1EB863C08)
  {
    sub_1C0908CDC(255, &qword_1EB863C10, (void (*)(void))sub_1C006C4C8, (void (*)(void))sub_1C006C51C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863C08);
  }
  return result;
}

uint64_t sub_1C0903D84()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903D9C()
{
  return sub_1C09090D8((uint64_t)sub_1C07F23D8, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

unint64_t sub_1C0903DC8()
{
  unint64_t result = qword_1EB860CD8;
  if (!qword_1EB860CD8)
  {
    sub_1BFE9DEBC(255, &qword_1EB860CD0, (uint64_t)&type metadata for FormatIssueCoverTraits, MEMORY[0x1E4FBB320]);
    sub_1C00741C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860CD8);
  }
  return result;
}

uint64_t sub_1C0903E5C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903E74()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903E8C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086A8FC, &qword_1EB86CE18, (void (*)(uint64_t))sub_1C086A8FC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0903EF0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903F08()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903F20()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903F38()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903F50()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903F68()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903F80()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903F98()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903FB0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0903FC8()
{
  return sub_1C09090D8((uint64_t)sub_1C07F226C, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0903FF4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090400C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086A73C, &qword_1EB86CE08, (void (*)(uint64_t))sub_1C086A73C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0904070()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904088()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09040A0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09040B8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09040D0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C09040E8()
{
  unint64_t result = qword_1EB86B198;
  if (!qword_1EB86B198)
  {
    sub_1BFE9DEBC(255, &qword_1EB86B190, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, MEMORY[0x1E4FBB320]);
    sub_1C006F17C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B198);
  }
  return result;
}

uint64_t sub_1C090417C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904194()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09041AC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C09041C4()
{
  if (!qword_1EB86DF88)
  {
    sub_1C086A73C();
    sub_1C085F050(&qword_1EB86CE08, (void (*)(uint64_t))sub_1C086A73C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DF88);
    }
  }
}

unint64_t sub_1C0904258()
{
  unint64_t result = qword_1EB85F2D8;
  if (!qword_1EB85F2D8)
  {
    sub_1C0908CDC(255, &qword_1EB85F2E0, (void (*)(void))sub_1C0074170, (void (*)(void))sub_1C00741C4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F2D8);
  }
  return result;
}

unint64_t sub_1C09042E8()
{
  unint64_t result = qword_1EB863BD0;
  if (!qword_1EB863BD0)
  {
    sub_1C0908CDC(255, &qword_1EB863BD8, (void (*)(void))sub_1C006F128, (void (*)(void))sub_1C006F17C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863BD0);
  }
  return result;
}

uint64_t sub_1C0904378()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0904384()
{
  unint64_t result = qword_1EB865DC8;
  if (!qword_1EB865DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865DC8);
  }
  return result;
}

unint64_t sub_1C09043D8()
{
  unint64_t result = qword_1EB866930;
  if (!qword_1EB866930)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&qword_1EB866940, (uint64_t (*)(void))sub_1C04076BC, (uint64_t)&type metadata for FormatVisibility, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866930);
  }
  return result;
}

uint64_t sub_1C0904468()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904480()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0821778);
}

uint64_t sub_1C0904498()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09044B0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09044C8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086A2D0, &qword_1EB891F80, (void (*)(uint64_t))sub_1C086A2D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C090452C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904544()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090455C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904574()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090458C()
{
  return sub_1C08E5310((uint64_t (*)(void, void, void))sub_1C0821584);
}

uint64_t sub_1C09045A4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C09045DC()
{
  return sub_1C084E360(*(void *)(v0 + 16), (char *)(v0 + 24), (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(void))sub_1BFCF0608);
}

uint64_t sub_1C0904618()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C0904624()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090463C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081ADB4);
}

uint64_t sub_1C0904654()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090466C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904684()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0869EF0, &qword_1EB86CEE8, (void (*)(uint64_t))sub_1C0869EF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09046E8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904700()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904718()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904730()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904748()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0869C08, &qword_1EB892350, (void (*)(uint64_t))sub_1C0869C08, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09047AC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09047C4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09047DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09047F4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090480C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08698CC, &qword_1EA19D480, (void (*)(uint64_t))sub_1C08698CC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0904870()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904888()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09048A0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081A0B4);
}

uint64_t sub_1C09048B8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09048D0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09048E8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0869590, &qword_1EA19D438, (void (*)(uint64_t))sub_1C0869590, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C090494C()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C0904970()
{
  unint64_t result = qword_1EB8681D8;
  if (!qword_1EB8681D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8681D8);
  }
  return result;
}

uint64_t sub_1C09049C4()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C09049D0()
{
  unint64_t result = qword_1EA1A0DD8;
  if (!qword_1EA1A0DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0DD8);
  }
  return result;
}

uint64_t sub_1C0904A24()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904A3C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0824ADC);
}

uint64_t sub_1C0904A54()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904A6C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904A84()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904A9C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904AB4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0869200, &qword_1EB891CF0, (void (*)(uint64_t))sub_1C0869200, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0904B18()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C0904B24()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904B3C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0825BD8);
}

unint64_t sub_1C0904B54()
{
  unint64_t result = qword_1EA1A0DF0;
  if (!qword_1EA1A0DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0DF0);
  }
  return result;
}

uint64_t sub_1C0904BA8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904BC0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904BD8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0868D6C, &qword_1EA19D3D8, (void (*)(uint64_t))sub_1C0868D6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0904C3C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904C54()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0904C6C()
{
  unint64_t result = qword_1EA1A0DF8;
  if (!qword_1EA1A0DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0DF8);
  }
  return result;
}

uint64_t sub_1C0904CC0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904CD8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904CF0()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0904CFC()
{
  unint64_t result = qword_1EA1A0E00;
  if (!qword_1EA1A0E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E00);
  }
  return result;
}

uint64_t sub_1C0904D50()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904D68()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08263E4);
}

uint64_t sub_1C0904D80()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904D98()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0868A30, &qword_1EA19D388, (void (*)(uint64_t))sub_1C0868A30, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0904DFC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904E14()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904E2C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904E44()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0904E50()
{
  unint64_t result = qword_1EB869398;
  if (!qword_1EB869398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869398);
  }
  return result;
}

unint64_t sub_1C0904EA4()
{
  unint64_t result = qword_1EA1A0E08;
  if (!qword_1EA1A0E08)
  {
    sub_1BFEFF3E8(255, &qword_1EB86C450, (uint64_t (*)(void))sub_1C08688B8, (uint64_t)&type metadata for FormatSupplementaryNodePinEdge, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E08);
  }
  return result;
}

unint64_t sub_1C0904F34()
{
  unint64_t result = qword_1EB860AB8;
  if (!qword_1EB860AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860AB8);
  }
  return result;
}

uint64_t sub_1C0904F88()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0904FA0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0820DEC);
}

unint64_t sub_1C0904FB8()
{
  unint64_t result = qword_1EB86BD68;
  if (!qword_1EB86BD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BD68);
  }
  return result;
}

uint64_t sub_1C090500C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905024()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090503C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0868560, &qword_1EB86CD88, (void (*)(uint64_t))sub_1C0868560, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09050A0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09050B8()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1C09050DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09050F4()
{
  return sub_1C09090D8((uint64_t)sub_1C07F68C0, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0905120()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905138()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905150()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905168()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905180()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08683A0, &qword_1EB892570, (void (*)(uint64_t))sub_1C08683A0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09051E4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09051FC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905214()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090522C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905244()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090525C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905274()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090528C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C09052A4()
{
  if (!qword_1EB893150)
  {
    sub_1C08683A0();
    sub_1C085F050(&qword_1EB892570, (void (*)(uint64_t))sub_1C08683A0);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893150);
    }
  }
}

uint64_t sub_1C0905338()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0905344()
{
  unint64_t result = qword_1EB85B730;
  if (!qword_1EB85B730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B730);
  }
  return result;
}

uint64_t sub_1C0905398()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C09053A4()
{
  unint64_t result = qword_1EB8605F0;
  if (!qword_1EB8605F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8605F0);
  }
  return result;
}

unint64_t sub_1C09053F8()
{
  unint64_t result = qword_1EB860938;
  if (!qword_1EB860938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860938);
  }
  return result;
}

uint64_t sub_1C090544C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0905458()
{
  unint64_t result = qword_1EA1A0E20;
  if (!qword_1EA1A0E20)
  {
    sub_1BFEFF3E8(255, &qword_1EA19D330, (uint64_t (*)(void))sub_1C0868054, (uint64_t)&type metadata for FormatOptionType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E20);
  }
  return result;
}

uint64_t sub_1C09054E8()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C09054F4()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0905500()
{
  unint64_t result = qword_1EB8612B0;
  if (!qword_1EB8612B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8612B0);
  }
  return result;
}

unint64_t sub_1C0905554()
{
  unint64_t result = qword_1EB862E48;
  if (!qword_1EB862E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E48);
  }
  return result;
}

uint64_t sub_1C09055A8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09055C0()
{
  return sub_1C0870698((uint64_t (*)(void, void, void, void, void))sub_1C0827260);
}

uint64_t sub_1C09055D8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09055F0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0867D98, &qword_1EB8925B0, (void (*)(uint64_t))sub_1C0867D98, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0905654()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090566C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905684()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C090569C()
{
  if (!qword_1EB893170)
  {
    sub_1C0867D98();
    sub_1C085F050(&qword_1EB8925B0, (void (*)(uint64_t))sub_1C0867D98);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893170);
    }
  }
}

uint64_t sub_1C0905730()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905748()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0822F7C);
}

uint64_t sub_1C0905760()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905778()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905790()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09057A8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09057C0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0867860, &qword_1EA19D300, (void (*)(uint64_t))sub_1C0867860, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0905824()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090583C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905854()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081AC98);
}

uint64_t sub_1C090586C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905884()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0867524, &qword_1EB892360, (void (*)(uint64_t))sub_1C0867524, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09058E8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905900()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905918()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905930()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C090593C()
{
  unint64_t result = qword_1EB85E670;
  if (!qword_1EB85E670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E670);
  }
  return result;
}

unint64_t sub_1C0905990()
{
  unint64_t result = qword_1EA1A0E28;
  if (!qword_1EA1A0E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E28);
  }
  return result;
}

unint64_t sub_1C09059E4()
{
  unint64_t result = qword_1EB866FC8;
  if (!qword_1EB866FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866FC8);
  }
  return result;
}

unint64_t sub_1C0905A38()
{
  unint64_t result = qword_1EA1A2370;
  if (!qword_1EA1A2370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2370);
  }
  return result;
}

unint64_t sub_1C0905A8C()
{
  unint64_t result = qword_1EB8668B8;
  if (!qword_1EB8668B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8668B8);
  }
  return result;
}

unint64_t sub_1C0905AE0()
{
  unint64_t result = qword_1EB862F68;
  if (!qword_1EB862F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862F68);
  }
  return result;
}

unint64_t sub_1C0905B34()
{
  unint64_t result = qword_1EB86D420;
  if (!qword_1EB86D420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86D420);
  }
  return result;
}

uint64_t sub_1C0905B88()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0905B94()
{
  unint64_t result = qword_1EB867E88;
  if (!qword_1EB867E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867E88);
  }
  return result;
}

unint64_t sub_1C0905BE8()
{
  unint64_t result = qword_1EB85EE18;
  if (!qword_1EB85EE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EE18);
  }
  return result;
}

unint64_t sub_1C0905C3C()
{
  unint64_t result = qword_1EA1A0E30;
  if (!qword_1EA1A0E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E30);
  }
  return result;
}

uint64_t sub_1C0905C90()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905CA8()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0820670);
}

uint64_t sub_1C0905CC0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905CD8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905CF0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08670EC, &qword_1EB892010, (void (*)(uint64_t))sub_1C08670EC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0905D54()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905D6C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905D84()
{
  return sub_1C08E5310((uint64_t (*)(void, void, void))sub_1C0820534);
}

uint64_t sub_1C0905D9C()
{
  return sub_1C084E360(*(void *)(v0 + 16), (char *)(v0 + 24), (uint64_t)&type metadata for FormatOptionExpression.Compare.CodingKeys, (uint64_t (*)(void))sub_1BFE231D0);
}

uint64_t sub_1C0905DD8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905DF0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0828D88);
}

uint64_t sub_1C0905E08()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905E20()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905E38()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0866ED8, &qword_1EA19D2C0, (void (*)(uint64_t))sub_1C0866ED8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0905E9C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905EB4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905ECC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0905EE4()
{
  if (!qword_1EA1A0E38)
  {
    sub_1C0866ED8();
    sub_1C085F050(&qword_1EA19D2C0, (void (*)(uint64_t))sub_1C0866ED8);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0E38);
    }
  }
}

uint64_t sub_1C0905F78()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905F90()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0820184);
}

uint64_t sub_1C0905FA8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905FC0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0905FD8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0866820, &qword_1EB892030, (void (*)(uint64_t))sub_1C0866820, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C090603C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906054()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090606C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0906084()
{
  if (!qword_1EB892EB0)
  {
    sub_1C0866820();
    sub_1C085F050(&qword_1EB892030, (void (*)(uint64_t))sub_1C0866820);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892EB0);
    }
  }
}

uint64_t sub_1C0906118()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906130()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0822C94);
}

uint64_t sub_1C0906148()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906160()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906178()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08664A4, &qword_1EB891E70, (void (*)(uint64_t))sub_1C08664A4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09061DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09061F4()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0906200()
{
  unint64_t result = qword_1EB865B38;
  if (!qword_1EB865B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B38);
  }
  return result;
}

uint64_t sub_1C0906254()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090626C()
{
  return sub_1C09090D8((uint64_t)sub_1C07F1828, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0906298()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09062B0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09062C8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09062E0()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0865FD0, &qword_1EB8922C0, (void (*)(uint64_t))sub_1C0865FD0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0906344()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090635C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906374()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090638C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09063A4()
{
  return sub_1C09090D8((uint64_t)sub_1C07F4254, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C09063D0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09063E8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906400()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0865C94, &qword_1EA19D270, (void (*)(uint64_t))sub_1C0865C94, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0906464()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090647C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906494()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09064AC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09064C4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09064DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09064F4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090650C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906524()
{
  return sub_1C09090D8((uint64_t)sub_1C07F40D8, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0906550()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906568()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906580()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0865AD4, &qword_1EB891E90, (void (*)(uint64_t))sub_1C0865AD4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09065E4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09065FC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906614()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090662C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0906644()
{
  unint64_t result = qword_1EA1A0E48;
  if (!qword_1EA1A0E48)
  {
    sub_1BFE9DEBC(255, &qword_1EA1A0E40, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector, MEMORY[0x1E4FBB320]);
    sub_1C0078140();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E48);
  }
  return result;
}

uint64_t sub_1C09066D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09066F0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906708()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0906720()
{
  if (!qword_1EB892DE0)
  {
    sub_1C0865AD4();
    sub_1C085F050(&qword_1EB891E90, (void (*)(uint64_t))sub_1C0865AD4);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892DE0);
    }
  }
}

unint64_t sub_1C09067B4()
{
  unint64_t result = qword_1EA1A0E50;
  if (!qword_1EA1A0E50)
  {
    sub_1C0908CDC(255, &qword_1EB884E80, (void (*)(void))sub_1C00780EC, (void (*)(void))sub_1C0078140);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E50);
  }
  return result;
}

uint64_t sub_1C0906844()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090685C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906874()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08656C8, &qword_1EB86CC88, (void (*)(uint64_t))sub_1C08656C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09068D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09068F0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906908()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906920()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C090692C()
{
  unint64_t result = qword_1EB85BDE8;
  if (!qword_1EB85BDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BDE8);
  }
  return result;
}

unint64_t sub_1C0906980()
{
  unint64_t result = qword_1EA1A0E58;
  if (!qword_1EA1A0E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E58);
  }
  return result;
}

uint64_t sub_1C09069D4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09069EC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0822DCC);
}

uint64_t sub_1C0906A04()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906A1C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906A34()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906A4C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906A64()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906A7C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906A94()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0865214, &qword_1EA19D228, (void (*)(uint64_t))sub_1C0865214, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

void sub_1C0906AF8()
{
  if (!qword_1EA1A0E60)
  {
    sub_1C0865214();
    sub_1C085F050(&qword_1EA19D228, (void (*)(uint64_t))sub_1C0865214);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0E60);
    }
  }
}

uint64_t sub_1C0906B8C()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C0906B98()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906BB0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08218F4);
}

uint64_t sub_1C0906BC8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906BE0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906BF8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08649C0, &qword_1EB891F40, (void (*)(uint64_t))sub_1C08649C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0906C5C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906C74()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0821AC0);
}

uint64_t sub_1C0906C8C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906CA4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906CBC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08646D8, &qword_1EB891F50, (void (*)(uint64_t))sub_1C08646D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0906D20()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906D38()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906D50()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906D68()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906D80()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08643F0, &qword_1EB891F60, (void (*)(uint64_t))sub_1C08643F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0906DE4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906DFC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0821BF0);
}

uint64_t sub_1C0906E14()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906E2C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906E44()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0864108, &qword_1EB891F70, (void (*)(uint64_t))sub_1C0864108, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0906EA8()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0906EB4()
{
  unint64_t result = qword_1EA1A0E68;
  if (!qword_1EA1A0E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E68);
  }
  return result;
}

unint64_t sub_1C0906F08()
{
  unint64_t result = qword_1EA1A0E70;
  if (!qword_1EA1A0E70)
  {
    sub_1BFEFF3E8(255, &qword_1EA19D1E8, (uint64_t (*)(void))sub_1C0280EA4, (uint64_t)&type metadata for FormatSymbolImageColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E70);
  }
  return result;
}

uint64_t sub_1C0906F98()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906FB0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0820CB8);
}

uint64_t sub_1C0906FC8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906FE0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0906FF8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0863CA8, &qword_1EB891FB0, (void (*)(uint64_t))sub_1C0863CA8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C090705C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907074()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C082518C);
}

uint64_t sub_1C090708C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09070A4()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09070BC()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08639C0, &qword_1EB891C90, (void (*)(uint64_t))sub_1C08639C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0907120()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907138()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907150()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907168()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907180()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907198()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09071B0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0822544);
}

uint64_t sub_1C09071C8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09071E0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09071F8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08636C0, &qword_1EB891EE0, (void (*)(uint64_t))sub_1C08636C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C090725C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907274()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0907280()
{
  unint64_t result = qword_1EB867E80;
  if (!qword_1EB867E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867E80);
  }
  return result;
}

uint64_t sub_1C09072D4()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C09072E0()
{
  unint64_t result = qword_1EB865C70[0];
  if (!qword_1EB865C70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB865C70);
  }
  return result;
}

uint64_t sub_1C0907334()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090734C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081D184);
}

uint64_t sub_1C0907364()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090737C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907394()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08633D8, &qword_1EB892240, (void (*)(uint64_t))sub_1C08633D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09073F8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907410()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907428(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v13 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(a1 + 152);
  uint64_t v5 = *(void *)(a1 + 160);
  uint64_t v6 = *(void *)(a1 + 168);
  uint64_t v7 = *(void *)(a1 + 176);
  uint64_t v8 = *(void *)(a1 + 184);
  long long v11 = *(_OWORD *)(a1 + 208);
  long long v12 = *(_OWORD *)(a1 + 192);
  long long v10 = *(_OWORD *)(a1 + 224);
  sub_1BFEF88A0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104));
  sub_1BFEF88A0(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((unint64_t *)&v10 + 1));
  return a1;
}

void *sub_1C090750C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1C0907570()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C090757C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907594()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081BE20);
}

uint64_t sub_1C09075AC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09075C4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086309C, &qword_1EA19D1C0, (void (*)(uint64_t))sub_1C086309C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0907628()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907640()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907658()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907670()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907688()
{
  return sub_1C09090D8((uint64_t)sub_1C07F3A84, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C09076B4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09076CC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09076E4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09076FC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907714()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090772C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0862EDC, &qword_1EB86CD08, (void (*)(uint64_t))sub_1C0862EDC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0907790()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09077A8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09077C0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09077D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09077F0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0907808()
{
  if (!qword_1EB86DF08)
  {
    sub_1C0862EDC();
    sub_1C085F050(&qword_1EB86CD08, (void (*)(uint64_t))sub_1C0862EDC);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DF08);
    }
  }
}

uint64_t sub_1C090789C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C09078A8()
{
  unint64_t result = qword_1EA1A0E78;
  if (!qword_1EA1A0E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E78);
  }
  return result;
}

uint64_t sub_1C09078FC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907914()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081DD88);
}

uint64_t sub_1C090792C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907944()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090795C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0862AB0, &qword_1EB8921B0, (void (*)(uint64_t))sub_1C0862AB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09079C0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09079D8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09079F0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907A08()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907A20()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907A38()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08627C8, &qword_1EB892490, (void (*)(uint64_t))sub_1C08627C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0907A9C()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C0907AA8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907AC0()
{
  return sub_1C09090D8((uint64_t)sub_1C07F5238, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C0907AEC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907B04()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08624B8, &qword_1EB891D50, (void (*)(uint64_t))sub_1C08624B8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0907B68()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907B80()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907B98()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907BB0()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907BC8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907BE0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0907BF8()
{
  if (!qword_1EB892D40)
  {
    sub_1C08624B8();
    sub_1C085F050(&qword_1EB891D50, (void (*)(uint64_t))sub_1C08624B8);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892D40);
    }
  }
}

uint64_t sub_1C0907C8C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0907C98()
{
  unint64_t result = qword_1EA1A0E88;
  if (!qword_1EA1A0E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E88);
  }
  return result;
}

unint64_t sub_1C0907CEC()
{
  unint64_t result = qword_1EA1A0E90;
  if (!qword_1EA1A0E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E90);
  }
  return result;
}

unint64_t sub_1C0907D40()
{
  unint64_t result = qword_1EA1A0E98;
  if (!qword_1EA1A0E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0E98);
  }
  return result;
}

uint64_t sub_1C0907D94()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907DAC()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0822190);
}

uint64_t sub_1C0907DC4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907DDC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907DF4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0861EDC, &qword_1EB86CD28, (void (*)(uint64_t))sub_1C0861EDC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0907E58()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0907E70()
{
  unint64_t result = qword_1EB85B5D8[0];
  if (!qword_1EB85B5D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB85B5D8);
  }
  return result;
}

uint64_t sub_1C0907EC4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907EDC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0907EF4()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0907F00()
{
  unint64_t result = qword_1EB8689E8;
  if (!qword_1EB8689E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8689E8);
  }
  return result;
}

uint64_t sub_1C0907F54()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0907F60()
{
  unint64_t result = qword_1EB86CB00;
  if (!qword_1EB86CB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CB00);
  }
  return result;
}

uint64_t sub_1C0907FB4()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C0907FC0()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0907FCC()
{
  unint64_t result = qword_1EA1A0EA0;
  if (!qword_1EA1A0EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0EA0);
  }
  return result;
}

uint64_t sub_1C0908020()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C090802C()
{
  unint64_t result = qword_1EB86A870;
  if (!qword_1EB86A870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A870);
  }
  return result;
}

uint64_t sub_1C0908080()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908098()
{
  return sub_1C09090D8((uint64_t)sub_1C07F3860, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C09080C4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09080DC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09080F4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0861A14, &qword_1EB891EC0, (void (*)(uint64_t))sub_1C0861A14, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0908158()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0908170()
{
  unint64_t result = qword_1EB8613A8;
  if (!qword_1EB8613A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8613A8);
  }
  return result;
}

uint64_t sub_1C09081C4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09081DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09081F4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090820C()
{
  return sub_1C08E4F84();
}

uint64_t sub_1C0908218()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0908224()
{
  unint64_t result = qword_1EB869B50;
  if (!qword_1EB869B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869B50);
  }
  return result;
}

uint64_t sub_1C0908278()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0908284()
{
  unint64_t result = qword_1EA1A0EA8;
  if (!qword_1EA1A0EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0EA8);
  }
  return result;
}

unint64_t sub_1C09082D8()
{
  unint64_t result = qword_1EA1A0EB8;
  if (!qword_1EA1A0EB8)
  {
    sub_1BFEFF3E8(255, &qword_1EA19D158, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0EB8);
  }
  return result;
}

unint64_t sub_1C0908368()
{
  unint64_t result = qword_1EA1A0EC0;
  if (!qword_1EA1A0EC0)
  {
    sub_1BFEFF3E8(255, qword_1EB8606E8, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0EC0);
  }
  return result;
}

unint64_t sub_1C09083F8()
{
  unint64_t result = qword_1EA1A0EC8;
  if (!qword_1EA1A0EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0EC8);
  }
  return result;
}

unint64_t sub_1C090844C()
{
  unint64_t result = qword_1EA1A0ED0;
  if (!qword_1EA1A0ED0)
  {
    sub_1BFEFF3E8(255, &qword_1EA19D140, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0ED0);
  }
  return result;
}

uint64_t sub_1C09084DC()
{
  return sub_1C08E51C4();
}

uint64_t sub_1C09084E8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908500()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908518()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0861570, &qword_1EB892600, (void (*)(uint64_t))sub_1C0861570, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C090857C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908594()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09085AC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C09085C4()
{
  if (!qword_1EB893198)
  {
    sub_1C0861570();
    sub_1C085F050(&qword_1EB892600, (void (*)(uint64_t))sub_1C0861570);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893198);
    }
  }
}

uint64_t sub_1C0908658()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0908664()
{
  unint64_t result = qword_1EA1A0ED8;
  if (!qword_1EA1A0ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0ED8);
  }
  return result;
}

unint64_t sub_1C09086B8()
{
  unint64_t result = qword_1EA1A0EE0;
  if (!qword_1EA1A0EE0)
  {
    sub_1BFEFF3E8(255, &qword_1EA19D128, (uint64_t (*)(void))sub_1C0861364, (uint64_t)&type metadata for FormatTagBinding.Bool, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0EE0);
  }
  return result;
}

uint64_t sub_1C0908748()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908760()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081DF04);
}

uint64_t sub_1C0908778()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908790()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09087A8()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C08610BC, &qword_1EB8921A0, (void (*)(uint64_t))sub_1C08610BC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C090880C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908824()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081E5DC);
}

uint64_t sub_1C090883C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908854()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090886C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0860DD4, &qword_1EB892140, (void (*)(uint64_t))sub_1C0860DD4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09088D0()
{
  return sub_1C0819588(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C09088F4()
{
  unint64_t result = qword_1EB866C40;
  if (!qword_1EB866C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866C40);
  }
  return result;
}

uint64_t sub_1C0908948()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908960()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C0823E58);
}

uint64_t sub_1C0908978()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908990()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0860B6C, &qword_1EB86CCE8, (void (*)(uint64_t))sub_1C0860B6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

void sub_1C09089F4()
{
  if (!qword_1EB86DEF8)
  {
    sub_1C0860B6C();
    sub_1C085F050(&qword_1EB86CCE8, (void (*)(uint64_t))sub_1C0860B6C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DEF8);
    }
  }
}

unint64_t sub_1C0908A88()
{
  unint64_t result = qword_1EA1A0EF0;
  if (!qword_1EA1A0EF0)
  {
    sub_1BFE309D0(255, &qword_1EA1A0EE8, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB320]);
    sub_1C085F050((unint64_t *)&qword_1EB884FD0, MEMORY[0x1E4FAAFC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0EF0);
  }
  return result;
}

uint64_t sub_1C0908B58()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908B70()
{
  return sub_1C08AC138((void (*)(uint64_t))sub_1C07530E0);
}

uint64_t sub_1C0908B88()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908BA0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908BB8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908BD0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908BE8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908C00()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908C18()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908C30()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908C48()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908C60()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908C78()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C086040C, &qword_1EB891BB0, (void (*)(uint64_t))sub_1C086040C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

void sub_1C0908CDC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1C15181BC();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0908D58()
{
  if (!qword_1EB892C70)
  {
    sub_1C086040C();
    sub_1C085F050(&qword_1EB891BB0, (void (*)(uint64_t))sub_1C086040C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB892C70);
    }
  }
}

unint64_t sub_1C0908DEC()
{
  unint64_t result = qword_1EB87C758;
  if (!qword_1EB87C758)
  {
    sub_1C0908CDC(255, &qword_1EB87C760, (void (*)(void))sub_1C006F494, (void (*)(void))sub_1C006F590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87C758);
  }
  return result;
}

uint64_t sub_1C0908E7C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0908E88()
{
  unint64_t result = qword_1EB862DC8;
  if (!qword_1EB862DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862DC8);
  }
  return result;
}

uint64_t sub_1C0908EDC()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0908EE8()
{
  unint64_t result = qword_1EA1A0F00;
  if (!qword_1EA1A0F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F00);
  }
  return result;
}

uint64_t sub_1C0908F3C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908F54()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908F6C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0908F84()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C085FEEC, &qword_1EB891D60, (void (*)(uint64_t))sub_1C085FEEC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0908FE8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0909000()
{
  return sub_1C09090D8((uint64_t)sub_1C07F7030, (uint64_t (*)(void, void, void, void, void, uint64_t))sub_1C081CA70);
}

uint64_t sub_1C090902C()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0909044()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C085FD2C, &qword_1EB892500, (void (*)(uint64_t))sub_1C085FD2C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09090A8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09090C0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09090D8(uint64_t a1, uint64_t (*a2)(void, void, void, void, void, uint64_t))
{
  return a2(*(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a1);
}

uint64_t sub_1C0909108()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

void sub_1C0909120()
{
  if (!qword_1EB893118)
  {
    sub_1C085FD2C();
    sub_1C085F050(&qword_1EB892500, (void (*)(uint64_t))sub_1C085FD2C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893118);
    }
  }
}

uint64_t sub_1C09091B4()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C09091C0()
{
  unint64_t result = qword_1EA1A0F08;
  if (!qword_1EA1A0F08)
  {
    sub_1BFEFF3E8(255, &qword_1EA19D108, (uint64_t (*)(void))sub_1C0073A80, (uint64_t)&type metadata for FormatSyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F08);
  }
  return result;
}

uint64_t sub_1C0909250()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C090925C()
{
  unint64_t result = qword_1EB861410;
  if (!qword_1EB861410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB861410);
  }
  return result;
}

unint64_t sub_1C09092B0()
{
  unint64_t result = qword_1EB863190;
  if (!qword_1EB863190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863190);
  }
  return result;
}

unint64_t sub_1C0909304()
{
  unint64_t result = qword_1EB863180;
  if (!qword_1EB863180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863180);
  }
  return result;
}

uint64_t sub_1C0909358()
{
  return sub_1C08E51C4();
}

unint64_t sub_1C0909364()
{
  unint64_t result = qword_1EB864738;
  if (!qword_1EB864738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864738);
  }
  return result;
}

uint64_t sub_1C09093B8()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09093D0()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081E6C8);
}

uint64_t sub_1C09093E8()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0909400()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C085F2A8, &qword_1EB86CDF8, (void (*)(uint64_t))sub_1C085F2A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C0909464()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090947C()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C0909488()
{
  unint64_t result = qword_1EB867660;
  if (!qword_1EB867660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867660);
  }
  return result;
}

uint64_t sub_1C09094DC()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09094F4()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C081FD68);
}

uint64_t sub_1C090950C()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0909524()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090953C()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C085EF24, &qword_1EB892060, (void (*)(uint64_t))sub_1C085EF24, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C09095A0()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C09095B8()
{
  return sub_1C08E4F84();
}

unint64_t sub_1C09095C4()
{
  unint64_t result = qword_1EB866E28;
  if (!qword_1EB866E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866E28);
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_290()
{
  return &_s10CodingKeysON_272;
}

ValueMetadata *_s10CodingTypeOMa_200()
{
  return &_s10CodingTypeON_199;
}

ValueMetadata *_s10CodingTypeOMa_201()
{
  return &_s10CodingTypeON_200;
}

unsigned char *_s10CodingTypeOwst_1_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C09096E4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s10CodingTypeOMa_202()
{
  return &_s10CodingTypeON_201;
}

uint64_t sub_1C090976C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0909788()
{
  return swift_getWitnessTable();
}

unint64_t sub_1C09097A8()
{
  unint64_t result = qword_1EA1A0F10;
  if (!qword_1EA1A0F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F10);
  }
  return result;
}

unint64_t sub_1C0909800()
{
  unint64_t result = qword_1EA1A0F18;
  if (!qword_1EA1A0F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F18);
  }
  return result;
}

uint64_t sub_1C0909854()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0909870()
{
  return swift_getWitnessTable();
}

unint64_t sub_1C0909890()
{
  unint64_t result = qword_1EA1A0F20;
  if (!qword_1EA1A0F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F20);
  }
  return result;
}

unint64_t sub_1C09098EC()
{
  unint64_t result = qword_1EA1A0F28;
  if (!qword_1EA1A0F28)
  {
    sub_1BFE9DEBC(255, &qword_1EA1A0F30, (uint64_t)&_s10CodingKeysON_272, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F28);
  }
  return result;
}

unint64_t sub_1C0909968()
{
  unint64_t result = qword_1EA1A0F38;
  if (!qword_1EA1A0F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F38);
  }
  return result;
}

unint64_t sub_1C09099BC()
{
  unint64_t result = qword_1EA1A0F40;
  if (!qword_1EA1A0F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F40);
  }
  return result;
}

void sub_1C0909A10()
{
  if (!qword_1EA1A0F48)
  {
    sub_1C0909AA4();
    sub_1C085F050(&qword_1EA1A0F70, (void (*)(uint64_t))sub_1C0909AA4);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0F48);
    }
  }
}

void sub_1C0909AA4()
{
  if (!qword_1EA1A0F50)
  {
    sub_1C0909B28();
    sub_1C0909B7C();
    sub_1C0909BD0();
    unint64_t v0 = type metadata accessor for FormatCodingKeysContainer();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0F50);
    }
  }
}

unint64_t sub_1C0909B28()
{
  unint64_t result = qword_1EA1A0F58;
  if (!qword_1EA1A0F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F58);
  }
  return result;
}

unint64_t sub_1C0909B7C()
{
  unint64_t result = qword_1EA1A0F60;
  if (!qword_1EA1A0F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F60);
  }
  return result;
}

unint64_t sub_1C0909BD0()
{
  unint64_t result = qword_1EA1A0F68;
  if (!qword_1EA1A0F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F68);
  }
  return result;
}

unint64_t sub_1C0909C24()
{
  unint64_t result = qword_1EB85FEB8;
  if (!qword_1EB85FEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FEB8);
  }
  return result;
}

unint64_t sub_1C0909C78()
{
  unint64_t result = qword_1EB879DB0;
  if (!qword_1EB879DB0)
  {
    sub_1BFE9DEBC(255, &qword_1EB879DA8, (uint64_t)&type metadata for FormatMenuItem, MEMORY[0x1E4FBB320]);
    sub_1C0081C98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879DB0);
  }
  return result;
}

uint64_t sub_1C0909D0C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0909D50()
{
  return sub_1C08E4F84();
}

void sub_1C0909D5C()
{
  if (!qword_1EA1A0F78)
  {
    sub_1C0909DF0();
    sub_1C085F050(&qword_1EA1A0F88, (void (*)(uint64_t))sub_1C0909DF0);
    unint64_t v0 = type metadata accessor for VersionedKeyedEncodingContainer();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0F78);
    }
  }
}

void sub_1C0909DF0()
{
  if (!qword_1EA1A0F80)
  {
    sub_1C0909AA4();
    sub_1C085F050(&qword_1EA1A0F70, (void (*)(uint64_t))sub_1C0909AA4);
    unint64_t v0 = sub_1C152083C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0F80);
    }
  }
}

uint64_t sub_1C0909E84()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0909E9C()
{
  return sub_1C090A0B4((uint64_t (*)(void, void, void, void, void))sub_1C08270DC);
}

uint64_t sub_1C0909EB4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0909ECC()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0909EE4()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

unint64_t sub_1C0909EFC()
{
  unint64_t result = qword_1EB85FEA8;
  if (!qword_1EB85FEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FEA8);
  }
  return result;
}

uint64_t sub_1C0909F50()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C0909F68()
{
  return objectdestroy_4073Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t objectdestroy_4073Tm(void (*a1)(void, void, void))
{
  swift_bridgeObjectRelease();
  a1(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_1C0909FD4()
{
  return sub_1C084DFD4(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(void))sub_1C0909AA4, &qword_1EA1A0F70, (void (*)(uint64_t))sub_1C0909AA4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C090B470);
}

uint64_t sub_1C090A038()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t sub_1C090A050()
{
  return objectdestroy_102Tm((void (*)(void, void, void))sub_1C090B46C);
}

uint64_t objectdestroy_102Tm(void (*a1)(void, void, void))
{
  a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C090A0B4(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

unsigned char *_s10CodingKeysOwst_7_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C090A198);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingTypeOMa_203()
{
  return &_s10CodingTypeON_202;
}

unsigned char *_s10CodingKeysOwst_9_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C090A29CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_295()
{
  return &_s10CodingKeysON_273;
}

unint64_t sub_1C090A2DC()
{
  unint64_t result = qword_1EA1A0F90;
  if (!qword_1EA1A0F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F90);
  }
  return result;
}

unint64_t sub_1C090A334()
{
  unint64_t result = qword_1EA1A0F98;
  if (!qword_1EA1A0F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0F98);
  }
  return result;
}

unint64_t sub_1C090A38C()
{
  unint64_t result = qword_1EA1A0FA0;
  if (!qword_1EA1A0FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0FA0);
  }
  return result;
}

unint64_t sub_1C090A3E4()
{
  unint64_t result = qword_1EA1A0FA8;
  if (!qword_1EA1A0FA8)
  {
    sub_1BFE9DEBC(255, &qword_1EA1A0FB0, (uint64_t)&_s10CodingKeysON_273, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0FA8);
  }
  return result;
}

void sub_1C090B47C(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v442 = a4;
  uint64_t v513 = a3;
  v440 = a2;
  uint64_t v438 = type metadata accessor for FormatPropertyDefinition(0);
  uint64_t v436 = *(void *)(v438 - 8);
  MEMORY[0x1F4188790](v438);
  uint64_t v437 = (uint64_t)&v422 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v422 - v7;
  sub_1BFFD5BA0();
  MEMORY[0x1F4188790](v9 - 8);
  long long v11 = (char *)&v422 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v14 = (char *)&v422 - v13;
  uint64_t v15 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v15);
  v17 = (uint64_t *)((char *)&v422 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  v20 = (uint64_t *)((char *)&v422 - v19);
  MEMORY[0x1F4188790](v21);
  v23 = (uint64_t *)((char *)&v422 - v22);
  MEMORY[0x1F4188790](v24);
  v435 = (uint64_t *)((char *)&v422 - v25);
  uint64_t v26 = type metadata accessor for FormatDerivedDataFile();
  MEMORY[0x1F4188790](v26 - 8);
  v28 = (char *)&v422 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v107 = swift_projectBox();
      sub_1BFFBA60C(v107, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      sub_1C0D8B0C8(v23, v513);
      sub_1BFFD5A1C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      return;
    case 2uLL:
      long long v59 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v60 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      long long v61 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      long long v495 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      long long v496 = v61;
      long long v493 = v59;
      long long v494 = v60;
      long long v492 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v62 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v63 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v64 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v65 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v67 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      v66 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v438 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      v439 = v66;
      uint64_t v437 = *(unsigned __int16 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x4C);
      uint64_t v436 = *(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x48);
      long long v442 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      sub_1C090FD3C((uint64_t)&v492);
      uint64_t v68 = v513;
      sub_1C0BFB22C((uint64_t *)&v492, (uint64_t)v461);
      sub_1C09103E0((uint64_t)v461, (uint64_t)v471, (uint64_t (*)(void))sub_1C090FDD0);
      if (sub_1C0263AB8((uint64_t)v471) == 1)
      {
        uint64_t v433 = v67;
        uint64_t v434 = v65;
        v435 = (uint64_t *)v64;
        uint64_t v69 = *v440;
        uint64_t v70 = v440[1];
        unsigned __int8 v71 = *((unsigned char *)v440 + 16);
        *(void *)&long long v456 = *v440;
        *((void *)&v456 + 1) = v70;
        LOBYTE(v457) = 1;
        *((void *)&v457 + 1) = MEMORY[0x1E4FBC860];
        long long v458 = MEMORY[0x1E4FBC860];
        uint64_t v459 = MEMORY[0x1E4FBC868];
        unint64_t v72 = MEMORY[0x1E4FBC870];
        uint64_t v460 = MEMORY[0x1E4FBC870];
        v452.i64[0] = MEMORY[0x1E4FBC870];
        v452.i64[1] = MEMORY[0x1E4FBC870];
        *(void *)&long long v453 = MEMORY[0x1E4FBC870];
        *((void *)&v453 + 1) = MEMORY[0x1E4FBC860];
        unint64_t v454 = MEMORY[0x1E4FBC870];
        uint64_t v455 = MEMORY[0x1E4FBC860];
        v491[9] = v494;
        v491[10] = v495;
        v491[8] = v493;
        v491[11] = v496;
        v512[0] = v496;
        uint64_t v73 = *(void *)(v496 + 16);
        if (v73)
        {
          v74 = (uint64_t *)(v496 + 32);
          sub_1C015F808(v69, v70, v71);
          sub_1BFFAF7A4((uint64_t)v512);
          uint64_t v75 = v441;
          do
          {
            uint64_t v76 = *v74++;
            swift_retain();
            sub_1C090B47C(v76, &v456, v68, &v452);
            if (v75)
            {
              sub_1BFCA59C8((uint64_t)v512);
              swift_release();
              sub_1C090FE28((uint64_t)&v492);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_132;
            }
            swift_release();
            --v73;
          }
          while (v73);
          v431 = v63;
          uint64_t v432 = v62;
          *(void *)&long long v441 = 0;
          sub_1BFCA59C8((uint64_t)v512);
          uint64_t v70 = *((void *)&v456 + 1);
          uint64_t v69 = v456;
          unsigned __int8 v77 = v457;
          uint64_t v427 = v458;
          *(void *)&long long v428 = *((void *)&v457 + 1);
          uint64_t v426 = *((void *)&v458 + 1);
          int64x2_t v429 = v452;
          unint64_t v72 = v454;
          long long v430 = v453;
          uint64_t v78 = v455;
        }
        else
        {
          v431 = v63;
          uint64_t v432 = v62;
          sub_1C015F808(v69, v70, v71);
          unsigned __int8 v77 = 1;
          uint64_t v78 = MEMORY[0x1E4FBC860];
          *(void *)&long long v430 = v72;
          *((void *)&v430 + 1) = MEMORY[0x1E4FBC860];
          int64x2_t v429 = vdupq_n_s64(v72);
          uint64_t v426 = MEMORY[0x1E4FBC868];
          uint64_t v427 = MEMORY[0x1E4FBC860];
          *(void *)&long long v428 = MEMORY[0x1E4FBC860];
        }
        uint64_t v228 = v436 | (v437 << 32);
        sub_1C015FB90(v69, v70, v77);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v444 = v432;
        *((void *)&v444 + 1) = v431;
        *(void *)&long long v445 = v435;
        *((void *)&v445 + 1) = v434;
        *(void *)&long long v446 = v433;
        *((void *)&v446 + 1) = v439;
        *(void *)&long long v447 = v438;
        WORD6(v447) = WORD2(v228);
        DWORD2(v447) = v228;
        long long v448 = v442;
        int64x2_t v449 = v429;
        long long v450 = v430;
        *(void *)&long long v451 = v72;
        *((void *)&v451 + 1) = v78;
        v491[4] = v442;
        v491[5] = (__int128)v429;
        v491[6] = v430;
        v491[7] = v451;
        v491[0] = v444;
        v491[1] = v445;
        v491[2] = v446;
        v491[3] = v447;
        long long v229 = v492;
        swift_bridgeObjectRetain();
        sub_1C090FEBC((uint64_t)&v444);
        v230 = v440;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v443 = v230[5];
        v230[5] = 0x8000000000000000;
        sub_1C106751C(v491, v229, *((uint64_t *)&v229 + 1), isUniquelyReferenced_nonNull_native);
        v230[5] = v443;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0BFB74C((uint64_t)v491);
        sub_1C090FFA8((uint64_t)&v444);
      }
      else
      {
        v472[4] = v471[4];
        v472[5] = v471[5];
        v472[6] = v471[6];
        v472[7] = v471[7];
        v472[0] = v471[0];
        v472[1] = v471[1];
        v472[2] = v471[2];
        v472[3] = v471[3];
        sub_1C090FE28((uint64_t)&v492);
        long long v148 = v472[0];
        swift_bridgeObjectRetain();
        sub_1C0910190(v461, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0910094);
        v149 = v440;
        char v150 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v444 = v149[5];
        v149[5] = 0x8000000000000000;
        sub_1C106751C(v472, v148, *((uint64_t *)&v148 + 1), v150);
        v149[5] = v444;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0910190(v461, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C09101F4);
      }
      return;
    case 3uLL:
      v79 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v438 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      v439 = v79;
      uint64_t v80 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v436 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v437 = v80;
      uint64_t v82 = v440[1];
      unsigned __int8 v83 = *((unsigned char *)v440 + 16);
      v84 = (void *)v440[3];
      uint64_t v85 = v440[4];
      uint64_t v86 = v440[5];
      uint64_t v87 = v440[6];
      uint64_t v88 = v440[7];
      *(void *)&long long v444 = *v440;
      uint64_t v81 = v444;
      *((void *)&v444 + 1) = v82;
      LOBYTE(v445) = v83;
      *((void *)&v445 + 1) = v84;
      *(void *)&long long v446 = v85;
      *((void *)&v446 + 1) = v86;
      *(void *)&long long v447 = v87;
      *((void *)&v447 + 1) = v88;
      sub_1C015F808(v444, v82, v83);
      v440 = v84;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C0F4D530((uint64_t)v439, v438, v437, v436, (uint64_t)&v444, v513);
      sub_1C015FB90(v81, v82, v83);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 4uLL:
      uint64_t v52 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v51 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C((uint64_t *)&v444, v52, v51);
      goto LABEL_39;
    case 5uLL:
      uint64_t v108 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v109 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v110 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      sub_1C015F808(v108, v109, v110);
      sub_1C015F808(v108, v109, v110);
      sub_1C02B6D90((uint64_t)&v444, v108, v109, v110);
      sub_1C015FB90(v444, *((uint64_t *)&v444 + 1), v445);
      *(void *)&long long v444 = v108;
      *((void *)&v444 + 1) = v109;
      LOBYTE(v445) = 0x40102u >> (8 * v110);
      uint64_t v111 = v441;
      sub_1C090F9C0((uint64_t)&v444, v513, &v462);
      if (v111)
      {
        sub_1C015FB90(v108, v109, v110);
      }
      else
      {
        sub_1C015FB90(v108, v109, v110);
        long long v456 = v462;
        long long v457 = v463;
        long long v458 = v464;
        uint64_t v477 = *((void *)&v462 + 1);
        uint64_t v478 = v462;
        uint64_t v438 = *((void *)&v463 + 1);
        uint64_t v475 = *((void *)&v463 + 1);
        uint64_t v476 = v463;
        uint64_t v473 = *((void *)&v464 + 1);
        uint64_t v474 = v464;
        v193 = v440;
        uint64_t v195 = *v440;
        uint64_t v194 = v440[1];
        *(void *)&long long v441 = 0;
        uint64_t v437 = v194;
        unsigned __int8 v196 = *((unsigned char *)v440 + 16);
        uint64_t v198 = v440[3];
        uint64_t v197 = v440[4];
        uint64_t v199 = v440[5];
        uint64_t v200 = v440[6];
        uint64_t v201 = v440[7];
        *(void *)&long long v444 = v195;
        *((void *)&v444 + 1) = v194;
        LOBYTE(v445) = v196;
        *((void *)&v445 + 1) = v198;
        *(void *)&long long v446 = v197;
        *((void *)&v446 + 1) = v199;
        *(void *)&long long v447 = v200;
        *((void *)&v447 + 1) = v201;
        sub_1BFFAF7A4((uint64_t)&v478);
        sub_1BFFAF7A4((uint64_t)&v477);
        sub_1BFFAF7A4((uint64_t)&v476);
        sub_1BFFAF7A4((uint64_t)&v475);
        sub_1BFFAF7A4((uint64_t)&v474);
        sub_1BFFAF7A4((uint64_t)&v473);
        v435 = (uint64_t *)v195;
        uint64_t v202 = v195;
        uint64_t v203 = v437;
        sub_1C015F808(v202, v437, v196);
        uint64_t v436 = v198;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v434 = v201;
        swift_bridgeObjectRetain();
        uint64_t v204 = v441;
        sub_1C090F0E8(v442, (uint64_t)&v456, v438, (uint64_t)&v444, v513);
        *(void *)&long long v441 = v204;
        if (v204)
        {
          sub_1BFCA59C8((uint64_t)&v478);
          sub_1BFCA59C8((uint64_t)&v477);
          sub_1BFCA59C8((uint64_t)&v476);
          sub_1BFCA59C8((uint64_t)&v475);
          sub_1BFCA59C8((uint64_t)&v474);
          sub_1BFCA59C8((uint64_t)&v473);
          sub_1C015FB90((uint64_t)v435, v203, v196);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_39:
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1C015FB90((uint64_t)v435, v203, v196);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFCA59C8((uint64_t)&v478);
          sub_1BFCA59C8((uint64_t)&v477);
          sub_1BFCA59C8((uint64_t)&v476);
          sub_1BFCA59C8((uint64_t)&v475);
          sub_1BFCA59C8((uint64_t)&v474);
          sub_1BFCA59C8((uint64_t)&v473);
          long long v497 = v456;
          long long v498 = v457;
          long long v499 = v458;
          uint64_t v253 = *v193;
          uint64_t v254 = v193[1];
          unsigned __int8 v255 = *((unsigned char *)v193 + 16);
          v256 = (void *)v193[4];
          uint64_t v257 = v193[5];
          uint64_t v258 = v193[6];
          uint64_t v259 = v193[7];
          uint64_t v260 = v193[3];
          *(void *)&long long v444 = v253;
          *((void *)&v444 + 1) = v254;
          LOBYTE(v445) = v255;
          *((void *)&v445 + 1) = v260;
          *(void *)&long long v446 = v256;
          *((void *)&v446 + 1) = v257;
          *(void *)&long long v447 = v258;
          *((void *)&v447 + 1) = v259;
          sub_1C015F808(v253, v254, v255);
          swift_bridgeObjectRetain();
          v440 = v256;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v261 = v441;
          sub_1C0F4D844(&v497, &v444, v513);
          sub_1C015FB90(v253, v254, v255);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v261)
          {
            uint64_t v506 = v497;
            sub_1BFCA59C8((uint64_t)&v506);
            uint64_t v507 = *((void *)&v497 + 1);
            sub_1BFCA59C8((uint64_t)&v507);
            uint64_t v508 = v498;
            sub_1BFCA59C8((uint64_t)&v508);
            uint64_t v509 = *((void *)&v498 + 1);
            sub_1BFCA59C8((uint64_t)&v509);
            uint64_t v510 = v499;
            sub_1BFCA59C8((uint64_t)&v510);
            uint64_t v511 = *((void *)&v499 + 1);
            v262 = &v511;
          }
          else
          {
            uint64_t v500 = v497;
            sub_1BFCA59C8((uint64_t)&v500);
            uint64_t v501 = *((void *)&v497 + 1);
            sub_1BFCA59C8((uint64_t)&v501);
            uint64_t v502 = v498;
            sub_1BFCA59C8((uint64_t)&v502);
            uint64_t v503 = *((void *)&v498 + 1);
            sub_1BFCA59C8((uint64_t)&v503);
            uint64_t v504 = v499;
            sub_1BFCA59C8((uint64_t)&v504);
            uint64_t v505 = *((void *)&v499 + 1);
            v262 = &v505;
          }
          sub_1BFCA59C8((uint64_t)v262);
        }
      }
      return;
    case 6uLL:
      uint64_t v436 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v112 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      LODWORD(v435) = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v114 = *v440;
      uint64_t v113 = v440[1];
      unsigned __int8 v115 = *((unsigned char *)v440 + 16);
      uint64_t v116 = v440[3];
      v117 = (void *)v440[4];
      v118 = (void *)v440[5];
      uint64_t v119 = v440[6];
      uint64_t v120 = v440[7];
      uint64_t v433 = *(void *)(v442 + 24);
      uint64_t v434 = v112;
      sub_1C015F808(v114, v113, v115);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v437 = v114;
      uint64_t v121 = v114;
      uint64_t v122 = v113;
      v123 = (void *)v433;
      sub_1C015F808(v121, v122, v115);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v440 = v118;
      uint64_t v124 = v434;
      swift_bridgeObjectRetain();
      uint64_t v438 = v119;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v125 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v513 = v116;
      v439 = v117;
      if ((v125 & 1) == 0) {
        v123 = sub_1C0EE48B4(0, v123[2] + 1, 1, v123);
      }
      unint64_t v127 = v123[2];
      unint64_t v126 = v123[3];
      if (v127 >= v126 >> 1) {
        v123 = sub_1C0EE48B4((void *)(v126 > 1), v127 + 1, 1, v123);
      }
      v123[2] = v127 + 1;
      v128 = &v123[11 * v127];
      uint64_t v129 = v437;
      v128[4] = v436;
      v128[5] = v124;
      *((unsigned char *)v128 + 48) = (_BYTE)v435;
      v128[7] = v129;
      v128[8] = v122;
      *((unsigned char *)v128 + 72) = v115;
      v130 = v439;
      v131 = v440;
      v128[10] = v513;
      v128[11] = v130;
      uint64_t v132 = v438;
      v128[12] = v131;
      v128[13] = v132;
      v128[14] = v120;
      sub_1C015FB90(v129, v122, v115);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v442 + 24) = v123;
      return;
    case 7uLL:
      v89 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      v435 = *(uint64_t **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v439 = v89;
      if ((unint64_t)v89 < 0xF)
      {
        v90 = v440;
        goto LABEL_22;
      }
      v151 = (void *)(*(void *)(v513 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
      swift_beginAccess();
      v153 = (void *)*v151;
      uint64_t v152 = v151[1];
      if (*(void *)(v152 + 16))
      {
        v431 = v153;
        uint64_t v154 = (uint64_t)v435;
        uint64_t v155 = v152;
        v156 = v439;
        sub_1BFE74E64((uint64_t)v435, (unint64_t)v439);
        sub_1BFE74E64(v154, (unint64_t)v156);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v157 = sub_1BFEF2D8C(v154, (uint64_t)v156);
        v429.i64[0] = v155;
        if (v158)
        {
          uint64_t v159 = *(void *)(v155 + 56);
          uint64_t v433 = v157;
          uint64_t v434 = v159;
          sub_1BFFD595C();
          uint64_t v161 = v160;
          uint64_t v162 = *(void *)(v160 - 8);
          sub_1BFFBA60C(v434 + *(void *)(v162 + 72) * v433, (uint64_t)v14, (uint64_t (*)(void))sub_1BFFD595C);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v14, 0, 1, v161);
        }
        else
        {
          sub_1BFFD595C();
          uint64_t v161 = v233;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v233 - 8) + 56))(v14, 1, 1, v233);
        }
        sub_1BFF8F648((uint64_t)v435, (unint64_t)v439);
        sub_1BFFD595C();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v161 - 8) + 48))(v14, 1, v161) != 1)
        {
          uint64_t v240 = *(void *)v14;
          uint64_t v241 = *((void *)v14 + 1);
          uint64_t v242 = *((void *)v14 + 3);
          uint64_t v423 = *((void *)v14 + 2);
          v424 = (char *)v240;
          uint64_t v243 = *((void *)v14 + 5);
          uint64_t v434 = *((void *)v14 + 4);
          uint64_t v244 = *((void *)v14 + 6);
          uint64_t v432 = v241;
          uint64_t v433 = v244;
          uint64_t v245 = *((void *)v14 + 8);
          *(void *)&long long v428 = *((void *)v14 + 7);
          uint64_t v246 = *((void *)v14 + 9);
          LODWORD(v425) = v14[80];
          *(void *)&long long v430 = v242;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          *((void *)&v430 + 1) = v243;
          uint64_t v247 = v243;
          uint64_t v248 = v433;
          uint64_t v426 = v246;
          uint64_t v427 = v245;
          int v249 = v425;
          sub_1BFF1DB64(v434, v247, v433, v428, v245, v246, v425);
          uint64_t v250 = (uint64_t)v14;
          unsigned __int8 v239 = v249;
          sub_1BFFD5A1C(v250, (uint64_t (*)(void))sub_1BFFD595C);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v249 < 0)
          {
            uint64_t v346 = v434;
            sub_1BFF1DB64(v434, *((uint64_t *)&v430 + 1), v248, v428, v427, v426, v239);
            sub_1BFF8F648((uint64_t)v435, (unint64_t)v439);
            uint64_t v347 = *(void *)(v346 + 16);
            if (v347)
            {
              uint64_t v348 = v346
                   + ((*(unsigned __int8 *)(v436 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v436 + 80));
              v431 = v17 + 3;
              v429.i64[0] = *(void *)(v436 + 72);
              while (1)
              {
                uint64_t v436 = v347;
                sub_1BFFBA60C(v348, (uint64_t)v8, type metadata accessor for FormatPropertyDefinition);
                uint64_t *v17 = FormatPropertyDefinition.identifier.getter();
                v17[1] = v349;
                uint64_t v350 = v437;
                sub_1BFFBA60C((uint64_t)v8, v437, type metadata accessor for FormatPropertyDefinition);
                uint64_t v351 = qword_1C157B950[(int)swift_getEnumCaseMultiPayload()];
                sub_1BFFD5A1C(v350, type metadata accessor for FormatPropertyDefinition);
                v17[2] = v351;
                v90 = v440;
                v352 = v431;
                void *v431 = 0;
                v352[1] = 0;
                *((unsigned char *)v352 + 16) = 0;
                sub_1BFFD5A1C((uint64_t)v8, type metadata accessor for FormatPropertyDefinition);
                v17[6] = MEMORY[0x1E4FBC860];
                v353 = (char *)v17 + *(int *)(v15 + 28);
                uint64_t v354 = type metadata accessor for FormatVersionRequirement(0);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v354 - 8) + 56))(v353, 1, 1, v354);
                sub_1C09103E0((uint64_t)v17, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
                uint64_t v355 = v441;
                sub_1C0D8B0C8(v20, v513);
                *(void *)&long long v441 = v355;
                if (v355) {
                  break;
                }
                sub_1BFFD5A1C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
                v348 += v429.i64[0];
                uint64_t v347 = v436 - 1;
                if (v436 == 1) {
                  goto LABEL_179;
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v384 = v433;
              uint64_t v383 = v434;
              uint64_t v385 = *((void *)&v430 + 1);
              uint64_t v387 = v427;
              uint64_t v386 = v428;
              uint64_t v388 = v426;
              unsigned __int8 v389 = v425;
              sub_1BFEC28BC(v434, *((uint64_t *)&v430 + 1), v433, v428, v427, v426, v425);
              sub_1BFFD5A1C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
              sub_1BFEC28BC(v383, v385, v384, v386, v387, v388, v389);
              return;
            }
            v90 = v440;
LABEL_179:
            uint64_t v366 = v433;
            uint64_t v365 = v434;
            uint64_t v367 = *((void *)&v430 + 1);
            uint64_t v369 = v427;
            uint64_t v368 = v428;
            uint64_t v370 = v426;
            unsigned __int8 v371 = v425;
            sub_1BFEC28BC(v434, *((uint64_t *)&v430 + 1), v433, v428, v427, v426, v425);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFEC28BC(v365, v367, v366, v368, v369, v370, v371);
LABEL_22:
            uint64_t v91 = *v90;
            uint64_t v92 = v90[1];
            LODWORD(v437) = *((unsigned __int8 *)v90 + 16);
            uint64_t v94 = v90[3];
            uint64_t v93 = v90[4];
            v95 = (void *)v90[6];
            uint64_t v96 = v90[5];
            v97 = *(void **)(v442 + 40);
            sub_1BFE74E64((uint64_t)v435, (unint64_t)v439);
            uint64_t v436 = v91;
            uint64_t v438 = v92;
            uint64_t v98 = v92;
            unsigned __int8 v99 = v437;
            sub_1C015F808(v91, v98, v437);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            uint64_t v513 = v96;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v100 = swift_isUniquelyReferenced_nonNull_native();
            v440 = v95;
            uint64_t v101 = v436;
            if ((v100 & 1) == 0) {
              v97 = sub_1C0EE4A00(0, v97[2] + 1, 1, v97);
            }
            unint64_t v103 = v97[2];
            unint64_t v102 = v97[3];
            if (v103 >= v102 >> 1) {
              v97 = sub_1C0EE4A00((void *)(v102 > 1), v103 + 1, 1, v97);
            }
            v97[2] = v103 + 1;
            v104 = &v97[4 * v103];
            v104[4] = v94;
            v104[5] = v93;
            uint64_t v105 = v438;
            v106 = v439;
            v104[6] = v435;
            v104[7] = v106;
            sub_1C015FB90(v101, v105, v99);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)(v442 + 40) = v97;
            return;
          }
          uint64_t v237 = v427;
          uint64_t v236 = v428;
          uint64_t v238 = v426;
          uint64_t v235 = v423;
          uint64_t v234 = (uint64_t)v424;
LABEL_102:
          type metadata accessor for FormatLayoutError();
          sub_1C090EA08((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
          swift_allocError();
          v251 = v439;
          *v252 = v435;
          v252[1] = v251;
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1C090FCA8(v234, v432, v235, v430, v434, *((uint64_t *)&v430 + 1), v433, v236, v237, v238, v239);
          return;
        }
      }
      else
      {
        sub_1BFFD595C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v232 - 8) + 56))(v14, 1, 1, v232);
        sub_1BFE74E64((uint64_t)v435, (unint64_t)v439);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BFFD5A1C((uint64_t)v14, (uint64_t (*)(void))sub_1BFFD5BA0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v234 = 0;
      uint64_t v432 = 0;
      uint64_t v433 = 0;
      uint64_t v235 = 0;
      long long v430 = 0uLL;
      uint64_t v434 = 0;
      uint64_t v236 = 0;
      uint64_t v237 = 0;
      uint64_t v238 = 0;
      unsigned __int8 v239 = 0;
      goto LABEL_102;
    case 8uLL:
      uint64_t v47 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v46 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_bridgeObjectRetain_n();
      v146 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      id v147 = objc_msgSend(self, sel_systemImageNamed_, v146);

      if (v147) {
        goto LABEL_39;
      }
      goto LABEL_5;
    case 9uLL:
      uint64_t v54 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v53 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      v56 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v55 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      if (!v55)
      {
        id v57 = objc_msgSend(self, sel_mainBundle);
        if (!v57)
        {
LABEL_7:
          type metadata accessor for FormatDerivedDataError();
          sub_1C090EA08((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
          swift_allocError();
          goto LABEL_175;
        }
        goto LABEL_54;
      }
      if (qword_1EB8881F8 != -1) {
        goto LABEL_218;
      }
      goto LABEL_10;
    case 0xAuLL:
      uint64_t v134 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v133 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v437 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v135 = *(void *)(v513 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types;
      swift_beginAccess();
      uint64_t v136 = *(void *)(v135 + 8);
      if (!*(void *)(v136 + 16))
      {
        sub_1BFFD595C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v205 - 8) + 56))(v11, 1, 1, v205);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_62:
        sub_1BFFD5A1C((uint64_t)v11, (uint64_t (*)(void))sub_1BFFD5BA0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_92:
        type metadata accessor for FormatLayoutError();
        sub_1C090EA08((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        uint64_t *v227 = v134;
        v227[1] = v133;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        goto LABEL_176;
      }
      v439 = *(void **)v135;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v137 = sub_1BFEF2D8C(v134, v133);
      uint64_t v438 = v133;
      if (v138)
      {
        unint64_t v139 = v137;
        uint64_t v140 = v134;
        uint64_t v141 = *(void *)(v136 + 56);
        sub_1BFFD595C();
        uint64_t v143 = v142;
        uint64_t v144 = *(void *)(v142 - 8);
        uint64_t v145 = v141 + *(void *)(v144 + 72) * v139;
        uint64_t v134 = v140;
        sub_1BFFBA60C(v145, (uint64_t)v11, (uint64_t (*)(void))sub_1BFFD595C);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v11, 0, 1, v143);
        uint64_t v133 = v438;
      }
      else
      {
        sub_1BFFD595C();
        uint64_t v143 = v206;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v206 - 8) + 56))(v11, 1, 1, v206);
      }
      swift_bridgeObjectRelease();
      sub_1BFFD595C();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v143 - 8) + 48))(v11, 1, v143) == 1) {
        goto LABEL_62;
      }
      uint64_t v207 = *((void *)v11 + 1);
      v208 = (void *)*((void *)v11 + 3);
      uint64_t v209 = *((void *)v11 + 4);
      *((void *)&v430 + 1) = v134;
      v431 = v208;
      uint64_t v211 = *((void *)v11 + 5);
      uint64_t v210 = *((void *)v11 + 6);
      uint64_t v432 = v207;
      uint64_t v433 = v211;
      uint64_t v212 = *((void *)v11 + 7);
      uint64_t v213 = *((void *)v11 + 8);
      uint64_t v434 = v210;
      v435 = (uint64_t *)v212;
      uint64_t v55 = *((void *)v11 + 9);
      unsigned int v214 = v11[80];
      LODWORD(v436) = v214 >> 6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v215 = v210;
      uint64_t v216 = (uint64_t)v435;
      sub_1BFF1DB64(v209, v211, v215, (uint64_t)v435, v213, v55, v214);
      sub_1BFFD5A1C((uint64_t)v11, (uint64_t (*)(void))sub_1BFFD595C);
      uint64_t v217 = v216;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v56 = (void *)v433;
      uint64_t v54 = v434;
      sub_1BFF1DB64(v209, v433, v434, v217, v213, v55, v214);
      v218 = (void *)v209;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(v209, (uint64_t)v56, v54, v217, v213, v55, v214);
      if (v436 != 1)
      {
        sub_1BFEC28BC(v209, (uint64_t)v56, v54, v217, v213, v55, v214);
        uint64_t v133 = v438;
        uint64_t v134 = *((void *)&v430 + 1);
        goto LABEL_92;
      }
      uint64_t v219 = v437;
      uint64_t v220 = *(void *)(v437 + 16);
      v439 = v218;
      uint64_t v436 = v220;
      *(void *)&long long v430 = v213;
      if (!v220) {
        goto LABEL_181;
      }
      LODWORD(v431) = v214;
      v53 = *(void **)(v437 + 32);
      uint64_t v221 = *(void *)(v437 + 40);
      uint64_t v432 = v218[2];
      v429.i64[0] = v55;
      if (!v432)
      {
        swift_bridgeObjectRetain();
        goto LABEL_174;
      }
      swift_bridgeObjectRetain();
      *(void *)&long long v428 = v218 + 9;
      for (unint64_t i = 1; ; ++i)
      {
        swift_bridgeObjectRetain();
        BOOL v223 = (void *)v439[4] == v53 && v439[5] == v221;
        if (!v223 && (sub_1C1520A9C() & 1) == 0)
        {
          if (v432 == 1) {
            goto LABEL_88;
          }
          if (((void *)v439[6] != v53 || v439[7] != v221) && (sub_1C1520A9C() & 1) == 0)
          {
            if (v432 != 2)
            {
              v56 = (void *)v428;
              uint64_t v55 = 2;
              while (1)
              {
                uint64_t v54 = v55 + 1;
                if (__OFADD__(v55, 1)) {
                  break;
                }
                BOOL v225 = (void *)*(v56 - 1) == v53 && *v56 == v221;
                if (v225 || (sub_1C1520A9C() & 1) != 0) {
                  goto LABEL_76;
                }
                v56 += 2;
                ++v55;
                if (v54 == v432) {
                  goto LABEL_88;
                }
              }
              __break(1u);
LABEL_220:
              v53 = sub_1C0EE09B8(0, v53[2] + 1, 1, v53);
LABEL_46:
              uint64_t v44 = v441;
              unint64_t v171 = v53[2];
              unint64_t v170 = v53[3];
              uint64_t v173 = v437;
              uint64_t v172 = v438;
              if (v171 >= v170 >> 1)
              {
                v418 = sub_1C0EE09B8((void *)(v170 > 1), v171 + 1, 1, v53);
                uint64_t v173 = v437;
                uint64_t v172 = v438;
                v53 = v418;
              }
              uint64_t v174 = v436 & 1;
              v53[2] = v171 + 1;
              v175 = &v53[3 * v171];
              v175[4] = v173;
              v175[5] = v172;
              *((unsigned char *)v175 + 48) = (_BYTE)v435;
              *((void *)&v457 + 1) = v53;
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                *((void *)&v430 + 1) = sub_1C0EE4770(0, *(void *)(*((void *)&v430 + 1) + 16) + 1, 1, *((void **)&v430 + 1));
              }
              uint64_t v45 = v513;
              unint64_t v177 = *(void *)(*((void *)&v430 + 1) + 16);
              unint64_t v176 = *(void *)(*((void *)&v430 + 1) + 24);
              uint64_t v179 = v437;
              uint64_t v178 = v438;
              if (v177 >= v176 >> 1)
              {
                v419 = sub_1C0EE4770((void *)(v176 > 1), v177 + 1, 1, *((void **)&v430 + 1));
                uint64_t v179 = v437;
                uint64_t v178 = v438;
                *((void *)&v430 + 1) = v419;
              }
              v180 = (void *)*((void *)&v430 + 1);
              *(void *)(*((void *)&v430 + 1) + 16) = v177 + 1;
              v181 = &v180[6 * v177];
              v181[4] = v179;
              v181[5] = v178;
              v181[7] = 0;
              v181[8] = 0;
              v181[6] = v174;
              *(void *)((char *)v181 + 70) = 0;
              uint64_t v182 = v436;
              uint64_t v183 = v434;
              uint64_t v184 = v429.i64[0];
              sub_1C017F59C(v179, v178, v436, v55, v434, v429.u64[0]);
              uint64_t v185 = v179;
              uint64_t v186 = v438;
              uint64_t v187 = v182;
              uint64_t v188 = v55;
              uint64_t v189 = v183;
LABEL_113:
              unint64_t v273 = v184;
LABEL_119:
              sub_1C017F59C(v185, v186, v187, v188, v189, v273);
              *(void *)&long long v458 = v180;
              goto LABEL_127;
            }
LABEL_88:
            swift_bridgeObjectRelease();
LABEL_174:
            type metadata accessor for FormatDerivedDataError();
            sub_1C090EA08((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
            swift_allocError();
            *(void *)uint64_t v361 = v53;
            *(void *)(v361 + 8) = v221;
            uint64_t v362 = v433;
            *(void *)(v361 + 16) = v439;
            *(void *)(v361 + 24) = v362;
            uint64_t v363 = (uint64_t)v435;
            *(void *)(v361 + 32) = v434;
            *(void *)(v361 + 40) = v363;
            uint64_t v364 = v429.i64[0];
            *(void *)(v361 + 48) = v430;
            *(void *)(v361 + 56) = v364;
            *(unsigned char *)(v361 + 64) = v431 & 1;
LABEL_175:
            swift_storeEnumTagMultiPayload();
            goto LABEL_176;
          }
        }
LABEL_76:
        swift_bridgeObjectRelease();
        if (i == v436)
        {
          swift_bridgeObjectRelease();
          unsigned int v214 = v431;
          uint64_t v55 = v429.i64[0];
          uint64_t v54 = v434;
          uint64_t v217 = (uint64_t)v435;
          v56 = (void *)v433;
LABEL_181:
          *(void *)&long long v444 = *((void *)&v430 + 1);
          *((void *)&v444 + 1) = v438;
          LOBYTE(v445) = 5;
          swift_bridgeObjectRetain();
          uint64_t v372 = v441;
          sub_1C090F9C0((uint64_t)&v444, v513, &v465);
          if (v372)
          {
            swift_bridgeObjectRelease();
            sub_1BFEC28BC((uint64_t)v439, (uint64_t)v56, v54, v217, v430, v55, v214);
          }
          else
          {
            v429.i64[0] = v55;
            LODWORD(v431) = v214;
            swift_bridgeObjectRelease();
            *(void *)&long long v441 = 0;
            uint64_t v374 = v440[1];
            unsigned __int8 v375 = *((unsigned char *)v440 + 16);
            uint64_t v376 = v440[3];
            uint64_t v377 = v440[4];
            v378 = (void *)v440[5];
            uint64_t v379 = v440[6];
            uint64_t v380 = v440[7];
            *(void *)&long long v444 = *v440;
            uint64_t v373 = v444;
            *((void *)&v444 + 1) = v374;
            LOBYTE(v445) = v375;
            *((void *)&v445 + 1) = v376;
            *(void *)&long long v446 = v377;
            *((void *)&v446 + 1) = v378;
            *(void *)&long long v447 = v379;
            *((void *)&v447 + 1) = v380;
            sub_1C015F808(v444, v374, v375);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v440 = v378;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v381 = v441;
            sub_1C0F4D844(&v465, &v444, v513);
            sub_1C015FB90(v373, v374, v375);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v381)
            {
              uint64_t v490 = v465;
              sub_1BFCA59C8((uint64_t)&v490);
              uint64_t v489 = v466;
              sub_1BFCA59C8((uint64_t)&v489);
              uint64_t v488 = v467;
              sub_1BFCA59C8((uint64_t)&v488);
              uint64_t v487 = v468;
              sub_1BFCA59C8((uint64_t)&v487);
              uint64_t v486 = v469;
              sub_1BFCA59C8((uint64_t)&v486);
              uint64_t v485 = v470;
              v382 = &v485;
            }
            else
            {
              uint64_t v484 = v465;
              sub_1BFCA59C8((uint64_t)&v484);
              uint64_t v483 = v466;
              sub_1BFCA59C8((uint64_t)&v483);
              uint64_t v482 = v467;
              sub_1BFCA59C8((uint64_t)&v482);
              uint64_t v481 = v468;
              sub_1BFCA59C8((uint64_t)&v481);
              uint64_t v480 = v469;
              sub_1BFCA59C8((uint64_t)&v480);
              uint64_t v479 = v470;
              v382 = &v479;
            }
            sub_1BFCA59C8((uint64_t)v382);
            sub_1BFEC28BC((uint64_t)v439, v433, v434, (uint64_t)v435, v430, v429.i64[0], v431);
          }
          return;
        }
        if (i >= *(void *)(v219 + 16)) {
          break;
        }
        uint64_t v224 = v219 + 32 + 16 * i;
        v53 = *(void **)v224;
        uint64_t v221 = *(void *)(v224 + 8);
      }
      __break(1u);
LABEL_218:
      swift_once();
LABEL_10:
      id v57 = sub_1BFF9A0FC((uint64_t)v56, v55);
      if (!v57)
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1C090EA08((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
        swift_allocError();
        void *v58 = v56;
        v58[1] = v55;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
LABEL_176:
        swift_willThrow();
        return;
      }
LABEL_54:
      id v190 = v57;
      swift_bridgeObjectRetain();
      v191 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      id v192 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v191, v190, 0);

      if (v192)
      {
      }
      else
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1C090EA08((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
        swift_allocError();
        if (v55)
        {
          uint64_t *v226 = (uint64_t)v56;
          v226[1] = v55;
          v226[2] = v54;
          v226[3] = (uint64_t)v53;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t *v226 = v54;
          v226[1] = (uint64_t)v53;
          swift_storeEnumTagMultiPayload();
        }
        swift_bridgeObjectRetain();
        swift_willThrow();
      }
      return;
    case 0xBuLL:
      uint64_t v47 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v46 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_bridgeObjectRetain_n();
      v48 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      id v49 = objc_msgSend(self, sel_fontWithName_size_, v48, 17.0);

      if (v49) {
        goto LABEL_39;
      }
LABEL_5:
      type metadata accessor for FormatDerivedDataError();
      sub_1C090EA08((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      void *v50 = v47;
      v50[1] = v46;
      goto LABEL_175;
    case 0xCuLL:
      goto LABEL_7;
    default:
      uint64_t v30 = *(void *)(a1 + 16);
      uint64_t v29 = *(void *)(a1 + 24);
      long long v31 = *(_OWORD *)(a1 + 32);
      uint64_t v32 = *(void *)(a1 + 48);
      unsigned int v33 = *(unsigned __int16 *)(a1 + 60);
      uint64_t v34 = *(unsigned int *)(a1 + 56);
      v35 = *(void **)(a1 + 64);
      uint64_t v36 = *v440;
      uint64_t v37 = v440[1];
      int v38 = *((unsigned __int8 *)v440 + 16);
      v39 = (void *)v440[3];
      v40 = (void *)v440[4];
      uint64_t v42 = v440[5];
      uint64_t v41 = v440[6];
      uint64_t v43 = v440[7];
      *(void *)&long long v456 = *v440;
      *((void *)&v456 + 1) = v37;
      LOBYTE(v457) = v38;
      *((void *)&v457 + 1) = v39;
      *(void *)&long long v458 = v40;
      *((void *)&v458 + 1) = v42;
      uint64_t v459 = v41;
      uint64_t v460 = v43;
      if (v33 >> 9 > 0x7EuLL)
      {
        sub_1C015F808(v36, v37, v38);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v44 = v441;
        uint64_t v45 = v513;
        goto LABEL_128;
      }
      uint64_t v436 = v42;
      uint64_t v437 = v30;
      v440 = v39;
      unint64_t v163 = v34 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v33 << 32);
      uint64_t v438 = v29;
      switch(v163 >> 45)
      {
        case 1uLL:
          v431 = v35;
          long long v306 = v31;
          uint64_t v427 = v43;
          uint64_t v307 = v36;
          LODWORD(v432) = v38;
          uint64_t v433 = v41;
          uint64_t v308 = v37;
          sub_1C017F510(v30, v29, v31, *((uint64_t *)&v31 + 1), v32, v163);
          sub_1C015F808(v307, v308, v432);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v440 = (void *)*((void *)&v306 + 1);
          uint64_t v434 = v32;
          sub_1C017F510(v437, v438, v306, *((uint64_t *)&v306 + 1), v32, v163);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v40 = sub_1C0EE4770(0, v40[2] + 1, 1, v40);
          }
          uint64_t v44 = v441;
          uint64_t v45 = v513;
          unint64_t v310 = v40[2];
          unint64_t v309 = v40[3];
          v311 = v40;
          if (v310 >= v309 >> 1) {
            v311 = sub_1C0EE4770((void *)(v309 > 1), v310 + 1, 1, v40);
          }
          v312 = v311;
          v311[2] = v310 + 1;
          v313 = &v311[6 * v310];
          uint64_t v314 = v437;
          uint64_t v315 = v438;
          v313[4] = v437;
          v313[5] = v315;
          v313[7] = 0;
          v313[8] = 0;
          v313[6] = 0;
          *((_WORD *)v313 + 38) = 0x8000;
          *((_DWORD *)v313 + 18) = 0;
          sub_1C017F59C(v314, v315, v306, (uint64_t)v440, v434, *((unint64_t *)&v306 + 1));
          *(void *)&long long v458 = v312;
          goto LABEL_127;
        case 2uLL:
          v431 = v35;
          uint64_t v274 = v31;
          v435 = (uint64_t *)(v31 & 1);
          uint64_t v275 = *((void *)&v31 + 1);
          uint64_t v276 = v36;
          LODWORD(v432) = v38;
          uint64_t v433 = v41;
          uint64_t v277 = v37;
          sub_1C017F510(v30, v29, v31, *((uint64_t *)&v31 + 1), v32, v163);
          sub_1C015F808(v276, v277, v432);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v434 = v32;
          sub_1C017F510(v437, v438, v274, v275, v32, v163);
          char v278 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v45 = v513;
          if ((v278 & 1) == 0) {
            v40 = sub_1C0EE4770(0, v40[2] + 1, 1, v40);
          }
          uint64_t v44 = v441;
          unint64_t v280 = v40[2];
          unint64_t v279 = v40[3];
          v281 = v40;
          unint64_t v282 = v163;
          if (v280 >= v279 >> 1) {
            v281 = sub_1C0EE4770((void *)(v279 > 1), v280 + 1, 1, v40);
          }
          v180 = v281;
          v281[2] = v280 + 1;
          v283 = &v281[6 * v280];
          uint64_t v185 = v437;
          uint64_t v186 = v438;
          v283[4] = v437;
          v283[5] = v186;
          v283[7] = 0;
          v283[8] = 0;
          uint64_t v189 = v434;
          v283[6] = v435;
          *((_WORD *)v283 + 38) = 0x2000;
          *((_DWORD *)v283 + 18) = 0;
          uint64_t v187 = v274;
          uint64_t v188 = v275;
          unint64_t v273 = v282;
          goto LABEL_119;
        case 3uLL:
          v435 = &v460;
          *((void *)&v430 + 1) = v40;
          v431 = v35;
          uint64_t v284 = v31;
          long long v428 = v31;
          uint64_t v285 = *((void *)&v31 + 1);
          *(void *)&long long v430 = v36;
          LODWORD(v432) = v38;
          uint64_t v433 = v41;
          uint64_t v286 = v29;
          uint64_t v287 = v30;
          uint64_t v288 = v37;
          sub_1C017F510(v30, v29, v31, *((uint64_t *)&v31 + 1), v32, v163);
          sub_1C017F510(v287, v286, v284, v285, v32, v163);
          sub_1C015F808(v430, v288, v432);
          swift_bridgeObjectRetain();
          v289 = (void *)*((void *)&v430 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v429.i64[0] = v163;
          sub_1C017F510(v287, v286, v284, v285, v32, v163);
          v290 = v289;
          char v291 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v434 = v32;
          if ((v291 & 1) == 0) {
            v290 = sub_1C0EE4770(0, v289[2] + 1, 1, v289);
          }
          uint64_t v44 = v441;
          uint64_t v293 = v437;
          uint64_t v292 = v438;
          uint64_t v294 = v438 & 0x101;
          unint64_t v296 = v290[2];
          unint64_t v295 = v290[3];
          long long v297 = v428;
          if (v296 >= v295 >> 1)
          {
            v421 = sub_1C0EE4770((void *)(v295 > 1), v296 + 1, 1, v290);
            long long v297 = v428;
            uint64_t v293 = v437;
            uint64_t v292 = v438;
            v290 = v421;
          }
          v290[2] = v296 + 1;
          v298 = &v290[6 * v296];
          v298[4] = v293;
          v298[5] = v294;
          *((_OWORD *)v298 + 3) = v297;
          v298[8] = 0;
          *((_WORD *)v298 + 38) = 0x4000;
          *((_DWORD *)v298 + 18) = 0;
          uint64_t v299 = v292;
          uint64_t v300 = v293;
          uint64_t v301 = v434;
          unint64_t v302 = v429.i64[0];
          sub_1C017F59C(v293, v292, v284, v285, v434, v429.u64[0]);
          *(void *)&long long v458 = v290;
          if (v285)
          {
            swift_bridgeObjectRetain();
            sub_1BFEFFC1C((uint64_t *)&v444, v284, v285);
            swift_bridgeObjectRelease();
            sub_1C017F59C(v300, v299, v284, v285, v301, v302);
          }
          uint64_t v45 = v513;
          goto LABEL_127;
        case 4uLL:
          v431 = v35;
          uint64_t v433 = v41;
          v435 = (uint64_t *)(v163 & 0x1FFFFFFFFFFLL | 0x600000000000);
          uint64_t v263 = v31;
          long long v428 = v31;
          uint64_t v264 = *((void *)&v31 + 1);
          uint64_t v265 = v36;
          LODWORD(v432) = v38;
          uint64_t v266 = v37;
          sub_1C017F510(v30, v29, v31, *((uint64_t *)&v31 + 1), v32, v163);
          sub_1C015F808(v265, v266, v432);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v434 = v32;
          sub_1C017F510(v437, v438, v263, v264, v32, v163);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v40 = sub_1C0EE4770(0, v40[2] + 1, 1, v40);
          }
          uint64_t v44 = v441;
          uint64_t v45 = v513;
          unint64_t v268 = v40[2];
          unint64_t v267 = v40[3];
          v269 = v40;
          long long v270 = v428;
          uint64_t v184 = v163;
          if (v268 >= v267 >> 1)
          {
            v420 = sub_1C0EE4770((void *)(v267 > 1), v268 + 1, 1, v40);
            long long v270 = v428;
            v269 = v420;
          }
          v180 = v269;
          v269[2] = v268 + 1;
          v271 = &v269[6 * v268];
          uint64_t v185 = v437;
          uint64_t v186 = v438;
          v271[4] = v437;
          v271[5] = v186;
          *((_OWORD *)v271 + 3) = v270;
          uint64_t v189 = v434;
          uint64_t v272 = (uint64_t)v435;
          v271[8] = v434;
          *((_WORD *)v271 + 38) = WORD2(v272);
          *((_DWORD *)v271 + 18) = v272;
          uint64_t v187 = v263;
          uint64_t v188 = v264;
          goto LABEL_113;
        case 5uLL:
          v431 = v35;
          uint64_t v433 = v41;
          uint64_t v423 = *(void *)(v442 + 16);
          v424 = v28;
          uint64_t v427 = v43;
          *(void *)&long long v430 = v36;
          uint64_t v316 = v29;
          uint64_t v317 = v30;
          LODWORD(v432) = v38;
          uint64_t v318 = v37;
          long long v428 = v31;
          sub_1C1520DBC();
          sub_1C1520DCC();
          v319 = v40;
          uint64_t v320 = *((void *)&v428 + 1);
          uint64_t v321 = v428;
          sub_1C017F510(v317, v316, v428, *((uint64_t *)&v428 + 1), v32, v163);
          sub_1C017F510(v317, v316, v321, v320, v32, v163);
          uint64_t v425 = v318;
          sub_1C015F808(v430, v318, v432);
          swift_bridgeObjectRetain();
          *((void *)&v430 + 1) = v319;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v426 = v321;
          *(void *)&long long v428 = v320;
          uint64_t v322 = v320;
          v323 = (void *)v423;
          uint64_t v434 = v32;
          v429.i64[0] = v163;
          sub_1C017F510(v317, v316, v321, v322, v32, v163);
          swift_bridgeObjectRetain();
          sub_1C151E77C();
          uint64_t v324 = sub_1C1520E0C();
          uint64_t v325 = -1 << *((unsigned char *)v323 + 32);
          unint64_t v326 = v324 & ~v325;
          if (((*(void *)((char *)v323 + ((v326 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v326) & 1) == 0) {
            goto LABEL_167;
          }
          uint64_t v327 = ~v325;
          uint64_t v328 = v323[6];
          break;
        case 6uLL:
          uint64_t v337 = v31 | v29 | v30 | v32 | *((void *)&v31 + 1);
          uint64_t v45 = v513;
          if (v337 || v163 != 0xC00000000000)
          {
            sub_1C015F808(v36, v37, v38);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v44 = v441;
            goto LABEL_128;
          }
          sub_1C015F808(v36, v37, v38);
          swift_bridgeObjectRetain();
          v338 = v40;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v323 = v35;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            goto LABEL_222;
          }
          goto LABEL_153;
        default:
          v431 = v35;
          v435 = (uint64_t *)(v442 + 8);
          uint64_t v164 = v31;
          uint64_t v433 = v41;
          v165 = v40;
          uint64_t v166 = *((void *)&v31 + 1);
          *(void *)&long long v430 = v36;
          LODWORD(v432) = v38;
          uint64_t v167 = v29;
          uint64_t v168 = v30;
          uint64_t v425 = v37;
          sub_1C017F510(v30, v29, v31, *((uint64_t *)&v31 + 1), v32, v163);
          sub_1C017F510(v168, v167, v164, v166, v32, v163);
          sub_1C015F808(v430, v425, v432);
          swift_bridgeObjectRetain();
          *((void *)&v430 + 1) = v165;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C017F510(v168, v167, v164, v166, v32, v163);
          sub_1BFEFFC1C((uint64_t *)&v444, v168, v167);
          swift_bridgeObjectRelease();
          sub_1C017F59C(v168, v167, v164, v166, v32, v163);
          LODWORD(v435) = v164 & 1;
          uint64_t v436 = v164;
          uint64_t v169 = v164;
          uint64_t v55 = v166;
          uint64_t v434 = v32;
          v429.i64[0] = v163;
          sub_1C017F524(v168, v167, v169, v166, v32, v163);
          v53 = v440;
          swift_bridgeObjectRetain();
          if (swift_isUniquelyReferenced_nonNull_native()) {
            goto LABEL_46;
          }
          goto LABEL_220;
      }
      do
      {
        uint64_t v329 = v328 + 24 * v326;
        if (*(unsigned char *)(v329 + 16) == 1)
        {
          BOOL v330 = *(void *)v329 == v437 && *(void *)(v329 + 8) == v438;
          if (v330 || (sub_1C1520A9C() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v332 = v437;
            uint64_t v331 = v438;
            uint64_t v333 = v426;
            uint64_t v334 = v428;
            uint64_t v335 = v434;
            unint64_t v336 = v429.i64[0];
            sub_1C017F59C(v437, v438, v426, v428, v434, v429.u64[0]);
            sub_1C017F59C(v332, v331, v333, v334, v335, v336);
            uint64_t v45 = v513;
            goto LABEL_201;
          }
        }
        unint64_t v326 = (v326 + 1) & v327;
      }
      while (((*(void *)((char *)v323 + ((v326 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v326) & 1) != 0);
LABEL_167:
      swift_bridgeObjectRelease();
      uint64_t v356 = v442;
      int v357 = swift_isUniquelyReferenced_nonNull_native();
      v452.i64[0] = *(void *)(v356 + 16);
      v338 = (void *)v452.i64[0];
      *(void *)(v356 + 16) = 0x8000000000000000;
      unint64_t v358 = v338[2];
      unint64_t v359 = v338[3];
      unint64_t v336 = v429.i64[0];
      sub_1C017F510(v437, v438, v426, v428, v434, v429.u64[0]);
      if (v359 <= v358)
      {
        uint64_t v360 = v358 + 1;
        uint64_t v45 = v513;
        if (v357) {
          sub_1C02BDB6C(v360);
        }
        else {
          sub_1C02CA43C(v360);
        }
        v338 = (void *)v452.i64[0];
        sub_1C1520DBC();
        sub_1C1520DCC();
        sub_1C151E77C();
        uint64_t v390 = sub_1C1520E0C();
        uint64_t v391 = -1 << *((unsigned char *)v338 + 32);
        unint64_t v326 = v390 & ~v391;
        if ((*(void *)((char *)v338 + ((v326 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v326))
        {
          uint64_t v45 = ~v391;
          uint64_t v392 = v338[6];
          uint64_t v393 = v437;
          uint64_t v394 = v438;
          while (1)
          {
            uint64_t v395 = v392 + 24 * v326;
            if (*(unsigned char *)(v395 + 16) == 1)
            {
              if (*(void *)v395 == v393 && *(void *)(v395 + 8) == v394) {
                break;
              }
              char v397 = sub_1C1520A9C();
              uint64_t v393 = v437;
              uint64_t v394 = v438;
              if (v397) {
                break;
              }
            }
            unint64_t v326 = (v326 + 1) & v45;
            if (((*(void *)((char *)v338 + ((v326 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v326) & 1) == 0)
            {
              uint64_t v45 = v513;
              unint64_t v336 = v429.i64[0];
LABEL_199:
              *(void *)((char *)v338 + ((v326 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v326;
              uint64_t v398 = v338[6] + 24 * v326;
              *(void *)uint64_t v398 = v393;
              *(void *)(v398 + 8) = v394;
              *(unsigned char *)(v398 + 16) = 1;
              uint64_t v399 = v338[2];
              BOOL v400 = __OFADD__(v399, 1);
              uint64_t v401 = v399 + 1;
              if (v400)
              {
                __break(1u);
LABEL_222:
                v440 = sub_1C0EE09B8(0, v440[2] + 1, 1, v440);
LABEL_153:
                uint64_t v44 = v441;
                unint64_t v340 = v440[2];
                unint64_t v339 = v440[3];
                if (v340 >= v339 >> 1) {
                  v440 = sub_1C0EE09B8((void *)(v339 > 1), v340 + 1, 1, v440);
                }
                v341 = v440;
                v440[2] = v340 + 1;
                v342 = &v341[3 * v340];
                long long v441 = xmmword_1C1557FD0;
                *((_OWORD *)v342 + 2) = xmmword_1C1557FD0;
                *((unsigned char *)v342 + 48) = 0x80;
                *((void *)&v457 + 1) = v341;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  v338 = sub_1C0EE4770(0, v338[2] + 1, 1, v338);
                }
                unint64_t v344 = v338[2];
                unint64_t v343 = v338[3];
                if (v344 >= v343 >> 1) {
                  v338 = sub_1C0EE4770((void *)(v343 > 1), v344 + 1, 1, v338);
                }
                v338[2] = v344 + 1;
                v345 = &v338[6 * v344];
                *((_OWORD *)v345 + 2) = v441;
                v345[7] = 0;
                v345[8] = 0;
                v345[6] = 128;
                *(void *)((char *)v345 + 70) = 0;
                *(void *)&long long v458 = v338;
                v35 = v323;
              }
              else
              {
                uint64_t v331 = v394;
                uint64_t v332 = v393;
                v338[2] = v401;
                *(void *)(v442 + 16) = v338;
                swift_bridgeObjectRelease();
                uint64_t v402 = v426;
                uint64_t v403 = v428;
                uint64_t v404 = v434;
                sub_1C017F59C(v332, v331, v426, v428, v434, v336);
                sub_1C017F59C(v332, v331, v402, v403, v404, v336);
LABEL_201:
                *(void *)&long long v444 = v332;
                *((void *)&v444 + 1) = v331;
                LOBYTE(v445) = 1;
                uint64_t v405 = (uint64_t)v424;
                uint64_t v406 = v441;
                sub_1C0BFAF20((uint64_t)&v444, (uint64_t)v424);
                if (v406)
                {
                  sub_1C017F59C(v332, v331, v426, v428, v434, v336);
                  sub_1C015FB90(v430, v425, v432);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
LABEL_19:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  return;
                }
                sub_1C017F59C(v332, v331, v426, v428, v434, v336);
                uint64_t v407 = *(void *)(v405 + 112);
                uint64_t v408 = *(void *)(v407 + 16);
                if (v408)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v409 = 0;
                  uint64_t v44 = 0;
                  v410 = v435;
                  do
                  {
                    if (*(void *)(v407 + 8 * v409 + 32) >> 60 == 1)
                    {
                      uint64_t v411 = swift_projectBox();
                      sub_1BFFBA60C(v411, (uint64_t)v410, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
                      swift_retain();
                      sub_1C0D8B0C8(v410, v45);
                      sub_1BFFD5A1C((uint64_t)v410, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
                      swift_release();
                    }
                    ++v409;
                  }
                  while (v408 != v409);
                  swift_bridgeObjectRelease();
                  v412 = (void *)*((void *)&v457 + 1);
                }
                else
                {
                  uint64_t v44 = 0;
                  v412 = v440;
                }
                v413 = v412;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  v413 = sub_1C0EE09B8(0, v413[2] + 1, 1, v413);
                }
                unint64_t v415 = v413[2];
                unint64_t v414 = v413[3];
                uint64_t v416 = (uint64_t)v424;
                if (v415 >= v414 >> 1)
                {
                  v413 = sub_1C0EE09B8((void *)(v414 > 1), v415 + 1, 1, v413);
                  uint64_t v416 = (uint64_t)v424;
                }
                v413[2] = v415 + 1;
                v417 = &v413[3 * v415];
                *((_OWORD *)v417 + 2) = xmmword_1C1557FE0;
                *((unsigned char *)v417 + 48) = 0x80;
                *((void *)&v457 + 1) = v413;
                sub_1BFFD5A1C(v416, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
LABEL_127:
                v35 = v431;
              }
LABEL_128:
              uint64_t v303 = v35[2];
              if (v303)
              {
                swift_bridgeObjectRetain();
                uint64_t v304 = 0;
                while (1)
                {
                  uint64_t v305 = v35[v304 + 4];
                  swift_retain();
                  sub_1C090B47C(v305, &v456, v45, v442);
                  if (v44) {
                    break;
                  }
                  ++v304;
                  swift_release();
                  if (v303 == v304)
                  {
LABEL_132:
                    swift_bridgeObjectRelease();
                    goto LABEL_134;
                  }
                }
                swift_bridgeObjectRelease();
                swift_release();
              }
LABEL_134:
              sub_1C015FB90(v456, *((uint64_t *)&v456 + 1), v457);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
          }
          sub_1C1520CEC();
          __break(1u);
        }
      }
      else
      {
        uint64_t v45 = v513;
        if ((v357 & 1) == 0)
        {
          sub_1C02C7324();
          v338 = (void *)v452.i64[0];
        }
      }
      uint64_t v393 = v437;
      uint64_t v394 = v438;
      goto LABEL_199;
  }
}

uint64_t sub_1C090EA08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C090EA50(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v40 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  uint64_t v47 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v43 = (uint64_t)&v40 - v9;
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v41 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v42 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v46 = a1;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v13)
    {
      unint64_t v16 = __clz(__rbit64(v13));
      uint64_t v17 = (v13 - 1) & v13;
      unint64_t v18 = v16 | (v14 << 6);
    }
    else
    {
      BOOL v19 = __OFADD__(v14++, 1);
      if (v19) {
        goto LABEL_46;
      }
      if (v14 >= v42) {
        goto LABEL_42;
      }
      unint64_t v20 = *(void *)(v41 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v14 + 1;
        if (v14 + 1 >= v42) {
          goto LABEL_42;
        }
        unint64_t v20 = *(void *)(v41 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v14 + 2;
          if (v14 + 2 >= v42) {
            goto LABEL_42;
          }
          unint64_t v20 = *(void *)(v41 + 8 * v21);
          if (!v20)
          {
            int64_t v21 = v14 + 3;
            if (v14 + 3 >= v42) {
              goto LABEL_42;
            }
            unint64_t v20 = *(void *)(v41 + 8 * v21);
            if (!v20)
            {
              int64_t v21 = v14 + 4;
              if (v14 + 4 >= v42) {
                goto LABEL_42;
              }
              unint64_t v20 = *(void *)(v41 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  int64_t v14 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_48;
                  }
                  if (v14 >= v42) {
                    goto LABEL_42;
                  }
                  unint64_t v20 = *(void *)(v41 + 8 * v14);
                  ++v21;
                  if (v20) {
                    goto LABEL_20;
                  }
                }
              }
            }
          }
        }
        int64_t v14 = v21;
      }
LABEL_20:
      uint64_t v17 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v14 << 6);
    }
    uint64_t v22 = *(void *)(v47 + 72);
    uint64_t v23 = v43;
    sub_1BFFBA60C(*(void *)(v46 + 48) + v22 * v18, v43, type metadata accessor for FormatDerivedDataResultOptionReference);
    sub_1C09103E0(v23, (uint64_t)v7, type metadata accessor for FormatDerivedDataResultOptionReference);
    long long v24 = v44[1];
    v48[0] = *v44;
    v48[1] = v24;
    long long v25 = v44[3];
    v48[2] = v44[2];
    v48[3] = v25;
    uint64_t v26 = sub_1C01632E4(v48, v45);
    if (v4)
    {
      sub_1BFFD5A1C((uint64_t)v7, type metadata accessor for FormatDerivedDataResultOptionReference);
      swift_bridgeObjectRelease();
LABEL_42:
      swift_release();
      return v15;
    }
    uint64_t v27 = v26;
    unint64_t v49 = v17;
    v28 = v7;
    sub_1BFFD5A1C((uint64_t)v7, type metadata accessor for FormatDerivedDataResultOptionReference);
    uint64_t v29 = *(void *)(v27 + 16);
    int64_t v30 = *(void *)(v15 + 16);
    int64_t v31 = v30 + v29;
    if (__OFADD__(v30, v29)) {
      break;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v31 <= *(void *)(v15 + 24) >> 1)
    {
      if (!*(void *)(v27 + 16)) {
        goto LABEL_4;
      }
    }
    else
    {
      if (v30 <= v31) {
        int64_t v33 = v30 + v29;
      }
      else {
        int64_t v33 = v30;
      }
      unint64_t v15 = sub_1C0EE4B30(isUniquelyReferenced_nonNull_native, v33, 1, v15);
      if (!*(void *)(v27 + 16))
      {
LABEL_4:
        if (v29) {
          goto LABEL_44;
        }
        goto LABEL_5;
      }
    }
    uint64_t v34 = *(void *)(v15 + 16);
    if ((*(void *)(v15 + 24) >> 1) - v34 < v29) {
      goto LABEL_45;
    }
    unint64_t v35 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    unint64_t v36 = v15 + v35 + v34 * v22;
    if (v27 + v35 < v36 + v29 * v22 && v36 < v27 + v35 + v29 * v22) {
      goto LABEL_49;
    }
    swift_arrayInitWithCopy();
    if (v29)
    {
      uint64_t v37 = *(void *)(v15 + 16);
      BOOL v19 = __OFADD__(v37, v29);
      uint64_t v38 = v37 + v29;
      if (v19) {
        goto LABEL_47;
      }
      *(void *)(v15 + 16) = v38;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v7 = v28;
    uint64_t v4 = 0;
    unint64_t v13 = v49;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  sub_1C0910368((uint64_t)v44);
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C090EEB4(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C05F7188(0, v2, 0);
    uint64_t v3 = v24;
    uint64_t v20 = *(void *)(a2 + 32);
    uint64_t v21 = *(void *)(a2 + 24);
    uint64_t v22 = *(void *)(v20 + 16);
    uint64_t v23 = *(void *)(v21 + 16);
    uint64_t v6 = (unint64_t *)(a1 + 56);
    do
    {
      uint64_t v8 = *(v6 - 3);
      uint64_t v7 = *(v6 - 2);
      uint64_t v9 = *(v6 - 1);
      unint64_t v10 = *v6;
      uint64_t v11 = *(void *)(v8 + 16);
      if (v23)
      {
        if (v11)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFE74E64(v9, v10);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C1048050(v8);
          uint64_t v12 = v21;
          goto LABEL_10;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFE74E64(v9, v10);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFE74E64(v9, v10);
        if (v11)
        {
          swift_bridgeObjectRetain();
          uint64_t v12 = v8;
          goto LABEL_10;
        }
      }
      uint64_t v12 = swift_bridgeObjectRetain();
LABEL_10:
      uint64_t v13 = *(void *)(v7 + 16);
      if (v22)
      {
        if (!v13) {
          goto LABEL_15;
        }
        swift_bridgeObjectRetain();
        uint64_t v14 = swift_bridgeObjectRetain();
        sub_1C104B20C(v14);
        uint64_t v15 = v20;
      }
      else
      {
        if (!v13)
        {
LABEL_15:
          uint64_t v15 = v20;
          swift_bridgeObjectRetain();
          goto LABEL_16;
        }
        swift_bridgeObjectRetain();
        uint64_t v15 = v7;
      }
LABEL_16:
      sub_1BFE74E64(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF8F648(v9, v10);
      unint64_t v17 = *(void *)(v24 + 16);
      unint64_t v16 = *(void *)(v24 + 24);
      if (v17 >= v16 >> 1) {
        sub_1C05F7188(v16 > 1, v17 + 1, 1);
      }
      v6 += 4;
      *(void *)(v24 + 16) = v17 + 1;
      unint64_t v18 = (void *)(v24 + 32 * v17);
      v18[4] = v12;
      v18[5] = v15;
      v18[6] = v9;
      v18[7] = v10;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1C090F0E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v65 = result;
  uint64_t v7 = *(void *)(a3 + 16);
  if (!v7) {
    return result;
  }
  uint64_t v61 = *(void *)(a4 + 8);
  uint64_t v62 = *(void *)a4;
  unsigned __int8 v60 = *(unsigned char *)(a4 + 16);
  uint64_t v10 = *(void *)(a4 + 40);
  uint64_t v58 = *(void *)(a4 + 32);
  uint64_t v59 = *(void *)(a4 + 24);
  uint64_t v56 = *(void *)(a4 + 56);
  uint64_t v57 = *(void *)(a4 + 48);
  swift_bridgeObjectRetain();
  uint64_t v11 = v10;
  uint64_t v12 = a3 + 56;
  uint64_t v63 = a5;
  uint64_t v55 = v10;
  while (1)
  {
    uint64_t v103 = v6;
    uint64_t v66 = v12;
    uint64_t v67 = v7;
    uint64_t v15 = *(void *)(v12 - 16);
    char v64 = *(unsigned char *)(v12 - 8);
    uint64_t v16 = *(void *)v12;
    uint64_t v17 = *(void *)(v12 + 8);
    unsigned __int8 v18 = *(unsigned char *)(v12 + 16);
    uint64_t v20 = *(void *)(v12 + 24);
    uint64_t v19 = *(void *)(v12 + 32);
    uint64_t v21 = *(void *)(v12 + 40);
    uint64_t v22 = *(void *)(v12 + 48);
    uint64_t v23 = *(void *)(v12 + 56);
    uint64_t v68 = *(void *)(v11 + 16);
    uint64_t v70 = *(void *)(v12 - 24);
    uint64_t v24 = v11;
    swift_bridgeObjectRetain();
    uint64_t v73 = v16;
    unsigned __int8 v74 = v18;
    sub_1C015F808(v16, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v68) {
      goto LABEL_22;
    }
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1BFEF2D8C(v70, v15);
    if ((v26 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_22:
      *(void *)&long long v98 = v16;
      *((void *)&v98 + 1) = v17;
      LOBYTE(v99) = v18;
      *((void *)&v99 + 1) = v20;
      *(void *)&long long v100 = v19;
      *((void *)&v100 + 1) = v21;
      *(void *)&long long v101 = v22;
      *((void *)&v101 + 1) = v23;
      uint64_t v90 = v62;
      uint64_t v91 = v61;
      unsigned __int8 v92 = v60;
      uint64_t v93 = v59;
      uint64_t v94 = v58;
      uint64_t v95 = v24;
      uint64_t v96 = v57;
      uint64_t v97 = v56;
      sub_1C015F808(v16, v17, v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = v103;
      sub_1C0D8B598((uint64_t)&v90, v63, (uint64_t)&v82);
      if (v45)
      {
        swift_bridgeObjectRelease();
        sub_1C015FB90(v16, v17, v74);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C015FB90(v16, v17, v74);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v103 = 0;
      sub_1C015FB90(v16, v17, v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v46 = v82;
      unsigned __int8 v47 = v83;
      uint64_t v48 = *((void *)&v83 + 1);
      long long v49 = v84;
      long long v50 = v85;
      uint64_t v51 = *(void **)(v65 + 24);
      swift_bridgeObjectRetain();
      sub_1C015F808(v46, *((uint64_t *)&v46 + 1), v47);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v51 = sub_1C0EE48B4(0, v51[2] + 1, 1, v51);
      }
      unint64_t v53 = v51[2];
      unint64_t v52 = v51[3];
      if (v53 >= v52 >> 1) {
        uint64_t v51 = sub_1C0EE48B4((void *)(v52 > 1), v53 + 1, 1, v51);
      }
      v51[2] = v49 + 1;
      uint64_t v13 = &v51[11 * v49];
      v13[4] = v70;
      v13[5] = v15;
      *((unsigned char *)v13 + 48) = v64;
      *(_OWORD *)(v13 + 7) = v46;
      *((unsigned char *)v13 + 72) = v47;
      v13[10] = v48;
      *(_OWORD *)(v13 + 11) = v49;
      *(_OWORD *)(v13 + 13) = v50;
      swift_bridgeObjectRelease();
      sub_1C015FB90(v73, v17, v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C015FB90(v46, *((uint64_t *)&v46 + 1), v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v65 + 24) = v51;
      uint64_t v6 = v103;
      uint64_t v14 = v67;
      uint64_t v11 = v55;
      goto LABEL_4;
    }
    uint64_t v27 = (long long *)(*(void *)(v24 + 56) + (v25 << 7));
    long long v29 = v27[2];
    long long v28 = v27[3];
    long long v30 = v27[1];
    long long v82 = *v27;
    long long v83 = v30;
    long long v84 = v29;
    long long v85 = v28;
    long long v31 = v27[4];
    long long v32 = v27[5];
    long long v33 = v27[7];
    long long v88 = v27[6];
    long long v89 = v33;
    long long v86 = v31;
    long long v87 = v32;
    sub_1C090FEBC((uint64_t)&v82);
    swift_bridgeObjectRelease();
    uint64_t v90 = v16;
    uint64_t v91 = v17;
    unsigned __int8 v92 = v18;
    uint64_t v93 = v20;
    uint64_t v94 = v19;
    uint64_t v95 = v21;
    uint64_t v96 = v22;
    uint64_t v97 = v23;
    v75[0] = v62;
    v75[1] = v61;
    unsigned __int8 v76 = v60;
    uint64_t v77 = v59;
    uint64_t v78 = v58;
    uint64_t v79 = v24;
    uint64_t v80 = v57;
    uint64_t v81 = v56;
    sub_1C015F808(v16, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = v103;
    sub_1C0D8B598((uint64_t)v75, v63, (uint64_t)&v98);
    if (v34)
    {
      swift_bridgeObjectRelease();
      sub_1C015FB90(v16, v17, v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C090FFA8((uint64_t)&v82);
      sub_1C015FB90(v16, v17, v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = 0;
    swift_bridgeObjectRelease();
    sub_1C015FB90(v16, v17, v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v35 = v87;
    uint64_t v69 = *((void *)&v88 + 1);
    uint64_t v36 = *((void *)&v89 + 1);
    uint64_t v71 = v89;
    uint64_t v72 = v88;
    sub_1C015FB90(v16, v17, v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v102[2] = v100;
    v102[3] = v101;
    v102[0] = v98;
    v102[1] = v99;
    if (*(void *)(v35 + 16))
    {
      uint64_t v37 = swift_bridgeObjectRetain();
      sub_1BFEF3808(v37);
    }
    if (*(void *)(*((void *)&v35 + 1) + 16))
    {
      uint64_t v38 = swift_bridgeObjectRetain();
      sub_1BFEF3808(v38);
    }
    uint64_t v6 = v103;
    if (*(void *)(v72 + 16))
    {
      uint64_t v39 = swift_bridgeObjectRetain();
      sub_1C111C2EC(v39);
    }
    if (*(void *)(v36 + 16))
    {
      sub_1C09102F0((uint64_t)v102);
      uint64_t v40 = swift_bridgeObjectRetain();
      uint64_t v41 = sub_1C090EEB4(v40, (uint64_t)v102);
      sub_1C0910368((uint64_t)v102);
      swift_bridgeObjectRelease();
      sub_1C10486F4(v41);
    }
    if (*(void *)(v71 + 16)) {
      break;
    }
LABEL_19:
    sub_1C0910368((uint64_t)v102);
    *(void *)&long long v98 = v62;
    *((void *)&v98 + 1) = v61;
    LOBYTE(v99) = v60;
    *((void *)&v99 + 1) = v59;
    *(void *)&long long v100 = v58;
    *((void *)&v100 + 1) = v55;
    *(void *)&long long v101 = v57;
    *((void *)&v101 + 1) = v56;
    sub_1C090F0E8(v65, a2, v69, &v98, v63);
    if (v6)
    {
      sub_1C090FFA8((uint64_t)&v82);
      return swift_bridgeObjectRelease();
    }
    sub_1C090FFA8((uint64_t)&v82);
    uint64_t v14 = v67;
    uint64_t v11 = v55;
LABEL_4:
    uint64_t v12 = v66 + 88;
    uint64_t v7 = v14 - 1;
    if (!v7) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_1C09102F0((uint64_t)v102);
  swift_retain();
  uint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v43 = sub_1C090EA50(v42, v102, v63);
  if (!v6)
  {
    uint64_t v44 = v43;
    swift_release();
    sub_1C0910368((uint64_t)v102);
    swift_bridgeObjectRelease();
    sub_1C111D278(v44);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_release();
  sub_1C0910368((uint64_t)v102);
  swift_bridgeObjectRelease();
  sub_1C090FFA8((uint64_t)&v82);
  sub_1C0910368((uint64_t)v102);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C090F9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v35 = a3;
  uint64_t v6 = type metadata accessor for FormatDerivedDataFile();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = (uint64_t *)(a2 + 40);
  unsigned __int8 v12 = *(unsigned char *)(a1 + 16);
  swift_beginAccess();
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(v13 + 16);
  sub_1C024FAC0(v9, v10, v12);
  if (v14 && (unint64_t v15 = sub_1C1052498(v9, v10, v12), (v16 & 1) != 0))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v13 + 56) + 48 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    uint64_t v22 = v17[4];
    uint64_t v32 = v17[5];
    swift_endAccess();
    swift_bridgeObjectRetain();
    uint64_t v33 = v19;
    swift_bridgeObjectRetain();
    uint64_t v23 = v20;
    swift_bridgeObjectRetain();
    uint64_t v24 = v21;
    swift_bridgeObjectRetain();
    uint64_t v34 = v22;
    uint64_t v25 = v18;
    uint64_t v26 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C024F49C(v9, v10, v12);
  }
  else
  {
    swift_endAccess();
    sub_1C024F49C(v9, v10, v12);
    v36[0] = v9;
    v36[1] = v10;
    unsigned __int8 v37 = v12;
    uint64_t result = sub_1C0BFAF20((uint64_t)v36, (uint64_t)v8);
    if (v3) {
      return result;
    }
    sub_1C139C538(&v38, a2);
    swift_beginAccess();
    uint64_t v25 = v38;
    uint64_t v31 = v39;
    uint64_t v32 = v40;
    uint64_t v33 = *((void *)&v38 + 1);
    uint64_t v26 = v42;
    uint64_t v34 = v41;
    sub_1C024FAC0(v9, v10, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    sub_1C10676D0(&v38, v9, v10, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v11 = v43;
    uint64_t v24 = v32;
    swift_bridgeObjectRelease();
    sub_1C024F49C(v9, v10, v12);
    swift_endAccess();
    uint64_t v23 = v31;
    uint64_t result = sub_1BFFD5A1C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
  }
  long long v29 = v35;
  uint64_t v30 = v33;
  void *v35 = v25;
  v29[1] = v30;
  v29[2] = v23;
  v29[3] = v24;
  v29[4] = v34;
  v29[5] = v26;
  return result;
}

void sub_1C090FCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFEC28BC(a5, a6, a7, a8, a9, a10, a11);
  }
}

uint64_t sub_1C090FD3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unint64_t v7 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
  swift_bridgeObjectRetain();
  sub_1C017F510(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1C090FDD0()
{
  if (!qword_1EA1A0FB8)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A0FB8);
    }
  }
}

uint64_t sub_1C090FE28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unint64_t v7 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
  swift_bridgeObjectRelease();
  sub_1C017F59C(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C090FEBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unint64_t v7 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
  swift_bridgeObjectRetain();
  sub_1C017F510(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C090FFA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unint64_t v7 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
  swift_bridgeObjectRelease();
  sub_1C017F59C(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0910094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C017F510(a3, a4, a5, a6, a7, a8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1C0910190(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1C09101F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1C017F59C(a3, a4, a5, a6, a7, a8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C09102F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0910368(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C09103E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t FeedGroupSlots.absoluteDescription<A>(cursor:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v13 = 0x28746F6C73;
    int64_t v3 = *(void *)(a2 + 16);
    if (v3)
    {
      uint64_t v12 = MEMORY[0x1E4FBC860];
      sub_1BFF661B8(0, v3, 0);
      uint64_t v4 = a2 + 32;
      sub_1BFF01BC4();
      do
      {
        v4 += 8;
        uint64_t v5 = sub_1C151FF2C();
        uint64_t v7 = v6;
        unint64_t v9 = *(void *)(v12 + 16);
        unint64_t v8 = *(void *)(v12 + 24);
        if (v9 >= v8 >> 1) {
          sub_1BFF661B8(v8 > 1, v9 + 1, 1);
        }
        *(void *)(v12 + 16) = v9 + 1;
        uint64_t v10 = v12 + 16 * v9;
        *(void *)(v10 + 32) = v5;
        *(void *)(v10 + 40) = v7;
        --v3;
      }
      while (v3);
    }
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
    sub_1BFE99E40();
    sub_1C151E55C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
  }
  else
  {
    uint64_t v13 = 0x286E65706FLL;
    FeedCursor.absoluteSlotIndex.getter();
    sub_1C152088C();
    sub_1C151E80C();
  }
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v13;
}

void *FeedGroupSlots.init(from:)(void *a1)
{
  return sub_1BFD1BCB8(a1);
}

uint64_t FeedGroupSlots.encode(to:)(void *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  if (a2)
  {
    uint64_t v6 = a2;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1BFC6CA08(0, &qword_1EB879F70);
    sub_1BFD1BDF0((unint64_t *)&qword_1EB85C4A8);
    sub_1C1520B2C();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL static FeedGroupSlots.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  if (a1 && a2) {
    return sub_1C00F4E44((void *)a1, (void *)a2);
  }
  else {
    return (a1 | a2) == 0;
  }
}

BOOL sub_1C0910768(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    return (v2 | v3) == 0;
  }
  else {
    return sub_1C00F4E44((void *)v2, (void *)v3);
  }
}

uint64_t sub_1C0910794(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  if (v2)
  {
    uint64_t v6 = v2;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1BFC6CA08(0, &qword_1EB879F70);
    sub_1BFD1BDF0((unint64_t *)&qword_1EB85C4A8);
    sub_1C1520B2C();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t FeedGroupSlots.intersects(_:)(uint64_t a1, uint64_t a2)
{
  char v2 = (a2 | a1) == 0;
  if (a2 && a1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C0605C10(a2);
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1C0605C10(a1);
    swift_bridgeObjectRelease();
    char v7 = sub_1C11C4D9C(v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v2 = v7 ^ 1;
  }
  return v2 & 1;
}

ValueMetadata *type metadata accessor for FeedGroupSlots()
{
  return &type metadata for FeedGroupSlots;
}

void FeedSportsEvent.init(sportsEvent:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = a1;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 0;
}

uint64_t FeedSportsEvent.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedSportsEvent.sportsEvent.getter()
{
  return swift_unknownObjectRetain();
}

void FeedSportsEvent.layoutDirection.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FeedSportsEvent.init(identifier:sportsEvent:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 0;
  return result;
}

uint64_t FeedSportsEvent.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

uint64_t sub_1C0910A68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

void FeedSportsEvent.traits.getter(void *a1@<X8>)
{
  *a1 = qword_1F1B64940;
}

double FeedSportsEvent.kind.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C157BA40;
  return result;
}

void sub_1C0910AFC(void *a1@<X8>)
{
  *a1 = qword_1F1B64940;
}

void sub_1C0910B0C(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
}

double sub_1C0910B20@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C157BA40;
  return result;
}

uint64_t FeedSportsEvent.debugIdentifier.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t FeedSportsEvent.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedSportsEvent.debugTitle.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_name);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t FeedSportsEvent.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedSportsEvent.debugScoreProfile.getter()
{
  return 0;
}

uint64_t sub_1C0910BFC()
{
  id v1 = *(void **)(v0 + 16);
  unint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1BFFAFDA8(0x652D7374726F7073, 0xED00002D746E6576, ObjectType);
  sub_1BFEF95B8((uint64_t)v4);
  id v5 = objc_msgSend(v1, sel_eventLeagueTag);
  uint64_t v6 = swift_getObjectType();
  uint64_t v7 = sub_1BFFAFDA8(0xD000000000000014, 0x80000001C1615800, v6);
  swift_unknownObjectRelease();
  sub_1BFEF95B8((uint64_t)v7);
  id v8 = objc_msgSend(v1, sel_eventCompetitorTags);
  if (v8)
  {
    unint64_t v9 = v8;
    sub_1C017E704();
    unint64_t v2 = sub_1C151EBCC();
  }
  unint64_t v10 = v2 >> 62;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v11 = result;
    if (result) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_13;
  }
LABEL_5:
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      MEMORY[0x1C18C7CB0](i, v2);
    }
    else {
      swift_unknownObjectRetain();
    }
    uint64_t v14 = swift_getObjectType();
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    unint64_t v15 = sub_1BFFAFDA8(0xD000000000000018, 0x80000001C1615820, v14);
    swift_bridgeObjectRelease();
    sub_1BFEF95B8((uint64_t)v15);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  unint64_t v10 = v2 >> 62;
LABEL_14:
  char v16 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v16 = sub_1BFEF9B68(0, v23[2] + 1, 1, v23);
  }
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    char v16 = sub_1BFEF9B68((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  v16[2] = v18 + 1;
  uint64_t v19 = &v16[2 * v18];
  v19[4] = 0xD00000000000001FLL;
  v19[5] = 0x80000001C1615840;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  unint64_t v21 = v16[2];
  unint64_t v20 = v16[3];
  if (v21 >= v20 >> 1) {
    char v16 = sub_1BFEF9B68((void *)(v20 > 1), v21 + 1, 1, v16);
  }
  v16[2] = v21 + 1;
  uint64_t v22 = &v16[2 * v21];
  v22[4] = 0xD00000000000001FLL;
  v22[5] = 0x80000001C1615860;
  return (uint64_t)v16;
}

uint64_t sub_1C0910FE4()
{
  uint64_t v0 = sub_1C0910BFC();
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v8;
    uint64_t v3 = v0 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      unint64_t v5 = *(void *)(v8 + 16);
      unint64_t v4 = *(void *)(v8 + 24);
      if (v5 >= v4 >> 1) {
        sub_1BFF661B8(v4 > 1, v5 + 1, 1);
      }
      v3 += 16;
      *(void *)(v8 + 16) = v5 + 1;
      uint64_t v6 = v8 + 16 * v5;
      *(void *)(v6 + 32) = 0x2D64656566;
      *(void *)(v6 + 40) = 0xE500000000000000;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v2;
}

unint64_t sub_1C091113C(uint64_t a1)
{
  unint64_t result = sub_1C0911164();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0911164()
{
  unint64_t result = qword_1EB864E30;
  if (!qword_1EB864E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864E30);
  }
  return result;
}

uint64_t destroy for FeedSportsEvent()
{
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for FeedSportsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedSportsEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for FeedSportsEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for FeedSportsEvent()
{
  return &type metadata for FeedSportsEvent;
}

void static FeedGroupTopicDiversityRequirements.noRequirements.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FF0000000000000;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 1;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = MEMORY[0x1E4FBC870];
}

uint64_t FeedGroupTopicDiversityRequirements.threshold.getter()
{
  return *(void *)v0;
}

uint64_t FeedGroupTopicDiversityRequirements.windowSize.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FeedGroupTopicDiversityRequirements.allowedTopicIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupTopicDiversityRequirements.init(threshold:windowSize:allowedTopicIDs:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(unsigned char *)(a6 + 8) = a2 & 1;
  *(void *)(a6 + 16) = a3;
  *(unsigned char *)(a6 + 24) = a4 & 1;
  *(void *)(a6 + 32) = a5;
  return result;
}

uint64_t sub_1C0911388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C091192C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C09113B0(uint64_t a1)
{
  unint64_t v2 = sub_1BFC7D63C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09113EC(uint64_t a1)
{
  unint64_t v2 = sub_1BFC7D63C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupTopicDiversityRequirements.encode(to:)(void *a1)
{
  sub_1BFC7D5D8(0, &qword_1EB86B858, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  int v13 = *(unsigned __int8 *)(v1 + 24);
  v12[0] = *(void *)(v1 + 32);
  v12[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC7D63C();
  sub_1C1520F0C();
  char v16 = 0;
  uint64_t v9 = v12[2];
  sub_1C152076C();
  if (!v9)
  {
    uint64_t v10 = v12[0];
    char v15 = 1;
    sub_1C152077C();
    v12[3] = v10;
    char v14 = 2;
    sub_1BFEBC4B4();
    sub_1BFE38978((unint64_t *)&qword_1EB85C4F0);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0911630(void *a1)
{
  return FeedGroupTopicDiversityRequirements.encode(to:)(a1);
}

BOOL _s8NewsFeed0B31GroupTopicDiversityRequirementsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16)) {
      char v4 = *(unsigned char *)(a2 + 24);
    }
    else {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  if (*(void *)(a1 + 32))
  {
    if (!v3) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = swift_bridgeObjectRetain();
    char v6 = sub_1BFEFAE14(v5, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v6 & 1) != 0;
  }
  return !v3;
}

uint64_t assignWithCopy for FeedGroupTopicDiversityRequirements(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  uint64_t v4 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedGroupTopicDiversityRequirements(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupTopicDiversityRequirements()
{
  return &type metadata for FeedGroupTopicDiversityRequirements;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupTopicDiversityRequirements.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C091189CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupTopicDiversityRequirements.CodingKeys()
{
  return &type metadata for FeedGroupTopicDiversityRequirements.CodingKeys;
}

unint64_t sub_1C09118D8()
{
  unint64_t result = qword_1EA1A0FC0;
  if (!qword_1EA1A0FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A0FC0);
  }
  return result;
}

uint64_t sub_1C091192C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6953776F646E6977 && a2 == 0xEA0000000000657ALL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x546465776F6C6C61 && a2 == 0xEF7344496369706FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C0911AC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *a2;
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *a2;
      uint64_t v364 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
      uint64_t v7 = v364[5];
      uint64_t v8 = a1 + v7;
      uint64_t v9 = (uint64_t *)((char *)a2 + v7);
      type metadata accessor for DebugFormatCompilerResultOutput();
      swift_retain();
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 2)
      {
        type metadata accessor for FormatFile();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v63 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v63;
            uint64_t v64 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v64;
            uint64_t v65 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v65;
            uint64_t v66 = v9[7];
            *(void *)(v8 + 48) = v9[6];
            *(void *)(v8 + 56) = v66;
            uint64_t v67 = v9[8];
            *(unsigned char *)(v8 + 72) = *((unsigned char *)v9 + 72);
            *(void *)(v8 + 64) = v67;
            uint64_t v68 = v9[11];
            *(void *)(v8 + 80) = v9[10];
            *(void *)(v8 + 88) = v68;
            __dstb = v9 + 12;
            unsigned __int8 v290 = *((unsigned char *)v9 + 106);
            int v300 = *((unsigned __int16 *)v9 + 52);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v290 == 255)
            {
              *(void *)(v8 + 96) = *__dstb;
              *(_DWORD *)(v8 + 103) = *(_DWORD *)((char *)v9 + 103);
            }
            else
            {
              unsigned int v193 = v300 & 0xFF00FFFF | (v290 << 16);
              uint64_t v194 = *__dstb;
              sub_1BFFA742C(*__dstb, v193, SBYTE2(v193), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
              *(void *)(v8 + 96) = v194;
              *(_WORD *)(v8 + 104) = v300;
              *(unsigned char *)(v8 + 106) = BYTE2(v193);
            }
            goto LABEL_80;
          case 2u:
            uint64_t v69 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v69;
            uint64_t v70 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v70;
            uint64_t v71 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v71;
            *(unsigned char *)(v8 + 48) = *((unsigned char *)v9 + 48);
            *(void *)(v8 + 56) = v9[7];
            uint64_t v72 = (_OWORD *)(v8 + 64);
            __dstc = v9 + 8;
            unint64_t v73 = v9[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v73 >= 2)
            {
              if (v73 == 2)
              {
                *uint64_t v72 = *__dstc;
              }
              else
              {
                *(unsigned char *)(v8 + 64) = *(unsigned char *)__dstc;
                *(void *)(v8 + 72) = v73;
                swift_bridgeObjectRetain();
              }
            }
            else
            {
              *uint64_t v72 = *__dstc;
            }
            uint64_t v203 = v9[11];
            *(void *)(v8 + 80) = v9[10];
            *(void *)(v8 + 88) = v203;
            uint64_t v204 = v9[13];
            *(void *)(v8 + 96) = v9[12];
            *(void *)(v8 + 104) = v204;
            uint64_t v205 = v9[15];
            *(void *)(v8 + 112) = v9[14];
            *(void *)(v8 + 120) = v205;
            *(unsigned char *)(v8 + 128) = *((unsigned char *)v9 + 128);
            *(void *)(v8 + 136) = v9[17];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_79;
          case 3u:
            uint64_t v74 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v74;
            uint64_t v75 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v75;
            uint64_t v76 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v76;
            uint64_t v77 = v9 + 6;
            unint64_t v78 = v9[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v78 >= 0xF)
            {
              *(void *)(v8 + 48) = *v77;
              *(void *)(v8 + 56) = v78;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v8 + 48) = *(_OWORD *)v77;
            }
            uint64_t v195 = v9[9];
            *(void *)(v8 + 64) = v9[8];
            *(void *)(v8 + 72) = v195;
            uint64_t v196 = v9[11];
            *(void *)(v8 + 80) = v9[10];
            *(void *)(v8 + 88) = v196;
            uint64_t v197 = v9[13];
            *(void *)(v8 + 96) = v9[12];
            *(void *)(v8 + 104) = v197;
            *(void *)(v8 + 112) = v9[14];
            *(unsigned char *)(v8 + 120) = *((unsigned char *)v9 + 120);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_79;
          case 4u:
            uint64_t v79 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v79;
            uint64_t v80 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v80;
            uint64_t v81 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v81;
            *(void *)(v8 + 48) = v9[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_80;
          case 5u:
            uint64_t v82 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v82;
            uint64_t v83 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v83;
            uint64_t v84 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v84;
            *(_WORD *)(v8 + 48) = *((_WORD *)v9 + 24);
            uint64_t v85 = v9[8];
            *(void *)(v8 + 56) = v9[7];
            *(void *)(v8 + 64) = v85;
            uint64_t v275 = v9[10];
            *(void *)(v8 + 72) = v9[9];
            *(void *)(v8 + 80) = v275;
            uint64_t v276 = v9[12];
            *(void *)(v8 + 88) = v9[11];
            *(void *)(v8 + 96) = v276;
            uint64_t v278 = v9[14];
            *(void *)(v8 + 104) = v9[13];
            *(void *)(v8 + 112) = v278;
            uint64_t v282 = v9[16];
            *(void *)(v8 + 120) = v9[15];
            *(void *)(v8 + 128) = v282;
            uint64_t v301 = v9[18];
            *(void *)(v8 + 136) = v9[17];
            *(void *)(v8 + 144) = v301;
            *(void *)(v8 + 152) = v9[19];
            unint64_t v339 = v9 + 20;
            unint64_t v315 = v9[21];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v315 >= 2)
            {
              long long v87 = (_OWORD *)(v8 + 160);
              if (v315 != 2)
              {
                *(unsigned char *)(v8 + 160) = *v339;
                *(void *)(v8 + 168) = v315;
                swift_bridgeObjectRetain();
                goto LABEL_81;
              }
              long long v86 = *(_OWORD *)v339;
            }
            else
            {
              long long v86 = *(_OWORD *)v339;
              long long v87 = (_OWORD *)(v8 + 160);
            }
            *long long v87 = v86;
LABEL_81:
            uint64_t v294 = (int *)type metadata accessor for FormatPackage();
            uint64_t v210 = v294[23];
            uint64_t v211 = (void *)(v8 + v210);
            uint64_t v212 = (char *)v9 + v210;
            uint64_t v213 = *(uint64_t *)((char *)v9 + v210 + 8);
            *uint64_t v211 = *(uint64_t *)((char *)v9 + v210);
            v211[1] = v213;
            uint64_t v310 = type metadata accessor for FormatCompilerOptions(0);
            uint64_t v321 = v211;
            uint64_t v214 = *(int *)(v310 + 24);
            uint64_t v215 = (char *)v211 + v214;
            __dsth = v212;
            uint64_t v216 = &v212[v214];
            uint64_t v217 = *(void *)&v212[v214 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v217 == 1)
            {
              long long v218 = *((_OWORD *)v216 + 1);
              *(_OWORD *)uint64_t v215 = *(_OWORD *)v216;
              *((_OWORD *)v215 + 1) = v218;
              *((_OWORD *)v215 + 2) = *((_OWORD *)v216 + 2);
            }
            else
            {
              *(void *)uint64_t v215 = *(void *)v216;
              *((void *)v215 + 1) = v217;
              uint64_t v219 = *((void *)v216 + 3);
              *((void *)v215 + 2) = *((void *)v216 + 2);
              *((void *)v215 + 3) = v219;
              uint64_t v220 = *((void *)v216 + 5);
              *((void *)v215 + 4) = *((void *)v216 + 4);
              *((void *)v215 + 5) = v220;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            uint64_t v221 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
            v222 = &v215[v221];
            BOOL v223 = &v216[v221];
            uint64_t v224 = sub_1C1518CDC();
            uint64_t v225 = *(void *)(v224 - 8);
            uint64_t v333 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v225 + 48);
            uint64_t v286 = v225;
            if (v333(v223, 1, v224))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v222, v223, *(void *)(*(void *)(v226 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v225 + 16))(v222, v223, v224);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v225 + 56))(v222, 0, 1, v224);
            }
            uint64_t v227 = v224;
            uint64_t v229 = v310;
            uint64_t v228 = v321;
            uint64_t v230 = *(int *)(v310 + 28);
            v231 = (char *)v321 + v230;
            uint64_t v232 = &__dsth[v230];
            uint64_t v311 = v227;
            if (v333(&__dsth[v230], 1, v227))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v231, v232, *(void *)(*(void *)(v233 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v231, v232, v311);
              uint64_t v228 = v321;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v286 + 56))(v231, 0, 1, v311);
            }
            *(void *)((char *)v228 + *(int *)(v229 + 32)) = *(void *)&__dsth[*(int *)(v229 + 32)];
            uint64_t v234 = v294[24];
            uint64_t v235 = v8 + v234;
            __dsto = (char *)v9 + v234;
            uint64_t v236 = sub_1C151928C();
            uint64_t v322 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v236 - 8) + 16);
            swift_bridgeObjectRetain();
            v322(v235, __dsto, v236);
            uint64_t v237 = v294[25];
            uint64_t v238 = (void *)(v8 + v237);
            unsigned __int8 v239 = (char *)v9 + v237;
            if (v333((char *)v9 + v237, 1, v311))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v238, v239, *(void *)(*(void *)(v240 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v286 + 16))(v238, v239, v311);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v286 + 56))(v238, 0, 1, v311);
            }
LABEL_80:
            swift_storeEnumTagMultiPayload();
            sub_1C0913D20();
            uint64_t v207 = *(int *)(v206 + 48);
            v208 = *(void **)((char *)v9 + v207);
            id v209 = v208;
            *(void *)(v8 + v207) = v208;
            break;
          case 6u:
            uint64_t v88 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v88;
            *(void *)(v8 + 16) = v9[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_80;
          case 7u:
            *(void *)uint64_t v8 = *v9;
            swift_retain();
            goto LABEL_80;
          case 8u:
            uint64_t v89 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v89;
            uint64_t v90 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v90;
            uint64_t v91 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v91;
            uint64_t v92 = v9[7];
            *(void *)(v8 + 48) = v9[6];
            *(void *)(v8 + 56) = v92;
            *(void *)(v8 + 64) = v9[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_80;
          case 9u:
            uint64_t v93 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v93;
            uint64_t v94 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v94;
            uint64_t v95 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v95;
            uint64_t v96 = v9[7];
            *(void *)(v8 + 48) = v9[6];
            *(void *)(v8 + 56) = v96;
            uint64_t v340 = v9[9];
            *(void *)(v8 + 64) = v9[8];
            *(void *)(v8 + 72) = v340;
            *(unsigned char *)(v8 + 80) = *((unsigned char *)v9 + 80);
            __dstk = (void *)v9[12];
            *(void *)(v8 + 88) = v9[11];
            *(void *)(v8 + 96) = __dstk;
            *(unsigned char *)(v8 + 104) = *((unsigned char *)v9 + 104);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_80;
          case 0xAu:
            uint64_t v97 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v97;
            uint64_t v98 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v98;
            uint64_t v316 = v9[4];
            uint64_t v99 = v9[6];
            uint64_t v302 = v9[5];
            uint64_t v100 = v9[7];
            uint64_t v341 = v9[9];
            __dstl = (void *)v9[8];
            unsigned __int8 v327 = *((unsigned char *)v9 + 80);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v316, v302, v99, v100, (uint64_t)__dstl, v341, v327);
            *(void *)(v8 + 32) = v316;
            *(void *)(v8 + 40) = v302;
            *(void *)(v8 + 48) = v99;
            *(void *)(v8 + 56) = v100;
            *(void *)(v8 + 64) = __dstl;
            *(void *)(v8 + 72) = v341;
            *(unsigned char *)(v8 + 80) = v327;
            goto LABEL_80;
          case 0xBu:
            uint64_t v101 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v101;
            uint64_t v102 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v102;
            uint64_t v103 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v103;
            uint64_t v104 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
            uint64_t v105 = (void *)(v8 + v104);
            uint64_t v106 = (uint64_t)v9 + v104;
            uint64_t v107 = *(uint64_t *)((char *)v9 + v104 + 8);
            *uint64_t v105 = *(uint64_t *)((char *)v9 + v104);
            v105[1] = v107;
            uint64_t v108 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v109 = v108[5];
            char v291 = (void *)(v106 + v109);
            uint64_t v303 = (char *)v105 + v109;
            uint64_t v110 = sub_1C151631C();
            uint64_t v111 = *(void (**)(char *, void *, uint64_t))(*(void *)(v110 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v111(v303, v291, v110);
            uint64_t v112 = v108[6];
            uint64_t v113 = (void *)((char *)v105 + v112);
            uint64_t v114 = (void *)(v106 + v112);
            uint64_t v317 = v114[1];
            *uint64_t v113 = *v114;
            v113[1] = v317;
            uint64_t v115 = v108[7];
            uint64_t v116 = (void *)((char *)v105 + v115);
            v117 = (void *)(v106 + v115);
            uint64_t v304 = v117[1];
            *uint64_t v116 = *v117;
            v116[1] = v304;
            uint64_t v118 = v108[8];
            uint64_t v119 = (void *)((char *)v105 + v118);
            uint64_t v120 = (void *)(v106 + v118);
            uint64_t v292 = (void *)v120[1];
            *uint64_t v119 = *v120;
            v119[1] = v292;
            uint64_t v121 = v108[9];
            uint64_t v122 = (void *)((char *)v105 + v121);
            v123 = (void *)(v106 + v121);
            uint64_t v283 = v123[1];
            *uint64_t v122 = *v123;
            v122[1] = v283;
            uint64_t v124 = v108[10];
            uint64_t v328 = v108;
            v342 = (char *)v105 + v124;
            __dstd = (void *)(v106 + v124);
            uint64_t v125 = sub_1C151D6DC();
            uint64_t v280 = *(void *)(v125 - 8);
            unint64_t v126 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v280 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v126(__dstd, 1, v125))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(v342, __dstd, *(void *)(*(void *)(v127 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(v280 + 16))(v342, __dstd, v125);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v280 + 56))(v342, 0, 1, v125);
            }
            *(void *)((char *)v105 + v328[11]) = *(void *)(v106 + v328[11]);
            *(void *)((char *)v105 + v328[12]) = *(void *)(v106 + v328[12]);
            *(void *)((char *)v105 + v328[13]) = *(void *)(v106 + v328[13]);
            *(void *)((char *)v105 + v328[14]) = *(void *)(v106 + v328[14]);
            *(void *)((char *)v105 + v328[15]) = *(void *)(v106 + v328[15]);
            *(void *)((char *)v105 + v328[16]) = *(void *)(v106 + v328[16]);
            *(void *)((char *)v105 + v328[17]) = *(void *)(v106 + v328[17]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_75;
          default:
            uint64_t v19 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v19;
            unint64_t v20 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v21 = v20[5];
            uint64_t v22 = v8 + v21;
            __dstuint64_t i = (char *)v9 + v21;
            uint64_t v23 = sub_1C151631C();
            uint64_t v335 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 16);
            swift_bridgeObjectRetain();
            v335(v22, __dsti, v23);
            uint64_t v24 = v20[6];
            uint64_t v25 = (void *)(v8 + v24);
            uint64_t v26 = (uint64_t *)((char *)v9 + v24);
            uint64_t v336 = v26[1];
            *uint64_t v25 = *v26;
            v25[1] = v336;
            uint64_t v27 = v20[7];
            long long v28 = (void *)(v8 + v27);
            long long v29 = (uint64_t *)((char *)v9 + v27);
            uint64_t v325 = v29[1];
            void *v28 = *v29;
            v28[1] = v325;
            uint64_t v30 = v20[8];
            uint64_t v31 = (void *)(v8 + v30);
            uint64_t v32 = (uint64_t *)((char *)v9 + v30);
            uint64_t v313 = v32[1];
            *uint64_t v31 = *v32;
            v31[1] = v313;
            uint64_t v33 = v20[9];
            uint64_t v34 = (void *)(v8 + v33);
            long long v35 = (uint64_t *)((char *)v9 + v33);
            uint64_t v36 = v35[1];
            *uint64_t v34 = *v35;
            v34[1] = v36;
            uint64_t v37 = v20[10];
            __dst = (void *)(v8 + v37);
            v298 = (char *)v9 + v37;
            uint64_t v38 = sub_1C151D6DC();
            uint64_t v288 = *(void **)(v38 - 8);
            uint64_t v39 = (unsigned int (*)(char *, uint64_t, uint64_t))v288[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v39(v298, 1, v38))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(__dst, v298, *(void *)(*(void *)(v40 - 8) + 64));
            }
            else
            {
              ((void (*)(void *, char *, uint64_t))v288[2])(__dst, v298, v38);
              ((void (*)(void *, void, uint64_t, uint64_t))v288[7])(__dst, 0, 1, v38);
            }
            *(void *)(v8 + v20[11]) = *(uint64_t *)((char *)v9 + v20[11]);
            *(void *)(v8 + v20[12]) = *(uint64_t *)((char *)v9 + v20[12]);
            *(void *)(v8 + v20[13]) = *(uint64_t *)((char *)v9 + v20[13]);
            *(void *)(v8 + v20[14]) = *(uint64_t *)((char *)v9 + v20[14]);
            *(void *)(v8 + v20[15]) = *(uint64_t *)((char *)v9 + v20[15]);
            *(void *)(v8 + v20[16]) = *(uint64_t *)((char *)v9 + v20[16]);
            *(void *)(v8 + v20[17]) = *(uint64_t *)((char *)v9 + v20[17]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_75:
            swift_bridgeObjectRetain();
LABEL_79:
            swift_bridgeObjectRetain();
            goto LABEL_80;
        }
      }
      else if (v10 == 1)
      {
        uint64_t v11 = *v9;
        id v12 = (id)*v9;
        *(void *)uint64_t v8 = v11;
      }
      else
      {
        type metadata accessor for FormatFile();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v128 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v128;
            uint64_t v129 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v129;
            uint64_t v130 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v130;
            uint64_t v131 = v9[7];
            *(void *)(v8 + 48) = v9[6];
            *(void *)(v8 + 56) = v131;
            uint64_t v132 = v9[8];
            *(unsigned char *)(v8 + 72) = *((unsigned char *)v9 + 72);
            *(void *)(v8 + 64) = v132;
            uint64_t v133 = v9[11];
            *(void *)(v8 + 80) = v9[10];
            *(void *)(v8 + 88) = v133;
            __dste = (char *)(v9 + 12);
            unsigned __int8 v305 = *((unsigned char *)v9 + 106);
            int v134 = *((unsigned __int16 *)v9 + 52);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v305 == 255)
            {
              *(void *)(v8 + 96) = *(void *)__dste;
              *(_DWORD *)(v8 + 103) = *(_DWORD *)(__dste + 7);
            }
            else
            {
              uint64_t v198 = v134 & 0xFF00FFFF | (v305 << 16);
              uint64_t v199 = *(void *)__dste;
              sub_1BFFA742C(*(void *)__dste, v198, SBYTE2(v198), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
              *(void *)(v8 + 96) = v199;
              *(_WORD *)(v8 + 104) = v198;
              *(unsigned char *)(v8 + 106) = BYTE2(v198);
            }
            goto LABEL_97;
          case 2u:
            uint64_t v135 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v135;
            uint64_t v136 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v136;
            uint64_t v137 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v137;
            *(unsigned char *)(v8 + 48) = *((unsigned char *)v9 + 48);
            *(void *)(v8 + 56) = v9[7];
            char v138 = (_OWORD *)(v8 + 64);
            __dstf = v9 + 8;
            unint64_t v139 = v9[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v139 >= 2)
            {
              if (v139 == 2)
              {
                *char v138 = *__dstf;
              }
              else
              {
                *(unsigned char *)(v8 + 64) = *(unsigned char *)__dstf;
                *(void *)(v8 + 72) = v139;
                swift_bridgeObjectRetain();
              }
            }
            else
            {
              *char v138 = *__dstf;
            }
            uint64_t v241 = v9[11];
            *(void *)(v8 + 80) = v9[10];
            *(void *)(v8 + 88) = v241;
            uint64_t v242 = v9[13];
            *(void *)(v8 + 96) = v9[12];
            *(void *)(v8 + 104) = v242;
            uint64_t v243 = v9[15];
            *(void *)(v8 + 112) = v9[14];
            *(void *)(v8 + 120) = v243;
            *(unsigned char *)(v8 + 128) = *((unsigned char *)v9 + 128);
            *(void *)(v8 + 136) = v9[17];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_94;
          case 3u:
            uint64_t v140 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v140;
            uint64_t v141 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v141;
            uint64_t v142 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v142;
            uint64_t v143 = v9 + 6;
            unint64_t v144 = v9[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v144 >= 0xF)
            {
              *(void *)(v8 + 48) = *v143;
              *(void *)(v8 + 56) = v144;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v8 + 48) = *(_OWORD *)v143;
            }
            uint64_t v200 = v9[9];
            *(void *)(v8 + 64) = v9[8];
            *(void *)(v8 + 72) = v200;
            uint64_t v201 = v9[11];
            *(void *)(v8 + 80) = v9[10];
            *(void *)(v8 + 88) = v201;
            uint64_t v202 = v9[13];
            *(void *)(v8 + 96) = v9[12];
            *(void *)(v8 + 104) = v202;
            *(void *)(v8 + 112) = v9[14];
            *(unsigned char *)(v8 + 120) = *((unsigned char *)v9 + 120);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_96;
          case 4u:
            uint64_t v145 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v145;
            uint64_t v146 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v146;
            uint64_t v147 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v147;
            *(void *)(v8 + 48) = v9[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_47;
          case 5u:
            uint64_t v178 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v178;
            uint64_t v179 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v179;
            uint64_t v180 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v180;
            *(_WORD *)(v8 + 48) = *((_WORD *)v9 + 24);
            uint64_t v181 = v9[8];
            *(void *)(v8 + 56) = v9[7];
            *(void *)(v8 + 64) = v181;
            uint64_t v277 = v9[10];
            *(void *)(v8 + 72) = v9[9];
            *(void *)(v8 + 80) = v277;
            uint64_t v279 = v9[12];
            *(void *)(v8 + 88) = v9[11];
            *(void *)(v8 + 96) = v279;
            uint64_t v285 = v9[14];
            *(void *)(v8 + 104) = v9[13];
            *(void *)(v8 + 112) = v285;
            uint64_t v308 = v9[16];
            *(void *)(v8 + 120) = v9[15];
            *(void *)(v8 + 128) = v308;
            uint64_t v331 = v9[18];
            *(void *)(v8 + 136) = v9[17];
            *(void *)(v8 + 144) = v331;
            *(void *)(v8 + 152) = v9[19];
            uint64_t v274 = v9 + 20;
            unint64_t v345 = v9[21];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v345 >= 2)
            {
              uint64_t v183 = (_OWORD *)(v8 + 160);
              if (v345 != 2)
              {
                *(unsigned char *)(v8 + 160) = *v274;
                *(void *)(v8 + 168) = v345;
                swift_bridgeObjectRetain();
                goto LABEL_101;
              }
              long long v182 = *(_OWORD *)v274;
            }
            else
            {
              long long v182 = *(_OWORD *)v274;
              uint64_t v183 = (_OWORD *)(v8 + 160);
            }
            *uint64_t v183 = v182;
LABEL_101:
            v312 = (int *)type metadata accessor for FormatPackage();
            uint64_t v245 = v312[23];
            uint64_t v246 = (void *)(v8 + v245);
            uint64_t v247 = (char *)v9 + v245;
            uint64_t v248 = *(uint64_t *)((char *)v9 + v245 + 8);
            *uint64_t v246 = *(uint64_t *)((char *)v9 + v245);
            v246[1] = v248;
            uint64_t v287 = (int *)type metadata accessor for FormatCompilerOptions(0);
            unint64_t v295 = v247;
            uint64_t v249 = v287[6];
            v323 = v246;
            uint64_t v250 = (char *)v246 + v249;
            v251 = &v247[v249];
            uint64_t v252 = *(void *)&v247[v249 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v252 == 1)
            {
              long long v253 = *((_OWORD *)v251 + 1);
              *(_OWORD *)uint64_t v250 = *(_OWORD *)v251;
              *((_OWORD *)v250 + 1) = v253;
              *((_OWORD *)v250 + 2) = *((_OWORD *)v251 + 2);
            }
            else
            {
              *(void *)uint64_t v250 = *(void *)v251;
              *((void *)v250 + 1) = v252;
              uint64_t v254 = *((void *)v251 + 3);
              *((void *)v250 + 2) = *((void *)v251 + 2);
              *((void *)v250 + 3) = v254;
              uint64_t v255 = *((void *)v251 + 5);
              *((void *)v250 + 4) = *((void *)v251 + 4);
              *((void *)v250 + 5) = v255;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            uint64_t v256 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
            uint64_t v257 = &v250[v256];
            uint64_t v258 = &v251[v256];
            uint64_t v259 = sub_1C1518CDC();
            uint64_t v260 = *(void *)(v259 - 8);
            uint64_t v347 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v260 + 48);
            uint64_t v281 = v260;
            if (v347(v258, 1, v259))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v257, v258, *(void *)(*(void *)(v261 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v257, v258, v259);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v260 + 56))(v257, 0, 1, v259);
            }
            v262 = v295;
            uint64_t v263 = v323;
            uint64_t v334 = v259;
            uint64_t v264 = v287[7];
            unint64_t v296 = (char *)v323 + v264;
            uint64_t v265 = &v262[v264];
            if (((unsigned int (*)(char *, uint64_t))v347)(&v262[v264], 1))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v296, v265, *(void *)(*(void *)(v266 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v296, v265, v259);
              uint64_t v263 = v323;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v281 + 56))(v296, 0, 1, v259);
            }
            *(void *)((char *)v263 + v287[8]) = *(void *)&v262[v287[8]];
            uint64_t v267 = v312[24];
            uint64_t v268 = v8 + v267;
            uint64_t v324 = (uint64_t)v9 + v267;
            uint64_t v269 = sub_1C151928C();
            long long v297 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v269 - 8) + 16);
            swift_bridgeObjectRetain();
            v297(v268, v324, v269);
            uint64_t v270 = v312[25];
            v271 = (void *)(v8 + v270);
            uint64_t v272 = (char *)v9 + v270;
            if (v347(v272, 1, v334))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v271, v272, *(void *)(*(void *)(v273 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v281 + 16))(v271, v272, v334);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v281 + 56))(v271, 0, 1, v334);
            }
LABEL_97:
            swift_storeEnumTagMultiPayload();
            break;
          case 6u:
            uint64_t v184 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v184;
            *(void *)(v8 + 16) = v9[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_97;
          case 7u:
            *(void *)uint64_t v8 = *v9;
            swift_retain();
            goto LABEL_97;
          case 8u:
            uint64_t v185 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v185;
            uint64_t v186 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v186;
            uint64_t v187 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v187;
            uint64_t v188 = v9[7];
            *(void *)(v8 + 48) = v9[6];
            *(void *)(v8 + 56) = v188;
            *(void *)(v8 + 64) = v9[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_47:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_97;
          case 9u:
            uint64_t v148 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v148;
            uint64_t v149 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v149;
            uint64_t v150 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v150;
            uint64_t v151 = v9[7];
            *(void *)(v8 + 48) = v9[6];
            *(void *)(v8 + 56) = v151;
            uint64_t v343 = v9[9];
            *(void *)(v8 + 64) = v9[8];
            *(void *)(v8 + 72) = v343;
            *(unsigned char *)(v8 + 80) = *((unsigned char *)v9 + 80);
            __dstm = (void *)v9[12];
            *(void *)(v8 + 88) = v9[11];
            *(void *)(v8 + 96) = __dstm;
            *(unsigned char *)(v8 + 104) = *((unsigned char *)v9 + 104);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_97;
          case 0xAu:
            uint64_t v189 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v189;
            uint64_t v190 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v190;
            uint64_t v320 = v9[4];
            uint64_t v191 = v9[6];
            uint64_t v309 = v9[5];
            uint64_t v192 = v9[8];
            uint64_t v332 = v9[7];
            __dstn = (void *)v9[9];
            unsigned __int8 v346 = *((unsigned char *)v9 + 80);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v320, v309, v191, v332, v192, (uint64_t)__dstn, v346);
            *(void *)(v8 + 32) = v320;
            *(void *)(v8 + 40) = v309;
            *(void *)(v8 + 48) = v191;
            *(void *)(v8 + 56) = v332;
            *(void *)(v8 + 64) = v192;
            *(void *)(v8 + 72) = __dstn;
            *(unsigned char *)(v8 + 80) = v346;
            goto LABEL_97;
          case 0xBu:
            uint64_t v152 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v152;
            uint64_t v153 = v9[3];
            *(void *)(v8 + 16) = v9[2];
            *(void *)(v8 + 24) = v153;
            uint64_t v154 = v9[5];
            *(void *)(v8 + 32) = v9[4];
            *(void *)(v8 + 40) = v154;
            uint64_t v155 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
            v156 = (void *)(v8 + v155);
            uint64_t v157 = (uint64_t)v9 + v155;
            uint64_t v158 = *(uint64_t *)((char *)v9 + v155 + 8);
            void *v156 = *(uint64_t *)((char *)v9 + v155);
            v156[1] = v158;
            uint64_t v159 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v160 = v159[5];
            uint64_t v318 = v157 + v160;
            uint64_t v329 = (char *)v156 + v160;
            uint64_t v161 = sub_1C151631C();
            long long v306 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v161 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v306(v329, v318, v161);
            uint64_t v162 = v159[6];
            unint64_t v163 = (void *)((char *)v156 + v162);
            uint64_t v164 = (void *)(v157 + v162);
            uint64_t v165 = v164[1];
            *unint64_t v163 = *v164;
            v163[1] = v165;
            uint64_t v166 = v159[7];
            uint64_t v167 = (void *)((char *)v156 + v166);
            uint64_t v168 = (void *)(v157 + v166);
            uint64_t v330 = v168[1];
            *uint64_t v167 = *v168;
            v167[1] = v330;
            uint64_t v169 = v159[8];
            unint64_t v170 = (void *)((char *)v156 + v169);
            unint64_t v171 = (void *)(v157 + v169);
            uint64_t v319 = v171[1];
            *unint64_t v170 = *v171;
            v170[1] = v319;
            uint64_t v172 = v159[9];
            uint64_t v173 = (void *)((char *)v156 + v172);
            uint64_t v174 = (void *)(v157 + v172);
            uint64_t v307 = v174[1];
            *uint64_t v173 = *v174;
            v173[1] = v307;
            uint64_t v175 = v159[10];
            unint64_t v344 = (char *)v156 + v175;
            __dstg = (void *)(v157 + v175);
            uint64_t v176 = sub_1C151D6DC();
            uint64_t v284 = *(void *)(v176 - 8);
            uint64_t v293 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v284 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v293(__dstg, 1, v176))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(v344, __dstg, *(void *)(*(void *)(v177 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(v284 + 16))(v344, __dstg, v176);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v284 + 56))(v344, 0, 1, v176);
            }
            *(void *)((char *)v156 + v159[11]) = *(void *)(v157 + v159[11]);
            *(void *)((char *)v156 + v159[12]) = *(void *)(v157 + v159[12]);
            *(void *)((char *)v156 + v159[13]) = *(void *)(v157 + v159[13]);
            *(void *)((char *)v156 + v159[14]) = *(void *)(v157 + v159[14]);
            *(void *)((char *)v156 + v159[15]) = *(void *)(v157 + v159[15]);
            *(void *)((char *)v156 + v159[16]) = *(void *)(v157 + v159[16]);
            *(void *)((char *)v156 + v159[17]) = *(void *)(v157 + v159[17]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_95;
          default:
            uint64_t v41 = v9[1];
            *(void *)uint64_t v8 = *v9;
            *(void *)(v8 + 8) = v41;
            uint64_t v42 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v43 = v42[5];
            uint64_t v44 = v8 + v43;
            __dstj = (char *)v9 + v43;
            uint64_t v45 = sub_1C151631C();
            uint64_t v337 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v45 - 8) + 16);
            swift_bridgeObjectRetain();
            v337(v44, __dstj, v45);
            uint64_t v46 = v42[6];
            unsigned __int8 v47 = (void *)(v8 + v46);
            uint64_t v48 = (uint64_t *)((char *)v9 + v46);
            uint64_t v338 = v48[1];
            *unsigned __int8 v47 = *v48;
            v47[1] = v338;
            uint64_t v49 = v42[7];
            long long v50 = (void *)(v8 + v49);
            uint64_t v51 = (uint64_t *)((char *)v9 + v49);
            uint64_t v326 = v51[1];
            void *v50 = *v51;
            v50[1] = v326;
            uint64_t v52 = v42[8];
            unint64_t v53 = (void *)(v8 + v52);
            uint64_t v54 = (uint64_t *)((char *)v9 + v52);
            uint64_t v314 = v54[1];
            void *v53 = *v54;
            v53[1] = v314;
            uint64_t v55 = v42[9];
            uint64_t v56 = (void *)(v8 + v55);
            uint64_t v57 = (uint64_t *)((char *)v9 + v55);
            uint64_t v58 = v57[1];
            void *v56 = *v57;
            v56[1] = v58;
            uint64_t v59 = v42[10];
            __dsta = (void *)(v8 + v59);
            uint64_t v299 = (char *)v9 + v59;
            uint64_t v60 = sub_1C151D6DC();
            v289 = *(void **)(v60 - 8);
            uint64_t v61 = (unsigned int (*)(char *, uint64_t, uint64_t))v289[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v61(v299, 1, v60))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(__dsta, v299, *(void *)(*(void *)(v62 - 8) + 64));
            }
            else
            {
              ((void (*)(void *, char *, uint64_t))v289[2])(__dsta, v299, v60);
              ((void (*)(void *, void, uint64_t, uint64_t))v289[7])(__dsta, 0, 1, v60);
            }
            *(void *)(v8 + v42[11]) = *(uint64_t *)((char *)v9 + v42[11]);
            *(void *)(v8 + v42[12]) = *(uint64_t *)((char *)v9 + v42[12]);
            *(void *)(v8 + v42[13]) = *(uint64_t *)((char *)v9 + v42[13]);
            *(void *)(v8 + v42[14]) = *(uint64_t *)((char *)v9 + v42[14]);
            *(void *)(v8 + v42[15]) = *(uint64_t *)((char *)v9 + v42[15]);
            *(void *)(v8 + v42[16]) = *(uint64_t *)((char *)v9 + v42[16]);
            *(void *)(v8 + v42[17]) = *(uint64_t *)((char *)v9 + v42[17]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_94:
            swift_bridgeObjectRetain();
LABEL_95:
            swift_bridgeObjectRetain();
LABEL_96:
            swift_bridgeObjectRetain();
            goto LABEL_97;
        }
      }
      swift_storeEnumTagMultiPayload();
      *(void *)(a1 + v364[6]) = *(uint64_t *)((char *)a2 + v364[6]);
      *(void *)(a1 + v364[7]) = *(uint64_t *)((char *)a2 + v364[7]);
      *(void *)(a1 + v364[8]) = *(uint64_t *)((char *)a2 + v364[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v14;
      char v15 = a2 + 2;
      long long v16 = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 40) = v16;
      uint64_t v17 = v16;
      unint64_t v18 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v16 - 8);
      swift_bridgeObjectRetain();
      v18(a1 + 16, v15, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1C0913D20()
{
  if (!qword_1EA1A63F0)
  {
    type metadata accessor for FormatFile();
    sub_1C017F734();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A63F0);
    }
  }
}

uint64_t sub_1C0913D94(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 2)
  {
    if (result != 1)
    {
      if (!result)
      {
        swift_bridgeObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      return result;
    }
    swift_release();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for DebugFormatCompilerResultEntry() + 20);
    type metadata accessor for DebugFormatCompilerResultOutput();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v11 = type metadata accessor for FormatContent(0);
          uint64_t v12 = v3 + *(int *)(v11 + 20);
          uint64_t v13 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v14 = v3 + *(int *)(v11 + 40);
          uint64_t v15 = sub_1C151D6DC();
          uint64_t v16 = *(void *)(v15 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
            (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
          }
          goto LABEL_76;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(unsigned __int8 *)(v3 + 106) != 255)
          {
            uint64_t v37 = *(unsigned __int16 *)(v3 + 104) | (*(unsigned __int8 *)(v3 + 106) << 16);
            sub_1BFFA742C(*(void *)(v3 + 96), v37, SBYTE2(v37), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
          }
          break;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v3 + 72) >= 3uLL) {
            swift_bridgeObjectRelease();
          }
          goto LABEL_76;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v3 + 56) >= 0xFuLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_77;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_77;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v3 + 168) >= 3uLL) {
            swift_bridgeObjectRelease();
          }
          uint64_t v38 = (int *)type metadata accessor for FormatPackage();
          uint64_t v39 = v3 + v38[23];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v40 = type metadata accessor for FormatCompilerOptions(0);
          uint64_t v41 = v39 + *(int *)(v40 + 24);
          if (*(void *)(v41 + 8) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v42 = v41 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v43 = sub_1C1518CDC();
          uint64_t v58 = *(void *)(v43 - 8);
          uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
          if (!v44(v42, 1, v43)) {
            (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v42, v43);
          }
          uint64_t v45 = v39 + *(int *)(v40 + 28);
          if (!v44(v45, 1, v43)) {
            (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v45, v43);
          }
          swift_bridgeObjectRelease();
          uint64_t v46 = v3 + v38[24];
          uint64_t v47 = sub_1C151928C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
          uint64_t v48 = v3 + v38[25];
          if (!v44(v48, 1, v43)) {
            (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v48, v43);
          }
          break;
        case 6u:
          swift_bridgeObjectRelease();
          goto LABEL_77;
        case 7u:
          swift_release();
          break;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_77;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_77;
        case 0xAu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEC28BC(*(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(unsigned char *)(v3 + 80));
          break;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v49 = v3 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
          swift_bridgeObjectRelease();
          uint64_t v50 = type metadata accessor for FormatContent(0);
          uint64_t v51 = v49 + *(int *)(v50 + 20);
          uint64_t v52 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v53 = v49 + *(int *)(v50 + 40);
          uint64_t v54 = sub_1C151D6DC();
          uint64_t v55 = *(void *)(v54 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54)) {
            (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
          }
LABEL_76:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_77:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      sub_1C0913D20();
      uint64_t v17 = *(void **)(v3 + *(int *)(v56 + 48));
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (!EnumCaseMultiPayload)
        {
          type metadata accessor for FormatFile();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              swift_bridgeObjectRelease();
              uint64_t v5 = type metadata accessor for FormatContent(0);
              uint64_t v6 = v3 + *(int *)(v5 + 20);
              uint64_t v7 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v8 = v3 + *(int *)(v5 + 40);
              uint64_t v9 = sub_1C151D6DC();
              uint64_t v10 = *(void *)(v9 - 8);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
                (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
              }
              goto LABEL_49;
            case 1u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(unsigned __int8 *)(v3 + 106) != 255)
              {
                uint64_t v18 = *(unsigned __int16 *)(v3 + 104) | (*(unsigned __int8 *)(v3 + 106) << 16);
                sub_1BFFA742C(*(void *)(v3 + 96), v18, SBYTE2(v18), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
              }
              goto LABEL_80;
            case 2u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v3 + 72) >= 3uLL) {
                swift_bridgeObjectRelease();
              }
              goto LABEL_49;
            case 3u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v3 + 56) >= 0xFuLL) {
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_80;
            case 4u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_80;
            case 5u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v3 + 168) >= 3uLL) {
                swift_bridgeObjectRelease();
              }
              uint64_t v57 = (int *)type metadata accessor for FormatPackage();
              uint64_t v19 = v3 + v57[23];
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v20 = type metadata accessor for FormatCompilerOptions(0);
              uint64_t v21 = v19 + *(int *)(v20 + 24);
              if (*(void *)(v21 + 8) != 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              uint64_t v22 = v21 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
              uint64_t v23 = sub_1C1518CDC();
              uint64_t v24 = *(void *)(v23 - 8);
              uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
              if (!v25(v22, 1, v23)) {
                (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
              }
              uint64_t v26 = v19 + *(int *)(v20 + 28);
              if (!v25(v26, 1, v23)) {
                (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
              }
              swift_bridgeObjectRelease();
              uint64_t v27 = v3 + v57[24];
              uint64_t v28 = sub_1C151928C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
              uint64_t v29 = v3 + v57[25];
              if (!v25(v29, 1, v23)) {
                (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v29, v23);
              }
              goto LABEL_80;
            case 6u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_80;
            case 7u:
              swift_release();
              goto LABEL_80;
            case 8u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_80;
            case 9u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_80;
            case 0xAu:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1BFEC28BC(*(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(unsigned char *)(v3 + 80));
              goto LABEL_80;
            case 0xBu:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v30 = v3 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
              swift_bridgeObjectRelease();
              uint64_t v31 = type metadata accessor for FormatContent(0);
              uint64_t v32 = v30 + *(int *)(v31 + 20);
              uint64_t v33 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v34 = v30 + *(int *)(v31 + 40);
              uint64_t v35 = sub_1C151D6DC();
              uint64_t v36 = *(void *)(v35 - 8);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35)) {
                (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
              }
LABEL_49:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              break;
            default:
              goto LABEL_80;
          }
        }
        goto LABEL_80;
      }
      uint64_t v17 = *(void **)v3;
    }

LABEL_80:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1C0914EC8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v5 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
    uint64_t v6 = v5[5];
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t *)(a2 + v6);
    type metadata accessor for DebugFormatCompilerResultOutput();
    swift_retain();
    int v9 = swift_getEnumCaseMultiPayload();
    if (v9 == 2)
    {
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v363 = v5;
          uint64_t v57 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v57;
          uint64_t v58 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v58;
          uint64_t v59 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v59;
          uint64_t v60 = v8[7];
          *(void *)(v7 + 48) = v8[6];
          *(void *)(v7 + 56) = v60;
          uint64_t v61 = v8[8];
          *(unsigned char *)(v7 + 72) = *((unsigned char *)v8 + 72);
          *(void *)(v7 + 64) = v61;
          uint64_t v62 = v8[11];
          *(void *)(v7 + 80) = v8[10];
          *(void *)(v7 + 88) = v62;
          __dstb = v8 + 12;
          unsigned __int8 v285 = *((unsigned char *)v8 + 106);
          int v296 = *((unsigned __int16 *)v8 + 52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v285 == 255)
          {
            *(void *)(v7 + 96) = *__dstb;
            *(_DWORD *)(v7 + 103) = *(_DWORD *)((char *)v8 + 103);
          }
          else
          {
            unsigned int v187 = v296 & 0xFF00FFFF | (v285 << 16);
            uint64_t v188 = *__dstb;
            sub_1BFFA742C(*__dstb, v187, SBYTE2(v187), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            *(void *)(v7 + 96) = v188;
            *(_WORD *)(v7 + 104) = v296;
            *(unsigned char *)(v7 + 106) = BYTE2(v187);
          }
          goto LABEL_80;
        case 2u:
          uint64_t v363 = v5;
          uint64_t v63 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v63;
          uint64_t v64 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v64;
          uint64_t v65 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v65;
          *(unsigned char *)(v7 + 48) = *((unsigned char *)v8 + 48);
          *(void *)(v7 + 56) = v8[7];
          uint64_t v334 = v8 + 8;
          unint64_t v66 = v8[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v66 >= 2)
          {
            uint64_t v68 = (_OWORD *)(v7 + 64);
            if (v66 != 2)
            {
              *(unsigned char *)(v7 + 64) = *v334;
              *(void *)(v7 + 72) = v66;
              swift_bridgeObjectRetain();
              goto LABEL_78;
            }
            long long v67 = *(_OWORD *)v334;
          }
          else
          {
            long long v67 = *(_OWORD *)v334;
            uint64_t v68 = (_OWORD *)(v7 + 64);
          }
          *uint64_t v68 = v67;
LABEL_78:
          uint64_t v196 = v8[11];
          *(void *)(v7 + 80) = v8[10];
          *(void *)(v7 + 88) = v196;
          uint64_t v197 = v8[13];
          *(void *)(v7 + 96) = v8[12];
          *(void *)(v7 + 104) = v197;
          uint64_t v198 = v8[15];
          *(void *)(v7 + 112) = v8[14];
          *(void *)(v7 + 120) = v198;
          *(unsigned char *)(v7 + 128) = *((unsigned char *)v8 + 128);
          *(void *)(v7 + 136) = v8[17];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_79:
          swift_bridgeObjectRetain();
          goto LABEL_80;
        case 3u:
          uint64_t v363 = v5;
          uint64_t v69 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v69;
          uint64_t v70 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v70;
          uint64_t v71 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v71;
          uint64_t v72 = v8 + 6;
          unint64_t v73 = v8[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v73 >= 0xF)
          {
            *(void *)(v7 + 48) = *v72;
            *(void *)(v7 + 56) = v73;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 48) = *(_OWORD *)v72;
          }
          uint64_t v189 = v8[9];
          *(void *)(v7 + 64) = v8[8];
          *(void *)(v7 + 72) = v189;
          uint64_t v190 = v8[11];
          *(void *)(v7 + 80) = v8[10];
          *(void *)(v7 + 88) = v190;
          uint64_t v191 = v8[13];
          *(void *)(v7 + 96) = v8[12];
          *(void *)(v7 + 104) = v191;
          *(void *)(v7 + 112) = v8[14];
          *(unsigned char *)(v7 + 120) = *((unsigned char *)v8 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_79;
        case 4u:
          uint64_t v74 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v74;
          uint64_t v75 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v75;
          uint64_t v76 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v76;
          *(void *)(v7 + 48) = v8[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_81;
        case 5u:
          uint64_t v363 = v5;
          uint64_t v77 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v77;
          uint64_t v78 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v78;
          uint64_t v79 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v79;
          *(_WORD *)(v7 + 48) = *((_WORD *)v8 + 24);
          uint64_t v80 = v8[8];
          *(void *)(v7 + 56) = v8[7];
          *(void *)(v7 + 64) = v80;
          uint64_t v265 = v8[10];
          *(void *)(v7 + 72) = v8[9];
          *(void *)(v7 + 80) = v265;
          uint64_t v267 = v8[12];
          *(void *)(v7 + 88) = v8[11];
          *(void *)(v7 + 96) = v267;
          uint64_t v268 = v8[14];
          *(void *)(v7 + 104) = v8[13];
          *(void *)(v7 + 112) = v268;
          uint64_t v276 = v8[16];
          *(void *)(v7 + 120) = v8[15];
          *(void *)(v7 + 128) = v276;
          uint64_t v297 = v8[18];
          *(void *)(v7 + 136) = v8[17];
          *(void *)(v7 + 144) = v297;
          *(void *)(v7 + 152) = v8[19];
          uint64_t v335 = v8 + 20;
          unint64_t v310 = v8[21];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v310 >= 2)
          {
            uint64_t v82 = (_OWORD *)(v7 + 160);
            if (v310 != 2)
            {
              *(unsigned char *)(v7 + 160) = *v335;
              *(void *)(v7 + 168) = v310;
              swift_bridgeObjectRetain();
              goto LABEL_82;
            }
            long long v81 = *(_OWORD *)v335;
          }
          else
          {
            long long v81 = *(_OWORD *)v335;
            uint64_t v82 = (_OWORD *)(v7 + 160);
          }
          *uint64_t v82 = v81;
LABEL_82:
          uint64_t v292 = (int *)type metadata accessor for FormatPackage();
          uint64_t v203 = v292[23];
          uint64_t v204 = (void *)(v7 + v203);
          uint64_t v205 = (char *)v8 + v203;
          uint64_t v343 = *(uint64_t *)((char *)v8 + v203 + 8);
          *uint64_t v204 = *(uint64_t *)((char *)v8 + v203);
          v204[1] = v343;
          uint64_t v304 = type metadata accessor for FormatCompilerOptions(0);
          uint64_t v316 = v204;
          uint64_t v206 = *(int *)(v304 + 24);
          uint64_t v207 = (char *)v204 + v206;
          __dstg = v205;
          v208 = &v205[v206];
          uint64_t v209 = *(void *)&v205[v206 + 8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v209 == 1)
          {
            long long v210 = *((_OWORD *)v208 + 1);
            *(_OWORD *)uint64_t v207 = *(_OWORD *)v208;
            *((_OWORD *)v207 + 1) = v210;
            *((_OWORD *)v207 + 2) = *((_OWORD *)v208 + 2);
          }
          else
          {
            *(void *)uint64_t v207 = *(void *)v208;
            *((void *)v207 + 1) = v209;
            uint64_t v211 = *((void *)v208 + 3);
            *((void *)v207 + 2) = *((void *)v208 + 2);
            *((void *)v207 + 3) = v211;
            uint64_t v212 = *((void *)v208 + 5);
            *((void *)v207 + 4) = *((void *)v208 + 4);
            *((void *)v207 + 5) = v212;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v213 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v214 = &v207[v213];
          uint64_t v215 = &v208[v213];
          uint64_t v216 = sub_1C1518CDC();
          uint64_t v217 = *(void *)(v216 - 8);
          unsigned __int8 v327 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v217 + 48);
          uint64_t v272 = v217;
          if (v327(v215, 1, v216))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v214, v215, *(void *)(*(void *)(v218 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v217 + 16))(v214, v215, v216);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v217 + 56))(v214, 0, 1, v216);
          }
          uint64_t v219 = v216;
          uint64_t v221 = v304;
          uint64_t v220 = v316;
          uint64_t v222 = *(int *)(v304 + 28);
          BOOL v223 = (char *)v316 + v222;
          uint64_t v224 = &__dstg[v222];
          uint64_t v305 = v219;
          if (v327(&__dstg[v222], 1, v219))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v223, v224, *(void *)(*(void *)(v225 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v272 + 16))(v223, v224, v305);
            uint64_t v220 = v316;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v272 + 56))(v223, 0, 1, v305);
          }
          *(void *)((char *)v220 + *(int *)(v221 + 32)) = *(void *)&__dstg[*(int *)(v221 + 32)];
          uint64_t v226 = v292[24];
          __dstp = (void *)(v7 + v226);
          uint64_t v317 = (uint64_t)v8 + v226;
          uint64_t v227 = sub_1C151928C();
          uint64_t v280 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v227 - 8) + 16);
          swift_bridgeObjectRetain();
          v280(__dstp, v317, v227);
          uint64_t v228 = v292[25];
          uint64_t v229 = (void *)(v7 + v228);
          uint64_t v230 = (char *)v8 + v228;
          if (v327((char *)v8 + v228, 1, v305))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v229, v230, *(void *)(*(void *)(v231 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v272 + 16))(v229, v230, v305);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v229, 0, 1, v305);
          }
LABEL_80:
          uint64_t v5 = v363;
LABEL_81:
          swift_storeEnumTagMultiPayload();
          sub_1C0913D20();
          uint64_t v200 = *(int *)(v199 + 48);
          uint64_t v201 = *(void **)((char *)v8 + v200);
          id v202 = v201;
          *(void *)(v7 + v200) = v201;
          break;
        case 6u:
          uint64_t v83 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v83;
          *(void *)(v7 + 16) = v8[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_81;
        case 7u:
          *(void *)uint64_t v7 = *v8;
          swift_retain();
          goto LABEL_81;
        case 8u:
          uint64_t v84 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v84;
          uint64_t v85 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v85;
          uint64_t v86 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v86;
          uint64_t v365 = v5;
          uint64_t v87 = v8[7];
          *(void *)(v7 + 48) = v8[6];
          *(void *)(v7 + 56) = v87;
          *(void *)(v7 + 64) = v8[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v5 = v365;
          goto LABEL_27;
        case 9u:
          uint64_t v88 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v88;
          uint64_t v89 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v89;
          uint64_t v90 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v90;
          uint64_t v366 = v5;
          uint64_t v91 = v8[7];
          *(void *)(v7 + 48) = v8[6];
          *(void *)(v7 + 56) = v91;
          uint64_t v336 = v8[9];
          *(void *)(v7 + 64) = v8[8];
          *(void *)(v7 + 72) = v336;
          *(unsigned char *)(v7 + 80) = *((unsigned char *)v8 + 80);
          __dstk = (void *)v8[12];
          *(void *)(v7 + 88) = v8[11];
          *(void *)(v7 + 96) = __dstk;
          *(unsigned char *)(v7 + 104) = *((unsigned char *)v8 + 104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v5 = v366;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_27:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_81;
        case 0xAu:
          uint64_t v92 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v92;
          uint64_t v93 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v93;
          uint64_t v298 = v8[4];
          uint64_t v94 = v8[6];
          uint64_t v286 = v8[5];
          uint64_t v337 = v8[8];
          __dstl = (void *)v8[7];
          uint64_t v323 = v8[9];
          unsigned __int8 v311 = *((unsigned char *)v8 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v298, v286, v94, (uint64_t)__dstl, v337, v323, v311);
          *(void *)(v7 + 32) = v298;
          *(void *)(v7 + 40) = v286;
          *(void *)(v7 + 48) = v94;
          *(void *)(v7 + 56) = __dstl;
          *(void *)(v7 + 64) = v337;
          *(void *)(v7 + 72) = v323;
          *(unsigned char *)(v7 + 80) = v311;
          goto LABEL_81;
        case 0xBu:
          uint64_t v363 = v5;
          uint64_t v95 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v95;
          uint64_t v96 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v96;
          uint64_t v97 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v97;
          uint64_t v98 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          uint64_t v99 = (void *)(v7 + v98);
          uint64_t v100 = (uint64_t)v8 + v98;
          uint64_t v101 = *(uint64_t *)((char *)v8 + v98 + 8);
          *uint64_t v99 = *(uint64_t *)((char *)v8 + v98);
          v99[1] = v101;
          uint64_t v102 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v103 = v102[5];
          uint64_t v287 = v100 + v103;
          uint64_t v299 = (char *)v99 + v103;
          uint64_t v104 = sub_1C151631C();
          uint64_t v277 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v277(v299, v287, v104);
          uint64_t v105 = v102[6];
          uint64_t v106 = (void *)((char *)v99 + v105);
          uint64_t v107 = (void *)(v100 + v105);
          uint64_t v312 = v107[1];
          void *v106 = *v107;
          v106[1] = v312;
          uint64_t v108 = v102[7];
          uint64_t v109 = (void *)((char *)v99 + v108);
          uint64_t v110 = (void *)(v100 + v108);
          uint64_t v300 = v110[1];
          *uint64_t v109 = *v110;
          v109[1] = v300;
          uint64_t v111 = v102[8];
          uint64_t v112 = (void *)((char *)v99 + v111);
          uint64_t v113 = (void *)(v100 + v111);
          uint64_t v288 = v113[1];
          *uint64_t v112 = *v113;
          v112[1] = v288;
          uint64_t v114 = v102[9];
          uint64_t v115 = (void *)((char *)v99 + v114);
          uint64_t v116 = (void *)(v100 + v114);
          uint64_t v278 = v116[1];
          *uint64_t v115 = *v116;
          v115[1] = v278;
          uint64_t v117 = v102[10];
          uint64_t v324 = v102;
          uint64_t v338 = (char *)v99 + v117;
          __dstc = (void *)(v100 + v117);
          uint64_t v118 = sub_1C151D6DC();
          uint64_t v269 = *(void *)(v118 - 8);
          uint64_t v270 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v269 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v270(__dstc, 1, v118))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(v338, __dstc, *(void *)(*(void *)(v119 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(v269 + 16))(v338, __dstc, v118);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v269 + 56))(v338, 0, 1, v118);
          }
          *(void *)((char *)v99 + v324[11]) = *(void *)(v100 + v324[11]);
          *(void *)((char *)v99 + v324[12]) = *(void *)(v100 + v324[12]);
          *(void *)((char *)v99 + v324[13]) = *(void *)(v100 + v324[13]);
          *(void *)((char *)v99 + v324[14]) = *(void *)(v100 + v324[14]);
          *(void *)((char *)v99 + v324[15]) = *(void *)(v100 + v324[15]);
          *(void *)((char *)v99 + v324[16]) = *(void *)(v100 + v324[16]);
          *(void *)((char *)v99 + v324[17]) = *(void *)(v100 + v324[17]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_75;
        default:
          uint64_t v363 = v5;
          uint64_t v17 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v17;
          uint64_t v18 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v19 = v18[5];
          uint64_t v330 = (uint64_t)v8 + v19;
          __dstuint64_t i = (void *)(v7 + v19);
          uint64_t v20 = sub_1C151631C();
          uint64_t v319 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v319(__dsti, v330, v20);
          uint64_t v21 = v18[6];
          uint64_t v22 = (void *)(v7 + v21);
          uint64_t v23 = (uint64_t *)((char *)v8 + v21);
          uint64_t v331 = v23[1];
          *uint64_t v22 = *v23;
          v22[1] = v331;
          uint64_t v24 = v18[7];
          uint64_t v25 = (void *)(v7 + v24);
          uint64_t v26 = (uint64_t *)((char *)v8 + v24);
          uint64_t v320 = v26[1];
          *uint64_t v25 = *v26;
          v25[1] = v320;
          uint64_t v27 = v18[8];
          uint64_t v28 = (void *)(v7 + v27);
          uint64_t v29 = (uint64_t *)((char *)v8 + v27);
          uint64_t v308 = v29[1];
          void *v28 = *v29;
          v28[1] = v308;
          uint64_t v30 = v18[9];
          uint64_t v31 = (void *)(v7 + v30);
          uint64_t v32 = (uint64_t *)((char *)v8 + v30);
          uint64_t v33 = v32[1];
          *uint64_t v31 = *v32;
          v31[1] = v33;
          uint64_t v34 = v18[10];
          __dst = (void *)(v7 + v34);
          uint64_t v294 = (char *)v8 + v34;
          uint64_t v35 = sub_1C151D6DC();
          uint64_t v274 = *(void *)(v35 - 8);
          uint64_t v283 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v274 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v283(v294, 1, v35))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dst, v294, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v274 + 16))(__dst, v294, v35);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v274 + 56))(__dst, 0, 1, v35);
          }
          *(void *)(v7 + v18[11]) = *(uint64_t *)((char *)v8 + v18[11]);
          *(void *)(v7 + v18[12]) = *(uint64_t *)((char *)v8 + v18[12]);
          *(void *)(v7 + v18[13]) = *(uint64_t *)((char *)v8 + v18[13]);
          *(void *)(v7 + v18[14]) = *(uint64_t *)((char *)v8 + v18[14]);
          *(void *)(v7 + v18[15]) = *(uint64_t *)((char *)v8 + v18[15]);
          *(void *)(v7 + v18[16]) = *(uint64_t *)((char *)v8 + v18[16]);
          *(void *)(v7 + v18[17]) = *(uint64_t *)((char *)v8 + v18[17]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_75:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_79;
      }
    }
    else if (v9 == 1)
    {
      uint64_t v10 = *v8;
      id v11 = (id)*v8;
      *(void *)uint64_t v7 = v10;
    }
    else
    {
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v367 = v5;
          uint64_t v120 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v120;
          uint64_t v121 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v121;
          uint64_t v122 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v122;
          uint64_t v123 = v8[7];
          *(void *)(v7 + 48) = v8[6];
          *(void *)(v7 + 56) = v123;
          uint64_t v124 = v8[8];
          *(unsigned char *)(v7 + 72) = *((unsigned char *)v8 + 72);
          *(void *)(v7 + 64) = v124;
          uint64_t v125 = v8[11];
          *(void *)(v7 + 80) = v8[10];
          *(void *)(v7 + 88) = v125;
          __dstd = (char *)(v8 + 12);
          unsigned __int8 v126 = *((unsigned char *)v8 + 106);
          int v127 = *((unsigned __int16 *)v8 + 52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v126 == 255)
          {
            *(void *)(v7 + 96) = *(void *)__dstd;
            *(_DWORD *)(v7 + 103) = *(_DWORD *)(__dstd + 7);
          }
          else
          {
            uint64_t v192 = v127 & 0xFF00FFFF | (v126 << 16);
            uint64_t v193 = *(void *)__dstd;
            sub_1BFFA742C(*(void *)__dstd, v192, SBYTE2(v192), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            *(void *)(v7 + 96) = v193;
            *(_WORD *)(v7 + 104) = v192;
            *(unsigned char *)(v7 + 106) = BYTE2(v192);
          }
          goto LABEL_97;
        case 2u:
          uint64_t v367 = v5;
          uint64_t v128 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v128;
          uint64_t v129 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v129;
          uint64_t v130 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v130;
          *(unsigned char *)(v7 + 48) = *((unsigned char *)v8 + 48);
          *(void *)(v7 + 56) = v8[7];
          unint64_t v339 = v8 + 8;
          __dste = (_OWORD *)(v7 + 64);
          unint64_t v131 = v8[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v131 >= 2)
          {
            if (v131 == 2)
            {
              _OWORD *__dste = *v339;
            }
            else
            {
              *(unsigned char *)(v7 + 64) = *(unsigned char *)v339;
              *(void *)(v7 + 72) = v131;
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            _OWORD *__dste = *v339;
          }
          uint64_t v232 = v8[11];
          *(void *)(v7 + 80) = v8[10];
          *(void *)(v7 + 88) = v232;
          uint64_t v233 = v8[13];
          *(void *)(v7 + 96) = v8[12];
          *(void *)(v7 + 104) = v233;
          uint64_t v234 = v8[15];
          *(void *)(v7 + 112) = v8[14];
          *(void *)(v7 + 120) = v234;
          *(unsigned char *)(v7 + 128) = *((unsigned char *)v8 + 128);
          *(void *)(v7 + 136) = v8[17];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 3u:
          uint64_t v367 = v5;
          uint64_t v132 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v132;
          uint64_t v133 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v133;
          uint64_t v134 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v134;
          uint64_t v135 = v8 + 6;
          unint64_t v136 = v8[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v136 >= 0xF)
          {
            *(void *)(v7 + 48) = *v135;
            *(void *)(v7 + 56) = v136;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 48) = *(_OWORD *)v135;
          }
          uint64_t v194 = v8[9];
          *(void *)(v7 + 64) = v8[8];
          *(void *)(v7 + 72) = v194;
          uint64_t v195 = v8[11];
          *(void *)(v7 + 80) = v8[10];
          *(void *)(v7 + 88) = v195;
          __dsto = (void *)v8[13];
          *(void *)(v7 + 96) = v8[12];
          *(void *)(v7 + 104) = __dsto;
          *(void *)(v7 + 112) = v8[14];
          *(unsigned char *)(v7 + 120) = *((unsigned char *)v8 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_96;
        case 4u:
          uint64_t v137 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v137;
          uint64_t v138 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v138;
          uint64_t v139 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v139;
          *(void *)(v7 + 48) = v8[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_47;
        case 5u:
          uint64_t v367 = v5;
          uint64_t v170 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v170;
          uint64_t v171 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v171;
          uint64_t v172 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v172;
          *(_WORD *)(v7 + 48) = *((_WORD *)v8 + 24);
          uint64_t v173 = v8[8];
          *(void *)(v7 + 56) = v8[7];
          *(void *)(v7 + 64) = v173;
          uint64_t v174 = v8[10];
          *(void *)(v7 + 72) = v8[9];
          *(void *)(v7 + 80) = v174;
          uint64_t v175 = v8[12];
          *(void *)(v7 + 88) = v8[11];
          *(void *)(v7 + 96) = v175;
          uint64_t v176 = v8[14];
          *(void *)(v7 + 104) = v8[13];
          *(void *)(v7 + 112) = v176;
          uint64_t v177 = v8[16];
          *(void *)(v7 + 120) = v8[15];
          *(void *)(v7 + 128) = v177;
          uint64_t v178 = v8[18];
          *(void *)(v7 + 136) = v8[17];
          *(void *)(v7 + 144) = v178;
          *(void *)(v7 + 152) = v8[19];
          uint64_t v264 = v8 + 20;
          uint64_t v266 = (_OWORD *)(v7 + 160);
          unint64_t v341 = v8[21];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v341 >= 2)
          {
            if (v341 == 2)
            {
              *uint64_t v266 = *v264;
            }
            else
            {
              *(unsigned char *)(v7 + 160) = *(unsigned char *)v264;
              *(void *)(v7 + 168) = v341;
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            *uint64_t v266 = *v264;
          }
          uint64_t v293 = (int *)type metadata accessor for FormatPackage();
          uint64_t v236 = v293[23];
          uint64_t v237 = (void *)(v7 + v236);
          uint64_t v238 = (uint64_t)v8 + v236;
          uint64_t v239 = *(uint64_t *)((char *)v8 + v236 + 8);
          *uint64_t v237 = *(uint64_t *)((char *)v8 + v236);
          v237[1] = v239;
          uint64_t v281 = (int *)type metadata accessor for FormatCompilerOptions(0);
          uint64_t v240 = v281[6];
          uint64_t v328 = v237;
          uint64_t v241 = (char *)v237 + v240;
          uint64_t v306 = v238;
          uint64_t v242 = v238 + v240;
          __dsth = *(void **)(v242 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__dsth == (void *)1)
          {
            long long v243 = *(_OWORD *)(v242 + 16);
            *(_OWORD *)uint64_t v241 = *(_OWORD *)v242;
            *((_OWORD *)v241 + 1) = v243;
            *((_OWORD *)v241 + 2) = *(_OWORD *)(v242 + 32);
          }
          else
          {
            *(void *)uint64_t v241 = *(void *)v242;
            *((void *)v241 + 1) = __dsth;
            uint64_t v244 = *(void *)(v242 + 24);
            *((void *)v241 + 2) = *(void *)(v242 + 16);
            *((void *)v241 + 3) = v244;
            uint64_t v245 = *(void *)(v242 + 40);
            *((void *)v241 + 4) = *(void *)(v242 + 32);
            *((void *)v241 + 5) = v245;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v246 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v247 = &v241[v246];
          uint64_t v248 = (const void *)(v242 + v246);
          uint64_t v249 = sub_1C1518CDC();
          uint64_t v250 = *(void *)(v249 - 8);
          unint64_t v344 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v250 + 48);
          uint64_t v273 = v250;
          if (v344(v248, 1, v249))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v247, v248, *(void *)(*(void *)(v251 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v250 + 16))(v247, v248, v249);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v250 + 56))(v247, 0, 1, v249);
          }
          uint64_t v252 = v249;
          uint64_t v253 = v306;
          uint64_t v318 = v249;
          uint64_t v254 = v281[7];
          uint64_t v255 = (char *)v328 + v254;
          uint64_t v256 = (const void *)(v306 + v254);
          if (v344((const void *)(v306 + v254), 1, v252))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v255, v256, *(void *)(*(void *)(v257 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v273 + 16))(v255, v256, v318);
            uint64_t v253 = v306;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v273 + 56))(v255, 0, 1, v318);
          }
          *(void *)((char *)v328 + v281[8]) = *(void *)(v253 + v281[8]);
          uint64_t v258 = v293[24];
          uint64_t v329 = v7 + v258;
          uint64_t v307 = (uint64_t)v8 + v258;
          uint64_t v259 = sub_1C151928C();
          uint64_t v282 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v259 - 8) + 16);
          swift_bridgeObjectRetain();
          v282(v329, v307, v259);
          uint64_t v260 = v293[25];
          uint64_t v261 = (void *)(v7 + v260);
          v262 = (char *)v8 + v260;
          if (v344(v262, 1, v318))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v261, v262, *(void *)(*(void *)(v263 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v273 + 16))(v261, v262, v318);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v261, 0, 1, v318);
          }
          goto LABEL_97;
        case 6u:
          uint64_t v179 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v179;
          *(void *)(v7 + 16) = v8[2];
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 7u:
          *(void *)uint64_t v7 = *v8;
          swift_retain();
          break;
        case 8u:
          uint64_t v180 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v180;
          uint64_t v181 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v181;
          uint64_t v182 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v182;
          uint64_t v183 = v8[7];
          *(void *)(v7 + 48) = v8[6];
          *(void *)(v7 + 56) = v183;
          *(void *)(v7 + 64) = v8[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_47:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 9u:
          uint64_t v140 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v140;
          uint64_t v141 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v141;
          uint64_t v142 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v142;
          uint64_t v368 = v5;
          uint64_t v143 = v8[7];
          *(void *)(v7 + 48) = v8[6];
          *(void *)(v7 + 56) = v143;
          __dstm = (void *)v8[9];
          *(void *)(v7 + 64) = v8[8];
          *(void *)(v7 + 72) = __dstm;
          *(unsigned char *)(v7 + 80) = *((unsigned char *)v8 + 80);
          uint64_t v362 = v8[12];
          *(void *)(v7 + 88) = v8[11];
          *(void *)(v7 + 96) = v362;
          *(unsigned char *)(v7 + 104) = *((unsigned char *)v8 + 104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v5 = v368;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_45:
          swift_bridgeObjectRetain();
          break;
        case 0xAu:
          uint64_t v184 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v184;
          uint64_t v185 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v185;
          uint64_t v303 = v8[4];
          uint64_t v291 = v8[5];
          uint64_t v186 = v8[8];
          uint64_t v315 = v8[7];
          uint64_t v342 = v8[9];
          __dstn = (void *)v8[6];
          unsigned __int8 v326 = *((unsigned char *)v8 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v303, v291, (uint64_t)__dstn, v315, v186, v342, v326);
          *(void *)(v7 + 32) = v303;
          *(void *)(v7 + 40) = v291;
          *(void *)(v7 + 48) = __dstn;
          *(void *)(v7 + 56) = v315;
          *(void *)(v7 + 64) = v186;
          *(void *)(v7 + 72) = v342;
          *(unsigned char *)(v7 + 80) = v326;
          break;
        case 0xBu:
          uint64_t v367 = v5;
          uint64_t v144 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v144;
          uint64_t v145 = v8[3];
          *(void *)(v7 + 16) = v8[2];
          *(void *)(v7 + 24) = v145;
          uint64_t v146 = v8[5];
          *(void *)(v7 + 32) = v8[4];
          *(void *)(v7 + 40) = v146;
          uint64_t v147 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          uint64_t v148 = (void *)(v7 + v147);
          uint64_t v149 = (uint64_t)v8 + v147;
          uint64_t v150 = *(uint64_t *)((char *)v8 + v147 + 8);
          *uint64_t v148 = *(uint64_t *)((char *)v8 + v147);
          v148[1] = v150;
          uint64_t v151 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v152 = v151[5];
          uint64_t v301 = v149 + v152;
          uint64_t v313 = (char *)v148 + v152;
          uint64_t v153 = sub_1C151631C();
          v289 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v153 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v289(v313, v301, v153);
          uint64_t v154 = v151[6];
          uint64_t v155 = (void *)((char *)v148 + v154);
          v156 = (void *)(v149 + v154);
          uint64_t v340 = v156[1];
          *uint64_t v155 = *v156;
          v155[1] = v340;
          uint64_t v157 = v151[7];
          uint64_t v158 = (void *)((char *)v148 + v157);
          uint64_t v159 = (void *)(v149 + v157);
          uint64_t v314 = v159[1];
          uint64_t v325 = v151;
          *uint64_t v158 = *v159;
          v158[1] = v314;
          uint64_t v160 = v151[8];
          uint64_t v161 = (void *)((char *)v148 + v160);
          uint64_t v162 = (void *)(v149 + v160);
          uint64_t v302 = v162[1];
          *uint64_t v161 = *v162;
          v161[1] = v302;
          uint64_t v163 = v151[9];
          uint64_t v164 = (void *)((char *)v148 + v163);
          uint64_t v165 = (void *)(v149 + v163);
          uint64_t v290 = v165[1];
          *uint64_t v164 = *v165;
          v164[1] = v290;
          uint64_t v166 = v151[10];
          __dstf = (char *)v148 + v166;
          uint64_t v167 = (const void *)(v149 + v166);
          uint64_t v168 = sub_1C151D6DC();
          uint64_t v271 = *(void *)(v168 - 8);
          uint64_t v279 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v271 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v279(v167, 1, v168))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dstf, v167, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v271 + 16))(__dstf, v167, v168);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v271 + 56))(__dstf, 0, 1, v168);
          }
          *(void *)((char *)v148 + v325[11]) = *(void *)(v149 + v325[11]);
          *(void *)((char *)v148 + v325[12]) = *(void *)(v149 + v325[12]);
          *(void *)((char *)v148 + v325[13]) = *(void *)(v149 + v325[13]);
          *(void *)((char *)v148 + v325[14]) = *(void *)(v149 + v325[14]);
          *(void *)((char *)v148 + v325[15]) = *(void *)(v149 + v325[15]);
          *(void *)((char *)v148 + v325[16]) = *(void *)(v149 + v325[16]);
          *(void *)((char *)v148 + v325[17]) = *(void *)(v149 + v325[17]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_95:
          swift_bridgeObjectRetain();
LABEL_96:
          swift_bridgeObjectRetain();
LABEL_97:
          uint64_t v5 = v367;
          break;
        default:
          uint64_t v364 = v5;
          uint64_t v37 = v8[1];
          *(void *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = v37;
          uint64_t v38 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v39 = v38[5];
          uint64_t v332 = (uint64_t)v8 + v39;
          __dstj = (void *)(v7 + v39);
          uint64_t v40 = sub_1C151631C();
          uint64_t v321 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16);
          swift_bridgeObjectRetain();
          v321(__dstj, v332, v40);
          uint64_t v41 = v38[6];
          uint64_t v42 = (void *)(v7 + v41);
          uint64_t v43 = (uint64_t *)((char *)v8 + v41);
          uint64_t v333 = v43[1];
          *uint64_t v42 = *v43;
          v42[1] = v333;
          uint64_t v44 = v38[7];
          uint64_t v45 = (void *)(v7 + v44);
          uint64_t v46 = (uint64_t *)((char *)v8 + v44);
          uint64_t v322 = v46[1];
          *uint64_t v45 = *v46;
          v45[1] = v322;
          uint64_t v47 = v38[8];
          uint64_t v48 = (void *)(v7 + v47);
          uint64_t v49 = (uint64_t *)((char *)v8 + v47);
          uint64_t v309 = v49[1];
          void *v48 = *v49;
          v48[1] = v309;
          uint64_t v50 = v38[9];
          uint64_t v51 = (void *)(v7 + v50);
          uint64_t v52 = (uint64_t *)((char *)v8 + v50);
          uint64_t v53 = v52[1];
          *uint64_t v51 = *v52;
          v51[1] = v53;
          uint64_t v54 = v38[10];
          __dsta = (void *)(v7 + v54);
          unint64_t v295 = (char *)v8 + v54;
          uint64_t v55 = sub_1C151D6DC();
          uint64_t v275 = *(void *)(v55 - 8);
          uint64_t v284 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v275 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v284(v295, 1, v55))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dsta, v295, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v275 + 16))(__dsta, v295, v55);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v275 + 56))(__dsta, 0, 1, v55);
          }
          *(void *)(v7 + v38[11]) = *(uint64_t *)((char *)v8 + v38[11]);
          *(void *)(v7 + v38[12]) = *(uint64_t *)((char *)v8 + v38[12]);
          *(void *)(v7 + v38[13]) = *(uint64_t *)((char *)v8 + v38[13]);
          *(void *)(v7 + v38[14]) = *(uint64_t *)((char *)v8 + v38[14]);
          *(void *)(v7 + v38[15]) = *(uint64_t *)((char *)v8 + v38[15]);
          *(void *)(v7 + v38[16]) = *(uint64_t *)((char *)v8 + v38[16]);
          *(void *)(v7 + v38[17]) = *(uint64_t *)((char *)v8 + v38[17]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v5 = v364;
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
    *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
    *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
    *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v12;
    uint64_t v13 = a2 + 16;
    long long v14 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v14;
    uint64_t v15 = v14;
    uint64_t v16 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
    swift_bridgeObjectRetain();
    v16(a1 + 16, v13, v15);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C0917100(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C0919748((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v5 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
      uint64_t v6 = v5[5];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      type metadata accessor for DebugFormatCompilerResultOutput();
      swift_retain();
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 2)
      {
        type metadata accessor for FormatFile();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v246 = v5;
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            *((void *)v7 + 6) = *((void *)v8 + 6);
            *((void *)v7 + 7) = *((void *)v8 + 7);
            uint64_t v51 = *((void *)v8 + 8);
            v7[72] = v8[72];
            *((void *)v7 + 8) = v51;
            *((void *)v7 + 10) = *((void *)v8 + 10);
            *((void *)v7 + 11) = *((void *)v8 + 11);
            __dstb = (uint64_t *)(v8 + 96);
            int v196 = *((unsigned __int16 *)v8 + 52);
            unsigned __int8 v188 = v8[106];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v188 == 255)
            {
              uint64_t v52 = *__dstb;
              *(_DWORD *)(v7 + 103) = *(_DWORD *)(v8 + 103);
              *((void *)v7 + 12) = v52;
            }
            else
            {
              unsigned int v114 = v196 & 0xFF00FFFF | (v188 << 16);
              uint64_t v115 = *__dstb;
              sub_1BFFA742C(*__dstb, v114, SBYTE2(v114), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
              *((void *)v7 + 12) = v115;
              *((_WORD *)v7 + 52) = v196;
              v7[106] = BYTE2(v114);
            }
            goto LABEL_84;
          case 2u:
            uint64_t v246 = v5;
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            v7[48] = v8[48];
            *((void *)v7 + 7) = *((void *)v8 + 7);
            uint64_t v222 = (long long *)(v8 + 64);
            unint64_t v53 = *((void *)v8 + 9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v53 >= 2)
            {
              uint64_t v55 = v7 + 64;
              if (v53 != 2)
              {
                v7[64] = v8[64];
                *((void *)v7 + 9) = *((void *)v8 + 9);
                swift_bridgeObjectRetain();
                goto LABEL_82;
              }
              long long v54 = *v222;
            }
            else
            {
              long long v54 = *v222;
              uint64_t v55 = v7 + 64;
            }
            *uint64_t v55 = v54;
LABEL_82:
            *((void *)v7 + 10) = *((void *)v8 + 10);
            *((void *)v7 + 11) = *((void *)v8 + 11);
            *((void *)v7 + 12) = *((void *)v8 + 12);
            *((void *)v7 + 13) = *((void *)v8 + 13);
            *((void *)v7 + 14) = *((void *)v8 + 14);
            *((void *)v7 + 15) = *((void *)v8 + 15);
            v7[128] = v8[128];
            *((void *)v7 + 17) = *((void *)v8 + 17);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_83:
            swift_bridgeObjectRetain();
            goto LABEL_84;
          case 3u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            unint64_t v56 = *((void *)v8 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v246 = v5;
            if (v56 >= 0xF)
            {
              *((void *)v7 + 6) = *((void *)v8 + 6);
              *((void *)v7 + 7) = *((void *)v8 + 7);
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
            }
            *((void *)v7 + 8) = *((void *)v8 + 8);
            *((void *)v7 + 9) = *((void *)v8 + 9);
            *((void *)v7 + 10) = *((void *)v8 + 10);
            *((void *)v7 + 11) = *((void *)v8 + 11);
            *((void *)v7 + 12) = *((void *)v8 + 12);
            *((void *)v7 + 13) = *((void *)v8 + 13);
            *((void *)v7 + 14) = *((void *)v8 + 14);
            v7[120] = v8[120];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_83;
          case 4u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            *((void *)v7 + 6) = *((void *)v8 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_85;
          case 5u:
            uint64_t v246 = v5;
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            v7[48] = v8[48];
            v7[49] = v8[49];
            *((void *)v7 + 7) = *((void *)v8 + 7);
            *((void *)v7 + 8) = *((void *)v8 + 8);
            *((void *)v7 + 9) = *((void *)v8 + 9);
            *((void *)v7 + 10) = *((void *)v8 + 10);
            *((void *)v7 + 11) = *((void *)v8 + 11);
            *((void *)v7 + 12) = *((void *)v8 + 12);
            *((void *)v7 + 13) = *((void *)v8 + 13);
            *((void *)v7 + 14) = *((void *)v8 + 14);
            *((void *)v7 + 15) = *((void *)v8 + 15);
            *((void *)v7 + 16) = *((void *)v8 + 16);
            *((void *)v7 + 17) = *((void *)v8 + 17);
            *((void *)v7 + 18) = *((void *)v8 + 18);
            *((void *)v7 + 19) = *((void *)v8 + 19);
            BOOL v223 = (long long *)(v8 + 160);
            unint64_t v212 = *((void *)v8 + 21);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v212 >= 2)
            {
              uint64_t v58 = v7 + 160;
              if (v212 != 2)
              {
                v7[160] = v8[160];
                *((void *)v7 + 21) = *((void *)v8 + 21);
                swift_bridgeObjectRetain();
                goto LABEL_86;
              }
              long long v57 = *v223;
            }
            else
            {
              long long v57 = *v223;
              uint64_t v58 = v7 + 160;
            }
            _OWORD *v58 = v57;
LABEL_86:
            uint64_t v193 = (int *)type metadata accessor for FormatPackage();
            uint64_t v122 = v193[23];
            uint64_t v123 = &v7[v122];
            uint64_t v124 = &v8[v122];
            *(void *)uint64_t v123 = *(void *)&v8[v122];
            *((void *)v123 + 1) = *(void *)&v8[v122 + 8];
            uint64_t v182 = (int *)type metadata accessor for FormatCompilerOptions(0);
            uint64_t v125 = v182[6];
            __dstg = v123;
            unsigned __int8 v126 = &v123[v125];
            uint64_t v206 = v124;
            int v127 = &v124[v125];
            uint64_t v228 = *((void *)v127 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v228 == 1)
            {
              long long v128 = *(_OWORD *)v127;
              long long v129 = *((_OWORD *)v127 + 2);
              *((_OWORD *)v126 + 1) = *((_OWORD *)v127 + 1);
              *((_OWORD *)v126 + 2) = v129;
              *(_OWORD *)unsigned __int8 v126 = v128;
            }
            else
            {
              *(void *)unsigned __int8 v126 = *(void *)v127;
              *((void *)v126 + 1) = *((void *)v127 + 1);
              *((void *)v126 + 2) = *((void *)v127 + 2);
              *((void *)v126 + 3) = *((void *)v127 + 3);
              *((void *)v126 + 4) = *((void *)v127 + 4);
              *((void *)v126 + 5) = *((void *)v127 + 5);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            uint64_t v130 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
            uint64_t v177 = &v126[v130];
            unint64_t v131 = &v127[v130];
            uint64_t v132 = sub_1C1518CDC();
            uint64_t v133 = *(void *)(v132 - 8);
            uint64_t v217 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48);
            uint64_t v174 = v133;
            if (v217(v131, 1, v132))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v177, v131, *(void *)(*(void *)(v134 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v177, v131, v132);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v177, 0, 1, v132);
            }
            uint64_t v135 = v132;
            uint64_t v201 = v132;
            uint64_t v136 = v182[7];
            uint64_t v137 = &__dstg[v136];
            uint64_t v138 = v206;
            uint64_t v139 = &v206[v136];
            if (v217(&v206[v136], 1, v135))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v137, v139, *(void *)(*(void *)(v140 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v137, v139, v201);
              uint64_t v138 = v206;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v174 + 56))(v137, 0, 1, v201);
            }
            *(void *)&__dstg[v182[8]] = *(void *)&v138[v182[8]];
            uint64_t v141 = v193[24];
            __dstm = &v7[v141];
            uint64_t v207 = &v8[v141];
            uint64_t v142 = sub_1C151928C();
            uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16);
            swift_bridgeObjectRetain();
            v183(__dstm, v207, v142);
            uint64_t v143 = v193[25];
            uint64_t v144 = &v7[v143];
            uint64_t v145 = &v8[v143];
            if (v217(&v8[v143], 1, v201))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v144, v145, v201);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v174 + 56))(v144, 0, 1, v201);
            }
LABEL_84:
            uint64_t v5 = v246;
LABEL_85:
            swift_storeEnumTagMultiPayload();
            sub_1C0913D20();
            uint64_t v119 = *(int *)(v118 + 48);
            uint64_t v120 = *(void **)&v8[v119];
            id v121 = v120;
            *(void *)&v7[v119] = v120;
            break;
          case 6u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_85;
          case 7u:
            *(void *)uint64_t v7 = *(void *)v8;
            swift_retain();
            goto LABEL_85;
          case 8u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            *((void *)v7 + 6) = *((void *)v8 + 6);
            *((void *)v7 + 7) = *((void *)v8 + 7);
            *((void *)v7 + 8) = *((void *)v8 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_28;
          case 9u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            *((void *)v7 + 6) = *((void *)v8 + 6);
            *((void *)v7 + 7) = *((void *)v8 + 7);
            *((void *)v7 + 8) = *((void *)v8 + 8);
            *((void *)v7 + 9) = *((void *)v8 + 9);
            v7[80] = v8[80];
            *((void *)v7 + 11) = *((void *)v8 + 11);
            *((void *)v7 + 12) = *((void *)v8 + 12);
            v7[104] = v8[104];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_28:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_85;
          case 0xAu:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            uint64_t v197 = *((void *)v8 + 4);
            uint64_t v59 = *((void *)v8 + 6);
            uint64_t v189 = *((void *)v8 + 5);
            uint64_t v224 = *((void *)v8 + 8);
            __dstk = (void *)*((void *)v8 + 7);
            uint64_t v213 = *((void *)v8 + 9);
            unsigned __int8 v203 = v8[80];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v197, v189, v59, (uint64_t)__dstk, v224, v213, v203);
            *((void *)v7 + 4) = v197;
            *((void *)v7 + 5) = v189;
            *((void *)v7 + 6) = v59;
            *((void *)v7 + 7) = __dstk;
            *((void *)v7 + 8) = v224;
            *((void *)v7 + 9) = v213;
            v7[80] = v203;
            goto LABEL_85;
          case 0xBu:
            uint64_t v246 = v5;
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            uint64_t v60 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
            uint64_t v61 = &v7[v60];
            uint64_t v62 = &v8[v60];
            *(void *)uint64_t v61 = *(void *)&v8[v60];
            *((void *)v61 + 1) = *(void *)&v8[v60 + 8];
            uint64_t v63 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v64 = v63[5];
            uint64_t v190 = &v62[v64];
            uint64_t v198 = &v61[v64];
            uint64_t v65 = sub_1C151631C();
            uint64_t v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v180(v198, v190, v65);
            uint64_t v66 = v63[6];
            long long v67 = &v61[v66];
            uint64_t v68 = &v62[v66];
            *(void *)long long v67 = *(void *)v68;
            *((void *)v67 + 1) = *((void *)v68 + 1);
            uint64_t v69 = v63[7];
            uint64_t v70 = &v61[v69];
            uint64_t v71 = &v62[v69];
            *(void *)uint64_t v70 = *(void *)v71;
            *((void *)v70 + 1) = *((void *)v71 + 1);
            uint64_t v72 = v63[8];
            unint64_t v73 = &v61[v72];
            uint64_t v74 = &v62[v72];
            *(void *)unint64_t v73 = *(void *)v74;
            *((void *)v73 + 1) = *((void *)v74 + 1);
            uint64_t v75 = v63[9];
            uint64_t v76 = &v61[v75];
            uint64_t v77 = &v62[v75];
            *(void *)uint64_t v76 = *(void *)v77;
            *((void *)v76 + 1) = *((void *)v77 + 1);
            uint64_t v78 = v63[10];
            uint64_t v214 = v63;
            uint64_t v225 = &v61[v78];
            __dstc = &v62[v78];
            uint64_t v79 = sub_1C151D6DC();
            uint64_t v173 = *(void *)(v79 - 8);
            uint64_t v175 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v175(__dstc, 1, v79))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(v225, __dstc, *(void *)(*(void *)(v80 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v225, __dstc, v79);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v173 + 56))(v225, 0, 1, v79);
            }
            *(void *)&v61[v214[11]] = *(void *)&v62[v214[11]];
            *(void *)&v61[v214[12]] = *(void *)&v62[v214[12]];
            *(void *)&v61[v214[13]] = *(void *)&v62[v214[13]];
            *(void *)&v61[v214[14]] = *(void *)&v62[v214[14]];
            *(void *)&v61[v214[15]] = *(void *)&v62[v214[15]];
            *(void *)&v61[v214[16]] = *(void *)&v62[v214[16]];
            *(void *)&v61[v214[17]] = *(void *)&v62[v214[17]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_78;
          default:
            uint64_t v246 = v5;
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            uint64_t v15 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v16 = v15[5];
            uint64_t v220 = &v8[v16];
            __dstuint64_t i = &v7[v16];
            uint64_t v17 = sub_1C151631C();
            long long v210 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
            swift_bridgeObjectRetain();
            v210(__dsti, v220, v17);
            uint64_t v18 = v15[6];
            uint64_t v19 = &v7[v18];
            uint64_t v20 = &v8[v18];
            *(void *)uint64_t v19 = *(void *)v20;
            *((void *)v19 + 1) = *((void *)v20 + 1);
            uint64_t v21 = v15[7];
            uint64_t v22 = &v7[v21];
            uint64_t v23 = &v8[v21];
            *(void *)uint64_t v22 = *(void *)v23;
            *((void *)v22 + 1) = *((void *)v23 + 1);
            uint64_t v24 = v15[8];
            uint64_t v25 = &v7[v24];
            uint64_t v26 = &v8[v24];
            *(void *)uint64_t v25 = *(void *)v26;
            *((void *)v25 + 1) = *((void *)v26 + 1);
            uint64_t v27 = v15[9];
            uint64_t v28 = &v7[v27];
            uint64_t v29 = &v8[v27];
            *(void *)uint64_t v28 = *(void *)v29;
            *((void *)v28 + 1) = *((void *)v29 + 1);
            uint64_t v30 = v15[10];
            __dst = &v7[v30];
            uint64_t v194 = &v8[v30];
            uint64_t v31 = sub_1C151D6DC();
            uint64_t v178 = *(void *)(v31 - 8);
            uint64_t v186 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v186(v194, 1, v31))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(__dst, v194, *(void *)(*(void *)(v32 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v178 + 16))(__dst, v194, v31);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v178 + 56))(__dst, 0, 1, v31);
            }
            *(void *)&v7[v15[11]] = *(void *)&v8[v15[11]];
            *(void *)&v7[v15[12]] = *(void *)&v8[v15[12]];
            *(void *)&v7[v15[13]] = *(void *)&v8[v15[13]];
            *(void *)&v7[v15[14]] = *(void *)&v8[v15[14]];
            *(void *)&v7[v15[15]] = *(void *)&v8[v15[15]];
            *(void *)&v7[v15[16]] = *(void *)&v8[v15[16]];
            *(void *)&v7[v15[17]] = *(void *)&v8[v15[17]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_78:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_83;
        }
      }
      else if (v9 == 1)
      {
        uint64_t v10 = *(void *)v8;
        id v11 = *(id *)v8;
        *(void *)uint64_t v7 = v10;
      }
      else
      {
        type metadata accessor for FormatFile();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v248 = v5;
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            *((void *)v7 + 6) = *((void *)v8 + 6);
            *((void *)v7 + 7) = *((void *)v8 + 7);
            uint64_t v81 = *((void *)v8 + 8);
            v7[72] = v8[72];
            *((void *)v7 + 8) = v81;
            *((void *)v7 + 10) = *((void *)v8 + 10);
            *((void *)v7 + 11) = *((void *)v8 + 11);
            __dstd = v8 + 96;
            unsigned __int16 v82 = v8[106];
            int v83 = *((unsigned __int16 *)v8 + 52);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v82 <= 0xFEu)
            {
              uint64_t v116 = v83 & 0xFF00FFFF | (v82 << 16);
              uint64_t v117 = *(void *)__dstd;
              sub_1BFFA742C(*(void *)__dstd, v116, SBYTE2(v116), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
              *((void *)v7 + 12) = v117;
              *((_WORD *)v7 + 52) = v116;
              v7[106] = BYTE2(v116);
            }
            else
            {
              uint64_t v84 = *(void *)__dstd;
              *(_DWORD *)(v7 + 103) = *(_DWORD *)(__dstd + 7);
              *((void *)v7 + 12) = v84;
            }
            goto LABEL_112;
          case 2u:
            uint64_t v247 = v5;
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            v7[48] = v8[48];
            *((void *)v7 + 7) = *((void *)v8 + 7);
            uint64_t v226 = (long long *)(v8 + 64);
            unint64_t v85 = *((void *)v8 + 9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v85 >= 2)
            {
              uint64_t v87 = v7 + 64;
              if (v85 != 2)
              {
                v7[64] = v8[64];
                *((void *)v7 + 9) = *((void *)v8 + 9);
                swift_bridgeObjectRetain();
                goto LABEL_98;
              }
              long long v86 = *v226;
            }
            else
            {
              long long v86 = *v226;
              uint64_t v87 = v7 + 64;
            }
            *uint64_t v87 = v86;
LABEL_98:
            *((void *)v7 + 10) = *((void *)v8 + 10);
            *((void *)v7 + 11) = *((void *)v8 + 11);
            *((void *)v7 + 12) = *((void *)v8 + 12);
            *((void *)v7 + 13) = *((void *)v8 + 13);
            *((void *)v7 + 14) = *((void *)v8 + 14);
            *((void *)v7 + 15) = *((void *)v8 + 15);
            v7[128] = v8[128];
            *((void *)v7 + 17) = *((void *)v8 + 17);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_99:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v5 = v247;
            goto LABEL_113;
          case 3u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            unint64_t v88 = *((void *)v8 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v248 = v5;
            if (v88 >= 0xF)
            {
              *((void *)v7 + 6) = *((void *)v8 + 6);
              *((void *)v7 + 7) = *((void *)v8 + 7);
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
            }
            *((void *)v7 + 8) = *((void *)v8 + 8);
            *((void *)v7 + 9) = *((void *)v8 + 9);
            *((void *)v7 + 10) = *((void *)v8 + 10);
            *((void *)v7 + 11) = *((void *)v8 + 11);
            *((void *)v7 + 12) = *((void *)v8 + 12);
            *((void *)v7 + 13) = *((void *)v8 + 13);
            *((void *)v7 + 14) = *((void *)v8 + 14);
            v7[120] = v8[120];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_81;
          case 4u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            *((void *)v7 + 6) = *((void *)v8 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 5u:
            uint64_t v248 = v5;
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            v7[48] = v8[48];
            v7[49] = v8[49];
            *((void *)v7 + 7) = *((void *)v8 + 7);
            *((void *)v7 + 8) = *((void *)v8 + 8);
            *((void *)v7 + 9) = *((void *)v8 + 9);
            *((void *)v7 + 10) = *((void *)v8 + 10);
            *((void *)v7 + 11) = *((void *)v8 + 11);
            *((void *)v7 + 12) = *((void *)v8 + 12);
            *((void *)v7 + 13) = *((void *)v8 + 13);
            *((void *)v7 + 14) = *((void *)v8 + 14);
            *((void *)v7 + 15) = *((void *)v8 + 15);
            *((void *)v7 + 16) = *((void *)v8 + 16);
            *((void *)v7 + 17) = *((void *)v8 + 17);
            *((void *)v7 + 18) = *((void *)v8 + 18);
            *((void *)v7 + 19) = *((void *)v8 + 19);
            uint64_t v172 = (long long *)(v8 + 160);
            __dstf = (void *)*((void *)v8 + 21);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((unint64_t)__dstf >= 2)
            {
              uint64_t v112 = v7 + 160;
              if (__dstf != (void *)2)
              {
                v7[160] = v8[160];
                *((void *)v7 + 21) = *((void *)v8 + 21);
                swift_bridgeObjectRetain();
                goto LABEL_100;
              }
              long long v111 = *v172;
            }
            else
            {
              long long v111 = *v172;
              uint64_t v112 = v7 + 160;
            }
            *uint64_t v112 = v111;
LABEL_100:
            id v202 = (int *)type metadata accessor for FormatPackage();
            uint64_t v147 = v202[23];
            uint64_t v148 = &v7[v147];
            uint64_t v149 = &v8[v147];
            *(void *)uint64_t v148 = *(void *)&v8[v147];
            *((void *)v148 + 1) = *(void *)&v8[v147 + 8];
            uint64_t v184 = (int *)type metadata accessor for FormatCompilerOptions(0);
            uint64_t v150 = v184[6];
            uint64_t v218 = v148;
            uint64_t v151 = &v148[v150];
            __dsth = v149;
            uint64_t v152 = &v149[v150];
            uint64_t v229 = *((void *)v152 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v229 == 1)
            {
              long long v153 = *(_OWORD *)v152;
              long long v154 = *((_OWORD *)v152 + 2);
              *((_OWORD *)v151 + 1) = *((_OWORD *)v152 + 1);
              *((_OWORD *)v151 + 2) = v154;
              *(_OWORD *)uint64_t v151 = v153;
            }
            else
            {
              *(void *)uint64_t v151 = *(void *)v152;
              *((void *)v151 + 1) = *((void *)v152 + 1);
              *((void *)v151 + 2) = *((void *)v152 + 2);
              *((void *)v151 + 3) = *((void *)v152 + 3);
              *((void *)v151 + 4) = *((void *)v152 + 4);
              *((void *)v151 + 5) = *((void *)v152 + 5);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            uint64_t v155 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
            v208 = &v151[v155];
            v156 = &v152[v155];
            uint64_t v157 = sub_1C1518CDC();
            uint64_t v158 = *(void *)(v157 - 8);
            uint64_t v230 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48);
            if (v230(v156, 1, v157))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v208, v156, *(void *)(*(void *)(v159 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v208, v156, v157);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v208, 0, 1, v157);
            }
            uint64_t v160 = (void *)v157;
            uint64_t v161 = v184[7];
            uint64_t v162 = (char *)v218 + v161;
            uint64_t v163 = &__dsth[v161];
            uint64_t v209 = v160;
            if (v230(&__dsth[v161], 1, (uint64_t)v160))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(v158 + 16))(v162, v163, v209);
              (*(void (**)(char *, void, uint64_t, void *))(v158 + 56))(v162, 0, 1, v209);
            }
            *(void *)((char *)v218 + v184[8]) = *(void *)&__dsth[v184[8]];
            uint64_t v165 = v202[24];
            __dstn = &v7[v165];
            uint64_t v219 = &v8[v165];
            uint64_t v166 = sub_1C151928C();
            uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16);
            swift_bridgeObjectRetain();
            v185(__dstn, v219, v166);
            uint64_t v167 = v202[25];
            uint64_t v168 = &v7[v167];
            uint64_t v169 = &v8[v167];
            if (v230(v169, 1, (uint64_t)v209))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(v158 + 16))(v168, v169, v209);
              (*(void (**)(char *, void, uint64_t, void *))(v158 + 56))(v168, 0, 1, v209);
            }
LABEL_112:
            uint64_t v5 = v248;
LABEL_113:
            swift_storeEnumTagMultiPayload();
            break;
          case 6u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            swift_bridgeObjectRetain();
            goto LABEL_46;
          case 7u:
            *(void *)uint64_t v7 = *(void *)v8;
            swift_retain();
            goto LABEL_113;
          case 8u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            *((void *)v7 + 6) = *((void *)v8 + 6);
            *((void *)v7 + 7) = *((void *)v8 + 7);
            *((void *)v7 + 8) = *((void *)v8 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_48:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_113;
          case 9u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            *((void *)v7 + 6) = *((void *)v8 + 6);
            *((void *)v7 + 7) = *((void *)v8 + 7);
            *((void *)v7 + 8) = *((void *)v8 + 8);
            *((void *)v7 + 9) = *((void *)v8 + 9);
            v7[80] = v8[80];
            *((void *)v7 + 11) = *((void *)v8 + 11);
            *((void *)v7 + 12) = *((void *)v8 + 12);
            v7[104] = v8[104];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_46:
            swift_bridgeObjectRetain();
            goto LABEL_113;
          case 0xAu:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            uint64_t v200 = *((void *)v8 + 4);
            uint64_t v192 = *((void *)v8 + 5);
            uint64_t v113 = *((void *)v8 + 8);
            uint64_t v205 = (void *)*((void *)v8 + 7);
            uint64_t v227 = *((void *)v8 + 9);
            __dstl = (void *)*((void *)v8 + 6);
            unsigned __int8 v216 = v8[80];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v200, v192, (uint64_t)__dstl, (uint64_t)v205, v113, v227, v216);
            *((void *)v7 + 4) = v200;
            *((void *)v7 + 5) = v192;
            *((void *)v7 + 6) = __dstl;
            *((void *)v7 + 7) = v205;
            *((void *)v7 + 8) = v113;
            *((void *)v7 + 9) = v227;
            v7[80] = v216;
            goto LABEL_113;
          case 0xBu:
            uint64_t v248 = v5;
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            uint64_t v89 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
            uint64_t v90 = &v7[v89];
            uint64_t v91 = &v8[v89];
            *(void *)uint64_t v90 = *(void *)&v8[v89];
            *((void *)v90 + 1) = *(void *)&v8[v89 + 8];
            uint64_t v92 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v93 = v92[5];
            uint64_t v199 = &v91[v93];
            uint64_t v204 = &v90[v93];
            uint64_t v94 = sub_1C151631C();
            uint64_t v191 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v191(v204, v199, v94);
            uint64_t v95 = v92[6];
            uint64_t v96 = &v90[v95];
            uint64_t v97 = &v91[v95];
            *(void *)uint64_t v96 = *(void *)v97;
            *((void *)v96 + 1) = *((void *)v97 + 1);
            uint64_t v98 = v92[7];
            uint64_t v99 = &v90[v98];
            uint64_t v100 = &v91[v98];
            *(void *)uint64_t v99 = *(void *)v100;
            uint64_t v215 = v92;
            *((void *)v99 + 1) = *((void *)v100 + 1);
            uint64_t v101 = v92[8];
            uint64_t v102 = &v90[v101];
            uint64_t v103 = &v91[v101];
            *(void *)uint64_t v102 = *(void *)v103;
            *((void *)v102 + 1) = *((void *)v103 + 1);
            uint64_t v104 = v92[9];
            uint64_t v105 = &v90[v104];
            uint64_t v106 = &v91[v104];
            *(void *)uint64_t v105 = *(void *)v106;
            *((void *)v105 + 1) = *((void *)v106 + 1);
            uint64_t v107 = v92[10];
            __dste = &v90[v107];
            uint64_t v108 = &v91[v107];
            uint64_t v109 = sub_1C151D6DC();
            uint64_t v176 = *(void **)(v109 - 8);
            uint64_t v181 = (unsigned int (*)(char *, uint64_t, uint64_t))v176[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v181(v108, 1, v109))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(__dste, v108, *(void *)(*(void *)(v110 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v176[2])(__dste, v108, v109);
              ((void (*)(char *, void, uint64_t, uint64_t))v176[7])(__dste, 0, 1, v109);
            }
            *(void *)&v90[v215[11]] = *(void *)&v91[v215[11]];
            *(void *)&v90[v215[12]] = *(void *)&v91[v215[12]];
            *(void *)&v90[v215[13]] = *(void *)&v91[v215[13]];
            *(void *)&v90[v215[14]] = *(void *)&v91[v215[14]];
            *(void *)&v90[v215[15]] = *(void *)&v91[v215[15]];
            *(void *)&v90[v215[16]] = *(void *)&v91[v215[16]];
            *(void *)&v90[v215[17]] = *(void *)&v91[v215[17]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_81:
            swift_bridgeObjectRetain();
            goto LABEL_112;
          default:
            uint64_t v247 = v5;
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            uint64_t v33 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v34 = v33[5];
            uint64_t v221 = &v8[v34];
            __dstj = &v7[v34];
            uint64_t v35 = sub_1C151631C();
            uint64_t v211 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
            swift_bridgeObjectRetain();
            v211(__dstj, v221, v35);
            uint64_t v36 = v33[6];
            uint64_t v37 = &v7[v36];
            uint64_t v38 = &v8[v36];
            *(void *)uint64_t v37 = *(void *)v38;
            *((void *)v37 + 1) = *((void *)v38 + 1);
            uint64_t v39 = v33[7];
            uint64_t v40 = &v7[v39];
            uint64_t v41 = &v8[v39];
            *(void *)uint64_t v40 = *(void *)v41;
            *((void *)v40 + 1) = *((void *)v41 + 1);
            uint64_t v42 = v33[8];
            uint64_t v43 = &v7[v42];
            uint64_t v44 = &v8[v42];
            *(void *)uint64_t v43 = *(void *)v44;
            *((void *)v43 + 1) = *((void *)v44 + 1);
            uint64_t v45 = v33[9];
            uint64_t v46 = &v7[v45];
            uint64_t v47 = &v8[v45];
            *(void *)uint64_t v46 = *(void *)v47;
            *((void *)v46 + 1) = *((void *)v47 + 1);
            uint64_t v48 = v33[10];
            __dsta = &v7[v48];
            uint64_t v195 = &v8[v48];
            uint64_t v49 = sub_1C151D6DC();
            uint64_t v179 = *(void *)(v49 - 8);
            unsigned int v187 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v187(v195, 1, v49))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(__dsta, v195, *(void *)(*(void *)(v50 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v179 + 16))(__dsta, v195, v49);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v179 + 56))(__dsta, 0, 1, v49);
            }
            *(void *)&v7[v33[11]] = *(void *)&v8[v33[11]];
            *(void *)&v7[v33[12]] = *(void *)&v8[v33[12]];
            *(void *)&v7[v33[13]] = *(void *)&v8[v33[13]];
            *(void *)&v7[v33[14]] = *(void *)&v8[v33[14]];
            *(void *)&v7[v33[15]] = *(void *)&v8[v33[15]];
            *(void *)&v7[v33[16]] = *(void *)&v8[v33[16]];
            *(void *)&v7[v33[17]] = *(void *)&v8[v33[17]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_99;
        }
      }
      swift_storeEnumTagMultiPayload();
      *(void *)((char *)a1 + v5[6]) = *(void *)((char *)a2 + v5[6]);
      *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
      *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v12 = a2 + 2;
      uint64_t v13 = a2[5];
      a1[5] = v13;
      a1[6] = a2[6];
      long long v14 = **(void (***)(void *, void *, uint64_t))(v13 - 8);
      swift_bridgeObjectRetain();
      v14(a1 + 2, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0919748(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatCompilerItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatCompilerItem()
{
  uint64_t result = qword_1EA1A0FC8;
  if (!qword_1EA1A0FC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C09197F0(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
    uint64_t v7 = v6[5];
    uint64_t v8 = (_OWORD *)((char *)a1 + v7);
    int v9 = (_OWORD *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for DebugFormatCompilerResultOutput();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_52:
        *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
        *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
        *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v12 = type metadata accessor for FormatFile();
      int v13 = swift_getEnumCaseMultiPayload();
      if (v13 == 11)
      {
        __dstb = v6;
        long long v36 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v36;
        v8[2] = v9[2];
        uint64_t v37 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v38 = (char *)v8 + v37;
        uint64_t v39 = (char *)v9 + v37;
        *(_OWORD *)((char *)v8 + v37) = *(_OWORD *)((char *)v9 + v37);
        uint64_t v40 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v41 = v40[5];
        uint64_t v42 = &v38[v41];
        uint64_t v43 = &v39[v41];
        uint64_t v44 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        *(_OWORD *)&v38[v40[6]] = *(_OWORD *)&v39[v40[6]];
        *(_OWORD *)&v38[v40[7]] = *(_OWORD *)&v39[v40[7]];
        *(_OWORD *)&v38[v40[8]] = *(_OWORD *)&v39[v40[8]];
        *(_OWORD *)&v38[v40[9]] = *(_OWORD *)&v39[v40[9]];
        uint64_t v45 = v40[10];
        long long v128 = &v38[v45];
        uint64_t v46 = &v39[v45];
        uint64_t v47 = sub_1C151D6DC();
        uint64_t v48 = *(void *)(v47 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(v128, v46, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v128, v46, v47);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v128, 0, 1, v47);
        }
        *(void *)&v38[v40[11]] = *(void *)&v39[v40[11]];
        *(void *)&v38[v40[12]] = *(void *)&v39[v40[12]];
        *(void *)&v38[v40[13]] = *(void *)&v39[v40[13]];
        *(void *)&v38[v40[14]] = *(void *)&v39[v40[14]];
        *(void *)&v38[v40[15]] = *(void *)&v39[v40[15]];
        *(void *)&v38[v40[16]] = *(void *)&v39[v40[16]];
        *(void *)&v38[v40[17]] = *(void *)&v39[v40[17]];
        swift_storeEnumTagMultiPayload();
        uint64_t v6 = __dstb;
        goto LABEL_51;
      }
      if (v13 == 5)
      {
        __dstc = v6;
        long long v50 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v50;
        v8[2] = v9[2];
        *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
        *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
        *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
        *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
        *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
        *(_OWORD *)((char *)v8 + 120) = *(_OWORD *)((char *)v9 + 120);
        *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
        *((void *)v8 + 19) = *((void *)v9 + 19);
        v8[10] = v9[10];
        uint64_t v117 = (int *)type metadata accessor for FormatPackage();
        uint64_t v51 = v117[23];
        uint64_t v52 = (char *)v8 + v51;
        unint64_t v53 = (char *)v9 + v51;
        *(_OWORD *)((char *)v8 + v51) = *(_OWORD *)((char *)v9 + v51);
        unsigned __int8 v126 = (int *)type metadata accessor for FormatCompilerOptions(0);
        long long v129 = v53;
        uint64_t v54 = v126[6];
        id v121 = v52;
        uint64_t v55 = &v52[v54];
        unint64_t v56 = &v53[v54];
        long long v57 = *((_OWORD *)v56 + 1);
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
        *((_OWORD *)v55 + 1) = v57;
        *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
        uint64_t v58 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v59 = &v55[v58];
        uint64_t v60 = &v56[v58];
        uint64_t v61 = sub_1C1518CDC();
        uint64_t v62 = *(void *)(v61 - 8);
        uint64_t v123 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
        if (v123(v60, 1, v61))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
        }
        uint64_t v91 = v126[7];
        uint64_t v92 = v121;
        uint64_t v119 = &v121[v91];
        uint64_t v93 = &v129[v91];
        uint64_t v6 = __dstc;
        if (v123(&v129[v91], 1, v61))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v119, v93, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v119, v93, v61);
          uint64_t v92 = v121;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v119, 0, 1, v61);
        }
        *(void *)&v92[v126[8]] = *(void *)&v129[v126[8]];
        uint64_t v99 = v117[24];
        uint64_t v100 = (char *)v8 + v99;
        uint64_t v101 = (char *)v9 + v99;
        uint64_t v102 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
        uint64_t v103 = v117[25];
        uint64_t v104 = (char *)v8 + v103;
        uint64_t v105 = (char *)v9 + v103;
        if (v123(v105, 1, v61))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v104, v105, v61);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v104, 0, 1, v61);
        }
      }
      else
      {
        if (v13)
        {
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_51:
          swift_storeEnumTagMultiPayload();
          goto LABEL_52;
        }
        *uint64_t v8 = *v9;
        long long v14 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v15 = v14[5];
        uint64_t v16 = (char *)v8 + v15;
        uint64_t v17 = (char *)v9 + v15;
        uint64_t v18 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        *(_OWORD *)((char *)v8 + v14[6]) = *(_OWORD *)((char *)v9 + v14[6]);
        *(_OWORD *)((char *)v8 + v14[7]) = *(_OWORD *)((char *)v9 + v14[7]);
        *(_OWORD *)((char *)v8 + v14[8]) = *(_OWORD *)((char *)v9 + v14[8]);
        *(_OWORD *)((char *)v8 + v14[9]) = *(_OWORD *)((char *)v9 + v14[9]);
        uint64_t v19 = v14[10];
        __dst = (char *)v8 + v19;
        uint64_t v20 = (char *)v9 + v19;
        uint64_t v21 = sub_1C151D6DC();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        *(void *)((char *)v8 + v14[11]) = *(void *)((char *)v9 + v14[11]);
        *(void *)((char *)v8 + v14[12]) = *(void *)((char *)v9 + v14[12]);
        *(void *)((char *)v8 + v14[13]) = *(void *)((char *)v9 + v14[13]);
        *(void *)((char *)v8 + v14[14]) = *(void *)((char *)v9 + v14[14]);
        *(void *)((char *)v8 + v14[15]) = *(void *)((char *)v9 + v14[15]);
        *(void *)((char *)v8 + v14[16]) = *(void *)((char *)v9 + v14[16]);
        *(void *)((char *)v8 + v14[17]) = *(void *)((char *)v9 + v14[17]);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_51;
    }
    uint64_t v24 = type metadata accessor for FormatFile();
    int v25 = swift_getEnumCaseMultiPayload();
    if (v25 == 11)
    {
      __dstd = v6;
      long long v64 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v64;
      v8[2] = v9[2];
      uint64_t v65 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v66 = (char *)v8 + v65;
      long long v67 = (char *)v9 + v65;
      *(_OWORD *)((char *)v8 + v65) = *(_OWORD *)((char *)v9 + v65);
      uint64_t v68 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v69 = v68[5];
      uint64_t v70 = &v66[v69];
      uint64_t v71 = &v67[v69];
      uint64_t v72 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
      *(_OWORD *)&v66[v68[6]] = *(_OWORD *)&v67[v68[6]];
      *(_OWORD *)&v66[v68[7]] = *(_OWORD *)&v67[v68[7]];
      *(_OWORD *)&v66[v68[8]] = *(_OWORD *)&v67[v68[8]];
      *(_OWORD *)&v66[v68[9]] = *(_OWORD *)&v67[v68[9]];
      uint64_t v73 = v68[10];
      uint64_t v130 = &v66[v73];
      uint64_t v74 = &v67[v73];
      uint64_t v75 = sub_1C151D6DC();
      uint64_t v124 = *(void *)(v75 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v74, 1, v75))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v130, v74, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v130, v74, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v130, 0, 1, v75);
      }
      *(void *)&v66[v68[11]] = *(void *)&v67[v68[11]];
      *(void *)&v66[v68[12]] = *(void *)&v67[v68[12]];
      *(void *)&v66[v68[13]] = *(void *)&v67[v68[13]];
      *(void *)&v66[v68[14]] = *(void *)&v67[v68[14]];
      *(void *)&v66[v68[15]] = *(void *)&v67[v68[15]];
      *(void *)&v66[v68[16]] = *(void *)&v67[v68[16]];
      *(void *)&v66[v68[17]] = *(void *)&v67[v68[17]];
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = __dstd;
      goto LABEL_50;
    }
    if (v25 == 5)
    {
      __dste = v6;
      long long v77 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v77;
      v8[2] = v9[2];
      *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
      *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
      *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
      *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
      *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
      *(_OWORD *)((char *)v8 + 120) = *(_OWORD *)((char *)v9 + 120);
      *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
      *((void *)v8 + 19) = *((void *)v9 + 19);
      v8[10] = v9[10];
      uint64_t v118 = (int *)type metadata accessor for FormatPackage();
      uint64_t v78 = v118[23];
      uint64_t v79 = (char *)v8 + v78;
      uint64_t v80 = (char *)v9 + v78;
      *(_OWORD *)((char *)v8 + v78) = *(_OWORD *)((char *)v9 + v78);
      int v127 = (int *)type metadata accessor for FormatCompilerOptions(0);
      unint64_t v131 = v80;
      uint64_t v81 = v127[6];
      uint64_t v122 = v79;
      unsigned __int16 v82 = &v79[v81];
      int v83 = &v80[v81];
      long long v84 = *((_OWORD *)v83 + 1);
      *(_OWORD *)unsigned __int16 v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v84;
      *((_OWORD *)v82 + 2) = *((_OWORD *)v83 + 2);
      uint64_t v85 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      long long v86 = &v82[v85];
      uint64_t v87 = &v83[v85];
      uint64_t v88 = sub_1C1518CDC();
      uint64_t v89 = *(void *)(v88 - 8);
      uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48);
      if (v125(v87, 1, v88))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v86, v87, v88);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
      }
      uint64_t v95 = v127[7];
      uint64_t v96 = v122;
      uint64_t v120 = &v122[v95];
      uint64_t v97 = &v131[v95];
      uint64_t v6 = __dste;
      if (v125(&v131[v95], 1, v88))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v120, v97, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v120, v97, v88);
        uint64_t v96 = v122;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v120, 0, 1, v88);
      }
      *(void *)&v96[v127[8]] = *(void *)&v131[v127[8]];
      uint64_t v107 = v118[24];
      uint64_t v108 = (char *)v8 + v107;
      uint64_t v109 = (char *)v9 + v107;
      uint64_t v110 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v108, v109, v110);
      uint64_t v111 = v118[25];
      uint64_t v112 = (char *)v8 + v111;
      uint64_t v113 = (char *)v9 + v111;
      if (v125((char *)v9 + v111, 1, v88))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v112, v113, v88);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v112, 0, 1, v88);
      }
    }
    else
    {
      if (v25)
      {
        memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_50:
        sub_1C0913D20();
        *(void *)((char *)v8 + *(int *)(v115 + 48)) = *(void *)((char *)v9 + *(int *)(v115 + 48));
        goto LABEL_51;
      }
      *uint64_t v8 = *v9;
      uint64_t v26 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v27 = v26[5];
      uint64_t v28 = (char *)v8 + v27;
      uint64_t v29 = (char *)v9 + v27;
      uint64_t v30 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)((char *)v8 + v26[6]) = *(_OWORD *)((char *)v9 + v26[6]);
      *(_OWORD *)((char *)v8 + v26[7]) = *(_OWORD *)((char *)v9 + v26[7]);
      *(_OWORD *)((char *)v8 + v26[8]) = *(_OWORD *)((char *)v9 + v26[8]);
      *(_OWORD *)((char *)v8 + v26[9]) = *(_OWORD *)((char *)v9 + v26[9]);
      uint64_t v31 = v26[10];
      __dsta = (char *)v8 + v31;
      uint64_t v32 = (char *)v9 + v31;
      uint64_t v33 = sub_1C151D6DC();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(__dsta, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(__dsta, v32, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dsta, 0, 1, v33);
      }
      *(void *)((char *)v8 + v26[11]) = *(void *)((char *)v9 + v26[11]);
      *(void *)((char *)v8 + v26[12]) = *(void *)((char *)v9 + v26[12]);
      *(void *)((char *)v8 + v26[13]) = *(void *)((char *)v9 + v26[13]);
      *(void *)((char *)v8 + v26[14]) = *(void *)((char *)v9 + v26[14]);
      *(void *)((char *)v8 + v26[15]) = *(void *)((char *)v9 + v26[15]);
      *(void *)((char *)v8 + v26[16]) = *(void *)((char *)v9 + v26[16]);
      *(void *)((char *)v8 + v26[17]) = *(void *)((char *)v9 + v26[17]);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_50;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1C091A95C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0919748((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
      uint64_t v7 = v6[5];
      uint64_t v8 = (_OWORD *)((char *)a1 + v7);
      int v9 = (_OWORD *)((char *)a2 + v7);
      uint64_t v10 = type metadata accessor for DebugFormatCompilerResultOutput();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_53:
          *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
          *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
          *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v12 = type metadata accessor for FormatFile();
        int v13 = swift_getEnumCaseMultiPayload();
        if (v13 == 11)
        {
          __dstb = v6;
          long long v36 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v36;
          v8[2] = v9[2];
          uint64_t v37 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          uint64_t v38 = (char *)v8 + v37;
          uint64_t v39 = (char *)v9 + v37;
          *(_OWORD *)((char *)v8 + v37) = *(_OWORD *)((char *)v9 + v37);
          uint64_t v40 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v41 = v40[5];
          uint64_t v42 = &v38[v41];
          uint64_t v43 = &v39[v41];
          uint64_t v44 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
          *(_OWORD *)&v38[v40[6]] = *(_OWORD *)&v39[v40[6]];
          *(_OWORD *)&v38[v40[7]] = *(_OWORD *)&v39[v40[7]];
          *(_OWORD *)&v38[v40[8]] = *(_OWORD *)&v39[v40[8]];
          *(_OWORD *)&v38[v40[9]] = *(_OWORD *)&v39[v40[9]];
          uint64_t v45 = v40[10];
          long long v128 = &v38[v45];
          uint64_t v46 = &v39[v45];
          uint64_t v47 = sub_1C151D6DC();
          uint64_t v48 = *(void *)(v47 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(v128, v46, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v128, v46, v47);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v128, 0, 1, v47);
          }
          *(void *)&v38[v40[11]] = *(void *)&v39[v40[11]];
          *(void *)&v38[v40[12]] = *(void *)&v39[v40[12]];
          *(void *)&v38[v40[13]] = *(void *)&v39[v40[13]];
          *(void *)&v38[v40[14]] = *(void *)&v39[v40[14]];
          *(void *)&v38[v40[15]] = *(void *)&v39[v40[15]];
          *(void *)&v38[v40[16]] = *(void *)&v39[v40[16]];
          *(void *)&v38[v40[17]] = *(void *)&v39[v40[17]];
          swift_storeEnumTagMultiPayload();
          uint64_t v6 = __dstb;
          goto LABEL_52;
        }
        if (v13 == 5)
        {
          __dstc = v6;
          long long v50 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v50;
          v8[2] = v9[2];
          *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
          *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
          *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
          *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
          *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
          *(_OWORD *)((char *)v8 + 120) = *(_OWORD *)((char *)v9 + 120);
          *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
          *((void *)v8 + 19) = *((void *)v9 + 19);
          v8[10] = v9[10];
          uint64_t v117 = (int *)type metadata accessor for FormatPackage();
          uint64_t v51 = v117[23];
          uint64_t v52 = (char *)v8 + v51;
          unint64_t v53 = (char *)v9 + v51;
          *(_OWORD *)((char *)v8 + v51) = *(_OWORD *)((char *)v9 + v51);
          unsigned __int8 v126 = (int *)type metadata accessor for FormatCompilerOptions(0);
          long long v129 = v53;
          uint64_t v54 = v126[6];
          uint64_t v119 = v52;
          uint64_t v55 = &v52[v54];
          unint64_t v56 = &v53[v54];
          long long v57 = *((_OWORD *)v56 + 1);
          *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
          *((_OWORD *)v55 + 1) = v57;
          *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
          uint64_t v58 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v59 = &v55[v58];
          uint64_t v60 = &v56[v58];
          uint64_t v61 = sub_1C1518CDC();
          uint64_t v62 = *(void *)(v61 - 8);
          uint64_t v123 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
          if (v123(v60, 1, v61))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
          }
          uint64_t v91 = v126[7];
          uint64_t v92 = v119;
          id v121 = &v119[v91];
          uint64_t v93 = &v129[v91];
          uint64_t v6 = __dstc;
          if (v123(&v129[v91], 1, v61))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v121, v93, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v121, v93, v61);
            uint64_t v92 = v119;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v121, 0, 1, v61);
          }
          *(void *)&v92[v126[8]] = *(void *)&v129[v126[8]];
          uint64_t v99 = v117[24];
          uint64_t v100 = (char *)v8 + v99;
          uint64_t v101 = (char *)v9 + v99;
          uint64_t v102 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          uint64_t v103 = v117[25];
          uint64_t v104 = (char *)v8 + v103;
          uint64_t v105 = (char *)v9 + v103;
          if (v123(v105, 1, v61))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v104, v105, v61);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v104, 0, 1, v61);
          }
        }
        else
        {
          if (v13)
          {
            memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_52:
            swift_storeEnumTagMultiPayload();
            goto LABEL_53;
          }
          *uint64_t v8 = *v9;
          long long v14 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v15 = v14[5];
          uint64_t v16 = (char *)v8 + v15;
          uint64_t v17 = (char *)v9 + v15;
          uint64_t v18 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
          *(_OWORD *)((char *)v8 + v14[6]) = *(_OWORD *)((char *)v9 + v14[6]);
          *(_OWORD *)((char *)v8 + v14[7]) = *(_OWORD *)((char *)v9 + v14[7]);
          *(_OWORD *)((char *)v8 + v14[8]) = *(_OWORD *)((char *)v9 + v14[8]);
          *(_OWORD *)((char *)v8 + v14[9]) = *(_OWORD *)((char *)v9 + v14[9]);
          uint64_t v19 = v14[10];
          __dst = (char *)v8 + v19;
          uint64_t v20 = (char *)v9 + v19;
          uint64_t v21 = sub_1C151D6DC();
          uint64_t v22 = *(void *)(v21 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
          }
          *(void *)((char *)v8 + v14[11]) = *(void *)((char *)v9 + v14[11]);
          *(void *)((char *)v8 + v14[12]) = *(void *)((char *)v9 + v14[12]);
          *(void *)((char *)v8 + v14[13]) = *(void *)((char *)v9 + v14[13]);
          *(void *)((char *)v8 + v14[14]) = *(void *)((char *)v9 + v14[14]);
          *(void *)((char *)v8 + v14[15]) = *(void *)((char *)v9 + v14[15]);
          *(void *)((char *)v8 + v14[16]) = *(void *)((char *)v9 + v14[16]);
          *(void *)((char *)v8 + v14[17]) = *(void *)((char *)v9 + v14[17]);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_52;
      }
      uint64_t v24 = type metadata accessor for FormatFile();
      int v25 = swift_getEnumCaseMultiPayload();
      if (v25 == 11)
      {
        __dstd = v6;
        long long v64 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v64;
        v8[2] = v9[2];
        uint64_t v65 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v66 = (char *)v8 + v65;
        long long v67 = (char *)v9 + v65;
        *(_OWORD *)((char *)v8 + v65) = *(_OWORD *)((char *)v9 + v65);
        uint64_t v68 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v69 = v68[5];
        uint64_t v70 = &v66[v69];
        uint64_t v71 = &v67[v69];
        uint64_t v72 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
        *(_OWORD *)&v66[v68[6]] = *(_OWORD *)&v67[v68[6]];
        *(_OWORD *)&v66[v68[7]] = *(_OWORD *)&v67[v68[7]];
        *(_OWORD *)&v66[v68[8]] = *(_OWORD *)&v67[v68[8]];
        *(_OWORD *)&v66[v68[9]] = *(_OWORD *)&v67[v68[9]];
        uint64_t v73 = v68[10];
        uint64_t v130 = &v66[v73];
        uint64_t v74 = &v67[v73];
        uint64_t v75 = sub_1C151D6DC();
        uint64_t v124 = *(void *)(v75 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v74, 1, v75))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(v130, v74, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v130, v74, v75);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v130, 0, 1, v75);
        }
        *(void *)&v66[v68[11]] = *(void *)&v67[v68[11]];
        *(void *)&v66[v68[12]] = *(void *)&v67[v68[12]];
        *(void *)&v66[v68[13]] = *(void *)&v67[v68[13]];
        *(void *)&v66[v68[14]] = *(void *)&v67[v68[14]];
        *(void *)&v66[v68[15]] = *(void *)&v67[v68[15]];
        *(void *)&v66[v68[16]] = *(void *)&v67[v68[16]];
        *(void *)&v66[v68[17]] = *(void *)&v67[v68[17]];
        swift_storeEnumTagMultiPayload();
        uint64_t v6 = __dstd;
        goto LABEL_51;
      }
      if (v25 == 5)
      {
        __dste = v6;
        long long v77 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v77;
        v8[2] = v9[2];
        *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
        *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
        *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
        *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
        *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
        *(_OWORD *)((char *)v8 + 120) = *(_OWORD *)((char *)v9 + 120);
        *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
        *((void *)v8 + 19) = *((void *)v9 + 19);
        v8[10] = v9[10];
        uint64_t v118 = (int *)type metadata accessor for FormatPackage();
        uint64_t v78 = v118[23];
        uint64_t v79 = (char *)v8 + v78;
        uint64_t v80 = (char *)v9 + v78;
        *(_OWORD *)((char *)v8 + v78) = *(_OWORD *)((char *)v9 + v78);
        int v127 = (int *)type metadata accessor for FormatCompilerOptions(0);
        unint64_t v131 = v80;
        uint64_t v81 = v127[6];
        uint64_t v120 = v79;
        unsigned __int16 v82 = &v79[v81];
        int v83 = &v80[v81];
        long long v84 = *((_OWORD *)v83 + 1);
        *(_OWORD *)unsigned __int16 v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v84;
        *((_OWORD *)v82 + 2) = *((_OWORD *)v83 + 2);
        uint64_t v85 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        long long v86 = &v82[v85];
        uint64_t v87 = &v83[v85];
        uint64_t v88 = sub_1C1518CDC();
        uint64_t v89 = *(void *)(v88 - 8);
        uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48);
        if (v125(v87, 1, v88))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v86, v87, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
        }
        uint64_t v95 = v127[7];
        uint64_t v96 = v120;
        uint64_t v122 = &v120[v95];
        uint64_t v97 = &v131[v95];
        uint64_t v6 = __dste;
        if (v125(&v131[v95], 1, v88))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v122, v97, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v122, v97, v88);
          uint64_t v96 = v120;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v122, 0, 1, v88);
        }
        *(void *)&v96[v127[8]] = *(void *)&v131[v127[8]];
        uint64_t v107 = v118[24];
        uint64_t v108 = (char *)v8 + v107;
        uint64_t v109 = (char *)v9 + v107;
        uint64_t v110 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v108, v109, v110);
        uint64_t v111 = v118[25];
        uint64_t v112 = (char *)v8 + v111;
        uint64_t v113 = (char *)v9 + v111;
        if (v125((char *)v9 + v111, 1, v88))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v112, v113, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v112, 0, 1, v88);
        }
      }
      else
      {
        if (v25)
        {
          memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_51:
          sub_1C0913D20();
          *(void *)((char *)v8 + *(int *)(v115 + 48)) = *(void *)((char *)v9 + *(int *)(v115 + 48));
          goto LABEL_52;
        }
        *uint64_t v8 = *v9;
        uint64_t v26 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v27 = v26[5];
        uint64_t v28 = (char *)v8 + v27;
        uint64_t v29 = (char *)v9 + v27;
        uint64_t v30 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        *(_OWORD *)((char *)v8 + v26[6]) = *(_OWORD *)((char *)v9 + v26[6]);
        *(_OWORD *)((char *)v8 + v26[7]) = *(_OWORD *)((char *)v9 + v26[7]);
        *(_OWORD *)((char *)v8 + v26[8]) = *(_OWORD *)((char *)v9 + v26[8]);
        *(_OWORD *)((char *)v8 + v26[9]) = *(_OWORD *)((char *)v9 + v26[9]);
        uint64_t v31 = v26[10];
        __dsta = (char *)v8 + v31;
        uint64_t v32 = (char *)v9 + v31;
        uint64_t v33 = sub_1C151D6DC();
        uint64_t v34 = *(void *)(v33 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dsta, v32, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v34 + 32))(__dsta, v32, v33);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dsta, 0, 1, v33);
        }
        *(void *)((char *)v8 + v26[11]) = *(void *)((char *)v9 + v26[11]);
        *(void *)((char *)v8 + v26[12]) = *(void *)((char *)v9 + v26[12]);
        *(void *)((char *)v8 + v26[13]) = *(void *)((char *)v9 + v26[13]);
        *(void *)((char *)v8 + v26[14]) = *(void *)((char *)v9 + v26[14]);
        *(void *)((char *)v8 + v26[15]) = *(void *)((char *)v9 + v26[15]);
        *(void *)((char *)v8 + v26[16]) = *(void *)((char *)v9 + v26[16]);
        *(void *)((char *)v8 + v26[17]) = *(void *)((char *)v9 + v26[17]);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_51;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C091BAD8()
{
  uint64_t result = type metadata accessor for DebugFormatCompilerResultEntry();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C091BB78(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1C0934864(a1, (uint64_t)sub_1C09347E0, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t FeedClusteringOptions.min.getter()
{
  return *(void *)v0;
}

uint64_t FeedClusteringOptions.minDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1C091C3E4(v1 + *(int *)(v3 + 20), a1, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
}

uint64_t type metadata accessor for FeedClusteringOptions(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB8611D8);
}

uint64_t FeedClusteringOptions.max.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 24));
}

uint64_t FeedClusteringOptions.maxDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1C091C3E4(v1 + *(int *)(v3 + 28), a1, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
}

uint64_t FeedClusteringOptions.bundleArticleQuotas.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1C091C3E4(v1 + *(int *)(v3 + 32), a1, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
}

void sub_1C091BD58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FeedClusteringOptions.maxInaccessibleHeadlines.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 36));
}

uint64_t FeedClusteringOptions.maxInaccessibleHeadlinesDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C091C36C(type metadata accessor for FeedClusteringOptions, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810], a1);
}

uint64_t FeedClusteringOptions.maxEvergreenHeadlines.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 44));
}

uint64_t FeedClusteringOptions.maxEvergreenHeadlinesDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1C091C3E4(v1 + *(int *)(v3 + 48), a1, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
}

uint64_t FeedClusteringOptions.maxPublisherOccurrences.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 52));
}

uint64_t FeedClusteringOptions.maxPublisherOccurrencesDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C091C560(type metadata accessor for FeedClusteringOptions, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810], a1);
}

uint64_t FeedClusteringOptions.maxAIGeneratedContent.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 60));
}

uint64_t FeedClusteringOptions.maxAIGeneratedContentDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1C091C3E4(v1 + *(int *)(v3 + 64), a1, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
}

uint64_t FeedClusteringOptions.topicDiversity.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 68));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1C091BFC4(v4, v5, v6, v7, v8);
}

uint64_t sub_1C091BFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t FeedClusteringOptions.minTagScoreRelativeToBaseline.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 72));
}

uint64_t FeedClusteringOptions.splittingConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1C091C3E4(v1 + *(int *)(v3 + 76), a1, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
}

uint64_t FeedClusteringOptions.init(min:minDepthTransform:max:maxDepthTransform:bundleArticleQuotas:maxInaccessibleHeadlines:maxInaccessibleHeadlinesDepthTransform:maxEvergreenHeadlines:maxEvergreenHeadlinesDepthTransform:maxPublisherOccurrences:maxPublisherOccurrencesDepthTransform:maxAIGeneratedContent:maxAIGeneratedContentDepthTransform:topicDiversity:minTagScoreRelativeToBaseline:splittingConfiguration:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,long long *a21,uint64_t a22,char a23,uint64_t a24)
{
  long long v42 = a21[1];
  long long v43 = *a21;
  uint64_t v41 = *((void *)a21 + 4);
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  uint64_t v29 = (int *)type metadata accessor for FeedClusteringOptions(0);
  uint64_t v30 = (void (*)(uint64_t))MEMORY[0x1E4FB7810];
  sub_1C091D0A0(a3, a9 + v29[5], (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
  uint64_t v31 = a9 + v29[6];
  *(void *)uint64_t v31 = a4;
  *(unsigned char *)(v31 + 8) = a5 & 1;
  sub_1C091D0A0(a6, a9 + v29[7], (unint64_t *)&qword_1EB8628E0, v30);
  sub_1C091D0A0(a7, a9 + v29[8], (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
  uint64_t v32 = a9 + v29[9];
  *(void *)uint64_t v32 = a8;
  *(unsigned char *)(v32 + 8) = a10 & 1;
  sub_1C091D0A0(a11, a9 + v29[10], (unint64_t *)&qword_1EB8628E0, v30);
  uint64_t v33 = a9 + v29[11];
  *(void *)uint64_t v33 = a12;
  *(unsigned char *)(v33 + 8) = a13 & 1;
  sub_1C091D0A0(a14, a9 + v29[12], (unint64_t *)&qword_1EB8628E0, v30);
  uint64_t v34 = a9 + v29[13];
  *(void *)uint64_t v34 = a15;
  *(unsigned char *)(v34 + 8) = a16 & 1;
  sub_1C091D0A0(a17, a9 + v29[14], (unint64_t *)&qword_1EB8628E0, v30);
  uint64_t v35 = a9 + v29[15];
  *(void *)uint64_t v35 = a18;
  *(unsigned char *)(v35 + 8) = a19 & 1;
  sub_1C091D0A0(a20, a9 + v29[16], (unint64_t *)&qword_1EB8628E0, v30);
  uint64_t v36 = a9 + v29[17];
  *(_OWORD *)uint64_t v36 = v43;
  *(_OWORD *)(v36 + 16) = v42;
  *(void *)(v36 + 32) = v41;
  uint64_t v37 = a9 + v29[18];
  *(void *)uint64_t v37 = a22;
  *(unsigned char *)(v37 + 8) = a23 & 1;
  return sub_1C091D0A0(a24, a9 + v29[19], &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
}

uint64_t FeedClusteringRequest.scoredItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringRequest.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringRequest.configuration.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedClusteringRequest.scores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringRequest.limitUnpaidArticles.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FeedClusteringRequest.hardPaywallBundleArticleLimit.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t FeedClusteringRequest.autoFavoritesTopicClusteringOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C091C36C(type metadata accessor for FeedClusteringRequest, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions, a1);
}

uint64_t sub_1C091C36C@<X0>(uint64_t (*a1)(void)@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return sub_1C091C3E4(v4 + *(int *)(v8 + 40), a4, a2, a3);
}

uint64_t type metadata accessor for FeedClusteringRequest(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB862C60);
}

uint64_t sub_1C091C3E4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C091BD58(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t FeedClusteringRequest.channelClusteringOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedClusteringRequest(0);
  return sub_1C091C3E4(v1 + *(int *)(v3 + 44), a1, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
}

uint64_t FeedClusteringRequest.customClusteringOptions.getter()
{
  type metadata accessor for FeedClusteringRequest(0);
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringRequest.generalTopicClusteringOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedClusteringRequest(0);
  return sub_1C091C3E4(v1 + *(int *)(v3 + 52), a1, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
}

uint64_t FeedClusteringRequest.moreForYouClusteringOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C091C560(type metadata accessor for FeedClusteringRequest, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions, a1);
}

uint64_t sub_1C091C560@<X0>(uint64_t (*a1)(void)@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return sub_1C091C3E4(v4 + *(int *)(v8 + 56), a4, a2, a3);
}

uint64_t FeedClusteringRequest.ignoreTagIDs.getter()
{
  type metadata accessor for FeedClusteringRequest(0);
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringRequest.clusterOrderingMode.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedClusteringRequest(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t FeedClusteringRequest.considerRejectedHeadlinesInMoreForYou.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedClusteringRequest(0) + 68));
}

double FeedClusteringRequest.minChannelGroupRatio.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for FeedClusteringRequest(0) + 72));
}

double FeedClusteringRequest.minTopicGroupRatio.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for FeedClusteringRequest(0) + 76));
}

uint64_t FeedClusteringRequest.keepOverflowTopicHeadlinesInInventory.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedClusteringRequest(0) + 80));
}

uint64_t FeedClusteringRequest.channelClusteringOption.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedClusteringRequest(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 84));
  return result;
}

uint64_t FeedClusteringRequest.init(scoredItems:configuration:limitUnpaidArticles:hardPaywallBundleArticleLimit:autoFavoritesTopicClusteringOptions:channelClusteringOptions:customChannelClusteringOptions:customTopicClusteringOptions:generalTopicClusteringOptions:moreForYouClusteringOptions:ignoreTagIDs:clusterOrderingMode:considerRejectedHeadlinesInMoreForYou:minChannelGroupRatio:minTopicGroupRatio:keepOverflowTopicHeadlinesInInventory:channelClusteringOption:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, uint64_t a14, char *a15, char a16, char a17, __int16 *a18)
{
  uint64_t v21 = a9;
  char v73 = *a15;
  __int16 v74 = *a18;
  *a9 = a1;
  uint64_t v22 = *(void *)(a1 + 16);
  if (!v22)
  {
    a9[1] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  uint64_t v80 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1C152028C();
  uint64_t v23 = 32;
  do
  {
    swift_unknownObjectRetain();
    sub_1C152025C();
    sub_1C152029C();
    sub_1C15202AC();
    sub_1C152026C();
    v23 += 24;
    --v22;
  }
  while (v22);
  uint64_t v24 = *(void *)(a1 + 16);
  v21[1] = v80;
  uint64_t v77 = v24;
  if (!v24)
  {
LABEL_28:
    uint64_t v26 = (void *)MEMORY[0x1E4FBC868];
LABEL_29:
    swift_bridgeObjectRelease();
    v21[2] = a2;
    v21[3] = v26;
    *((unsigned char *)v21 + 32) = a3 & 1;
    v21[5] = a4;
    uint64_t v62 = (int *)type metadata accessor for FeedClusteringRequest(0);
    sub_1C091C3E4(a5, (uint64_t)v21 + v62[10], &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    sub_1C091C3E4(a6, (uint64_t)v21 + v62[11], &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    unint64_t v63 = a7;
    swift_unknownObjectRetain();
    if (!a7) {
      unint64_t v63 = sub_1C018EFC8(MEMORY[0x1E4FBC860]);
    }
    unint64_t v64 = a8;
    if (!a8) {
      unint64_t v64 = sub_1C018EFC8(MEMORY[0x1E4FBC860]);
    }
    uint64_t v65 = sub_1C091BB78(v64, v63);
    swift_unknownObjectRelease();
    sub_1C091D028(a6);
    sub_1C091D028(a5);
    *(void *)((char *)v21 + v62[12]) = v65;
    sub_1C091D0A0(a12, (uint64_t)v21 + v62[13], &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    uint64_t result = sub_1C091D0A0(a13, (uint64_t)v21 + v62[14], &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    *(void *)((char *)v21 + v62[15]) = a14;
    *((unsigned char *)v21 + v62[16]) = v73;
    *((unsigned char *)v21 + v62[17]) = a16 & 1;
    *(double *)((char *)v21 + v62[18]) = a10;
    *(double *)((char *)v21 + v62[19]) = a11;
    *((unsigned char *)v21 + v62[20]) = a17 & 1;
    *(_WORD *)((char *)v21 + v62[21]) = v74;
    return result;
  }
  long long v67 = v21;
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  uint64_t v26 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v27 = (id *)(a1 + 48);
  while (1)
  {
    uint64_t v29 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    uint64_t v78 = v25;
    uint64_t v31 = *(v27 - 2);
    uint64_t v30 = *(v27 - 1);
    id v32 = *v27;
    swift_unknownObjectRetain();
    id v33 = v30;
    id v34 = v32;
    swift_unknownObjectRetain();
    id v35 = v33;
    id v36 = objc_msgSend(v31, sel_itemID);
    uint64_t v37 = sub_1C151E62C();
    uint64_t v39 = v38;

    objc_msgSend(v35, sel_sortingScore);
    double v41 = v40;
    uint64_t v79 = v34;

    swift_unknownObjectRelease();
    id v42 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v41);
    if (v42)
    {
      id v43 = v42;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v45 = v37;
      unint64_t v47 = sub_1BFEF2D8C(v37, v39);
      uint64_t v48 = v26[2];
      BOOL v49 = (v46 & 1) == 0;
      uint64_t v50 = v48 + v49;
      if (__OFADD__(v48, v49)) {
        goto LABEL_35;
      }
      char v51 = v46;
      if (v26[3] >= v50)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1C1070974();
        }
      }
      else
      {
        sub_1C105D358(v50, isUniquelyReferenced_nonNull_native);
        unint64_t v52 = sub_1BFEF2D8C(v45, v39);
        if ((v51 & 1) != (v53 & 1)) {
          goto LABEL_37;
        }
        unint64_t v47 = v52;
      }
      if (v51)
      {
        uint64_t v28 = v26[7];

        *(void *)(v28 + 8 * v47) = v43;
      }
      else
      {
        v26[(v47 >> 6) + 8] |= 1 << v47;
        uint64_t v58 = (uint64_t *)(v26[6] + 16 * v47);
        uint64_t *v58 = v45;
        v58[1] = v39;
        *(void *)(v26[7] + 8 * v47) = v43;
        uint64_t v59 = v26[2];
        BOOL v60 = __OFADD__(v59, 1);
        uint64_t v61 = v59 + 1;
        if (v60) {
          goto LABEL_36;
        }
        v26[2] = v61;
        swift_bridgeObjectRetain();
      }

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v54 = sub_1BFEF2D8C(v37, v39);
      char v56 = v55;
      swift_bridgeObjectRelease();
      if (v56)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C1070974();
        }
        swift_bridgeObjectRelease();
        long long v57 = *(void **)(v26[7] + 8 * v54);
        sub_1C091DA64(v54, (uint64_t)v26);

        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v27 += 3;
    uint64_t v25 = v78 + 1;
    if (v29 == v77)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = v67;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t FeedClusteringRequest.init(scoredHeadlines:configuration:limitUnpaidArticles:hardPaywallBundleArticleLimit:autoFavoritesTopicClusteringOptions:channelClusteringOptions:customChannelClusteringOptions:generalTopicClusteringOptions:moreForYouClusteringOptions:ignoreTagIDs:clusterOrderingMode:considerRejectedHeadlinesInMoreForYou:minChannelGroupRatio:minTopicGroupRatio:keepOverflowTopicHeadlinesInInventory:channelClusteringOption:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, unsigned __int8 *a14, unsigned __int8 a15, unsigned __int8 a16, unsigned __int16 *a17)
{
  uint64_t v60 = a2;
  uint64_t v61 = a4;
  int v57 = a3;
  uint64_t v58 = a9;
  int v54 = a16;
  int v55 = a15;
  uint64_t v56 = a13;
  uint64_t v59 = a12;
  sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v53 = (uint64_t)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v52 = (uint64_t)&v48 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v48 - v29;
  MEMORY[0x1F4188790](v31);
  id v33 = (char *)&v48 - v32;
  int v34 = *a14;
  int v50 = *a17;
  int v51 = v34;
  int64_t v35 = *(void *)(a1 + 16);
  unint64_t v62 = a7;
  uint64_t v63 = a5;
  if (v35)
  {
    uint64_t v48 = a8;
    uint64_t v49 = a6;
    uint64_t v67 = MEMORY[0x1E4FBC860];
    sub_1C05F69F4(0, v35, 0);
    uint64_t v36 = 0;
    uint64_t v37 = v67;
    do
    {
      long long v64 = *(_OWORD *)(a1 + 16 * v36 + 32);
      uint64_t v67 = v37;
      unint64_t v38 = *(void *)(v37 + 16);
      unint64_t v39 = *(void *)(v37 + 24);
      swift_unknownObjectRetain();
      id v40 = *((id *)&v64 + 1);
      if (v38 >= v39 >> 1)
      {
        sub_1C05F69F4(v39 > 1, v38 + 1, 1);
        uint64_t v37 = v67;
      }
      ++v36;
      *(void *)(v37 + 16) = v38 + 1;
      uint64_t v41 = v37 + 24 * v38;
      *(_OWORD *)(v41 + 32) = v64;
      *(void *)(v41 + 48) = 0;
    }
    while (v35 != v36);
    swift_bridgeObjectRelease();
    a5 = v63;
    a8 = v48;
    a6 = v49;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = MEMORY[0x1E4FBC860];
  }
  uint64_t v42 = a5;
  uint64_t v43 = (uint64_t)v33;
  sub_1C091C3E4(v42, (uint64_t)v33, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  sub_1C091C3E4(a6, (uint64_t)v30, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  uint64_t v44 = v52;
  sub_1C091C3E4(a8, v52, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  uint64_t v45 = v59;
  uint64_t v46 = v53;
  sub_1C091C3E4(v59, v53, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  char v66 = v51;
  __int16 v65 = v50;
  FeedClusteringRequest.init(scoredItems:configuration:limitUnpaidArticles:hardPaywallBundleArticleLimit:autoFavoritesTopicClusteringOptions:channelClusteringOptions:customChannelClusteringOptions:customTopicClusteringOptions:generalTopicClusteringOptions:moreForYouClusteringOptions:ignoreTagIDs:clusterOrderingMode:considerRejectedHeadlinesInMoreForYou:minChannelGroupRatio:minTopicGroupRatio:keepOverflowTopicHeadlinesInInventory:channelClusteringOption:)(v37, v60, v57 & 1, v61, v43, (uint64_t)v30, v62, 0, v58, a10, a11, v44, v46, v56, &v66, v55 & 1, v54 & 1, &v65);
  sub_1C091D028(v45);
  sub_1C091D028(a8);
  sub_1C091D028(a6);
  return sub_1C091D028(v63);
}

uint64_t sub_1C091D028(uint64_t a1)
{
  sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C091D0A0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C091BD58(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C091D10C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v10 = sub_1C1520E0C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          int v13 = (_OWORD *)(v12 + 16 * v3);
          long long v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1C091D2E4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C152039C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v39 = a2 + 64;
    uint64_t v11 = sub_1C151FFCC();
    uint64_t v12 = v39;
    if ((*(void *)(v39 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v37 = (v11 + 1) & v10;
      long long v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v36 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v38 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v9;
        v36(v7, *(void *)(a2 + 48) + v15 * v9, v4);
        uint64_t v18 = sub_1C151E47C();
        (*v16)(v7, v4);
        unint64_t v19 = v18 & v10;
        if (a1 >= (uint64_t)v37)
        {
          if (v19 >= v37 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t v23 = v22 + v15 * a1;
            unint64_t v24 = v22 + v17 + v15;
            if (v15 * a1 < v17 || v23 >= v24)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v26 = *(void *)(a2 + 56);
            uint64_t v27 = (_OWORD *)(v26 + 32 * a1);
            uint64_t v28 = (_OWORD *)(v26 + 32 * v9);
            uint64_t v12 = v39;
            if (a1 != v9 || (a1 = v9, v27 >= v28 + 2))
            {
              long long v29 = v28[1];
              *uint64_t v27 = *v28;
              v27[1] = v29;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v37 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v39;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1C091D5A0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v9 = sub_1C1520E0C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C091D778(unint64_t a1, uint64_t a2)
{
  return sub_1C091E6E8(a1, a2, MEMORY[0x1E4F27928]);
}

unint64_t sub_1C091D790(unint64_t a1, uint64_t a2)
{
  return sub_1C091E6E8(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
}

void sub_1C091D7A8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v38 = a2 + 64;
    uint64_t v11 = sub_1C151FFCC();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v36 = (v11 + 1) & v10;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v9;
        v35(v7, *(void *)(a2 + 48) + v15 * v9, v4);
        sub_1BFD2C630();
        uint64_t v18 = sub_1C151E47C();
        (*v16)(v7, v4);
        unint64_t v19 = v18 & v10;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t v23 = v22 + v15 * a1;
            unint64_t v24 = v22 + v17 + v15;
            if (v15 * a1 < v17 || v23 >= v24)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v26 = *(void *)(a2 + 56);
            uint64_t v27 = (void *)(v26 + 8 * a1);
            uint64_t v28 = (void *)(v26 + 8 * v9);
            uint64_t v12 = v38;
            if (a1 != v9 || (a1 = v9, v27 >= v28 + 1))
            {
              *uint64_t v27 = *v28;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    long long v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    long long v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *long long v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1C091DA64(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v9 = sub_1C1520E0C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C091DC3C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v9 = sub_1C1520E0C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 104 * v3;
          uint64_t v15 = (const void *)(v14 + 104 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 104))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x68uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C091DE20(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_1C1520DAC();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              void *v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C091DFBC(unint64_t a1, uint64_t a2)
{
  return sub_1C091E6E8(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
}

unint64_t sub_1C091DFD4(unint64_t a1, uint64_t a2)
{
  return sub_1C091E6E8(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
}

void sub_1C091DFEC(unint64_t a1, uint64_t a2)
{
  uint64_t v26 = type metadata accessor for WebEmbedDatastoreCacheKey();
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  unint64_t v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = a2 + 64;
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = sub_1C151FFCC();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v12 = (v11 + 1) & v10;
      uint64_t v13 = *(void *)(v4 + 72);
      do
      {
        int64_t v14 = v13 * v9;
        sub_1C0934D84(*(void *)(a2 + 48) + v13 * v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
        sub_1C1520DBC();
        sub_1C0F9A008((uint64_t)v27);
        uint64_t v15 = sub_1C1520E0C();
        sub_1C0934780((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
        unint64_t v16 = v15 & v10;
        if ((uint64_t)a1 >= (uint64_t)v12)
        {
          if (v16 < v12) {
            goto LABEL_5;
          }
        }
        else if (v16 >= v12)
        {
          goto LABEL_11;
        }
        if ((uint64_t)a1 >= (uint64_t)v16)
        {
LABEL_11:
          if ((uint64_t)(v13 * a1) < v14 || *(void *)(a2 + 48) + v13 * a1 >= *(void *)(a2 + 48) + v14 + v13)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v13 * a1 != v14)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (void *)(v17 + 8 * a1);
          uint64_t v19 = (void *)(v17 + 8 * v9);
          if (a1 != v9 || (a1 = v9, v18 >= v19 + 1))
          {
            *uint64_t v18 = *v19;
            a1 = v9;
          }
        }
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << a1) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1C091E290(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C0934724(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        uint64_t v10 = sub_1C152004C();
        uint64_t result = sub_1C02CD3DC((uint64_t)v28);
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            unint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              _OWORD *v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C091E45C(unint64_t a1, uint64_t a2)
{
  return sub_1C091E6E8(a1, a2, (uint64_t (*)(void))type metadata accessor for SharedItem);
}

unint64_t sub_1C091E474(unint64_t a1, uint64_t a2)
{
  return sub_1C091E6E8(a1, a2, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage);
}

unint64_t sub_1C091E48C(unint64_t a1, uint64_t a2)
{
  return sub_1C091E6E8(a1, a2, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
}

unint64_t sub_1C091E4A4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1C1520DBC();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        uint64_t result = sub_1C1520E0C();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        unint64_t v11 = (unsigned char *)(v10 + v3);
        unint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *unint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(sub_1C1515FDC() - 8) + 72);
        int64_t v15 = v14 * v3;
        uint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C091E6D0(unint64_t a1, uint64_t a2)
{
  return sub_1C091E6E8(a1, a2, (uint64_t (*)(void))type metadata accessor for SportsRoster);
}

unint64_t sub_1C091E6E8(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v11 = sub_1C1520E0C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = (_OWORD *)(v13 + 16 * v4);
        int64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          _OWORD *v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        uint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C091E908(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v9 = sub_1C1520E0C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + (v3 << 7);
          int64_t v15 = (const void *)(v14 + (v6 << 7));
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 128))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x80uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C091EAE0(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      uint64_t v28 = v4;
      do
      {
        uint64_t v10 = 24 * v6;
        uint64_t v11 = v2;
        unint64_t v12 = v8;
        sub_1C1520DBC();
        sub_1C1520DCC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v13 = sub_1C1520E0C();
        uint64_t result = sub_1C02F6038();
        unint64_t v8 = v12;
        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v12)
        {
          if (v14 < v12)
          {
            uint64_t v4 = v28;
            uint64_t v2 = v11;
          }
          else
          {
            uint64_t v4 = v28;
            uint64_t v2 = v11;
            if (v3 >= (uint64_t)v14) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v4 = v28;
          uint64_t v2 = v11;
          if (v14 >= v8 || v3 >= (uint64_t)v14)
          {
LABEL_12:
            uint64_t v15 = *(void *)(v2 + 48);
            unint64_t v16 = v15 + 24 * v3;
            uint64_t v17 = (long long *)(v15 + v10);
            if (24 * v3 < v10 || v16 >= (unint64_t)v17 + 24 || v3 != v6)
            {
              long long v18 = *v17;
              *(void *)(v16 + 16) = *((void *)v17 + 2);
              *(_OWORD *)unint64_t v16 = v18;
            }
            uint64_t v19 = *(void *)(v2 + 56);
            BOOL v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              _OWORD *v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(v2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v27;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_1C091ED34(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v11 = sub_1C1520E0C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            _OWORD *v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          long long v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C091EF20(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C151FFCC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        long long v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_1C1520DAC();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        unint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          void *v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t result = v15 + 16 * v3;
        if (v3 < (uint64_t)v6 || result >= v15 + 16 * v6 + 16)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          BOOL v16 = v3 == v6;
          int64_t v3 = v6;
          if (v16) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FeedClusteringOptions(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a3[5];
    unint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C1516D9C();
    uint64_t v11 = *(void *)(v10 - 8);
    unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    unint64_t v17 = (char *)v4 + v15;
    uint64_t v18 = (uint64_t)a2 + v15;
    *(void *)unint64_t v17 = *(void *)v18;
    v17[8] = *(unsigned char *)(v18 + 8);
    uint64_t v19 = (char *)v4 + v16;
    uint64_t v20 = (char *)a2 + v16;
    uint64_t v77 = v12;
    if (v12((char *)a2 + v16, 1, v10))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v19, v20, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
    }
    uint64_t v22 = a3[8];
    BOOL v23 = (void *)((char *)v4 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v24[1];
      void *v23 = *v24;
      v23[1] = v28;
      uint64_t v29 = *(int *)(v25 + 24);
      uint64_t v75 = (char *)v24 + v29;
      uint64_t v76 = (char *)v23 + v29;
      __int16 v74 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      v74(v76, v75, v10);
      *(void *)((char *)v23 + *(int *)(v25 + 28)) = *(void *)((char *)v24 + *(int *)(v25 + 28));
      uint64_t v30 = *(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56);
      swift_bridgeObjectRetain();
      v30(v23, 0, 1, v25);
    }
    uint64_t v31 = a3[9];
    uint64_t v32 = a3[10];
    BOOL v33 = (char *)v4 + v31;
    uint64_t v34 = (uint64_t)a2 + v31;
    *(void *)BOOL v33 = *(void *)v34;
    v33[8] = *(unsigned char *)(v34 + 8);
    uint64_t v35 = (char *)v4 + v32;
    unint64_t v36 = (char *)a2 + v32;
    if (v77((char *)a2 + v32, 1, v10))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v35, v36, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v10);
    }
    uint64_t v38 = a3[11];
    uint64_t v39 = a3[12];
    id v40 = (char *)v4 + v38;
    uint64_t v41 = (uint64_t)a2 + v38;
    *(void *)id v40 = *(void *)v41;
    v40[8] = *(unsigned char *)(v41 + 8);
    uint64_t v42 = (char *)v4 + v39;
    uint64_t v43 = (char *)a2 + v39;
    if (v77((char *)a2 + v39, 1, v10))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0, 1, v10);
    }
    uint64_t v45 = a3[13];
    uint64_t v46 = a3[14];
    unint64_t v47 = (char *)v4 + v45;
    uint64_t v48 = (uint64_t)a2 + v45;
    *(void *)unint64_t v47 = *(void *)v48;
    v47[8] = *(unsigned char *)(v48 + 8);
    uint64_t v49 = (char *)v4 + v46;
    int v50 = (char *)a2 + v46;
    if (v77((char *)a2 + v46, 1, v10))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v50, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0, 1, v10);
    }
    uint64_t v52 = a3[15];
    uint64_t v53 = a3[16];
    int v54 = (char *)v4 + v52;
    uint64_t v55 = (uint64_t)a2 + v52;
    *(void *)int v54 = *(void *)v55;
    v54[8] = *(unsigned char *)(v55 + 8);
    uint64_t v56 = (char *)v4 + v53;
    int v57 = (char *)a2 + v53;
    if (v77((char *)a2 + v53, 1, v10))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v56, v57, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v56, 0, 1, v10);
    }
    uint64_t v59 = a3[17];
    uint64_t v60 = (char *)v4 + v59;
    uint64_t v61 = (uint64_t)a2 + v59;
    uint64_t v62 = *(void *)(v61 + 32);
    if (v62 == 1)
    {
      long long v63 = *(_OWORD *)(v61 + 16);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v63;
      *((void *)v60 + 4) = *(void *)(v61 + 32);
    }
    else
    {
      *(void *)uint64_t v60 = *(void *)v61;
      v60[8] = *(unsigned char *)(v61 + 8);
      *((void *)v60 + 2) = *(void *)(v61 + 16);
      v60[24] = *(unsigned char *)(v61 + 24);
      *((void *)v60 + 4) = v62;
      swift_bridgeObjectRetain();
    }
    uint64_t v64 = a3[18];
    uint64_t v65 = a3[19];
    char v66 = (char *)v4 + v64;
    uint64_t v67 = (uint64_t)a2 + v64;
    *(void *)char v66 = *(void *)v67;
    v66[8] = *(unsigned char *)(v67 + 8);
    uint64_t v68 = (char *)v4 + v65;
    uint64_t v69 = (char *)a2 + v65;
    uint64_t v70 = sub_1C1516D2C();
    uint64_t v71 = *(void *)(v70 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
      memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
  }
  return v4;
}

uint64_t destroy for FeedClusteringOptions(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C1516D9C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[7];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = type metadata accessor for FeedGroupBundleArticleQuotas();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9 + *(int *)(v10 + 24), v5);
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = a1 + a2[10];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = a1 + a2[12];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = a1 + a2[14];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = a1 + a2[16];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  if (*(void *)(a1 + a2[17] + 32) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = a1 + a2[19];
  uint64_t v16 = sub_1C1516D2C();
  uint64_t v19 = *(void *)(v16 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1, v16);
  if (!result)
  {
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
    return v18(v15, v16);
  }
  return result;
}

uint64_t initializeWithCopy for FeedClusteringOptions(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C1516D9C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  unint64_t v17 = (void *)(a1 + v14);
  uint64_t v18 = (const void *)(a2 + v14);
  uint64_t v75 = v11;
  if (v11((const void *)(a2 + v14), 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v17, v18, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v26;
    uint64_t v27 = *(int *)(v23 + 24);
    char v73 = (char *)v22 + v27;
    __int16 v74 = (char *)v21 + v27;
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    v72(v74, v73, v9);
    *(void *)((char *)v21 + *(int *)(v23 + 28)) = *(void *)((char *)v22 + *(int *)(v23 + 28));
    uint64_t v28 = *(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56);
    swift_bridgeObjectRetain();
    v28(v21, 0, 1, v23);
  }
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  BOOL v33 = (void *)(a1 + v30);
  uint64_t v34 = (const void *)(a2 + v30);
  if (v75((const void *)(a2 + v30), 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v33, v34, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v33, 0, 1, v9);
  }
  uint64_t v36 = a3[11];
  uint64_t v37 = a3[12];
  uint64_t v38 = a1 + v36;
  uint64_t v39 = a2 + v36;
  *(void *)uint64_t v38 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  id v40 = (void *)(a1 + v37);
  uint64_t v41 = (const void *)(a2 + v37);
  if (v75((const void *)(a2 + v37), 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v40, v41, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0, 1, v9);
  }
  uint64_t v43 = a3[13];
  uint64_t v44 = a3[14];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  *(void *)uint64_t v45 = *(void *)v46;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  unint64_t v47 = (void *)(a1 + v44);
  uint64_t v48 = (const void *)(a2 + v44);
  if (v75((const void *)(a2 + v44), 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v47, v48, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  uint64_t v50 = a3[15];
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v50;
  uint64_t v53 = a2 + v50;
  *(void *)uint64_t v52 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  int v54 = (void *)(a1 + v51);
  uint64_t v55 = (const void *)(a2 + v51);
  if (v75((const void *)(a2 + v51), 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v54, v55, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v54, 0, 1, v9);
  }
  uint64_t v57 = a3[17];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  uint64_t v60 = *(void *)(v59 + 32);
  if (v60 == 1)
  {
    long long v61 = *(_OWORD *)(v59 + 16);
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    *(_OWORD *)(v58 + 16) = v61;
    *(void *)(v58 + 32) = *(void *)(v59 + 32);
  }
  else
  {
    *(void *)uint64_t v58 = *(void *)v59;
    *(unsigned char *)(v58 + 8) = *(unsigned char *)(v59 + 8);
    *(void *)(v58 + 16) = *(void *)(v59 + 16);
    *(unsigned char *)(v58 + 24) = *(unsigned char *)(v59 + 24);
    *(void *)(v58 + 32) = v60;
    swift_bridgeObjectRetain();
  }
  uint64_t v62 = a3[18];
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v62;
  uint64_t v65 = a2 + v62;
  *(void *)uint64_t v64 = *(void *)v65;
  *(unsigned char *)(v64 + 8) = *(unsigned char *)(v65 + 8);
  char v66 = (void *)(a1 + v63);
  uint64_t v67 = (const void *)(a2 + v63);
  uint64_t v68 = sub_1C1516D2C();
  uint64_t v69 = *(void *)(v68 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v69 + 16))(v66, v67, v68);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  return a1;
}

uint64_t assignWithCopy for FeedClusteringOptions(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1516D9C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  uint64_t v19 = *v18;
  *(unsigned char *)(v17 + 8) = *((unsigned char *)v18 + 8);
  *(void *)uint64_t v17 = v19;
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (char *)a2 + v20;
  int v23 = v12((void *)(a1 + v20), 1, v10);
  int v24 = v12(v22, 1, v10);
  uint64_t v110 = v12;
  uint64_t v111 = v11;
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v21, v10);
LABEL_12:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v21, v22, v10);
LABEL_13:
  uint64_t v109 = a3;
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)((char *)a2 + v26);
  uint64_t v29 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (v32)
  {
    uint64_t v34 = v110;
    if (!v33)
    {
      *uint64_t v27 = *v28;
      v27[1] = v28[1];
      uint64_t v35 = *(int *)(v29 + 24);
      uint64_t v36 = (char *)v27 + v35;
      uint64_t v108 = (char *)v28 + v35;
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
      swift_bridgeObjectRetain();
      v37(v36, v108, v10);
      uint64_t v34 = v110;
      *(void *)((char *)v27 + *(int *)(v29 + 28)) = *(void *)((char *)v28 + *(int *)(v29 + 28));
      uint64_t v38 = *(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56);
      swift_bridgeObjectRetain();
      v38(v27, 0, 1, v29);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v34 = v110;
  if (v33)
  {
    sub_1C0934780((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_18:
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v27, v28, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v111 + 24))((char *)v27 + *(int *)(v29 + 24), (char *)v28 + *(int *)(v29 + 24), v10);
  *(void *)((char *)v27 + *(int *)(v29 + 28)) = *(void *)((char *)v28 + *(int *)(v29 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v40 = v109[9];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t *)((char *)a2 + v40);
  uint64_t v43 = *v42;
  *(unsigned char *)(v41 + 8) = *((unsigned char *)v42 + 8);
  *(void *)uint64_t v41 = v43;
  uint64_t v44 = v109[10];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (char *)a2 + v44;
  int v47 = v34((void *)(a1 + v44), 1, v10);
  int v48 = v34(v46, 1, v10);
  if (v47)
  {
    uint64_t v49 = v111;
    if (!v48)
    {
      (*(void (**)(void *, char *, uint64_t))(v111 + 16))(v45, v46, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v45, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v49 = v111;
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v111 + 8))(v45, v10);
LABEL_24:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v111 + 24))(v45, v46, v10);
LABEL_25:
  uint64_t v51 = v109[11];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = (uint64_t *)((char *)a2 + v51);
  uint64_t v54 = *v53;
  *(unsigned char *)(v52 + 8) = *((unsigned char *)v53 + 8);
  *(void *)uint64_t v52 = v54;
  uint64_t v55 = v109[12];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = (char *)a2 + v55;
  int v58 = v34((void *)(a1 + v55), 1, v10);
  int v59 = v34(v57, 1, v10);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, char *, uint64_t))(v49 + 16))(v56, v57, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v56, 0, 1, v10);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v49 + 8))(v56, v10);
LABEL_30:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v49 + 24))(v56, v57, v10);
LABEL_31:
  uint64_t v61 = v109[13];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = (uint64_t *)((char *)a2 + v61);
  uint64_t v64 = *v63;
  *(unsigned char *)(v62 + 8) = *((unsigned char *)v63 + 8);
  *(void *)uint64_t v62 = v64;
  uint64_t v65 = v109[14];
  char v66 = (void *)(a1 + v65);
  uint64_t v67 = (char *)a2 + v65;
  int v68 = v34((void *)(a1 + v65), 1, v10);
  int v69 = v34(v67, 1, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(void *, char *, uint64_t))(v49 + 16))(v66, v67, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v66, 0, 1, v10);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v69)
  {
    (*(void (**)(void *, uint64_t))(v49 + 8))(v66, v10);
LABEL_36:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, char *, uint64_t))(v49 + 24))(v66, v67, v10);
LABEL_37:
  uint64_t v71 = v109[15];
  uint64_t v72 = a1 + v71;
  char v73 = (uint64_t *)((char *)a2 + v71);
  uint64_t v74 = *v73;
  *(unsigned char *)(v72 + 8) = *((unsigned char *)v73 + 8);
  *(void *)uint64_t v72 = v74;
  uint64_t v75 = v109[16];
  uint64_t v76 = (void *)(a1 + v75);
  uint64_t v77 = (char *)a2 + v75;
  int v78 = v34((void *)(a1 + v75), 1, v10);
  int v79 = v34(v77, 1, v10);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(void *, char *, uint64_t))(v49 + 16))(v76, v77, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v76, 0, 1, v10);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v79)
  {
    (*(void (**)(void *, uint64_t))(v49 + 8))(v76, v10);
LABEL_42:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(void *, char *, uint64_t))(v49 + 24))(v76, v77, v10);
LABEL_43:
  uint64_t v81 = v109[17];
  uint64_t v82 = a1 + v81;
  int v83 = (long long *)((char *)a2 + v81);
  uint64_t v84 = *(void *)(a1 + v81 + 32);
  uint64_t v85 = *(uint64_t *)((char *)a2 + v81 + 32);
  if (v84 == 1)
  {
    if (v85 == 1)
    {
      long long v86 = *v83;
      long long v87 = v83[1];
      *(void *)(v82 + 32) = *((void *)v83 + 4);
      *(_OWORD *)uint64_t v82 = v86;
      *(_OWORD *)(v82 + 16) = v87;
    }
    else
    {
      uint64_t v90 = *(void *)v83;
      *(unsigned char *)(v82 + 8) = *((unsigned char *)v83 + 8);
      *(void *)uint64_t v82 = v90;
      uint64_t v91 = *((void *)v83 + 2);
      *(unsigned char *)(v82 + 24) = *((unsigned char *)v83 + 24);
      *(void *)(v82 + 16) = v91;
      *(void *)(v82 + 32) = *((void *)v83 + 4);
      swift_bridgeObjectRetain();
    }
  }
  else if (v85 == 1)
  {
    sub_1C0921044(v82);
    uint64_t v88 = *((void *)v83 + 4);
    long long v89 = v83[1];
    *(_OWORD *)uint64_t v82 = *v83;
    *(_OWORD *)(v82 + 16) = v89;
    *(void *)(v82 + 32) = v88;
  }
  else
  {
    uint64_t v92 = *(void *)v83;
    *(unsigned char *)(v82 + 8) = *((unsigned char *)v83 + 8);
    *(void *)uint64_t v82 = v92;
    uint64_t v93 = *((void *)v83 + 2);
    *(unsigned char *)(v82 + 24) = *((unsigned char *)v83 + 24);
    *(void *)(v82 + 16) = v93;
    *(void *)(v82 + 32) = *((void *)v83 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v94 = v109[18];
  uint64_t v95 = a1 + v94;
  uint64_t v96 = (uint64_t *)((char *)a2 + v94);
  uint64_t v97 = *v96;
  *(unsigned char *)(v95 + 8) = *((unsigned char *)v96 + 8);
  *(void *)uint64_t v95 = v97;
  uint64_t v98 = v109[19];
  uint64_t v99 = (void *)(a1 + v98);
  uint64_t v100 = (char *)a2 + v98;
  uint64_t v101 = sub_1C1516D2C();
  uint64_t v102 = *(void *)(v101 - 8);
  uint64_t v103 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v102 + 48);
  int v104 = v103(v99, 1, v101);
  int v105 = v103(v100, 1, v101);
  if (!v104)
  {
    if (!v105)
    {
      (*(void (**)(void *, char *, uint64_t))(v102 + 24))(v99, v100, v101);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v102 + 8))(v99, v101);
    goto LABEL_55;
  }
  if (v105)
  {
LABEL_55:
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v99, v100, *(void *)(*(void *)(v106 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v102 + 16))(v99, v100, v101);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
  return a1;
}

uint64_t sub_1C0921044(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for FeedClusteringOptions(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C1516D9C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = (void *)(a1 + v14);
  uint64_t v18 = (const void *)(a2 + v14);
  int v68 = v11;
  if (v11((const void *)(a2 + v14), 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v17, v18, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = (_OWORD *)(a1 + v20);
  uint64_t v22 = (_OWORD *)(a2 + v20);
  uint64_t v23 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    *uint64_t v21 = *v22;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v21 + *(int *)(v23 + 24), (char *)v22 + *(int *)(v23 + 24), v9);
    *(void *)((char *)v21 + *(int *)(v23 + 28)) = *(void *)((char *)v22 + *(int *)(v23 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  uint64_t v30 = (void *)(a1 + v27);
  uint64_t v31 = (const void *)(a2 + v27);
  if (v68((const void *)(a2 + v27), 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v30, v31, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v30, 0, 1, v9);
  }
  uint64_t v33 = a3[11];
  uint64_t v34 = a3[12];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = (void *)(a1 + v34);
  uint64_t v38 = (const void *)(a2 + v34);
  if (v68((const void *)(a2 + v34), 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v37, v38, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v37, 0, 1, v9);
  }
  uint64_t v40 = a3[13];
  uint64_t v41 = a3[14];
  uint64_t v42 = a1 + v40;
  uint64_t v43 = a2 + v40;
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  uint64_t v44 = (void *)(a1 + v41);
  uint64_t v45 = (const void *)(a2 + v41);
  if (v68((const void *)(a2 + v41), 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v44, v45, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0, 1, v9);
  }
  uint64_t v47 = a3[15];
  uint64_t v48 = a3[16];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = a2 + v47;
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = *(unsigned char *)(v50 + 8);
  uint64_t v51 = (void *)(a1 + v48);
  uint64_t v52 = (const void *)(a2 + v48);
  if (v68((const void *)(a2 + v48), 1, v9))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  uint64_t v54 = a3[17];
  uint64_t v55 = a3[18];
  uint64_t v56 = a1 + v54;
  uint64_t v57 = a2 + v54;
  long long v58 = *(_OWORD *)(v57 + 16);
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  *(_OWORD *)(v56 + 16) = v58;
  *(void *)(v56 + 32) = *(void *)(v57 + 32);
  uint64_t v59 = a1 + v55;
  uint64_t v60 = a2 + v55;
  *(unsigned char *)(v59 + 8) = *(unsigned char *)(v60 + 8);
  *(void *)uint64_t v59 = *(void *)v60;
  uint64_t v61 = a3[19];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (const void *)(a2 + v61);
  uint64_t v64 = sub_1C1516D2C();
  uint64_t v65 = *(void *)(v64 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v62, v63, v64);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  }
  return a1;
}

uint64_t assignWithTake for FeedClusteringOptions(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1C1516D9C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = (void *)(a1 + v16);
  uint64_t v20 = (void *)(a2 + v16);
  int v21 = v11((void *)(a1 + v16), 1, v9);
  int v22 = v11(v20, 1, v9);
  uint64_t v90 = v10;
  uint64_t v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v11;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v19, v20, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v19, v9);
LABEL_12:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v19, v20, v9);
LABEL_13:
  long long v89 = a3;
  uint64_t v24 = a3[8];
  uint64_t v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  uint64_t v27 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(&v25[*(int *)(v27 + 24)], &v26[*(int *)(v27 + 24)], v9);
      *(void *)&v25[*(int *)(v27 + 28)] = *(void *)&v26[*(int *)(v27 + 28)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    sub_1C0934780((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_18:
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v90 + 40))(&v25[*(int *)(v27 + 24)], &v26[*(int *)(v27 + 24)], v9);
  *(void *)&v25[*(int *)(v27 + 28)] = *(void *)&v26[*(int *)(v27 + 28)];
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v33 = v89[9];
  uint64_t v34 = v89[10];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = (void *)(a1 + v34);
  uint64_t v38 = (const void *)(a2 + v34);
  int v39 = v88(a1 + v34, 1, v9);
  int v40 = v88((uint64_t)v38, 1, v9);
  if (v39)
  {
    uint64_t v41 = v90;
    if (!v40)
    {
      (*(void (**)(void *, const void *, uint64_t))(v90 + 32))(v37, v38, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v90 + 56))(v37, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v41 = v90;
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v90 + 8))(v37, v9);
LABEL_24:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v90 + 40))(v37, v38, v9);
LABEL_25:
  uint64_t v43 = v89[11];
  uint64_t v44 = v89[12];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  *(void *)uint64_t v45 = *(void *)v46;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  uint64_t v47 = (void *)(a1 + v44);
  uint64_t v48 = (const void *)(a2 + v44);
  int v49 = v88(a1 + v44, 1, v9);
  int v50 = v88((uint64_t)v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v47, v48, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v47, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v47, v9);
LABEL_30:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, const void *, uint64_t))(v41 + 40))(v47, v48, v9);
LABEL_31:
  uint64_t v52 = v89[13];
  uint64_t v53 = v89[14];
  uint64_t v54 = a1 + v52;
  uint64_t v55 = a2 + v52;
  *(void *)uint64_t v54 = *(void *)v55;
  *(unsigned char *)(v54 + 8) = *(unsigned char *)(v55 + 8);
  uint64_t v56 = (void *)(a1 + v53);
  uint64_t v57 = (const void *)(a2 + v53);
  int v58 = v88(a1 + v53, 1, v9);
  int v59 = v88((uint64_t)v57, 1, v9);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v56, v57, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v56, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v56, v9);
LABEL_36:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(v41 + 40))(v56, v57, v9);
LABEL_37:
  uint64_t v61 = v89[15];
  uint64_t v62 = v89[16];
  uint64_t v63 = a1 + v61;
  uint64_t v64 = a2 + v61;
  *(void *)uint64_t v63 = *(void *)v64;
  *(unsigned char *)(v63 + 8) = *(unsigned char *)(v64 + 8);
  uint64_t v65 = (void *)(a1 + v62);
  uint64_t v66 = (const void *)(a2 + v62);
  int v67 = v88(a1 + v62, 1, v9);
  int v68 = v88((uint64_t)v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v65, v66, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v65, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v68)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v65, v9);
LABEL_42:
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(void *, const void *, uint64_t))(v41 + 40))(v65, v66, v9);
LABEL_43:
  uint64_t v70 = v89[17];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  if (*(void *)(a1 + v70 + 32) == 1)
  {
LABEL_46:
    long long v74 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v74;
    *(void *)(v71 + 32) = *(void *)(v72 + 32);
    goto LABEL_48;
  }
  uint64_t v73 = *(void *)(v72 + 32);
  if (v73 == 1)
  {
    sub_1C0921044(v71);
    goto LABEL_46;
  }
  *(void *)uint64_t v71 = *(void *)v72;
  *(unsigned char *)(v71 + 8) = *(unsigned char *)(v72 + 8);
  *(void *)(v71 + 16) = *(void *)(v72 + 16);
  *(unsigned char *)(v71 + 24) = *(unsigned char *)(v72 + 24);
  *(void *)(v71 + 32) = v73;
  swift_bridgeObjectRelease();
LABEL_48:
  uint64_t v75 = v89[18];
  uint64_t v76 = v89[19];
  uint64_t v77 = a1 + v75;
  uint64_t v78 = a2 + v75;
  *(void *)uint64_t v77 = *(void *)v78;
  *(unsigned char *)(v77 + 8) = *(unsigned char *)(v78 + 8);
  int v79 = (void *)(a1 + v76);
  uint64_t v80 = (void *)(a2 + v76);
  uint64_t v81 = sub_1C1516D2C();
  uint64_t v82 = *(void *)(v81 - 8);
  int v83 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
  int v84 = v83(v79, 1, v81);
  int v85 = v83(v80, 1, v81);
  if (!v84)
  {
    if (!v85)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 40))(v79, v80, v81);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v82 + 8))(v79, v81);
    goto LABEL_53;
  }
  if (v85)
  {
LABEL_53:
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v79, v80, *(void *)(*(void *)(v86 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v82 + 32))(v79, v80, v81);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedClusteringOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0922368);
}

uint64_t sub_1C0922368(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_5;
  }
  if (a2 == 2147483645)
  {
    unint64_t v13 = *(void *)(a1 + a3[17] + 32);
    if (v13 >= 0xFFFFFFFF) {
      LODWORD(v13) = -1;
    }
    return (v13 - 1) & ~(((int)v13 - 1) >> 31);
  }
  else
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[19];
    return v15(v17, a2, v16);
  }
}

uint64_t storeEnumTagSinglePayload for FeedClusteringOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0922558);
}

void sub_1C0922558(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_5:
    unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v13(a1 + v11, a2, a2, v9);
    return;
  }
  sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_5;
  }
  if (a3 == 2147483645)
  {
    *(void *)(a1 + a4[17] + 32) = (a2 + 1);
  }
  else
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a4[19];
    v15(v17, a2, a2, v16);
  }
}

void sub_1C0922730()
{
  sub_1C091BD58(319, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
  if (v0 <= 0x3F)
  {
    sub_1C091BD58(319, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    if (v1 <= 0x3F)
    {
      sub_1C091BD58(319, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for FeedClusteringRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a3;
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a3[10];
    uint64_t v9 = (unsigned char *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    *(void *)(a1 + 40) = a2[5];
    uint64_t v11 = (int *)type metadata accessor for FeedClusteringOptions(0);
    uint64_t v307 = *((void *)v11 - 1);
    uint64_t v12 = *(unsigned int (**)(void, void, void))(v307 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v308 = v5;
    uint64_t v305 = v12;
    if (v12(v10, 1, v11))
    {
      sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      v9[8] = v10[8];
      uint64_t v14 = v11[5];
      uint64_t v15 = &v9[v14];
      uint64_t v16 = &v10[v14];
      uint64_t v17 = sub_1C1516D9C();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48);
      if (v19(v16, 1, v17))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v21 = v11[6];
      int v22 = &v9[v21];
      uint64_t v23 = &v10[v21];
      *(void *)int v22 = *(void *)v23;
      v22[8] = v23[8];
      uint64_t v24 = v11[7];
      uint64_t v25 = &v9[v24];
      uint64_t v26 = &v10[v24];
      uint64_t v301 = v19;
      if (v19(&v10[v24], 1, v17))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v25, v26, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v25, 0, 1, v17);
      }
      uint64_t v28 = v11[8];
      uint64_t v29 = &v9[v28];
      int v30 = &v10[v28];
      uint64_t v31 = type metadata accessor for FeedGroupBundleArticleQuotas();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        uint64_t v34 = v30[1];
        *uint64_t v29 = *v30;
        v29[1] = v34;
        uint64_t v35 = *(int *)(v31 + 24);
        uint64_t v293 = (char *)v30 + v35;
        int v296 = (char *)v29 + v35;
        uint64_t v290 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
        swift_bridgeObjectRetain();
        v290(v296, v293, v17);
        *(void *)((char *)v29 + *(int *)(v31 + 28)) = *(void *)((char *)v30 + *(int *)(v31 + 28));
        uint64_t v36 = *(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56);
        swift_bridgeObjectRetain();
        v36(v29, 0, 1, v31);
      }
      uint64_t v37 = v11[9];
      uint64_t v38 = &v9[v37];
      int v39 = &v10[v37];
      *(void *)uint64_t v38 = *(void *)v39;
      v38[8] = v39[8];
      uint64_t v40 = v11[10];
      uint64_t v41 = &v9[v40];
      uint64_t v42 = &v10[v40];
      if (v301(&v10[v40], 1, v17))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v41, v42, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v41, 0, 1, v17);
      }
      uint64_t v44 = v11[11];
      uint64_t v45 = &v9[v44];
      uint64_t v46 = &v10[v44];
      *(void *)uint64_t v45 = *(void *)v46;
      v45[8] = v46[8];
      uint64_t v47 = v11[12];
      uint64_t v48 = &v9[v47];
      int v49 = &v10[v47];
      if (v301(&v10[v47], 1, v17))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v48, v49, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v48, 0, 1, v17);
      }
      uint64_t v51 = v11[13];
      uint64_t v52 = &v9[v51];
      uint64_t v53 = &v10[v51];
      *(void *)uint64_t v52 = *(void *)v53;
      v52[8] = v53[8];
      uint64_t v54 = v11[14];
      uint64_t v55 = &v9[v54];
      uint64_t v56 = &v10[v54];
      if (v301(&v10[v54], 1, v17))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v55, v56, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v55, 0, 1, v17);
      }
      uint64_t v58 = v11[15];
      int v59 = &v9[v58];
      uint64_t v60 = &v10[v58];
      *(void *)int v59 = *(void *)v60;
      v59[8] = v60[8];
      uint64_t v61 = v11[16];
      uint64_t v62 = &v9[v61];
      uint64_t v63 = &v10[v61];
      if (v301(&v10[v61], 1, v17))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v62, v63, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v62, 0, 1, v17);
      }
      uint64_t v65 = v11[17];
      uint64_t v66 = &v9[v65];
      int v67 = &v10[v65];
      uint64_t v68 = *((void *)v67 + 4);
      if (v68 == 1)
      {
        long long v69 = *((_OWORD *)v67 + 1);
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        *((_OWORD *)v66 + 1) = v69;
        *((void *)v66 + 4) = *((void *)v67 + 4);
      }
      else
      {
        *(void *)uint64_t v66 = *(void *)v67;
        v66[8] = v67[8];
        *((void *)v66 + 2) = *((void *)v67 + 2);
        v66[24] = v67[24];
        *((void *)v66 + 4) = v68;
        swift_bridgeObjectRetain();
      }
      uint64_t v70 = v11[18];
      uint64_t v71 = &v9[v70];
      uint64_t v72 = &v10[v70];
      *(void *)uint64_t v71 = *(void *)v72;
      v71[8] = v72[8];
      uint64_t v73 = v11[19];
      long long v74 = &v9[v73];
      uint64_t v75 = &v10[v73];
      uint64_t v76 = sub_1C1516D2C();
      uint64_t v77 = *(void *)(v76 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
      {
        sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
        memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v77 + 16))(v74, v75, v76);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
      }
      uint64_t v5 = v308;
      uint64_t v12 = v305;
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v307 + 56))(v9, 0, 1, v11);
    }
    uint64_t v79 = v5[11];
    uint64_t v80 = (unsigned char *)(v6 + v79);
    uint64_t v81 = (char *)a2 + v79;
    if (v12((char *)a2 + v79, 1, v11))
    {
      sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v80 = *(void *)v81;
      v80[8] = v81[8];
      uint64_t v83 = v11[5];
      int v84 = &v80[v83];
      int v85 = &v81[v83];
      uint64_t v86 = sub_1C1516D9C();
      uint64_t v87 = *(void *)(v86 - 8);
      uint64_t v88 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v87 + 48);
      if (v88(v85, 1, v86))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v84, v85, v86);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      }
      uint64_t v90 = v11[6];
      uint64_t v91 = &v80[v90];
      uint64_t v92 = &v81[v90];
      *(void *)uint64_t v91 = *(void *)v92;
      v91[8] = v92[8];
      uint64_t v93 = v11[7];
      uint64_t v94 = &v80[v93];
      uint64_t v95 = &v81[v93];
      uint64_t v302 = v88;
      if (v88(&v81[v93], 1, v86))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v94, v95, v86);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v94, 0, 1, v86);
      }
      uint64_t v97 = v11[8];
      uint64_t v98 = &v80[v97];
      uint64_t v99 = &v81[v97];
      uint64_t v100 = type metadata accessor for FeedGroupBundleArticleQuotas();
      uint64_t v101 = *(void *)(v100 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
      {
        sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        uint64_t v103 = v99[1];
        *uint64_t v98 = *v99;
        v98[1] = v103;
        uint64_t v104 = *(int *)(v100 + 24);
        uint64_t v294 = (char *)v99 + v104;
        uint64_t v297 = (char *)v98 + v104;
        uint64_t v291 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
        swift_bridgeObjectRetain();
        v291(v297, v294, v86);
        *(void *)((char *)v98 + *(int *)(v100 + 28)) = *(void *)((char *)v99 + *(int *)(v100 + 28));
        int v105 = *(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56);
        swift_bridgeObjectRetain();
        v105(v98, 0, 1, v100);
      }
      uint64_t v106 = v11[9];
      uint64_t v107 = &v80[v106];
      uint64_t v108 = &v81[v106];
      *(void *)uint64_t v107 = *(void *)v108;
      v107[8] = v108[8];
      uint64_t v109 = v11[10];
      uint64_t v110 = &v80[v109];
      uint64_t v111 = &v81[v109];
      if (v302(&v81[v109], 1, v86))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v110, v111, v86);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v110, 0, 1, v86);
      }
      uint64_t v113 = v11[11];
      uint64_t v114 = &v80[v113];
      uint64_t v115 = &v81[v113];
      *(void *)uint64_t v114 = *(void *)v115;
      v114[8] = v115[8];
      uint64_t v116 = v11[12];
      uint64_t v117 = &v80[v116];
      uint64_t v118 = &v81[v116];
      if (v302(&v81[v116], 1, v86))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v117, v118, v86);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v117, 0, 1, v86);
      }
      uint64_t v120 = v11[13];
      id v121 = &v80[v120];
      uint64_t v122 = &v81[v120];
      *(void *)id v121 = *(void *)v122;
      v121[8] = v122[8];
      uint64_t v123 = v11[14];
      uint64_t v124 = &v80[v123];
      uint64_t v125 = &v81[v123];
      if (v302(&v81[v123], 1, v86))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v124, v125, v86);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v124, 0, 1, v86);
      }
      uint64_t v127 = v11[15];
      long long v128 = &v80[v127];
      long long v129 = &v81[v127];
      *(void *)long long v128 = *(void *)v129;
      v128[8] = v129[8];
      uint64_t v130 = v11[16];
      unint64_t v131 = &v80[v130];
      uint64_t v132 = &v81[v130];
      if (v302(&v81[v130], 1, v86))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v131, v132, v86);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v131, 0, 1, v86);
      }
      uint64_t v134 = v11[17];
      uint64_t v135 = &v80[v134];
      uint64_t v136 = &v81[v134];
      uint64_t v137 = *((void *)v136 + 4);
      if (v137 == 1)
      {
        long long v138 = *((_OWORD *)v136 + 1);
        *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
        *((_OWORD *)v135 + 1) = v138;
        *((void *)v135 + 4) = *((void *)v136 + 4);
      }
      else
      {
        *(void *)uint64_t v135 = *(void *)v136;
        v135[8] = v136[8];
        *((void *)v135 + 2) = *((void *)v136 + 2);
        v135[24] = v136[24];
        *((void *)v135 + 4) = v137;
        swift_bridgeObjectRetain();
      }
      uint64_t v139 = v11[18];
      uint64_t v140 = &v80[v139];
      uint64_t v141 = &v81[v139];
      *(void *)uint64_t v140 = *(void *)v141;
      v140[8] = v141[8];
      uint64_t v142 = v11[19];
      uint64_t v143 = &v80[v142];
      uint64_t v144 = &v81[v142];
      uint64_t v145 = sub_1C1516D2C();
      uint64_t v146 = *(void *)(v145 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v146 + 48))(v144, 1, v145))
      {
        sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
        memcpy(v143, v144, *(void *)(*(void *)(v147 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v146 + 16))(v143, v144, v145);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
      }
      uint64_t v5 = v308;
      uint64_t v12 = v305;
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v307 + 56))(v80, 0, 1, v11);
    }
    uint64_t v148 = v5[13];
    *(void *)(v6 + v5[12]) = *(uint64_t *)((char *)a2 + v5[12]);
    uint64_t v149 = (unsigned char *)(v6 + v148);
    uint64_t v150 = (char *)a2 + v148;
    swift_bridgeObjectRetain();
    if (v12(v150, 1, v11))
    {
      sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v149 = *(void *)v150;
      v149[8] = v150[8];
      uint64_t v152 = v11[5];
      long long v153 = &v149[v152];
      long long v154 = &v150[v152];
      uint64_t v155 = sub_1C1516D9C();
      uint64_t v156 = *(void *)(v155 - 8);
      uint64_t v157 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v156 + 48);
      if (v157(v154, 1, v155))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v153, v154, *(void *)(*(void *)(v158 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v153, v154, v155);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
      }
      uint64_t v159 = v11[6];
      uint64_t v160 = &v149[v159];
      uint64_t v161 = &v150[v159];
      *(void *)uint64_t v160 = *(void *)v161;
      v160[8] = v161[8];
      uint64_t v162 = v11[7];
      uint64_t v163 = &v149[v162];
      uint64_t v164 = &v150[v162];
      uint64_t v303 = v157;
      if (v157(&v150[v162], 1, v155))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v163, v164, *(void *)(*(void *)(v165 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v163, v164, v155);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v163, 0, 1, v155);
      }
      uint64_t v166 = v11[8];
      uint64_t v167 = &v149[v166];
      uint64_t v168 = &v150[v166];
      uint64_t v169 = type metadata accessor for FeedGroupBundleArticleQuotas();
      uint64_t v170 = *(void *)(v169 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v170 + 48))(v168, 1, v169))
      {
        sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v167, v168, *(void *)(*(void *)(v171 - 8) + 64));
      }
      else
      {
        uint64_t v172 = v168[1];
        *uint64_t v167 = *v168;
        v167[1] = v172;
        uint64_t v173 = *(int *)(v169 + 24);
        unint64_t v295 = (char *)v168 + v173;
        uint64_t v298 = (char *)v167 + v173;
        uint64_t v292 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
        swift_bridgeObjectRetain();
        v292(v298, v295, v155);
        *(void *)((char *)v167 + *(int *)(v169 + 28)) = *(void *)((char *)v168 + *(int *)(v169 + 28));
        uint64_t v174 = *(void (**)(void *, void, uint64_t, uint64_t))(v170 + 56);
        swift_bridgeObjectRetain();
        v174(v167, 0, 1, v169);
      }
      uint64_t v175 = v11[9];
      uint64_t v176 = &v149[v175];
      uint64_t v177 = &v150[v175];
      *(void *)uint64_t v176 = *(void *)v177;
      v176[8] = v177[8];
      uint64_t v178 = v11[10];
      uint64_t v179 = &v149[v178];
      uint64_t v180 = &v150[v178];
      if (v303(&v150[v178], 1, v155))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v179, v180, *(void *)(*(void *)(v181 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v179, v180, v155);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v179, 0, 1, v155);
      }
      uint64_t v182 = v11[11];
      uint64_t v183 = &v149[v182];
      uint64_t v184 = &v150[v182];
      *(void *)uint64_t v183 = *(void *)v184;
      v183[8] = v184[8];
      uint64_t v185 = v11[12];
      uint64_t v186 = &v149[v185];
      unsigned int v187 = &v150[v185];
      if (v303(&v150[v185], 1, v155))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v186, v187, v155);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v186, 0, 1, v155);
      }
      uint64_t v189 = v11[13];
      uint64_t v190 = &v149[v189];
      uint64_t v191 = &v150[v189];
      *(void *)uint64_t v190 = *(void *)v191;
      v190[8] = v191[8];
      uint64_t v192 = v11[14];
      uint64_t v193 = &v149[v192];
      uint64_t v194 = &v150[v192];
      if (v303(&v150[v192], 1, v155))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v193, v194, *(void *)(*(void *)(v195 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v193, v194, v155);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v193, 0, 1, v155);
      }
      uint64_t v196 = v11[15];
      uint64_t v197 = &v149[v196];
      uint64_t v198 = &v150[v196];
      *(void *)uint64_t v197 = *(void *)v198;
      v197[8] = v198[8];
      uint64_t v199 = v11[16];
      uint64_t v200 = &v149[v199];
      uint64_t v201 = &v150[v199];
      if (v303(&v150[v199], 1, v155))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v200, v201, *(void *)(*(void *)(v202 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v200, v201, v155);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v200, 0, 1, v155);
      }
      uint64_t v203 = v11[17];
      uint64_t v204 = &v149[v203];
      uint64_t v205 = &v150[v203];
      uint64_t v206 = *((void *)v205 + 4);
      if (v206 == 1)
      {
        long long v207 = *((_OWORD *)v205 + 1);
        *(_OWORD *)uint64_t v204 = *(_OWORD *)v205;
        *((_OWORD *)v204 + 1) = v207;
        *((void *)v204 + 4) = *((void *)v205 + 4);
      }
      else
      {
        *(void *)uint64_t v204 = *(void *)v205;
        v204[8] = v205[8];
        *((void *)v204 + 2) = *((void *)v205 + 2);
        v204[24] = v205[24];
        *((void *)v204 + 4) = v206;
        swift_bridgeObjectRetain();
      }
      uint64_t v208 = v11[18];
      uint64_t v209 = &v149[v208];
      long long v210 = &v150[v208];
      *(void *)uint64_t v209 = *(void *)v210;
      v209[8] = v210[8];
      uint64_t v211 = v11[19];
      unint64_t v212 = &v149[v211];
      uint64_t v213 = &v150[v211];
      uint64_t v214 = sub_1C1516D2C();
      uint64_t v215 = *(void *)(v214 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v215 + 48))(v213, 1, v214))
      {
        sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
        memcpy(v212, v213, *(void *)(*(void *)(v216 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v215 + 16))(v212, v213, v214);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
      }
      uint64_t v5 = v308;
      uint64_t v12 = v305;
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v307 + 56))(v149, 0, 1, v11);
    }
    uint64_t v217 = v5[14];
    uint64_t v218 = (unsigned char *)(v6 + v217);
    uint64_t v219 = (char *)a2 + v217;
    if (v12((char *)a2 + v217, 1, v11))
    {
      sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v218 = *(void *)v219;
      v218[8] = v219[8];
      uint64_t v221 = v11[5];
      uint64_t v222 = &v218[v221];
      BOOL v223 = &v219[v221];
      uint64_t v224 = sub_1C1516D9C();
      uint64_t v225 = *(void *)(v224 - 8);
      uint64_t v226 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v225 + 48);
      if (v226(v223, 1, v224))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v222, v223, *(void *)(*(void *)(v227 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v222, v223, v224);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v222, 0, 1, v224);
      }
      uint64_t v228 = v11[6];
      uint64_t v229 = &v218[v228];
      uint64_t v230 = &v219[v228];
      *(void *)uint64_t v229 = *(void *)v230;
      v229[8] = v230[8];
      uint64_t v231 = v11[7];
      uint64_t v232 = &v218[v231];
      uint64_t v233 = &v219[v231];
      uint64_t v306 = v226;
      if (v226(&v219[v231], 1, v224))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v232, v233, *(void *)(*(void *)(v234 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v232, v233, v224);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v232, 0, 1, v224);
      }
      uint64_t v235 = v11[8];
      uint64_t v236 = &v218[v235];
      uint64_t v237 = &v219[v235];
      uint64_t v238 = type metadata accessor for FeedGroupBundleArticleQuotas();
      uint64_t v239 = *(void *)(v238 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v239 + 48))(v237, 1, v238))
      {
        sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v236, v237, *(void *)(*(void *)(v240 - 8) + 64));
      }
      else
      {
        uint64_t v241 = v237[1];
        *uint64_t v236 = *v237;
        v236[1] = v241;
        uint64_t v242 = *(int *)(v238 + 24);
        uint64_t v300 = (char *)v237 + v242;
        uint64_t v304 = (char *)v236 + v242;
        uint64_t v299 = *(void (**)(char *, char *, uint64_t))(v225 + 16);
        swift_bridgeObjectRetain();
        v299(v304, v300, v224);
        *(void *)((char *)v236 + *(int *)(v238 + 28)) = *(void *)((char *)v237 + *(int *)(v238 + 28));
        long long v243 = *(void (**)(void *, void, uint64_t, uint64_t))(v239 + 56);
        swift_bridgeObjectRetain();
        v243(v236, 0, 1, v238);
      }
      uint64_t v244 = v11[9];
      uint64_t v245 = &v218[v244];
      uint64_t v246 = &v219[v244];
      *(void *)uint64_t v245 = *(void *)v246;
      v245[8] = v246[8];
      uint64_t v247 = v11[10];
      uint64_t v248 = &v218[v247];
      uint64_t v249 = &v219[v247];
      if (v306(&v219[v247], 1, v224))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v248, v249, *(void *)(*(void *)(v250 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v248, v249, v224);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v248, 0, 1, v224);
      }
      uint64_t v251 = v11[11];
      uint64_t v252 = &v218[v251];
      uint64_t v253 = &v219[v251];
      *(void *)uint64_t v252 = *(void *)v253;
      v252[8] = v253[8];
      uint64_t v254 = v11[12];
      uint64_t v255 = &v218[v254];
      uint64_t v256 = &v219[v254];
      if (v306(&v219[v254], 1, v224))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v255, v256, *(void *)(*(void *)(v257 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v255, v256, v224);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v255, 0, 1, v224);
      }
      uint64_t v258 = v11[13];
      uint64_t v259 = &v218[v258];
      uint64_t v260 = &v219[v258];
      *(void *)uint64_t v259 = *(void *)v260;
      v259[8] = v260[8];
      uint64_t v261 = v11[14];
      v262 = &v218[v261];
      uint64_t v263 = &v219[v261];
      if (v306(&v219[v261], 1, v224))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v262, v263, *(void *)(*(void *)(v264 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v262, v263, v224);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v262, 0, 1, v224);
      }
      uint64_t v265 = v11[15];
      uint64_t v266 = &v218[v265];
      uint64_t v267 = &v219[v265];
      *(void *)uint64_t v266 = *(void *)v267;
      v266[8] = v267[8];
      uint64_t v268 = v11[16];
      uint64_t v269 = &v218[v268];
      uint64_t v270 = &v219[v268];
      if (v306(&v219[v268], 1, v224))
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v269, v270, *(void *)(*(void *)(v271 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v269, v270, v224);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v269, 0, 1, v224);
      }
      uint64_t v272 = v11[17];
      uint64_t v273 = &v218[v272];
      uint64_t v274 = &v219[v272];
      uint64_t v275 = *((void *)v274 + 4);
      if (v275 == 1)
      {
        long long v276 = *((_OWORD *)v274 + 1);
        *(_OWORD *)uint64_t v273 = *(_OWORD *)v274;
        *((_OWORD *)v273 + 1) = v276;
        *((void *)v273 + 4) = *((void *)v274 + 4);
      }
      else
      {
        *(void *)uint64_t v273 = *(void *)v274;
        v273[8] = v274[8];
        *((void *)v273 + 2) = *((void *)v274 + 2);
        v273[24] = v274[24];
        *((void *)v273 + 4) = v275;
        swift_bridgeObjectRetain();
      }
      uint64_t v277 = v11[18];
      uint64_t v278 = &v218[v277];
      uint64_t v279 = &v219[v277];
      *(void *)uint64_t v278 = *(void *)v279;
      v278[8] = v279[8];
      uint64_t v280 = v11[19];
      uint64_t v281 = &v218[v280];
      uint64_t v282 = &v219[v280];
      uint64_t v283 = sub_1C1516D2C();
      uint64_t v284 = *(void *)(v283 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v284 + 48))(v282, 1, v283))
      {
        sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
        memcpy(v281, v282, *(void *)(*(void *)(v285 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v284 + 16))(v281, v282, v283);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v284 + 56))(v281, 0, 1, v283);
      }
      uint64_t v5 = v308;
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v307 + 56))(v218, 0, 1, v11);
    }
    uint64_t v286 = v5[16];
    *(void *)(v6 + v5[15]) = *(uint64_t *)((char *)a2 + v5[15]);
    *(unsigned char *)(v6 + v286) = *((unsigned char *)a2 + v286);
    uint64_t v287 = v5[18];
    *(unsigned char *)(v6 + v5[17]) = *((unsigned char *)a2 + v5[17]);
    *(void *)(v6 + v287) = *(uint64_t *)((char *)a2 + v287);
    uint64_t v288 = v5[20];
    *(void *)(v6 + v5[19]) = *(uint64_t *)((char *)a2 + v5[19]);
    *(unsigned char *)(v6 + v288) = *((unsigned char *)a2 + v288);
    *(_WORD *)(v6 + v5[21]) = *(_WORD *)((char *)a2 + v5[21]);
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t destroy for FeedClusteringRequest(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = (int *)type metadata accessor for FeedClusteringOptions(0);
  uint64_t v6 = *(unsigned int (**)(void, void, void))(*((void *)v5 - 1) + 48);
  int v67 = v6;
  if (!v6(v4, 1, v5))
  {
    uint64_t v7 = v4 + v5[5];
    uint64_t v8 = sub_1C1516D9C();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v11 = v4 + v5[7];
    if (!v10(v11, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t v12 = v4 + v5[8];
    uint64_t v13 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12 + *(int *)(v13 + 24), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v14 = v4 + v5[10];
    if (!v10(v14, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
    }
    uint64_t v15 = v4 + v5[12];
    uint64_t v6 = v67;
    if (!v10(v15, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v8);
    }
    uint64_t v16 = v4 + v5[14];
    if (!v10(v16, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
    }
    uint64_t v17 = v4 + v5[16];
    if (!v10(v17, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    }
    if (*(void *)(v4 + v5[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = v4 + v5[19];
    uint64_t v19 = sub_1C1516D2C();
    uint64_t v20 = *(void *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
  }
  uint64_t v21 = a1 + a2[11];
  if (!v6(v21, 1, v5))
  {
    uint64_t v22 = v21 + v5[5];
    uint64_t v23 = sub_1C1516D9C();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    if (!v25(v22, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    uint64_t v26 = v21 + v5[7];
    if (!v25(v26, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
    }
    uint64_t v27 = v21 + v5[8];
    uint64_t v28 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v27, 1, v28))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27 + *(int *)(v28 + 24), v23);
      swift_bridgeObjectRelease();
    }
    uint64_t v29 = v21 + v5[10];
    if (!v25(v29, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v29, v23);
    }
    uint64_t v30 = v21 + v5[12];
    uint64_t v6 = v67;
    if (!v25(v30, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v30, v23);
    }
    uint64_t v31 = v21 + v5[14];
    if (!v25(v31, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v31, v23);
    }
    uint64_t v32 = v21 + v5[16];
    if (!v25(v32, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v32, v23);
    }
    if (*(void *)(v21 + v5[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = v21 + v5[19];
    uint64_t v34 = sub_1C1516D2C();
    uint64_t v35 = *(void *)(v34 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = a1 + a2[13];
  if (!v6(v36, 1, v5))
  {
    uint64_t v37 = v36 + v5[5];
    uint64_t v38 = sub_1C1516D9C();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
    if (!v40(v37, 1, v38)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    }
    uint64_t v41 = v36 + v5[7];
    if (!v40(v41, 1, v38)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
    }
    uint64_t v42 = v36 + v5[8];
    uint64_t v43 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v42, 1, v43))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42 + *(int *)(v43 + 24), v38);
      swift_bridgeObjectRelease();
    }
    uint64_t v44 = v36 + v5[10];
    if (!v40(v44, 1, v38)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v44, v38);
    }
    uint64_t v45 = v36 + v5[12];
    uint64_t v6 = v67;
    if (!v40(v45, 1, v38)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v45, v38);
    }
    uint64_t v46 = v36 + v5[14];
    if (!v40(v46, 1, v38)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v46, v38);
    }
    uint64_t v47 = v36 + v5[16];
    if (!v40(v47, 1, v38)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v47, v38);
    }
    if (*(void *)(v36 + v5[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v48 = v36 + v5[19];
    uint64_t v49 = sub_1C1516D2C();
    uint64_t v50 = *(void *)(v49 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
    }
  }
  uint64_t v51 = a1 + a2[14];
  if (!v6(v51, 1, v5))
  {
    uint64_t v52 = v51 + v5[5];
    uint64_t v53 = sub_1C1516D9C();
    uint64_t v54 = *(void *)(v53 - 8);
    uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
    if (!v55(v52, 1, v53)) {
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
    }
    uint64_t v56 = v51 + v5[7];
    if (!v55(v56, 1, v53)) {
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v53);
    }
    uint64_t v57 = v51 + v5[8];
    uint64_t v58 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v57, 1, v58))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v57 + *(int *)(v58 + 24), v53);
      swift_bridgeObjectRelease();
    }
    uint64_t v59 = v51 + v5[10];
    if (!v55(v59, 1, v53)) {
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v59, v53);
    }
    uint64_t v60 = v51 + v5[12];
    if (!v55(v60, 1, v53)) {
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v60, v53);
    }
    uint64_t v61 = v51 + v5[14];
    if (!v55(v61, 1, v53)) {
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v61, v53);
    }
    uint64_t v62 = v51 + v5[16];
    if (!v55(v62, 1, v53)) {
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v62, v53);
    }
    if (*(void *)(v51 + v5[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v63 = v51 + v5[19];
    uint64_t v64 = sub_1C1516D2C();
    uint64_t v65 = *(void *)(v64 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64)) {
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedClusteringRequest(uint64_t a1, uint64_t a2, int *a3)
{
  int v3 = a3;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v8 = a3[10];
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v11 = (int *)type metadata accessor for FeedClusteringOptions(0);
  uint64_t v307 = *((void *)v11 - 1);
  uint64_t v12 = *(unsigned int (**)(void, void, void))(v307 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v308 = v3;
  uint64_t v305 = v12;
  if (v12(v10, 1, v11))
  {
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v17 = sub_1C1516D9C();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48);
    if (v19(v16, 1, v17))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = v11[6];
    uint64_t v22 = &v9[v21];
    uint64_t v23 = &v10[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v11[7];
    uint64_t v25 = &v9[v24];
    uint64_t v26 = &v10[v24];
    uint64_t v300 = v19;
    if (v19(&v10[v24], 1, v17))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v25, v26, v17);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v25, 0, 1, v17);
    }
    uint64_t v28 = v11[8];
    uint64_t v29 = &v9[v28];
    uint64_t v30 = &v10[v28];
    uint64_t v31 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v34 = v30[1];
      *uint64_t v29 = *v30;
      v29[1] = v34;
      uint64_t v35 = *(int *)(v31 + 24);
      uint64_t v293 = (char *)v30 + v35;
      int v296 = (char *)v29 + v35;
      uint64_t v290 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
      swift_bridgeObjectRetain();
      v290(v296, v293, v17);
      *(void *)((char *)v29 + *(int *)(v31 + 28)) = *(void *)((char *)v30 + *(int *)(v31 + 28));
      uint64_t v36 = *(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56);
      swift_bridgeObjectRetain();
      v36(v29, 0, 1, v31);
    }
    uint64_t v37 = v11[9];
    uint64_t v38 = &v9[v37];
    uint64_t v39 = &v10[v37];
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = v39[8];
    uint64_t v40 = v11[10];
    uint64_t v41 = &v9[v40];
    uint64_t v42 = &v10[v40];
    if (v300(&v10[v40], 1, v17))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v41, v42, v17);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v41, 0, 1, v17);
    }
    uint64_t v44 = v11[11];
    uint64_t v45 = &v9[v44];
    uint64_t v46 = &v10[v44];
    *(void *)uint64_t v45 = *(void *)v46;
    v45[8] = v46[8];
    uint64_t v47 = v11[12];
    uint64_t v48 = &v9[v47];
    uint64_t v49 = &v10[v47];
    if (v300(&v10[v47], 1, v17))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v48, v49, v17);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v48, 0, 1, v17);
    }
    uint64_t v51 = v11[13];
    uint64_t v52 = &v9[v51];
    uint64_t v53 = &v10[v51];
    *(void *)uint64_t v52 = *(void *)v53;
    v52[8] = v53[8];
    uint64_t v54 = v11[14];
    uint64_t v55 = &v9[v54];
    uint64_t v56 = &v10[v54];
    if (v300(&v10[v54], 1, v17))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v55, v56, v17);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v55, 0, 1, v17);
    }
    uint64_t v58 = v11[15];
    uint64_t v59 = &v9[v58];
    uint64_t v60 = &v10[v58];
    *(void *)uint64_t v59 = *(void *)v60;
    v59[8] = v60[8];
    uint64_t v61 = v11[16];
    uint64_t v62 = &v9[v61];
    uint64_t v63 = &v10[v61];
    if (v300(&v10[v61], 1, v17))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v62, v63, v17);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v62, 0, 1, v17);
    }
    uint64_t v65 = v11[17];
    uint64_t v66 = &v9[v65];
    int v67 = &v10[v65];
    uint64_t v68 = *((void *)v67 + 4);
    if (v68 == 1)
    {
      long long v69 = *((_OWORD *)v67 + 1);
      *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
      *((_OWORD *)v66 + 1) = v69;
      *((void *)v66 + 4) = *((void *)v67 + 4);
    }
    else
    {
      *(void *)uint64_t v66 = *(void *)v67;
      v66[8] = v67[8];
      *((void *)v66 + 2) = *((void *)v67 + 2);
      v66[24] = v67[24];
      *((void *)v66 + 4) = v68;
      swift_bridgeObjectRetain();
    }
    uint64_t v70 = v11[18];
    uint64_t v71 = &v9[v70];
    uint64_t v72 = &v10[v70];
    *(void *)uint64_t v71 = *(void *)v72;
    v71[8] = v72[8];
    uint64_t v73 = v11[19];
    long long v74 = &v9[v73];
    uint64_t v75 = &v10[v73];
    uint64_t v76 = sub_1C1516D2C();
    uint64_t v77 = *(void *)(v76 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
    {
      sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
      memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v77 + 16))(v74, v75, v76);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
    }
    int v3 = v308;
    uint64_t v12 = v305;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v307 + 56))(v9, 0, 1, v11);
  }
  uint64_t v79 = v3[11];
  uint64_t v80 = (unsigned char *)(a1 + v79);
  uint64_t v81 = (unsigned char *)(a2 + v79);
  if (v12(a2 + v79, 1, v11))
  {
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v80 = *(void *)v81;
    v80[8] = v81[8];
    uint64_t v83 = v11[5];
    int v84 = &v80[v83];
    int v85 = &v81[v83];
    uint64_t v86 = sub_1C1516D9C();
    uint64_t v87 = *(void *)(v86 - 8);
    uint64_t v88 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v87 + 48);
    if (v88(v85, 1, v86))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v84, v85, v86);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
    }
    uint64_t v90 = v11[6];
    uint64_t v91 = &v80[v90];
    uint64_t v92 = &v81[v90];
    *(void *)uint64_t v91 = *(void *)v92;
    v91[8] = v92[8];
    uint64_t v93 = v11[7];
    uint64_t v94 = &v80[v93];
    uint64_t v95 = &v81[v93];
    uint64_t v301 = v88;
    if (v88(&v81[v93], 1, v86))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v94, v95, v86);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v94, 0, 1, v86);
    }
    uint64_t v97 = v11[8];
    uint64_t v98 = &v80[v97];
    uint64_t v99 = &v81[v97];
    uint64_t v100 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v101 = *(void *)(v100 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
    {
      sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
    }
    else
    {
      uint64_t v103 = v99[1];
      *uint64_t v98 = *v99;
      v98[1] = v103;
      uint64_t v104 = *(int *)(v100 + 24);
      uint64_t v294 = (char *)v99 + v104;
      uint64_t v297 = (char *)v98 + v104;
      uint64_t v291 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
      swift_bridgeObjectRetain();
      v291(v297, v294, v86);
      *(void *)((char *)v98 + *(int *)(v100 + 28)) = *(void *)((char *)v99 + *(int *)(v100 + 28));
      int v105 = *(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56);
      swift_bridgeObjectRetain();
      v105(v98, 0, 1, v100);
    }
    uint64_t v106 = v11[9];
    uint64_t v107 = &v80[v106];
    uint64_t v108 = &v81[v106];
    *(void *)uint64_t v107 = *(void *)v108;
    v107[8] = v108[8];
    uint64_t v109 = v11[10];
    uint64_t v110 = &v80[v109];
    uint64_t v111 = &v81[v109];
    if (v301(&v81[v109], 1, v86))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v110, v111, v86);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v110, 0, 1, v86);
    }
    uint64_t v113 = v11[11];
    uint64_t v114 = &v80[v113];
    uint64_t v115 = &v81[v113];
    *(void *)uint64_t v114 = *(void *)v115;
    v114[8] = v115[8];
    uint64_t v116 = v11[12];
    uint64_t v117 = &v80[v116];
    uint64_t v118 = &v81[v116];
    if (v301(&v81[v116], 1, v86))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v117, v118, v86);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v117, 0, 1, v86);
    }
    uint64_t v120 = v11[13];
    id v121 = &v80[v120];
    uint64_t v122 = &v81[v120];
    *(void *)id v121 = *(void *)v122;
    v121[8] = v122[8];
    uint64_t v123 = v11[14];
    uint64_t v124 = &v80[v123];
    uint64_t v125 = &v81[v123];
    if (v301(&v81[v123], 1, v86))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v124, v125, v86);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v124, 0, 1, v86);
    }
    uint64_t v127 = v11[15];
    long long v128 = &v80[v127];
    long long v129 = &v81[v127];
    *(void *)long long v128 = *(void *)v129;
    v128[8] = v129[8];
    uint64_t v130 = v11[16];
    unint64_t v131 = &v80[v130];
    uint64_t v132 = &v81[v130];
    if (v301(&v81[v130], 1, v86))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v131, v132, v86);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v87 + 56))(v131, 0, 1, v86);
    }
    uint64_t v134 = v11[17];
    uint64_t v135 = &v80[v134];
    uint64_t v136 = &v81[v134];
    uint64_t v137 = *((void *)v136 + 4);
    if (v137 == 1)
    {
      long long v138 = *((_OWORD *)v136 + 1);
      *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
      *((_OWORD *)v135 + 1) = v138;
      *((void *)v135 + 4) = *((void *)v136 + 4);
    }
    else
    {
      *(void *)uint64_t v135 = *(void *)v136;
      v135[8] = v136[8];
      *((void *)v135 + 2) = *((void *)v136 + 2);
      v135[24] = v136[24];
      *((void *)v135 + 4) = v137;
      swift_bridgeObjectRetain();
    }
    uint64_t v139 = v11[18];
    uint64_t v140 = &v80[v139];
    uint64_t v141 = &v81[v139];
    *(void *)uint64_t v140 = *(void *)v141;
    v140[8] = v141[8];
    uint64_t v142 = v11[19];
    uint64_t v143 = &v80[v142];
    uint64_t v144 = &v81[v142];
    uint64_t v145 = sub_1C1516D2C();
    uint64_t v146 = *(void *)(v145 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v146 + 48))(v144, 1, v145))
    {
      sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
      memcpy(v143, v144, *(void *)(*(void *)(v147 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v146 + 16))(v143, v144, v145);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
    }
    int v3 = v308;
    uint64_t v12 = v305;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v307 + 56))(v80, 0, 1, v11);
  }
  uint64_t v148 = v3[13];
  *(void *)(a1 + v3[12]) = *(void *)(a2 + v3[12]);
  uint64_t v149 = (unsigned char *)(a1 + v148);
  uint64_t v150 = (unsigned char *)(a2 + v148);
  swift_bridgeObjectRetain();
  if (v12(v150, 1, v11))
  {
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v149 = *(void *)v150;
    v149[8] = v150[8];
    uint64_t v152 = v11[5];
    long long v153 = &v149[v152];
    long long v154 = &v150[v152];
    uint64_t v155 = sub_1C1516D9C();
    uint64_t v156 = *(void *)(v155 - 8);
    uint64_t v157 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v156 + 48);
    if (v157(v154, 1, v155))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v153, v154, *(void *)(*(void *)(v158 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v153, v154, v155);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
    }
    uint64_t v159 = v11[6];
    uint64_t v160 = &v149[v159];
    uint64_t v161 = &v150[v159];
    *(void *)uint64_t v160 = *(void *)v161;
    v160[8] = v161[8];
    uint64_t v162 = v11[7];
    uint64_t v163 = &v149[v162];
    uint64_t v164 = &v150[v162];
    uint64_t v302 = v157;
    if (v157(&v150[v162], 1, v155))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v163, v164, *(void *)(*(void *)(v165 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v163, v164, v155);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v163, 0, 1, v155);
    }
    uint64_t v166 = v11[8];
    uint64_t v167 = &v149[v166];
    uint64_t v168 = &v150[v166];
    uint64_t v169 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v170 = *(void *)(v169 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v170 + 48))(v168, 1, v169))
    {
      sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v167, v168, *(void *)(*(void *)(v171 - 8) + 64));
    }
    else
    {
      uint64_t v172 = v168[1];
      *uint64_t v167 = *v168;
      v167[1] = v172;
      uint64_t v173 = *(int *)(v169 + 24);
      unint64_t v295 = (char *)v168 + v173;
      uint64_t v298 = (char *)v167 + v173;
      uint64_t v292 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
      swift_bridgeObjectRetain();
      v292(v298, v295, v155);
      *(void *)((char *)v167 + *(int *)(v169 + 28)) = *(void *)((char *)v168 + *(int *)(v169 + 28));
      uint64_t v174 = *(void (**)(void *, void, uint64_t, uint64_t))(v170 + 56);
      swift_bridgeObjectRetain();
      v174(v167, 0, 1, v169);
    }
    uint64_t v175 = v11[9];
    uint64_t v176 = &v149[v175];
    uint64_t v177 = &v150[v175];
    *(void *)uint64_t v176 = *(void *)v177;
    v176[8] = v177[8];
    uint64_t v178 = v11[10];
    uint64_t v179 = &v149[v178];
    uint64_t v180 = &v150[v178];
    if (v302(&v150[v178], 1, v155))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v179, v180, *(void *)(*(void *)(v181 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v179, v180, v155);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v179, 0, 1, v155);
    }
    uint64_t v182 = v11[11];
    uint64_t v183 = &v149[v182];
    uint64_t v184 = &v150[v182];
    *(void *)uint64_t v183 = *(void *)v184;
    v183[8] = v184[8];
    uint64_t v185 = v11[12];
    uint64_t v186 = &v149[v185];
    unsigned int v187 = &v150[v185];
    if (v302(&v150[v185], 1, v155))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v186, v187, v155);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v186, 0, 1, v155);
    }
    uint64_t v189 = v11[13];
    uint64_t v190 = &v149[v189];
    uint64_t v191 = &v150[v189];
    *(void *)uint64_t v190 = *(void *)v191;
    v190[8] = v191[8];
    uint64_t v192 = v11[14];
    uint64_t v193 = &v149[v192];
    uint64_t v194 = &v150[v192];
    if (v302(&v150[v192], 1, v155))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v193, v194, *(void *)(*(void *)(v195 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v193, v194, v155);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v193, 0, 1, v155);
    }
    uint64_t v196 = v11[15];
    uint64_t v197 = &v149[v196];
    uint64_t v198 = &v150[v196];
    *(void *)uint64_t v197 = *(void *)v198;
    v197[8] = v198[8];
    uint64_t v199 = v11[16];
    uint64_t v200 = &v149[v199];
    uint64_t v201 = &v150[v199];
    if (v302(&v150[v199], 1, v155))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v200, v201, *(void *)(*(void *)(v202 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v156 + 16))(v200, v201, v155);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v156 + 56))(v200, 0, 1, v155);
    }
    uint64_t v203 = v11[17];
    uint64_t v204 = &v149[v203];
    uint64_t v205 = &v150[v203];
    uint64_t v206 = *((void *)v205 + 4);
    if (v206 == 1)
    {
      long long v207 = *((_OWORD *)v205 + 1);
      *(_OWORD *)uint64_t v204 = *(_OWORD *)v205;
      *((_OWORD *)v204 + 1) = v207;
      *((void *)v204 + 4) = *((void *)v205 + 4);
    }
    else
    {
      *(void *)uint64_t v204 = *(void *)v205;
      v204[8] = v205[8];
      *((void *)v204 + 2) = *((void *)v205 + 2);
      v204[24] = v205[24];
      *((void *)v204 + 4) = v206;
      swift_bridgeObjectRetain();
    }
    uint64_t v208 = v11[18];
    uint64_t v209 = &v149[v208];
    long long v210 = &v150[v208];
    *(void *)uint64_t v209 = *(void *)v210;
    v209[8] = v210[8];
    uint64_t v211 = v11[19];
    unint64_t v212 = &v149[v211];
    uint64_t v213 = &v150[v211];
    uint64_t v214 = sub_1C1516D2C();
    uint64_t v215 = *(void *)(v214 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v215 + 48))(v213, 1, v214))
    {
      sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
      memcpy(v212, v213, *(void *)(*(void *)(v216 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v215 + 16))(v212, v213, v214);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
    }
    int v3 = v308;
    uint64_t v12 = v305;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v307 + 56))(v149, 0, 1, v11);
  }
  uint64_t v217 = v3[14];
  uint64_t v218 = (unsigned char *)(a1 + v217);
  uint64_t v219 = (unsigned char *)(a2 + v217);
  if (v12(a2 + v217, 1, v11))
  {
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v218 = *(void *)v219;
    v218[8] = v219[8];
    uint64_t v221 = v11[5];
    uint64_t v222 = &v218[v221];
    BOOL v223 = &v219[v221];
    uint64_t v224 = sub_1C1516D9C();
    uint64_t v225 = *(void *)(v224 - 8);
    uint64_t v226 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v225 + 48);
    if (v226(v223, 1, v224))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v222, v223, *(void *)(*(void *)(v227 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v222, v223, v224);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v222, 0, 1, v224);
    }
    uint64_t v228 = v11[6];
    uint64_t v229 = &v218[v228];
    uint64_t v230 = &v219[v228];
    *(void *)uint64_t v229 = *(void *)v230;
    v229[8] = v230[8];
    uint64_t v231 = v11[7];
    uint64_t v232 = &v218[v231];
    uint64_t v233 = &v219[v231];
    uint64_t v306 = v226;
    if (v226(&v219[v231], 1, v224))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v232, v233, *(void *)(*(void *)(v234 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v232, v233, v224);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v232, 0, 1, v224);
    }
    uint64_t v235 = v11[8];
    uint64_t v236 = &v218[v235];
    uint64_t v237 = &v219[v235];
    uint64_t v238 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v239 = *(void *)(v238 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v239 + 48))(v237, 1, v238))
    {
      sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v236, v237, *(void *)(*(void *)(v240 - 8) + 64));
    }
    else
    {
      uint64_t v241 = v237[1];
      *uint64_t v236 = *v237;
      v236[1] = v241;
      uint64_t v242 = *(int *)(v238 + 24);
      uint64_t v303 = (char *)v237 + v242;
      uint64_t v304 = (char *)v236 + v242;
      uint64_t v299 = *(void (**)(char *, char *, uint64_t))(v225 + 16);
      swift_bridgeObjectRetain();
      v299(v304, v303, v224);
      *(void *)((char *)v236 + *(int *)(v238 + 28)) = *(void *)((char *)v237 + *(int *)(v238 + 28));
      long long v243 = *(void (**)(void *, void, uint64_t, uint64_t))(v239 + 56);
      swift_bridgeObjectRetain();
      v243(v236, 0, 1, v238);
    }
    uint64_t v244 = v11[9];
    uint64_t v245 = &v218[v244];
    uint64_t v246 = &v219[v244];
    *(void *)uint64_t v245 = *(void *)v246;
    v245[8] = v246[8];
    uint64_t v247 = v11[10];
    uint64_t v248 = &v218[v247];
    uint64_t v249 = &v219[v247];
    if (v306(&v219[v247], 1, v224))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v248, v249, *(void *)(*(void *)(v250 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v248, v249, v224);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v248, 0, 1, v224);
    }
    uint64_t v251 = v11[11];
    uint64_t v252 = &v218[v251];
    uint64_t v253 = &v219[v251];
    *(void *)uint64_t v252 = *(void *)v253;
    v252[8] = v253[8];
    uint64_t v254 = v11[12];
    uint64_t v255 = &v218[v254];
    uint64_t v256 = &v219[v254];
    if (v306(&v219[v254], 1, v224))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v255, v256, *(void *)(*(void *)(v257 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v255, v256, v224);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v255, 0, 1, v224);
    }
    uint64_t v258 = v11[13];
    uint64_t v259 = &v218[v258];
    uint64_t v260 = &v219[v258];
    *(void *)uint64_t v259 = *(void *)v260;
    v259[8] = v260[8];
    uint64_t v261 = v11[14];
    v262 = &v218[v261];
    uint64_t v263 = &v219[v261];
    if (v306(&v219[v261], 1, v224))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v262, v263, *(void *)(*(void *)(v264 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v262, v263, v224);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v262, 0, 1, v224);
    }
    uint64_t v265 = v11[15];
    uint64_t v266 = &v218[v265];
    uint64_t v267 = &v219[v265];
    *(void *)uint64_t v266 = *(void *)v267;
    v266[8] = v267[8];
    uint64_t v268 = v11[16];
    uint64_t v269 = &v218[v268];
    uint64_t v270 = &v219[v268];
    if (v306(&v219[v268], 1, v224))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v269, v270, *(void *)(*(void *)(v271 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v225 + 16))(v269, v270, v224);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v269, 0, 1, v224);
    }
    uint64_t v272 = v11[17];
    uint64_t v273 = &v218[v272];
    uint64_t v274 = &v219[v272];
    uint64_t v275 = *((void *)v274 + 4);
    if (v275 == 1)
    {
      long long v276 = *((_OWORD *)v274 + 1);
      *(_OWORD *)uint64_t v273 = *(_OWORD *)v274;
      *((_OWORD *)v273 + 1) = v276;
      *((void *)v273 + 4) = *((void *)v274 + 4);
    }
    else
    {
      *(void *)uint64_t v273 = *(void *)v274;
      v273[8] = v274[8];
      *((void *)v273 + 2) = *((void *)v274 + 2);
      v273[24] = v274[24];
      *((void *)v273 + 4) = v275;
      swift_bridgeObjectRetain();
    }
    uint64_t v277 = v11[18];
    uint64_t v278 = &v218[v277];
    uint64_t v279 = &v219[v277];
    *(void *)uint64_t v278 = *(void *)v279;
    v278[8] = v279[8];
    uint64_t v280 = v11[19];
    uint64_t v281 = &v218[v280];
    uint64_t v282 = &v219[v280];
    uint64_t v283 = sub_1C1516D2C();
    uint64_t v284 = *(void *)(v283 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v284 + 48))(v282, 1, v283))
    {
      sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
      memcpy(v281, v282, *(void *)(*(void *)(v285 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v284 + 16))(v281, v282, v283);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v284 + 56))(v281, 0, 1, v283);
    }
    int v3 = v308;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v307 + 56))(v218, 0, 1, v11);
  }
  uint64_t v286 = v3[16];
  *(void *)(a1 + v3[15]) = *(void *)(a2 + v3[15]);
  *(unsigned char *)(a1 + v286) = *(unsigned char *)(a2 + v286);
  uint64_t v287 = v3[18];
  *(unsigned char *)(a1 + v3[17]) = *(unsigned char *)(a2 + v3[17]);
  *(void *)(a1 + v287) = *(void *)(a2 + v287);
  uint64_t v288 = v3[20];
  *(void *)(a1 + v3[19]) = *(void *)(a2 + v3[19]);
  *(unsigned char *)(a1 + v288) = *(unsigned char *)(a2 + v288);
  *(_WORD *)(a1 + v3[21]) = *(_WORD *)(a2 + v3[21]);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FeedClusteringRequest(void *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = a1;
  *a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v5[3] = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v6 = a2;
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + 32) = *(unsigned char *)(a2 + 32);
  v5[5] = *(void *)(a2 + 40);
  uint64_t v7 = a3[10];
  uint64_t v8 = (char *)v5 + v7;
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for FeedClusteringOptions(0);
  uint64_t v768 = *((void *)v10 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v768 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  v773 = a3;
  v774 = v10;
  v770 = v11;
  uint64_t v766 = a2;
  v767 = v5;
  if (!v12)
  {
    if (v13)
    {
      sub_1C0934780((uint64_t)v8, type metadata accessor for FeedClusteringOptions);
      goto LABEL_7;
    }
    uint64_t v22 = *(void *)v9;
    v8[8] = v9[8];
    *(void *)uint64_t v8 = v22;
    uint64_t v23 = v10[5];
    uint64_t v24 = &v8[v23];
    uint64_t v25 = &v9[v23];
    uint64_t v26 = sub_1C1516D9C();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v27 + 48);
    v742 = v24;
    LODWORD(v24) = v28(v24, 1, v26);
    uint64_t v748 = v26;
    v759 = v28;
    int v29 = v28(v25, 1, v26);
    if (v24)
    {
      if (v29)
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v742, v25, *(void *)(*(void *)(v30 - 8) + 64));
        uint64_t v31 = v774;
        uint64_t v32 = v26;
        goto LABEL_42;
      }
      uint64_t v32 = v26;
      (*(void (**)(void *, unsigned char *, uint64_t))(v27 + 16))(v742, v25, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v742, 0, 1, v26);
    }
    else
    {
      uint64_t v32 = v26;
      if (v29)
      {
        (*(void (**)(void *, uint64_t))(v27 + 8))(v742, v26);
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v742, v25, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v27 + 24))(v742, v25, v26);
      }
    }
    uint64_t v31 = v774;
LABEL_42:
    uint64_t v102 = v31[6];
    uint64_t v103 = &v8[v102];
    uint64_t v104 = &v9[v102];
    uint64_t v105 = *(void *)v104;
    v103[8] = v104[8];
    *(void *)uint64_t v103 = v105;
    uint64_t v106 = v31[7];
    uint64_t v107 = &v8[v106];
    uint64_t v108 = &v9[v106];
    int v109 = v759(&v8[v106], 1, v32);
    int v110 = v759(v108, 1, v32);
    if (v109)
    {
      if (v110)
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v107, v108, *(void *)(*(void *)(v111 - 8) + 64));
        uint64_t v112 = v774;
        uint64_t v113 = v748;
        goto LABEL_50;
      }
      uint64_t v113 = v748;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 16))(v107, v108, v748);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v107, 0, 1, v748);
    }
    else
    {
      uint64_t v113 = v748;
      if (v110)
      {
        (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v107, v748);
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v107, v108, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 24))(v107, v108, v748);
      }
    }
    uint64_t v112 = v774;
LABEL_50:
    uint64_t v115 = v112[8];
    uint64_t v116 = &v8[v115];
    uint64_t v117 = &v9[v115];
    uint64_t v118 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v119 = *(void *)(v118 - 8);
    uint64_t v120 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v119 + 48);
    int v121 = v120(v116, 1, v118);
    int v122 = v120(v117, 1, v118);
    if (v121)
    {
      if (!v122)
      {
        *(void *)uint64_t v116 = *(void *)v117;
        *((void *)v116 + 1) = *((void *)v117 + 1);
        uint64_t v123 = *(int *)(v118 + 24);
        uint64_t v124 = &v116[v123];
        v750 = &v117[v123];
        uint64_t v125 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
        swift_bridgeObjectRetain();
        v125(v124, v750, v113);
        *(void *)&v116[*(int *)(v118 + 28)] = *(void *)&v117[*(int *)(v118 + 28)];
        uint64_t v126 = *(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56);
        swift_bridgeObjectRetain();
        v126(v116, 0, 1, v118);
        goto LABEL_56;
      }
    }
    else
    {
      if (!v122)
      {
        *(void *)uint64_t v116 = *(void *)v117;
        *((void *)v116 + 1) = *((void *)v117 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *, uint64_t))(v27 + 24))(&v116[*(int *)(v118 + 24)], &v117[*(int *)(v118 + 24)], v113);
        *(void *)&v116[*(int *)(v118 + 28)] = *(void *)&v117[*(int *)(v118 + 28)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_56:
        uint64_t v10 = v774;
        uint64_t v128 = v774[9];
        long long v129 = &v8[v128];
        uint64_t v130 = &v9[v128];
        uint64_t v131 = *(void *)v130;
        v129[8] = v130[8];
        *(void *)long long v129 = v131;
        uint64_t v132 = v774[10];
        uint64_t v133 = &v8[v132];
        uint64_t v134 = &v9[v132];
        int v135 = v759(&v8[v132], 1, v113);
        int v136 = v759(v134, 1, v113);
        if (v135)
        {
          if (!v136)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 16))(v133, v134, v113);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v133, 0, 1, v113);
            goto LABEL_62;
          }
        }
        else
        {
          if (!v136)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 24))(v133, v134, v113);
LABEL_62:
            uint64_t v138 = v774[11];
            uint64_t v139 = &v8[v138];
            uint64_t v140 = &v9[v138];
            uint64_t v141 = *(void *)v140;
            v139[8] = v140[8];
            *(void *)uint64_t v139 = v141;
            uint64_t v142 = v774[12];
            uint64_t v143 = &v8[v142];
            uint64_t v144 = &v9[v142];
            int v145 = v759(&v8[v142], 1, v113);
            int v146 = v759(v144, 1, v113);
            if (v145)
            {
              if (!v146)
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 16))(v143, v144, v113);
                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v143, 0, 1, v113);
                goto LABEL_68;
              }
            }
            else
            {
              if (!v146)
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 24))(v143, v144, v113);
LABEL_68:
                uint64_t v148 = v774[13];
                uint64_t v149 = &v8[v148];
                uint64_t v150 = &v9[v148];
                uint64_t v151 = *(void *)v150;
                v149[8] = v150[8];
                *(void *)uint64_t v149 = v151;
                uint64_t v152 = v774[14];
                long long v153 = &v8[v152];
                long long v154 = &v9[v152];
                int v155 = v759(&v8[v152], 1, v113);
                int v156 = v759(v154, 1, v113);
                if (v155)
                {
                  if (!v156)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 16))(v153, v154, v113);
                    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v153, 0, 1, v113);
                    goto LABEL_74;
                  }
                }
                else
                {
                  if (!v156)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 24))(v153, v154, v113);
LABEL_74:
                    uint64_t v158 = v774[15];
                    uint64_t v159 = &v8[v158];
                    uint64_t v160 = &v9[v158];
                    uint64_t v161 = *(void *)v160;
                    v159[8] = v160[8];
                    *(void *)uint64_t v159 = v161;
                    uint64_t v162 = v774[16];
                    uint64_t v163 = &v8[v162];
                    uint64_t v164 = &v9[v162];
                    int v165 = v759(&v8[v162], 1, v113);
                    int v166 = v759(v164, 1, v113);
                    if (v165)
                    {
                      if (!v166)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 16))(v163, v164, v113);
                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v163, 0, 1, v113);
                        goto LABEL_80;
                      }
                    }
                    else
                    {
                      if (!v166)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 24))(v163, v164, v113);
LABEL_80:
                        uint64_t v168 = v774[17];
                        uint64_t v169 = (uint64_t)&v8[v168];
                        uint64_t v170 = &v9[v168];
                        uint64_t v171 = *(void *)&v8[v168 + 32];
                        uint64_t v172 = *(void *)&v9[v168 + 32];
                        uint64_t v11 = v770;
                        if (v171 == 1)
                        {
                          if (v172 == 1)
                          {
                            long long v173 = *(_OWORD *)v170;
                            long long v174 = *((_OWORD *)v170 + 1);
                            *(void *)(v169 + 32) = *((void *)v170 + 4);
                            *(_OWORD *)uint64_t v169 = v173;
                            *(_OWORD *)(v169 + 16) = v174;
                          }
                          else
                          {
                            uint64_t v177 = *(void *)v170;
                            *(unsigned char *)(v169 + 8) = v170[8];
                            *(void *)uint64_t v169 = v177;
                            uint64_t v178 = *((void *)v170 + 2);
                            *(unsigned char *)(v169 + 24) = v170[24];
                            *(void *)(v169 + 16) = v178;
                            *(void *)(v169 + 32) = *((void *)v170 + 4);
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v172 == 1)
                        {
                          sub_1C0921044(v169);
                          uint64_t v175 = *((void *)v170 + 4);
                          long long v176 = *((_OWORD *)v170 + 1);
                          *(_OWORD *)uint64_t v169 = *(_OWORD *)v170;
                          *(_OWORD *)(v169 + 16) = v176;
                          *(void *)(v169 + 32) = v175;
                        }
                        else
                        {
                          uint64_t v179 = *(void *)v170;
                          *(unsigned char *)(v169 + 8) = v170[8];
                          *(void *)uint64_t v169 = v179;
                          uint64_t v180 = *((void *)v170 + 2);
                          *(unsigned char *)(v169 + 24) = v170[24];
                          *(void *)(v169 + 16) = v180;
                          *(void *)(v169 + 32) = *((void *)v170 + 4);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                        }
                        uint64_t v181 = v774[18];
                        uint64_t v182 = &v8[v181];
                        uint64_t v183 = &v9[v181];
                        uint64_t v184 = *(void *)v183;
                        v182[8] = v183[8];
                        *(void *)uint64_t v182 = v184;
                        uint64_t v185 = v774[19];
                        uint64_t v186 = &v8[v185];
                        unsigned int v187 = &v9[v185];
                        uint64_t v188 = sub_1C1516D2C();
                        uint64_t v189 = *(void *)(v188 - 8);
                        uint64_t v190 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v189 + 48);
                        int v191 = v190(v186, 1, v188);
                        int v192 = v190(v187, 1, v188);
                        if (v191)
                        {
                          a3 = v773;
                          if (!v192)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v189 + 16))(v186, v187, v188);
                            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v189 + 56))(v186, 0, 1, v188);
LABEL_93:
                            uint64_t v6 = v766;
                            uint64_t v5 = v767;
                            goto LABEL_94;
                          }
                        }
                        else
                        {
                          a3 = v773;
                          if (!v192)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v189 + 24))(v186, v187, v188);
                            goto LABEL_93;
                          }
                          (*(void (**)(unsigned char *, uint64_t))(v189 + 8))(v186, v188);
                        }
                        sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
                        memcpy(v186, v187, *(void *)(*(void *)(v193 - 8) + 64));
                        goto LABEL_93;
                      }
                      (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v163, v113);
                    }
                    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                    memcpy(v163, v164, *(void *)(*(void *)(v167 - 8) + 64));
                    goto LABEL_80;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v153, v113);
                }
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v153, v154, *(void *)(*(void *)(v157 - 8) + 64));
                goto LABEL_74;
              }
              (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v143, v113);
            }
            sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
            memcpy(v143, v144, *(void *)(*(void *)(v147 - 8) + 64));
            goto LABEL_68;
          }
          (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v133, v113);
        }
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v133, v134, *(void *)(*(void *)(v137 - 8) + 64));
        goto LABEL_62;
      }
      sub_1C0934780((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    }
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v116, v117, *(void *)(*(void *)(v127 - 8) + 64));
    goto LABEL_56;
  }
  if (v13)
  {
LABEL_7:
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_94;
  }
  uint64_t v14 = *(void *)v9;
  v8[8] = v9[8];
  *(void *)uint64_t v8 = v14;
  uint64_t v15 = v10[5];
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  uint64_t v18 = sub_1C1516D9C();
  uint64_t v19 = *(void *)(v18 - 8);
  v758 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48);
  if (v758(v17, 1, v18))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v33 = v10[6];
  uint64_t v34 = &v8[v33];
  uint64_t v35 = &v9[v33];
  uint64_t v36 = *(void *)v35;
  v34[8] = v35[8];
  *(void *)uint64_t v34 = v36;
  uint64_t v37 = v10[7];
  uint64_t v38 = &v8[v37];
  uint64_t v39 = &v9[v37];
  if (v758(&v9[v37], 1, v18))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 16))(v38, v39, v18);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v38, 0, 1, v18);
  }
  uint64_t v41 = v10[8];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  uint64_t v44 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    *uint64_t v42 = *v43;
    v42[1] = v43[1];
    uint64_t v47 = *(int *)(v44 + 24);
    uint64_t v48 = (char *)v42 + v47;
    uint64_t v749 = v19;
    uint64_t v49 = (char *)v43 + v47;
    __src = *(void (**)(char *, char *, uint64_t))(v749 + 16);
    swift_bridgeObjectRetain();
    uint64_t v50 = v48;
    uint64_t v5 = v767;
    __src(v50, v49, v18);
    uint64_t v6 = v766;
    *(void *)((char *)v42 + *(int *)(v44 + 28)) = *(void *)((char *)v43 + *(int *)(v44 + 28));
    uint64_t v51 = *(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56);
    swift_bridgeObjectRetain();
    v51(v42, 0, 1, v44);
    uint64_t v19 = v749;
  }
  uint64_t v10 = v774;
  uint64_t v52 = v774[9];
  uint64_t v53 = &v8[v52];
  uint64_t v54 = &v9[v52];
  uint64_t v55 = *(void *)v54;
  v53[8] = v54[8];
  *(void *)uint64_t v53 = v55;
  uint64_t v56 = v774[10];
  uint64_t v57 = &v8[v56];
  uint64_t v58 = &v9[v56];
  if (v758(&v9[v56], 1, v18))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 16))(v57, v58, v18);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v57, 0, 1, v18);
  }
  uint64_t v60 = v774[11];
  uint64_t v61 = &v8[v60];
  uint64_t v62 = &v9[v60];
  uint64_t v63 = *(void *)v62;
  v61[8] = v62[8];
  *(void *)uint64_t v61 = v63;
  uint64_t v64 = v774[12];
  uint64_t v65 = &v8[v64];
  uint64_t v66 = &v9[v64];
  if (v758(&v9[v64], 1, v18))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 16))(v65, v66, v18);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v65, 0, 1, v18);
  }
  uint64_t v68 = v774[13];
  long long v69 = &v8[v68];
  uint64_t v70 = &v9[v68];
  uint64_t v71 = *(void *)v70;
  v69[8] = v70[8];
  *(void *)long long v69 = v71;
  uint64_t v72 = v774[14];
  uint64_t v73 = &v8[v72];
  long long v74 = &v9[v72];
  if (v758(&v9[v72], 1, v18))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 16))(v73, v74, v18);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v73, 0, 1, v18);
  }
  uint64_t v76 = v774[15];
  uint64_t v77 = &v8[v76];
  uint64_t v78 = &v9[v76];
  uint64_t v79 = *(void *)v78;
  v77[8] = v78[8];
  *(void *)uint64_t v77 = v79;
  uint64_t v80 = v774[16];
  uint64_t v81 = &v8[v80];
  uint64_t v82 = &v9[v80];
  if (v758(&v9[v80], 1, v18))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 16))(v81, v82, v18);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v81, 0, 1, v18);
  }
  uint64_t v84 = v774[17];
  int v85 = &v8[v84];
  uint64_t v86 = &v9[v84];
  uint64_t v11 = v770;
  if (*((void *)v86 + 4) == 1)
  {
    long long v87 = *(_OWORD *)v86;
    long long v88 = *((_OWORD *)v86 + 1);
    *((void *)v85 + 4) = *((void *)v86 + 4);
    *(_OWORD *)int v85 = v87;
    *((_OWORD *)v85 + 1) = v88;
  }
  else
  {
    uint64_t v89 = *(void *)v86;
    v85[8] = v86[8];
    *(void *)int v85 = v89;
    uint64_t v90 = *((void *)v86 + 2);
    v85[24] = v86[24];
    *((void *)v85 + 2) = v90;
    *((void *)v85 + 4) = *((void *)v86 + 4);
    swift_bridgeObjectRetain();
  }
  uint64_t v91 = v774[18];
  uint64_t v92 = &v8[v91];
  uint64_t v93 = &v9[v91];
  uint64_t v94 = *(void *)v93;
  v92[8] = v93[8];
  *(void *)uint64_t v92 = v94;
  uint64_t v95 = v774[19];
  uint64_t v96 = &v8[v95];
  uint64_t v97 = &v9[v95];
  uint64_t v98 = sub_1C1516D2C();
  uint64_t v99 = *(void *)(v98 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v99 + 16))(v96, v97, v98);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
  }
  a3 = v773;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v768 + 56))(v8, 0, 1, v774);
LABEL_94:
  uint64_t v194 = a3[11];
  uint64_t v195 = (char *)v5 + v194;
  uint64_t v196 = (unsigned char *)(v6 + v194);
  int v197 = v11((unsigned char *)v5 + v194, 1, v10);
  int v198 = v11(v196, 1, v10);
  if (!v197)
  {
    if (v198)
    {
      sub_1C0934780((uint64_t)v195, type metadata accessor for FeedClusteringOptions);
      goto LABEL_100;
    }
    uint64_t v207 = *(void *)v196;
    v195[8] = v196[8];
    *(void *)uint64_t v195 = v207;
    uint64_t v208 = v10[5];
    uint64_t v209 = &v195[v208];
    long long v210 = &v196[v208];
    uint64_t v211 = sub_1C1516D9C();
    uint64_t v761 = *(void *)(v211 - 8);
    unint64_t v212 = *(uint64_t (**)(void))(v761 + 48);
    v738 = v209;
    LODWORD(v209) = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v212)(v209, 1, v211);
    v751 = v212;
    int v213 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v212)(v210, 1, v211);
    if (v209)
    {
      if (v213)
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v738, v210, *(void *)(*(void *)(v214 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v761 + 16))(v738, v210, v211);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v761 + 56))(v738, 0, 1, v211);
      }
    }
    else if (v213)
    {
      (*(void (**)(void *, uint64_t))(v761 + 8))(v738, v211);
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v738, v210, *(void *)(*(void *)(v283 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, unsigned char *, uint64_t))(v761 + 24))(v738, v210, v211);
    }
    uint64_t v284 = v10[6];
    uint64_t v285 = &v195[v284];
    uint64_t v286 = &v196[v284];
    uint64_t v287 = *(void *)v286;
    v285[8] = v286[8];
    *(void *)uint64_t v285 = v287;
    uint64_t v288 = v10[7];
    v289 = &v196[v288];
    v739 = &v195[v288];
    int v290 = v212();
    int v291 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v212)(v289, 1, v211);
    if (v290)
    {
      if (v291)
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v739, v289, *(void *)(*(void *)(v292 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v761 + 16))(v739, v289, v211);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v761 + 56))(v739, 0, 1, v211);
      }
    }
    else if (v291)
    {
      (*(void (**)(unsigned char *, uint64_t))(v761 + 8))(v739, v211);
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v739, v289, *(void *)(*(void *)(v293 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v761 + 24))(v739, v289, v211);
    }
    uint64_t v294 = v10[8];
    unint64_t v295 = &v195[v294];
    int v296 = &v196[v294];
    uint64_t v297 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v298 = *(void *)(v297 - 8);
    uint64_t v299 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v298 + 48);
    int v300 = v299(v295, 1, v297);
    int v301 = v299(v296, 1, v297);
    if (v300)
    {
      uint64_t v302 = v751;
      if (!v301)
      {
        *(void *)unint64_t v295 = *(void *)v296;
        *((void *)v295 + 1) = *((void *)v296 + 1);
        uint64_t v303 = *(int *)(v297 + 24);
        uint64_t v304 = &v295[v303];
        __srcb = &v296[v303];
        uint64_t v305 = *(void (**)(char *, char *, uint64_t))(v761 + 16);
        swift_bridgeObjectRetain();
        v305(v304, __srcb, v211);
        uint64_t v302 = v751;
        *(void *)&v295[*(int *)(v297 + 28)] = *(void *)&v296[*(int *)(v297 + 28)];
        uint64_t v306 = *(void (**)(char *, void, uint64_t, uint64_t))(v298 + 56);
        swift_bridgeObjectRetain();
        v306(v295, 0, 1, v297);
        goto LABEL_153;
      }
    }
    else
    {
      uint64_t v302 = v751;
      if (!v301)
      {
        *(void *)unint64_t v295 = *(void *)v296;
        *((void *)v295 + 1) = *((void *)v296 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *, uint64_t))(v761 + 24))(&v295[*(int *)(v297 + 24)], &v296[*(int *)(v297 + 24)], v211);
        *(void *)&v295[*(int *)(v297 + 28)] = *(void *)&v296[*(int *)(v297 + 28)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_153:
        uint64_t v10 = v774;
        uint64_t v308 = v774[9];
        uint64_t v309 = &v195[v308];
        unint64_t v310 = &v196[v308];
        uint64_t v311 = *(void *)v310;
        v309[8] = v310[8];
        *(void *)uint64_t v309 = v311;
        uint64_t v312 = v774[10];
        uint64_t v313 = &v195[v312];
        uint64_t v314 = &v196[v312];
        int v315 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v302)(&v195[v312], 1, v211);
        int v316 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v302)(v314, 1, v211);
        if (v315)
        {
          uint64_t v317 = v761;
          if (!v316)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v761 + 16))(v313, v314, v211);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v761 + 56))(v313, 0, 1, v211);
            goto LABEL_159;
          }
        }
        else
        {
          uint64_t v317 = v761;
          if (!v316)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v761 + 24))(v313, v314, v211);
LABEL_159:
            uint64_t v319 = v774[11];
            uint64_t v320 = &v195[v319];
            uint64_t v321 = &v196[v319];
            uint64_t v322 = *(void *)v321;
            v320[8] = v321[8];
            *(void *)uint64_t v320 = v322;
            uint64_t v323 = v774[12];
            uint64_t v324 = &v195[v323];
            uint64_t v325 = &v196[v323];
            int v326 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v302)(&v195[v323], 1, v211);
            int v327 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v302)(v325, 1, v211);
            if (v326)
            {
              if (!v327)
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v317 + 16))(v324, v325, v211);
                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v317 + 56))(v324, 0, 1, v211);
                goto LABEL_165;
              }
            }
            else
            {
              if (!v327)
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v317 + 24))(v324, v325, v211);
LABEL_165:
                uint64_t v329 = v774[13];
                uint64_t v330 = &v195[v329];
                uint64_t v331 = &v196[v329];
                uint64_t v332 = *(void *)v331;
                v330[8] = v331[8];
                *(void *)uint64_t v330 = v332;
                uint64_t v333 = v774[14];
                uint64_t v334 = &v195[v333];
                uint64_t v335 = &v196[v333];
                int v336 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v302)(&v195[v333], 1, v211);
                int v337 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v302)(v335, 1, v211);
                if (v336)
                {
                  if (!v337)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v317 + 16))(v334, v335, v211);
                    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v317 + 56))(v334, 0, 1, v211);
                    goto LABEL_171;
                  }
                }
                else
                {
                  if (!v337)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v317 + 24))(v334, v335, v211);
LABEL_171:
                    uint64_t v339 = v774[15];
                    uint64_t v340 = &v195[v339];
                    unint64_t v341 = &v196[v339];
                    uint64_t v342 = *(void *)v341;
                    v340[8] = v341[8];
                    *(void *)uint64_t v340 = v342;
                    uint64_t v343 = v774[16];
                    unint64_t v344 = &v195[v343];
                    unint64_t v345 = &v196[v343];
                    int v346 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v302)(&v195[v343], 1, v211);
                    int v347 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v302)(v345, 1, v211);
                    if (v346)
                    {
                      if (!v347)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v317 + 16))(v344, v345, v211);
                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v317 + 56))(v344, 0, 1, v211);
                        goto LABEL_177;
                      }
                    }
                    else
                    {
                      if (!v347)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v317 + 24))(v344, v345, v211);
LABEL_177:
                        uint64_t v349 = v774[17];
                        uint64_t v350 = (uint64_t)&v195[v349];
                        uint64_t v351 = &v196[v349];
                        uint64_t v352 = *(void *)&v195[v349 + 32];
                        uint64_t v353 = *(void *)&v196[v349 + 32];
                        uint64_t v11 = v770;
                        if (v352 == 1)
                        {
                          if (v353 == 1)
                          {
                            long long v354 = *(_OWORD *)v351;
                            long long v355 = *((_OWORD *)v351 + 1);
                            *(void *)(v350 + 32) = *((void *)v351 + 4);
                            *(_OWORD *)uint64_t v350 = v354;
                            *(_OWORD *)(v350 + 16) = v355;
                          }
                          else
                          {
                            uint64_t v358 = *(void *)v351;
                            *(unsigned char *)(v350 + 8) = v351[8];
                            *(void *)uint64_t v350 = v358;
                            uint64_t v359 = *((void *)v351 + 2);
                            *(unsigned char *)(v350 + 24) = v351[24];
                            *(void *)(v350 + 16) = v359;
                            *(void *)(v350 + 32) = *((void *)v351 + 4);
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v353 == 1)
                        {
                          sub_1C0921044(v350);
                          uint64_t v356 = *((void *)v351 + 4);
                          long long v357 = *((_OWORD *)v351 + 1);
                          *(_OWORD *)uint64_t v350 = *(_OWORD *)v351;
                          *(_OWORD *)(v350 + 16) = v357;
                          *(void *)(v350 + 32) = v356;
                        }
                        else
                        {
                          uint64_t v360 = *(void *)v351;
                          *(unsigned char *)(v350 + 8) = v351[8];
                          *(void *)uint64_t v350 = v360;
                          uint64_t v361 = *((void *)v351 + 2);
                          *(unsigned char *)(v350 + 24) = v351[24];
                          *(void *)(v350 + 16) = v361;
                          *(void *)(v350 + 32) = *((void *)v351 + 4);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                        }
                        a3 = v773;
                        uint64_t v362 = v774[18];
                        uint64_t v363 = &v195[v362];
                        uint64_t v364 = &v196[v362];
                        uint64_t v365 = *(void *)v364;
                        v363[8] = v364[8];
                        *(void *)uint64_t v363 = v365;
                        uint64_t v366 = v774[19];
                        uint64_t v367 = &v195[v366];
                        uint64_t v368 = &v196[v366];
                        uint64_t v369 = sub_1C1516D2C();
                        uint64_t v370 = *(void *)(v369 - 8);
                        unsigned __int8 v371 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v370 + 48);
                        int v372 = v371(v367, 1, v369);
                        int v373 = v371(v368, 1, v369);
                        if (v372)
                        {
                          uint64_t v6 = v766;
                          uint64_t v5 = v767;
                          if (!v373)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v370 + 16))(v367, v368, v369);
                            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v370 + 56))(v367, 0, 1, v369);
                            goto LABEL_190;
                          }
                        }
                        else
                        {
                          uint64_t v6 = v766;
                          uint64_t v5 = v767;
                          if (!v373)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v370 + 24))(v367, v368, v369);
                            goto LABEL_190;
                          }
                          (*(void (**)(unsigned char *, uint64_t))(v370 + 8))(v367, v369);
                        }
                        sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
                        memcpy(v367, v368, *(void *)(*(void *)(v374 - 8) + 64));
                        goto LABEL_190;
                      }
                      (*(void (**)(unsigned char *, uint64_t))(v317 + 8))(v344, v211);
                    }
                    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                    memcpy(v344, v345, *(void *)(*(void *)(v348 - 8) + 64));
                    goto LABEL_177;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v317 + 8))(v334, v211);
                }
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v334, v335, *(void *)(*(void *)(v338 - 8) + 64));
                goto LABEL_171;
              }
              (*(void (**)(unsigned char *, uint64_t))(v317 + 8))(v324, v211);
            }
            sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
            memcpy(v324, v325, *(void *)(*(void *)(v328 - 8) + 64));
            goto LABEL_165;
          }
          (*(void (**)(unsigned char *, uint64_t))(v761 + 8))(v313, v211);
        }
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v313, v314, *(void *)(*(void *)(v318 - 8) + 64));
        goto LABEL_159;
      }
      sub_1C0934780((uint64_t)v295, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    }
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v295, v296, *(void *)(*(void *)(v307 - 8) + 64));
    goto LABEL_153;
  }
  if (v198)
  {
LABEL_100:
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v195, v196, *(void *)(*(void *)(v206 - 8) + 64));
    goto LABEL_190;
  }
  uint64_t v199 = *(void *)v196;
  v195[8] = v196[8];
  *(void *)uint64_t v195 = v199;
  uint64_t v200 = v10[5];
  uint64_t v201 = &v195[v200];
  uint64_t v202 = &v196[v200];
  uint64_t v203 = sub_1C1516D9C();
  uint64_t v204 = *(void *)(v203 - 8);
  v760 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v204 + 48);
  if (v760(v202, 1, v203))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v201, v202, *(void *)(*(void *)(v205 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v204 + 16))(v201, v202, v203);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v204 + 56))(v201, 0, 1, v203);
  }
  uint64_t v215 = v10[6];
  uint64_t v216 = &v195[v215];
  uint64_t v217 = &v196[v215];
  uint64_t v218 = *(void *)v217;
  v216[8] = v217[8];
  *(void *)uint64_t v216 = v218;
  uint64_t v219 = v10[7];
  uint64_t v220 = &v195[v219];
  uint64_t v221 = &v196[v219];
  if (v760(&v196[v219], 1, v203))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v220, v221, *(void *)(*(void *)(v222 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v204 + 16))(v220, v221, v203);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v204 + 56))(v220, 0, 1, v203);
  }
  uint64_t v223 = v10[8];
  uint64_t v224 = &v195[v223];
  uint64_t v225 = &v196[v223];
  uint64_t v226 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v227 = *(void *)(v226 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v227 + 48))(v225, 1, v226))
  {
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v224, v225, *(void *)(*(void *)(v228 - 8) + 64));
  }
  else
  {
    *uint64_t v224 = *v225;
    v224[1] = v225[1];
    uint64_t v229 = *(int *)(v226 + 24);
    uint64_t v752 = v204;
    uint64_t v230 = (char *)v224 + v229;
    uint64_t v231 = (char *)v225 + v229;
    __srca = *(void (**)(char *, char *, uint64_t))(v752 + 16);
    swift_bridgeObjectRetain();
    uint64_t v232 = v231;
    uint64_t v5 = v767;
    __srca(v230, v232, v203);
    uint64_t v6 = v766;
    *(void *)((char *)v224 + *(int *)(v226 + 28)) = *(void *)((char *)v225 + *(int *)(v226 + 28));
    uint64_t v233 = *(void (**)(void *, void, uint64_t, uint64_t))(v227 + 56);
    swift_bridgeObjectRetain();
    v233(v224, 0, 1, v226);
    uint64_t v204 = v752;
  }
  uint64_t v10 = v774;
  uint64_t v234 = v774[9];
  uint64_t v235 = &v195[v234];
  uint64_t v236 = &v196[v234];
  uint64_t v237 = *(void *)v236;
  v235[8] = v236[8];
  *(void *)uint64_t v235 = v237;
  uint64_t v238 = v774[10];
  uint64_t v239 = &v195[v238];
  uint64_t v240 = &v196[v238];
  if (v760(&v196[v238], 1, v203))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v239, v240, *(void *)(*(void *)(v241 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v204 + 16))(v239, v240, v203);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v204 + 56))(v239, 0, 1, v203);
  }
  uint64_t v242 = v774[11];
  long long v243 = &v195[v242];
  uint64_t v244 = &v196[v242];
  uint64_t v245 = *(void *)v244;
  v243[8] = v244[8];
  *(void *)long long v243 = v245;
  uint64_t v246 = v774[12];
  uint64_t v247 = &v195[v246];
  uint64_t v248 = &v196[v246];
  if (v760(&v196[v246], 1, v203))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v247, v248, *(void *)(*(void *)(v249 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v204 + 16))(v247, v248, v203);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v204 + 56))(v247, 0, 1, v203);
  }
  uint64_t v250 = v774[13];
  uint64_t v251 = &v195[v250];
  uint64_t v252 = &v196[v250];
  uint64_t v253 = *(void *)v252;
  v251[8] = v252[8];
  *(void *)uint64_t v251 = v253;
  uint64_t v254 = v774[14];
  uint64_t v255 = &v195[v254];
  uint64_t v256 = &v196[v254];
  if (v760(&v196[v254], 1, v203))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v255, v256, *(void *)(*(void *)(v257 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v204 + 16))(v255, v256, v203);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v204 + 56))(v255, 0, 1, v203);
  }
  uint64_t v258 = v774[15];
  uint64_t v259 = &v195[v258];
  uint64_t v260 = &v196[v258];
  uint64_t v261 = *(void *)v260;
  v259[8] = v260[8];
  *(void *)uint64_t v259 = v261;
  uint64_t v262 = v774[16];
  uint64_t v263 = &v195[v262];
  uint64_t v264 = &v196[v262];
  if (v760(&v196[v262], 1, v203))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v263, v264, *(void *)(*(void *)(v265 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v204 + 16))(v263, v264, v203);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v204 + 56))(v263, 0, 1, v203);
  }
  uint64_t v266 = v774[17];
  uint64_t v267 = &v195[v266];
  uint64_t v268 = &v196[v266];
  uint64_t v11 = v770;
  if (*((void *)v268 + 4) == 1)
  {
    long long v269 = *(_OWORD *)v268;
    long long v270 = *((_OWORD *)v268 + 1);
    *((void *)v267 + 4) = *((void *)v268 + 4);
    *(_OWORD *)uint64_t v267 = v269;
    *((_OWORD *)v267 + 1) = v270;
  }
  else
  {
    uint64_t v271 = *(void *)v268;
    v267[8] = v268[8];
    *(void *)uint64_t v267 = v271;
    uint64_t v272 = *((void *)v268 + 2);
    v267[24] = v268[24];
    *((void *)v267 + 2) = v272;
    *((void *)v267 + 4) = *((void *)v268 + 4);
    swift_bridgeObjectRetain();
  }
  uint64_t v273 = v774[18];
  uint64_t v274 = &v195[v273];
  uint64_t v275 = &v196[v273];
  uint64_t v276 = *(void *)v275;
  v274[8] = v275[8];
  *(void *)uint64_t v274 = v276;
  uint64_t v277 = v774[19];
  uint64_t v278 = &v195[v277];
  uint64_t v279 = &v196[v277];
  uint64_t v280 = sub_1C1516D2C();
  uint64_t v281 = *(void *)(v280 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v281 + 48))(v279, 1, v280))
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v278, v279, *(void *)(*(void *)(v282 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v281 + 16))(v278, v279, v280);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v281 + 56))(v278, 0, 1, v280);
  }
  a3 = v773;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v768 + 56))(v195, 0, 1, v774);
LABEL_190:
  *(void *)((char *)v5 + a3[12]) = *(void *)(v6 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v375 = a3[13];
  uint64_t v376 = (char *)v5 + v375;
  uint64_t v377 = (unsigned char *)(v6 + v375);
  int v378 = v11((unsigned char *)v5 + v375, 1, v10);
  int v379 = v11(v377, 1, v10);
  if (!v378)
  {
    if (v379)
    {
      sub_1C0934780((uint64_t)v376, type metadata accessor for FeedClusteringOptions);
      goto LABEL_196;
    }
    uint64_t v388 = *(void *)v377;
    v376[8] = v377[8];
    *(void *)uint64_t v376 = v388;
    uint64_t v389 = v10[5];
    uint64_t v390 = &v376[v389];
    uint64_t v391 = &v377[v389];
    uint64_t v392 = sub_1C1516D9C();
    uint64_t v763 = *(void *)(v392 - 8);
    uint64_t v393 = *(uint64_t (**)(void))(v763 + 48);
    v740 = v390;
    LODWORD(v390) = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v393)(v390, 1, v392);
    v753 = v393;
    int v394 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v393)(v391, 1, v392);
    if (v390)
    {
      if (v394)
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v740, v391, *(void *)(*(void *)(v395 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v763 + 16))(v740, v391, v392);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v763 + 56))(v740, 0, 1, v392);
      }
    }
    else if (v394)
    {
      (*(void (**)(void *, uint64_t))(v763 + 8))(v740, v392);
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v740, v391, *(void *)(*(void *)(v464 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, unsigned char *, uint64_t))(v763 + 24))(v740, v391, v392);
    }
    uint64_t v465 = v10[6];
    uint64_t v466 = &v376[v465];
    uint64_t v467 = &v377[v465];
    uint64_t v468 = *(void *)v467;
    v466[8] = v467[8];
    *(void *)uint64_t v466 = v468;
    uint64_t v469 = v10[7];
    uint64_t v470 = &v377[v469];
    v741 = &v376[v469];
    int v471 = v393();
    int v472 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v393)(v470, 1, v392);
    if (v471)
    {
      if (v472)
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v741, v470, *(void *)(*(void *)(v473 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v763 + 16))(v741, v470, v392);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v763 + 56))(v741, 0, 1, v392);
      }
    }
    else if (v472)
    {
      (*(void (**)(unsigned char *, uint64_t))(v763 + 8))(v741, v392);
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v741, v470, *(void *)(*(void *)(v474 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v763 + 24))(v741, v470, v392);
    }
    uint64_t v475 = v10[8];
    uint64_t v476 = &v376[v475];
    uint64_t v477 = &v377[v475];
    uint64_t v478 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v479 = *(void *)(v478 - 8);
    uint64_t v480 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v479 + 48);
    int v481 = v480(v476, 1, v478);
    int v482 = v480(v477, 1, v478);
    if (v481)
    {
      uint64_t v483 = v753;
      if (!v482)
      {
        *(void *)uint64_t v476 = *(void *)v477;
        *((void *)v476 + 1) = *((void *)v477 + 1);
        uint64_t v484 = *(int *)(v478 + 24);
        uint64_t v485 = &v476[v484];
        __srcd = &v477[v484];
        uint64_t v486 = *(void (**)(char *, char *, uint64_t))(v763 + 16);
        swift_bridgeObjectRetain();
        v486(v485, __srcd, v392);
        uint64_t v483 = v753;
        *(void *)&v476[*(int *)(v478 + 28)] = *(void *)&v477[*(int *)(v478 + 28)];
        uint64_t v487 = *(void (**)(char *, void, uint64_t, uint64_t))(v479 + 56);
        swift_bridgeObjectRetain();
        v487(v476, 0, 1, v478);
        goto LABEL_249;
      }
    }
    else
    {
      uint64_t v483 = v753;
      if (!v482)
      {
        *(void *)uint64_t v476 = *(void *)v477;
        *((void *)v476 + 1) = *((void *)v477 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *, uint64_t))(v763 + 24))(&v476[*(int *)(v478 + 24)], &v477[*(int *)(v478 + 24)], v392);
        *(void *)&v476[*(int *)(v478 + 28)] = *(void *)&v477[*(int *)(v478 + 28)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_249:
        uint64_t v10 = v774;
        uint64_t v489 = v774[9];
        uint64_t v490 = &v376[v489];
        v491 = &v377[v489];
        uint64_t v492 = *(void *)v491;
        v490[8] = v491[8];
        *(void *)uint64_t v490 = v492;
        uint64_t v493 = v774[10];
        long long v494 = &v376[v493];
        long long v495 = &v377[v493];
        int v496 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v483)(&v376[v493], 1, v392);
        int v497 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v483)(v495, 1, v392);
        if (v496)
        {
          uint64_t v498 = v763;
          if (!v497)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v763 + 16))(v494, v495, v392);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v763 + 56))(v494, 0, 1, v392);
            goto LABEL_255;
          }
        }
        else
        {
          uint64_t v498 = v763;
          if (!v497)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v763 + 24))(v494, v495, v392);
LABEL_255:
            uint64_t v500 = v774[11];
            uint64_t v501 = &v376[v500];
            uint64_t v502 = &v377[v500];
            uint64_t v503 = *(void *)v502;
            v501[8] = v502[8];
            *(void *)uint64_t v501 = v503;
            uint64_t v504 = v774[12];
            uint64_t v505 = &v376[v504];
            uint64_t v506 = &v377[v504];
            int v507 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v483)(&v376[v504], 1, v392);
            int v508 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v483)(v506, 1, v392);
            if (v507)
            {
              if (!v508)
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v498 + 16))(v505, v506, v392);
                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v498 + 56))(v505, 0, 1, v392);
                goto LABEL_261;
              }
            }
            else
            {
              if (!v508)
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v498 + 24))(v505, v506, v392);
LABEL_261:
                uint64_t v510 = v774[13];
                uint64_t v511 = &v376[v510];
                v512 = &v377[v510];
                uint64_t v513 = *(void *)v512;
                v511[8] = v512[8];
                *(void *)uint64_t v511 = v513;
                uint64_t v514 = v774[14];
                v515 = &v376[v514];
                v516 = &v377[v514];
                int v517 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v483)(&v376[v514], 1, v392);
                int v518 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v483)(v516, 1, v392);
                if (v517)
                {
                  if (!v518)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v498 + 16))(v515, v516, v392);
                    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v498 + 56))(v515, 0, 1, v392);
                    goto LABEL_267;
                  }
                }
                else
                {
                  if (!v518)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v498 + 24))(v515, v516, v392);
LABEL_267:
                    uint64_t v520 = v774[15];
                    v521 = &v376[v520];
                    v522 = &v377[v520];
                    uint64_t v523 = *(void *)v522;
                    v521[8] = v522[8];
                    *(void *)v521 = v523;
                    uint64_t v524 = v774[16];
                    v525 = &v376[v524];
                    v526 = &v377[v524];
                    int v527 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v483)(&v376[v524], 1, v392);
                    int v528 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v483)(v526, 1, v392);
                    if (v527)
                    {
                      if (!v528)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v498 + 16))(v525, v526, v392);
                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v498 + 56))(v525, 0, 1, v392);
                        goto LABEL_273;
                      }
                    }
                    else
                    {
                      if (!v528)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v498 + 24))(v525, v526, v392);
LABEL_273:
                        uint64_t v530 = v774[17];
                        uint64_t v531 = (uint64_t)&v376[v530];
                        v532 = &v377[v530];
                        uint64_t v533 = *(void *)&v376[v530 + 32];
                        uint64_t v534 = *(void *)&v377[v530 + 32];
                        uint64_t v11 = v770;
                        if (v533 == 1)
                        {
                          if (v534 == 1)
                          {
                            long long v535 = *(_OWORD *)v532;
                            long long v536 = *((_OWORD *)v532 + 1);
                            *(void *)(v531 + 32) = *((void *)v532 + 4);
                            *(_OWORD *)uint64_t v531 = v535;
                            *(_OWORD *)(v531 + 16) = v536;
                          }
                          else
                          {
                            uint64_t v539 = *(void *)v532;
                            *(unsigned char *)(v531 + 8) = v532[8];
                            *(void *)uint64_t v531 = v539;
                            uint64_t v540 = *((void *)v532 + 2);
                            *(unsigned char *)(v531 + 24) = v532[24];
                            *(void *)(v531 + 16) = v540;
                            *(void *)(v531 + 32) = *((void *)v532 + 4);
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v534 == 1)
                        {
                          sub_1C0921044(v531);
                          uint64_t v537 = *((void *)v532 + 4);
                          long long v538 = *((_OWORD *)v532 + 1);
                          *(_OWORD *)uint64_t v531 = *(_OWORD *)v532;
                          *(_OWORD *)(v531 + 16) = v538;
                          *(void *)(v531 + 32) = v537;
                        }
                        else
                        {
                          uint64_t v541 = *(void *)v532;
                          *(unsigned char *)(v531 + 8) = v532[8];
                          *(void *)uint64_t v531 = v541;
                          uint64_t v542 = *((void *)v532 + 2);
                          *(unsigned char *)(v531 + 24) = v532[24];
                          *(void *)(v531 + 16) = v542;
                          *(void *)(v531 + 32) = *((void *)v532 + 4);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                        }
                        a3 = v773;
                        uint64_t v543 = v774[18];
                        v544 = &v376[v543];
                        v545 = &v377[v543];
                        uint64_t v546 = *(void *)v545;
                        v544[8] = v545[8];
                        *(void *)v544 = v546;
                        uint64_t v547 = v774[19];
                        v548 = &v376[v547];
                        v549 = &v377[v547];
                        uint64_t v550 = sub_1C1516D2C();
                        uint64_t v551 = *(void *)(v550 - 8);
                        v552 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v551 + 48);
                        int v553 = v552(v548, 1, v550);
                        int v554 = v552(v549, 1, v550);
                        if (v553)
                        {
                          uint64_t v6 = v766;
                          uint64_t v5 = v767;
                          if (!v554)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v551 + 16))(v548, v549, v550);
                            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v551 + 56))(v548, 0, 1, v550);
                            goto LABEL_286;
                          }
                        }
                        else
                        {
                          uint64_t v6 = v766;
                          uint64_t v5 = v767;
                          if (!v554)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v551 + 24))(v548, v549, v550);
                            goto LABEL_286;
                          }
                          (*(void (**)(unsigned char *, uint64_t))(v551 + 8))(v548, v550);
                        }
                        sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
                        memcpy(v548, v549, *(void *)(*(void *)(v555 - 8) + 64));
                        goto LABEL_286;
                      }
                      (*(void (**)(unsigned char *, uint64_t))(v498 + 8))(v525, v392);
                    }
                    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                    memcpy(v525, v526, *(void *)(*(void *)(v529 - 8) + 64));
                    goto LABEL_273;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v498 + 8))(v515, v392);
                }
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v515, v516, *(void *)(*(void *)(v519 - 8) + 64));
                goto LABEL_267;
              }
              (*(void (**)(unsigned char *, uint64_t))(v498 + 8))(v505, v392);
            }
            sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
            memcpy(v505, v506, *(void *)(*(void *)(v509 - 8) + 64));
            goto LABEL_261;
          }
          (*(void (**)(unsigned char *, uint64_t))(v763 + 8))(v494, v392);
        }
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v494, v495, *(void *)(*(void *)(v499 - 8) + 64));
        goto LABEL_255;
      }
      sub_1C0934780((uint64_t)v476, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    }
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v476, v477, *(void *)(*(void *)(v488 - 8) + 64));
    goto LABEL_249;
  }
  if (v379)
  {
LABEL_196:
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v376, v377, *(void *)(*(void *)(v387 - 8) + 64));
    goto LABEL_286;
  }
  uint64_t v380 = *(void *)v377;
  v376[8] = v377[8];
  *(void *)uint64_t v376 = v380;
  uint64_t v381 = v10[5];
  v382 = &v376[v381];
  uint64_t v383 = &v377[v381];
  uint64_t v384 = sub_1C1516D9C();
  uint64_t v385 = *(void *)(v384 - 8);
  v762 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v385 + 48);
  if (v762(v383, 1, v384))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v382, v383, *(void *)(*(void *)(v386 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v385 + 16))(v382, v383, v384);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v385 + 56))(v382, 0, 1, v384);
  }
  uint64_t v396 = v10[6];
  char v397 = &v376[v396];
  uint64_t v398 = &v377[v396];
  uint64_t v399 = *(void *)v398;
  v397[8] = v398[8];
  *(void *)char v397 = v399;
  uint64_t v400 = v10[7];
  uint64_t v401 = &v376[v400];
  uint64_t v402 = &v377[v400];
  if (v762(&v377[v400], 1, v384))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v401, v402, *(void *)(*(void *)(v403 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v385 + 16))(v401, v402, v384);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v385 + 56))(v401, 0, 1, v384);
  }
  uint64_t v404 = v10[8];
  uint64_t v405 = &v376[v404];
  uint64_t v406 = &v377[v404];
  uint64_t v407 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v408 = *(void *)(v407 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v408 + 48))(v406, 1, v407))
  {
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v405, v406, *(void *)(*(void *)(v409 - 8) + 64));
  }
  else
  {
    *uint64_t v405 = *v406;
    v405[1] = v406[1];
    uint64_t v410 = *(int *)(v407 + 24);
    uint64_t v754 = v385;
    uint64_t v411 = (char *)v405 + v410;
    v412 = (char *)v406 + v410;
    __srcc = *(void (**)(char *, char *, uint64_t))(v754 + 16);
    swift_bridgeObjectRetain();
    v413 = v412;
    uint64_t v5 = v767;
    __srcc(v411, v413, v384);
    uint64_t v6 = v766;
    *(void *)((char *)v405 + *(int *)(v407 + 28)) = *(void *)((char *)v406 + *(int *)(v407 + 28));
    unint64_t v414 = *(void (**)(void *, void, uint64_t, uint64_t))(v408 + 56);
    swift_bridgeObjectRetain();
    v414(v405, 0, 1, v407);
    uint64_t v385 = v754;
  }
  uint64_t v10 = v774;
  uint64_t v415 = v774[9];
  uint64_t v416 = &v376[v415];
  v417 = &v377[v415];
  uint64_t v418 = *(void *)v417;
  v416[8] = v417[8];
  *(void *)uint64_t v416 = v418;
  uint64_t v419 = v774[10];
  v420 = &v376[v419];
  v421 = &v377[v419];
  if (v762(&v377[v419], 1, v384))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v420, v421, *(void *)(*(void *)(v422 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v385 + 16))(v420, v421, v384);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v385 + 56))(v420, 0, 1, v384);
  }
  uint64_t v423 = v774[11];
  v424 = &v376[v423];
  uint64_t v425 = &v377[v423];
  uint64_t v426 = *(void *)v425;
  v424[8] = v425[8];
  *(void *)v424 = v426;
  uint64_t v427 = v774[12];
  long long v428 = &v376[v427];
  int64x2_t v429 = &v377[v427];
  if (v762(&v377[v427], 1, v384))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v428, v429, *(void *)(*(void *)(v430 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v385 + 16))(v428, v429, v384);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v385 + 56))(v428, 0, 1, v384);
  }
  uint64_t v431 = v774[13];
  uint64_t v432 = &v376[v431];
  uint64_t v433 = &v377[v431];
  uint64_t v434 = *(void *)v433;
  v432[8] = v433[8];
  *(void *)uint64_t v432 = v434;
  uint64_t v435 = v774[14];
  uint64_t v436 = &v376[v435];
  uint64_t v437 = &v377[v435];
  if (v762(&v377[v435], 1, v384))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v436, v437, *(void *)(*(void *)(v438 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v385 + 16))(v436, v437, v384);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v385 + 56))(v436, 0, 1, v384);
  }
  uint64_t v439 = v774[15];
  v440 = &v376[v439];
  long long v441 = &v377[v439];
  uint64_t v442 = *(void *)v441;
  v440[8] = v441[8];
  *(void *)v440 = v442;
  uint64_t v443 = v774[16];
  long long v444 = &v376[v443];
  long long v445 = &v377[v443];
  if (v762(&v377[v443], 1, v384))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v444, v445, *(void *)(*(void *)(v446 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v385 + 16))(v444, v445, v384);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v385 + 56))(v444, 0, 1, v384);
  }
  uint64_t v447 = v774[17];
  long long v448 = &v376[v447];
  int64x2_t v449 = &v377[v447];
  uint64_t v11 = v770;
  if (*((void *)v449 + 4) == 1)
  {
    long long v450 = *(_OWORD *)v449;
    long long v451 = *((_OWORD *)v449 + 1);
    *((void *)v448 + 4) = *((void *)v449 + 4);
    *(_OWORD *)long long v448 = v450;
    *((_OWORD *)v448 + 1) = v451;
  }
  else
  {
    uint64_t v452 = *(void *)v449;
    v448[8] = v449[8];
    *(void *)long long v448 = v452;
    uint64_t v453 = *((void *)v449 + 2);
    v448[24] = v449[24];
    *((void *)v448 + 2) = v453;
    *((void *)v448 + 4) = *((void *)v449 + 4);
    swift_bridgeObjectRetain();
  }
  uint64_t v454 = v774[18];
  uint64_t v455 = &v376[v454];
  long long v456 = &v377[v454];
  uint64_t v457 = *(void *)v456;
  v455[8] = v456[8];
  *(void *)uint64_t v455 = v457;
  uint64_t v458 = v774[19];
  uint64_t v459 = &v376[v458];
  uint64_t v460 = &v377[v458];
  uint64_t v461 = sub_1C1516D2C();
  uint64_t v462 = *(void *)(v461 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v462 + 48))(v460, 1, v461))
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v459, v460, *(void *)(*(void *)(v463 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v462 + 16))(v459, v460, v461);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v462 + 56))(v459, 0, 1, v461);
  }
  a3 = v773;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v768 + 56))(v376, 0, 1, v774);
LABEL_286:
  uint64_t v556 = a3[14];
  v557 = (char *)v5 + v556;
  v558 = (unsigned char *)(v6 + v556);
  int v559 = v11((unsigned char *)v5 + v556, 1, v10);
  int v560 = v11(v558, 1, v10);
  if (!v559)
  {
    if (v560)
    {
      sub_1C0934780((uint64_t)v557, type metadata accessor for FeedClusteringOptions);
      goto LABEL_292;
    }
    uint64_t v569 = *(void *)v558;
    v557[8] = v558[8];
    *(void *)v557 = v569;
    uint64_t v570 = v10[5];
    v571 = &v557[v570];
    v572 = &v558[v570];
    uint64_t v573 = sub_1C1516D9C();
    uint64_t v772 = *(void *)(v573 - 8);
    v574 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v772 + 48);
    v755 = v571;
    LODWORD(v571) = v574(v571, 1, v573);
    v764 = v574;
    int v575 = v574(v572, 1, v573);
    if (v571)
    {
      if (v575)
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v755, v572, *(void *)(*(void *)(v576 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v772 + 16))(v755, v572, v573);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v772 + 56))(v755, 0, 1, v573);
      }
    }
    else if (v575)
    {
      (*(void (**)(void *, uint64_t))(v772 + 8))(v755, v573);
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v755, v572, *(void *)(*(void *)(v646 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, unsigned char *, uint64_t))(v772 + 24))(v755, v572, v573);
    }
    uint64_t v647 = v10[6];
    v648 = &v557[v647];
    v649 = &v558[v647];
    uint64_t v650 = *(void *)v649;
    v648[8] = v649[8];
    *(void *)v648 = v650;
    uint64_t v651 = v10[7];
    v652 = &v558[v651];
    v756 = &v557[v651];
    int v653 = ((uint64_t (*)(void))v574)();
    int v654 = v574(v652, 1, v573);
    if (v653)
    {
      if (v654)
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v756, v652, *(void *)(*(void *)(v655 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v772 + 16))(v756, v652, v573);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v772 + 56))(v756, 0, 1, v573);
      }
    }
    else if (v654)
    {
      (*(void (**)(unsigned char *, uint64_t))(v772 + 8))(v756, v573);
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v756, v652, *(void *)(*(void *)(v656 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v772 + 24))(v756, v652, v573);
    }
    uint64_t v657 = v10[8];
    v658 = &v557[v657];
    v659 = &v558[v657];
    uint64_t v660 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v661 = *(void *)(v660 - 8);
    v662 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v661 + 48);
    int v663 = v662(v658, 1, v660);
    int v664 = v662(v659, 1, v660);
    if (v663)
    {
      if (!v664)
      {
        *(void *)v658 = *(void *)v659;
        *((void *)v658 + 1) = *((void *)v659 + 1);
        uint64_t v665 = *(int *)(v660 + 24);
        v666 = &v658[v665];
        v769 = &v659[v665];
        v667 = *(void (**)(char *, char *, uint64_t))(v772 + 16);
        swift_bridgeObjectRetain();
        v667(v666, v769, v573);
        *(void *)&v658[*(int *)(v660 + 28)] = *(void *)&v659[*(int *)(v660 + 28)];
        v668 = *(void (**)(char *, void, uint64_t, uint64_t))(v661 + 56);
        swift_bridgeObjectRetain();
        v668(v658, 0, 1, v660);
        goto LABEL_345;
      }
    }
    else
    {
      if (!v664)
      {
        *(void *)v658 = *(void *)v659;
        *((void *)v658 + 1) = *((void *)v659 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *, uint64_t))(v772 + 24))(&v658[*(int *)(v660 + 24)], &v659[*(int *)(v660 + 24)], v573);
        *(void *)&v658[*(int *)(v660 + 28)] = *(void *)&v659[*(int *)(v660 + 28)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_345:
        uint64_t v670 = v774[9];
        v671 = &v557[v670];
        v672 = &v558[v670];
        uint64_t v673 = *(void *)v672;
        v671[8] = v672[8];
        *(void *)v671 = v673;
        uint64_t v674 = v774[10];
        v675 = &v557[v674];
        v676 = &v558[v674];
        int v677 = v764(&v557[v674], 1, v573);
        int v678 = v764(v676, 1, v573);
        if (v677)
        {
          uint64_t v679 = v772;
          if (!v678)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v772 + 16))(v675, v676, v573);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v772 + 56))(v675, 0, 1, v573);
            goto LABEL_351;
          }
        }
        else
        {
          uint64_t v679 = v772;
          if (!v678)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v772 + 24))(v675, v676, v573);
LABEL_351:
            uint64_t v681 = v774[11];
            v682 = &v557[v681];
            v683 = &v558[v681];
            uint64_t v684 = *(void *)v683;
            v682[8] = v683[8];
            *(void *)v682 = v684;
            uint64_t v685 = v774[12];
            v686 = &v557[v685];
            v687 = &v558[v685];
            int v688 = v764(&v557[v685], 1, v573);
            int v689 = v764(v687, 1, v573);
            if (v688)
            {
              if (!v689)
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v679 + 16))(v686, v687, v573);
                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v679 + 56))(v686, 0, 1, v573);
                goto LABEL_357;
              }
            }
            else
            {
              if (!v689)
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v679 + 24))(v686, v687, v573);
LABEL_357:
                uint64_t v691 = v774[13];
                v692 = &v557[v691];
                v693 = &v558[v691];
                uint64_t v694 = *(void *)v693;
                v692[8] = v693[8];
                *(void *)v692 = v694;
                uint64_t v695 = v774[14];
                v696 = &v557[v695];
                v697 = &v558[v695];
                int v698 = v764(&v557[v695], 1, v573);
                int v699 = v764(v697, 1, v573);
                if (v698)
                {
                  if (!v699)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v679 + 16))(v696, v697, v573);
                    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v679 + 56))(v696, 0, 1, v573);
                    goto LABEL_363;
                  }
                }
                else
                {
                  if (!v699)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v679 + 24))(v696, v697, v573);
LABEL_363:
                    uint64_t v701 = v774[15];
                    v702 = &v557[v701];
                    v703 = &v558[v701];
                    uint64_t v704 = *(void *)v703;
                    v702[8] = v703[8];
                    *(void *)v702 = v704;
                    uint64_t v705 = v774[16];
                    v706 = &v557[v705];
                    v707 = &v558[v705];
                    int v708 = v764(&v557[v705], 1, v573);
                    int v709 = v764(v707, 1, v573);
                    if (v708)
                    {
                      if (!v709)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v679 + 16))(v706, v707, v573);
                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v679 + 56))(v706, 0, 1, v573);
                        goto LABEL_369;
                      }
                    }
                    else
                    {
                      if (!v709)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v679 + 24))(v706, v707, v573);
LABEL_369:
                        uint64_t v711 = v774[17];
                        uint64_t v712 = (uint64_t)&v557[v711];
                        v713 = &v558[v711];
                        uint64_t v714 = *(void *)&v557[v711 + 32];
                        uint64_t v715 = *(void *)&v558[v711 + 32];
                        if (v714 == 1)
                        {
                          if (v715 == 1)
                          {
                            long long v716 = *(_OWORD *)v713;
                            long long v717 = *((_OWORD *)v713 + 1);
                            *(void *)(v712 + 32) = *((void *)v713 + 4);
                            *(_OWORD *)uint64_t v712 = v716;
                            *(_OWORD *)(v712 + 16) = v717;
                          }
                          else
                          {
                            uint64_t v720 = *(void *)v713;
                            *(unsigned char *)(v712 + 8) = v713[8];
                            *(void *)uint64_t v712 = v720;
                            uint64_t v721 = *((void *)v713 + 2);
                            *(unsigned char *)(v712 + 24) = v713[24];
                            *(void *)(v712 + 16) = v721;
                            *(void *)(v712 + 32) = *((void *)v713 + 4);
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v715 == 1)
                        {
                          sub_1C0921044(v712);
                          uint64_t v718 = *((void *)v713 + 4);
                          long long v719 = *((_OWORD *)v713 + 1);
                          *(_OWORD *)uint64_t v712 = *(_OWORD *)v713;
                          *(_OWORD *)(v712 + 16) = v719;
                          *(void *)(v712 + 32) = v718;
                        }
                        else
                        {
                          uint64_t v722 = *(void *)v713;
                          *(unsigned char *)(v712 + 8) = v713[8];
                          *(void *)uint64_t v712 = v722;
                          uint64_t v723 = *((void *)v713 + 2);
                          *(unsigned char *)(v712 + 24) = v713[24];
                          *(void *)(v712 + 16) = v723;
                          *(void *)(v712 + 32) = *((void *)v713 + 4);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                        }
                        a3 = v773;
                        uint64_t v724 = v774[18];
                        v725 = &v557[v724];
                        v726 = &v558[v724];
                        uint64_t v727 = *(void *)v726;
                        v725[8] = v726[8];
                        *(void *)v725 = v727;
                        uint64_t v728 = v774[19];
                        v729 = &v557[v728];
                        v730 = &v558[v728];
                        uint64_t v731 = sub_1C1516D2C();
                        uint64_t v732 = *(void *)(v731 - 8);
                        v733 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v732 + 48);
                        int v734 = v733(v729, 1, v731);
                        int v735 = v733(v730, 1, v731);
                        if (v734)
                        {
                          uint64_t v5 = v767;
                          if (!v735)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v732 + 16))(v729, v730, v731);
                            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v732 + 56))(v729, 0, 1, v731);
LABEL_382:
                            uint64_t v6 = v766;
                            goto LABEL_383;
                          }
                        }
                        else
                        {
                          uint64_t v5 = v767;
                          if (!v735)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v732 + 24))(v729, v730, v731);
                            goto LABEL_382;
                          }
                          (*(void (**)(unsigned char *, uint64_t))(v732 + 8))(v729, v731);
                        }
                        sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
                        memcpy(v729, v730, *(void *)(*(void *)(v736 - 8) + 64));
                        goto LABEL_382;
                      }
                      (*(void (**)(unsigned char *, uint64_t))(v679 + 8))(v706, v573);
                    }
                    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                    memcpy(v706, v707, *(void *)(*(void *)(v710 - 8) + 64));
                    goto LABEL_369;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v679 + 8))(v696, v573);
                }
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v696, v697, *(void *)(*(void *)(v700 - 8) + 64));
                goto LABEL_363;
              }
              (*(void (**)(unsigned char *, uint64_t))(v679 + 8))(v686, v573);
            }
            sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
            memcpy(v686, v687, *(void *)(*(void *)(v690 - 8) + 64));
            goto LABEL_357;
          }
          (*(void (**)(unsigned char *, uint64_t))(v772 + 8))(v675, v573);
        }
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v675, v676, *(void *)(*(void *)(v680 - 8) + 64));
        goto LABEL_351;
      }
      sub_1C0934780((uint64_t)v658, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    }
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v658, v659, *(void *)(*(void *)(v669 - 8) + 64));
    goto LABEL_345;
  }
  if (v560)
  {
LABEL_292:
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v557, v558, *(void *)(*(void *)(v568 - 8) + 64));
    goto LABEL_383;
  }
  uint64_t v561 = *(void *)v558;
  v557[8] = v558[8];
  *(void *)v557 = v561;
  uint64_t v562 = v10[5];
  v563 = &v557[v562];
  v564 = &v558[v562];
  uint64_t v565 = sub_1C1516D9C();
  uint64_t v566 = *(void *)(v565 - 8);
  v771 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v566 + 48);
  if (v771(v564, 1, v565))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v563, v564, *(void *)(*(void *)(v567 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v566 + 16))(v563, v564, v565);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v566 + 56))(v563, 0, 1, v565);
  }
  uint64_t v577 = v10[6];
  v578 = &v557[v577];
  v579 = &v558[v577];
  uint64_t v580 = *(void *)v579;
  v578[8] = v579[8];
  *(void *)v578 = v580;
  uint64_t v581 = v10[7];
  v582 = &v557[v581];
  v583 = &v558[v581];
  uint64_t v765 = v566;
  if (v771(&v558[v581], 1, v565))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v582, v583, *(void *)(*(void *)(v584 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v566 + 16))(v582, v583, v565);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v566 + 56))(v582, 0, 1, v565);
  }
  uint64_t v585 = v10[8];
  v586 = &v557[v585];
  v587 = &v558[v585];
  uint64_t v588 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v589 = *(void *)(v588 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v589 + 48))(v587, 1, v588))
  {
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v586, v587, *(void *)(*(void *)(v590 - 8) + 64));
  }
  else
  {
    void *v586 = *v587;
    v586[1] = v587[1];
    uint64_t v591 = *(int *)(v588 + 24);
    v592 = (char *)v586 + v591;
    v593 = (char *)v587 + v591;
    v757 = *(void (**)(char *, char *, uint64_t))(v765 + 16);
    swift_bridgeObjectRetain();
    v594 = v593;
    uint64_t v5 = v767;
    v757(v592, v594, v565);
    uint64_t v6 = v766;
    *(void *)((char *)v586 + *(int *)(v588 + 28)) = *(void *)((char *)v587 + *(int *)(v588 + 28));
    v595 = *(void (**)(void *, void, uint64_t, uint64_t))(v589 + 56);
    swift_bridgeObjectRetain();
    v595(v586, 0, 1, v588);
  }
  uint64_t v596 = v774[9];
  v597 = &v557[v596];
  v598 = &v558[v596];
  uint64_t v599 = *(void *)v598;
  v597[8] = v598[8];
  *(void *)v597 = v599;
  uint64_t v600 = v774[10];
  v601 = &v557[v600];
  v602 = &v558[v600];
  if (v771(&v558[v600], 1, v565))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v601, v602, *(void *)(*(void *)(v603 - 8) + 64));
    uint64_t v604 = v765;
  }
  else
  {
    uint64_t v604 = v765;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v765 + 16))(v601, v602, v565);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v765 + 56))(v601, 0, 1, v565);
  }
  uint64_t v605 = v774[11];
  v606 = &v557[v605];
  v607 = &v558[v605];
  uint64_t v608 = *(void *)v607;
  v606[8] = v607[8];
  *(void *)v606 = v608;
  uint64_t v609 = v774[12];
  v610 = &v557[v609];
  v611 = &v558[v609];
  if (v771(&v558[v609], 1, v565))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v610, v611, *(void *)(*(void *)(v612 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v604 + 16))(v610, v611, v565);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v604 + 56))(v610, 0, 1, v565);
  }
  uint64_t v613 = v774[13];
  v614 = &v557[v613];
  v615 = &v558[v613];
  uint64_t v616 = *(void *)v615;
  v614[8] = v615[8];
  *(void *)v614 = v616;
  uint64_t v617 = v774[14];
  v618 = &v557[v617];
  v619 = &v558[v617];
  if (v771(&v558[v617], 1, v565))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v618, v619, *(void *)(*(void *)(v620 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v604 + 16))(v618, v619, v565);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v604 + 56))(v618, 0, 1, v565);
  }
  uint64_t v621 = v774[15];
  v622 = &v557[v621];
  v623 = &v558[v621];
  uint64_t v624 = *(void *)v623;
  v622[8] = v623[8];
  *(void *)v622 = v624;
  uint64_t v625 = v774[16];
  v626 = &v557[v625];
  v627 = &v558[v625];
  if (v771(&v558[v625], 1, v565))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v626, v627, *(void *)(*(void *)(v628 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v604 + 16))(v626, v627, v565);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v604 + 56))(v626, 0, 1, v565);
  }
  uint64_t v629 = v774[17];
  v630 = &v557[v629];
  v631 = &v558[v629];
  if (*((void *)v631 + 4) == 1)
  {
    long long v632 = *(_OWORD *)v631;
    long long v633 = *((_OWORD *)v631 + 1);
    *((void *)v630 + 4) = *((void *)v631 + 4);
    *(_OWORD *)v630 = v632;
    *((_OWORD *)v630 + 1) = v633;
  }
  else
  {
    uint64_t v634 = *(void *)v631;
    v630[8] = v631[8];
    *(void *)v630 = v634;
    uint64_t v635 = *((void *)v631 + 2);
    v630[24] = v631[24];
    *((void *)v630 + 2) = v635;
    *((void *)v630 + 4) = *((void *)v631 + 4);
    swift_bridgeObjectRetain();
  }
  uint64_t v636 = v774[18];
  v637 = &v557[v636];
  v638 = &v558[v636];
  uint64_t v639 = *(void *)v638;
  v637[8] = v638[8];
  *(void *)v637 = v639;
  uint64_t v640 = v774[19];
  v641 = &v557[v640];
  v642 = &v558[v640];
  uint64_t v643 = sub_1C1516D2C();
  uint64_t v644 = *(void *)(v643 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v644 + 48))(v642, 1, v643))
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v641, v642, *(void *)(*(void *)(v645 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v644 + 16))(v641, v642, v643);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v644 + 56))(v641, 0, 1, v643);
  }
  a3 = v773;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v768 + 56))(v557, 0, 1, v774);
LABEL_383:
  *(void *)((char *)v5 + a3[15]) = *(void *)(v6 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + a3[16]) = *(unsigned char *)(v6 + a3[16]);
  *((unsigned char *)v5 + a3[17]) = *(unsigned char *)(v6 + a3[17]);
  *(void *)((char *)v5 + a3[18]) = *(void *)(v6 + a3[18]);
  *(void *)((char *)v5 + a3[19]) = *(void *)(v6 + a3[19]);
  *((unsigned char *)v5 + a3[20]) = *(unsigned char *)(v6 + a3[20]);
  *(_WORD *)((char *)v5 + a3[21]) = *(_WORD *)(v6 + a3[21]);
  return v5;
}

uint64_t initializeWithTake for FeedClusteringRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = a3[10];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for FeedClusteringOptions(0);
  uint64_t v286 = *((void *)v10 - 1);
  uint64_t v11 = *(unsigned int (**)(void, void, void))(v286 + 48);
  uint64_t v287 = v4;
  uint64_t v283 = v11;
  if (v11(v9, 1, v10))
  {
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    v8[8] = v9[8];
    uint64_t v13 = v10[5];
    uint64_t v14 = &v8[v13];
    uint64_t v15 = &v9[v13];
    uint64_t v16 = sub_1C1516D9C();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = v10[6];
    uint64_t v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v10[7];
    uint64_t v24 = &v8[v23];
    uint64_t v25 = &v9[v23];
    uint64_t v277 = v18;
    uint64_t v280 = v17;
    if (v18(&v9[v23], 1, v16))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v24, v25, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v24, 0, 1, v16);
    }
    uint64_t v27 = v10[8];
    uint64_t v28 = &v8[v27];
    int v29 = &v9[v27];
    uint64_t v30 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      _OWORD *v28 = *v29;
      (*(void (**)(char *, char *, uint64_t))(v280 + 32))((char *)v28 + *(int *)(v30 + 24), (char *)v29 + *(int *)(v30 + 24), v16);
      *(void *)((char *)v28 + *(int *)(v30 + 28)) = *(void *)((char *)v29 + *(int *)(v30 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    uint64_t v33 = v10[9];
    uint64_t v34 = &v8[v33];
    uint64_t v35 = &v9[v33];
    *(void *)uint64_t v34 = *(void *)v35;
    v34[8] = v35[8];
    uint64_t v36 = v10[10];
    uint64_t v37 = &v8[v36];
    uint64_t v38 = &v9[v36];
    if (v277(&v9[v36], 1, v16))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      uint64_t v40 = v280;
    }
    else
    {
      uint64_t v40 = v280;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v280 + 32))(v37, v38, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v280 + 56))(v37, 0, 1, v16);
    }
    uint64_t v41 = v10[11];
    uint64_t v42 = &v8[v41];
    uint64_t v43 = &v9[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = v10[12];
    uint64_t v45 = &v8[v44];
    uint64_t v46 = &v9[v44];
    if (v277(&v9[v44], 1, v16))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v40 + 32))(v45, v46, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v40 + 56))(v45, 0, 1, v16);
    }
    uint64_t v48 = v10[13];
    uint64_t v49 = &v8[v48];
    uint64_t v50 = &v9[v48];
    *(void *)uint64_t v49 = *(void *)v50;
    v49[8] = v50[8];
    uint64_t v51 = v10[14];
    uint64_t v52 = &v8[v51];
    uint64_t v53 = &v9[v51];
    if (v277(&v9[v51], 1, v16))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v40 + 32))(v52, v53, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v40 + 56))(v52, 0, 1, v16);
    }
    uint64_t v55 = v10[15];
    uint64_t v56 = &v8[v55];
    uint64_t v57 = &v9[v55];
    *(void *)uint64_t v56 = *(void *)v57;
    v56[8] = v57[8];
    uint64_t v58 = v10[16];
    uint64_t v59 = &v8[v58];
    uint64_t v60 = &v9[v58];
    if (v277(&v9[v58], 1, v16))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v40 + 32))(v59, v60, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v40 + 56))(v59, 0, 1, v16);
    }
    uint64_t v62 = v10[17];
    uint64_t v63 = &v8[v62];
    uint64_t v64 = &v9[v62];
    long long v65 = *((_OWORD *)v64 + 1);
    *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
    *((_OWORD *)v63 + 1) = v65;
    *((void *)v63 + 4) = *((void *)v64 + 4);
    uint64_t v66 = v10[18];
    uint64_t v67 = &v8[v66];
    uint64_t v68 = &v9[v66];
    v67[8] = v68[8];
    *(void *)uint64_t v67 = *(void *)v68;
    uint64_t v69 = v10[19];
    uint64_t v70 = &v8[v69];
    uint64_t v71 = &v9[v69];
    uint64_t v72 = sub_1C1516D2C();
    uint64_t v73 = *(void *)(v72 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
      memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v73 + 32))(v70, v71, v72);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
    }
    uint64_t v4 = v287;
    uint64_t v11 = v283;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v286 + 56))(v8, 0, 1, v10);
  }
  uint64_t v75 = a3[11];
  uint64_t v76 = (unsigned char *)(a1 + v75);
  uint64_t v77 = (unsigned char *)(v4 + v75);
  if (v11(v4 + v75, 1, v10))
  {
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v76 = *(void *)v77;
    v76[8] = v77[8];
    uint64_t v79 = v10[5];
    uint64_t v80 = &v76[v79];
    uint64_t v81 = &v77[v79];
    uint64_t v82 = sub_1C1516D9C();
    uint64_t v83 = *(void *)(v82 - 8);
    uint64_t v84 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v83 + 48);
    if (v84(v81, 1, v82))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v80, v81, *(void *)(*(void *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v83 + 32))(v80, v81, v82);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
    uint64_t v86 = v10[6];
    long long v87 = &v76[v86];
    long long v88 = &v77[v86];
    *(void *)long long v87 = *(void *)v88;
    v87[8] = v88[8];
    uint64_t v89 = v10[7];
    uint64_t v90 = &v76[v89];
    uint64_t v91 = &v77[v89];
    uint64_t v278 = v84;
    uint64_t v281 = v83;
    if (v84(&v77[v89], 1, v82))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v83 + 32))(v90, v91, v82);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v83 + 56))(v90, 0, 1, v82);
    }
    uint64_t v93 = v10[8];
    uint64_t v94 = &v76[v93];
    uint64_t v95 = &v77[v93];
    uint64_t v96 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v97 = *(void *)(v96 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
    {
      sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      *uint64_t v94 = *v95;
      (*(void (**)(char *, char *, uint64_t))(v281 + 32))((char *)v94 + *(int *)(v96 + 24), (char *)v95 + *(int *)(v96 + 24), v82);
      *(void *)((char *)v94 + *(int *)(v96 + 28)) = *(void *)((char *)v95 + *(int *)(v96 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
    }
    uint64_t v99 = v10[9];
    uint64_t v100 = &v76[v99];
    uint64_t v101 = &v77[v99];
    *(void *)uint64_t v100 = *(void *)v101;
    v100[8] = v101[8];
    uint64_t v102 = v10[10];
    uint64_t v103 = &v76[v102];
    uint64_t v104 = &v77[v102];
    if (v278(&v77[v102], 1, v82))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
      uint64_t v106 = v281;
    }
    else
    {
      uint64_t v106 = v281;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v281 + 32))(v103, v104, v82);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v281 + 56))(v103, 0, 1, v82);
    }
    uint64_t v107 = v10[11];
    uint64_t v108 = &v76[v107];
    int v109 = &v77[v107];
    *(void *)uint64_t v108 = *(void *)v109;
    v108[8] = v109[8];
    uint64_t v110 = v10[12];
    uint64_t v111 = &v76[v110];
    uint64_t v112 = &v77[v110];
    if (v278(&v77[v110], 1, v82))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v106 + 32))(v111, v112, v82);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v106 + 56))(v111, 0, 1, v82);
    }
    uint64_t v114 = v10[13];
    uint64_t v115 = &v76[v114];
    uint64_t v116 = &v77[v114];
    *(void *)uint64_t v115 = *(void *)v116;
    v115[8] = v116[8];
    uint64_t v117 = v10[14];
    uint64_t v118 = &v76[v117];
    uint64_t v119 = &v77[v117];
    if (v278(&v77[v117], 1, v82))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v106 + 32))(v118, v119, v82);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v106 + 56))(v118, 0, 1, v82);
    }
    uint64_t v121 = v10[15];
    int v122 = &v76[v121];
    uint64_t v123 = &v77[v121];
    *(void *)int v122 = *(void *)v123;
    v122[8] = v123[8];
    uint64_t v124 = v10[16];
    uint64_t v125 = &v76[v124];
    uint64_t v126 = &v77[v124];
    if (v278(&v77[v124], 1, v82))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v106 + 32))(v125, v126, v82);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v106 + 56))(v125, 0, 1, v82);
    }
    uint64_t v128 = v10[17];
    long long v129 = &v76[v128];
    uint64_t v130 = &v77[v128];
    long long v131 = *((_OWORD *)v130 + 1);
    *(_OWORD *)long long v129 = *(_OWORD *)v130;
    *((_OWORD *)v129 + 1) = v131;
    *((void *)v129 + 4) = *((void *)v130 + 4);
    uint64_t v132 = v10[18];
    uint64_t v133 = &v76[v132];
    uint64_t v134 = &v77[v132];
    v133[8] = v134[8];
    *(void *)uint64_t v133 = *(void *)v134;
    uint64_t v135 = v10[19];
    int v136 = &v76[v135];
    uint64_t v137 = &v77[v135];
    uint64_t v138 = sub_1C1516D2C();
    uint64_t v139 = *(void *)(v138 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v139 + 48))(v137, 1, v138))
    {
      sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
      memcpy(v136, v137, *(void *)(*(void *)(v140 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v139 + 32))(v136, v137, v138);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v139 + 56))(v136, 0, 1, v138);
    }
    uint64_t v4 = v287;
    uint64_t v11 = v283;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v286 + 56))(v76, 0, 1, v10);
  }
  uint64_t v141 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(v4 + a3[12]);
  uint64_t v142 = (unsigned char *)(a1 + v141);
  uint64_t v143 = (unsigned char *)(v4 + v141);
  if (v11(v4 + v141, 1, v10))
  {
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v142 = *(void *)v143;
    v142[8] = v143[8];
    uint64_t v145 = v10[5];
    int v146 = &v142[v145];
    uint64_t v147 = &v143[v145];
    uint64_t v148 = sub_1C1516D9C();
    uint64_t v149 = *(void *)(v148 - 8);
    uint64_t v150 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v149 + 48);
    if (v150(v147, 1, v148))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v146, v147, *(void *)(*(void *)(v151 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v149 + 32))(v146, v147, v148);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v149 + 56))(v146, 0, 1, v148);
    }
    uint64_t v152 = v10[6];
    long long v153 = &v142[v152];
    long long v154 = &v143[v152];
    *(void *)long long v153 = *(void *)v154;
    v153[8] = v154[8];
    uint64_t v155 = v10[7];
    int v156 = &v142[v155];
    uint64_t v157 = &v143[v155];
    uint64_t v279 = v150;
    uint64_t v282 = v149;
    if (v150(&v143[v155], 1, v148))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v149 + 32))(v156, v157, v148);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v149 + 56))(v156, 0, 1, v148);
    }
    uint64_t v159 = v10[8];
    uint64_t v160 = &v142[v159];
    uint64_t v161 = &v143[v159];
    uint64_t v162 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v163 = *(void *)(v162 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v163 + 48))(v161, 1, v162))
    {
      sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
    }
    else
    {
      *uint64_t v160 = *v161;
      (*(void (**)(char *, char *, uint64_t))(v282 + 32))((char *)v160 + *(int *)(v162 + 24), (char *)v161 + *(int *)(v162 + 24), v148);
      *(void *)((char *)v160 + *(int *)(v162 + 28)) = *(void *)((char *)v161 + *(int *)(v162 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v163 + 56))(v160, 0, 1, v162);
    }
    uint64_t v165 = v10[9];
    int v166 = &v142[v165];
    uint64_t v167 = &v143[v165];
    *(void *)int v166 = *(void *)v167;
    v166[8] = v167[8];
    uint64_t v168 = v10[10];
    uint64_t v169 = &v142[v168];
    uint64_t v170 = &v143[v168];
    if (v279(&v143[v168], 1, v148))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
      uint64_t v172 = v282;
    }
    else
    {
      uint64_t v172 = v282;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v282 + 32))(v169, v170, v148);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v282 + 56))(v169, 0, 1, v148);
    }
    uint64_t v173 = v10[11];
    long long v174 = &v142[v173];
    uint64_t v175 = &v143[v173];
    *(void *)long long v174 = *(void *)v175;
    v174[8] = v175[8];
    uint64_t v176 = v10[12];
    uint64_t v177 = &v142[v176];
    uint64_t v178 = &v143[v176];
    if (v279(&v143[v176], 1, v148))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v172 + 32))(v177, v178, v148);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v172 + 56))(v177, 0, 1, v148);
    }
    uint64_t v180 = v10[13];
    uint64_t v181 = &v142[v180];
    uint64_t v182 = &v143[v180];
    *(void *)uint64_t v181 = *(void *)v182;
    v181[8] = v182[8];
    uint64_t v183 = v10[14];
    uint64_t v184 = &v142[v183];
    uint64_t v185 = &v143[v183];
    if (v279(&v143[v183], 1, v148))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v172 + 32))(v184, v185, v148);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v172 + 56))(v184, 0, 1, v148);
    }
    uint64_t v187 = v10[15];
    uint64_t v188 = &v142[v187];
    uint64_t v189 = &v143[v187];
    *(void *)uint64_t v188 = *(void *)v189;
    v188[8] = v189[8];
    uint64_t v190 = v10[16];
    int v191 = &v142[v190];
    int v192 = &v143[v190];
    if (v279(&v143[v190], 1, v148))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v172 + 32))(v191, v192, v148);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v172 + 56))(v191, 0, 1, v148);
    }
    uint64_t v194 = v10[17];
    uint64_t v195 = &v142[v194];
    uint64_t v196 = &v143[v194];
    long long v197 = *((_OWORD *)v196 + 1);
    *(_OWORD *)uint64_t v195 = *(_OWORD *)v196;
    *((_OWORD *)v195 + 1) = v197;
    *((void *)v195 + 4) = *((void *)v196 + 4);
    uint64_t v198 = v10[18];
    uint64_t v199 = &v142[v198];
    uint64_t v200 = &v143[v198];
    v199[8] = v200[8];
    *(void *)uint64_t v199 = *(void *)v200;
    uint64_t v201 = v10[19];
    uint64_t v202 = &v142[v201];
    uint64_t v203 = &v143[v201];
    uint64_t v204 = sub_1C1516D2C();
    uint64_t v205 = *(void *)(v204 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v205 + 48))(v203, 1, v204))
    {
      sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
      memcpy(v202, v203, *(void *)(*(void *)(v206 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v205 + 32))(v202, v203, v204);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v205 + 56))(v202, 0, 1, v204);
    }
    uint64_t v4 = v287;
    uint64_t v11 = v283;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v286 + 56))(v142, 0, 1, v10);
  }
  uint64_t v207 = a3[14];
  uint64_t v208 = (unsigned char *)(a1 + v207);
  uint64_t v209 = (unsigned char *)(v4 + v207);
  if (v11(v4 + v207, 1, v10))
  {
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v208, v209, *(void *)(*(void *)(v210 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v208 = *(void *)v209;
    v208[8] = v209[8];
    uint64_t v211 = v10[5];
    unint64_t v212 = &v208[v211];
    int v213 = &v209[v211];
    uint64_t v214 = sub_1C1516D9C();
    uint64_t v215 = *(void *)(v214 - 8);
    uint64_t v216 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v215 + 48);
    if (v216(v213, 1, v214))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v212, v213, *(void *)(*(void *)(v217 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v215 + 32))(v212, v213, v214);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
    }
    uint64_t v218 = v10[6];
    uint64_t v219 = &v208[v218];
    uint64_t v220 = &v209[v218];
    *(void *)uint64_t v219 = *(void *)v220;
    v219[8] = v220[8];
    uint64_t v221 = v10[7];
    uint64_t v222 = &v208[v221];
    uint64_t v223 = &v209[v221];
    uint64_t v284 = v216;
    uint64_t v285 = v215;
    if (v216(&v209[v221], 1, v214))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v222, v223, *(void *)(*(void *)(v224 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v215 + 32))(v222, v223, v214);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v215 + 56))(v222, 0, 1, v214);
    }
    uint64_t v225 = v10[8];
    uint64_t v226 = &v208[v225];
    uint64_t v227 = &v209[v225];
    uint64_t v228 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v229 = *(void *)(v228 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v229 + 48))(v227, 1, v228))
    {
      sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v226, v227, *(void *)(*(void *)(v230 - 8) + 64));
    }
    else
    {
      _OWORD *v226 = *v227;
      (*(void (**)(char *, char *, uint64_t))(v285 + 32))((char *)v226 + *(int *)(v228 + 24), (char *)v227 + *(int *)(v228 + 24), v214);
      *(void *)((char *)v226 + *(int *)(v228 + 28)) = *(void *)((char *)v227 + *(int *)(v228 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v229 + 56))(v226, 0, 1, v228);
    }
    uint64_t v231 = v10[9];
    uint64_t v232 = &v208[v231];
    uint64_t v233 = &v209[v231];
    *(void *)uint64_t v232 = *(void *)v233;
    v232[8] = v233[8];
    uint64_t v234 = v10[10];
    uint64_t v235 = &v208[v234];
    uint64_t v236 = &v209[v234];
    if (v284(&v209[v234], 1, v214))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v235, v236, *(void *)(*(void *)(v237 - 8) + 64));
      uint64_t v238 = v285;
    }
    else
    {
      uint64_t v238 = v285;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v285 + 32))(v235, v236, v214);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v285 + 56))(v235, 0, 1, v214);
    }
    uint64_t v239 = v10[11];
    uint64_t v240 = &v208[v239];
    uint64_t v241 = &v209[v239];
    *(void *)uint64_t v240 = *(void *)v241;
    v240[8] = v241[8];
    uint64_t v242 = v10[12];
    long long v243 = &v208[v242];
    uint64_t v244 = &v209[v242];
    if (v284(&v209[v242], 1, v214))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v238 + 32))(v243, v244, v214);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v238 + 56))(v243, 0, 1, v214);
    }
    uint64_t v246 = v10[13];
    uint64_t v247 = &v208[v246];
    uint64_t v248 = &v209[v246];
    *(void *)uint64_t v247 = *(void *)v248;
    v247[8] = v248[8];
    uint64_t v249 = v10[14];
    uint64_t v250 = &v208[v249];
    uint64_t v251 = &v209[v249];
    if (v284(&v209[v249], 1, v214))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v250, v251, *(void *)(*(void *)(v252 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v238 + 32))(v250, v251, v214);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v238 + 56))(v250, 0, 1, v214);
    }
    uint64_t v253 = v10[15];
    uint64_t v254 = &v208[v253];
    uint64_t v255 = &v209[v253];
    *(void *)uint64_t v254 = *(void *)v255;
    v254[8] = v255[8];
    uint64_t v256 = v10[16];
    uint64_t v257 = &v208[v256];
    uint64_t v258 = &v209[v256];
    if (v284(&v209[v256], 1, v214))
    {
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v257, v258, *(void *)(*(void *)(v259 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v238 + 32))(v257, v258, v214);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v238 + 56))(v257, 0, 1, v214);
    }
    uint64_t v260 = v10[17];
    uint64_t v261 = &v208[v260];
    uint64_t v262 = &v209[v260];
    long long v263 = *((_OWORD *)v262 + 1);
    *(_OWORD *)uint64_t v261 = *(_OWORD *)v262;
    *((_OWORD *)v261 + 1) = v263;
    *((void *)v261 + 4) = *((void *)v262 + 4);
    uint64_t v264 = v10[18];
    uint64_t v265 = &v208[v264];
    uint64_t v266 = &v209[v264];
    v265[8] = v266[8];
    *(void *)uint64_t v265 = *(void *)v266;
    uint64_t v267 = v10[19];
    uint64_t v268 = &v208[v267];
    long long v269 = &v209[v267];
    uint64_t v270 = sub_1C1516D2C();
    uint64_t v271 = *(void *)(v270 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v271 + 48))(v269, 1, v270))
    {
      sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
      memcpy(v268, v269, *(void *)(*(void *)(v272 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v271 + 32))(v268, v269, v270);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v271 + 56))(v268, 0, 1, v270);
    }
    uint64_t v4 = v287;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v286 + 56))(v208, 0, 1, v10);
  }
  uint64_t v273 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(v4 + a3[15]);
  *(unsigned char *)(a1 + v273) = *(unsigned char *)(v4 + v273);
  uint64_t v274 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(v4 + a3[17]);
  *(void *)(a1 + v274) = *(void *)(v4 + v274);
  uint64_t v275 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(v4 + a3[19]);
  *(unsigned char *)(a1 + v275) = *(unsigned char *)(v4 + v275);
  *(_WORD *)(a1 + a3[21]) = *(_WORD *)(v4 + a3[21]);
  return a1;
}

void *assignWithTake for FeedClusteringRequest(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRelease();
  v5[1] = v4[1];
  swift_bridgeObjectRelease();
  v5[2] = v4[2];
  swift_unknownObjectRelease();
  v5[3] = v4[3];
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + 32) = *((unsigned char *)v4 + 32);
  v5[5] = v4[5];
  uint64_t v6 = a3[10];
  uint64_t v7 = (char *)v5 + v6;
  uint64_t v8 = (char *)v4 + v6;
  uint64_t v9 = (int *)type metadata accessor for FeedClusteringOptions(0);
  uint64_t v622 = *((void *)v9 - 1);
  uint64_t v10 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v622 + 48);
  int v11 = v10(v7, 1, v9);
  int v12 = v10(v8, 1, v9);
  uint64_t v628 = a3;
  uint64_t v629 = v5;
  v627 = v4;
  uint64_t v624 = v10;
  if (!v11)
  {
    if (v12)
    {
      sub_1C0934780((uint64_t)v7, type metadata accessor for FeedClusteringOptions);
      goto LABEL_7;
    }
    *(void *)uint64_t v7 = *(void *)v8;
    v7[8] = v8[8];
    uint64_t v21 = v9[5];
    uint64_t v22 = &v7[v21];
    uint64_t v23 = &v8[v21];
    uint64_t v24 = sub_1C1516D9C();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48);
    int v27 = v26(v22, 1, v24);
    v615 = v26;
    int v28 = v26(v23, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        goto LABEL_37;
      }
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_37:
        uint64_t v84 = v9[6];
        uint64_t v85 = &v7[v84];
        uint64_t v86 = &v8[v84];
        *(void *)uint64_t v85 = *(void *)v86;
        v85[8] = v86[8];
        uint64_t v87 = v9[7];
        long long v88 = &v7[v87];
        uint64_t v89 = &v8[v87];
        int v90 = v26(&v7[v87], 1, v24);
        int v91 = v26(v89, 1, v24);
        uint64_t v612 = v25;
        if (v90)
        {
          if (!v91)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 32))(v88, v89, v24);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(v88, 0, 1, v24);
            goto LABEL_43;
          }
        }
        else
        {
          if (!v91)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 40))(v88, v89, v24);
LABEL_43:
            uint64_t v93 = v9[8];
            uint64_t v94 = &v7[v93];
            uint64_t v95 = &v8[v93];
            uint64_t v96 = type metadata accessor for FeedGroupBundleArticleQuotas();
            uint64_t v609 = *(void *)(v96 - 8);
            uint64_t v97 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v609 + 48);
            int v98 = v97(v94, 1, v96);
            int v99 = v97(v95, 1, v96);
            if (v98)
            {
              if (!v99)
              {
                *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
                (*(void (**)(char *, char *, uint64_t))(v612 + 32))(&v94[*(int *)(v96 + 24)], &v95[*(int *)(v96 + 24)], v24);
                *(void *)&v94[*(int *)(v96 + 28)] = *(void *)&v95[*(int *)(v96 + 28)];
                (*(void (**)(char *, void, uint64_t, uint64_t))(v609 + 56))(v94, 0, 1, v96);
                goto LABEL_49;
              }
            }
            else
            {
              if (!v99)
              {
                *(void *)uint64_t v94 = *(void *)v95;
                *((void *)v94 + 1) = *((void *)v95 + 1);
                swift_bridgeObjectRelease();
                (*(void (**)(char *, char *, uint64_t))(v612 + 40))(&v94[*(int *)(v96 + 24)], &v95[*(int *)(v96 + 24)], v24);
                *(void *)&v94[*(int *)(v96 + 28)] = *(void *)&v95[*(int *)(v96 + 28)];
                swift_bridgeObjectRelease();
LABEL_49:
                uint64_t v10 = v624;
                uint64_t v101 = v9[9];
                uint64_t v102 = &v7[v101];
                uint64_t v103 = &v8[v101];
                *(void *)uint64_t v102 = *(void *)v103;
                v102[8] = v103[8];
                uint64_t v104 = v9[10];
                uint64_t v105 = &v7[v104];
                uint64_t v106 = &v8[v104];
                int v107 = v615(&v7[v104], 1, v24);
                int v108 = v615(v106, 1, v24);
                if (v107)
                {
                  if (!v108)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v612 + 32))(v105, v106, v24);
                    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v612 + 56))(v105, 0, 1, v24);
                    goto LABEL_55;
                  }
                }
                else
                {
                  if (!v108)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v612 + 40))(v105, v106, v24);
LABEL_55:
                    uint64_t v110 = v9[11];
                    uint64_t v111 = &v7[v110];
                    uint64_t v112 = &v8[v110];
                    *(void *)uint64_t v111 = *(void *)v112;
                    v111[8] = v112[8];
                    uint64_t v113 = v9[12];
                    uint64_t v114 = &v7[v113];
                    uint64_t v115 = &v8[v113];
                    int v116 = v615(&v7[v113], 1, v24);
                    int v117 = v615(v115, 1, v24);
                    if (v116)
                    {
                      if (!v117)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v612 + 32))(v114, v115, v24);
                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v612 + 56))(v114, 0, 1, v24);
                        goto LABEL_61;
                      }
                    }
                    else
                    {
                      if (!v117)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v612 + 40))(v114, v115, v24);
LABEL_61:
                        uint64_t v119 = v9[13];
                        uint64_t v120 = &v7[v119];
                        uint64_t v121 = &v8[v119];
                        *(void *)uint64_t v120 = *(void *)v121;
                        v120[8] = v121[8];
                        uint64_t v122 = v9[14];
                        uint64_t v123 = &v7[v122];
                        uint64_t v124 = &v8[v122];
                        int v125 = v615(&v7[v122], 1, v24);
                        int v126 = v615(v124, 1, v24);
                        if (v125)
                        {
                          if (!v126)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v612 + 32))(v123, v124, v24);
                            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v612 + 56))(v123, 0, 1, v24);
                            goto LABEL_67;
                          }
                        }
                        else
                        {
                          if (!v126)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v612 + 40))(v123, v124, v24);
LABEL_67:
                            uint64_t v128 = v9[15];
                            long long v129 = &v7[v128];
                            uint64_t v130 = &v8[v128];
                            *(void *)long long v129 = *(void *)v130;
                            v129[8] = v130[8];
                            uint64_t v131 = v9[16];
                            uint64_t v132 = &v7[v131];
                            uint64_t v133 = &v8[v131];
                            int v134 = v615(&v7[v131], 1, v24);
                            int v135 = v615(v133, 1, v24);
                            if (v134)
                            {
                              if (!v135)
                              {
                                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v612 + 32))(v132, v133, v24);
                                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v612 + 56))(v132, 0, 1, v24);
                                goto LABEL_73;
                              }
                            }
                            else
                            {
                              if (!v135)
                              {
                                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v612 + 40))(v132, v133, v24);
LABEL_73:
                                uint64_t v137 = v9[17];
                                uint64_t v138 = (uint64_t)&v7[v137];
                                uint64_t v139 = &v8[v137];
                                if (*(void *)&v7[v137 + 32] != 1)
                                {
                                  uint64_t v140 = *((void *)v139 + 4);
                                  if (v140 != 1)
                                  {
                                    *(void *)uint64_t v138 = *(void *)v139;
                                    *(unsigned char *)(v138 + 8) = v139[8];
                                    *(void *)(v138 + 16) = *((void *)v139 + 2);
                                    *(unsigned char *)(v138 + 24) = v139[24];
                                    *(void *)(v138 + 32) = v140;
                                    swift_bridgeObjectRelease();
LABEL_78:
                                    uint64_t v142 = v9[18];
                                    uint64_t v143 = &v7[v142];
                                    uint64_t v144 = &v8[v142];
                                    *(void *)uint64_t v143 = *(void *)v144;
                                    v143[8] = v144[8];
                                    uint64_t v145 = v9[19];
                                    int v146 = &v7[v145];
                                    uint64_t v147 = &v8[v145];
                                    uint64_t v148 = sub_1C1516D2C();
                                    uint64_t v149 = *(void *)(v148 - 8);
                                    uint64_t v150 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v149 + 48);
                                    int v151 = v150(v146, 1, v148);
                                    int v152 = v150(v147, 1, v148);
                                    if (v151)
                                    {
                                      a3 = v628;
                                      uint64_t v5 = v629;
                                      if (!v152)
                                      {
                                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v149 + 32))(v146, v147, v148);
                                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v149 + 56))(v146, 0, 1, v148);
LABEL_84:
                                        uint64_t v4 = v627;
                                        goto LABEL_85;
                                      }
                                    }
                                    else
                                    {
                                      a3 = v628;
                                      uint64_t v5 = v629;
                                      if (!v152)
                                      {
                                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v149 + 40))(v146, v147, v148);
                                        goto LABEL_84;
                                      }
                                      (*(void (**)(unsigned char *, uint64_t))(v149 + 8))(v146, v148);
                                    }
                                    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
                                    memcpy(v146, v147, *(void *)(*(void *)(v153 - 8) + 64));
                                    goto LABEL_84;
                                  }
                                  sub_1C0921044(v138);
                                }
                                long long v141 = *((_OWORD *)v139 + 1);
                                *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
                                *(_OWORD *)(v138 + 16) = v141;
                                *(void *)(v138 + 32) = *((void *)v139 + 4);
                                goto LABEL_78;
                              }
                              (*(void (**)(unsigned char *, uint64_t))(v612 + 8))(v132, v24);
                            }
                            sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                            memcpy(v132, v133, *(void *)(*(void *)(v136 - 8) + 64));
                            goto LABEL_73;
                          }
                          (*(void (**)(unsigned char *, uint64_t))(v612 + 8))(v123, v24);
                        }
                        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                        memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
                        goto LABEL_67;
                      }
                      (*(void (**)(unsigned char *, uint64_t))(v612 + 8))(v114, v24);
                    }
                    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                    memcpy(v114, v115, *(void *)(*(void *)(v118 - 8) + 64));
                    goto LABEL_61;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v612 + 8))(v105, v24);
                }
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
                goto LABEL_55;
              }
              sub_1C0934780((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
            }
            sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
            memcpy(v94, v95, *(void *)(*(void *)(v100 - 8) + 64));
            goto LABEL_49;
          }
          (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v88, v24);
        }
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
        goto LABEL_43;
      }
      (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v22, v24);
    }
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v22, v23, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_37;
  }
  if (v12)
  {
LABEL_7:
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_85;
  }
  *(void *)uint64_t v7 = *(void *)v8;
  v7[8] = v8[8];
  uint64_t v13 = v9[5];
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  uint64_t v16 = sub_1C1516D9C();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v29 = v9[6];
  uint64_t v30 = &v7[v29];
  uint64_t v31 = &v8[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  uint64_t v32 = v9[7];
  uint64_t v33 = &v7[v32];
  uint64_t v34 = &v8[v32];
  uint64_t v616 = v18;
  if (v18(&v8[v32], 1, v16))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v33, v34, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v33, 0, 1, v16);
  }
  uint64_t v36 = v9[8];
  uint64_t v37 = &v7[v36];
  uint64_t v38 = &v8[v36];
  uint64_t v39 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    *uint64_t v37 = *v38;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)v37 + *(int *)(v39 + 24), (char *)v38 + *(int *)(v39 + 24), v16);
    *(void *)((char *)v37 + *(int *)(v39 + 28)) = *(void *)((char *)v38 + *(int *)(v39 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  uint64_t v42 = v9[9];
  uint64_t v43 = &v7[v42];
  uint64_t v44 = &v8[v42];
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v44[8];
  uint64_t v45 = v9[10];
  uint64_t v46 = &v7[v45];
  uint64_t v47 = &v8[v45];
  uint64_t v10 = v624;
  if (v616(&v8[v45], 1, v16))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v46, v47, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v46, 0, 1, v16);
  }
  uint64_t v49 = v9[11];
  uint64_t v50 = &v7[v49];
  uint64_t v51 = &v8[v49];
  *(void *)uint64_t v50 = *(void *)v51;
  v50[8] = v51[8];
  uint64_t v52 = v9[12];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  if (v616(&v8[v52], 1, v16))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v53, v54, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v53, 0, 1, v16);
  }
  uint64_t v56 = v9[13];
  uint64_t v57 = &v7[v56];
  uint64_t v58 = &v8[v56];
  *(void *)uint64_t v57 = *(void *)v58;
  v57[8] = v58[8];
  uint64_t v59 = v9[14];
  uint64_t v60 = &v7[v59];
  uint64_t v61 = &v8[v59];
  if (v616(&v8[v59], 1, v16))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v60, v61, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v60, 0, 1, v16);
  }
  uint64_t v63 = v9[15];
  uint64_t v64 = &v7[v63];
  long long v65 = &v8[v63];
  *(void *)uint64_t v64 = *(void *)v65;
  v64[8] = v65[8];
  uint64_t v66 = v9[16];
  uint64_t v67 = &v7[v66];
  uint64_t v68 = &v8[v66];
  if (v616(&v8[v66], 1, v16))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v67, v68, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v67, 0, 1, v16);
  }
  uint64_t v4 = v627;
  uint64_t v70 = v9[17];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  long long v73 = *((_OWORD *)v72 + 1);
  *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
  *((_OWORD *)v71 + 1) = v73;
  *((void *)v71 + 4) = *((void *)v72 + 4);
  uint64_t v74 = v9[18];
  uint64_t v75 = &v7[v74];
  uint64_t v76 = &v8[v74];
  v75[8] = v76[8];
  *(void *)uint64_t v75 = *(void *)v76;
  uint64_t v77 = v9[19];
  uint64_t v78 = &v7[v77];
  uint64_t v79 = &v8[v77];
  uint64_t v80 = sub_1C1516D2C();
  uint64_t v81 = *(void *)(v80 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v81 + 32))(v78, v79, v80);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  }
  a3 = v628;
  uint64_t v5 = v629;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v622 + 56))(v7, 0, 1, v9);
LABEL_85:
  uint64_t v154 = a3[11];
  uint64_t v155 = (char *)v5 + v154;
  int v156 = (char *)v4 + v154;
  int v157 = v10((unsigned char *)v5 + v154, 1, v9);
  int v158 = v10(v156, 1, v9);
  if (!v157)
  {
    if (v158)
    {
      sub_1C0934780((uint64_t)v155, type metadata accessor for FeedClusteringOptions);
      goto LABEL_91;
    }
    *(void *)uint64_t v155 = *(void *)v156;
    v155[8] = v156[8];
    uint64_t v167 = v9[5];
    uint64_t v168 = &v155[v167];
    uint64_t v169 = &v156[v167];
    uint64_t v170 = sub_1C1516D9C();
    uint64_t v171 = *(void *)(v170 - 8);
    uint64_t v172 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v171 + 48);
    int v173 = v172(v168, 1, v170);
    uint64_t v617 = v172;
    int v174 = v172(v169, 1, v170);
    if (v173)
    {
      if (!v174)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v171 + 32))(v168, v169, v170);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v171 + 56))(v168, 0, 1, v170);
        goto LABEL_121;
      }
    }
    else
    {
      if (!v174)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v171 + 40))(v168, v169, v170);
LABEL_121:
        uint64_t v230 = v9[6];
        uint64_t v231 = &v155[v230];
        uint64_t v232 = &v156[v230];
        *(void *)uint64_t v231 = *(void *)v232;
        v231[8] = v232[8];
        uint64_t v233 = v9[7];
        uint64_t v234 = &v155[v233];
        uint64_t v235 = &v156[v233];
        int v236 = v172(&v155[v233], 1, v170);
        int v237 = v172(v235, 1, v170);
        uint64_t v613 = v171;
        if (v236)
        {
          if (!v237)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v171 + 32))(v234, v235, v170);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v171 + 56))(v234, 0, 1, v170);
            goto LABEL_127;
          }
        }
        else
        {
          if (!v237)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v171 + 40))(v234, v235, v170);
LABEL_127:
            uint64_t v239 = v9[8];
            uint64_t v240 = &v155[v239];
            uint64_t v241 = &v156[v239];
            uint64_t v242 = type metadata accessor for FeedGroupBundleArticleQuotas();
            uint64_t v610 = *(void *)(v242 - 8);
            long long v243 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v610 + 48);
            int v244 = v243(v240, 1, v242);
            int v245 = v243(v241, 1, v242);
            if (v244)
            {
              uint64_t v246 = v613;
              if (!v245)
              {
                *(_OWORD *)uint64_t v240 = *(_OWORD *)v241;
                (*(void (**)(char *, char *, uint64_t))(v613 + 32))(&v240[*(int *)(v242 + 24)], &v241[*(int *)(v242 + 24)], v170);
                *(void *)&v240[*(int *)(v242 + 28)] = *(void *)&v241[*(int *)(v242 + 28)];
                (*(void (**)(char *, void, uint64_t, uint64_t))(v610 + 56))(v240, 0, 1, v242);
                goto LABEL_133;
              }
            }
            else
            {
              uint64_t v246 = v613;
              if (!v245)
              {
                *(void *)uint64_t v240 = *(void *)v241;
                *((void *)v240 + 1) = *((void *)v241 + 1);
                swift_bridgeObjectRelease();
                (*(void (**)(char *, char *, uint64_t))(v613 + 40))(&v240[*(int *)(v242 + 24)], &v241[*(int *)(v242 + 24)], v170);
                *(void *)&v240[*(int *)(v242 + 28)] = *(void *)&v241[*(int *)(v242 + 28)];
                swift_bridgeObjectRelease();
LABEL_133:
                uint64_t v248 = v9[9];
                uint64_t v249 = &v155[v248];
                uint64_t v250 = &v156[v248];
                *(void *)uint64_t v249 = *(void *)v250;
                v249[8] = v250[8];
                uint64_t v251 = v9[10];
                uint64_t v252 = &v155[v251];
                uint64_t v253 = &v156[v251];
                int v254 = v617(&v155[v251], 1, v170);
                int v255 = v617(v253, 1, v170);
                if (v254)
                {
                  if (!v255)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v246 + 32))(v252, v253, v170);
                    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v246 + 56))(v252, 0, 1, v170);
                    goto LABEL_139;
                  }
                }
                else
                {
                  if (!v255)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v246 + 40))(v252, v253, v170);
LABEL_139:
                    uint64_t v257 = v9[11];
                    uint64_t v258 = &v155[v257];
                    uint64_t v259 = &v156[v257];
                    *(void *)uint64_t v258 = *(void *)v259;
                    v258[8] = v259[8];
                    uint64_t v260 = v9[12];
                    uint64_t v261 = &v155[v260];
                    uint64_t v262 = &v156[v260];
                    int v263 = v617(&v155[v260], 1, v170);
                    int v264 = v617(v262, 1, v170);
                    if (v263)
                    {
                      if (!v264)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v246 + 32))(v261, v262, v170);
                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v246 + 56))(v261, 0, 1, v170);
                        goto LABEL_145;
                      }
                    }
                    else
                    {
                      if (!v264)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v246 + 40))(v261, v262, v170);
LABEL_145:
                        uint64_t v266 = v9[13];
                        uint64_t v267 = &v155[v266];
                        uint64_t v268 = &v156[v266];
                        *(void *)uint64_t v267 = *(void *)v268;
                        v267[8] = v268[8];
                        uint64_t v269 = v9[14];
                        uint64_t v270 = &v155[v269];
                        uint64_t v271 = &v156[v269];
                        int v272 = v617(&v155[v269], 1, v170);
                        int v273 = v617(v271, 1, v170);
                        if (v272)
                        {
                          if (!v273)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v246 + 32))(v270, v271, v170);
                            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v246 + 56))(v270, 0, 1, v170);
                            goto LABEL_151;
                          }
                        }
                        else
                        {
                          if (!v273)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v246 + 40))(v270, v271, v170);
LABEL_151:
                            uint64_t v275 = v9[15];
                            uint64_t v276 = &v155[v275];
                            uint64_t v277 = &v156[v275];
                            *(void *)uint64_t v276 = *(void *)v277;
                            v276[8] = v277[8];
                            uint64_t v278 = v9[16];
                            uint64_t v279 = &v155[v278];
                            uint64_t v280 = &v156[v278];
                            int v281 = v617(&v155[v278], 1, v170);
                            int v282 = v617(v280, 1, v170);
                            if (v281)
                            {
                              uint64_t v10 = v624;
                              if (!v282)
                              {
                                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v246 + 32))(v279, v280, v170);
                                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v246 + 56))(v279, 0, 1, v170);
                                goto LABEL_157;
                              }
                            }
                            else
                            {
                              uint64_t v10 = v624;
                              if (!v282)
                              {
                                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v246 + 40))(v279, v280, v170);
LABEL_157:
                                uint64_t v284 = v9[17];
                                uint64_t v285 = (uint64_t)&v155[v284];
                                uint64_t v286 = &v156[v284];
                                if (*(void *)&v155[v284 + 32] != 1)
                                {
                                  uint64_t v287 = *((void *)v286 + 4);
                                  if (v287 != 1)
                                  {
                                    *(void *)uint64_t v285 = *(void *)v286;
                                    *(unsigned char *)(v285 + 8) = v286[8];
                                    *(void *)(v285 + 16) = *((void *)v286 + 2);
                                    *(unsigned char *)(v285 + 24) = v286[24];
                                    *(void *)(v285 + 32) = v287;
                                    swift_bridgeObjectRelease();
LABEL_162:
                                    uint64_t v289 = v9[18];
                                    int v290 = &v155[v289];
                                    int v291 = &v156[v289];
                                    *(void *)int v290 = *(void *)v291;
                                    v290[8] = v291[8];
                                    uint64_t v292 = v9[19];
                                    uint64_t v293 = &v155[v292];
                                    uint64_t v294 = &v156[v292];
                                    uint64_t v295 = sub_1C1516D2C();
                                    uint64_t v296 = *(void *)(v295 - 8);
                                    uint64_t v297 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v296 + 48);
                                    int v298 = v297(v293, 1, v295);
                                    int v299 = v297(v294, 1, v295);
                                    if (v298)
                                    {
                                      a3 = v628;
                                      uint64_t v5 = v629;
                                      if (!v299)
                                      {
                                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v296 + 32))(v293, v294, v295);
                                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v296 + 56))(v293, 0, 1, v295);
LABEL_168:
                                        uint64_t v4 = v627;
                                        goto LABEL_169;
                                      }
                                    }
                                    else
                                    {
                                      a3 = v628;
                                      uint64_t v5 = v629;
                                      if (!v299)
                                      {
                                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v296 + 40))(v293, v294, v295);
                                        goto LABEL_168;
                                      }
                                      (*(void (**)(unsigned char *, uint64_t))(v296 + 8))(v293, v295);
                                    }
                                    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
                                    memcpy(v293, v294, *(void *)(*(void *)(v300 - 8) + 64));
                                    goto LABEL_168;
                                  }
                                  sub_1C0921044(v285);
                                }
                                long long v288 = *((_OWORD *)v286 + 1);
                                *(_OWORD *)uint64_t v285 = *(_OWORD *)v286;
                                *(_OWORD *)(v285 + 16) = v288;
                                *(void *)(v285 + 32) = *((void *)v286 + 4);
                                goto LABEL_162;
                              }
                              (*(void (**)(unsigned char *, uint64_t))(v246 + 8))(v279, v170);
                            }
                            sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                            memcpy(v279, v280, *(void *)(*(void *)(v283 - 8) + 64));
                            goto LABEL_157;
                          }
                          (*(void (**)(unsigned char *, uint64_t))(v246 + 8))(v270, v170);
                        }
                        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                        memcpy(v270, v271, *(void *)(*(void *)(v274 - 8) + 64));
                        goto LABEL_151;
                      }
                      (*(void (**)(unsigned char *, uint64_t))(v246 + 8))(v261, v170);
                    }
                    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                    memcpy(v261, v262, *(void *)(*(void *)(v265 - 8) + 64));
                    goto LABEL_145;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v246 + 8))(v252, v170);
                }
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v252, v253, *(void *)(*(void *)(v256 - 8) + 64));
                goto LABEL_139;
              }
              sub_1C0934780((uint64_t)v240, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
            }
            sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
            memcpy(v240, v241, *(void *)(*(void *)(v247 - 8) + 64));
            goto LABEL_133;
          }
          (*(void (**)(unsigned char *, uint64_t))(v171 + 8))(v234, v170);
        }
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v234, v235, *(void *)(*(void *)(v238 - 8) + 64));
        goto LABEL_127;
      }
      (*(void (**)(unsigned char *, uint64_t))(v171 + 8))(v168, v170);
    }
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v168, v169, *(void *)(*(void *)(v229 - 8) + 64));
    goto LABEL_121;
  }
  if (v158)
  {
LABEL_91:
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v155, v156, *(void *)(*(void *)(v166 - 8) + 64));
    goto LABEL_169;
  }
  *(void *)uint64_t v155 = *(void *)v156;
  v155[8] = v156[8];
  uint64_t v159 = v9[5];
  uint64_t v160 = &v155[v159];
  uint64_t v161 = &v156[v159];
  uint64_t v162 = sub_1C1516D9C();
  uint64_t v163 = *(void *)(v162 - 8);
  uint64_t v164 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v163 + 48);
  if (v164(v161, 1, v162))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v160, v161, *(void *)(*(void *)(v165 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v163 + 32))(v160, v161, v162);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v163 + 56))(v160, 0, 1, v162);
  }
  uint64_t v175 = v9[6];
  uint64_t v176 = &v155[v175];
  uint64_t v177 = &v156[v175];
  *(void *)uint64_t v176 = *(void *)v177;
  v176[8] = v177[8];
  uint64_t v178 = v9[7];
  uint64_t v179 = &v155[v178];
  uint64_t v180 = &v156[v178];
  v618 = v164;
  if (v164(&v156[v178], 1, v162))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v179, v180, *(void *)(*(void *)(v181 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v163 + 32))(v179, v180, v162);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v163 + 56))(v179, 0, 1, v162);
  }
  uint64_t v182 = v9[8];
  uint64_t v183 = &v155[v182];
  uint64_t v184 = &v156[v182];
  uint64_t v185 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v186 = *(void *)(v185 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v186 + 48))(v184, 1, v185))
  {
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v183, v184, *(void *)(*(void *)(v187 - 8) + 64));
  }
  else
  {
    *uint64_t v183 = *v184;
    (*(void (**)(char *, char *, uint64_t))(v163 + 32))((char *)v183 + *(int *)(v185 + 24), (char *)v184 + *(int *)(v185 + 24), v162);
    *(void *)((char *)v183 + *(int *)(v185 + 28)) = *(void *)((char *)v184 + *(int *)(v185 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v186 + 56))(v183, 0, 1, v185);
  }
  uint64_t v188 = v9[9];
  uint64_t v189 = &v155[v188];
  uint64_t v190 = &v156[v188];
  *(void *)uint64_t v189 = *(void *)v190;
  v189[8] = v190[8];
  uint64_t v191 = v9[10];
  int v192 = &v155[v191];
  uint64_t v193 = &v156[v191];
  uint64_t v10 = v624;
  if (v618(&v156[v191], 1, v162))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v192, v193, *(void *)(*(void *)(v194 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v163 + 32))(v192, v193, v162);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v163 + 56))(v192, 0, 1, v162);
  }
  uint64_t v195 = v9[11];
  uint64_t v196 = &v155[v195];
  long long v197 = &v156[v195];
  *(void *)uint64_t v196 = *(void *)v197;
  v196[8] = v197[8];
  uint64_t v198 = v9[12];
  uint64_t v199 = &v155[v198];
  uint64_t v200 = &v156[v198];
  if (v618(&v156[v198], 1, v162))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v199, v200, *(void *)(*(void *)(v201 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v163 + 32))(v199, v200, v162);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v163 + 56))(v199, 0, 1, v162);
  }
  uint64_t v202 = v9[13];
  uint64_t v203 = &v155[v202];
  uint64_t v204 = &v156[v202];
  *(void *)uint64_t v203 = *(void *)v204;
  v203[8] = v204[8];
  uint64_t v205 = v9[14];
  uint64_t v206 = &v155[v205];
  uint64_t v207 = &v156[v205];
  if (v618(&v156[v205], 1, v162))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v163 + 32))(v206, v207, v162);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v163 + 56))(v206, 0, 1, v162);
  }
  uint64_t v209 = v9[15];
  uint64_t v210 = &v155[v209];
  uint64_t v211 = &v156[v209];
  *(void *)uint64_t v210 = *(void *)v211;
  v210[8] = v211[8];
  uint64_t v212 = v9[16];
  int v213 = &v155[v212];
  uint64_t v214 = &v156[v212];
  if (v618(&v156[v212], 1, v162))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v213, v214, *(void *)(*(void *)(v215 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v163 + 32))(v213, v214, v162);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v163 + 56))(v213, 0, 1, v162);
  }
  uint64_t v4 = v627;
  uint64_t v216 = v9[17];
  uint64_t v217 = &v155[v216];
  uint64_t v218 = &v156[v216];
  long long v219 = *((_OWORD *)v218 + 1);
  *(_OWORD *)uint64_t v217 = *(_OWORD *)v218;
  *((_OWORD *)v217 + 1) = v219;
  *((void *)v217 + 4) = *((void *)v218 + 4);
  uint64_t v220 = v9[18];
  uint64_t v221 = &v155[v220];
  uint64_t v222 = &v156[v220];
  v221[8] = v222[8];
  *(void *)uint64_t v221 = *(void *)v222;
  uint64_t v223 = v9[19];
  uint64_t v224 = &v155[v223];
  uint64_t v225 = &v156[v223];
  uint64_t v226 = sub_1C1516D2C();
  uint64_t v227 = *(void *)(v226 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v227 + 48))(v225, 1, v226))
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v224, v225, *(void *)(*(void *)(v228 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v227 + 32))(v224, v225, v226);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v227 + 56))(v224, 0, 1, v226);
  }
  a3 = v628;
  uint64_t v5 = v629;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v622 + 56))(v155, 0, 1, v9);
LABEL_169:
  *(void *)((char *)v5 + a3[12]) = *(void *)((char *)v4 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v301 = a3[13];
  uint64_t v302 = (char *)v5 + v301;
  uint64_t v303 = (char *)v4 + v301;
  int v304 = v10((unsigned char *)v5 + v301, 1, v9);
  int v305 = v10(v303, 1, v9);
  if (!v304)
  {
    if (v305)
    {
      sub_1C0934780((uint64_t)v302, type metadata accessor for FeedClusteringOptions);
      goto LABEL_175;
    }
    *(void *)uint64_t v302 = *(void *)v303;
    v302[8] = v303[8];
    uint64_t v314 = v9[5];
    int v315 = &v302[v314];
    int v316 = &v303[v314];
    uint64_t v317 = sub_1C1516D9C();
    uint64_t v318 = *(void *)(v317 - 8);
    uint64_t v319 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v318 + 48);
    int v320 = v319(v315, 1, v317);
    v614 = v319;
    uint64_t v619 = v317;
    int v321 = v319(v316, 1, v317);
    if (v320)
    {
      if (v321)
      {
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v315, v316, *(void *)(*(void *)(v322 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v318 + 32))(v315, v316, v317);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v318 + 56))(v315, 0, 1, v317);
      }
    }
    else if (v321)
    {
      (*(void (**)(unsigned char *, uint64_t))(v318 + 8))(v315, v317);
      sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
      memcpy(v315, v316, *(void *)(*(void *)(v377 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v318 + 40))(v315, v316, v317);
    }
    uint64_t v378 = v9[6];
    int v379 = &v302[v378];
    uint64_t v380 = &v303[v378];
    *(void *)int v379 = *(void *)v380;
    v379[8] = v380[8];
    uint64_t v381 = v9[7];
    v382 = &v302[v381];
    uint64_t v383 = &v303[v381];
    int v384 = v319(&v302[v381], 1, v317);
    int v385 = v319(v383, 1, v317);
    uint64_t v611 = v318;
    if (v384)
    {
      if (!v385)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v318 + 32))(v382, v383, v317);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v318 + 56))(v382, 0, 1, v317);
        goto LABEL_228;
      }
    }
    else
    {
      if (!v385)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v318 + 40))(v382, v383, v317);
LABEL_228:
        uint64_t v387 = v9[8];
        uint64_t v388 = &v302[v387];
        uint64_t v389 = &v303[v387];
        uint64_t v390 = type metadata accessor for FeedGroupBundleArticleQuotas();
        uint64_t v391 = *(void *)(v390 - 8);
        uint64_t v392 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v391 + 48);
        int v393 = v392(v388, 1, v390);
        int v394 = v392(v389, 1, v390);
        if (v393)
        {
          uint64_t v395 = v611;
          if (!v394)
          {
            *(_OWORD *)uint64_t v388 = *(_OWORD *)v389;
            uint64_t v396 = v619;
            (*(void (**)(char *, char *, uint64_t))(v611 + 32))(&v388[*(int *)(v390 + 24)], &v389[*(int *)(v390 + 24)], v619);
            *(void *)&v388[*(int *)(v390 + 28)] = *(void *)&v389[*(int *)(v390 + 28)];
            (*(void (**)(char *, void, uint64_t, uint64_t))(v391 + 56))(v388, 0, 1, v390);
            goto LABEL_234;
          }
        }
        else
        {
          uint64_t v395 = v611;
          if (!v394)
          {
            *(void *)uint64_t v388 = *(void *)v389;
            *((void *)v388 + 1) = *((void *)v389 + 1);
            swift_bridgeObjectRelease();
            uint64_t v396 = v619;
            (*(void (**)(char *, char *, uint64_t))(v611 + 40))(&v388[*(int *)(v390 + 24)], &v389[*(int *)(v390 + 24)], v619);
            *(void *)&v388[*(int *)(v390 + 28)] = *(void *)&v389[*(int *)(v390 + 28)];
            swift_bridgeObjectRelease();
LABEL_234:
            uint64_t v398 = v9[9];
            uint64_t v399 = &v302[v398];
            uint64_t v400 = &v303[v398];
            *(void *)uint64_t v399 = *(void *)v400;
            v399[8] = v400[8];
            uint64_t v401 = v9[10];
            uint64_t v402 = &v302[v401];
            uint64_t v403 = &v303[v401];
            uint64_t v404 = v396;
            int v405 = v614(&v302[v401], 1, v396);
            int v406 = v614(v403, 1, v404);
            if (v405)
            {
              if (v406)
              {
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v402, v403, *(void *)(*(void *)(v407 - 8) + 64));
                uint64_t v408 = v619;
              }
              else
              {
                uint64_t v408 = v619;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v395 + 32))(v402, v403, v619);
                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v395 + 56))(v402, 0, 1, v619);
              }
            }
            else
            {
              uint64_t v408 = v619;
              if (v406)
              {
                (*(void (**)(unsigned char *, uint64_t))(v395 + 8))(v402, v619);
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v402, v403, *(void *)(*(void *)(v409 - 8) + 64));
              }
              else
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v395 + 40))(v402, v403, v619);
              }
            }
            uint64_t v410 = v9[11];
            uint64_t v411 = &v302[v410];
            v412 = &v303[v410];
            *(void *)uint64_t v411 = *(void *)v412;
            v411[8] = v412[8];
            uint64_t v413 = v9[12];
            unint64_t v414 = &v302[v413];
            uint64_t v415 = &v303[v413];
            int v416 = v614(&v302[v413], 1, v408);
            int v417 = v614(v415, 1, v408);
            if (v416)
            {
              if (v417)
              {
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v414, v415, *(void *)(*(void *)(v418 - 8) + 64));
                uint64_t v419 = v619;
              }
              else
              {
                uint64_t v419 = v619;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v395 + 32))(v414, v415, v619);
                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v395 + 56))(v414, 0, 1, v619);
              }
            }
            else
            {
              uint64_t v419 = v619;
              if (v417)
              {
                (*(void (**)(unsigned char *, uint64_t))(v395 + 8))(v414, v619);
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v414, v415, *(void *)(*(void *)(v420 - 8) + 64));
              }
              else
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v395 + 40))(v414, v415, v619);
              }
            }
            uint64_t v421 = v9[13];
            uint64_t v422 = &v302[v421];
            uint64_t v423 = &v303[v421];
            *(void *)uint64_t v422 = *(void *)v423;
            v422[8] = v423[8];
            uint64_t v424 = v9[14];
            uint64_t v425 = &v302[v424];
            uint64_t v426 = &v303[v424];
            int v427 = v614(&v302[v424], 1, v419);
            int v428 = v614(v426, 1, v419);
            if (v427)
            {
              if (v428)
              {
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v425, v426, *(void *)(*(void *)(v429 - 8) + 64));
                uint64_t v430 = v619;
              }
              else
              {
                uint64_t v430 = v619;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v395 + 32))(v425, v426, v619);
                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v395 + 56))(v425, 0, 1, v619);
              }
            }
            else
            {
              uint64_t v430 = v619;
              if (v428)
              {
                (*(void (**)(unsigned char *, uint64_t))(v395 + 8))(v425, v619);
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v425, v426, *(void *)(*(void *)(v431 - 8) + 64));
              }
              else
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v395 + 40))(v425, v426, v619);
              }
            }
            uint64_t v432 = v9[15];
            uint64_t v433 = &v302[v432];
            uint64_t v434 = &v303[v432];
            *(void *)uint64_t v433 = *(void *)v434;
            v433[8] = v434[8];
            uint64_t v435 = v9[16];
            uint64_t v436 = &v302[v435];
            uint64_t v437 = &v303[v435];
            int v438 = v614(&v302[v435], 1, v430);
            int v439 = v614(v437, 1, v430);
            if (v438)
            {
              uint64_t v10 = v624;
              if (!v439)
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v395 + 32))(v436, v437, v619);
                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v395 + 56))(v436, 0, 1, v619);
                goto LABEL_263;
              }
            }
            else
            {
              uint64_t v10 = v624;
              if (!v439)
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v395 + 40))(v436, v437, v619);
LABEL_263:
                uint64_t v441 = v9[17];
                uint64_t v442 = (uint64_t)&v302[v441];
                uint64_t v443 = &v303[v441];
                if (*(void *)&v302[v441 + 32] != 1)
                {
                  uint64_t v444 = *((void *)v443 + 4);
                  if (v444 != 1)
                  {
                    *(void *)uint64_t v442 = *(void *)v443;
                    *(unsigned char *)(v442 + 8) = v443[8];
                    *(void *)(v442 + 16) = *((void *)v443 + 2);
                    *(unsigned char *)(v442 + 24) = v443[24];
                    *(void *)(v442 + 32) = v444;
                    swift_bridgeObjectRelease();
LABEL_268:
                    uint64_t v446 = v9[18];
                    uint64_t v447 = &v302[v446];
                    long long v448 = &v303[v446];
                    *(void *)uint64_t v447 = *(void *)v448;
                    v447[8] = v448[8];
                    uint64_t v449 = v9[19];
                    long long v450 = &v302[v449];
                    long long v451 = &v303[v449];
                    uint64_t v452 = sub_1C1516D2C();
                    uint64_t v453 = *(void *)(v452 - 8);
                    uint64_t v454 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v453 + 48);
                    int v455 = v454(v450, 1, v452);
                    int v456 = v454(v451, 1, v452);
                    if (v455)
                    {
                      a3 = v628;
                      uint64_t v5 = v629;
                      if (!v456)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v453 + 32))(v450, v451, v452);
                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v453 + 56))(v450, 0, 1, v452);
LABEL_274:
                        uint64_t v4 = v627;
                        goto LABEL_275;
                      }
                    }
                    else
                    {
                      a3 = v628;
                      uint64_t v5 = v629;
                      if (!v456)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v453 + 40))(v450, v451, v452);
                        goto LABEL_274;
                      }
                      (*(void (**)(unsigned char *, uint64_t))(v453 + 8))(v450, v452);
                    }
                    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
                    memcpy(v450, v451, *(void *)(*(void *)(v457 - 8) + 64));
                    goto LABEL_274;
                  }
                  sub_1C0921044(v442);
                }
                long long v445 = *((_OWORD *)v443 + 1);
                *(_OWORD *)uint64_t v442 = *(_OWORD *)v443;
                *(_OWORD *)(v442 + 16) = v445;
                *(void *)(v442 + 32) = *((void *)v443 + 4);
                goto LABEL_268;
              }
              (*(void (**)(unsigned char *, uint64_t))(v395 + 8))(v436, v619);
            }
            sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
            memcpy(v436, v437, *(void *)(*(void *)(v440 - 8) + 64));
            goto LABEL_263;
          }
          sub_1C0934780((uint64_t)v388, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
        }
        sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v388, v389, *(void *)(*(void *)(v397 - 8) + 64));
        uint64_t v396 = v619;
        goto LABEL_234;
      }
      (*(void (**)(unsigned char *, uint64_t))(v318 + 8))(v382, v317);
    }
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v382, v383, *(void *)(*(void *)(v386 - 8) + 64));
    goto LABEL_228;
  }
  if (v305)
  {
LABEL_175:
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v302, v303, *(void *)(*(void *)(v313 - 8) + 64));
    goto LABEL_275;
  }
  *(void *)uint64_t v302 = *(void *)v303;
  v302[8] = v303[8];
  uint64_t v306 = v9[5];
  uint64_t v307 = &v302[v306];
  uint64_t v308 = &v303[v306];
  uint64_t v309 = sub_1C1516D9C();
  uint64_t v310 = *(void *)(v309 - 8);
  uint64_t v311 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v310 + 48);
  if (v311(v308, 1, v309))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v307, v308, *(void *)(*(void *)(v312 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v310 + 32))(v307, v308, v309);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v310 + 56))(v307, 0, 1, v309);
  }
  uint64_t v323 = v9[6];
  uint64_t v324 = &v302[v323];
  uint64_t v325 = &v303[v323];
  *(void *)uint64_t v324 = *(void *)v325;
  v324[8] = v325[8];
  uint64_t v326 = v9[7];
  int v327 = &v302[v326];
  uint64_t v328 = &v303[v326];
  uint64_t v620 = v311;
  if (v311(&v303[v326], 1, v309))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v327, v328, *(void *)(*(void *)(v329 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v310 + 32))(v327, v328, v309);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v310 + 56))(v327, 0, 1, v309);
  }
  uint64_t v330 = v9[8];
  uint64_t v331 = &v302[v330];
  uint64_t v332 = &v303[v330];
  uint64_t v333 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v334 = *(void *)(v333 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v334 + 48))(v332, 1, v333))
  {
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v331, v332, *(void *)(*(void *)(v335 - 8) + 64));
  }
  else
  {
    *uint64_t v331 = *v332;
    (*(void (**)(char *, char *, uint64_t))(v310 + 32))((char *)v331 + *(int *)(v333 + 24), (char *)v332 + *(int *)(v333 + 24), v309);
    *(void *)((char *)v331 + *(int *)(v333 + 28)) = *(void *)((char *)v332 + *(int *)(v333 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v334 + 56))(v331, 0, 1, v333);
  }
  uint64_t v336 = v9[9];
  int v337 = &v302[v336];
  uint64_t v338 = &v303[v336];
  *(void *)int v337 = *(void *)v338;
  v337[8] = v338[8];
  uint64_t v339 = v9[10];
  uint64_t v340 = &v302[v339];
  unint64_t v341 = &v303[v339];
  uint64_t v10 = v624;
  if (v620(&v303[v339], 1, v309))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v340, v341, *(void *)(*(void *)(v342 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v310 + 32))(v340, v341, v309);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v310 + 56))(v340, 0, 1, v309);
  }
  uint64_t v343 = v9[11];
  unint64_t v344 = &v302[v343];
  unint64_t v345 = &v303[v343];
  *(void *)unint64_t v344 = *(void *)v345;
  v344[8] = v345[8];
  uint64_t v346 = v9[12];
  int v347 = &v302[v346];
  uint64_t v348 = &v303[v346];
  if (v620(&v303[v346], 1, v309))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v347, v348, *(void *)(*(void *)(v349 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v310 + 32))(v347, v348, v309);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v310 + 56))(v347, 0, 1, v309);
  }
  uint64_t v350 = v9[13];
  uint64_t v351 = &v302[v350];
  uint64_t v352 = &v303[v350];
  *(void *)uint64_t v351 = *(void *)v352;
  v351[8] = v352[8];
  uint64_t v353 = v9[14];
  long long v354 = &v302[v353];
  long long v355 = &v303[v353];
  if (v620(&v303[v353], 1, v309))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v354, v355, *(void *)(*(void *)(v356 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v310 + 32))(v354, v355, v309);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v310 + 56))(v354, 0, 1, v309);
  }
  uint64_t v357 = v9[15];
  uint64_t v358 = &v302[v357];
  uint64_t v359 = &v303[v357];
  *(void *)uint64_t v358 = *(void *)v359;
  v358[8] = v359[8];
  uint64_t v360 = v9[16];
  uint64_t v361 = &v302[v360];
  uint64_t v362 = &v303[v360];
  if (v620(&v303[v360], 1, v309))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v361, v362, *(void *)(*(void *)(v363 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v310 + 32))(v361, v362, v309);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v310 + 56))(v361, 0, 1, v309);
  }
  uint64_t v4 = v627;
  uint64_t v364 = v9[17];
  uint64_t v365 = &v302[v364];
  uint64_t v366 = &v303[v364];
  long long v367 = *((_OWORD *)v366 + 1);
  *(_OWORD *)uint64_t v365 = *(_OWORD *)v366;
  *((_OWORD *)v365 + 1) = v367;
  *((void *)v365 + 4) = *((void *)v366 + 4);
  uint64_t v368 = v9[18];
  uint64_t v369 = &v302[v368];
  uint64_t v370 = &v303[v368];
  v369[8] = v370[8];
  *(void *)uint64_t v369 = *(void *)v370;
  uint64_t v371 = v9[19];
  int v372 = &v302[v371];
  int v373 = &v303[v371];
  uint64_t v374 = sub_1C1516D2C();
  uint64_t v375 = *(void *)(v374 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v375 + 48))(v373, 1, v374))
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v372, v373, *(void *)(*(void *)(v376 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v375 + 32))(v372, v373, v374);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v375 + 56))(v372, 0, 1, v374);
  }
  a3 = v628;
  uint64_t v5 = v629;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v622 + 56))(v302, 0, 1, v9);
LABEL_275:
  uint64_t v458 = a3[14];
  uint64_t v459 = (char *)v5 + v458;
  uint64_t v460 = (char *)v4 + v458;
  int v461 = v10((unsigned char *)v5 + v458, 1, v9);
  int v462 = v10(v460, 1, v9);
  if (!v461)
  {
    if (v462)
    {
      sub_1C0934780((uint64_t)v459, type metadata accessor for FeedClusteringOptions);
      goto LABEL_281;
    }
    *(void *)uint64_t v459 = *(void *)v460;
    v459[8] = v460[8];
    uint64_t v471 = v9[5];
    int v472 = &v459[v471];
    uint64_t v473 = &v460[v471];
    uint64_t v474 = sub_1C1516D9C();
    uint64_t v475 = *(void *)(v474 - 8);
    uint64_t v476 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v475 + 48);
    int v477 = v476(v472, 1, v474);
    int v478 = v476(v473, 1, v474);
    if (v477)
    {
      if (!v478)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v475 + 32))(v472, v473, v474);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v475 + 56))(v472, 0, 1, v474);
        goto LABEL_311;
      }
    }
    else
    {
      if (!v478)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v475 + 40))(v472, v473, v474);
LABEL_311:
        uint64_t v534 = v9[6];
        long long v535 = &v459[v534];
        long long v536 = &v460[v534];
        *(void *)long long v535 = *(void *)v536;
        v535[8] = v536[8];
        uint64_t v537 = v9[7];
        long long v538 = &v459[v537];
        uint64_t v539 = &v460[v537];
        int v540 = v476(&v459[v537], 1, v474);
        int v541 = v476(v539, 1, v474);
        uint64_t v626 = v475;
        v623 = v476;
        if (v540)
        {
          if (!v541)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v475 + 32))(v538, v539, v474);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v475 + 56))(v538, 0, 1, v474);
            goto LABEL_317;
          }
        }
        else
        {
          if (!v541)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v475 + 40))(v538, v539, v474);
LABEL_317:
            uint64_t v543 = v9[8];
            v544 = &v459[v543];
            v545 = &v460[v543];
            uint64_t v546 = type metadata accessor for FeedGroupBundleArticleQuotas();
            uint64_t v621 = *(void *)(v546 - 8);
            uint64_t v547 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v621 + 48);
            int v548 = v547(v544, 1, v546);
            int v549 = v547(v545, 1, v546);
            if (v548)
            {
              uint64_t v550 = v626;
              if (!v549)
              {
                *(_OWORD *)v544 = *(_OWORD *)v545;
                (*(void (**)(char *, char *, uint64_t))(v626 + 32))(&v544[*(int *)(v546 + 24)], &v545[*(int *)(v546 + 24)], v474);
                *(void *)&v544[*(int *)(v546 + 28)] = *(void *)&v545[*(int *)(v546 + 28)];
                (*(void (**)(char *, void, uint64_t, uint64_t))(v621 + 56))(v544, 0, 1, v546);
                goto LABEL_323;
              }
            }
            else
            {
              uint64_t v550 = v626;
              if (!v549)
              {
                *(void *)v544 = *(void *)v545;
                *((void *)v544 + 1) = *((void *)v545 + 1);
                swift_bridgeObjectRelease();
                (*(void (**)(char *, char *, uint64_t))(v626 + 40))(&v544[*(int *)(v546 + 24)], &v545[*(int *)(v546 + 24)], v474);
                *(void *)&v544[*(int *)(v546 + 28)] = *(void *)&v545[*(int *)(v546 + 28)];
                swift_bridgeObjectRelease();
LABEL_323:
                uint64_t v552 = v9[9];
                int v553 = &v459[v552];
                int v554 = &v460[v552];
                *(void *)int v553 = *(void *)v554;
                v553[8] = v554[8];
                uint64_t v555 = v9[10];
                uint64_t v556 = &v459[v555];
                v557 = &v460[v555];
                int v558 = v623(&v459[v555], 1, v474);
                int v559 = v623(v557, 1, v474);
                if (v558)
                {
                  if (!v559)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v550 + 32))(v556, v557, v474);
                    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v550 + 56))(v556, 0, 1, v474);
                    goto LABEL_329;
                  }
                }
                else
                {
                  if (!v559)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v550 + 40))(v556, v557, v474);
LABEL_329:
                    uint64_t v561 = v9[11];
                    uint64_t v562 = &v459[v561];
                    v563 = &v460[v561];
                    *(void *)uint64_t v562 = *(void *)v563;
                    v562[8] = v563[8];
                    uint64_t v564 = v9[12];
                    uint64_t v565 = &v459[v564];
                    uint64_t v566 = &v460[v564];
                    int v567 = v623(&v459[v564], 1, v474);
                    int v568 = v623(v566, 1, v474);
                    if (v567)
                    {
                      if (!v568)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v550 + 32))(v565, v566, v474);
                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v550 + 56))(v565, 0, 1, v474);
                        goto LABEL_335;
                      }
                    }
                    else
                    {
                      if (!v568)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v550 + 40))(v565, v566, v474);
LABEL_335:
                        uint64_t v570 = v9[13];
                        v571 = &v459[v570];
                        v572 = &v460[v570];
                        *(void *)v571 = *(void *)v572;
                        v571[8] = v572[8];
                        uint64_t v573 = v9[14];
                        v574 = &v459[v573];
                        int v575 = &v460[v573];
                        int v576 = v623(&v459[v573], 1, v474);
                        int v577 = v623(v575, 1, v474);
                        if (v576)
                        {
                          if (!v577)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v550 + 32))(v574, v575, v474);
                            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v550 + 56))(v574, 0, 1, v474);
                            goto LABEL_341;
                          }
                        }
                        else
                        {
                          if (!v577)
                          {
                            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v550 + 40))(v574, v575, v474);
LABEL_341:
                            uint64_t v579 = v9[15];
                            uint64_t v580 = &v459[v579];
                            uint64_t v581 = &v460[v579];
                            *(void *)uint64_t v580 = *(void *)v581;
                            v580[8] = v581[8];
                            uint64_t v582 = v9[16];
                            v583 = &v459[v582];
                            uint64_t v584 = &v460[v582];
                            int v585 = v623(&v459[v582], 1, v474);
                            int v586 = v623(v584, 1, v474);
                            if (v585)
                            {
                              if (!v586)
                              {
                                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v550 + 32))(v583, v584, v474);
                                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v550 + 56))(v583, 0, 1, v474);
                                goto LABEL_347;
                              }
                            }
                            else
                            {
                              if (!v586)
                              {
                                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v550 + 40))(v583, v584, v474);
LABEL_347:
                                uint64_t v588 = v9[17];
                                uint64_t v589 = (uint64_t)&v459[v588];
                                uint64_t v590 = &v460[v588];
                                a3 = v628;
                                if (*(void *)&v459[v588 + 32] != 1)
                                {
                                  uint64_t v591 = *((void *)v590 + 4);
                                  if (v591 != 1)
                                  {
                                    *(void *)uint64_t v589 = *(void *)v590;
                                    *(unsigned char *)(v589 + 8) = v590[8];
                                    *(void *)(v589 + 16) = *((void *)v590 + 2);
                                    *(unsigned char *)(v589 + 24) = v590[24];
                                    *(void *)(v589 + 32) = v591;
                                    swift_bridgeObjectRelease();
LABEL_352:
                                    uint64_t v593 = v9[18];
                                    v594 = &v459[v593];
                                    v595 = &v460[v593];
                                    *(void *)v594 = *(void *)v595;
                                    v594[8] = v595[8];
                                    uint64_t v596 = v9[19];
                                    v597 = &v459[v596];
                                    v598 = &v460[v596];
                                    uint64_t v599 = sub_1C1516D2C();
                                    uint64_t v600 = *(void *)(v599 - 8);
                                    v601 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v600 + 48);
                                    int v602 = v601(v597, 1, v599);
                                    int v603 = v601(v598, 1, v599);
                                    if (v602)
                                    {
                                      uint64_t v5 = v629;
                                      if (!v603)
                                      {
                                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v600 + 32))(v597, v598, v599);
                                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v600 + 56))(v597, 0, 1, v599);
LABEL_358:
                                        uint64_t v4 = v627;
                                        goto LABEL_359;
                                      }
                                    }
                                    else
                                    {
                                      uint64_t v5 = v629;
                                      if (!v603)
                                      {
                                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v600 + 40))(v597, v598, v599);
                                        goto LABEL_358;
                                      }
                                      (*(void (**)(unsigned char *, uint64_t))(v600 + 8))(v597, v599);
                                    }
                                    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
                                    memcpy(v597, v598, *(void *)(*(void *)(v604 - 8) + 64));
                                    goto LABEL_358;
                                  }
                                  sub_1C0921044(v589);
                                }
                                long long v592 = *((_OWORD *)v590 + 1);
                                *(_OWORD *)uint64_t v589 = *(_OWORD *)v590;
                                *(_OWORD *)(v589 + 16) = v592;
                                *(void *)(v589 + 32) = *((void *)v590 + 4);
                                goto LABEL_352;
                              }
                              (*(void (**)(unsigned char *, uint64_t))(v550 + 8))(v583, v474);
                            }
                            sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                            memcpy(v583, v584, *(void *)(*(void *)(v587 - 8) + 64));
                            goto LABEL_347;
                          }
                          (*(void (**)(unsigned char *, uint64_t))(v550 + 8))(v574, v474);
                        }
                        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                        memcpy(v574, v575, *(void *)(*(void *)(v578 - 8) + 64));
                        goto LABEL_341;
                      }
                      (*(void (**)(unsigned char *, uint64_t))(v550 + 8))(v565, v474);
                    }
                    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                    memcpy(v565, v566, *(void *)(*(void *)(v569 - 8) + 64));
                    goto LABEL_335;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v550 + 8))(v556, v474);
                }
                sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
                memcpy(v556, v557, *(void *)(*(void *)(v560 - 8) + 64));
                goto LABEL_329;
              }
              sub_1C0934780((uint64_t)v544, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
            }
            sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
            memcpy(v544, v545, *(void *)(*(void *)(v551 - 8) + 64));
            goto LABEL_323;
          }
          (*(void (**)(unsigned char *, uint64_t))(v475 + 8))(v538, v474);
        }
        sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
        memcpy(v538, v539, *(void *)(*(void *)(v542 - 8) + 64));
        goto LABEL_317;
      }
      (*(void (**)(unsigned char *, uint64_t))(v475 + 8))(v472, v474);
    }
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v472, v473, *(void *)(*(void *)(v533 - 8) + 64));
    goto LABEL_311;
  }
  if (v462)
  {
LABEL_281:
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v459, v460, *(void *)(*(void *)(v470 - 8) + 64));
    goto LABEL_359;
  }
  *(void *)uint64_t v459 = *(void *)v460;
  v459[8] = v460[8];
  uint64_t v463 = v9[5];
  uint64_t v464 = &v459[v463];
  uint64_t v465 = &v460[v463];
  uint64_t v466 = sub_1C1516D9C();
  uint64_t v467 = *(void *)(v466 - 8);
  uint64_t v468 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v467 + 48);
  if (v468(v465, 1, v466))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v464, v465, *(void *)(*(void *)(v469 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v467 + 32))(v464, v465, v466);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v467 + 56))(v464, 0, 1, v466);
  }
  uint64_t v479 = v9[6];
  uint64_t v480 = &v459[v479];
  int v481 = &v460[v479];
  *(void *)uint64_t v480 = *(void *)v481;
  v480[8] = v481[8];
  uint64_t v482 = v9[7];
  uint64_t v483 = &v459[v482];
  uint64_t v484 = &v460[v482];
  uint64_t v625 = v468;
  if (v468(&v460[v482], 1, v466))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v483, v484, *(void *)(*(void *)(v485 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v467 + 32))(v483, v484, v466);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v467 + 56))(v483, 0, 1, v466);
  }
  uint64_t v486 = v9[8];
  uint64_t v487 = &v459[v486];
  uint64_t v488 = &v460[v486];
  uint64_t v489 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v490 = *(void *)(v489 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v490 + 48))(v488, 1, v489))
  {
    sub_1C091BD58(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v487, v488, *(void *)(*(void *)(v491 - 8) + 64));
  }
  else
  {
    *uint64_t v487 = *v488;
    (*(void (**)(char *, char *, uint64_t))(v467 + 32))((char *)v487 + *(int *)(v489 + 24), (char *)v488 + *(int *)(v489 + 24), v466);
    *(void *)((char *)v487 + *(int *)(v489 + 28)) = *(void *)((char *)v488 + *(int *)(v489 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v490 + 56))(v487, 0, 1, v489);
  }
  uint64_t v492 = v9[9];
  uint64_t v493 = &v459[v492];
  long long v494 = &v460[v492];
  *(void *)uint64_t v493 = *(void *)v494;
  v493[8] = v494[8];
  uint64_t v495 = v9[10];
  int v496 = &v459[v495];
  int v497 = &v460[v495];
  if (v625(&v460[v495], 1, v466))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v496, v497, *(void *)(*(void *)(v498 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v467 + 32))(v496, v497, v466);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v467 + 56))(v496, 0, 1, v466);
  }
  uint64_t v499 = v9[11];
  uint64_t v500 = &v459[v499];
  uint64_t v501 = &v460[v499];
  *(void *)uint64_t v500 = *(void *)v501;
  v500[8] = v501[8];
  uint64_t v502 = v9[12];
  uint64_t v503 = &v459[v502];
  uint64_t v504 = &v460[v502];
  if (v625(&v460[v502], 1, v466))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v503, v504, *(void *)(*(void *)(v505 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v467 + 32))(v503, v504, v466);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v467 + 56))(v503, 0, 1, v466);
  }
  uint64_t v506 = v9[13];
  int v507 = &v459[v506];
  int v508 = &v460[v506];
  *(void *)int v507 = *(void *)v508;
  v507[8] = v508[8];
  uint64_t v509 = v9[14];
  uint64_t v510 = &v459[v509];
  uint64_t v511 = &v460[v509];
  if (v625(&v460[v509], 1, v466))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v510, v511, *(void *)(*(void *)(v512 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v467 + 32))(v510, v511, v466);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v467 + 56))(v510, 0, 1, v466);
  }
  uint64_t v513 = v9[15];
  uint64_t v514 = &v459[v513];
  v515 = &v460[v513];
  *(void *)uint64_t v514 = *(void *)v515;
  v514[8] = v515[8];
  uint64_t v516 = v9[16];
  int v517 = &v459[v516];
  int v518 = &v460[v516];
  if (v625(&v460[v516], 1, v466))
  {
    sub_1C091BD58(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FB7810]);
    memcpy(v517, v518, *(void *)(*(void *)(v519 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v467 + 32))(v517, v518, v466);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v467 + 56))(v517, 0, 1, v466);
  }
  uint64_t v4 = v627;
  uint64_t v520 = v9[17];
  v521 = &v459[v520];
  v522 = &v460[v520];
  long long v523 = *((_OWORD *)v522 + 1);
  *(_OWORD *)v521 = *(_OWORD *)v522;
  *((_OWORD *)v521 + 1) = v523;
  *((void *)v521 + 4) = *((void *)v522 + 4);
  uint64_t v524 = v9[18];
  v525 = &v459[v524];
  v526 = &v460[v524];
  v525[8] = v526[8];
  *(void *)v525 = *(void *)v526;
  uint64_t v527 = v9[19];
  int v528 = &v459[v527];
  uint64_t v529 = &v460[v527];
  uint64_t v530 = sub_1C1516D2C();
  uint64_t v531 = *(void *)(v530 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v531 + 48))(v529, 1, v530))
  {
    sub_1C091BD58(0, &qword_1EB8628C0, MEMORY[0x1E4FB77E8]);
    memcpy(v528, v529, *(void *)(*(void *)(v532 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v531 + 32))(v528, v529, v530);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v531 + 56))(v528, 0, 1, v530);
  }
  a3 = v628;
  uint64_t v5 = v629;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v622 + 56))(v459, 0, 1, v9);
LABEL_359:
  *(void *)((char *)v5 + a3[15]) = *(void *)((char *)v4 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v605 = a3[17];
  *((unsigned char *)v5 + a3[16]) = *((unsigned char *)v4 + a3[16]);
  *((unsigned char *)v5 + v605) = *((unsigned char *)v4 + v605);
  uint64_t v606 = a3[19];
  *(void *)((char *)v5 + a3[18]) = *(void *)((char *)v4 + a3[18]);
  *(void *)((char *)v5 + v606) = *(void *)((char *)v4 + v606);
  uint64_t v607 = a3[21];
  *((unsigned char *)v5 + a3[20]) = *((unsigned char *)v4 + a3[20]);
  *(_WORD *)((char *)v5 + v607) = *(_WORD *)((char *)v4 + v607);
  return v5;
}

uint64_t getEnumTagSinglePayload for FeedClusteringRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0934258);
}

uint64_t sub_1C0934258(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    int v11 = (char *)a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FeedClusteringRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0934338);
}

void *sub_1C0934338(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1C091BD58(0, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 40);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C09343FC()
{
  sub_1C091BD58(319, &qword_1EB865080, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for FeedClusteringRequest.ChannelClusteringOption(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = *((unsigned __int8 *)a1 + 2);
        if (!*((unsigned char *)a1 + 2)) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65282;
      case 2:
        int v5 = a1[1];
        if (a1[1]) {
          return (*a1 | (v5 << 16)) - 65282;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C09345C4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65282;
      default:
        break;
    }
  }
  unsigned int v7 = *(unsigned __int8 *)a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedClusteringRequest.ChannelClusteringOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 254;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        break;
      case 2:
        *(_WORD *)(result + 2) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C09346ACLL);
      case 4:
        *(_DWORD *)(result + 2) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *(unsigned char *)uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1C09346D4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

_WORD *sub_1C09346F0(_WORD *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *uint64_t result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedClusteringRequest.ChannelClusteringOption()
{
  return &type metadata for FeedClusteringRequest.ChannelClusteringOption;
}

uint64_t sub_1C0934724(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0934780(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C09347E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1C0934CB0();
  uint64_t v5 = (uint64_t)a1 + *(int *)(v4 + 48);
  sub_1C0934D1C();
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  sub_1C0934D84(v5, (uint64_t)a2 + *(int *)(v6 + 48), type metadata accessor for FeedClusteringOptions);
  *a2 = v8;
  a2[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0934864(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for FeedClusteringOptions(0);
  uint64_t v65 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v53 = (uint64_t)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v52 = (uint64_t)v51 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v51 - v15;
  sub_1C091BD58(0, (unint64_t *)&unk_1EB863280, (void (*)(uint64_t))sub_1C0934D1C);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (void *)((char *)v51 - v18);
  uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = ~v20;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = -v20;
  uint64_t v58 = a1;
  uint64_t v59 = a1 + 64;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  uint64_t v60 = v21;
  uint64_t v61 = 0;
  uint64_t v62 = v24 & v22;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  v51[1] = a1;
  swift_bridgeObjectRetain();
  v51[0] = a3;
  swift_retain();
  sub_1C0DB5C70((uint64_t)v19);
  sub_1C0934D1C();
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  int v28 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v27 + 48);
  uint64_t v56 = v27 + 48;
  uint64_t v57 = v28;
  if (v28(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BFEFB808();
    return swift_release();
  }
  uint64_t v54 = v26;
  uint64_t v55 = v19;
  while (1)
  {
    uint64_t v34 = *v19;
    uint64_t v33 = v19[1];
    uint64_t v35 = (uint64_t)v16;
    sub_1C0934DEC((uint64_t)v19 + *(int *)(v26 + 48), (uint64_t)v16);
    uint64_t v36 = *(void **)a5;
    unint64_t v38 = sub_1BFEF2D8C(v34, v33);
    uint64_t v39 = v36[2];
    BOOL v40 = (v37 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40)) {
      break;
    }
    char v42 = v37;
    if (v36[3] >= v41)
    {
      if (a4)
      {
        uint64_t v45 = *(void **)a5;
        if (v37) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_1C1070920();
        uint64_t v45 = *(void **)a5;
        if (v42) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_1C105D304(v41, a4 & 1);
      unint64_t v43 = sub_1BFEF2D8C(v34, v33);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_22;
      }
      unint64_t v38 = v43;
      uint64_t v45 = *(void **)a5;
      if (v42)
      {
LABEL_7:
        unint64_t v30 = *(void *)(v65 + 72) * v38;
        uint64_t v31 = v53;
        sub_1C0934D84(v45[7] + v30, v53, type metadata accessor for FeedClusteringOptions);
        uint64_t v32 = v52;
        sub_1C0934D84(v31, v52, type metadata accessor for FeedClusteringOptions);
        sub_1C0934780(v31, type metadata accessor for FeedClusteringOptions);
        uint64_t v16 = (char *)v35;
        sub_1C0934780(v35, type metadata accessor for FeedClusteringOptions);
        swift_bridgeObjectRelease();
        sub_1C0934E50(v32, *(void *)(*(void *)a5 + 56) + v30);
        goto LABEL_8;
      }
    }
    v45[(v38 >> 6) + 8] |= 1 << v38;
    uint64_t v46 = (uint64_t *)(v45[6] + 16 * v38);
    *uint64_t v46 = v34;
    v46[1] = v33;
    uint64_t v47 = v45[7] + *(void *)(v65 + 72) * v38;
    uint64_t v16 = (char *)v35;
    sub_1C0934DEC(v35, v47);
    uint64_t v48 = v45[2];
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49) {
      goto LABEL_21;
    }
    v45[2] = v50;
LABEL_8:
    uint64_t v19 = v55;
    sub_1C0DB5C70((uint64_t)v55);
    a4 = 1;
    uint64_t v26 = v54;
    if (v57(v19, 1, v54) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

void sub_1C0934CB0()
{
  if (!qword_1EB863270)
  {
    type metadata accessor for FeedClusteringOptions(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB863270);
    }
  }
}

void sub_1C0934D1C()
{
  if (!qword_1EB861420)
  {
    type metadata accessor for FeedClusteringOptions(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB861420);
    }
  }
}

uint64_t sub_1C0934D84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0934DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedClusteringOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0934E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedClusteringOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C0934EB4()
{
  uint64_t v1 = v0;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_isDiffSelected);
  sub_1BFE4F78C(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320F0;
  uint64_t v4 = self;
  uint64_t v5 = v4;
  if (v2 == 1)
  {
    *(void *)(v3 + 32) = objc_msgSend(v4, sel_whiteColor);
    *(void *)(v3 + 40) = objc_msgSend(v5, sel_systemGreenColor);
    uint64_t v15 = v3;
    sub_1C151EBEC();
    sub_1BFF6B690();
    uint64_t v6 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(self, sel_configurationWithPaletteColors_, v6);

    uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton);
    unsigned int v9 = (void *)sub_1C151E5EC();
    id v10 = objc_msgSend(self, sel_systemImageNamed_, v9);

    if (v10) {
      goto LABEL_5;
    }
  }
  else
  {
    *(void *)(v3 + 32) = objc_msgSend(v4, sel_systemGray2Color);
    *(void *)(v3 + 40) = objc_msgSend(v5, sel_systemGray2Color);
    uint64_t v15 = v3;
    sub_1C151EBEC();
    sub_1BFF6B690();
    uint64_t v11 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(self, sel_configurationWithPaletteColors_, v11);

    uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton);
    uint64_t v12 = (void *)sub_1C151E5EC();
    id v10 = objc_msgSend(self, sel_systemImageNamed_, v12);

    if (v10)
    {
LABEL_5:
      id v13 = objc_msgSend(v10, sel_imageWithConfiguration_, v7);

      goto LABEL_7;
    }
  }
  id v13 = 0;
LABEL_7:
  objc_msgSend(v8, sel_setImage_forState_, v13, 0, v13, v15);
}

uint64_t type metadata accessor for DebugFormatUploadEntryTableViewCell()
{
  return self;
}

char *sub_1C09352EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_onDiffTap;
  sub_1BFE4F78C(0, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  id v8 = objc_allocWithZone(v7);
  unsigned int v9 = v3;
  *(void *)&v3[v6] = objc_msgSend(v8, sel_init);
  v9[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_showDiff] = 1;
  v9[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_isDiffSelected] = 0;
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton;
  sub_1C151AF1C();
  *(void *)&v9[v10] = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);

  if (a2)
  {
    uint64_t v11 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  v33.receiver = v9;
  v33.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v33, sel_initWithStyle_reuseIdentifier_, 3, v11);

  id v13 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  id v14 = v12;
  id v15 = objc_msgSend(v13, sel_init);
  objc_msgSend(v14, sel_setSelectedBackgroundView_, v15);

  id v16 = objc_msgSend(v14, sel_selectedBackgroundView);
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v17, sel_setBackgroundColor_, v18);
  }
  uint64_t v19 = self;
  uint64_t v20 = (char *)v14;
  id v21 = objc_msgSend(v19, sel_systemBlueColor);
  objc_msgSend(v20, sel_setTintColor_, v21);

  uint64_t v22 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton;
  id v23 = *(id *)&v20[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton];
  uint64_t v24 = (void *)sub_1C151E5EC();
  id v25 = objc_msgSend(self, sel_systemImageNamed_, v24);

  objc_msgSend(v23, sel_setImage_forState_, v25, 0);
  uint64_t v26 = *(void **)&v20[v22];
  objc_msgSend(v26, sel_setFrame_, 0.0, 0.0, 25.0, 25.0);
  objc_msgSend(v26, sel_setContentHorizontalAlignment_, 3);
  objc_msgSend(v26, sel_setContentVerticalAlignment_, 3);
  id v27 = objc_msgSend(v26, sel_imageView);
  if (v27)
  {
    int v28 = v27;
    objc_msgSend(v27, sel_setContentMode_, 1);
  }
  uint64_t v29 = *(void **)&v20[v22];
  objc_msgSend(v20, sel_setEditingAccessoryView_, v29);
  id v30 = *(id *)&v20[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_onDiffTap];
  id v31 = v29;
  sub_1C151C87C();

  return v20;
}

void sub_1C0935678()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_onDiffTap;
  sub_1BFE4F78C(0, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_showDiff] = 1;
  v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_isDiffSelected] = 0;
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton;
  sub_1C151AF1C();
  *(void *)&v0[v3] = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);

  sub_1C152040C();
  __break(1u);
}

uint64_t URL.dataSourceId.getter()
{
  return sub_1C1515DDC();
}

void *WebEmbedDataSourceService.__allocating_init(appConfigurationManager:resourceService:sceneStateManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  swift_allocObject();
  uint64_t v6 = sub_1C093627C(a1, a2, a3);
  swift_unknownObjectRelease();
  return v6;
}

void *WebEmbedDataSourceService.init(appConfigurationManager:resourceService:sceneStateManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = sub_1C093627C(a1, a2, a3);
  swift_unknownObjectRelease();
  return v3;
}

uint64_t WebEmbedDataSourceService.fetchDataVisualizationsConfiguration()()
{
  sub_1C0065708();
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  uint64_t v1 = sub_1C15190DC();
  swift_release();

  return v1;
}

uint64_t WebEmbedDataSourceService.unsafeFetchDataVisualizationsConfiguration()()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255) {
    goto LABEL_5;
  }
  if (v3)
  {
    sub_1C093651C(v2, v3);
LABEL_5:
    uint64_t v0 = sub_1C15183CC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1BFCD2540(0, &qword_1EB885060, (uint64_t (*)(uint64_t))sub_1C0065708, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

unint64_t sub_1C09359C0@<X0>(unint64_t *a1@<X8>)
{
  if (qword_1EB87B060 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EB93C700;
  sub_1C151F36C();
  sub_1BFCD2540(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  swift_getErrorValue();
  uint64_t v4 = sub_1C1520D3C();
  uint64_t v6 = v5;
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = sub_1BFE9C558();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v6;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  unint64_t result = sub_1C018D770(MEMORY[0x1E4FBC860]);
  *a1 = result;
  return result;
}

uint64_t sub_1C0935B28()
{
  sub_1BFCF7C30();
  sub_1C151932C();
  swift_retain();
  uint64_t v0 = (void *)sub_1C1518E7C();
  sub_1C02509F8();
  sub_1C1518FEC();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v1 = (void *)sub_1C1518E7C();
  sub_1C0065708();
  uint64_t v2 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v2;
}

uint64_t sub_1C0935C2C(id *a1, uint64_t a2)
{
  id v3 = *a1;
  if (objc_msgSend(*a1, sel_respondsToSelector_, sel_webEmbedDataSourcesConfigurationResourceId))
  {
    id v4 = objc_msgSend(v3, sel_webEmbedDataSourcesConfigurationResourceId);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = sub_1C151E62C();
      unint64_t v8 = v7;

      if (v8)
      {
        uint64_t v9 = HIBYTE(v8) & 0xF;
        if ((v8 & 0x2000000000000000) == 0) {
          uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
        }
        if (v9)
        {
          __swift_project_boxed_opaque_existential_1((void *)(a2 + 24), *(void *)(a2 + 48));
          uint64_t v10 = ResourceServiceType.fetchResource(identifier:)(v6, v8);
          sub_1BFEF2F40(v6, v8);
          return v10;
        }
        sub_1BFEF2F40(v6, v8);
      }
    }
  }
  sub_1C0936600();
  swift_allocError();
  *id v12 = 0;
  return swift_willThrow();
}

uint64_t sub_1C0935D44@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFCD2540(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)v26 - v6;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = MEMORY[0x1F4188790](v12).n128_u64[0];
  id v15 = (char *)v26 - v14;
  id v16 = objc_msgSend(*a1, sel_fileURL, v13);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_6;
  }
  uint64_t v17 = v16;
  uint64_t v29 = a2;
  sub_1C1515F1C();

  id v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v18(v7, v11, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_6:
    sub_1C002F608((uint64_t)v7);
    sub_1C0936600();
    swift_allocError();
    *uint64_t v22 = 1;
    return swift_willThrow();
  }
  v18(v15, v7, v8);
  uint64_t v19 = sub_1C1515FFC();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  }
  uint64_t v23 = v19;
  unint64_t v24 = v20;
  sub_1C1517DCC();
  swift_allocObject();
  sub_1C1517DBC();
  sub_1C0936654();
  sub_1C1517D9C();
  swift_release();
  v26[1] = v27;
  sub_1C03EA4FC();
  v26[0] = sub_1BFCD24F8(&qword_1EA1A1018, 255, (void (*)(uint64_t))sub_1C03EA4FC);
  sub_1C09366A8();
  uint64_t v25 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  uint64_t v27 = v25;
  char v28 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  sub_1BFE95664(v23, v24);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  *uint64_t v29 = v25;
  return result;
}

uint64_t WebEmbedDataSourceService.deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  return v0;
}

uint64_t WebEmbedDataSourceService.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C09361CC()
{
  sub_1C0065708();
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  uint64_t v1 = sub_1C15190DC();
  swift_release();

  return v1;
}

uint64_t sub_1C0936258()
{
  return WebEmbedDataSourceService.unsafeFetchDataVisualizationsConfiguration()();
}

void *sub_1C093627C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = sub_1C15189FC();
  MEMORY[0x1F4188790](v7);
  sub_1BFCD24F8((unint64_t *)&unk_1EB871420, 255, MEMORY[0x1E4FAACC8]);
  sub_1BFCF0B18(0);
  sub_1BFCD24F8((unint64_t *)&qword_1EB879C60, 255, sub_1BFCF0B18);
  sub_1C151FFBC();
  sub_1BFCD25A4();
  swift_allocObject();
  v3[8] = sub_1C15183BC();
  uint64_t v10 = 0;
  char v11 = -1;
  sub_1BFCD2540(0, (unint64_t *)&unk_1EB885050, (uint64_t (*)(uint64_t))sub_1C006D458, MEMORY[0x1E4FAB060]);
  swift_allocObject();
  v3[9] = sub_1C1518E9C();
  v3[2] = a1;
  sub_1BFC66384(a2, (uint64_t)(v3 + 3));
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_1BFCD24F8(&qword_1EB88BE58, v8, (void (*)(uint64_t))type metadata accessor for WebEmbedDataSourceService);
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C1518B1C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v3;
}

uint64_t sub_1C09364EC()
{
  return WebEmbedDataSourceService.unsafeFetchDataVisualizationsConfiguration()();
}

uint64_t sub_1C0936514()
{
  return sub_1C0935B28();
}

uint64_t sub_1C093651C(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return j__swift_bridgeObjectRelease(result, a2 & 1);
  }
  return result;
}

uint64_t dispatch thunk of WebEmbedDataSourceServiceType.fetchDataVisualizationsConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WebEmbedDataSourceServiceType.unsafeFetchDataVisualizationsConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for WebEmbedDataSourceService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WebEmbedDataSourceService);
}

uint64_t dispatch thunk of WebEmbedDataSourceService.__allocating_init(appConfigurationManager:resourceService:sceneStateManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C093658C()
{
  return FCNewsAppConfigurationManager.fetchConfiguration(cachedOnly:)();
}

uint64_t sub_1C09365C8(id *a1)
{
  return sub_1C0935C2C(a1, v1);
}

uint64_t sub_1C09365E4@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0935D44(a1, a2);
}

unint64_t sub_1C0936600()
{
  unint64_t result = qword_1EA1A1000;
  if (!qword_1EA1A1000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1000);
  }
  return result;
}

unint64_t sub_1C0936654()
{
  unint64_t result = qword_1EA1A1008;
  if (!qword_1EA1A1008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1008);
  }
  return result;
}

unint64_t sub_1C09366A8()
{
  unint64_t result = qword_1EA1A1020;
  if (!qword_1EA1A1020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1020);
  }
  return result;
}

uint64_t sub_1C09366FC()
{
  return sub_1C09364EC();
}

uint64_t sub_1C0936714()
{
  if (v0[14])
  {
    uint64_t v1 = v0[13];
  }
  else
  {
    uint64_t v1 = sub_1BFF303E0(v0[2], v0[3]);
    v0[13] = v1;
    v0[14] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C093678C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *a5;
  uint64_t v6 = a5[1];
  long long v8 = *((_OWORD *)a5 + 1);
  *(void *)(v5 + 88) = 0;
  *(unsigned char *)(v5 + 96) = 1;
  *(void *)(v5 + 104) = 0;
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  *(void *)(v5 + 128) = 1;
  if (v6)
  {
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    *(unsigned char *)(v5 + 40) = a3;
    *(void *)(v5 + 32) = a4;
    *(void *)(v5 + 56) = v7;
    *(void *)(v5 + 64) = v6;
    *(_OWORD *)(v5 + 72) = v8;
    *(CFTimeInterval *)(v5 + 48) = CACurrentMediaTime();
    *(void *)(v5 + 88) = 0;
    *(unsigned char *)(v5 + 96) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BFEF2F40(*(void *)(v5 + 120), *(void *)(v5 + 128));
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t sub_1C0936860()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF2F40(*(void *)(v0 + 120), *(void *)(v0 + 128));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatNodeDebugRecord()
{
  return self;
}

uint64_t type metadata accessor for FormatNodeDebugRecords()
{
  return self;
}

uint64_t initializeWithCopy for DebugInspectionTagMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 105) = *(_DWORD *)(a2 + 105);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectionTagMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 92) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 100) = v7;
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  return a1;
}

__n128 __swift_memcpy110_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 94) = *(long long *)((char *)a2 + 94);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for DebugInspectionTagMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  int v6 = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 92) = v6;
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionTagMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 110)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionTagMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 108) = 0;
    *(_DWORD *)(result + 104) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 110) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 110) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionTagMetadata()
{
  return &type metadata for DebugInspectionTagMetadata;
}

unint64_t sub_1C0936C5C(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x65746152776F6C66;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x7974696C617571;
      break;
    case 5:
      unint64_t result = 0x79676F6C6F746E6FLL;
      break;
    case 6:
      unint64_t result = 0x52746E65746E6F63;
      break;
    case 7:
      unint64_t result = 0x636E6176656C6572;
      break;
    case 8:
      unint64_t result = 0x646567616E616DLL;
      break;
    case 9:
      unint64_t result = 0x57646567616E616DLL;
      break;
    case 10:
      unint64_t result = 0x6C626170756F7267;
      break;
    case 11:
      unint64_t result = 0xD000000000000014;
      break;
    case 12:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0936E28(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0937E50(0, &qword_1EA1A1038, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v13[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0937DFC();
  sub_1C1520F0C();
  v13[31] = 0;
  sub_1C15207CC();
  if (!v2)
  {
    v13[30] = 1;
    sub_1C152074C();
    v13[29] = 2;
    sub_1C152076C();
    v13[28] = 3;
    sub_1C152076C();
    v13[27] = 4;
    sub_1C152076C();
    v13[26] = 5;
    sub_1C152077C();
    char v10 = *(unsigned char *)(v3 + 96);
    v13[25] = 6;
    v13[24] = v10;
    sub_1C152079C();
    char v11 = *(unsigned char *)(v3 + 104);
    v13[23] = 7;
    v13[20] = v11;
    sub_1C152079C();
    v13[19] = 8;
    sub_1C15207DC();
    v13[18] = 9;
    sub_1C15207DC();
    v13[17] = 10;
    sub_1C15207DC();
    v13[16] = 11;
    sub_1C15207DC();
    v13[15] = 12;
    sub_1C15207DC();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0937184()
{
  return sub_1C0936C5C(*v0);
}

uint64_t sub_1C093718C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0937298(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C09371B4(uint64_t a1)
{
  unint64_t v2 = sub_1C0937DFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09371F0(uint64_t a1)
{
  unint64_t v2 = sub_1C0937DFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1C093722C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0937858(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v8[0];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 94) = *(_OWORD *)((char *)v8 + 14);
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1C0937280(void *a1)
{
  return sub_1C0936E28(a1);
}

uint64_t sub_1C0937298(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746152776F6C66 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1615AD0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7974696C617571 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x79676F6C6F746E6FLL && a2 == 0xED00006C6576654CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED0000676E697461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x636E6176656C6572 && a2 == 0xEF676E6974615265 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x646567616E616DLL && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x57646567616E616DLL && a2 == 0xED000072656E6E69 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6C626170756F7267 && a2 == 0xE900000000000065 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1615AF0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1615B10)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_1C0937858@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0937E50(0, &qword_1EA1A1028, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v33 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0937DFC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v63 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  uint64_t v50 = v10;
  char v62 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152060C();
  uint64_t v15 = v14;
  uint64_t v48 = v13;
  uint64_t v49 = v12;
  char v61 = 2;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C152062C();
  int v45 = v17;
  uint64_t v46 = v16;
  uint64_t v47 = v15;
  char v60 = 3;
  uint64_t v18 = sub_1C152062C();
  int v43 = v19;
  uint64_t v44 = v18;
  char v59 = 4;
  uint64_t v20 = sub_1C152062C();
  int v41 = v21;
  uint64_t v42 = v20;
  char v58 = 5;
  uint64_t v22 = sub_1C152063C();
  int v39 = v23;
  uint64_t v40 = v22;
  char v57 = 6;
  uint64_t v38 = sub_1C152066C();
  char v56 = 7;
  uint64_t v37 = sub_1C152066C();
  char v55 = 8;
  int v36 = sub_1C15206AC();
  char v54 = 9;
  uint64_t v24 = sub_1C15206AC();
  char v53 = 10;
  LOBYTE(v12) = sub_1C15206AC();
  char v52 = 11;
  int v35 = sub_1C15206AC();
  char v51 = 12;
  char v25 = sub_1C15206AC();
  uint64_t v26 = (void (**)(char *, uint64_t))(v7 + 8);
  LOBYTE(v15) = v25;
  v36 &= 1u;
  int v34 = v24 & 1;
  char v27 = v12 & 1;
  LOBYTE(v24) = v35 & 1;
  (*v26)(v9, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v28 = v47;
  swift_bridgeObjectRelease();
  uint64_t v29 = v49;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v50;
  *(void *)(a2 + 8) = v29;
  *(void *)(a2 + 16) = v48;
  *(void *)(a2 + 24) = v28;
  *(void *)(a2 + 32) = v46;
  *(unsigned char *)(a2 + 40) = v45 & 1;
  *(void *)(a2 + 48) = v44;
  *(unsigned char *)(a2 + 56) = v43 & 1;
  *(void *)(a2 + 64) = v42;
  *(unsigned char *)(a2 + 72) = v41 & 1;
  *(void *)(a2 + 80) = v40;
  *(unsigned char *)(a2 + 88) = v39 & 1;
  char v31 = BYTE4(v38);
  *(_DWORD *)(a2 + 92) = v38;
  *(unsigned char *)(a2 + 96) = v31 & 1;
  char v32 = BYTE4(v37);
  *(_DWORD *)(a2 + 100) = v37;
  *(unsigned char *)(a2 + 104) = v32 & 1;
  *(unsigned char *)(a2 + 105) = v36;
  *(unsigned char *)(a2 + 106) = v34;
  *(unsigned char *)(a2 + 107) = v27;
  *(unsigned char *)(a2 + 108) = v24;
  *(unsigned char *)(a2 + 109) = v15 & 1;
  return result;
}

unint64_t sub_1C0937DFC()
{
  unint64_t result = qword_1EA1A1030;
  if (!qword_1EA1A1030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1030);
  }
  return result;
}

void sub_1C0937E50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0937DFC();
    unint64_t v7 = a3(a1, &type metadata for DebugInspectionTagMetadata.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionTagMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0937F80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionTagMetadata.CodingKeys()
{
  return &type metadata for DebugInspectionTagMetadata.CodingKeys;
}

unint64_t sub_1C0937FBC()
{
  unint64_t result = qword_1EA1A1040;
  if (!qword_1EA1A1040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1040);
  }
  return result;
}

unint64_t sub_1C0938014()
{
  unint64_t result = qword_1EA1A1048;
  if (!qword_1EA1A1048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1048);
  }
  return result;
}

unint64_t sub_1C093806C()
{
  unint64_t result = qword_1EA1A1050;
  if (!qword_1EA1A1050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1050);
  }
  return result;
}

uint64_t FeedCustomItem.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  uint64_t v4 = type metadata accessor for FormatCustomItem.Resolved();
  return sub_1BFE3242C(v3 + *(int *)(v4 + 24), a1, (uint64_t (*)(void))sub_1BFE323F8);
}

uint64_t FeedCustomItem.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeedCustomItem() + 20) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCustomItem.options.getter()
{
  type metadata accessor for FeedCustomItem();
  type metadata accessor for FormatCustomItem.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t FeedCustomItem.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCustomItem.customItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedCustomItem();
  return sub_1BFE3242C(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
}

uint64_t FeedCustomItem.init(identifier:customItem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (uint64_t)a4 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  return sub_1C0938270(a3, v5);
}

uint64_t sub_1C0938270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCustomItem.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FeedCustomItem.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C151CA3C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t sub_1C0938348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C151CA3C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

void FeedCustomItem.traits.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void FeedCustomItem.layoutDirection.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t FeedCustomItem.kind.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  uint64_t v4 = *(void *)(v3 + 24);
  *a1 = *(void *)(v3 + 16);
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

void sub_1C0938414(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_1C0938424@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 20);
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t FeedCustomItem.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedCustomItem.debugTitle.getter()
{
  return 0;
}

uint64_t FeedCustomItem.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedCustomItem.debugScoreProfile.getter()
{
  return 0;
}

BOOL FeedCustomItem.isSelectable.getter()
{
  sub_1BFE323F8(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  uint64_t v5 = type metadata accessor for FormatCustomItem.Resolved();
  sub_1BFE3242C(v4 + *(int *)(v5 + 24), (uint64_t)v3, (uint64_t (*)(void))sub_1BFE323F8);
  uint64_t v6 = type metadata accessor for FormatCustomItem.Action();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6) != 1;
  sub_1BFE327D4((uint64_t)v3, (uint64_t (*)(void))sub_1BFE323F8);
  return v7;
}

uint64_t FeedCustomItem.keyCommands.getter()
{
  return MEMORY[0x1E4FBC860];
}

BOOL sub_1C0938570(uint64_t a1)
{
  sub_1BFE323F8(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + *(int *)(a1 + 20);
  uint64_t v7 = type metadata accessor for FormatCustomItem.Resolved();
  sub_1BFE3242C(v6 + *(int *)(v7 + 24), (uint64_t)v5, (uint64_t (*)(void))sub_1BFE323F8);
  uint64_t v8 = type metadata accessor for FormatCustomItem.Action();
  BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8) != 1;
  sub_1BFE327D4((uint64_t)v5, (uint64_t (*)(void))sub_1BFE323F8);
  return v9;
}

uint64_t FeedCustomItem.selectionStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C09386F8(MEMORY[0x1E4FABF88], MEMORY[0x1E4FABF78], MEMORY[0x1E4FABF80], a1);
}

uint64_t sub_1C09386A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0938884(a1, MEMORY[0x1E4FABF88], MEMORY[0x1E4FABF78], MEMORY[0x1E4FABF80], a2);
}

uint64_t FeedCustomItem.highlightStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C09386F8(MEMORY[0x1E4FABF28], MEMORY[0x1E4FABF18], MEMORY[0x1E4FABF20], a1);
}

uint64_t sub_1C09386F8@<X0>(uint64_t (*a1)(void)@<X0>, unsigned int *a2@<X1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1BFE323F8(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v4 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  uint64_t v13 = type metadata accessor for FormatCustomItem.Resolved();
  sub_1BFE3242C(v12 + *(int *)(v13 + 24), (uint64_t)v11, (uint64_t (*)(void))sub_1BFE323F8);
  uint64_t v14 = type metadata accessor for FormatCustomItem.Action();
  LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v11, 1, v14);
  sub_1BFE327D4((uint64_t)v11, (uint64_t (*)(void))sub_1BFE323F8);
  uint64_t v15 = a1(0);
  if (v12 == 1) {
    uint64_t v16 = a2;
  }
  else {
    uint64_t v16 = a3;
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(a4, *v16, v15);
}

uint64_t sub_1C093885C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0938884(a1, MEMORY[0x1E4FABF28], MEMORY[0x1E4FABF18], MEMORY[0x1E4FABF20], a2);
}

uint64_t sub_1C0938884@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X2>, unsigned int *a3@<X3>, unsigned int *a4@<X4>, uint64_t a5@<X8>)
{
  sub_1BFE323F8(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v5 + *(int *)(a1 + 20);
  uint64_t v15 = type metadata accessor for FormatCustomItem.Resolved();
  sub_1BFE3242C(v14 + *(int *)(v15 + 24), (uint64_t)v13, (uint64_t (*)(void))sub_1BFE323F8);
  uint64_t v16 = type metadata accessor for FormatCustomItem.Action();
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v13, 1, v16);
  sub_1BFE327D4((uint64_t)v13, (uint64_t (*)(void))sub_1BFE323F8);
  uint64_t v17 = a2(0);
  if (v14 == 1) {
    uint64_t v18 = a3;
  }
  else {
    uint64_t v18 = a4;
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(a5, *v18, v17);
}

uint64_t _s8NewsFeed0B10CustomItemV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - v8;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BFE3242C((uint64_t)a1, (uint64_t)&v14 - v8, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
    sub_1BFE3242C((uint64_t)a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  }
  else
  {
    char v11 = sub_1C1520A9C();
    sub_1BFE3242C((uint64_t)a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
    sub_1BFE3242C((uint64_t)a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
    char v12 = 0;
    if ((v11 & 1) == 0) {
      goto LABEL_9;
    }
  }
  char v12 = _s8NewsFeed16FormatCustomItemV8ResolvedV2eeoiySbAE_AEtFZ_0(&v9[*(int *)(v4 + 20)], &v6[*(int *)(v4 + 20)]);
LABEL_9:
  sub_1BFE327D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  sub_1BFE327D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  return v12 & 1;
}

unint64_t sub_1C0938B70(uint64_t a1)
{
  unint64_t result = sub_1C0938B98();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0938B98()
{
  unint64_t result = qword_1EB85E970;
  if (!qword_1EB85E970)
  {
    type metadata accessor for FeedCustomItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E970);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedCustomItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *uint64_t v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    uint64_t v10 = *(uint64_t *)((char *)a2 + v6 + 24);
    v7[2] = *(uint64_t *)((char *)a2 + v6 + 16);
    v7[3] = v10;
    uint64_t v11 = type metadata accessor for FormatCustomItem.Resolved();
    uint64_t v12 = *(int *)(v11 + 24);
    __dst = (char *)v7 + v12;
    uint64_t v22 = v11;
    uint64_t v13 = &v8[v12];
    uint64_t v14 = type metadata accessor for FormatCustomItem.Action();
    uint64_t v20 = *(void *)(v14 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v13, 1, v14))
    {
      sub_1BFE323F8(0);
      memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v18 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(__dst, v13, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v14);
    }
    *(void *)((char *)v7 + *(int *)(v22 + 28)) = *(void *)&v8[*(int *)(v22 + 28)];
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t destroy for FeedCustomItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
  uint64_t v6 = type metadata accessor for FormatCustomItem.Action();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FeedCustomItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = *(void *)((char *)a2 + v4 + 8);
  *uint64_t v5 = *(void *)((char *)a2 + v4);
  v5[1] = v7;
  uint64_t v8 = *(void *)((char *)a2 + v4 + 24);
  v5[2] = *(void *)((char *)a2 + v4 + 16);
  v5[3] = v8;
  uint64_t v9 = type metadata accessor for FormatCustomItem.Resolved();
  uint64_t v10 = *(int *)(v9 + 24);
  __dst = (char *)v5 + v10;
  uint64_t v20 = v9;
  uint64_t v11 = &v6[v10];
  uint64_t v12 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    sub_1BFE323F8(0);
    memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(__dst, v11, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  *(void *)((char *)v5 + *(int *)(v20 + 28)) = *(void *)&v6[*(int *)(v20 + 28)];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FeedCustomItem(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = *((void *)v8 + 2);
  v7[3] = *((void *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for FormatCustomItem.Resolved();
  uint64_t v9 = *(int *)(v21 + 24);
  uint64_t v10 = (char *)v7 + v9;
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      uint64_t v20 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v10, v11, v20);
      goto LABEL_7;
    }
    sub_1BFE327D4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1BFE323F8(0);
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v17 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void *)((char *)v7 + *(int *)(v21 + 28)) = *(void *)&v8[*(int *)(v21 + 28)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FeedCustomItem(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (char *)a2 + v4;
  long long v7 = *(_OWORD *)((char *)a2 + v4 + 16);
  *uint64_t v5 = *(_OWORD *)((char *)a2 + v4);
  v5[1] = v7;
  uint64_t v8 = type metadata accessor for FormatCustomItem.Resolved();
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = (char *)v5 + v9;
  uint64_t v11 = &v6[v9];
  uint64_t v12 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1BFE323F8(0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v10, v11, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(void *)((char *)v5 + *(int *)(v8 + 28)) = *(void *)&v6[*(int *)(v8 + 28)];
  return a1;
}

void *assignWithTake for FeedCustomItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v9 + 3);
  _OWORD v8[2] = *((void *)v9 + 2);
  v8[3] = v11;
  swift_bridgeObjectRelease();
  uint64_t v24 = type metadata accessor for FormatCustomItem.Resolved();
  uint64_t v12 = *(int *)(v24 + 24);
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = &v9[v12];
  uint64_t v15 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      uint64_t v23 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v13, v14, v23);
      goto LABEL_7;
    }
    sub_1BFE327D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Action);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_1BFE323F8(0);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v20 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v13, v14, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(void *)((char *)v8 + *(int *)(v24 + 28)) = *(void *)&v9[*(int *)(v24 + 28)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedCustomItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0939660);
}

uint64_t sub_1C0939660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatCustomItem.Resolved();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FeedCustomItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0939724);
}

uint64_t sub_1C0939724(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatCustomItem.Resolved();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t (*FormatVideoPlayerProvider.load(with:)(uint64_t (*a1)(char *)))()
{
  uint64_t v2 = v1;
  sub_1BFF2E698(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = v1 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data;
  uint64_t v8 = v7 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 36);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  uint64_t v11 = a1(v6);
  sub_1C002F608((uint64_t)v6);
  *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata) = v11;
  swift_unknownObjectRelease();
  return nullsub_1;
}

double FormatVideoPlayerProvider.impressionThreshold.getter()
{
  return 2.0;
}

uint64_t sub_1C0939C20@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[1];
  uint64_t v25 = *a1;
  uint64_t v11 = a1[6];
  uint64_t v12 = type metadata accessor for FormatVideoPlayerData();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, (uint64_t)a1 + *(int *)(v12 + 36), v6);
  int v26 = *((unsigned __int8 *)a1 + 56);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  objc_msgSend(v3, sel_time);
  unint64_t v14 = sub_1C093AC98(v13);
  if ((v14 & 0x100000000) != 0) {
    int v15 = 0;
  }
  else {
    int v15 = v14;
  }
  objc_msgSend(v3, sel_timePlayed);
  uint64_t v17 = sub_1C093AD24(v16);
  if (v18) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = v17;
  }
  objc_msgSend(v3, sel_duration);
  unint64_t v21 = sub_1C093AC98(v20);
  if ((v21 & 0x100000000) != 0) {
    int v22 = 0;
  }
  else {
    int v22 = v21;
  }
  *(void *)a2 = v25;
  *((void *)a2 + 1) = v10;
  *((void *)a2 + 2) = v11;
  uint64_t v23 = (int *)type metadata accessor for FormatVideoPlayerSession();
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(&a2[v23[6]], v9, v6);
  a2[v23[7]] = v26;
  *(_DWORD *)&a2[v23[8]] = v15;
  *(void *)&a2[v23[9]] = v19;
  *(_DWORD *)&a2[v23[10]] = v22;
  return result;
}

Swift::Void __swiftcall FormatVideoPlayerProvider.playbackReadyToStart()()
{
  if (qword_1EB87BF18 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB93C748;
  sub_1BFF2E698(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  type metadata accessor for FormatVideoPlayerData();
  id v2 = v0;
  uint64_t v3 = sub_1C1515E2C();
  uint64_t v5 = v4;
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v5;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall FormatVideoPlayerProvider.playbackStarted()()
{
  uint64_t v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v13 - v5;
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    uint64_t v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1C0939C20(v7, v3);
    swift_unknownObjectRelease();
    sub_1C093B01C((uint64_t)v3, (uint64_t)v6);
    uint64_t v8 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 96))(v6, v9, v10);
    uint64_t v11 = v8[3];
    uint64_t v12 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 40))(v6, v11, v12);
    sub_1C093B080((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerSession);
  }
}

Swift::Void __swiftcall FormatVideoPlayerProvider.playbackPaused()()
{
  uint64_t v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - v5;
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    uint64_t v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1C0939C20(v7, v3);
    swift_unknownObjectRelease();
    sub_1C093B01C((uint64_t)v3, (uint64_t)v6);
    uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator), v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, v8, v9);
    sub_1C093B080((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerSession);
  }
}

Swift::Void __swiftcall FormatVideoPlayerProvider.playbackResumed()()
{
  uint64_t v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v13 - v5;
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    uint64_t v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1C0939C20(v7, v3);
    swift_unknownObjectRelease();
    sub_1C093B01C((uint64_t)v3, (uint64_t)v6);
    uint64_t v8 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 96))(v6, v9, v10);
    uint64_t v11 = v8[3];
    uint64_t v12 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 56))(v6, v11, v12);
    sub_1C093B080((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerSession);
  }
}

Swift::Void __swiftcall FormatVideoPlayerProvider.playbackFinished()()
{
  uint64_t v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v13 - v5;
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    uint64_t v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1C0939C20(v7, v3);
    swift_unknownObjectRelease();
    sub_1C093B01C((uint64_t)v3, (uint64_t)v6);
    uint64_t v8 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 72))(v6, v9, v10);
    uint64_t v11 = v8[3];
    uint64_t v12 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 104))(v11, v12);
    sub_1C093B080((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerSession);
  }
}

Swift::Void __swiftcall FormatVideoPlayerProvider.startedPictureInPicture()()
{
  uint64_t v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - v5;
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    uint64_t v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1C0939C20(v7, v3);
    swift_unknownObjectRelease();
    sub_1C093B01C((uint64_t)v3, (uint64_t)v6);
    uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator), v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 80))(v6, v8, v9);
    sub_1C093B080((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerSession);
  }
}

Swift::Void __swiftcall FormatVideoPlayerProvider.stoppedPictureInPicture()()
{
  uint64_t v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata;
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    uint64_t v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1C0939C20(v8, v3);
    swift_unknownObjectRelease();
    sub_1C093B01C((uint64_t)v3, (uint64_t)v6);
    uint64_t v9 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator), v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 88))(v6, v10, v11);
    uint64_t v12 = *(void **)(v0 + v7);
    if (v12)
    {
      if (objc_msgSend(v12, sel_playbackState) != (id)3)
      {
        uint64_t v13 = v9[3];
        uint64_t v14 = v9[4];
        __swift_project_boxed_opaque_existential_1(v9, v13);
        (*(void (**)(uint64_t, uint64_t))(v14 + 104))(v13, v14);
      }
    }
    sub_1C093B080((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerSession);
  }
}

id FormatVideoPlayerProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FormatVideoPlayerProvider.init()()
{
}

id FormatVideoPlayerProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C093AC98(double a1)
{
  BOOL v1 = a1 > 2147483650.0;
  if (a1 < -2147483650.0) {
    BOOL v1 = 1;
  }
  if (v1)
  {
    uint64_t v2 = 0;
    return v2 | ((unint64_t)v1 << 32);
  }
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (a1 <= -2147483650.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1 < 2147483650.0)
  {
    uint64_t v2 = (int)a1;
    return v2 | ((unint64_t)v1 << 32);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1C093AD24(double a1)
{
  if (a1 < -9.22337204e18 || a1 > 9.22337204e18) {
    return 0;
  }
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1 < 9.22337204e18) {
    return (uint64_t)a1;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed25FormatVideoPlayerProviderC17playbackInitiated16withButtonTappedySb_tF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v21 - v6;
  if (qword_1EB87BF18 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1EB93C748;
  sub_1BFF2E698(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
  uint64_t v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
  type metadata accessor for FormatVideoPlayerData();
  id v11 = v8;
  uint64_t v12 = sub_1C1515E2C();
  uint64_t v14 = v13;
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1BFE9C558();
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v14;
  sub_1C151F38C();
  sub_1C15197BC();

  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C0939C20(v10, v4);
    swift_unknownObjectRelease();
    sub_1C093B01C((uint64_t)v4, (uint64_t)v7);
    double v16 = (void *)(v1 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    uint64_t v17 = v16[3];
    uint64_t v18 = v16[4];
    __swift_project_boxed_opaque_existential_1(v16, v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 96))(v7, v17, v18);
    uint64_t v19 = v16[3];
    uint64_t v20 = v16[4];
    __swift_project_boxed_opaque_existential_1(v16, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v7, v19, v20);
    return sub_1C093B080((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerSession);
  }
  return result;
}

uint64_t sub_1C093B01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVideoPlayerSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C093B080(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void _s8NewsFeed25FormatVideoPlayerProviderC23playbackFailedWithErroryys0J0_pSgF_0()
{
  uint64_t v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v13 - v5;
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    uint64_t v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1C0939C20(v7, v3);
    swift_unknownObjectRelease();
    sub_1C093B01C((uint64_t)v3, (uint64_t)v6);
    uint64_t v8 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 64))(v6, v9, v10);
    uint64_t v11 = v8[3];
    uint64_t v12 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 104))(v11, v12);
    sub_1C093B080((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerSession);
  }
}

uint64_t sub_1C093B258()
{
  return type metadata accessor for FormatVideoPlayerProvider();
}

uint64_t type metadata accessor for FormatVideoPlayerProvider()
{
  uint64_t result = qword_1EA1A10E0;
  if (!qword_1EA1A10E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C093B2AC()
{
  uint64_t result = type metadata accessor for FormatVideoPlayerData();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FormatVideoPlayerProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatVideoPlayerProvider);
}

uint64_t sub_1C093B368(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1BFF661B8(0, v1, 0);
  uint64_t v2 = v27;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v24 = v7;
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v25 = *v12;
    uint64_t v26 = v12[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v13 = *(void *)(v27 + 16);
    unint64_t v14 = *(void *)(v27 + 24);
    if (v13 >= v14 >> 1) {
      uint64_t result = sub_1BFF661B8(v14 > 1, v13 + 1, 1);
    }
    *(void *)(v27 + 16) = v13 + 1;
    uint64_t v15 = v27 + 16 * v13;
    *(void *)(v15 + 32) = v25;
    *(void *)(v15 + 40) = v26;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v24 + 1;
    uint64_t v6 = v9;
    if (v24 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C093B5E0()
{
  if (!*(void *)(*(void *)(v0 + 32) + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1BFEF2D8C(0x7373616C63, 0xE500000000000000);
  uint64_t v1 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    sub_1BFF27ECC();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C151FF1C();
    swift_bridgeObjectRelease();
    int64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      sub_1BFF661B8(0, v4, 0);
      int v5 = (uint64_t *)(v3 + 56);
      do
      {
        uint64_t v6 = *(v5 - 3);
        uint64_t v7 = *(v5 - 2);
        uint64_t v8 = *(v5 - 1);
        uint64_t v9 = *v5;
        swift_bridgeObjectRetain();
        uint64_t v10 = MEMORY[0x1C18C6220](v6, v7, v8, v9);
        uint64_t v12 = v11;
        swift_bridgeObjectRelease();
        unint64_t v14 = *(void *)(v1 + 16);
        unint64_t v13 = *(void *)(v1 + 24);
        if (v14 >= v13 >> 1) {
          sub_1BFF661B8(v13 > 1, v14 + 1, 1);
        }
        *(void *)(v1 + 16) = v14 + 1;
        uint64_t v15 = v1 + 16 * v14;
        *(void *)(v15 + 32) = v10;
        *(void *)(v15 + 40) = v12;
        v5 += 4;
        --v4;
      }
      while (v4);
    }
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1C093B764()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDOMTag()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for FormatDOMTagKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C093B894);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDOMTagKind()
{
  return &type metadata for FormatDOMTagKind;
}

unint64_t sub_1C093B8D0()
{
  unint64_t result = qword_1EA1A11B0;
  if (!qword_1EA1A11B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A11B0);
  }
  return result;
}

BOOL sub_1C093B924(uint64_t *a1, uint64_t *a2)
{
  return sub_1C093BB60(*a1, *a2);
}

uint64_t sub_1C093B930()
{
  if (!*(unsigned char *)(v0 + 40))
  {
    uint64_t v2 = 60;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C093BA54(*(void *)(v0 + 32));
LABEL_6:
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (*(unsigned char *)(v0 + 40) != 1)
  {
    uint64_t v2 = 12092;
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  uint64_t v2 = 60;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C093BA54(*(void *)(v0 + 32));
  sub_1C151E80C();
  swift_bridgeObjectRelease();
LABEL_7:
  sub_1C151E80C();
  return v2;
}

uint64_t sub_1C093BA54(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  v2[0] = sub_1C093B368(a1);
  swift_bridgeObjectRetain();
  sub_1BFD8BB48(v2);
  swift_bridgeObjectRelease();
  sub_1BFED9C20();
  sub_1BFE99E40();
  sub_1C151E55C();
  swift_release();
  v2[0] = 32;
  v2[1] = 0xE100000000000000;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v2[0];
}

uint64_t sub_1C093BB3C()
{
  return sub_1C093B930();
}

BOOL sub_1C093BB60(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return (sub_1C02B18E8(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) != 0
  }
        && *(unsigned __int8 *)(a1 + 40) == *(unsigned __int8 *)(a2 + 40);
  char v5 = sub_1C1520A9C();
  BOOL result = 0;
  if (v5) {
    return (sub_1C02B18E8(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) != 0
  }
        && *(unsigned __int8 *)(a1 + 40) == *(unsigned __int8 *)(a2 + 40);
  return result;
}

uint64_t sub_1C093BBD8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v10;
        uint64_t v11 = a2[2];
        uint64_t v12 = a2[3];
        unsigned __int8 v13 = *((unsigned char *)a2 + 32);
        swift_bridgeObjectRetain();
        sub_1BFDCA484(v11, v12, v13);
        *(void *)(a1 + 16) = v11;
        *(void *)(a1 + 24) = v12;
        *(unsigned char *)(a1 + 32) = v13;
        break;
      case 2u:
        uint64_t v14 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v14;
        sub_1C03E7BEC();
        uint64_t v16 = *(int *)(v15 + 48);
        uint64_t v17 = a1 + v16;
        uint64_t v18 = (uint64_t)a2 + v16;
        uint64_t v19 = sub_1C151CA7C();
        unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v17, v18, v19);
        break;
      case 3u:
        long long v21 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v21;
        (**(void (***)(uint64_t, uint64_t *))(v21 - 8))(a1, a2);
        *(void *)(a1 + 40) = a2[5];
        swift_retain();
        break;
      case 4u:
        uint64_t v22 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v22;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = a2[5];
        swift_bridgeObjectRetain();
        if (v7)
        {
          uint64_t v8 = a2[6];
          *(void *)(a1 + 40) = v7;
          *(void *)(a1 + 48) = v8;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 16, (uint64_t)(a2 + 2), v7);
        }
        else
        {
          long long v23 = *((_OWORD *)a2 + 2);
          *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
          *(_OWORD *)(a1 + 32) = v23;
          *(void *)(a1 + 48) = a2[6];
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C093BE50(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t result = swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40))
      {
        uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(a1 + 24);
      unsigned __int8 v5 = *(unsigned char *)(a1 + 32);
      uint64_t result = sub_1BFDCA350(v3, v4, v5);
      break;
    case 2:
      swift_bridgeObjectRelease();
      sub_1C03E7BEC();
      uint64_t v7 = a1 + *(int *)(v6 + 48);
      uint64_t v8 = sub_1C151CA7C();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      uint64_t result = v9(v7, v8);
      break;
    case 3:
      __swift_destroy_boxed_opaque_existential_1(a1);
      uint64_t result = swift_release();
      break;
    case 4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C093BFC0(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      unsigned __int8 v10 = *(unsigned char *)(a2 + 32);
      swift_bridgeObjectRetain();
      sub_1BFDCA484(v8, v9, v10);
      *(void *)(a1 + 16) = v8;
      *(void *)(a1 + 24) = v9;
      *(unsigned char *)(a1 + 32) = v10;
      break;
    case 2u:
      uint64_t v11 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v11;
      sub_1C03E7BEC();
      uint64_t v13 = *(int *)(v12 + 48);
      uint64_t v14 = a1 + v13;
      uint64_t v15 = a2 + v13;
      uint64_t v16 = sub_1C151CA7C();
      uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
      break;
    case 3u:
      long long v18 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v18;
      (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1, a2);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_retain();
      break;
    case 4u:
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v19;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      if (v5)
      {
        uint64_t v6 = *(void *)(a2 + 48);
        *(void *)(a1 + 40) = v5;
        *(void *)(a1 + 48) = v6;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8))(a1 + 16, a2 + 16, v5);
      }
      else
      {
        long long v20 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v20;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C093C1E8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C093C448(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v5 = *(void *)(a2 + 16);
        uint64_t v6 = *(void *)(a2 + 24);
        unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
        swift_bridgeObjectRetain();
        sub_1BFDCA484(v5, v6, v7);
        *(void *)(a1 + 16) = v5;
        *(void *)(a1 + 24) = v6;
        *(unsigned char *)(a1 + 32) = v7;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        sub_1C03E7BEC();
        uint64_t v9 = *(int *)(v8 + 48);
        uint64_t v10 = a1 + v9;
        uint64_t v11 = a2 + v9;
        uint64_t v12 = sub_1C151CA7C();
        uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        break;
      case 3u:
        uint64_t v14 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v14;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1, a2);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        swift_retain();
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v4 = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        if (v4)
        {
          *(void *)(a1 + 40) = v4;
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16, v4);
        }
        else
        {
          long long v15 = *(_OWORD *)(a2 + 16);
          long long v16 = *(_OWORD *)(a2 + 32);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(_OWORD *)(a1 + 16) = v15;
          *(_OWORD *)(a1 + 32) = v16;
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C093C448(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugJournalGroupItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugJournalGroupItem()
{
  uint64_t result = qword_1EA1A11B8;
  if (!qword_1EA1A11B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1C093C4F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    sub_1C03E7BEC();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C151CA7C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1C093C5C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C093C448((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      sub_1C03E7BEC();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C151CA7C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C093C6A8()
{
  uint64_t v3 = "8";
  uint64_t v4 = &unk_1C157C570;
  uint64_t result = sub_1C151CA7C();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v2;
    uint64_t v6 = &unk_1C157C5A0;
    uint64_t v7 = &unk_1C157C588;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id sub_1C093C774(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 4:
    case 5:
    case 6:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for FeedDatabaseError(uint64_t a1)
{
}

void sub_1C093C7E0(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      break;
    case 3:

      break;
    default:
      return;
  }
}

uint64_t _s8NewsFeed17FeedDatabaseErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C093C774(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FeedDatabaseError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C093C774(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C093C7E0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FeedDatabaseError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C093C7E0(v4, v5, v6);
  return a1;
}

uint64_t sub_1C093C928(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 6u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 7);
  }
}

uint64_t sub_1C093C940(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(void *)uint64_t result = a2 - 7;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 7;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeedDatabaseError()
{
  return &type metadata for FeedDatabaseError;
}

void *sub_1C093C968(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v7 = a2[1];
    *a1 = *a2;
    swift_retain();
    if (v7 != 1) {
      swift_bridgeObjectRetain();
    }
    a1[1] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1C0178190();
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      goto LABEL_16;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v18 = sub_1C151928C();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v26(v9, v10, v18);
      sub_1BFF05D18();
      uint64_t v20 = v19;
      v26(&v9[*(int *)(v19 + 48)], &v10[*(int *)(v19 + 48)], v18);
      uint64_t v17 = *(int *)(v20 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v24 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v9, v10, v24);
        goto LABEL_15;
      }
      uint64_t v15 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
      sub_1C015F8A0();
      uint64_t v17 = *(int *)(v16 + 48);
    }
    long long v21 = &v9[v17];
    uint64_t v22 = &v10[v17];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)long long v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    swift_bridgeObjectRetain();
LABEL_15:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    goto LABEL_16;
  }
  uint64_t v6 = *a2;
  *a1 = *a2;
  a1 = (void *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1C093CC80(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_2:
    return swift_bridgeObjectRelease();
  }
  swift_release();
  if (*(void *)(a1 + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = a1 + *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4);
  if (!result)
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch(result)
    {
      case 2:
        uint64_t v7 = sub_1C151928C();
        uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
        v8(v3, v7);
        sub_1BFF05D18();
        v8(v3 + *(int *)(v9 + 48), v7);
        goto LABEL_2;
      case 1:
        uint64_t v10 = sub_1C151928C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v3, v10);
        sub_1C015F8A0();
        goto LABEL_2;
      case 0:
        uint64_t v5 = sub_1C151928C();
        uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
        return v6(v3, v5);
    }
  }
  return result;
}

void *sub_1C093CE88(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    swift_retain();
    if (v4 != 1) {
      swift_bridgeObjectRetain();
    }
    a1[1] = v4;
    uint64_t v5 = *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_1C0178190();
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      goto LABEL_14;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = sub_1C151928C();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      v23(v6, v7, v15);
      sub_1BFF05D18();
      uint64_t v17 = v16;
      v23(&v6[*(int *)(v16 + 48)], &v7[*(int *)(v16 + 48)], v15);
      uint64_t v14 = *(int *)(v17 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v21 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v6, v7, v21);
        goto LABEL_13;
      }
      uint64_t v12 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v6, v7, v12);
      sub_1C015F8A0();
      uint64_t v14 = *(int *)(v13 + 48);
    }
    uint64_t v18 = &v6[v14];
    uint64_t v19 = &v7[v14];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    goto LABEL_14;
  }
  *a1 = *a2;
  swift_bridgeObjectRetain();
LABEL_14:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C093D148(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C093D424((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    *a1 = *a2;
    uint64_t v4 = a2[1];
    swift_retain();
    if (v4 != 1) {
      swift_bridgeObjectRetain();
    }
    a1[1] = v4;
    uint64_t v5 = *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_1C0178190();
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      goto LABEL_15;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = sub_1C151928C();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      v22(v6, v7, v15);
      sub_1BFF05D18();
      uint64_t v17 = v16;
      v22(&v6[*(int *)(v16 + 48)], &v7[*(int *)(v16 + 48)], v15);
      uint64_t v14 = *(int *)(v17 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v20 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v6, v7, v20);
        goto LABEL_14;
      }
      uint64_t v12 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v6, v7, v12);
      sub_1C015F8A0();
      uint64_t v14 = *(int *)(v13 + 48);
    }
    uint64_t v18 = &v6[v14];
    uint64_t v19 = &v7[v14];
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = *((void *)v19 + 1);
    swift_bridgeObjectRetain();
LABEL_14:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    goto LABEL_15;
  }
  return a1;
}

uint64_t sub_1C093D424(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatOptionsNodeStatementEvaluation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatOptionsNodeStatementEvaluation()
{
  uint64_t result = qword_1EB892B20;
  if (!qword_1EB892B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1C093D4CC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (!swift_getEnumCaseMultiPayload())
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1C0178190();
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v16 = sub_1C151928C();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      v21(v7, v8, v16);
      sub_1BFF05D18();
      uint64_t v18 = v17;
      v21(&v7[*(int *)(v17 + 48)], &v8[*(int *)(v17 + 48)], v16);
      uint64_t v15 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v19 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v7, v8, v19);
        goto LABEL_11;
      }
      uint64_t v13 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      sub_1C015F8A0();
      uint64_t v15 = *(int *)(v14 + 48);
    }
    *(_OWORD *)&v7[v15] = *(_OWORD *)&v8[v15];
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    goto LABEL_12;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1C093D770(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C093D424((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1C0178190();
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v16 = sub_1C151928C();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      v21(v7, v8, v16);
      sub_1BFF05D18();
      uint64_t v18 = v17;
      v21(&v7[*(int *)(v17 + 48)], &v8[*(int *)(v17 + 48)], v16);
      uint64_t v15 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v19 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v7, v8, v19);
        goto LABEL_12;
      }
      uint64_t v13 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      sub_1C015F8A0();
      uint64_t v15 = *(int *)(v14 + 48);
    }
    *(_OWORD *)&v7[v15] = *(_OWORD *)&v8[v15];
LABEL_12:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    goto LABEL_13;
  }
  return a1;
}

uint64_t sub_1C093DA24()
{
  uint64_t result = type metadata accessor for FormatOptionsNodeStatementResult();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of FeedItemDimmingEvaluatorType.shouldDim(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void *initializeBufferWithCopyOfBuffer for FeedItemDimmingType(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      *a1 = *a2;
      swift_unknownObjectRetain();
      goto LABEL_202;
    case 3u:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain();
      goto LABEL_202;
    default:
      uint64_t v6 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v7 = a2[1];
          *a1 = *a2;
          a1[1] = v7;
          uint64_t v8 = a2[3];
          a1[2] = a2[2];
          a1[3] = v8;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v9 = a2 + 5;
          unint64_t v10 = a2[6];
          swift_bridgeObjectRetain();
          if (v10 >= 0x11)
          {
            a1[5] = *v9;
            a1[6] = v10;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 5) = *(_OWORD *)v9;
          }
          goto LABEL_201;
        case 1u:
          uint64_t v49 = a2[1];
          *a1 = *a2;
          a1[1] = v49;
          uint64_t v50 = a2[3];
          a1[2] = a2[2];
          a1[3] = v50;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v51 = a2[6];
          a1[5] = a2[5];
          a1[6] = v51;
          uint64_t v52 = a2[8];
          a1[7] = a2[7];
          a1[8] = v52;
          char v53 = a2 + 9;
          unint64_t v54 = a2[10];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v54 >= 0x11)
          {
            a1[9] = *v53;
            a1[10] = v54;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 9) = *(_OWORD *)v53;
          }
          goto LABEL_201;
        case 2u:
          uint64_t v13 = a2[1];
          *a1 = *a2;
          a1[1] = v13;
          uint64_t v14 = (int *)type metadata accessor for FeedBannerAd();
          uint64_t v15 = v14[5];
          uint64_t v16 = (char *)a1 + v15;
          uint64_t v17 = (char *)a2 + v15;
          uint64_t v18 = sub_1C151DBAC();
          uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v16, v17, v18);
          *(void *)((char *)a1 + v14[6]) = *(void *)((char *)a2 + v14[6]);
          uint64_t v20 = v14[7];
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          *(void *)uint64_t v21 = *(void *)v22;
          v21[8] = v22[8];
          uint64_t v23 = v14[8];
          uint64_t v24 = (char *)a1 + v23;
          uint64_t v25 = (char *)a2 + v23;
          unint64_t v26 = *((void *)v25 + 1);
          if (v26 >= 0x11) {
            goto LABEL_42;
          }
          *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
          goto LABEL_201;
        case 3u:
          uint64_t v55 = a2[1];
          *a1 = *a2;
          a1[1] = v55;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v56 = a2[5];
          a1[4] = a2[4];
          a1[5] = v56;
          a1[6] = a2[6];
          *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
          uint64_t v395 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v57 = v395[10];
          char v58 = (char *)a1 + v57;
          char v59 = (char *)a2 + v57;
          unsigned char *v58 = *((unsigned char *)a2 + v57);
          v58[1] = *((unsigned char *)a2 + v57 + 1);
          uint64_t v391 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v60 = v391[6];
          __dst = &v58[v60];
          char v61 = &v59[v60];
          char v62 = (int *)type metadata accessor for SharedItem();
          uint64_t v376 = *((void *)v62 - 1);
          char v63 = *(unsigned int (**)(char *, uint64_t, int *))(v376 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v63(v61, 1, v62))
          {
            uint64_t v64 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v61, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            uint64_t v179 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(__dst, v61, v179);
            __dst[v62[5]] = v61[v62[5]];
            uint64_t v180 = v62[6];
            uint64_t v181 = *(void **)&v61[v180];
            *(void *)&__dst[v180] = v181;
            uint64_t v182 = v62[7];
            uint64_t v381 = &v61[v182];
            uint64_t v386 = &__dst[v182];
            uint64_t v183 = sub_1C1515FDC();
            uint64_t v375 = *(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16);
            id v184 = v181;
            v375(v386, v381, v183);
            (*(void (**)(char *, void, uint64_t, int *))(v376 + 56))(__dst, 0, 1, v62);
          }
          v58[v391[7]] = v59[v391[7]];
          v58[v391[8]] = v59[v391[8]];
          v58[v391[9]] = v59[v391[9]];
          v58[v391[10]] = v59[v391[10]];
          uint64_t v185 = v395[11];
          uint64_t v186 = (char *)a1 + v185;
          uint64_t v187 = (char *)a2 + v185;
          uint64_t v188 = sub_1C151D2DC();
          uint64_t v189 = *(void *)(v188 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48))(v187, 1, v188))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v186, v187, *(void *)(*(void *)(v190 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v186, v187, v188);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v189 + 56))(v186, 0, 1, v188);
          }
          uint64_t v197 = v395[12];
          uint64_t v198 = (void *)((char *)a1 + v197);
          uint64_t v199 = (void *)((char *)a2 + v197);
          unint64_t v200 = v199[1];
          if (v200 >= 0x11)
          {
            *uint64_t v198 = *v199;
            v198[1] = v200;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v198 = *(_OWORD *)v199;
          }
          uint64_t v201 = v395[13];
          unint64_t v202 = *(void *)((char *)a2 + v201);
          if (v202 >= 2)
          {
            if (v202 == 2)
            {
              *(void *)((char *)a1 + v201) = 2;
            }
            else
            {
              *(void *)((char *)a1 + v201) = v202;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)a1 + v201) = v202;
          }
          uint64_t v239 = v395[14];
          uint64_t v240 = *(void **)((char *)a2 + v239);
          *(void *)((char *)a1 + v239) = v240;
          id v241 = v240;
          goto LABEL_201;
        case 4u:
          uint64_t v27 = a2[1];
          *a1 = *a2;
          a1[1] = v27;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v28 = a2 + 3;
          unint64_t v29 = a2[4];
          if (v29 >= 0x11)
          {
            a1[3] = *v28;
            a1[4] = v29;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v28;
          }
          uint64_t v114 = a2[6];
          a1[5] = a2[5];
          a1[6] = v114;
          uint64_t v115 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v116 = v115[8];
          int v117 = (char *)a1 + v116;
          uint64_t v118 = (char *)a2 + v116;
          uint64_t v119 = sub_1C1515FDC();
          uint64_t v120 = *(void *)(v119 - 8);
          uint64_t v121 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
          swift_bridgeObjectRetain();
          v121(v117, v118, v119);
          uint64_t v397 = v115;
          uint64_t v122 = v115[9];
          uint64_t v123 = (char *)a1 + v122;
          uint64_t v124 = (char *)a2 + v122;
          int v385 = (void *)v119;
          __dsta = (void (*)(char *, char *, void *))v121;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))((char *)a2 + v122, 1, v119))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
          }
          else
          {
            v121(v123, v124, v119);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v123, 0, 1, v119);
          }
          *(void *)((char *)a1 + v115[10]) = *(void *)((char *)a2 + v115[10]);
          *(void *)((char *)a1 + v115[11]) = *(void *)((char *)a2 + v115[11]);
          uint64_t v157 = v115[12];
          int v158 = (void *)((char *)a1 + v157);
          uint64_t v392 = (void *)((char *)a2 + v157);
          uint64_t v159 = type metadata accessor for FeedHeadline(0);
          uint64_t v160 = *(void *)(v159 - 8);
          uint64_t v161 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v160 + 48);
          swift_retain();
          swift_retain();
          if (v161(v392, 1, v159))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v158, v392, *(void *)(*(void *)(v162 - 8) + 64));
          }
          else
          {
            uint64_t v374 = (int *)v159;
            uint64_t v168 = v392[1];
            *int v158 = *v392;
            v158[1] = v168;
            v158[2] = v392[2];
            *((unsigned char *)v158 + 24) = *((unsigned char *)v392 + 24);
            uint64_t v169 = v392[5];
            v158[4] = v392[4];
            v158[5] = v169;
            v158[6] = v392[6];
            *((unsigned char *)v158 + 56) = *((unsigned char *)v392 + 56);
            uint64_t v170 = *(int *)(v159 + 40);
            uint64_t v377 = v158;
            uint64_t v171 = (char *)v158 + v170;
            uint64_t v172 = (char *)v392 + v170;
            *uint64_t v171 = *((unsigned char *)v392 + v170);
            v171[1] = *((unsigned char *)v392 + v170 + 1);
            int v373 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v173 = v373[6];
            int v372 = &v171[v173];
            int v174 = &v172[v173];
            uint64_t v175 = (int *)type metadata accessor for SharedItem();
            uint64_t v371 = *((void *)v175 - 1);
            uint64_t v176 = *(unsigned int (**)(char *, uint64_t, int *))(v371 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v176(v174, 1, v175))
            {
              uint64_t v177 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v372, v174, *(void *)(*(void *)(v177 - 8) + 64));
            }
            else
            {
              uint64_t v265 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 16))(v372, v174, v265);
              v372[v175[5]] = v174[v175[5]];
              uint64_t v266 = v175[6];
              uint64_t v267 = *(void **)&v174[v266];
              *(void *)&v372[v266] = v267;
              uint64_t v268 = v175[7];
              uint64_t v269 = &v372[v268];
              uint64_t v270 = &v174[v268];
              id v271 = v267;
              __dsta(v269, v270, v385);
              (*(void (**)(char *, void, uint64_t, int *))(v371 + 56))(v372, 0, 1, v175);
            }
            v171[v373[7]] = v172[v373[7]];
            v171[v373[8]] = v172[v373[8]];
            v171[v373[9]] = v172[v373[9]];
            v171[v373[10]] = v172[v373[10]];
            uint64_t v272 = v374[11];
            int v273 = (char *)v377 + v272;
            uint64_t v274 = (char *)v392 + v272;
            uint64_t v275 = sub_1C151D2DC();
            uint64_t v276 = *(void *)(v275 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v276 + 48))(v274, 1, v275))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v273, v274, *(void *)(*(void *)(v277 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v276 + 16))(v273, v274, v275);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v276 + 56))(v273, 0, 1, v275);
            }
            uint64_t v278 = v374[12];
            uint64_t v279 = (void *)((char *)v377 + v278);
            uint64_t v280 = (void *)((char *)v392 + v278);
            unint64_t v281 = v280[1];
            if (v281 >= 0x11)
            {
              *uint64_t v279 = *v280;
              v279[1] = v281;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v279 = *(_OWORD *)v280;
            }
            uint64_t v282 = v374[13];
            unint64_t v283 = *(void *)((char *)v392 + v282);
            if (v283 >= 2)
            {
              if (v283 == 2)
              {
                *(void *)((char *)v377 + v282) = 2;
              }
              else
              {
                *(void *)((char *)v377 + v282) = v283;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)v377 + v282) = v283;
            }
            uint64_t v306 = v374[14];
            uint64_t v307 = *(void **)((char *)v392 + v306);
            *(void *)((char *)v377 + v306) = v307;
            uint64_t v308 = *(void (**)(void *, void, uint64_t, int *))(v160 + 56);
            id v309 = v307;
            v308(v377, 0, 1, v374);
          }
          uint64_t v310 = v397[13];
          uint64_t v311 = (void *)((char *)a1 + v310);
          uint64_t v312 = (void *)((char *)a2 + v310);
          uint64_t v313 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v314 = *(void *)(v313 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v314 + 48))(v312, 1, v313))
          {
            sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v311, v312, *(void *)(*(void *)(v315 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v317 = *v312;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v318 = v312[1];
              void *v311 = v317;
              v311[1] = v318;
              uint64_t v319 = type metadata accessor for GenericDataVisualization();
              uint64_t v320 = *(int *)(v319 + 20);
              int v393 = (char *)v311 + v320;
              int v321 = (char *)v312 + v320;
              swift_bridgeObjectRetain();
              __dsta(v393, v321, v385);
              *(void *)((char *)v311 + *(int *)(v319 + 24)) = *(uint64_t *)((char *)v312 + *(int *)(v319 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              void *v311 = v317;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v314 + 56))(v311, 0, 1, v313);
          }
          *((unsigned char *)a1 + v397[14]) = *((unsigned char *)a2 + v397[14]);
          goto LABEL_201;
        case 5u:
          uint64_t v65 = (void *)*a2;
          uint64_t v66 = a2[1];
          *a1 = *a2;
          a1[1] = v66;
          a1[2] = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v67 = (void *)a2[7];
          a1[6] = a2[6];
          a1[7] = v67;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v68 = a2[10];
          id v69 = v65;
          swift_bridgeObjectRetain();
          id v70 = v67;
          if (v68 == 1)
          {
            long long v71 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 11) = v71;
            *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = v68;
            uint64_t v127 = a2[12];
            a1[11] = a2[11];
            a1[12] = v127;
            long long v129 = (void *)a2[13];
            uint64_t v128 = a2[14];
            a1[13] = v129;
            a1[14] = v128;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v130 = v129;
          }
          uint64_t v131 = a2 + 15;
          unint64_t v132 = a2[16];
          if (v132 >= 0x11)
          {
            a1[15] = *v131;
            a1[16] = v132;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)v131;
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          goto LABEL_201;
        case 6u:
          int v72 = *((unsigned __int8 *)a2 + 281);
          if (v72 == 2)
          {
            uint64_t v209 = a2[1];
            *a1 = *a2;
            a1[1] = v209;
            a1[2] = a2[2];
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            a1[4] = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            uint64_t v210 = a2[7];
            a1[6] = a2[6];
            a1[7] = v210;
            uint64_t v211 = a2[9];
            a1[8] = a2[8];
            a1[9] = v211;
            uint64_t v212 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v212 != 1)
            {
              a1[10] = a2[10];
              a1[11] = v212;
              uint64_t v249 = a2[15];
              swift_bridgeObjectRetain();
              if (v249)
              {
                uint64_t v250 = a2[16];
                a1[15] = v249;
                a1[16] = v250;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v249 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v249);
                a1[17] = a2[17];
              }
              else
              {
                long long v340 = *((_OWORD *)a2 + 7);
                *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
                *((_OWORD *)a1 + 7) = v340;
                *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
              }
              *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
              goto LABEL_172;
            }
            int v213 = a1 + 10;
            uint64_t v214 = a2 + 10;
            long long v215 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v215;
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          }
          else
          {
            if (v72 != 1)
            {
              uint64_t v216 = (void *)*a2;
              uint64_t v217 = a2[1];
              *a1 = *a2;
              a1[1] = v217;
              a1[2] = a2[2];
              *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
              a1[4] = a2[4];
              *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
              uint64_t v218 = (void *)a2[7];
              a1[6] = a2[6];
              a1[7] = v218;
              *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
              uint64_t v219 = a2[10];
              id v220 = v216;
              swift_bridgeObjectRetain();
              id v221 = v218;
              if (v219 == 1)
              {
                long long v222 = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
                *(_OWORD *)(a1 + 11) = v222;
                *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
              }
              else
              {
                a1[9] = a2[9];
                a1[10] = v219;
                uint64_t v251 = a2[12];
                a1[11] = a2[11];
                a1[12] = v251;
                uint64_t v253 = (void *)a2[13];
                uint64_t v252 = a2[14];
                a1[13] = v253;
                a1[14] = v252;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v254 = v253;
              }
              int v255 = a2 + 15;
              unint64_t v256 = a2[16];
              if (v256 >= 0x11)
              {
                a1[15] = *v255;
                a1[16] = v256;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 15) = *(_OWORD *)v255;
              }
              *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
              goto LABEL_172;
            }
            long long v73 = (void *)*a2;
            uint64_t v74 = a2[1];
            *a1 = *a2;
            a1[1] = v74;
            a1[2] = a2[2];
            *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
            a1[4] = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            uint64_t v75 = (void *)a2[7];
            a1[6] = a2[6];
            a1[7] = v75;
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v76 = a2[10];
            id v77 = v73;
            swift_bridgeObjectRetain();
            id v78 = v75;
            if (v76 == 1)
            {
              long long v79 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 11) = v79;
              *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              a1[9] = a2[9];
              a1[10] = v76;
              uint64_t v243 = a2[12];
              a1[11] = a2[11];
              a1[12] = v243;
              int v245 = (void *)a2[13];
              uint64_t v244 = a2[14];
              a1[13] = v245;
              a1[14] = v244;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v246 = v245;
            }
            uint64_t v247 = a2 + 15;
            unint64_t v248 = a2[16];
            if (v248 >= 0x11)
            {
              a1[15] = *v247;
              a1[16] = v248;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 15) = *(_OWORD *)v247;
            }
            uint64_t v214 = a2 + 18;
            uint64_t v257 = (void *)a2[18];
            *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            if (v257)
            {
              uint64_t v258 = a2[19];
              uint64_t v259 = a2[20];
              a1[18] = v257;
              a1[19] = v258;
              a1[20] = v259;
              *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
              a1[22] = a2[22];
              *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
              uint64_t v260 = (void *)a2[25];
              a1[24] = a2[24];
              a1[25] = v260;
              *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
              uint64_t v261 = a2[28];
              id v262 = v257;
              swift_bridgeObjectRetain();
              id v263 = v260;
              if (v261 == 1)
              {
                long long v264 = *(_OWORD *)(a2 + 29);
                *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
                *(_OWORD *)(a1 + 29) = v264;
                *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
              }
              else
              {
                a1[27] = a2[27];
                a1[28] = v261;
                uint64_t v288 = a2[30];
                a1[29] = a2[29];
                a1[30] = v288;
                int v290 = (void *)a2[31];
                uint64_t v289 = a2[32];
                a1[31] = v290;
                a1[32] = v289;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v291 = v290;
              }
              uint64_t v292 = a2 + 33;
              unint64_t v293 = a2[34];
              if (v293 >= 0x11)
              {
                a1[33] = *v292;
                a1[34] = v293;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 33) = *(_OWORD *)v292;
              }
              *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_172:
              *((unsigned char *)a1 + 281) = v72;
              goto LABEL_201;
            }
            int v213 = a1 + 18;
            long long v284 = *((_OWORD *)a2 + 16);
            *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
            *((_OWORD *)a1 + 16) = v284;
            *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            long long v285 = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
            *((_OWORD *)a1 + 12) = v285;
            long long v286 = *((_OWORD *)a2 + 14);
            *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 14) = v286;
          }
          long long v287 = v214[1];
          *int v213 = *v214;
          v213[1] = v287;
          goto LABEL_172;
        case 7u:
          uint64_t v80 = a2[1];
          *a1 = *a2;
          a1[1] = v80;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v81 = a2[7];
          a1[6] = a2[6];
          a1[7] = v81;
          uint64_t v82 = a2[9];
          a1[8] = a2[8];
          a1[9] = v82;
          uint64_t v83 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v83 == 1)
          {
            long long v84 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v84;
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            long long v85 = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            *((_OWORD *)a1 + 6) = v85;
          }
          else
          {
            a1[10] = a2[10];
            a1[11] = v83;
            uint64_t v133 = a2[15];
            swift_bridgeObjectRetain();
            if (v133)
            {
              uint64_t v134 = a2[16];
              a1[15] = v133;
              a1[16] = v134;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v133 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v133);
              a1[17] = a2[17];
            }
            else
            {
              long long v242 = *((_OWORD *)a2 + 7);
              *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
              *((_OWORD *)a1 + 7) = v242;
              *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
            }
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          }
          goto LABEL_201;
        case 8u:
          uint64_t v86 = a2[1];
          *a1 = *a2;
          a1[1] = v86;
          uint64_t v87 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          long long v88 = (void *)((char *)a1 + v87);
          uint64_t v89 = (char *)a2 + v87;
          uint64_t v90 = *(void *)((char *)a2 + v87 + 8);
          *long long v88 = *(void *)((char *)a2 + v87);
          v88[1] = v90;
          uint64_t v91 = *(void *)((char *)a2 + v87 + 24);
          v88[2] = *(void *)((char *)a2 + v87 + 16);
          v88[3] = v91;
          uint64_t v396 = type metadata accessor for FormatCustomItem.Resolved();
          uint64_t v92 = *(int *)(v396 + 24);
          int v384 = (char *)v88 + v92;
          uint64_t v93 = &v89[v92];
          uint64_t v94 = type metadata accessor for FormatCustomItem.Action();
          uint64_t v380 = *(void *)(v94 - 8);
          uint64_t v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v380 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v95(v93, 1, v94))
          {
            sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v384, v93, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            uint64_t v191 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16))(v384, v93, v191);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v380 + 56))(v384, 0, 1, v94);
          }
          *(void *)((char *)v88 + *(int *)(v396 + 28)) = *(void *)&v89[*(int *)(v396 + 28)];
          swift_bridgeObjectRetain();
          goto LABEL_201;
        case 9u:
          uint64_t v30 = a2[1];
          *a1 = *a2;
          a1[1] = v30;
          uint64_t v31 = a2[3];
          a1[2] = a2[2];
          a1[3] = v31;
          uint64_t v32 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v32)
          {
            uint64_t v33 = a2[8];
            a1[7] = v32;
            a1[8] = v33;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v32);
          }
          else
          {
            long long v152 = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 3) = v152;
            a1[8] = a2[8];
          }
          uint64_t v153 = a1 + 9;
          uint64_t v154 = a2 + 9;
          uint64_t v155 = a2[12];
          if (v155)
          {
            uint64_t v156 = a2[13];
            a1[12] = v155;
            a1[13] = v156;
            (**(void (***)(_OWORD *, _OWORD *))(v155 - 8))(v153, v154);
          }
          else
          {
            long long v163 = *(_OWORD *)(a2 + 11);
            _OWORD *v153 = *v154;
            *(_OWORD *)(a1 + 11) = v163;
            a1[13] = a2[13];
          }
          uint64_t v164 = a1 + 14;
          uint64_t v165 = a2 + 14;
          uint64_t v166 = a2[17];
          if (v166)
          {
            uint64_t v167 = a2[18];
            a1[17] = v166;
            a1[18] = v167;
            (**(void (***)(_OWORD *, _OWORD *))(v166 - 8))(v164, v165);
          }
          else
          {
            long long v178 = *((_OWORD *)a2 + 8);
            *uint64_t v164 = *v165;
            *((_OWORD *)a1 + 8) = v178;
            a1[18] = a2[18];
          }
          goto LABEL_201;
        case 0xAu:
          uint64_t v97 = a2[1];
          *a1 = *a2;
          a1[1] = v97;
          int v98 = (int *)type metadata accessor for FeedEngagementBanner();
          uint64_t v99 = v98[5];
          uint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = (char *)a2 + v99;
          uint64_t v102 = sub_1C151959C();
          uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
          swift_bridgeObjectRetain();
          v103(v100, v101, v102);
          *(void *)((char *)a1 + v98[6]) = *(void *)((char *)a2 + v98[6]);
          uint64_t v104 = v98[7];
          uint64_t v105 = (char *)a1 + v104;
          uint64_t v106 = (char *)a2 + v104;
          *(void *)uint64_t v105 = *(void *)v106;
          v105[8] = v106[8];
          uint64_t v107 = v98[8];
          uint64_t v24 = (char *)a1 + v107;
          uint64_t v25 = (char *)a2 + v107;
          unint64_t v26 = *((void *)v25 + 1);
          if (v26 >= 0x11)
          {
LABEL_42:
            *(void *)uint64_t v24 = *(void *)v25;
            *((void *)v24 + 1) = v26;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
          }
          goto LABEL_201;
        case 0xBu:
          *a1 = *a2;
          swift_retain();
          goto LABEL_201;
        case 0xCu:
          uint64_t v34 = a2[1];
          *a1 = *a2;
          a1[1] = v34;
          uint64_t v35 = a2[3];
          a1[2] = a2[2];
          a1[3] = v35;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_201;
        case 0xDu:
          uint64_t v108 = a2[1];
          *a1 = *a2;
          a1[1] = v108;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v109 = a2 + 3;
          unint64_t v110 = a2[4];
          if (v110 >= 0x11)
          {
            a1[3] = *v109;
            a1[4] = v110;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v109;
          }
          uint64_t v135 = a2[6];
          a1[5] = a2[5];
          a1[6] = v135;
          uint64_t v136 = (void *)a2[8];
          a1[7] = a2[7];
          a1[8] = v136;
          *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
          a1[10] = a2[10];
          uint64_t v137 = a2[14];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          id v138 = v136;
          swift_bridgeObjectRetain();
          if (v137)
          {
            uint64_t v139 = a2[15];
            a1[14] = v137;
            a1[15] = v139;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v137 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v137);
          }
          else
          {
            long long v192 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v192;
            a1[15] = a2[15];
          }
          uint64_t v193 = a1 + 16;
          uint64_t v194 = a2 + 16;
          uint64_t v195 = a2[19];
          if (v195)
          {
            uint64_t v196 = a2[20];
            a1[19] = v195;
            a1[20] = v196;
            (**(void (***)(_OWORD *, _OWORD *))(v195 - 8))(v193, v194);
          }
          else
          {
            long long v203 = *((_OWORD *)a2 + 9);
            _OWORD *v193 = *v194;
            *((_OWORD *)a1 + 9) = v203;
            a1[20] = a2[20];
          }
          uint64_t v204 = a1 + 21;
          uint64_t v205 = a2 + 21;
          uint64_t v206 = a2[24];
          if (v206)
          {
            uint64_t v207 = a2[25];
            a1[24] = v206;
            a1[25] = v207;
            (**(void (***)(_OWORD *, _OWORD *))(v206 - 8))(v204, v205);
          }
          else
          {
            long long v208 = *(_OWORD *)(a2 + 23);
            *uint64_t v204 = *v205;
            *(_OWORD *)(a1 + 23) = v208;
            a1[25] = a2[25];
          }
          goto LABEL_201;
        case 0xEu:
          uint64_t v36 = a2[1];
          *a1 = *a2;
          a1[1] = v36;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v37 = a2 + 3;
          unint64_t v38 = a2[4];
          if (v38 >= 0x11)
          {
            a1[3] = *v37;
            a1[4] = v38;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v37;
          }
          uint64_t v126 = a2[6];
          a1[5] = a2[5];
          a1[6] = v126;
          a1[7] = a2[7];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_201;
        case 0xFu:
          uint64_t v111 = a2[1];
          *a1 = *a2;
          a1[1] = v111;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v112 = a2 + 3;
          unint64_t v113 = a2[4];
          if (v113 >= 0x11)
          {
            a1[3] = *v112;
            a1[4] = v113;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v112;
          }
          break;
        case 0x10u:
          uint64_t v39 = a2[1];
          *a1 = *a2;
          a1[1] = v39;
          uint64_t v394 = a2[3];
          a1[2] = a2[2];
          a1[3] = v394;
          uint64_t v40 = a2[5];
          a1[4] = a2[4];
          a1[5] = v40;
          *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
          *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
          uint64_t v41 = a2[10];
          a1[9] = a2[9];
          a1[10] = v41;
          uint64_t v42 = a2[12];
          a1[11] = a2[11];
          a1[12] = v42;
          a1[13] = a2[13];
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
          uint64_t v43 = a2[16];
          a1[15] = a2[15];
          a1[16] = v43;
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          uint64_t v44 = a2[19];
          a1[18] = a2[18];
          a1[19] = v44;
          uint64_t v45 = a2[21];
          a1[20] = a2[20];
          a1[21] = v45;
          *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
          a1[22] = a2[22];
          uint64_t v46 = a2[25];
          a1[24] = a2[24];
          a1[25] = v46;
          *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
          uint64_t v47 = a2[27];
          a1[26] = a2[26];
          a1[27] = v47;
          uint64_t v383 = a2 + 29;
          unint64_t v48 = a2[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v48 >= 0x11)
          {
            a1[29] = *v383;
            a1[30] = v48;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 29) = *(_OWORD *)v383;
          }
          goto LABEL_201;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_202;
      }
      break;
  }
  uint64_t v140 = a2[6];
  a1[5] = a2[5];
  a1[6] = v140;
  uint64_t v141 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v142 = (char *)a1 + v141;
  uint64_t v143 = (void *)((char *)a2 + v141);
  *(void *)((char *)a1 + v141) = *v143;
  uint64_t v144 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v145 = &v142[v144];
  int v146 = (void *)((char *)v143 + v144);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v226 = type metadata accessor for PuzzleStatisticValue(0);
      int v227 = swift_getEnumCaseMultiPayload();
      if (v227 == 5)
      {
        uint64_t v228 = type metadata accessor for PuzzleStreak();
        uint64_t v229 = *(void *)(v228 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v229 + 48))(v146, 1, v228))
        {
LABEL_110:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v145, v146, *(void *)(*(void *)(v230 - 8) + 64));
          goto LABEL_179;
        }
      }
      else
      {
        if (v227 != 4)
        {
          memcpy(v145, v146, *(void *)(*(void *)(v226 - 8) + 64));
          goto LABEL_180;
        }
        uint64_t v228 = type metadata accessor for PuzzleStreak();
        uint64_t v229 = *(void *)(v228 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v229 + 48))(v146, 1, v228)) {
          goto LABEL_110;
        }
      }
      uint64_t v348 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v348 - 8) + 16))(v145, v146, v348);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v229 + 56))(v145, 0, 1, v228);
LABEL_179:
      swift_storeEnumTagMultiPayload();
LABEL_180:
      uint64_t v349 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v350 = *(int *)(v349 + 20);
      uint64_t v351 = &v145[v350];
      uint64_t v352 = (char *)v146 + v350;
      int v353 = swift_getEnumCaseMultiPayload();
      if (v353 == 5)
      {
        uint64_t v390 = v145;
        uint64_t v357 = type metadata accessor for PuzzleStreak();
        uint64_t v358 = *(void *)(v357 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v358 + 48))(v352, 1, v357))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v351, v352, *(void *)(*(void *)(v359 - 8) + 64));
        }
        else
        {
          uint64_t v361 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v361 - 8) + 16))(v351, v352, v361);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v358 + 56))(v351, 0, 1, v357);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v145 = v390;
      }
      else if (v353 == 4)
      {
        uint64_t v389 = v145;
        uint64_t v354 = type metadata accessor for PuzzleStreak();
        uint64_t v355 = *(void *)(v354 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v355 + 48))(v352, 1, v354))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v351, v352, *(void *)(*(void *)(v356 - 8) + 64));
        }
        else
        {
          uint64_t v360 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v360 - 8) + 16))(v351, v352, v360);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v355 + 56))(v351, 0, 1, v354);
        }
        uint64_t v145 = v389;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v351, v352, *(void *)(*(void *)(v226 - 8) + 64));
      }
      uint64_t v362 = *(int *)(v349 + 24);
      uint64_t v363 = &v145[v362];
      uint64_t v364 = (char *)v146 + v362;
      int v365 = swift_getEnumCaseMultiPayload();
      if (v365 == 5)
      {
        uint64_t v366 = type metadata accessor for PuzzleStreak();
        uint64_t v367 = *(void *)(v366 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v367 + 48))(v364, 1, v366))
        {
LABEL_196:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v363, v364, *(void *)(*(void *)(v368 - 8) + 64));
          goto LABEL_199;
        }
      }
      else
      {
        if (v365 != 4)
        {
          memcpy(v363, v364, *(void *)(*(void *)(v226 - 8) + 64));
          goto LABEL_200;
        }
        uint64_t v366 = type metadata accessor for PuzzleStreak();
        uint64_t v367 = *(void *)(v366 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v367 + 48))(v364, 1, v366)) {
          goto LABEL_196;
        }
      }
      uint64_t v369 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v369 - 8) + 16))(v363, v364, v369);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v367 + 56))(v363, 0, 1, v366);
      goto LABEL_199;
    case 2u:
      uint64_t v223 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v224 = *((void *)v223 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v224 + 48))(v146, 1, v223))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        memcpy(v145, v146, *(void *)(*(void *)(v225 - 8) + 64));
      }
      else
      {
        uint64_t v294 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v294 - 8) + 16))(v145, v146, v294);
        uint64_t v295 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v296 = v295[5];
        uint64_t v297 = &v145[v296];
        int v298 = (void *)((char *)v146 + v296);
        uint64_t v299 = v298[1];
        *(void *)uint64_t v297 = *v298;
        *((void *)v297 + 1) = v299;
        uint64_t v300 = v295[6];
        uint64_t v387 = v145;
        uint64_t v301 = &v145[v300];
        uint64_t v302 = (void *)((char *)v146 + v300);
        uint64_t v303 = v302[1];
        *(void *)uint64_t v301 = *v302;
        *((void *)v301 + 1) = v303;
        int v304 = v302 + 2;
        unint64_t v305 = v302[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v305 >> 60 == 15)
        {
          *((_OWORD *)v301 + 1) = *(_OWORD *)v304;
        }
        else
        {
          uint64_t v341 = *v304;
          sub_1BFE95820(*v304, v305);
          *((void *)v301 + 2) = v341;
          *((void *)v301 + 3) = v305;
        }
        *(void *)&v387[v295[7]] = *(void *)((char *)v146 + v295[7]);
        *(void *)&v387[v295[8]] = *(void *)((char *)v146 + v295[8]);
        *(void *)&v387[v223[5]] = *(void *)((char *)v146 + v223[5]);
        *(void *)&v387[v223[6]] = *(void *)((char *)v146 + v223[6]);
        uint64_t v342 = v223[7];
        uint64_t v343 = &v387[v342];
        unint64_t v344 = (void *)((char *)v146 + v342);
        uint64_t v345 = v344[1];
        *(void *)uint64_t v343 = *v344;
        *((void *)v343 + 1) = v345;
        uint64_t v346 = *(void (**)(char *, void, uint64_t, int *))(v224 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v346(v387, 0, 1, v223);
      }
      goto LABEL_200;
    case 3u:
      uint64_t v231 = v146[1];
      *(void *)uint64_t v145 = *v146;
      *((void *)v145 + 1) = v231;
      v145[16] = *((unsigned char *)v146 + 16);
      uint64_t v232 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v233 = v232[6];
      uint64_t v234 = &v145[v233];
      uint64_t v235 = (char *)v146 + v233;
      uint64_t v236 = type metadata accessor for PuzzleStreak();
      uint64_t v237 = *(void *)(v236 - 8);
      v382 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v237 + 48);
      if (v382(v235, 1, v236))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v234, v235, *(void *)(*(void *)(v238 - 8) + 64));
      }
      else
      {
        uint64_t v322 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16))(v234, v235, v322);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v237 + 56))(v234, 0, 1, v236);
      }
      uint64_t v323 = v232[7];
      uint64_t v388 = v145;
      uint64_t v324 = &v145[v323];
      uint64_t v325 = (char *)v146 + v323;
      if (v382((char *)v146 + v323, 1, v236))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v324, v325, *(void *)(*(void *)(v326 - 8) + 64));
      }
      else
      {
        uint64_t v327 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v327 - 8) + 16))(v324, v325, v327);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v237 + 56))(v324, 0, 1, v236);
      }
      uint64_t v328 = v232[8];
      uint64_t v329 = &v388[v328];
      uint64_t v330 = (_OWORD *)((char *)v146 + v328);
      long long v331 = v330[1];
      *(_OWORD *)uint64_t v329 = *v330;
      *((_OWORD *)v329 + 1) = v331;
      *(_OWORD *)(v329 + 25) = *(_OWORD *)((char *)v330 + 25);
      uint64_t v332 = v232[9];
      uint64_t v333 = &v388[v332];
      uint64_t v334 = (_OWORD *)((char *)v146 + v332);
      *(_OWORD *)(v333 + 25) = *(_OWORD *)((char *)v334 + 25);
      long long v335 = v334[1];
      *(_OWORD *)uint64_t v333 = *v334;
      *((_OWORD *)v333 + 1) = v335;
      uint64_t v336 = v232[10];
      int v337 = &v388[v336];
      uint64_t v338 = (_OWORD *)((char *)v146 + v336);
      long long v339 = v338[1];
      *(_OWORD *)int v337 = *v338;
      *((_OWORD *)v337 + 1) = v339;
      *(_OWORD *)(v337 + 25) = *(_OWORD *)((char *)v338 + 25);
      goto LABEL_200;
    default:
      uint64_t v147 = type metadata accessor for PuzzleStatisticValue(0);
      int v148 = swift_getEnumCaseMultiPayload();
      if (v148 == 5)
      {
        uint64_t v149 = type metadata accessor for PuzzleStreak();
        uint64_t v150 = *(void *)(v149 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v150 + 48))(v146, 1, v149)) {
          goto LABEL_65;
        }
      }
      else
      {
        if (v148 != 4)
        {
          memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
          goto LABEL_200;
        }
        uint64_t v149 = type metadata accessor for PuzzleStreak();
        uint64_t v150 = *(void *)(v149 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v150 + 48))(v146, 1, v149))
        {
LABEL_65:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v145, v146, *(void *)(*(void *)(v151 - 8) + 64));
          goto LABEL_199;
        }
      }
      uint64_t v347 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v347 - 8) + 16))(v145, v146, v347);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v145, 0, 1, v149);
LABEL_199:
      swift_storeEnumTagMultiPayload();
LABEL_200:
      swift_storeEnumTagMultiPayload();
LABEL_201:
      swift_storeEnumTagMultiPayload();
LABEL_202:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void destroy for FeedItemDimmingType(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 48) >= 0x11uLL) {
            goto LABEL_7;
          }
          return;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 80) < 0x11uLL) {
            return;
          }
          goto LABEL_7;
        case 2u:
          swift_bridgeObjectRelease();
          uint64_t v2 = type metadata accessor for FeedBannerAd();
          uint64_t v3 = a1 + *(int *)(v2 + 20);
          uint64_t v4 = sub_1C151DBAC();
          goto LABEL_61;
        case 3u:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          int v5 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v6 = a1 + v5[10];
          uint64_t v7 = v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          uint64_t v8 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
          {
            uint64_t v9 = sub_1C151631C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);

            uint64_t v10 = v7 + *(int *)(v8 + 28);
            uint64_t v11 = sub_1C1515FDC();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
          }
          uint64_t v12 = a1 + v5[11];
          uint64_t v13 = sub_1C151D2DC();
          uint64_t v14 = *(void *)(v13 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
            (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
          }
          if (*(void *)(a1 + v5[12] + 8) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          if (*(void *)(a1 + v5[13]) >= 3uLL) {
            swift_unknownObjectRelease();
          }
          uint64_t v15 = *(void **)(a1 + v5[14]);

          return;
        case 4u:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v16 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v17 = a1 + v16[8];
          uint64_t v18 = sub_1C1515FDC();
          uint64_t v19 = *(void *)(v18 - 8);
          uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
          v20(v17, v18);
          uint64_t v21 = a1 + v16[9];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v21, 1, v18)) {
            v20(v21, v18);
          }
          swift_release();
          swift_release();
          uint64_t v22 = a1 + v16[12];
          uint64_t v23 = (int *)type metadata accessor for FeedHeadline(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v23 - 1) + 48))(v22, 1, v23))
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v24 = v23[10];
            uint64_t v25 = v22 + v24 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
            uint64_t v26 = type metadata accessor for SharedItem();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26))
            {
              uint64_t v27 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);

              v20(v25 + *(int *)(v26 + 28), v18);
            }
            uint64_t v28 = v22 + v23[11];
            uint64_t v29 = sub_1C151D2DC();
            uint64_t v30 = *(void *)(v29 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29)) {
              (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
            }
            if (*(void *)(v22 + v23[12] + 8) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            if (*(void *)(v22 + v23[13]) >= 3uLL) {
              swift_unknownObjectRelease();
            }
          }
          uint64_t v31 = a1 + v16[13];
          uint64_t v32 = type metadata accessor for WebEmbedDataVisualization();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32)) {
            return;
          }
          if (swift_getEnumCaseMultiPayload() != 1) {
            goto LABEL_63;
          }
          swift_bridgeObjectRelease();
          uint64_t v33 = type metadata accessor for GenericDataVisualization();
          v20(v31 + *(int *)(v33 + 20), v18);
          goto LABEL_7;
        case 5u:
          goto LABEL_44;
        case 6u:
          int v34 = *(unsigned __int8 *)(a1 + 281);
          if (v34 == 2) {
            goto LABEL_48;
          }
          if (v34 == 1)
          {

            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (*(void *)(a1 + 128) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            uint64_t v42 = *(void **)(a1 + 144);
            if (v42)
            {

              swift_bridgeObjectRelease();
              if (*(void *)(a1 + 224) != 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              if (*(void *)(a1 + 272) >= 0x11uLL) {
                goto LABEL_7;
              }
            }
          }
          else
          {
            if (*(unsigned char *)(a1 + 281)) {
              return;
            }
LABEL_44:

            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (*(void *)(a1 + 128) >= 0x11uLL) {
              goto LABEL_7;
            }
          }
          break;
        case 7u:
LABEL_48:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 88) == 1) {
            return;
          }
          swift_bridgeObjectRelease();
          if (!*(void *)(a1 + 120)) {
            return;
          }
          uint64_t v35 = a1 + 96;
          goto LABEL_74;
        case 8u:
          swift_bridgeObjectRelease();
          uint64_t v36 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v37 = v36 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
          uint64_t v38 = type metadata accessor for FormatCustomItem.Action();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v37, 1, v38))
          {
            uint64_t v39 = sub_1C1515FDC();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v37, v39);
          }
          goto LABEL_7;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 56)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 32);
          }
          if (*(void *)(a1 + 96)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 72);
          }
          if (!*(void *)(a1 + 136)) {
            return;
          }
          uint64_t v35 = a1 + 112;
          goto LABEL_74;
        case 0xAu:
          swift_bridgeObjectRelease();
          uint64_t v2 = type metadata accessor for FeedEngagementBanner();
          uint64_t v3 = a1 + *(int *)(v2 + 20);
          uint64_t v4 = sub_1C151959C();
LABEL_61:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
          if (*(void *)(a1 + *(int *)(v2 + 32) + 8) < 0x11uLL) {
            return;
          }
          goto LABEL_7;
        case 0xBu:
LABEL_63:
          swift_release();
          return;
        case 0xCu:
          goto LABEL_79;
        case 0xDu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 112)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 88);
          }
          if (*(void *)(a1 + 152)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 128);
          }
          if (!*(void *)(a1 + 192)) {
            return;
          }
          uint64_t v35 = a1 + 168;
LABEL_74:
          __swift_destroy_boxed_opaque_existential_1(v35);
          return;
        case 0xEu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
LABEL_79:
          swift_bridgeObjectRelease();
          goto LABEL_2;
        case 0xFu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v40 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          swift_unknownObjectRelease();
          uint64_t v41 = v40 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              type metadata accessor for PuzzleStatisticValue(0);
              goto LABEL_104;
            case 1u:
              type metadata accessor for PuzzleStatisticValue(0);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
              {
                uint64_t v44 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v41, 1, v44))
                {
                  uint64_t v45 = sub_1C151555C();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v41, v45);
                }
              }
              uint64_t v46 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v47 = v41 + *(int *)(v46 + 20);
              int v48 = swift_getEnumCaseMultiPayload();
              if (v48 == 5 || v48 == 4)
              {
                uint64_t v49 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v47, 1, v49))
                {
                  uint64_t v50 = sub_1C151555C();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v47, v50);
                }
              }
              v41 += *(int *)(v46 + 24);
LABEL_104:
              int v51 = swift_getEnumCaseMultiPayload();
              if (v51 == 5 || v51 == 4)
              {
                uint64_t v52 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v41, 1, v52))goto LABEL_117; {
              }
                }
              return;
            case 2u:
              uint64_t v53 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v41, 1, v53))
              {
                return;
              }
              uint64_t v54 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v41, v54);
              uint64_t v55 = type metadata accessor for PuzzleLeaderboardEntry();
              swift_bridgeObjectRelease();
              uint64_t v56 = v41 + *(int *)(v55 + 24);
              swift_bridgeObjectRelease();
              unint64_t v57 = *(void *)(v56 + 24);
              if (v57 >> 60 != 15) {
                sub_1BFE95664(*(void *)(v56 + 16), v57);
              }
              swift_bridgeObjectRelease();
              goto LABEL_7;
            case 3u:
              uint64_t v58 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
              uint64_t v59 = v41 + *(int *)(v58 + 24);
              uint64_t v60 = type metadata accessor for PuzzleStreak();
              char v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48);
              if (!v61(v59, 1, v60))
              {
                uint64_t v62 = sub_1C151555C();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v59, v62);
              }
              v41 += *(int *)(v58 + 28);
              if (v61(v41, 1, v60)) {
                return;
              }
LABEL_117:
              uint64_t v63 = sub_1C151555C();
              uint64_t v64 = *(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8);
              v64(v41, v63);
              return;
            default:
              return;
          }
        case 0x10u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 240) < 0x11uLL) {
            return;
          }
          goto LABEL_7;
        default:
          return;
      }
      break;
    case 1u:
    case 2u:
LABEL_2:
      swift_unknownObjectRelease();
      break;
    case 3u:
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

void *initializeWithCopy for FeedItemDimmingType(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      *a1 = *a2;
      swift_unknownObjectRetain();
      goto LABEL_200;
    case 3u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_200;
    default:
      uint64_t v4 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v5 = a2[1];
          *a1 = *a2;
          a1[1] = v5;
          uint64_t v6 = a2[3];
          a1[2] = a2[2];
          a1[3] = v6;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v7 = a2 + 5;
          unint64_t v8 = a2[6];
          swift_bridgeObjectRetain();
          if (v8 >= 0x11)
          {
            a1[5] = *v7;
            a1[6] = v8;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 5) = *(_OWORD *)v7;
          }
          goto LABEL_199;
        case 1u:
          uint64_t v46 = a2[1];
          *a1 = *a2;
          a1[1] = v46;
          uint64_t v47 = a2[3];
          a1[2] = a2[2];
          a1[3] = v47;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v48 = a2[6];
          a1[5] = a2[5];
          a1[6] = v48;
          uint64_t v49 = a2[8];
          a1[7] = a2[7];
          a1[8] = v49;
          uint64_t v50 = a2 + 9;
          unint64_t v51 = a2[10];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v51 >= 0x11)
          {
            a1[9] = *v50;
            a1[10] = v51;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 9) = *(_OWORD *)v50;
          }
          goto LABEL_199;
        case 2u:
          uint64_t v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          uint64_t v11 = (int *)type metadata accessor for FeedBannerAd();
          uint64_t v12 = v11[5];
          uint64_t v13 = (char *)a1 + v12;
          uint64_t v14 = (char *)a2 + v12;
          uint64_t v15 = sub_1C151DBAC();
          uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v13, v14, v15);
          *(void *)((char *)a1 + v11[6]) = *(void *)((char *)a2 + v11[6]);
          uint64_t v17 = v11[7];
          uint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = (char *)a2 + v17;
          *(void *)uint64_t v18 = *(void *)v19;
          v18[8] = v19[8];
          uint64_t v20 = v11[8];
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          unint64_t v23 = *((void *)v22 + 1);
          if (v23 >= 0x11) {
            goto LABEL_40;
          }
          *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
          goto LABEL_199;
        case 3u:
          uint64_t v52 = a2[1];
          *a1 = *a2;
          a1[1] = v52;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v53 = a2[5];
          a1[4] = a2[4];
          a1[5] = v53;
          a1[6] = a2[6];
          *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
          uint64_t v392 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v54 = v392[10];
          uint64_t v55 = (char *)a1 + v54;
          uint64_t v56 = (char *)a2 + v54;
          *uint64_t v55 = *((unsigned char *)a2 + v54);
          v55[1] = *((unsigned char *)a2 + v54 + 1);
          uint64_t v388 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v57 = v388[6];
          __dst = &v55[v57];
          uint64_t v58 = &v56[v57];
          uint64_t v59 = (int *)type metadata accessor for SharedItem();
          uint64_t v373 = *((void *)v59 - 1);
          uint64_t v60 = *(unsigned int (**)(char *, uint64_t, int *))(v373 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v60(v58, 1, v59))
          {
            uint64_t v61 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v58, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            uint64_t v176 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(__dst, v58, v176);
            __dst[v59[5]] = v58[v59[5]];
            uint64_t v177 = v59[6];
            long long v178 = *(void **)&v58[v177];
            *(void *)&__dst[v177] = v178;
            uint64_t v179 = v59[7];
            uint64_t v378 = &v58[v179];
            uint64_t v383 = &__dst[v179];
            uint64_t v180 = sub_1C1515FDC();
            int v372 = *(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16);
            id v181 = v178;
            v372(v383, v378, v180);
            (*(void (**)(char *, void, uint64_t, int *))(v373 + 56))(__dst, 0, 1, v59);
          }
          v55[v388[7]] = v56[v388[7]];
          v55[v388[8]] = v56[v388[8]];
          v55[v388[9]] = v56[v388[9]];
          v55[v388[10]] = v56[v388[10]];
          uint64_t v182 = v392[11];
          uint64_t v183 = (char *)a1 + v182;
          id v184 = (char *)a2 + v182;
          uint64_t v185 = sub_1C151D2DC();
          uint64_t v186 = *(void *)(v185 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v184, 1, v185))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v183, v184, *(void *)(*(void *)(v187 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v183, v184, v185);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v186 + 56))(v183, 0, 1, v185);
          }
          uint64_t v194 = v392[12];
          uint64_t v195 = (void *)((char *)a1 + v194);
          uint64_t v196 = (void *)((char *)a2 + v194);
          unint64_t v197 = v196[1];
          if (v197 >= 0x11)
          {
            *uint64_t v195 = *v196;
            v195[1] = v197;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v195 = *(_OWORD *)v196;
          }
          uint64_t v198 = v392[13];
          unint64_t v199 = *(void *)((char *)a2 + v198);
          if (v199 >= 2)
          {
            if (v199 == 2)
            {
              *(void *)((char *)a1 + v198) = 2;
            }
            else
            {
              *(void *)((char *)a1 + v198) = v199;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)a1 + v198) = v199;
          }
          uint64_t v236 = v392[14];
          uint64_t v237 = *(void **)((char *)a2 + v236);
          *(void *)((char *)a1 + v236) = v237;
          id v238 = v237;
          goto LABEL_199;
        case 4u:
          uint64_t v24 = a2[1];
          *a1 = *a2;
          a1[1] = v24;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v25 = a2 + 3;
          unint64_t v26 = a2[4];
          if (v26 >= 0x11)
          {
            a1[3] = *v25;
            a1[4] = v26;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v25;
          }
          uint64_t v111 = a2[6];
          a1[5] = a2[5];
          a1[6] = v111;
          uint64_t v112 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v113 = v112[8];
          uint64_t v114 = (char *)a1 + v113;
          uint64_t v115 = (char *)a2 + v113;
          uint64_t v116 = sub_1C1515FDC();
          uint64_t v117 = *(void *)(v116 - 8);
          uint64_t v118 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
          swift_bridgeObjectRetain();
          v118(v114, v115, v116);
          uint64_t v394 = v112;
          uint64_t v119 = v112[9];
          uint64_t v120 = (char *)a1 + v119;
          uint64_t v121 = (char *)a2 + v119;
          v382 = (void *)v116;
          __dsta = (void (*)(char *, char *, void *))v118;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))((char *)a2 + v119, 1, v116))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            memcpy(v120, v121, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
            v118(v120, v121, v116);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v120, 0, 1, v116);
          }
          *(void *)((char *)a1 + v112[10]) = *(void *)((char *)a2 + v112[10]);
          *(void *)((char *)a1 + v112[11]) = *(void *)((char *)a2 + v112[11]);
          uint64_t v154 = v112[12];
          uint64_t v155 = (void *)((char *)a1 + v154);
          uint64_t v389 = (void *)((char *)a2 + v154);
          uint64_t v156 = type metadata accessor for FeedHeadline(0);
          uint64_t v157 = *(void *)(v156 - 8);
          int v158 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v157 + 48);
          swift_retain();
          swift_retain();
          if (v158(v389, 1, v156))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v155, v389, *(void *)(*(void *)(v159 - 8) + 64));
          }
          else
          {
            uint64_t v371 = (int *)v156;
            uint64_t v165 = v389[1];
            *uint64_t v155 = *v389;
            v155[1] = v165;
            v155[2] = v389[2];
            *((unsigned char *)v155 + 24) = *((unsigned char *)v389 + 24);
            uint64_t v166 = v389[5];
            v155[4] = v389[4];
            v155[5] = v166;
            v155[6] = v389[6];
            *((unsigned char *)v155 + 56) = *((unsigned char *)v389 + 56);
            uint64_t v167 = *(int *)(v156 + 40);
            uint64_t v374 = v155;
            uint64_t v168 = (char *)v155 + v167;
            uint64_t v169 = (char *)v389 + v167;
            *uint64_t v168 = *((unsigned char *)v389 + v167);
            v168[1] = *((unsigned char *)v389 + v167 + 1);
            uint64_t v370 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v170 = v370[6];
            uint64_t v369 = &v168[v170];
            uint64_t v171 = &v169[v170];
            uint64_t v172 = (int *)type metadata accessor for SharedItem();
            uint64_t v368 = *((void *)v172 - 1);
            uint64_t v173 = *(unsigned int (**)(char *, uint64_t, int *))(v368 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v173(v171, 1, v172))
            {
              uint64_t v174 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v369, v171, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              uint64_t v262 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 16))(v369, v171, v262);
              v369[v172[5]] = v171[v172[5]];
              uint64_t v263 = v172[6];
              long long v264 = *(void **)&v171[v263];
              *(void *)&v369[v263] = v264;
              uint64_t v265 = v172[7];
              uint64_t v266 = &v369[v265];
              uint64_t v267 = &v171[v265];
              id v268 = v264;
              __dsta(v266, v267, v382);
              (*(void (**)(char *, void, uint64_t, int *))(v368 + 56))(v369, 0, 1, v172);
            }
            v168[v370[7]] = v169[v370[7]];
            v168[v370[8]] = v169[v370[8]];
            v168[v370[9]] = v169[v370[9]];
            v168[v370[10]] = v169[v370[10]];
            uint64_t v269 = v371[11];
            uint64_t v270 = (char *)v374 + v269;
            id v271 = (char *)v389 + v269;
            uint64_t v272 = sub_1C151D2DC();
            uint64_t v273 = *(void *)(v272 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v273 + 48))(v271, 1, v272))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v270, v271, *(void *)(*(void *)(v274 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v270, v271, v272);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v273 + 56))(v270, 0, 1, v272);
            }
            uint64_t v275 = v371[12];
            uint64_t v276 = (void *)((char *)v374 + v275);
            uint64_t v277 = (void *)((char *)v389 + v275);
            unint64_t v278 = v277[1];
            if (v278 >= 0x11)
            {
              *uint64_t v276 = *v277;
              v276[1] = v278;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v276 = *(_OWORD *)v277;
            }
            uint64_t v279 = v371[13];
            unint64_t v280 = *(void *)((char *)v389 + v279);
            if (v280 >= 2)
            {
              if (v280 == 2)
              {
                *(void *)((char *)v374 + v279) = 2;
              }
              else
              {
                *(void *)((char *)v374 + v279) = v280;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)v374 + v279) = v280;
            }
            uint64_t v303 = v371[14];
            int v304 = *(void **)((char *)v389 + v303);
            *(void *)((char *)v374 + v303) = v304;
            unint64_t v305 = *(void (**)(void *, void, uint64_t, int *))(v157 + 56);
            id v306 = v304;
            v305(v374, 0, 1, v371);
          }
          uint64_t v307 = v394[13];
          uint64_t v308 = (void *)((char *)a1 + v307);
          id v309 = (void *)((char *)a2 + v307);
          uint64_t v310 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v311 = *(void *)(v310 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v311 + 48))(v309, 1, v310))
          {
            sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v308, v309, *(void *)(*(void *)(v312 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v314 = *v309;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v315 = v309[1];
              *uint64_t v308 = v314;
              v308[1] = v315;
              uint64_t v316 = type metadata accessor for GenericDataVisualization();
              uint64_t v317 = *(int *)(v316 + 20);
              uint64_t v390 = (char *)v308 + v317;
              uint64_t v318 = (char *)v309 + v317;
              swift_bridgeObjectRetain();
              __dsta(v390, v318, v382);
              *(void *)((char *)v308 + *(int *)(v316 + 24)) = *(uint64_t *)((char *)v309 + *(int *)(v316 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              *uint64_t v308 = v314;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v311 + 56))(v308, 0, 1, v310);
          }
          *((unsigned char *)a1 + v394[14]) = *((unsigned char *)a2 + v394[14]);
          goto LABEL_199;
        case 5u:
          uint64_t v62 = (void *)*a2;
          uint64_t v63 = a2[1];
          *a1 = *a2;
          a1[1] = v63;
          a1[2] = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v64 = (void *)a2[7];
          a1[6] = a2[6];
          a1[7] = v64;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v65 = a2[10];
          id v66 = v62;
          swift_bridgeObjectRetain();
          id v67 = v64;
          if (v65 == 1)
          {
            long long v68 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 11) = v68;
            *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = v65;
            uint64_t v124 = a2[12];
            a1[11] = a2[11];
            a1[12] = v124;
            uint64_t v126 = (void *)a2[13];
            uint64_t v125 = a2[14];
            a1[13] = v126;
            a1[14] = v125;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v127 = v126;
          }
          uint64_t v128 = a2 + 15;
          unint64_t v129 = a2[16];
          if (v129 >= 0x11)
          {
            a1[15] = *v128;
            a1[16] = v129;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)v128;
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          goto LABEL_199;
        case 6u:
          int v69 = *((unsigned __int8 *)a2 + 281);
          if (v69 == 2)
          {
            uint64_t v206 = a2[1];
            *a1 = *a2;
            a1[1] = v206;
            a1[2] = a2[2];
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            a1[4] = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            uint64_t v207 = a2[7];
            a1[6] = a2[6];
            a1[7] = v207;
            uint64_t v208 = a2[9];
            a1[8] = a2[8];
            a1[9] = v208;
            uint64_t v209 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v209 != 1)
            {
              a1[10] = a2[10];
              a1[11] = v209;
              uint64_t v246 = a2[15];
              swift_bridgeObjectRetain();
              if (v246)
              {
                uint64_t v247 = a2[16];
                a1[15] = v246;
                a1[16] = v247;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v246 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v246);
                a1[17] = a2[17];
              }
              else
              {
                long long v337 = *((_OWORD *)a2 + 7);
                *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
                *((_OWORD *)a1 + 7) = v337;
                *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
              }
              *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
              goto LABEL_170;
            }
            uint64_t v210 = a1 + 10;
            uint64_t v211 = a2 + 10;
            long long v212 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v212;
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
LABEL_142:
            long long v284 = v211[1];
            *uint64_t v210 = *v211;
            v210[1] = v284;
            goto LABEL_170;
          }
          if (v69 != 1)
          {
            int v213 = (void *)*a2;
            uint64_t v214 = a2[1];
            *a1 = *a2;
            a1[1] = v214;
            a1[2] = a2[2];
            *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
            a1[4] = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            long long v215 = (void *)a2[7];
            a1[6] = a2[6];
            a1[7] = v215;
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v216 = a2[10];
            id v217 = v213;
            swift_bridgeObjectRetain();
            id v218 = v215;
            if (v216 == 1)
            {
              long long v219 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 11) = v219;
              *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              a1[9] = a2[9];
              a1[10] = v216;
              uint64_t v248 = a2[12];
              a1[11] = a2[11];
              a1[12] = v248;
              uint64_t v250 = (void *)a2[13];
              uint64_t v249 = a2[14];
              a1[13] = v250;
              a1[14] = v249;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v251 = v250;
            }
            uint64_t v252 = a2 + 15;
            unint64_t v253 = a2[16];
            if (v253 >= 0x11)
            {
              a1[15] = *v252;
              a1[16] = v253;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 15) = *(_OWORD *)v252;
            }
            *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            goto LABEL_170;
          }
          id v70 = (void *)*a2;
          uint64_t v71 = a2[1];
          *a1 = *a2;
          a1[1] = v71;
          a1[2] = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          int v72 = (void *)a2[7];
          a1[6] = a2[6];
          a1[7] = v72;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v73 = a2[10];
          id v74 = v70;
          swift_bridgeObjectRetain();
          id v75 = v72;
          if (v73 == 1)
          {
            long long v76 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 11) = v76;
            *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = v73;
            uint64_t v240 = a2[12];
            a1[11] = a2[11];
            a1[12] = v240;
            long long v242 = (void *)a2[13];
            uint64_t v241 = a2[14];
            a1[13] = v242;
            a1[14] = v241;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v243 = v242;
          }
          uint64_t v244 = a2 + 15;
          unint64_t v245 = a2[16];
          if (v245 >= 0x11)
          {
            a1[15] = *v244;
            a1[16] = v245;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)v244;
          }
          uint64_t v211 = a2 + 18;
          id v254 = (void *)a2[18];
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          if (!v254)
          {
            uint64_t v210 = a1 + 18;
            long long v281 = *((_OWORD *)a2 + 16);
            *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
            *((_OWORD *)a1 + 16) = v281;
            *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            long long v282 = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
            *((_OWORD *)a1 + 12) = v282;
            long long v283 = *((_OWORD *)a2 + 14);
            *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 14) = v283;
            goto LABEL_142;
          }
          uint64_t v255 = a2[19];
          uint64_t v256 = a2[20];
          a1[18] = v254;
          a1[19] = v255;
          a1[20] = v256;
          *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
          a1[22] = a2[22];
          *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
          uint64_t v257 = (void *)a2[25];
          a1[24] = a2[24];
          a1[25] = v257;
          *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
          uint64_t v258 = a2[28];
          id v259 = v254;
          swift_bridgeObjectRetain();
          id v260 = v257;
          if (v258 == 1)
          {
            long long v261 = *(_OWORD *)(a2 + 29);
            *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
            *(_OWORD *)(a1 + 29) = v261;
            *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
          }
          else
          {
            a1[27] = a2[27];
            a1[28] = v258;
            uint64_t v285 = a2[30];
            a1[29] = a2[29];
            a1[30] = v285;
            long long v287 = (void *)a2[31];
            uint64_t v286 = a2[32];
            a1[31] = v287;
            a1[32] = v286;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v288 = v287;
          }
          uint64_t v289 = a2 + 33;
          unint64_t v290 = a2[34];
          if (v290 >= 0x11)
          {
            a1[33] = *v289;
            a1[34] = v290;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 33) = *(_OWORD *)v289;
          }
          *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_170:
          *((unsigned char *)a1 + 281) = v69;
LABEL_199:
          swift_storeEnumTagMultiPayload();
LABEL_200:
          swift_storeEnumTagMultiPayload();
          return a1;
        case 7u:
          uint64_t v77 = a2[1];
          *a1 = *a2;
          a1[1] = v77;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v78 = a2[7];
          a1[6] = a2[6];
          a1[7] = v78;
          uint64_t v79 = a2[9];
          a1[8] = a2[8];
          a1[9] = v79;
          uint64_t v80 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v80 == 1)
          {
            long long v81 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v81;
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            long long v82 = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            *((_OWORD *)a1 + 6) = v82;
          }
          else
          {
            a1[10] = a2[10];
            a1[11] = v80;
            uint64_t v130 = a2[15];
            swift_bridgeObjectRetain();
            if (v130)
            {
              uint64_t v131 = a2[16];
              a1[15] = v130;
              a1[16] = v131;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v130 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v130);
              a1[17] = a2[17];
            }
            else
            {
              long long v239 = *((_OWORD *)a2 + 7);
              *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
              *((_OWORD *)a1 + 7) = v239;
              *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
            }
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          }
          goto LABEL_199;
        case 8u:
          uint64_t v83 = a2[1];
          *a1 = *a2;
          a1[1] = v83;
          uint64_t v84 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          long long v85 = (void *)((char *)a1 + v84);
          uint64_t v86 = (char *)a2 + v84;
          uint64_t v87 = *(void *)((char *)a2 + v84 + 8);
          *long long v85 = *(void *)((char *)a2 + v84);
          v85[1] = v87;
          uint64_t v88 = *(void *)((char *)a2 + v84 + 24);
          v85[2] = *(void *)((char *)a2 + v84 + 16);
          v85[3] = v88;
          uint64_t v393 = type metadata accessor for FormatCustomItem.Resolved();
          uint64_t v89 = *(int *)(v393 + 24);
          uint64_t v381 = (char *)v85 + v89;
          uint64_t v90 = &v86[v89];
          uint64_t v91 = type metadata accessor for FormatCustomItem.Action();
          uint64_t v377 = *(void *)(v91 - 8);
          uint64_t v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v377 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v92(v90, 1, v91))
          {
            sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v381, v90, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            uint64_t v188 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16))(v381, v90, v188);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v377 + 56))(v381, 0, 1, v91);
          }
          *(void *)((char *)v85 + *(int *)(v393 + 28)) = *(void *)&v86[*(int *)(v393 + 28)];
          swift_bridgeObjectRetain();
          goto LABEL_199;
        case 9u:
          uint64_t v27 = a2[1];
          *a1 = *a2;
          a1[1] = v27;
          uint64_t v28 = a2[3];
          a1[2] = a2[2];
          a1[3] = v28;
          uint64_t v29 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v29)
          {
            uint64_t v30 = a2[8];
            a1[7] = v29;
            a1[8] = v30;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v29 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v29);
          }
          else
          {
            long long v149 = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 3) = v149;
            a1[8] = a2[8];
          }
          uint64_t v150 = a1 + 9;
          uint64_t v151 = a2 + 9;
          uint64_t v152 = a2[12];
          if (v152)
          {
            uint64_t v153 = a2[13];
            a1[12] = v152;
            a1[13] = v153;
            (**(void (***)(_OWORD *, _OWORD *))(v152 - 8))(v150, v151);
          }
          else
          {
            long long v160 = *(_OWORD *)(a2 + 11);
            *uint64_t v150 = *v151;
            *(_OWORD *)(a1 + 11) = v160;
            a1[13] = a2[13];
          }
          uint64_t v161 = a1 + 14;
          uint64_t v162 = a2 + 14;
          uint64_t v163 = a2[17];
          if (v163)
          {
            uint64_t v164 = a2[18];
            a1[17] = v163;
            a1[18] = v164;
            (**(void (***)(_OWORD *, _OWORD *))(v163 - 8))(v161, v162);
          }
          else
          {
            long long v175 = *((_OWORD *)a2 + 8);
            *uint64_t v161 = *v162;
            *((_OWORD *)a1 + 8) = v175;
            a1[18] = a2[18];
          }
          goto LABEL_199;
        case 0xAu:
          uint64_t v94 = a2[1];
          *a1 = *a2;
          a1[1] = v94;
          uint64_t v95 = (int *)type metadata accessor for FeedEngagementBanner();
          uint64_t v96 = v95[5];
          uint64_t v97 = (char *)a1 + v96;
          int v98 = (char *)a2 + v96;
          uint64_t v99 = sub_1C151959C();
          uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
          swift_bridgeObjectRetain();
          v100(v97, v98, v99);
          *(void *)((char *)a1 + v95[6]) = *(void *)((char *)a2 + v95[6]);
          uint64_t v101 = v95[7];
          uint64_t v102 = (char *)a1 + v101;
          uint64_t v103 = (char *)a2 + v101;
          *(void *)uint64_t v102 = *(void *)v103;
          v102[8] = v103[8];
          uint64_t v104 = v95[8];
          uint64_t v21 = (char *)a1 + v104;
          uint64_t v22 = (char *)a2 + v104;
          unint64_t v23 = *((void *)v22 + 1);
          if (v23 >= 0x11)
          {
LABEL_40:
            *(void *)uint64_t v21 = *(void *)v22;
            *((void *)v21 + 1) = v23;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
          }
          goto LABEL_199;
        case 0xBu:
          *a1 = *a2;
          swift_retain();
          goto LABEL_199;
        case 0xCu:
          uint64_t v31 = a2[1];
          *a1 = *a2;
          a1[1] = v31;
          uint64_t v32 = a2[3];
          a1[2] = a2[2];
          a1[3] = v32;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_199;
        case 0xDu:
          uint64_t v105 = a2[1];
          *a1 = *a2;
          a1[1] = v105;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v106 = a2 + 3;
          unint64_t v107 = a2[4];
          if (v107 >= 0x11)
          {
            a1[3] = *v106;
            a1[4] = v107;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v106;
          }
          uint64_t v132 = a2[6];
          a1[5] = a2[5];
          a1[6] = v132;
          uint64_t v133 = (void *)a2[8];
          a1[7] = a2[7];
          a1[8] = v133;
          *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
          a1[10] = a2[10];
          uint64_t v134 = a2[14];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          id v135 = v133;
          swift_bridgeObjectRetain();
          if (v134)
          {
            uint64_t v136 = a2[15];
            a1[14] = v134;
            a1[15] = v136;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v134 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v134);
          }
          else
          {
            long long v189 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v189;
            a1[15] = a2[15];
          }
          uint64_t v190 = a1 + 16;
          uint64_t v191 = a2 + 16;
          uint64_t v192 = a2[19];
          if (v192)
          {
            uint64_t v193 = a2[20];
            a1[19] = v192;
            a1[20] = v193;
            (**(void (***)(_OWORD *, _OWORD *))(v192 - 8))(v190, v191);
          }
          else
          {
            long long v200 = *((_OWORD *)a2 + 9);
            *uint64_t v190 = *v191;
            *((_OWORD *)a1 + 9) = v200;
            a1[20] = a2[20];
          }
          uint64_t v201 = a1 + 21;
          unint64_t v202 = a2 + 21;
          uint64_t v203 = a2[24];
          if (v203)
          {
            uint64_t v204 = a2[25];
            a1[24] = v203;
            a1[25] = v204;
            (**(void (***)(_OWORD *, _OWORD *))(v203 - 8))(v201, v202);
          }
          else
          {
            long long v205 = *(_OWORD *)(a2 + 23);
            *uint64_t v201 = *v202;
            *(_OWORD *)(a1 + 23) = v205;
            a1[25] = a2[25];
          }
          goto LABEL_199;
        case 0xEu:
          uint64_t v33 = a2[1];
          *a1 = *a2;
          a1[1] = v33;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          int v34 = a2 + 3;
          unint64_t v35 = a2[4];
          if (v35 >= 0x11)
          {
            a1[3] = *v34;
            a1[4] = v35;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v34;
          }
          uint64_t v123 = a2[6];
          a1[5] = a2[5];
          a1[6] = v123;
          a1[7] = a2[7];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_199;
        case 0xFu:
          uint64_t v108 = a2[1];
          *a1 = *a2;
          a1[1] = v108;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v109 = a2 + 3;
          unint64_t v110 = a2[4];
          if (v110 >= 0x11)
          {
            a1[3] = *v109;
            a1[4] = v110;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v109;
          }
          break;
        case 0x10u:
          uint64_t v36 = a2[1];
          *a1 = *a2;
          a1[1] = v36;
          uint64_t v391 = a2[3];
          a1[2] = a2[2];
          a1[3] = v391;
          uint64_t v37 = a2[5];
          a1[4] = a2[4];
          a1[5] = v37;
          *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
          *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
          uint64_t v38 = a2[10];
          a1[9] = a2[9];
          a1[10] = v38;
          uint64_t v39 = a2[12];
          a1[11] = a2[11];
          a1[12] = v39;
          a1[13] = a2[13];
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
          uint64_t v40 = a2[16];
          a1[15] = a2[15];
          a1[16] = v40;
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          uint64_t v41 = a2[19];
          a1[18] = a2[18];
          a1[19] = v41;
          uint64_t v42 = a2[21];
          a1[20] = a2[20];
          a1[21] = v42;
          *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
          a1[22] = a2[22];
          uint64_t v43 = a2[25];
          a1[24] = a2[24];
          a1[25] = v43;
          *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
          uint64_t v44 = a2[27];
          a1[26] = a2[26];
          a1[27] = v44;
          uint64_t v380 = a2 + 29;
          unint64_t v45 = a2[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v45 >= 0x11)
          {
            a1[29] = *v380;
            a1[30] = v45;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 29) = *(_OWORD *)v380;
          }
          goto LABEL_199;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
          goto LABEL_200;
      }
      break;
  }
  uint64_t v137 = a2[6];
  a1[5] = a2[5];
  a1[6] = v137;
  uint64_t v138 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v139 = (char *)a1 + v138;
  uint64_t v140 = (void *)((char *)a2 + v138);
  *(void *)((char *)a1 + v138) = *v140;
  uint64_t v141 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v142 = &v139[v141];
  uint64_t v143 = (void *)((char *)v140 + v141);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v223 = type metadata accessor for PuzzleStatisticValue(0);
      int v224 = swift_getEnumCaseMultiPayload();
      if (v224 == 5)
      {
        uint64_t v225 = type metadata accessor for PuzzleStreak();
        uint64_t v226 = *(void *)(v225 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v226 + 48))(v143, 1, v225))
        {
LABEL_108:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v142, v143, *(void *)(*(void *)(v227 - 8) + 64));
          goto LABEL_177;
        }
      }
      else
      {
        if (v224 != 4)
        {
          memcpy(v142, v143, *(void *)(*(void *)(v223 - 8) + 64));
          goto LABEL_178;
        }
        uint64_t v225 = type metadata accessor for PuzzleStreak();
        uint64_t v226 = *(void *)(v225 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v226 + 48))(v143, 1, v225)) {
          goto LABEL_108;
        }
      }
      uint64_t v345 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v345 - 8) + 16))(v142, v143, v345);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v226 + 56))(v142, 0, 1, v225);
LABEL_177:
      swift_storeEnumTagMultiPayload();
LABEL_178:
      uint64_t v346 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v347 = *(int *)(v346 + 20);
      uint64_t v348 = &v142[v347];
      uint64_t v349 = (char *)v143 + v347;
      int v350 = swift_getEnumCaseMultiPayload();
      if (v350 == 5)
      {
        uint64_t v387 = v142;
        uint64_t v354 = type metadata accessor for PuzzleStreak();
        uint64_t v355 = *(void *)(v354 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v355 + 48))(v349, 1, v354))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v348, v349, *(void *)(*(void *)(v356 - 8) + 64));
        }
        else
        {
          uint64_t v358 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 16))(v348, v349, v358);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v355 + 56))(v348, 0, 1, v354);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v142 = v387;
      }
      else if (v350 == 4)
      {
        uint64_t v386 = v142;
        uint64_t v351 = type metadata accessor for PuzzleStreak();
        uint64_t v352 = *(void *)(v351 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v352 + 48))(v349, 1, v351))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v348, v349, *(void *)(*(void *)(v353 - 8) + 64));
        }
        else
        {
          uint64_t v357 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 16))(v348, v349, v357);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v352 + 56))(v348, 0, 1, v351);
        }
        uint64_t v142 = v386;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v348, v349, *(void *)(*(void *)(v223 - 8) + 64));
      }
      uint64_t v359 = *(int *)(v346 + 24);
      uint64_t v360 = &v142[v359];
      uint64_t v361 = (char *)v143 + v359;
      int v362 = swift_getEnumCaseMultiPayload();
      if (v362 == 5)
      {
        uint64_t v363 = type metadata accessor for PuzzleStreak();
        uint64_t v364 = *(void *)(v363 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48))(v361, 1, v363))
        {
LABEL_194:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v360, v361, *(void *)(*(void *)(v365 - 8) + 64));
          goto LABEL_197;
        }
        goto LABEL_196;
      }
      if (v362 == 4)
      {
        uint64_t v363 = type metadata accessor for PuzzleStreak();
        uint64_t v364 = *(void *)(v363 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48))(v361, 1, v363)) {
          goto LABEL_194;
        }
LABEL_196:
        uint64_t v366 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v366 - 8) + 16))(v360, v361, v366);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v364 + 56))(v360, 0, 1, v363);
        goto LABEL_197;
      }
      memcpy(v360, v361, *(void *)(*(void *)(v223 - 8) + 64));
      goto LABEL_198;
    case 2u:
      id v220 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v221 = *((void *)v220 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v221 + 48))(v143, 1, v220))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        memcpy(v142, v143, *(void *)(*(void *)(v222 - 8) + 64));
      }
      else
      {
        uint64_t v291 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v291 - 8) + 16))(v142, v143, v291);
        uint64_t v292 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v293 = v292[5];
        uint64_t v294 = &v142[v293];
        uint64_t v295 = (void *)((char *)v143 + v293);
        uint64_t v296 = v295[1];
        *(void *)uint64_t v294 = *v295;
        *((void *)v294 + 1) = v296;
        uint64_t v297 = v292[6];
        int v384 = v142;
        int v298 = &v142[v297];
        uint64_t v299 = (void *)((char *)v143 + v297);
        uint64_t v300 = v299[1];
        *(void *)int v298 = *v299;
        *((void *)v298 + 1) = v300;
        uint64_t v301 = v299 + 2;
        unint64_t v302 = v299[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v302 >> 60 == 15)
        {
          *((_OWORD *)v298 + 1) = *(_OWORD *)v301;
        }
        else
        {
          uint64_t v338 = *v301;
          sub_1BFE95820(*v301, v302);
          *((void *)v298 + 2) = v338;
          *((void *)v298 + 3) = v302;
        }
        *(void *)&v384[v292[7]] = *(void *)((char *)v143 + v292[7]);
        *(void *)&v384[v292[8]] = *(void *)((char *)v143 + v292[8]);
        *(void *)&v384[v220[5]] = *(void *)((char *)v143 + v220[5]);
        *(void *)&v384[v220[6]] = *(void *)((char *)v143 + v220[6]);
        uint64_t v339 = v220[7];
        long long v340 = &v384[v339];
        uint64_t v341 = (void *)((char *)v143 + v339);
        uint64_t v342 = v341[1];
        *(void *)long long v340 = *v341;
        *((void *)v340 + 1) = v342;
        uint64_t v343 = *(void (**)(char *, void, uint64_t, int *))(v221 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v343(v384, 0, 1, v220);
      }
      goto LABEL_198;
    case 3u:
      uint64_t v228 = v143[1];
      *(void *)uint64_t v142 = *v143;
      *((void *)v142 + 1) = v228;
      v142[16] = *((unsigned char *)v143 + 16);
      uint64_t v229 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v230 = v229[6];
      uint64_t v231 = &v142[v230];
      uint64_t v232 = (char *)v143 + v230;
      uint64_t v233 = type metadata accessor for PuzzleStreak();
      uint64_t v234 = *(void *)(v233 - 8);
      int v379 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48);
      if (v379(v232, 1, v233))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v231, v232, *(void *)(*(void *)(v235 - 8) + 64));
      }
      else
      {
        uint64_t v319 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 16))(v231, v232, v319);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v234 + 56))(v231, 0, 1, v233);
      }
      uint64_t v320 = v229[7];
      int v385 = v142;
      int v321 = &v142[v320];
      uint64_t v322 = (char *)v143 + v320;
      if (v379((char *)v143 + v320, 1, v233))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v321, v322, *(void *)(*(void *)(v323 - 8) + 64));
      }
      else
      {
        uint64_t v324 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v321, v322, v324);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v234 + 56))(v321, 0, 1, v233);
      }
      uint64_t v325 = v229[8];
      uint64_t v326 = &v385[v325];
      uint64_t v327 = (_OWORD *)((char *)v143 + v325);
      long long v328 = v327[1];
      *(_OWORD *)uint64_t v326 = *v327;
      *((_OWORD *)v326 + 1) = v328;
      *(_OWORD *)(v326 + 25) = *(_OWORD *)((char *)v327 + 25);
      uint64_t v329 = v229[9];
      uint64_t v330 = &v385[v329];
      long long v331 = (_OWORD *)((char *)v143 + v329);
      *(_OWORD *)(v330 + 25) = *(_OWORD *)((char *)v331 + 25);
      long long v332 = v331[1];
      *(_OWORD *)uint64_t v330 = *v331;
      *((_OWORD *)v330 + 1) = v332;
      uint64_t v333 = v229[10];
      uint64_t v334 = &v385[v333];
      long long v335 = (_OWORD *)((char *)v143 + v333);
      long long v336 = v335[1];
      *(_OWORD *)uint64_t v334 = *v335;
      *((_OWORD *)v334 + 1) = v336;
      *(_OWORD *)(v334 + 25) = *(_OWORD *)((char *)v335 + 25);
      goto LABEL_198;
    default:
      uint64_t v144 = type metadata accessor for PuzzleStatisticValue(0);
      int v145 = swift_getEnumCaseMultiPayload();
      if (v145 == 5)
      {
        uint64_t v146 = type metadata accessor for PuzzleStreak();
        uint64_t v147 = *(void *)(v146 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v147 + 48))(v143, 1, v146)) {
          goto LABEL_63;
        }
      }
      else
      {
        if (v145 != 4)
        {
          memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
LABEL_198:
          swift_storeEnumTagMultiPayload();
          goto LABEL_199;
        }
        uint64_t v146 = type metadata accessor for PuzzleStreak();
        uint64_t v147 = *(void *)(v146 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v147 + 48))(v143, 1, v146))
        {
LABEL_63:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v142, v143, *(void *)(*(void *)(v148 - 8) + 64));
          goto LABEL_197;
        }
      }
      uint64_t v344 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v344 - 8) + 16))(v142, v143, v344);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v142, 0, 1, v146);
LABEL_197:
      swift_storeEnumTagMultiPayload();
      goto LABEL_198;
  }
}

void *assignWithCopy for FeedItemDimmingType(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C0946FEC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_198;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_198;
      default:
        uint64_t v4 = type metadata accessor for FeedItem(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v5 = a2[3];
            *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
            a1[3] = v5;
            unint64_t v6 = a2[6];
            swift_bridgeObjectRetain();
            if (v6 >= 0x11)
            {
              a1[5] = a2[5];
              a1[6] = a2[6];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
            }
            goto LABEL_197;
          case 1u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v26 = a2[3];
            *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
            a1[3] = v26;
            a1[5] = a2[5];
            a1[6] = a2[6];
            a1[7] = a2[7];
            a1[8] = a2[8];
            unint64_t v27 = a2[10];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v27 >= 0x11)
            {
              a1[9] = a2[9];
              a1[10] = a2[10];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
            }
            goto LABEL_197;
          case 2u:
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
            uint64_t v8 = v7[5];
            uint64_t v9 = (char *)a1 + v8;
            uint64_t v10 = (char *)a2 + v8;
            uint64_t v11 = sub_1C151DBAC();
            uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
            swift_bridgeObjectRetain();
            v12(v9, v10, v11);
            *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
            uint64_t v13 = v7[7];
            uint64_t v14 = (char *)a1 + v13;
            uint64_t v15 = (char *)a2 + v13;
            char v16 = v15[8];
            *(void *)uint64_t v14 = *(void *)v15;
            v14[8] = v16;
            uint64_t v17 = v7[8];
            uint64_t v18 = (char *)a1 + v17;
            uint64_t v19 = (char *)a2 + v17;
            if (*((void *)v19 + 1) >= 0x11uLL) {
              goto LABEL_41;
            }
            *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            goto LABEL_197;
          case 3u:
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v28 = a2[2];
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            a1[2] = v28;
            a1[4] = a2[4];
            a1[5] = a2[5];
            a1[6] = a2[6];
            *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
            uint64_t v341 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v29 = v341[10];
            uint64_t v30 = (char *)a1 + v29;
            uint64_t v31 = (char *)a2 + v29;
            *uint64_t v30 = *((unsigned char *)a2 + v29);
            v30[1] = *((unsigned char *)a2 + v29 + 1);
            uint64_t v338 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v32 = v338[6];
            __dst = &v30[v32];
            uint64_t v33 = &v31[v32];
            int v34 = (int *)type metadata accessor for SharedItem();
            uint64_t v323 = *((void *)v34 - 1);
            unint64_t v35 = *(unsigned int (**)(char *, uint64_t, int *))(v323 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v35(v33, 1, v34))
            {
              uint64_t v36 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v33, *(void *)(*(void *)(v36 - 8) + 64));
            }
            else
            {
              uint64_t v136 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(__dst, v33, v136);
              __dst[v34[5]] = v33[v34[5]];
              uint64_t v137 = v34[6];
              uint64_t v138 = *(void **)&v33[v137];
              *(void *)&__dst[v137] = v138;
              uint64_t v139 = v34[7];
              long long v328 = &v33[v139];
              uint64_t v333 = &__dst[v139];
              uint64_t v140 = sub_1C1515FDC();
              uint64_t v322 = *(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16);
              id v141 = v138;
              v322(v333, v328, v140);
              (*(void (**)(char *, void, uint64_t, int *))(v323 + 56))(__dst, 0, 1, v34);
            }
            v30[v338[7]] = v31[v338[7]];
            v30[v338[8]] = v31[v338[8]];
            v30[v338[9]] = v31[v338[9]];
            v30[v338[10]] = v31[v338[10]];
            uint64_t v142 = v341[11];
            uint64_t v143 = (char *)a1 + v142;
            uint64_t v144 = (char *)a2 + v142;
            uint64_t v145 = sub_1C151D2DC();
            uint64_t v146 = *(void *)(v145 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v144, 1, v145))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v143, v144, *(void *)(*(void *)(v147 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v143, v144, v145);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
            }
            uint64_t v154 = v341[12];
            uint64_t v155 = (void *)((char *)a1 + v154);
            uint64_t v156 = (void *)((char *)a2 + v154);
            if (v156[1] >= 0x11uLL)
            {
              *uint64_t v155 = *v156;
              v155[1] = v156[1];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v155 = *(_OWORD *)v156;
            }
            uint64_t v157 = v341[13];
            unint64_t v158 = *(void *)((char *)a2 + v157);
            if (v158 >= 2)
            {
              if (v158 == 2)
              {
                *(void *)((char *)a1 + v157) = 2;
              }
              else
              {
                *(void *)((char *)a1 + v157) = v158;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)a1 + v157) = v158;
            }
            uint64_t v195 = v341[14];
            uint64_t v196 = *(void **)((char *)a2 + v195);
            *(void *)((char *)a1 + v195) = v196;
            id v197 = v196;
            goto LABEL_197;
          case 4u:
            *a1 = *a2;
            uint64_t v20 = a2[1];
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v20;
            if (a2[4] >= 0x11uLL)
            {
              a1[3] = a2[3];
              a1[4] = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            }
            a1[5] = a2[5];
            a1[6] = a2[6];
            uint64_t v80 = (int *)type metadata accessor for FeedWebEmbed();
            uint64_t v81 = v80[8];
            long long v82 = (char *)a1 + v81;
            uint64_t v83 = (char *)a2 + v81;
            uint64_t v84 = sub_1C1515FDC();
            uint64_t v85 = *(void *)(v84 - 8);
            uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
            swift_bridgeObjectRetain();
            v86(v82, v83, v84);
            uint64_t v343 = v80;
            uint64_t v87 = v80[9];
            uint64_t v88 = (char *)a1 + v87;
            uint64_t v89 = (char *)a2 + v87;
            long long v332 = (void *)v84;
            __dsta = (void (*)(char *, char *, void *))v86;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))((char *)a2 + v87, 1, v84))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
              memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
            }
            else
            {
              v86(v88, v89, v84);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v88, 0, 1, v84);
            }
            *(void *)((char *)a1 + v80[10]) = *(void *)((char *)a2 + v80[10]);
            *(void *)((char *)a1 + v80[11]) = *(void *)((char *)a2 + v80[11]);
            uint64_t v114 = v80[12];
            uint64_t v115 = (void *)((char *)a1 + v114);
            uint64_t v339 = (void *)((char *)a2 + v114);
            uint64_t v116 = type metadata accessor for FeedHeadline(0);
            uint64_t v117 = *(void *)(v116 - 8);
            uint64_t v118 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v117 + 48);
            swift_retain();
            swift_retain();
            if (v118(v339, 1, v116))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
              memcpy(v115, v339, *(void *)(*(void *)(v119 - 8) + 64));
            }
            else
            {
              int v321 = (int *)v116;
              *uint64_t v115 = *v339;
              v115[1] = v339[1];
              uint64_t v125 = v339[2];
              *((unsigned char *)v115 + 24) = *((unsigned char *)v339 + 24);
              v115[2] = v125;
              v115[4] = v339[4];
              v115[5] = v339[5];
              v115[6] = v339[6];
              *((unsigned char *)v115 + 56) = *((unsigned char *)v339 + 56);
              uint64_t v126 = *(int *)(v116 + 40);
              uint64_t v324 = v115;
              id v127 = (char *)v115 + v126;
              uint64_t v128 = (char *)v339 + v126;
              *id v127 = *((unsigned char *)v339 + v126);
              v127[1] = *((unsigned char *)v339 + v126 + 1);
              uint64_t v320 = (int *)type metadata accessor for FeedHeadline.State(0);
              uint64_t v129 = v320[6];
              uint64_t v319 = &v127[v129];
              uint64_t v130 = &v128[v129];
              uint64_t v131 = (int *)type metadata accessor for SharedItem();
              uint64_t v318 = *((void *)v131 - 1);
              uint64_t v132 = *(unsigned int (**)(char *, uint64_t, int *))(v318 + 48);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              if (v132(v130, 1, v131))
              {
                uint64_t v133 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v319, v130, *(void *)(*(void *)(v133 - 8) + 64));
              }
              else
              {
                uint64_t v215 = sub_1C151631C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16))(v319, v130, v215);
                v319[v131[5]] = v130[v131[5]];
                uint64_t v216 = v131[6];
                id v217 = *(void **)&v130[v216];
                *(void *)&v319[v216] = v217;
                uint64_t v218 = v131[7];
                long long v219 = &v319[v218];
                id v220 = &v130[v218];
                id v221 = v217;
                __dsta(v219, v220, v332);
                (*(void (**)(char *, void, uint64_t, int *))(v318 + 56))(v319, 0, 1, v131);
              }
              v127[v320[7]] = v128[v320[7]];
              v127[v320[8]] = v128[v320[8]];
              v127[v320[9]] = v128[v320[9]];
              v127[v320[10]] = v128[v320[10]];
              uint64_t v222 = v321[11];
              uint64_t v223 = (char *)v324 + v222;
              int v224 = (char *)v339 + v222;
              uint64_t v225 = sub_1C151D2DC();
              uint64_t v226 = *(void *)(v225 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v226 + 48))(v224, 1, v225))
              {
                sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                memcpy(v223, v224, *(void *)(*(void *)(v227 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v226 + 16))(v223, v224, v225);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v226 + 56))(v223, 0, 1, v225);
              }
              uint64_t v228 = v321[12];
              uint64_t v229 = (void *)((char *)v324 + v228);
              uint64_t v230 = (void *)((char *)v339 + v228);
              if (v230[1] >= 0x11uLL)
              {
                *uint64_t v229 = *v230;
                v229[1] = v230[1];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)uint64_t v229 = *(_OWORD *)v230;
              }
              uint64_t v231 = v321[13];
              unint64_t v232 = *(void *)((char *)v339 + v231);
              if (v232 >= 2)
              {
                if (v232 == 2)
                {
                  *(void *)((char *)v324 + v231) = 2;
                }
                else
                {
                  *(void *)((char *)v324 + v231) = v232;
                  swift_unknownObjectRetain();
                }
              }
              else
              {
                *(void *)((char *)v324 + v231) = v232;
              }
              uint64_t v251 = v321[14];
              uint64_t v252 = *(void **)((char *)v339 + v251);
              *(void *)((char *)v324 + v251) = v252;
              unint64_t v253 = *(void (**)(void *, void, uint64_t, int *))(v117 + 56);
              id v254 = v252;
              v253(v324, 0, 1, v321);
            }
            uint64_t v255 = v343[13];
            uint64_t v256 = (void *)((char *)a1 + v255);
            uint64_t v257 = (void *)((char *)a2 + v255);
            uint64_t v258 = type metadata accessor for WebEmbedDataVisualization();
            uint64_t v259 = *(void *)(v258 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v259 + 48))(v257, 1, v258))
            {
              sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
              memcpy(v256, v257, *(void *)(*(void *)(v260 - 8) + 64));
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              void *v256 = *v257;
              if (EnumCaseMultiPayload == 1)
              {
                v256[1] = v257[1];
                uint64_t v262 = type metadata accessor for GenericDataVisualization();
                uint64_t v263 = *(int *)(v262 + 20);
                long long v340 = (char *)v256 + v263;
                long long v264 = (char *)v257 + v263;
                swift_bridgeObjectRetain();
                __dsta(v340, v264, v332);
                *(void *)((char *)v256 + *(int *)(v262 + 24)) = *(void *)((char *)v257 + *(int *)(v262 + 24));
                swift_bridgeObjectRetain();
              }
              else
              {
                swift_retain();
              }
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(v259 + 56))(v256, 0, 1, v258);
            }
            *((unsigned char *)a1 + v343[14]) = *((unsigned char *)a2 + v343[14]);
            goto LABEL_197;
          case 5u:
            uint64_t v37 = (void *)*a2;
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
            uint64_t v38 = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            a1[4] = v38;
            a1[6] = a2[6];
            uint64_t v39 = (void *)a2[7];
            a1[7] = v39;
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v40 = a2[10];
            id v41 = v37;
            swift_bridgeObjectRetain();
            id v42 = v39;
            if (v40 == 1)
            {
              long long v43 = *(_OWORD *)(a2 + 9);
              long long v44 = *(_OWORD *)(a2 + 13);
              *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 13) = v44;
              *(_OWORD *)(a1 + 9) = v43;
            }
            else
            {
              a1[9] = a2[9];
              a1[10] = a2[10];
              a1[11] = a2[11];
              a1[12] = a2[12];
              uint64_t v91 = (void *)a2[13];
              a1[13] = v91;
              a1[14] = a2[14];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v92 = v91;
            }
            if (a2[16] >= 0x11uLL)
            {
              a1[15] = a2[15];
              a1[16] = a2[16];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
            }
            *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            goto LABEL_197;
          case 6u:
            int v45 = *((unsigned __int8 *)a2 + 281);
            if (v45 == 2)
            {
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
              uint64_t v166 = a2[4];
              *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
              a1[4] = v166;
              a1[6] = a2[6];
              a1[7] = a2[7];
              a1[8] = a2[8];
              a1[9] = a2[9];
              uint64_t v167 = a2[11];
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v167 == 1)
              {
                *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
                long long v168 = *((_OWORD *)a2 + 6);
                long long v169 = *((_OWORD *)a2 + 7);
                long long v170 = *((_OWORD *)a2 + 8);
                *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
                *((_OWORD *)a1 + 7) = v169;
                *((_OWORD *)a1 + 8) = v170;
                *((_OWORD *)a1 + 6) = v168;
              }
              else
              {
                a1[10] = a2[10];
                a1[11] = a2[11];
                uint64_t v203 = a2[15];
                swift_bridgeObjectRetain();
                if (v203)
                {
                  a1[15] = v203;
                  a1[16] = a2[16];
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v203 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v203);
                  char v204 = *((unsigned char *)a2 + 144);
                  a1[17] = a2[17];
                  *((unsigned char *)a1 + 144) = v204;
                }
                else
                {
                  long long v286 = *((_OWORD *)a2 + 6);
                  long long v287 = *((_OWORD *)a2 + 7);
                  long long v288 = *((_OWORD *)a2 + 8);
                  *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
                  *((_OWORD *)a1 + 7) = v287;
                  *((_OWORD *)a1 + 8) = v288;
                  *((_OWORD *)a1 + 6) = v286;
                }
              }
            }
            else if (v45 == 1)
            {
              uint64_t v46 = (void *)*a2;
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
              *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
              uint64_t v47 = a2[4];
              *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
              a1[4] = v47;
              a1[6] = a2[6];
              uint64_t v48 = (void *)a2[7];
              a1[7] = v48;
              *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
              uint64_t v49 = a2[10];
              id v50 = v46;
              swift_bridgeObjectRetain();
              id v51 = v48;
              if (v49 == 1)
              {
                long long v52 = *(_OWORD *)(a2 + 9);
                long long v53 = *(_OWORD *)(a2 + 13);
                *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 13) = v53;
                *(_OWORD *)(a1 + 9) = v52;
              }
              else
              {
                a1[9] = a2[9];
                a1[10] = a2[10];
                a1[11] = a2[11];
                a1[12] = a2[12];
                uint64_t v201 = (void *)a2[13];
                a1[13] = v201;
                a1[14] = a2[14];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v202 = v201;
              }
              if (a2[16] >= 0x11uLL)
              {
                a1[15] = a2[15];
                a1[16] = a2[16];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
              }
              *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
              uint64_t v207 = (void *)a2[18];
              if (v207)
              {
                a1[18] = v207;
                a1[19] = a2[19];
                a1[20] = a2[20];
                *((unsigned char *)a1 + 168) = *((unsigned char *)a2 + 168);
                *((unsigned char *)a1 + 169) = *((unsigned char *)a2 + 169);
                uint64_t v208 = a2[22];
                *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
                a1[22] = v208;
                a1[24] = a2[24];
                uint64_t v209 = (void *)a2[25];
                a1[25] = v209;
                *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
                uint64_t v210 = a2[28];
                id v211 = v207;
                swift_bridgeObjectRetain();
                id v212 = v209;
                if (v210 == 1)
                {
                  long long v213 = *(_OWORD *)(a2 + 27);
                  long long v214 = *(_OWORD *)(a2 + 31);
                  *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
                  *(_OWORD *)(a1 + 31) = v214;
                  *(_OWORD *)(a1 + 27) = v213;
                }
                else
                {
                  a1[27] = a2[27];
                  a1[28] = a2[28];
                  a1[29] = a2[29];
                  a1[30] = a2[30];
                  long long v239 = (void *)a2[31];
                  a1[31] = v239;
                  a1[32] = a2[32];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v240 = v239;
                }
                if (a2[34] >= 0x11uLL)
                {
                  a1[33] = a2[33];
                  a1[34] = a2[34];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
                }
                *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
              }
              else
              {
                *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
                long long v233 = *((_OWORD *)a2 + 10);
                long long v234 = *((_OWORD *)a2 + 11);
                long long v235 = *((_OWORD *)a2 + 13);
                *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
                *((_OWORD *)a1 + 13) = v235;
                *((_OWORD *)a1 + 10) = v233;
                *((_OWORD *)a1 + 11) = v234;
                long long v236 = *((_OWORD *)a2 + 14);
                long long v237 = *((_OWORD *)a2 + 15);
                long long v238 = *((_OWORD *)a2 + 16);
                *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
                *((_OWORD *)a1 + 15) = v237;
                *((_OWORD *)a1 + 16) = v238;
                *((_OWORD *)a1 + 14) = v236;
              }
            }
            else
            {
              uint64_t v171 = (void *)*a2;
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
              *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
              uint64_t v172 = a2[4];
              *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
              a1[4] = v172;
              a1[6] = a2[6];
              uint64_t v173 = (void *)a2[7];
              a1[7] = v173;
              *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
              uint64_t v174 = a2[10];
              id v175 = v171;
              swift_bridgeObjectRetain();
              id v176 = v173;
              if (v174 == 1)
              {
                long long v177 = *(_OWORD *)(a2 + 9);
                long long v178 = *(_OWORD *)(a2 + 13);
                *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 13) = v178;
                *(_OWORD *)(a1 + 9) = v177;
              }
              else
              {
                a1[9] = a2[9];
                a1[10] = a2[10];
                a1[11] = a2[11];
                a1[12] = a2[12];
                long long v205 = (void *)a2[13];
                a1[13] = v205;
                a1[14] = a2[14];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v206 = v205;
              }
              if (a2[16] >= 0x11uLL)
              {
                a1[15] = a2[15];
                a1[16] = a2[16];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
              }
              *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            }
            *((unsigned char *)a1 + 281) = v45;
            goto LABEL_197;
          case 7u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            uint64_t v54 = a2[4];
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            a1[4] = v54;
            a1[6] = a2[6];
            a1[7] = a2[7];
            a1[8] = a2[8];
            a1[9] = a2[9];
            uint64_t v55 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v55 == 1)
            {
              *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
              long long v56 = *((_OWORD *)a2 + 6);
              long long v57 = *((_OWORD *)a2 + 7);
              long long v58 = *((_OWORD *)a2 + 8);
              *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
              *((_OWORD *)a1 + 7) = v57;
              *((_OWORD *)a1 + 8) = v58;
              *((_OWORD *)a1 + 6) = v56;
            }
            else
            {
              a1[10] = a2[10];
              a1[11] = a2[11];
              uint64_t v93 = a2[15];
              swift_bridgeObjectRetain();
              if (v93)
              {
                a1[15] = v93;
                a1[16] = a2[16];
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v93 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v93);
                char v94 = *((unsigned char *)a2 + 144);
                a1[17] = a2[17];
                *((unsigned char *)a1 + 144) = v94;
              }
              else
              {
                long long v198 = *((_OWORD *)a2 + 6);
                long long v199 = *((_OWORD *)a2 + 7);
                long long v200 = *((_OWORD *)a2 + 8);
                *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
                *((_OWORD *)a1 + 7) = v199;
                *((_OWORD *)a1 + 8) = v200;
                *((_OWORD *)a1 + 6) = v198;
              }
            }
            goto LABEL_197;
          case 8u:
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v59 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
            uint64_t v60 = (void *)((char *)a1 + v59);
            uint64_t v61 = (char *)a2 + v59;
            *uint64_t v60 = *(void *)((char *)a2 + v59);
            v60[1] = *(void *)((char *)a2 + v59 + 8);
            v60[2] = *(void *)((char *)a2 + v59 + 16);
            v60[3] = *(void *)((char *)a2 + v59 + 24);
            uint64_t v342 = type metadata accessor for FormatCustomItem.Resolved();
            uint64_t v62 = *(int *)(v342 + 24);
            long long v331 = (char *)v60 + v62;
            uint64_t v63 = &v61[v62];
            uint64_t v64 = type metadata accessor for FormatCustomItem.Action();
            uint64_t v327 = *(void *)(v64 - 8);
            uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v327 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v65(v63, 1, v64))
            {
              sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
              memcpy(v331, v63, *(void *)(*(void *)(v66 - 8) + 64));
            }
            else
            {
              uint64_t v148 = sub_1C1515FDC();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v331, v63, v148);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v327 + 56))(v331, 0, 1, v64);
            }
            *(void *)((char *)v60 + *(int *)(v342 + 28)) = *(void *)&v61[*(int *)(v342 + 28)];
            swift_bridgeObjectRetain();
            goto LABEL_197;
          case 9u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            uint64_t v21 = a2[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v21)
            {
              a1[7] = v21;
              a1[8] = a2[8];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v21);
            }
            else
            {
              long long v109 = *((_OWORD *)a2 + 2);
              long long v110 = *((_OWORD *)a2 + 3);
              a1[8] = a2[8];
              *((_OWORD *)a1 + 2) = v109;
              *((_OWORD *)a1 + 3) = v110;
            }
            uint64_t v111 = a1 + 9;
            uint64_t v112 = (long long *)(a2 + 9);
            uint64_t v113 = a2[12];
            if (v113)
            {
              a1[12] = v113;
              a1[13] = a2[13];
              (**(void (***)(_OWORD *, long long *))(v113 - 8))(v111, v112);
            }
            else
            {
              long long v120 = *v112;
              long long v121 = *(_OWORD *)(a2 + 11);
              a1[13] = a2[13];
              *uint64_t v111 = v120;
              *(_OWORD *)(a1 + 11) = v121;
            }
            uint64_t v122 = a1 + 14;
            uint64_t v123 = (long long *)(a2 + 14);
            uint64_t v124 = a2[17];
            if (v124)
            {
              a1[17] = v124;
              a1[18] = a2[18];
              (**(void (***)(_OWORD *, long long *))(v124 - 8))(v122, v123);
            }
            else
            {
              long long v134 = *v123;
              long long v135 = *((_OWORD *)a2 + 8);
              a1[18] = a2[18];
              *uint64_t v122 = v134;
              *((_OWORD *)a1 + 8) = v135;
            }
            goto LABEL_197;
          case 0xAu:
            *a1 = *a2;
            a1[1] = a2[1];
            id v67 = (int *)type metadata accessor for FeedEngagementBanner();
            uint64_t v68 = v67[5];
            int v69 = (char *)a1 + v68;
            id v70 = (char *)a2 + v68;
            uint64_t v71 = sub_1C151959C();
            int v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
            swift_bridgeObjectRetain();
            v72(v69, v70, v71);
            *(void *)((char *)a1 + v67[6]) = *(void *)((char *)a2 + v67[6]);
            uint64_t v73 = v67[7];
            id v74 = (char *)a1 + v73;
            id v75 = (char *)a2 + v73;
            char v76 = v75[8];
            *(void *)id v74 = *(void *)v75;
            v74[8] = v76;
            uint64_t v77 = v67[8];
            uint64_t v18 = (char *)a1 + v77;
            uint64_t v19 = (char *)a2 + v77;
            if (*((void *)v19 + 1) >= 0x11uLL)
            {
LABEL_41:
              *(void *)uint64_t v18 = *(void *)v19;
              *((void *)v18 + 1) = *((void *)v19 + 1);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            goto LABEL_197;
          case 0xBu:
            *a1 = *a2;
            swift_retain();
            goto LABEL_197;
          case 0xCu:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v22 = a2[3];
            *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
            a1[3] = v22;
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_197;
          case 0xDu:
            *a1 = *a2;
            uint64_t v78 = a2[1];
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v78;
            if (a2[4] >= 0x11uLL)
            {
              a1[3] = a2[3];
              a1[4] = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            }
            a1[5] = a2[5];
            a1[6] = a2[6];
            a1[7] = a2[7];
            uint64_t v95 = (void *)a2[8];
            a1[8] = v95;
            *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
            a1[10] = a2[10];
            uint64_t v96 = a2[14];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            id v97 = v95;
            swift_bridgeObjectRetain();
            if (v96)
            {
              a1[14] = v96;
              a1[15] = a2[15];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v96 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v96);
            }
            else
            {
              long long v149 = *(_OWORD *)(a2 + 11);
              long long v150 = *(_OWORD *)(a2 + 13);
              a1[15] = a2[15];
              *(_OWORD *)(a1 + 11) = v149;
              *(_OWORD *)(a1 + 13) = v150;
            }
            uint64_t v151 = a1 + 16;
            uint64_t v152 = (long long *)(a2 + 16);
            uint64_t v153 = a2[19];
            if (v153)
            {
              a1[19] = v153;
              a1[20] = a2[20];
              (**(void (***)(_OWORD *, long long *))(v153 - 8))(v151, v152);
            }
            else
            {
              long long v159 = *v152;
              long long v160 = *((_OWORD *)a2 + 9);
              a1[20] = a2[20];
              _OWORD *v151 = v159;
              *((_OWORD *)a1 + 9) = v160;
            }
            uint64_t v161 = a1 + 21;
            uint64_t v162 = (long long *)(a2 + 21);
            uint64_t v163 = a2[24];
            if (v163)
            {
              a1[24] = v163;
              a1[25] = a2[25];
              (**(void (***)(_OWORD *, long long *))(v163 - 8))(v161, v162);
            }
            else
            {
              long long v164 = *v162;
              long long v165 = *(_OWORD *)(a2 + 23);
              a1[25] = a2[25];
              *uint64_t v161 = v164;
              *(_OWORD *)(a1 + 23) = v165;
            }
            goto LABEL_197;
          case 0xEu:
            *a1 = *a2;
            uint64_t v23 = a2[1];
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v23;
            if (a2[4] >= 0x11uLL)
            {
              a1[3] = a2[3];
              a1[4] = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            }
            a1[5] = a2[5];
            a1[6] = a2[6];
            a1[7] = a2[7];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_197;
          case 0xFu:
            *a1 = *a2;
            uint64_t v79 = a2[1];
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v79;
            if (a2[4] >= 0x11uLL)
            {
              a1[3] = a2[3];
              a1[4] = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            }
            break;
          case 0x10u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            a1[5] = a2[5];
            *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
            *((unsigned char *)a1 + 49) = *((unsigned char *)a2 + 49);
            a1[7] = a2[7];
            a1[8] = a2[8];
            a1[9] = a2[9];
            a1[10] = a2[10];
            a1[11] = a2[11];
            a1[12] = a2[12];
            a1[13] = a2[13];
            *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
            a1[15] = a2[15];
            a1[16] = a2[16];
            *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            a1[18] = a2[18];
            a1[19] = a2[19];
            a1[20] = a2[20];
            a1[21] = a2[21];
            uint64_t v24 = a2[22];
            *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
            a1[22] = v24;
            a1[24] = a2[24];
            a1[25] = a2[25];
            a1[26] = a2[26];
            uint64_t v25 = a2[27];
            *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
            a1[27] = v25;
            uint64_t v330 = (void *)a2[30];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((unint64_t)v330 >= 0x11)
            {
              a1[29] = a2[29];
              a1[30] = a2[30];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
            }
            goto LABEL_197;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
            goto LABEL_198;
        }
        break;
    }
    a1[5] = a2[5];
    a1[6] = a2[6];
    uint64_t v98 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v99 = (char *)a1 + v98;
    uint64_t v100 = (void *)((char *)a2 + v98);
    *(void *)((char *)a1 + v98) = *v100;
    uint64_t v101 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v102 = &v99[v101];
    uint64_t v103 = (void *)((char *)v100 + v101);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v182 = type metadata accessor for PuzzleStatisticValue(0);
        int v183 = swift_getEnumCaseMultiPayload();
        if (v183 == 5)
        {
          uint64_t v184 = type metadata accessor for PuzzleStreak();
          uint64_t v185 = *(void *)(v184 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v185 + 48))(v103, 1, v184))
          {
LABEL_109:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v102, v103, *(void *)(*(void *)(v186 - 8) + 64));
            goto LABEL_175;
          }
        }
        else
        {
          if (v183 != 4)
          {
            memcpy(v102, v103, *(void *)(*(void *)(v182 - 8) + 64));
            goto LABEL_176;
          }
          uint64_t v184 = type metadata accessor for PuzzleStreak();
          uint64_t v185 = *(void *)(v184 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v185 + 48))(v103, 1, v184)) {
            goto LABEL_109;
          }
        }
        uint64_t v295 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v295 - 8) + 16))(v102, v103, v295);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v185 + 56))(v102, 0, 1, v184);
LABEL_175:
        swift_storeEnumTagMultiPayload();
LABEL_176:
        uint64_t v296 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v297 = *(int *)(v296 + 20);
        int v298 = &v102[v297];
        uint64_t v299 = (char *)v103 + v297;
        int v300 = swift_getEnumCaseMultiPayload();
        if (v300 == 5)
        {
          long long v337 = v102;
          uint64_t v304 = type metadata accessor for PuzzleStreak();
          uint64_t v305 = *(void *)(v304 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v305 + 48))(v299, 1, v304))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v298, v299, *(void *)(*(void *)(v306 - 8) + 64));
          }
          else
          {
            uint64_t v308 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 16))(v298, v299, v308);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v305 + 56))(v298, 0, 1, v304);
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v102 = v337;
        }
        else if (v300 == 4)
        {
          long long v336 = v102;
          uint64_t v301 = type metadata accessor for PuzzleStreak();
          uint64_t v302 = *(void *)(v301 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v302 + 48))(v299, 1, v301))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v298, v299, *(void *)(*(void *)(v303 - 8) + 64));
          }
          else
          {
            uint64_t v307 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v307 - 8) + 16))(v298, v299, v307);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v302 + 56))(v298, 0, 1, v301);
          }
          uint64_t v102 = v336;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v298, v299, *(void *)(*(void *)(v182 - 8) + 64));
        }
        uint64_t v309 = *(int *)(v296 + 24);
        uint64_t v310 = &v102[v309];
        uint64_t v311 = (char *)v103 + v309;
        int v312 = swift_getEnumCaseMultiPayload();
        if (v312 == 5)
        {
          uint64_t v313 = type metadata accessor for PuzzleStreak();
          uint64_t v314 = *(void *)(v313 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v311, 1, v313))
          {
LABEL_192:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v310, v311, *(void *)(*(void *)(v315 - 8) + 64));
            goto LABEL_195;
          }
        }
        else
        {
          if (v312 != 4)
          {
            memcpy(v310, v311, *(void *)(*(void *)(v182 - 8) + 64));
            goto LABEL_196;
          }
          uint64_t v313 = type metadata accessor for PuzzleStreak();
          uint64_t v314 = *(void *)(v313 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v311, 1, v313)) {
            goto LABEL_192;
          }
        }
        uint64_t v316 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v316 - 8) + 16))(v310, v311, v316);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v310, 0, 1, v313);
        goto LABEL_195;
      case 2u:
        uint64_t v179 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v180 = *((void *)v179 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v180 + 48))(v103, 1, v179))
        {
          sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          memcpy(v102, v103, *(void *)(*(void *)(v181 - 8) + 64));
        }
        else
        {
          uint64_t v241 = sub_1C151631C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v241 - 8) + 16))(v102, v103, v241);
          long long v242 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v243 = v242[5];
          uint64_t v244 = &v102[v243];
          unint64_t v245 = (void *)((char *)v103 + v243);
          *(void *)uint64_t v244 = *v245;
          *((void *)v244 + 1) = v245[1];
          uint64_t v246 = v242[6];
          uint64_t v334 = v102;
          uint64_t v247 = &v102[v246];
          uint64_t v248 = (void *)((char *)v103 + v246);
          *(void *)uint64_t v247 = *v248;
          *((void *)v247 + 1) = v248[1];
          uint64_t v249 = v248 + 2;
          unint64_t v250 = v248[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v250 >> 60 == 15)
          {
            *((_OWORD *)v247 + 1) = *(_OWORD *)v249;
          }
          else
          {
            uint64_t v289 = *v249;
            sub_1BFE95820(*v249, v250);
            *((void *)v247 + 2) = v289;
            *((void *)v247 + 3) = v250;
          }
          *(void *)&v334[v242[7]] = *(void *)((char *)v103 + v242[7]);
          *(void *)&v334[v242[8]] = *(void *)((char *)v103 + v242[8]);
          *(void *)&v334[v179[5]] = *(void *)((char *)v103 + v179[5]);
          *(void *)&v334[v179[6]] = *(void *)((char *)v103 + v179[6]);
          uint64_t v290 = v179[7];
          uint64_t v291 = &v334[v290];
          uint64_t v292 = (void *)((char *)v103 + v290);
          *(void *)uint64_t v291 = *v292;
          *((void *)v291 + 1) = v292[1];
          uint64_t v293 = *(void (**)(char *, void, uint64_t, int *))(v180 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v293(v334, 0, 1, v179);
        }
        goto LABEL_196;
      case 3u:
        *(void *)uint64_t v102 = *v103;
        uint64_t v187 = v103[1];
        v102[16] = *((unsigned char *)v103 + 16);
        *((void *)v102 + 1) = v187;
        uint64_t v188 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v189 = v188[6];
        uint64_t v190 = &v102[v189];
        uint64_t v191 = (char *)v103 + v189;
        uint64_t v192 = type metadata accessor for PuzzleStreak();
        uint64_t v193 = *(void *)(v192 - 8);
        uint64_t v329 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48);
        if (v329(v191, 1, v192))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v190, v191, *(void *)(*(void *)(v194 - 8) + 64));
        }
        else
        {
          uint64_t v265 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 16))(v190, v191, v265);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
        }
        uint64_t v266 = v188[7];
        long long v335 = v102;
        uint64_t v267 = &v102[v266];
        id v268 = (char *)v103 + v266;
        if (v329((char *)v103 + v266, 1, v192))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v267, v268, *(void *)(*(void *)(v269 - 8) + 64));
        }
        else
        {
          uint64_t v270 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 16))(v267, v268, v270);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v267, 0, 1, v192);
        }
        uint64_t v271 = v188[8];
        uint64_t v272 = &v335[v271];
        uint64_t v273 = (long long *)((char *)v103 + v271);
        long long v274 = *v273;
        long long v275 = v273[1];
        *(_OWORD *)(v272 + 25) = *(long long *)((char *)v273 + 25);
        *(_OWORD *)uint64_t v272 = v274;
        *((_OWORD *)v272 + 1) = v275;
        uint64_t v276 = v188[9];
        uint64_t v277 = &v335[v276];
        unint64_t v278 = (long long *)((char *)v103 + v276);
        long long v279 = *v278;
        long long v280 = v278[1];
        *(_OWORD *)(v277 + 25) = *(long long *)((char *)v278 + 25);
        *(_OWORD *)uint64_t v277 = v279;
        *((_OWORD *)v277 + 1) = v280;
        uint64_t v281 = v188[10];
        long long v282 = &v335[v281];
        long long v283 = (long long *)((char *)v103 + v281);
        long long v284 = *v283;
        long long v285 = v283[1];
        *(_OWORD *)(v282 + 25) = *(long long *)((char *)v283 + 25);
        *(_OWORD *)long long v282 = v284;
        *((_OWORD *)v282 + 1) = v285;
        goto LABEL_196;
      default:
        uint64_t v104 = type metadata accessor for PuzzleStatisticValue(0);
        int v105 = swift_getEnumCaseMultiPayload();
        if (v105 == 5)
        {
          uint64_t v106 = type metadata accessor for PuzzleStreak();
          uint64_t v107 = *(void *)(v106 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v107 + 48))(v103, 1, v106)) {
            goto LABEL_64;
          }
        }
        else
        {
          if (v105 != 4)
          {
            memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
            goto LABEL_196;
          }
          uint64_t v106 = type metadata accessor for PuzzleStreak();
          uint64_t v107 = *(void *)(v106 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v107 + 48))(v103, 1, v106))
          {
LABEL_64:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v102, v103, *(void *)(*(void *)(v108 - 8) + 64));
            goto LABEL_195;
          }
        }
        uint64_t v294 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v294 - 8) + 16))(v102, v103, v294);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v102, 0, 1, v106);
LABEL_195:
        swift_storeEnumTagMultiPayload();
LABEL_196:
        swift_storeEnumTagMultiPayload();
LABEL_197:
        swift_storeEnumTagMultiPayload();
LABEL_198:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t sub_1C0946FEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedItemDimmingType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FeedItemDimmingType()
{
  uint64_t result = qword_1EB890CE8;
  if (!qword_1EB890CE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *initializeWithTake for FeedItemDimmingType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v6 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C151DBAC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
      uint64_t v12 = v7[7];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      v13[8] = v14[8];
      *(void *)uint64_t v13 = *(void *)v14;
      *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
      goto LABEL_94;
    case 3u:
      *a1 = *a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      uint64_t v187 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v15 = v187[10];
      char v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      *char v16 = *((unsigned char *)a2 + v15);
      v16[1] = *((unsigned char *)a2 + v15 + 1);
      uint64_t v18 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v19 = v18[6];
      uint64_t v20 = &v16[v19];
      uint64_t v21 = &v17[v19];
      uint64_t v22 = (int *)type metadata accessor for SharedItem();
      uint64_t v23 = *((void *)v22 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        uint64_t v68 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v20, v21, v68);
        v20[v22[5]] = v21[v22[5]];
        *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
        uint64_t v69 = v22[7];
        uint64_t v186 = &v20[v69];
        id v70 = &v21[v69];
        uint64_t v71 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v186, v70, v71);
        (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      v16[v18[7]] = v17[v18[7]];
      v16[v18[8]] = v17[v18[8]];
      v16[v18[9]] = v17[v18[9]];
      v16[v18[10]] = v17[v18[10]];
      uint64_t v72 = v187[11];
      uint64_t v73 = (char *)a1 + v72;
      id v74 = (char *)a2 + v72;
      uint64_t v75 = sub_1C151D2DC();
      uint64_t v76 = *(void *)(v75 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      *(_OWORD *)((char *)a1 + v187[12]) = *(_OWORD *)((char *)a2 + v187[12]);
      uint64_t v86 = v187[13];
      uint64_t v87 = *(void *)((char *)a2 + v86);
      if (v87 == 2) {
        uint64_t v87 = 2;
      }
      *(void *)((char *)a1 + v86) = v87;
      *(void *)((char *)a1 + v187[14]) = *(void *)((char *)a2 + v187[14]);
      goto LABEL_94;
    case 4u:
      uint64_t v25 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v25;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      uint64_t v26 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v27 = v26[8];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = sub_1C1515FDC();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v32(v28, v29, v30);
      uint64_t v33 = v26[9];
      int v34 = (char *)a1 + v33;
      unint64_t v35 = (char *)a2 + v33;
      uint64_t v185 = v30;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))((char *)a2 + v33, 1, v30))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        v32(v34, v35, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
      }
      uint64_t v78 = v32;
      *(void *)((char *)a1 + v26[10]) = *(void *)((char *)a2 + v26[10]);
      *(void *)((char *)a1 + v26[11]) = *(void *)((char *)a2 + v26[11]);
      uint64_t v188 = v26;
      uint64_t v79 = v26[12];
      uint64_t v80 = (_OWORD *)((char *)a1 + v79);
      uint64_t v81 = (_OWORD *)((char *)a2 + v79);
      long long v82 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v83 = *((void *)v82 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v83 + 48))(v81, 1, v82))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        uint64_t v182 = v83;
        int v183 = v32;
        *uint64_t v80 = *v81;
        *((void *)v80 + 2) = *((void *)v81 + 2);
        *((unsigned char *)v80 + 24) = *((unsigned char *)v81 + 24);
        *((void *)v80 + 4) = *((void *)v81 + 4);
        *(_OWORD *)((char *)v80 + 40) = *(_OWORD *)((char *)v81 + 40);
        *((unsigned char *)v80 + 56) = *((unsigned char *)v81 + 56);
        uint64_t v88 = v82[10];
        uint64_t v89 = (char *)v80 + v88;
        uint64_t v90 = (char *)v81 + v88;
        unsigned char *v89 = *((unsigned char *)v81 + v88);
        v89[1] = *((unsigned char *)v81 + v88 + 1);
        uint64_t v181 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v91 = v181[6];
        __dst = &v89[v91];
        id v92 = &v90[v91];
        uint64_t v93 = (int *)type metadata accessor for SharedItem();
        uint64_t v180 = *((void *)v93 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v180 + 48))(v92, 1, v93))
        {
          uint64_t v94 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v92, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          uint64_t v113 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(__dst, v92, v113);
          __dst[v93[5]] = v92[v93[5]];
          *(void *)&__dst[v93[6]] = *(void *)&v92[v93[6]];
          v183(&__dst[v93[7]], &v92[v93[7]], v185);
          (*(void (**)(char *, void, uint64_t, int *))(v180 + 56))(__dst, 0, 1, v93);
        }
        v89[v181[7]] = v90[v181[7]];
        v89[v181[8]] = v90[v181[8]];
        v89[v181[9]] = v90[v181[9]];
        v89[v181[10]] = v90[v181[10]];
        uint64_t v114 = v82[11];
        uint64_t v115 = (char *)v80 + v114;
        uint64_t v116 = (char *)v81 + v114;
        uint64_t v117 = sub_1C151D2DC();
        uint64_t v118 = *(void *)(v117 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v115, v116, v117);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
        }
        uint64_t v78 = v183;
        *(_OWORD *)((char *)v80 + v82[12]) = *(_OWORD *)((char *)v81 + v82[12]);
        uint64_t v120 = v82[13];
        uint64_t v121 = *(void *)((char *)v81 + v120);
        if (v121 == 2) {
          uint64_t v121 = 2;
        }
        *(void *)((char *)v80 + v120) = v121;
        *(void *)((char *)v80 + v82[14]) = *(void *)((char *)v81 + v82[14]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v182 + 56))(v80, 0, 1, v82);
      }
      uint64_t v122 = v188[13];
      uint64_t v123 = (_OWORD *)((char *)a1 + v122);
      uint64_t v124 = (_OWORD *)((char *)a2 + v122);
      uint64_t v125 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v126 = *(void *)(v125 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          _OWORD *v123 = *v124;
          uint64_t v128 = type metadata accessor for GenericDataVisualization();
          uint64_t v129 = v78;
          uint64_t v130 = v128;
          v129((char *)v123 + *(int *)(v128 + 20), (char *)v124 + *(int *)(v128 + 20), v185);
          *(void *)((char *)v123 + *(int *)(v130 + 24)) = *(void *)((char *)v124 + *(int *)(v130 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v123, v124, *(void *)(v126 + 64));
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
      }
      *((unsigned char *)a1 + v188[14]) = *((unsigned char *)a2 + v188[14]);
      goto LABEL_94;
    case 8u:
      *a1 = *a2;
      uint64_t v37 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v38 = (_OWORD *)((char *)a1 + v37);
      uint64_t v39 = (char *)a2 + v37;
      long long v40 = *(_OWORD *)((char *)a2 + v37 + 16);
      *uint64_t v38 = *(_OWORD *)((char *)a2 + v37);
      v38[1] = v40;
      uint64_t v41 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v42 = *(int *)(v41 + 24);
      long long v43 = (char *)v38 + v42;
      long long v44 = &v39[v42];
      uint64_t v45 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v46 = *(void *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        uint64_t v85 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v43, v44, v85);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      *(void *)((char *)v38 + *(int *)(v41 + 28)) = *(void *)&v39[*(int *)(v41 + 28)];
      goto LABEL_94;
    case 0xAu:
      *a1 = *a2;
      uint64_t v48 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v49 = v48[5];
      id v50 = (char *)a1 + v49;
      id v51 = (char *)a2 + v49;
      uint64_t v52 = sub_1C151959C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      *(void *)((char *)a1 + v48[6]) = *(void *)((char *)a2 + v48[6]);
      uint64_t v53 = v48[7];
      uint64_t v54 = (char *)a1 + v53;
      uint64_t v55 = (char *)a2 + v53;
      v54[8] = v55[8];
      *(void *)uint64_t v54 = *(void *)v55;
      *(_OWORD *)((char *)a1 + v48[8]) = *(_OWORD *)((char *)a2 + v48[8]);
      goto LABEL_94;
    case 0xFu:
      uint64_t v56 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v56;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      uint64_t v57 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      long long v58 = (char *)a1 + v57;
      uint64_t v59 = (void *)((char *)a2 + v57);
      *(void *)((char *)a1 + v57) = *v59;
      uint64_t v60 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v61 = &v58[v60];
      uint64_t v62 = (void *)((char *)v59 + v60);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v99 = type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5)
          {
            uint64_t v101 = type metadata accessor for PuzzleStreak();
            uint64_t v102 = *(void *)(v101 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101))
            {
LABEL_37:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v61, v62, *(void *)(*(void *)(v103 - 8) + 64));
              goto LABEL_71;
            }
          }
          else
          {
            if (EnumCaseMultiPayload != 4)
            {
              memcpy(v61, v62, *(void *)(*(void *)(v99 - 8) + 64));
              goto LABEL_72;
            }
            uint64_t v101 = type metadata accessor for PuzzleStreak();
            uint64_t v102 = *(void *)(v101 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101)) {
              goto LABEL_37;
            }
          }
          uint64_t v156 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v156 - 8) + 32))(v61, v62, v156);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v61, 0, 1, v101);
LABEL_71:
          swift_storeEnumTagMultiPayload();
LABEL_72:
          uint64_t v157 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v158 = *(int *)(v157 + 20);
          uint64_t v190 = v61;
          long long v159 = &v61[v158];
          long long v160 = (char *)v62 + v158;
          int v161 = swift_getEnumCaseMultiPayload();
          if (v161 == 5)
          {
            uint64_t v165 = type metadata accessor for PuzzleStreak();
            uint64_t v166 = *(void *)(v165 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(v160, 1, v165))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v159, v160, *(void *)(*(void *)(v167 - 8) + 64));
            }
            else
            {
              uint64_t v170 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v159, v160, v170);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v166 + 56))(v159, 0, 1, v165);
            }
            long long v169 = v190;
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            if (v161 == 4)
            {
              uint64_t v162 = type metadata accessor for PuzzleStreak();
              uint64_t v163 = *(void *)(v162 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v160, 1, v162))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v159, v160, *(void *)(*(void *)(v164 - 8) + 64));
              }
              else
              {
                uint64_t v168 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 32))(v159, v160, v168);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v159, 0, 1, v162);
              }
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v159, v160, *(void *)(*(void *)(v99 - 8) + 64));
            }
            long long v169 = v190;
          }
          uint64_t v171 = *(int *)(v157 + 24);
          uint64_t v172 = (char *)v169 + v171;
          uint64_t v173 = (char *)v62 + v171;
          int v174 = swift_getEnumCaseMultiPayload();
          if (v174 == 5)
          {
            uint64_t v175 = type metadata accessor for PuzzleStreak();
            uint64_t v176 = *(void *)(v175 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v173, 1, v175))
            {
LABEL_89:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v172, v173, *(void *)(*(void *)(v177 - 8) + 64));
              goto LABEL_92;
            }
          }
          else
          {
            if (v174 != 4)
            {
              memcpy(v172, v173, *(void *)(*(void *)(v99 - 8) + 64));
              goto LABEL_93;
            }
            uint64_t v175 = type metadata accessor for PuzzleStreak();
            uint64_t v176 = *(void *)(v175 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v173, 1, v175)) {
              goto LABEL_89;
            }
          }
          uint64_t v178 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v172, v173, v178);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v172, 0, 1, v175);
          goto LABEL_92;
        case 2u:
          uint64_t v95 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v96 = *((void *)v95 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v96 + 48))(v62, 1, v95))
          {
            sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            size_t v98 = *(void *)(*(void *)(v97 - 8) + 64);
            goto LABEL_63;
          }
          uint64_t v131 = sub_1C151631C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v131 - 8) + 32))(v61, v62, v131);
          uint64_t v132 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          *(_OWORD *)&v61[v132[5]] = *(_OWORD *)((char *)v62 + v132[5]);
          uint64_t v133 = v132[6];
          long long v134 = &v61[v133];
          long long v135 = (_OWORD *)((char *)v62 + v133);
          long long v136 = v135[1];
          *(_OWORD *)long long v134 = *v135;
          *((_OWORD *)v134 + 1) = v136;
          *(void *)&v61[v132[7]] = *(void *)((char *)v62 + v132[7]);
          *(void *)&v61[v132[8]] = *(void *)((char *)v62 + v132[8]);
          *(void *)&v61[v95[5]] = *(void *)((char *)v62 + v95[5]);
          *(void *)&v61[v95[6]] = *(void *)((char *)v62 + v95[6]);
          *(_OWORD *)&v61[v95[7]] = *(_OWORD *)((char *)v62 + v95[7]);
          (*(void (**)(char *, void, uint64_t, int *))(v96 + 56))(v61, 0, 1, v95);
          goto LABEL_93;
        case 3u:
          uint64_t v104 = v62[1];
          *(void *)uint64_t v61 = *v62;
          *((void *)v61 + 1) = v104;
          v61[16] = *((unsigned char *)v62 + 16);
          int v105 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v106 = v105[6];
          uint64_t v189 = v61;
          uint64_t v107 = &v61[v106];
          uint64_t v108 = (char *)v62 + v106;
          uint64_t v109 = type metadata accessor for PuzzleStreak();
          uint64_t v110 = *(void *)(v109 - 8);
          uint64_t v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
          if (v111(v108, 1, v109))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
          }
          else
          {
            uint64_t v137 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v107, v108, v137);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
          }
          uint64_t v138 = v105[7];
          uint64_t v139 = (char *)v189 + v138;
          uint64_t v140 = (char *)v62 + v138;
          if (v111((char *)v62 + v138, 1, v109))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
          }
          else
          {
            uint64_t v142 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v139, v140, v142);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v139, 0, 1, v109);
          }
          uint64_t v143 = v105[8];
          uint64_t v144 = (_OWORD *)((char *)v189 + v143);
          uint64_t v145 = (_OWORD *)((char *)v62 + v143);
          long long v146 = v145[1];
          *uint64_t v144 = *v145;
          v144[1] = v146;
          *(_OWORD *)((char *)v144 + 25) = *(_OWORD *)((char *)v145 + 25);
          uint64_t v147 = v105[9];
          uint64_t v148 = (_OWORD *)((char *)v189 + v147);
          long long v149 = (_OWORD *)((char *)v62 + v147);
          *(_OWORD *)((char *)v148 + 25) = *(_OWORD *)((char *)v149 + 25);
          long long v150 = v149[1];
          *uint64_t v148 = *v149;
          v148[1] = v150;
          uint64_t v151 = v105[10];
          uint64_t v152 = (_OWORD *)((char *)v189 + v151);
          uint64_t v153 = (_OWORD *)((char *)v62 + v151);
          long long v154 = v153[1];
          *uint64_t v152 = *v153;
          v152[1] = v154;
          *(_OWORD *)((char *)v152 + 25) = *(_OWORD *)((char *)v153 + 25);
          goto LABEL_93;
        default:
          uint64_t v63 = type metadata accessor for PuzzleStatisticValue(0);
          int v64 = swift_getEnumCaseMultiPayload();
          if (v64 == 5)
          {
            uint64_t v65 = type metadata accessor for PuzzleStreak();
            uint64_t v66 = *(void *)(v65 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65)) {
              goto LABEL_17;
            }
          }
          else
          {
            if (v64 != 4)
            {
              size_t v98 = *(void *)(*(void *)(v63 - 8) + 64);
LABEL_63:
              memcpy(v61, v62, v98);
              goto LABEL_93;
            }
            uint64_t v65 = type metadata accessor for PuzzleStreak();
            uint64_t v66 = *(void *)(v65 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65))
            {
LABEL_17:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
              goto LABEL_92;
            }
          }
          uint64_t v155 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v155 - 8) + 32))(v61, v62, v155);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v61, 0, 1, v65);
LABEL_92:
          swift_storeEnumTagMultiPayload();
LABEL_93:
          swift_storeEnumTagMultiPayload();
LABEL_94:
          swift_storeEnumTagMultiPayload();
LABEL_95:
          swift_storeEnumTagMultiPayload();
          return a1;
      }
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_95;
  }
}

_OWORD *assignWithTake for FeedItemDimmingType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0946FEC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v6 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *a1 = *a2;
        uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1C151DBAC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
        uint64_t v12 = v7[7];
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        v13[8] = v14[8];
        *(void *)uint64_t v13 = *(void *)v14;
        *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
        goto LABEL_92;
      case 3u:
        *a1 = *a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        uint64_t v182 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v15 = v182[10];
        char v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        *char v16 = *((unsigned char *)a2 + v15);
        v16[1] = *((unsigned char *)a2 + v15 + 1);
        uint64_t v18 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v19 = v18[6];
        uint64_t v20 = &v16[v19];
        uint64_t v21 = &v17[v19];
        uint64_t v22 = (int *)type metadata accessor for SharedItem();
        uint64_t v23 = *((void *)v22 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
        {
          uint64_t v24 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v68 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v20, v21, v68);
          v20[v22[5]] = v21[v22[5]];
          *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
          uint64_t v69 = v22[7];
          uint64_t v181 = &v20[v69];
          id v70 = &v21[v69];
          uint64_t v71 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v181, v70, v71);
          (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
        }
        v16[v18[7]] = v17[v18[7]];
        v16[v18[8]] = v17[v18[8]];
        v16[v18[9]] = v17[v18[9]];
        v16[v18[10]] = v17[v18[10]];
        uint64_t v72 = v182[11];
        uint64_t v73 = (char *)a1 + v72;
        id v74 = (char *)a2 + v72;
        uint64_t v75 = sub_1C151D2DC();
        uint64_t v76 = *(void *)(v75 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        }
        *(_OWORD *)((char *)a1 + v182[12]) = *(_OWORD *)((char *)a2 + v182[12]);
        uint64_t v86 = v182[13];
        uint64_t v87 = *(void *)((char *)a2 + v86);
        if (v87 == 2) {
          uint64_t v87 = 2;
        }
        *(void *)((char *)a1 + v86) = v87;
        *(void *)((char *)a1 + v182[14]) = *(void *)((char *)a2 + v182[14]);
        goto LABEL_92;
      case 4u:
        uint64_t v25 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v25;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        uint64_t v26 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v27 = v26[8];
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_1C1515FDC();
        uint64_t v31 = *(void *)(v30 - 8);
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v32(v28, v29, v30);
        uint64_t v33 = v26[9];
        int v34 = (char *)a1 + v33;
        unint64_t v35 = (char *)a2 + v33;
        uint64_t v180 = v30;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))((char *)a2 + v33, 1, v30))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          v32(v34, v35, v30);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
        }
        uint64_t v78 = v32;
        *(void *)((char *)a1 + v26[10]) = *(void *)((char *)a2 + v26[10]);
        *(void *)((char *)a1 + v26[11]) = *(void *)((char *)a2 + v26[11]);
        int v183 = v26;
        uint64_t v79 = v26[12];
        uint64_t v80 = (_OWORD *)((char *)a1 + v79);
        uint64_t v81 = (_OWORD *)((char *)a2 + v79);
        long long v82 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v83 = *((void *)v82 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v83 + 48))(v81, 1, v82))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          uint64_t v177 = v83;
          uint64_t v178 = v32;
          *uint64_t v80 = *v81;
          *((void *)v80 + 2) = *((void *)v81 + 2);
          *((unsigned char *)v80 + 24) = *((unsigned char *)v81 + 24);
          *((void *)v80 + 4) = *((void *)v81 + 4);
          *(_OWORD *)((char *)v80 + 40) = *(_OWORD *)((char *)v81 + 40);
          *((unsigned char *)v80 + 56) = *((unsigned char *)v81 + 56);
          uint64_t v88 = v82[10];
          uint64_t v89 = (char *)v80 + v88;
          uint64_t v90 = (char *)v81 + v88;
          unsigned char *v89 = *((unsigned char *)v81 + v88);
          v89[1] = *((unsigned char *)v81 + v88 + 1);
          uint64_t v176 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v91 = v176[6];
          __dst = &v89[v91];
          id v92 = &v90[v91];
          uint64_t v93 = (int *)type metadata accessor for SharedItem();
          uint64_t v175 = *((void *)v93 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v175 + 48))(v92, 1, v93))
          {
            uint64_t v94 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v92, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            uint64_t v113 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(__dst, v92, v113);
            __dst[v93[5]] = v92[v93[5]];
            *(void *)&__dst[v93[6]] = *(void *)&v92[v93[6]];
            v178(&__dst[v93[7]], &v92[v93[7]], v180);
            (*(void (**)(char *, void, uint64_t, int *))(v175 + 56))(__dst, 0, 1, v93);
          }
          v89[v176[7]] = v90[v176[7]];
          v89[v176[8]] = v90[v176[8]];
          v89[v176[9]] = v90[v176[9]];
          v89[v176[10]] = v90[v176[10]];
          uint64_t v114 = v82[11];
          uint64_t v115 = (char *)v80 + v114;
          uint64_t v116 = (char *)v81 + v114;
          uint64_t v117 = sub_1C151D2DC();
          uint64_t v118 = *(void *)(v117 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v115, v116, v117);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
          }
          uint64_t v78 = v178;
          *(_OWORD *)((char *)v80 + v82[12]) = *(_OWORD *)((char *)v81 + v82[12]);
          uint64_t v120 = v82[13];
          uint64_t v121 = *(void *)((char *)v81 + v120);
          if (v121 == 2) {
            uint64_t v121 = 2;
          }
          *(void *)((char *)v80 + v120) = v121;
          *(void *)((char *)v80 + v82[14]) = *(void *)((char *)v81 + v82[14]);
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v177 + 56))(v80, 0, 1, v82);
        }
        uint64_t v122 = v183[13];
        uint64_t v123 = (_OWORD *)((char *)a1 + v122);
        uint64_t v124 = (_OWORD *)((char *)a2 + v122);
        uint64_t v125 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v126 = *(void *)(v125 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            _OWORD *v123 = *v124;
            uint64_t v128 = type metadata accessor for GenericDataVisualization();
            uint64_t v129 = v78;
            uint64_t v130 = v128;
            v129((char *)v123 + *(int *)(v128 + 20), (char *)v124 + *(int *)(v128 + 20), v180);
            *(void *)((char *)v123 + *(int *)(v130 + 24)) = *(void *)((char *)v124 + *(int *)(v130 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v123, v124, *(void *)(v126 + 64));
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
        }
        *((unsigned char *)a1 + v183[14]) = *((unsigned char *)a2 + v183[14]);
        goto LABEL_92;
      case 8u:
        *a1 = *a2;
        uint64_t v37 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v38 = (_OWORD *)((char *)a1 + v37);
        uint64_t v39 = (char *)a2 + v37;
        long long v40 = *(_OWORD *)((char *)a2 + v37 + 16);
        *uint64_t v38 = *(_OWORD *)((char *)a2 + v37);
        v38[1] = v40;
        uint64_t v41 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v42 = *(int *)(v41 + 24);
        long long v43 = (char *)v38 + v42;
        long long v44 = &v39[v42];
        uint64_t v45 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v46 = *(void *)(v45 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          uint64_t v85 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v43, v44, v85);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
        }
        *(void *)((char *)v38 + *(int *)(v41 + 28)) = *(void *)&v39[*(int *)(v41 + 28)];
        goto LABEL_92;
      case 0xAu:
        *a1 = *a2;
        uint64_t v48 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v49 = v48[5];
        id v50 = (char *)a1 + v49;
        id v51 = (char *)a2 + v49;
        uint64_t v52 = sub_1C151959C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
        *(void *)((char *)a1 + v48[6]) = *(void *)((char *)a2 + v48[6]);
        uint64_t v53 = v48[7];
        uint64_t v54 = (char *)a1 + v53;
        uint64_t v55 = (char *)a2 + v53;
        v54[8] = v55[8];
        *(void *)uint64_t v54 = *(void *)v55;
        *(_OWORD *)((char *)a1 + v48[8]) = *(_OWORD *)((char *)a2 + v48[8]);
        goto LABEL_92;
      case 0xFu:
        uint64_t v56 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v56;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        uint64_t v57 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        long long v58 = (char *)a1 + v57;
        uint64_t v59 = (void *)((char *)a2 + v57);
        *(void *)((char *)a1 + v57) = *v59;
        uint64_t v60 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v61 = &v58[v60];
        uint64_t v62 = (void *)((char *)v59 + v60);
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v99 = type metadata accessor for PuzzleStatisticValue(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 5)
            {
              uint64_t v101 = type metadata accessor for PuzzleStreak();
              uint64_t v102 = *(void *)(v101 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101))
              {
LABEL_38:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v61, v62, *(void *)(*(void *)(v103 - 8) + 64));
                goto LABEL_72;
              }
            }
            else
            {
              if (EnumCaseMultiPayload != 4)
              {
                memcpy(v61, v62, *(void *)(*(void *)(v99 - 8) + 64));
                goto LABEL_73;
              }
              uint64_t v101 = type metadata accessor for PuzzleStreak();
              uint64_t v102 = *(void *)(v101 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v102 + 48))(v62, 1, v101)) {
                goto LABEL_38;
              }
            }
            uint64_t v156 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v156 - 8) + 32))(v61, v62, v156);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v61, 0, 1, v101);
LABEL_72:
            swift_storeEnumTagMultiPayload();
LABEL_73:
            uint64_t v157 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v158 = *(int *)(v157 + 20);
            uint64_t v185 = v61;
            long long v159 = &v61[v158];
            long long v160 = (char *)v62 + v158;
            int v161 = swift_getEnumCaseMultiPayload();
            if (v161 == 5)
            {
              uint64_t v162 = type metadata accessor for PuzzleStreak();
              uint64_t v163 = *(void *)(v162 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v160, 1, v162))
              {
LABEL_78:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v159, v160, *(void *)(*(void *)(v164 - 8) + 64));
                goto LABEL_81;
              }
            }
            else
            {
              if (v161 != 4)
              {
                memcpy(v159, v160, *(void *)(*(void *)(v99 - 8) + 64));
                goto LABEL_82;
              }
              uint64_t v162 = type metadata accessor for PuzzleStreak();
              uint64_t v163 = *(void *)(v162 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v160, 1, v162)) {
                goto LABEL_78;
              }
            }
            uint64_t v165 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v159, v160, v165);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v159, 0, 1, v162);
LABEL_81:
            swift_storeEnumTagMultiPayload();
LABEL_82:
            uint64_t v166 = *(int *)(v157 + 24);
            uint64_t v167 = (char *)v185 + v166;
            uint64_t v168 = (char *)v62 + v166;
            int v169 = swift_getEnumCaseMultiPayload();
            if (v169 == 5)
            {
              uint64_t v170 = type metadata accessor for PuzzleStreak();
              uint64_t v171 = *(void *)(v170 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v168, 1, v170))
              {
LABEL_87:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v167, v168, *(void *)(*(void *)(v172 - 8) + 64));
                goto LABEL_90;
              }
            }
            else
            {
              if (v169 != 4)
              {
                memcpy(v167, v168, *(void *)(*(void *)(v99 - 8) + 64));
                goto LABEL_91;
              }
              uint64_t v170 = type metadata accessor for PuzzleStreak();
              uint64_t v171 = *(void *)(v170 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v168, 1, v170)) {
                goto LABEL_87;
              }
            }
            uint64_t v173 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v167, v168, v173);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v167, 0, 1, v170);
            goto LABEL_90;
          case 2u:
            uint64_t v95 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v96 = *((void *)v95 - 1);
            if ((*(unsigned int (**)(void *, uint64_t, int *))(v96 + 48))(v62, 1, v95))
            {
              sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              size_t v98 = *(void *)(*(void *)(v97 - 8) + 64);
              goto LABEL_64;
            }
            uint64_t v131 = sub_1C151631C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v131 - 8) + 32))(v61, v62, v131);
            uint64_t v132 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)&v61[v132[5]] = *(_OWORD *)((char *)v62 + v132[5]);
            uint64_t v133 = v132[6];
            long long v134 = &v61[v133];
            long long v135 = (_OWORD *)((char *)v62 + v133);
            long long v136 = v135[1];
            *(_OWORD *)long long v134 = *v135;
            *((_OWORD *)v134 + 1) = v136;
            *(void *)&v61[v132[7]] = *(void *)((char *)v62 + v132[7]);
            *(void *)&v61[v132[8]] = *(void *)((char *)v62 + v132[8]);
            *(void *)&v61[v95[5]] = *(void *)((char *)v62 + v95[5]);
            *(void *)&v61[v95[6]] = *(void *)((char *)v62 + v95[6]);
            *(_OWORD *)&v61[v95[7]] = *(_OWORD *)((char *)v62 + v95[7]);
            (*(void (**)(char *, void, uint64_t, int *))(v96 + 56))(v61, 0, 1, v95);
            goto LABEL_91;
          case 3u:
            uint64_t v104 = v62[1];
            *(void *)uint64_t v61 = *v62;
            *((void *)v61 + 1) = v104;
            v61[16] = *((unsigned char *)v62 + 16);
            int v105 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v106 = v105[6];
            uint64_t v184 = v61;
            uint64_t v107 = &v61[v106];
            uint64_t v108 = (char *)v62 + v106;
            uint64_t v109 = type metadata accessor for PuzzleStreak();
            uint64_t v110 = *(void *)(v109 - 8);
            uint64_t v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
            if (v111(v108, 1, v109))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
            }
            else
            {
              uint64_t v137 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v107, v108, v137);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
            }
            uint64_t v138 = v105[7];
            uint64_t v139 = (char *)v184 + v138;
            uint64_t v140 = (char *)v62 + v138;
            if (v111((char *)v62 + v138, 1, v109))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
            }
            else
            {
              uint64_t v142 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v139, v140, v142);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v139, 0, 1, v109);
            }
            uint64_t v143 = v105[8];
            uint64_t v144 = (_OWORD *)((char *)v184 + v143);
            uint64_t v145 = (_OWORD *)((char *)v62 + v143);
            long long v146 = v145[1];
            *uint64_t v144 = *v145;
            v144[1] = v146;
            *(_OWORD *)((char *)v144 + 25) = *(_OWORD *)((char *)v145 + 25);
            uint64_t v147 = v105[9];
            uint64_t v148 = (_OWORD *)((char *)v184 + v147);
            long long v149 = (_OWORD *)((char *)v62 + v147);
            *(_OWORD *)((char *)v148 + 25) = *(_OWORD *)((char *)v149 + 25);
            long long v150 = v149[1];
            *uint64_t v148 = *v149;
            v148[1] = v150;
            uint64_t v151 = v105[10];
            uint64_t v152 = (_OWORD *)((char *)v184 + v151);
            uint64_t v153 = (_OWORD *)((char *)v62 + v151);
            long long v154 = v153[1];
            *uint64_t v152 = *v153;
            v152[1] = v154;
            *(_OWORD *)((char *)v152 + 25) = *(_OWORD *)((char *)v153 + 25);
            goto LABEL_91;
          default:
            uint64_t v63 = type metadata accessor for PuzzleStatisticValue(0);
            int v64 = swift_getEnumCaseMultiPayload();
            if (v64 == 5)
            {
              uint64_t v65 = type metadata accessor for PuzzleStreak();
              uint64_t v66 = *(void *)(v65 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65)) {
                goto LABEL_18;
              }
            }
            else
            {
              if (v64 != 4)
              {
                size_t v98 = *(void *)(*(void *)(v63 - 8) + 64);
LABEL_64:
                memcpy(v61, v62, v98);
                goto LABEL_91;
              }
              uint64_t v65 = type metadata accessor for PuzzleStreak();
              uint64_t v66 = *(void *)(v65 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65))
              {
LABEL_18:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
                goto LABEL_90;
              }
            }
            uint64_t v155 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v155 - 8) + 32))(v61, v62, v155);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v61, 0, 1, v65);
LABEL_90:
            swift_storeEnumTagMultiPayload();
LABEL_91:
            swift_storeEnumTagMultiPayload();
LABEL_92:
            swift_storeEnumTagMultiPayload();
LABEL_93:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_93;
    }
  }
  return a1;
}

uint64_t sub_1C094AA74()
{
  uint64_t result = type metadata accessor for FeedItem(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NoopFeedItemDimmingEvaluator()
{
  return self;
}

__n128 FormatAssetHandleProvider.focalFrame.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  __n128 result = *(__n128 *)v1;
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t FormatAssetHandleProvider.requestData.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 64);
  long long v3 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 112);
  char v5 = *(unsigned char *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 40);
  *(_OWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 56) = v3;
  *(void *)(a1 + 72) = v4;
  *(unsigned char *)(a1 + 80) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C094AB80@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_1BFC66384(a1, a2);
}

uint64_t FormatAssetHandle.assetDataProvider.getter()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1C151A6FC();
}

id FormatAssetHandle.fallbackImage.getter()
{
  sub_1BFF44AD4(v0 + 40, (uint64_t)v6);
  id v1 = v7;
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(v6, (uint64_t)v7);
    sub_1C151A71C();
    id v1 = v2;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    if (v1)
    {
      id v3 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
      uint64_t v4 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      id v1 = objc_msgSend(v3, sel_initWithContentsOfFile_, v4);
    }
  }
  else
  {
    sub_1BFF44FE0((uint64_t)v6);
  }
  return v1;
}

uint64_t FormatAssetHandle.uniqueKey.getter()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1C151A72C();
}

uint64_t FormatAssetHandle.download(withGroup:)()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1C151A70C();
}

uint64_t sub_1C094AD34()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1C151A70C();
}

ValueMetadata *type metadata accessor for FormatImage()
{
  return &type metadata for FormatImage;
}

uint64_t destroy for FormatAssetHandleProvider()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for FormatAssetHandleProvider(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  long long v5 = *(_OWORD *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v6;
  *(_OWORD *)(a1 + 88) = v5;
  uint64_t v7 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatAssetHandleProvider(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  long long v6 = *(long long *)((char *)a2 + 88);
  long long v7 = *(long long *)((char *)a2 + 104);
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 88) = v6;
  uint64_t v8 = *((void *)a2 + 17);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  *(void *)(a1 + 136) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatAssetHandleProvider(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAssetHandleProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 128);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatAssetHandleProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 128) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAssetHandleProvider()
{
  return &type metadata for FormatAssetHandleProvider;
}

uint64_t assignWithCopy for FormatAssetHandle(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v4 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v4)
    {
      *(void *)(a1 + 64) = v4;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 40);
    long long v6 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v5;
    *(_OWORD *)(a1 + 56) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

uint64_t assignWithTake for FormatAssetHandle(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for FormatAssetHandle()
{
  return &type metadata for FormatAssetHandle;
}

uint64_t SportsTaxonomyGraphSectionNode.parents.getter()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 48);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_1C15204BC();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_26:
    long long v5 = (void *)MEMORY[0x1E4FBC860];
LABEL_27:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v5;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (!v2) {
    goto LABEL_26;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    long long v5 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C18C7CB0](v4, v1);
      }
      else
      {
        uint64_t v6 = *(void *)(v1 + 8 * v4 + 32);
        swift_retain();
      }
      if (MEMORY[0x1C18C9C60](*(void *)(v6 + 16) + 16))
      {
        type metadata accessor for SportsTaxonomyGraphRootNode();
        swift_unknownObjectRetain();
        uint64_t v7 = swift_dynamicCastClass();
        if (v7)
        {
          uint64_t v8 = v7;
          swift_unknownObjectRelease();
          unint64_t v9 = swift_allocObject();
          *(void *)(v9 + 16) = v8;
          swift_release();
LABEL_19:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v5 = sub_1C0EDFFB0(0, v5[2] + 1, 1, v5);
          }
          unint64_t v19 = v5[2];
          unint64_t v18 = v5[3];
          if (v19 >= v18 >> 1) {
            long long v5 = sub_1C0EDFFB0((void *)(v18 > 1), v19 + 1, 1, v5);
          }
          v5[2] = v19 + 1;
          v5[v19 + 4] = v9;
          goto LABEL_6;
        }
        type metadata accessor for SportsTaxonomyGraphEntityNode();
        uint64_t v10 = swift_dynamicCastClass();
        if (v10)
        {
          uint64_t v11 = v10;
          swift_unknownObjectRelease();
          uint64_t v12 = swift_allocObject();
          *(void *)(v12 + 16) = v11;
          swift_release();
          unint64_t v9 = v12 | 0x8000000000000000;
          goto LABEL_19;
        }
        type metadata accessor for SportsTaxonomyGraphLeafEntityNode();
        uint64_t v13 = swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (v13)
        {
          uint64_t v14 = swift_allocObject();
          *(void *)(v14 + 16) = v13;
          swift_release();
          unint64_t v9 = v14 | 0x4000000000000000;
          goto LABEL_19;
        }
        uint64_t v15 = swift_dynamicCastClass();
        if (v15)
        {
          uint64_t v16 = v15;
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v16;
          swift_release();
          unint64_t v9 = v17 | 0xC000000000000000;
          goto LABEL_19;
        }
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
LABEL_6:
      if (v2 == ++v4) {
        goto LABEL_27;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C094B458()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t SportsTaxonomyGraphSectionNode.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsTaxonomyGraphSectionNode.isHidden.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SportsTaxonomyGraphSectionNode.isChildrenOrderCurated.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t SportsTaxonomyGraphSectionNode.header.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C094B5DC(v2, v3);
}

__n128 SportsTaxonomyGraphSectionNode.__allocating_init(header:isHidden:isChildrenOrderCurated:)(__n128 *a1, char a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 40) = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 48) = v7;
  *(unsigned char *)(v6 + 16) = a2;
  __n128 result = *a1;
  *(__n128 *)(v6 + 24) = *a1;
  *(unsigned char *)(v6 + 17) = a3;
  return result;
}

uint64_t SportsTaxonomyGraphSectionNode.init(header:isHidden:isChildrenOrderCurated:)(_OWORD *a1, char a2, char a3)
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 40) = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 48) = v4;
  *(unsigned char *)(v3 + 16) = a2;
  *(_OWORD *)(v3 + 24) = *a1;
  *(unsigned char *)(v3 + 17) = a3;
  return v3;
}

uint64_t SportsTaxonomyGraphSectionNode.deinit()
{
  sub_1C094B5EC(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsTaxonomyGraphSectionNode.__deallocating_deinit()
{
  sub_1C094B5EC(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C094B5DC(uint64_t a1, uint64_t a2)
{
  if (a2 != 2) {
    return sub_1BFEF9C98(a1, a2);
  }
  return a1;
}

uint64_t sub_1C094B5EC(uint64_t a1, uint64_t a2)
{
  if (a2 != 2) {
    return sub_1BFEF2F40(a1, a2);
  }
  return a1;
}

uint64_t type metadata accessor for SportsTaxonomyGraphSectionNode()
{
  return self;
}

uint64_t method lookup function for SportsTaxonomyGraphSectionNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsTaxonomyGraphSectionNode);
}

uint64_t dispatch thunk of SportsTaxonomyGraphSectionNode.__allocating_init(header:isHidden:isChildrenOrderCurated:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

void *sub_1C094B64C(uint64_t a1)
{
  sub_1C094BFA4(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v70 = (uint64_t)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v67 = (char *)&v65 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v66 = (uint64_t)&v65 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v65 = (uint64_t)&v65 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v65 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v65 - v14;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v65 - v17;
  unint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C094BFA4(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C094BFA4(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v19);
  sub_1C0181BEC(0);
  uint64_t v69 = v20;
  unint64_t v21 = (*(unsigned __int8 *)(*(void *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80);
  uint64_t v75 = *(void *)(*(void *)(v20 - 8) + 72);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C152FC70;
  uint64_t v68 = v22;
  uint64_t v23 = (char *)(v22 + v21);
  uint64_t v73 = a1;
  sub_1C094C008(a1, (uint64_t)v18);
  uint64_t v24 = sub_1C151A8EC();
  uint64_t v25 = *(void *)(v24 - 8);
  id v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v26 = v74(v18, 1, v24);
  uint64_t v72 = v25;
  if (v26 == 1)
  {
    sub_1C094C09C((uint64_t)v18);
    uint64_t v27 = 0;
    char v28 = 1;
  }
  else
  {
    uint64_t v27 = sub_1C151A8CC();
    char v28 = v29 & 1;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v24);
  }
  sub_1C0436C30(0x6E6F697461727544, 0xE800000000000000, v27, v28, v23);
  uint64_t v30 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  v31(v23, 0, 1, v30);
  sub_1C094C008(v73, (uint64_t)v15);
  if (v74(v15, 1, v24) == 1)
  {
    sub_1C094C09C((uint64_t)v15);
    uint64_t v32 = 0;
    LOBYTE(v33) = 1;
  }
  else
  {
    unint64_t v34 = sub_1C151A8AC();
    unsigned int v35 = v34;
    uint64_t v33 = HIDWORD(v34) & 1;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v15, v24);
    uint64_t v32 = v35;
  }
  uint64_t v36 = &v23[v75];
  LOBYTE(v76[0]) = v33;
  sub_1C0437250(0x6465657053, 0xE500000000000000, v32 | ((unint64_t)v33 << 32), &v23[v75]);
  v31(v36, 0, 1, v30);
  sub_1C094C008(v73, (uint64_t)v12);
  if (v74(v12, 1, v24) == 1)
  {
    sub_1C094C09C((uint64_t)v12);
    uint64_t v37 = 0;
    char v38 = 1;
  }
  else
  {
    uint64_t v37 = sub_1C151A86C();
    char v38 = v39 & 1;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v12, v24);
  }
  long long v40 = &v23[2 * v75];
  sub_1C0436C30(0x66664F20656D6954, 0xEB00000000746573, v37, v38, v40);
  v31(v40, 0, 1, v30);
  uint64_t v41 = v73;
  uint64_t v42 = v65;
  sub_1C094C008(v73, v65);
  if (v74((char *)v42, 1, v24) == 1)
  {
    sub_1C094C09C(v42);
    long long v43 = 0;
  }
  else
  {
    long long v43 = (void *)sub_1C151A8DC();
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v42, v24);
  }
  uint64_t v44 = (uint64_t)v67;
  uint64_t v45 = &v23[3 * v75];
  sub_1C0439468(0x646F4D206C6C6946, 0xE900000000000065, v43, v45);
  v31(v45, 0, 1, v30);
  uint64_t v46 = v66;
  sub_1C094C008(v41, v66);
  if (v74((char *)v46, 1, v24) == 1)
  {
    sub_1C094C09C(v46);
    uint64_t v47 = 0;
    LOBYTE(v48) = 1;
  }
  else
  {
    unint64_t v49 = sub_1C151A87C();
    id v50 = v31;
    unsigned int v51 = v49;
    uint64_t v48 = HIDWORD(v49) & 1;
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v46, v24);
    uint64_t v47 = v51;
    uint64_t v31 = v50;
    uint64_t v41 = v73;
  }
  uint64_t v52 = &v23[4 * v75];
  LOBYTE(v76[0]) = v48;
  sub_1C0437250(0x4320746165706552, 0xEC000000746E756FLL, v47 | ((unint64_t)v48 << 32), v52);
  v31(v52, 0, 1, v30);
  sub_1C094C008(v41, v44);
  if (v74((char *)v44, 1, v24) == 1)
  {
    sub_1C094C09C(v44);
    uint64_t v53 = 0;
    char v54 = 1;
  }
  else
  {
    uint64_t v53 = sub_1C151A89C();
    char v54 = v55 & 1;
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v44, v24);
  }
  uint64_t v56 = &v23[5 * v75];
  sub_1C0436C30(0x4420746165706552, 0xEF6E6F6974617275, v53, v54, v56);
  v31(v56, 0, 1, v30);
  uint64_t v57 = v70;
  sub_1C094C008(v41, v70);
  if (v74((char *)v57, 1, v24) == 1)
  {
    sub_1C094C09C(v57);
    char v58 = 2;
  }
  else
  {
    char v58 = sub_1C151A88C();
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v57, v24);
  }
  uint64_t v59 = &v23[6 * v75];
  sub_1C0432B74(0x657665726F747541, 0xEC00000073657372, v58, v59);
  v31(v59, 0, 1, v30);
  sub_1C09BCFA4(0x695420616964654DLL, 0xEC000000676E696DLL, 0, 0, v68, v76);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v60 = inited;
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v60 + 64) = &off_1F1BDEC90;
  uint64_t v61 = swift_allocObject();
  *(void *)(v60 + 32) = v61;
  *(void *)(v61 + 48) = v77;
  long long v62 = v76[1];
  *(_OWORD *)(v61 + 16) = v76[0];
  *(_OWORD *)(v61 + 32) = v62;
  uint64_t v63 = sub_1C131B79C(v60);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v63;
}

void sub_1C094BFA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C094C008(uint64_t a1, uint64_t a2)
{
  sub_1C094BFA4(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C094C09C(uint64_t a1)
{
  sub_1C094BFA4(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C094C128()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FormatContentSubgroupFilterOnce.type.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FormatContentSubgroupFilterOnce.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C094C1D0(uint64_t a1)
{
  unint64_t v2 = sub_1C094C394();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C094C20C(uint64_t a1)
{
  unint64_t v2 = sub_1C094C394();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSubgroupFilterOnce.encode(to:)(void *a1)
{
  sub_1C094C56C(0, &qword_1EA1A11C8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C094C394();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C094C394()
{
  unint64_t result = qword_1EB869378;
  if (!qword_1EB869378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869378);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterOnce.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C094C56C(0, &qword_1EB86B728, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C094C394();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v10 = sub_1C152069C();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C094C56C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C094C394();
    unint64_t v7 = a3(a1, &type metadata for FormatContentSubgroupFilterOnce.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C094C5D0(void *a1)
{
  a1[1] = sub_1C094C608();
  a1[2] = sub_1C094C65C();
  unint64_t result = sub_1C094C6B0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C094C608()
{
  unint64_t result = qword_1EB869390;
  if (!qword_1EB869390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869390);
  }
  return result;
}

unint64_t sub_1C094C65C()
{
  unint64_t result = qword_1EA1A11D0;
  if (!qword_1EA1A11D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A11D0);
  }
  return result;
}

unint64_t sub_1C094C6B0()
{
  unint64_t result = qword_1EA1A11D8;
  if (!qword_1EA1A11D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A11D8);
  }
  return result;
}

uint64_t sub_1C094C704@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroupFilterOnce.init(from:)(a1, a2);
}

uint64_t sub_1C094C71C(void *a1)
{
  sub_1C094C56C(0, &qword_1EA1A11C8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C094C394();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterOnce()
{
  return &type metadata for FormatContentSubgroupFilterOnce;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroupFilterOnce.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C094C914);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterOnce.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterOnce.CodingKeys;
}

unint64_t sub_1C094C950()
{
  unint64_t result = qword_1EA1A11E0;
  if (!qword_1EA1A11E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A11E0);
  }
  return result;
}

unint64_t sub_1C094C9A8()
{
  unint64_t result = qword_1EB869388;
  if (!qword_1EB869388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869388);
  }
  return result;
}

unint64_t sub_1C094CA00()
{
  unint64_t result = qword_1EB869380;
  if (!qword_1EB869380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869380);
  }
  return result;
}

uint64_t FormatColorNotExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return swift_release();
}

uint64_t FormatColorNotExpression.expression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t static FormatColorNotExpression.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = v2;
  return static FormatColorExpression.== infix(_:_:)(&v5, &v4) & 1;
}

unint64_t sub_1C094CB04(uint64_t a1)
{
  unint64_t result = sub_1C094CB2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C094CB2C()
{
  unint64_t result = qword_1EA1A11E8;
  if (!qword_1EA1A11E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A11E8);
  }
  return result;
}

uint64_t sub_1C094CB80(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = v2;
  return static FormatColorExpression.== infix(_:_:)(&v5, &v4) & 1;
}

unint64_t sub_1C094CBB8(void *a1)
{
  a1[1] = sub_1C087C4D8();
  a1[2] = sub_1C08FDC60();
  unint64_t result = sub_1C094CBF0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C094CBF0()
{
  unint64_t result = qword_1EA1A11F0;
  if (!qword_1EA1A11F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A11F0);
  }
  return result;
}

uint64_t sub_1C094CC44@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatColorNotExpression.init(from:)(a1, a2);
}

uint64_t sub_1C094CC5C(void *a1)
{
  return FormatColorNotExpression.encode(to:)(a1);
}

uint64_t sub_1C094CC74(uint64_t a1, uint64_t a2)
{
  return swift_release();
}

uint64_t sub_1C094CCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v19 = *v2;
  uint64_t v10 = v3;
  char v11 = v4;
  char v12 = v5;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v14 = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v15 = *(_OWORD *)(a2 + 48);
  long long v16 = v8;
  long long v17 = *(_OWORD *)(a2 + 80);
  uint64_t v18 = v6;
  return sub_1BFF7B258(a1, &v10);
}

ValueMetadata *type metadata accessor for FormatColorNotExpression()
{
  return &type metadata for FormatColorNotExpression;
}

uint64_t sub_1C094CD68(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB885370 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  long long v7 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194A38 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EA1AA2A8;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v12[1] = a1;
  sub_1C151A81C();
  swift_allocObject();
  id v10 = v9;
  return sub_1C151A7FC();
}

ValueMetadata *type metadata accessor for Commands.Reload()
{
  return &type metadata for Commands.Reload;
}

double FormatLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t FormatLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutAttributes.itemIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutAttributes.layoutValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayoutAttributes.accessibilityValues.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatLayoutAttributes.accessibilityRole.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 128);
}

uint64_t FormatLayoutAttributes.__allocating_init(frame:identifier:itemIdentifier:layoutIdentifier:nodeIdentifier:layoutValues:accessibilityValues:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t result = swift_allocObject();
  char v26 = *a15;
  *(double *)(result + 16) = a9;
  *(double *)(result + 24) = a10;
  *(double *)(result + 32) = a11;
  *(double *)(result + 40) = a12;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = a2;
  *(void *)(result + 64) = a3;
  *(void *)(result + 72) = a4;
  *(void *)(result + 80) = a5;
  *(void *)(result + 88) = a6;
  *(void *)(result + 96) = a7;
  *(void *)(result + 104) = a8;
  *(void *)(result + 112) = a13;
  *(void *)(result + 120) = a14;
  *(unsigned char *)(result + 128) = v26;
  return result;
}

uint64_t FormatLayoutAttributes.init(frame:identifier:itemIdentifier:layoutIdentifier:nodeIdentifier:layoutValues:accessibilityValues:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, char *a15)
{
  char v16 = *a15;
  *(double *)(v15 + 16) = a9;
  *(double *)(v15 + 24) = a10;
  *(double *)(v15 + 32) = a11;
  *(double *)(v15 + 40) = a12;
  *(void *)(v15 + 48) = a1;
  *(void *)(v15 + 56) = a2;
  *(void *)(v15 + 64) = a3;
  *(void *)(v15 + 72) = a4;
  *(void *)(v15 + 80) = a5;
  *(void *)(v15 + 88) = a6;
  *(void *)(v15 + 96) = a7;
  *(void *)(v15 + 104) = a8;
  *(void *)(v15 + 112) = a13;
  *(void *)(v15 + 120) = a14;
  *(unsigned char *)(v15 + 128) = v16;
  return v15;
}

uint64_t sub_1C094D18C(char a1)
{
  uint64_t result = 0x656D617266;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x696669746E656469;
      break;
    case 2:
      unsigned int v3 = 1835365481;
      goto LABEL_6;
    case 3:
      uint64_t result = 0xD000000000000010;
      break;
    case 4:
      unsigned int v3 = 1701080942;
LABEL_6:
      uint64_t result = v3 | 0x6E65644900000000;
      break;
    case 5:
      uint64_t result = 0x615674756F79616CLL;
      break;
    case 6:
      uint64_t result = 0xD000000000000013;
      break;
    case 7:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C094D2A4()
{
  return sub_1C094D18C(*v0);
}

uint64_t sub_1C094D2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C094E2E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C094D2D4(uint64_t a1)
{
  unint64_t v2 = sub_1C094D70C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C094D310(uint64_t a1)
{
  unint64_t v2 = sub_1C094D70C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C094DE7C(0, &qword_1EA1A11F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C094D70C();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 32);
  long long v14 = *(_OWORD *)(v3 + 16);
  long long v15 = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BFE4C460(&qword_1EA197288, 255, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1C15207CC();
    LOBYTE(v14) = 2;
    sub_1C152074C();
    LOBYTE(v14) = 3;
    sub_1C15207CC();
    LOBYTE(v14) = 4;
    sub_1C15207CC();
    *(void *)&long long v14 = *(void *)(v3 + 112);
    char v13 = 5;
    sub_1C094D760();
    sub_1C094DEE0(&qword_1EA1A1208, (void (*)(void))sub_1C007CF24);
    sub_1C152080C();
    *(void *)&long long v14 = *(void *)(v3 + 120);
    char v13 = 6;
    sub_1C094D7B8();
    sub_1C094D810(&qword_1EA1A1210, &qword_1EB88D708);
    sub_1C152080C();
    LOBYTE(v14) = *(unsigned char *)(v3 + 128);
    char v13 = 7;
    sub_1BFFB3984();
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C094D70C()
{
  unint64_t result = qword_1EA1A1200;
  if (!qword_1EA1A1200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1200);
  }
  return result;
}

void sub_1C094D760()
{
  if (!qword_1EB85DEF0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85DEF0);
    }
  }
}

void sub_1C094D7B8()
{
  if (!qword_1EB890098)
  {
    type metadata accessor for FormatAccessibilityLayoutValue();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890098);
    }
  }
}

uint64_t sub_1C094D810(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C094D7B8();
    sub_1BFE4C460(a2, 255, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatLayoutAttributes.init(from:)(void *a1)
{
  sub_1C094DE7C(0, &qword_1EA1A1218, MEMORY[0x1E4FBBDC0]);
  uint64_t v20 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C094D70C();
  unint64_t v21 = v7;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    uint64_t v17 = (uint64_t)a1;
  }
  else
  {
    uint64_t v8 = v5;
    type metadata accessor for CGRect(0);
    char v24 = 0;
    sub_1BFE4C460(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    uint64_t v9 = v20;
    sub_1C15206EC();
    long long v10 = v23;
    *(_OWORD *)(v1 + 16) = v22;
    *(_OWORD *)(v1 + 32) = v10;
    LOBYTE(v22) = 1;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    LOBYTE(v22) = 2;
    *(void *)(v1 + 64) = sub_1C152060C();
    *(void *)(v1 + 72) = v12;
    LOBYTE(v22) = 3;
    *(void *)(v1 + 80) = sub_1C152069C();
    *(void *)(v1 + 88) = v13;
    LOBYTE(v22) = 4;
    uint64_t v14 = sub_1C152069C();
    uint64_t v19 = a1;
    *(void *)(v1 + 96) = v14;
    *(void *)(v1 + 104) = v15;
    sub_1C094D760();
    char v24 = 5;
    sub_1C094DEE0(&qword_1EB85DEF8, (void (*)(void))sub_1C007CED0);
    sub_1C15206EC();
    *(void *)(v1 + 112) = v22;
    sub_1C094D7B8();
    char v24 = 6;
    sub_1C094D810(&qword_1EA1A1220, &qword_1EB88D710);
    sub_1C15206EC();
    *(void *)(v1 + 120) = v22;
    char v24 = 7;
    sub_1BFD86F6C();
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v21, v9);
    *(unsigned char *)(v1 + 128) = v22;
    uint64_t v17 = (uint64_t)v19;
  }
  __swift_destroy_boxed_opaque_existential_1(v17);
  return v1;
}

void sub_1C094DE7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C094D70C();
    unint64_t v7 = a3(a1, &type metadata for FormatLayoutAttributes.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C094DEE0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C094D760();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C094DF4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C094DFA4(void *a1)
{
  return FormatLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C094DFC8(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C460(&qword_1EB88A8A0, a2, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  return sub_1C151798C();
}

uint64_t method lookup function for FormatLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatLayoutAttributes);
}

uint64_t dispatch thunk of FormatLayoutAttributes.__allocating_init(frame:identifier:itemIdentifier:layoutIdentifier:nodeIdentifier:layoutValues:accessibilityValues:accessibilityRole:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FormatLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

unsigned char *storeEnumTagSinglePayload for FormatLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C094E1A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatLayoutAttributes.CodingKeys;
}

unint64_t sub_1C094E1E0()
{
  unint64_t result = qword_1EA1A1228;
  if (!qword_1EA1A1228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1228);
  }
  return result;
}

unint64_t sub_1C094E238()
{
  unint64_t result = qword_1EA1A1230;
  if (!qword_1EA1A1230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1230);
  }
  return result;
}

unint64_t sub_1C094E290()
{
  unint64_t result = qword_1EA1A1238;
  if (!qword_1EA1A1238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1238);
  }
  return result;
}

uint64_t sub_1C094E2E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6564496D657469 && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x615674756F79616CLL && a2 == 0xEC0000007365756CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1615DB0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

void sub_1C094E66C()
{
  qword_1EA1A1240 = 0x4036000000000000;
}

void sub_1C094E67C()
{
  qword_1EA1A1248 = 0x4010000000000000;
}

char *sub_1C094E68C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C094F83C(0, &qword_1EA1A1280, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v56 = (char *)&v53 - v4;
  sub_1C094F83C(0, (unint64_t *)&qword_1EA1A17D0, MEMORY[0x1E4F273A8]);
  MEMORY[0x1F4188790](v5 - 8);
  char v54 = (char *)&v53 - v6;
  uint64_t v7 = sub_1C151FCDC();
  uint64_t v57 = *(void *)(v7 - 8);
  uint64_t v58 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1C1515B3C();
  uint64_t v10 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onErrorTap;
  sub_1BFD22278();
  uint64_t v15 = v14;
  id v16 = objc_allocWithZone(v14);
  uint64_t v17 = v1;
  *(void *)&v1[v13] = objc_msgSend(v16, sel_init);
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton;
  uint64_t v19 = self;
  *(void *)&v17[v18] = objc_msgSend(v19, sel_buttonWithType_, 0);
  uint64_t v20 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onChangesTap;
  *(void *)&v17[v20] = objc_msgSend(objc_allocWithZone(v15), sel_init);
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton;
  *(void *)&v17[v21] = objc_msgSend(v19, sel_buttonWithType_, 0);
  uint64_t v22 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_activityIndicatorView;
  *(void *)&v17[v22] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  *(void *)&v17[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_compilerResultEntries] = 0;

  if (qword_1EA194818 != -1) {
    swift_once();
  }
  v61.receiver = v17;
  v61.super_class = ObjectType;
  long long v23 = (char *)objc_msgSendSuper2(&v61, sel_initWithFrame_, 0.0, 0.0, *(double *)&qword_1EA1A1240 + *(double *)&qword_1EA1A1240);
  uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_activityIndicatorView];
  uint64_t v25 = v23;
  objc_msgSend(v25, sel_addSubview_, v24);
  char v26 = self;
  double v27 = *MEMORY[0x1E4FB09E0];
  id v28 = objc_msgSend(v26, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E4FB09E0]);
  id v59 = objc_msgSend(self, sel_configurationWithFont_, v28);

  uint64_t v29 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton;
  uint64_t v30 = *(void **)&v25[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton];
  uint64_t v31 = self;
  id v32 = v30;
  id v33 = objc_msgSend(v31, sel_systemRedColor);
  objc_msgSend(v32, sel_setTintColor_, v33);

  id v34 = *(id *)&v25[v29];
  unsigned int v35 = (void *)sub_1C151E5EC();
  id v36 = objc_msgSend(self, sel_systemImageNamed_, v35);

  if (v36)
  {
    id v37 = objc_msgSend(v36, sel_imageWithConfiguration_, v59);
  }
  else
  {
    id v37 = 0;
  }
  objc_msgSend(v34, sel_setImage_forState_, v37, 0);

  char v38 = *(void **)&v25[v29];
  objc_msgSend(v38, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v25, sel_addSubview_, v38);
  id v39 = *(id *)&v25[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onErrorTap];
  id v40 = v38;
  sub_1C151C87C();

  sub_1C15159CC();
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath);
  *(&v53 - 2) = v42;
  swift_getKeyPath();
  id v60 = objc_msgSend(v26, sel_systemFontOfSize_weight_, 12.0, v27);
  sub_1BFF67A50();
  sub_1C15159BC();
  sub_1C151FCAC();
  long long v43 = v54;
  uint64_t v44 = v55;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v54, v12, v55);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v44);
  sub_1C151FC3C();
  uint64_t v45 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton;
  id v46 = *(id *)&v25[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton];
  id v47 = objc_msgSend(v31, sel_systemBlueColor);
  objc_msgSend(v46, sel_setTintColor_, v47);

  uint64_t v48 = *(void **)&v25[v45];
  unint64_t v49 = v56;
  uint64_t v50 = v57;
  uint64_t v51 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v56, v9, v58);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v49, 0, 1, v51);
  sub_1C151FD0C();
  objc_msgSend(v48, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v25, sel_addSubview_, v48);
  sub_1C151C87C();

  (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v51);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v44);
  return v25;
}

uint64_t sub_1C094EE18()
{
  uint64_t v1 = v0;
  v19.receiver = v0;
  v19.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v19, sel_layoutSubviews);
  BOOL v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton];
  objc_msgSend(v2, sel_setHidden_, 1);
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton];
  objc_msgSend(v3, sel_setHidden_, 1);
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_activityIndicatorView];
  objc_msgSend(v4, sel_setHidden_, 1);
  objc_msgSend(v1, sel_bounds);
  double Width = CGRectGetWidth(v20);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C094F308(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)v7 + 2);
  if (v8)
  {
    uint64_t v9 = (unsigned __int8 *)(v7 + 32);
    if (qword_1EA194818 != -1) {
      swift_once();
    }
    do
    {
      int v10 = *v9++;
      double v11 = *(double *)&qword_1EA1A1240;
      uint64_t v12 = v3;
      switch(v10)
      {
        case 1:
          id v13 = objc_msgSend(self, sel_systemRedColor);
          goto LABEL_8;
        case 2:
          id v13 = objc_msgSend(self, sel_systemYellowColor);
LABEL_8:
          id v14 = v13;
          objc_msgSend(v2, sel_setTintColor_, v14);

          uint64_t v12 = v2;
          break;
        case 3:
          break;
        default:
          objc_msgSend(v4, sel_startAnimating);
          uint64_t v12 = v4;
          break;
      }
      id v15 = v12;
      double v16 = Width - v11;
      objc_msgSend(v15, sel_setFrame_, v16, 0.0, *(double *)&qword_1EA1A1240, *(double *)&qword_1EA1A1240);
      objc_msgSend(v15, sel_setHidden_, 0);
      if (qword_1EA194820 != -1) {
        swift_once();
      }
      double v17 = *(double *)&qword_1EA1A1248;

      double Width = v16 - v17;
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DebugFormatInventoryStatusView()
{
  return self;
}

void sub_1C094F1CC()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onErrorTap;
  sub_1BFD22278();
  uint64_t v3 = v2;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton;
  uint64_t v5 = self;
  *(void *)&v0[v4] = objc_msgSend(v5, sel_buttonWithType_, 0);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onChangesTap;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton;
  *(void *)&v0[v7] = objc_msgSend(v5, sel_buttonWithType_, 0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_activityIndicatorView;
  *(void *)&v0[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_compilerResultEntries] = 0;

  sub_1C152040C();
  __break(1u);
}

char *sub_1C094F308(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (id *)((char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DebugFormatCompilerResultEntry();
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && *(void *)(a1 + 16))
  {
    sub_1C094F774(a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
    uint64_t v13 = *(void *)&v12[*(int *)(v9 + 24)];
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = v13 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v16 = *(void *)(v6 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1C094F774(v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
        int v17 = v8[24];
        sub_1C094F7DC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
        if (v17 == 1) {
          break;
        }
        v15 += v16;
        if (!--v14)
        {
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1C0EE6384(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v20 = *((void *)v18 + 2);
      unint64_t v19 = *((void *)v18 + 3);
      if (v20 >= v19 >> 1) {
        uint64_t v18 = sub_1C0EE6384((char *)(v19 > 1), v20 + 1, 1, v18);
      }
      *((void *)v18 + 2) = v20 + 1;
      v18[v20 + 32] = 3;
    }
    else
    {
LABEL_8:
      uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
    }
    sub_1C094F774((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = sub_1C0EE6384(0, *((void *)v18 + 2) + 1, 1, v18);
        }
        unint64_t v23 = *((void *)v18 + 2);
        unint64_t v22 = *((void *)v18 + 3);
        if (v23 >= v22 >> 1) {
          uint64_t v18 = sub_1C0EE6384((char *)(v22 > 1), v23 + 1, 1, v18);
        }
        *((void *)v18 + 2) = v23 + 1;
        v18[v23 + 32] = 1;
        uint64_t v24 = type metadata accessor for DebugFormatCompilerResultEntry;
        uint64_t v25 = (uint64_t)v12;
        goto LABEL_27;
      }
      sub_1C0913D20();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = sub_1C0EE6384(0, *((void *)v18 + 2) + 1, 1, v18);
      }
      unint64_t v29 = *((void *)v18 + 2);
      unint64_t v28 = *((void *)v18 + 3);
      if (v29 >= v28 >> 1) {
        uint64_t v18 = sub_1C0EE6384((char *)(v28 > 1), v29 + 1, 1, v18);
      }
      *((void *)v18 + 2) = v29 + 1;
      v18[v29 + 32] = 2;
      sub_1C094F7DC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      char v26 = type metadata accessor for FormatFile;
    }
    else
    {
      sub_1C094F7DC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      char v26 = type metadata accessor for DebugFormatCompilerResultOutput;
    }
    uint64_t v24 = v26;
    uint64_t v25 = (uint64_t)v4;
LABEL_27:
    sub_1C094F7DC(v25, (uint64_t (*)(void))v24);
    return v18;
  }
  return (char *)&unk_1F1B88F10;
}

uint64_t sub_1C094F774(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C094F7DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C094F83C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C094F89C()
{
  return 8;
}

uint64_t sub_1C094F8A8()
{
  return swift_release();
}

uint64_t sub_1C094F8B0(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1C094F8C4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatInventoryStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C094F99CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatInventoryStatus()
{
  return &type metadata for DebugFormatInventoryStatus;
}

unint64_t sub_1C094F9D8()
{
  unint64_t result = qword_1EA1A1288;
  if (!qword_1EA1A1288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1288);
  }
  return result;
}

double sub_1C094FA40@<D0>(uint64_t a1@<X2>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v5 = objc_msgSend(*(id *)(a1 + 40), sel_sourceChannel);
  if (v5
    && (id v6 = objc_msgSend(v5, sel_theme), swift_unknownObjectRelease(), v6)
    && (id v7 = [v6 *a2], swift_unknownObjectRelease(), v7)
    && (id v8 = objc_msgSend(v7, sel_assetHandle), v7, v8))
  {
    *(void *)(a3 + 24) = sub_1BFF6C3A8();
    *(void *)(a3 + 32) = sub_1BFF6C3E8();
    *(void *)a3 = v8;
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_1C094FB24@<D0>(uint64_t a1@<X8>)
{
  return sub_1C094FB80((SEL *)&selRef_bannerImageForMask, a1);
}

uint64_t sub_1C094FB30()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

double sub_1C094FB74@<D0>(uint64_t a1@<X8>)
{
  return sub_1C094FB80((SEL *)&selRef_bannerImageForWhiteBackground, a1);
}

double sub_1C094FB80@<D0>(SEL *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for FeedHeadline(0) - 8);
  return sub_1C094FA40(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, a2);
}

uint64_t sub_1C094FC0C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C094FC44@<X0>(uint64_t a1@<X8>)
{
  return sub_1C094AB80(v1 + 16, a1);
}

uint64_t sub_1C094FC50()
{
  uint64_t v1 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v3 = v1[10];
  uint64_t v4 = v2 + v3 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  uint64_t v5 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);

    uint64_t v7 = v4 + *(int *)(v5 + 28);
    uint64_t v8 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = v2 + v1[11];
  uint64_t v10 = sub_1C151D2DC();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  if (*(void *)(v2 + v1[12] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v2 + v1[13]) >= 3uLL) {
    swift_unknownObjectRelease();
  }

  swift_release();
  return swift_deallocObject();
}

BOOL static FormatHeadlineBinding.Image.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatHeadlineBinding.Image.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatHeadlineBinding.Image.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C094FF70()
{
  unint64_t result = qword_1EA1A1290;
  if (!qword_1EA1A1290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1290);
  }
  return result;
}

unint64_t sub_1C094FFC4(uint64_t a1)
{
  unint64_t result = sub_1C094FFEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C094FFEC()
{
  unint64_t result = qword_1EA1A1298;
  if (!qword_1EA1A1298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1298);
  }
  return result;
}

unint64_t sub_1C0950040(void *a1)
{
  a1[1] = sub_1BFD92AB8();
  a1[2] = sub_1BFD5B540();
  unint64_t result = sub_1C094FF70();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.Image()
{
  return &type metadata for FormatHeadlineBinding.Image;
}

uint64_t sub_1C09500B0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  return swift_deallocObject();
}

uint64_t Sequence<>.scoredIssues(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[2] = a1;
  return sub_1C119B3EC((void (*)(char *, char *))sub_1C0950568, (uint64_t)v9, a2, (char *)&type metadata for FeedScoredIssue, MEMORY[0x1E4FBC248], a3, MEMORY[0x1E4FBC278], a8);
}

id FeedScoredIssue.init(issue:scoreProfile:)@<X0>(id result@<X0>, id a2@<X1>, void *a3@<X8>)
{
  id v3 = result;
  if (!a2)
  {
    unint64_t result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
    a2 = result;
  }
  *a3 = v3;
  a3[1] = a2;
  return result;
}

id FeedScoredIssue.issue.getter()
{
  return *v0;
}

id FeedScoredIssue.scoreProfile.getter()
{
  return *(id *)(v0 + 8);
}

id FeedScoredIssue.item.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  id v5 = *(id *)(v1 + 8);
  *a1 = *(void *)v1;
  a1[1] = v5;
  a1[2] = 0;
  id v3 = v2;
  return v5;
}

uint64_t FeedScoredIssue.identifier.getter()
{
  id v1 = objc_msgSend(*v0, sel_itemID);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t FeedScoredIssue.publisherID.getter()
{
  id v1 = objc_msgSend(*v0, sel_publisherID);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C151E62C();

  return v3;
}

uint64_t FeedScoredIssue.date.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_publishDate);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1C15162BC();

    uint64_t v5 = sub_1C151631C();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1C151631C();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

id FeedScoredIssue.score.getter()
{
  return objc_msgSend(*(id *)(v0 + 8), sel_agedPersonalizationScore);
}

id sub_1C0950394()
{
  return objc_msgSend(*(id *)(v0 + 8), sel_agedPersonalizationScore);
}

uint64_t sub_1C09503A4@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_publishDate);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1C15162BC();

    uint64_t v5 = sub_1C151631C();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1C151631C();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

uint64_t sub_1C095046C()
{
  id v1 = objc_msgSend(*v0, sel_itemID);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

id sub_1C0950530@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  id v3 = *(void **)(a1 + 8);
  *a2 = *(void *)a1;
  a2[1] = v3;
  a2[2] = 0;
  id v4 = v2;
  return v3;
}

id sub_1C0950568@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  id v3 = *(void **)(v2 + 16);
  id v4 = *a1;
  *a2 = *a1;
  a2[1] = v3;
  id v5 = v4;
  return v3;
}

uint64_t _s8NewsFeed0B11ScoredIssueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  id v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  id v5 = objc_msgSend(*(id *)a1, sel_itemID);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(v3, sel_itemID);
  uint64_t v10 = sub_1C151E62C();
  uint64_t v12 = v11;

  if (v6 == v10 && v8 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  sub_1C01AE924();
  id v16 = v2;
  id v17 = v4;
  char v18 = sub_1C151FB6C();

  return v18 & 1;
}

unint64_t sub_1C09506B8(uint64_t a1)
{
  unint64_t result = sub_1C09506E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09506E0()
{
  unint64_t result = qword_1EB8815B0;
  if (!qword_1EB8815B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8815B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedScoredIssue()
{
  return &type metadata for FeedScoredIssue;
}

unint64_t sub_1C0950744@<X0>(void *a1@<X8>)
{
  uint64_t v80 = a1;
  uint64_t v85 = type metadata accessor for FeedItemAuxiliaryItem();
  uint64_t v2 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v82 = (uint64_t)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v73 - v5;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v73 - v8;
  uint64_t v11 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v12 = v1[5];
  uint64_t v78 = v1[4];
  uint64_t v79 = v10;
  int64_t v13 = *(void *)(v11 + 16);
  uint64_t v81 = v11;
  uint64_t v77 = v12;
  if (v13)
  {
    uint64_t v84 = v6;
    uint64_t v86 = (void *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v13, 0);
    uint64_t v14 = v11 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v83 = v2;
    uint64_t v15 = *(void *)(v2 + 72);
    uint64_t v16 = (uint64_t)v86;
    do
    {
      sub_1C0951D68(v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
      uint64_t v17 = FeedItem.identifier.getter();
      uint64_t v19 = v18;
      sub_1C0951DD0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = (uint64_t)v86;
      }
      unint64_t v21 = *(void *)(v16 + 16);
      unint64_t v20 = *(void *)(v16 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1BFF661B8(v20 > 1, v21 + 1, 1);
        uint64_t v16 = (uint64_t)v86;
      }
      *(void *)(v16 + 16) = v21 + 1;
      uint64_t v22 = v16 + 16 * v21;
      *(void *)(v22 + 32) = v17;
      *(void *)(v22 + 40) = v19;
      v14 += v15;
      --v13;
    }
    while (v13);
    uint64_t v11 = v81;
    swift_bridgeObjectRelease();
    uint64_t v2 = v83;
    uint64_t v6 = v84;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = sub_1BFEF4060(v16);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v11 + 16);
  if (!v24)
  {
    swift_bridgeObjectRetain();
    uint64_t v67 = (void *)MEMORY[0x1E4FBC868];
    id v47 = (void *)MEMORY[0x1E4FBC868];
LABEL_41:
    swift_bridgeObjectRelease();
    uint64_t v68 = v79;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFE9E338(MEMORY[0x1E4FBC860]);
    uint64_t v70 = v80;
    uint64_t v71 = v77;
    *uint64_t v80 = v78;
    v70[1] = v71;
    v70[2] = v23;
    v70[3] = v67;
    v70[4] = v47;
    v70[5] = result;
    uint64_t v72 = MEMORY[0x1E4FBC870];
    v70[6] = v68;
    v70[7] = v72;
    return result;
  }
  uint64_t v75 = v23;
  uint64_t v25 = v11 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v84 = *(char **)(v2 + 72);
  swift_bridgeObjectRetain_n();
  char v26 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v76 = v25;
  uint64_t v83 = v24;
  while (1)
  {
    sub_1C0951D68(v25, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
    uint64_t v28 = FeedItem.identifier.getter();
    uint64_t v30 = v29;
    uint64_t v31 = (uint64_t)v6;
    uint64_t v32 = *(void *)&v6[*(int *)(v85 + 24)];
    swift_bridgeObjectRetain();
    id v33 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v86 = v33;
    unint64_t v36 = sub_1BFEF2D8C(v28, v30);
    uint64_t v37 = v33[2];
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      break;
    }
    char v40 = v35;
    if (v33[3] >= v39)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        char v26 = v86;
        if ((v35 & 1) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        sub_1C106D788();
        char v26 = v86;
        if ((v40 & 1) == 0) {
          goto LABEL_21;
        }
      }
    }
    else
    {
      sub_1C10586C8(v39, isUniquelyReferenced_nonNull_native);
      unint64_t v41 = sub_1BFEF2D8C(v28, v30);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_46;
      }
      unint64_t v36 = v41;
      char v26 = v86;
      if ((v40 & 1) == 0)
      {
LABEL_21:
        v26[(v36 >> 6) + 8] |= 1 << v36;
        long long v43 = (uint64_t *)(v26[6] + 16 * v36);
        *long long v43 = v28;
        v43[1] = v30;
        *(void *)(v26[7] + 8 * v36) = v32;
        uint64_t v44 = v26[2];
        BOOL v45 = __OFADD__(v44, 1);
        uint64_t v46 = v44 + 1;
        if (v45) {
          goto LABEL_44;
        }
        void v26[2] = v46;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      }
    }
    uint64_t v27 = v26[7];
    swift_bridgeObjectRelease();
    *(void *)(v27 + 8 * v36) = v32;
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = (char *)v31;
    sub_1C0951DD0(v31, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
    v25 += (uint64_t)v84;
    if (!--v24)
    {
      id v74 = v26;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRetain_n();
      id v47 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v48 = v82;
      uint64_t v49 = v76;
      while (1)
      {
        sub_1C0951D68(v49, v48, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
        uint64_t v51 = FeedItem.identifier.getter();
        uint64_t v53 = v52;
        uint64_t v54 = *(void *)(v48 + *(int *)(v85 + 20));
        swift_bridgeObjectRetain();
        char v55 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v86 = v47;
        unint64_t v57 = sub_1BFEF2D8C(v51, v53);
        uint64_t v58 = v47[2];
        BOOL v59 = (v56 & 1) == 0;
        uint64_t v60 = v58 + v59;
        if (__OFADD__(v58, v59)) {
          goto LABEL_43;
        }
        char v61 = v56;
        if (v47[3] >= v60)
        {
          if (v55)
          {
            id v47 = v86;
            if ((v56 & 1) == 0) {
              goto LABEL_35;
            }
          }
          else
          {
            sub_1C106D770();
            id v47 = v86;
            if ((v61 & 1) == 0) {
              goto LABEL_35;
            }
          }
        }
        else
        {
          sub_1C10586B0(v60, v55);
          unint64_t v62 = sub_1BFEF2D8C(v51, v53);
          if ((v61 & 1) != (v63 & 1)) {
            goto LABEL_46;
          }
          unint64_t v57 = v62;
          id v47 = v86;
          if ((v61 & 1) == 0)
          {
LABEL_35:
            v47[(v57 >> 6) + 8] |= 1 << v57;
            int v64 = (uint64_t *)(v47[6] + 16 * v57);
            *int v64 = v51;
            v64[1] = v53;
            *(void *)(v47[7] + 8 * v57) = v54;
            uint64_t v65 = v47[2];
            BOOL v45 = __OFADD__(v65, 1);
            uint64_t v66 = v65 + 1;
            if (v45) {
              goto LABEL_45;
            }
            v47[2] = v66;
            swift_bridgeObjectRetain();
            goto LABEL_27;
          }
        }
        uint64_t v50 = v47[7];
        swift_bridgeObjectRelease();
        *(void *)(v50 + 8 * v57) = v54;
LABEL_27:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v48 = v82;
        sub_1C0951DD0(v82, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
        v49 += (uint64_t)v84;
        if (!--v83)
        {
          swift_bridgeObjectRelease();
          uint64_t v67 = v74;
          uint64_t v23 = v75;
          goto LABEL_41;
        }
      }
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  unint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t FeedItemAuxiliary.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedItemAuxiliary.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedItemAuxiliary.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedItemAuxiliary.slotIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for FeedItemAuxiliary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FeedItemAuxiliary(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FeedItemAuxiliary(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedItemAuxiliary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedItemAuxiliary()
{
  return &type metadata for FeedItemAuxiliary;
}

uint64_t dispatch thunk of FeedItemAuxiliaryFactoryType.createAuxiliary(auxiliary:context:parentIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

void *sub_1C0951008(void *a1)
{
  uint64_t v2 = type metadata accessor for FormatOption();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v97 = (void *)((char *)v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  uint64_t v96 = (uint64_t)v79 - v6;
  uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v90 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (long long *)((char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v95 = type metadata accessor for FeedItemAuxiliaryItem();
  uint64_t v10 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v12 = (char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0181BEC(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v79 - v18;
  if (a1[1])
  {
    uint64_t v94 = v10;
    uint64_t v80 = v3;
    size_t v98 = (uint64_t *)v17;
    uint64_t v86 = v16;
    uint64_t v20 = a1[2];
    uint64_t v88 = a1[3];
    unint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF5D6E8(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    long long v89 = xmmword_1C1529AE0;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v84 = inited;
    uint64_t v85 = inited + 32;
    sub_1BFF5D6E8(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v21);
    unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v100 = *(void *)(v14 + 72);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1527210;
    uint64_t v83 = v24;
    unint64_t v99 = v23;
    uint64_t v25 = (void *)(v24 + v23);
    uint64_t v26 = v20;
    sub_1BFF5D6E8(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v21);
    uint64_t v28 = v27;
    uint64_t v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = v89;
    uint64_t v81 = v29;
    uint64_t v82 = v29 + 32;
    int64_t v30 = *(void *)(v26 + 16);
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t v101 = v7;
    uint64_t v87 = v25;
    if (v30)
    {
      v79[2] = v28;
      uint64_t v120 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C05F62D0(0, v30, 0);
      unint64_t v32 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
      v79[1] = v26;
      uint64_t v33 = v26 + v32;
      uint64_t v34 = *(void *)(v94 + 72);
      uint64_t v93 = v9 + 1;
      uint64_t v94 = v34;
      id v92 = (void (**)(char *, void, uint64_t, uint64_t))(v90 + 56);
      long long v91 = xmmword_1C157D0F0;
      do
      {
        sub_1C0951D68(v33, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
        *((void *)&v112 + 1) = type metadata accessor for FeedItem(0);
        unint64_t v113 = sub_1C0951C08();
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v111);
        sub_1C0951D68((uint64_t)v12, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedItem);
        uint64_t v36 = *(void *)&v12[*(int *)(v95 + 24)];
        uint64_t v114 = *(void *)&v12[*(int *)(v95 + 20)];
        uint64_t v115 = v36;
        long long v116 = 0u;
        long long v117 = 0u;
        long long v118 = 0u;
        char v119 = 1;
        sub_1C0951D68((uint64_t)&v111, (uint64_t)&v108, (uint64_t (*)(void))sub_1C0951C60);
        if (*((void *)&v109 + 1))
        {
          sub_1C0445330((uint64_t)&v108, (uint64_t)&v102);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C0951DD0((uint64_t)&v111, (uint64_t (*)(void))sub_1C0951C60);
          uint64_t v37 = (long long *)((char *)v9 + *(int *)(v7 + 24));
          long long v38 = v107[0];
          v37[4] = v106;
          v37[5] = v38;
          *(_OWORD *)((char *)v37 + 89) = *(_OWORD *)((char *)v107 + 9);
          long long v39 = v103;
          *uint64_t v37 = v102;
          v37[1] = v39;
          long long v40 = v105;
          v37[2] = v104;
          v37[3] = v40;
          uint64_t v41 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v37, 0, 1, v41);
          *id v9 = v91;
          char v42 = v93;
          *uint64_t v93 = 0;
          v42[1] = 0;
          long long v43 = (char *)v9 + *(int *)(v7 + 28);
          *(void *)long long v43 = 0;
          *((void *)v43 + 1) = 0;
          v43[16] = -1;
          sub_1C044538C((uint64_t)&v108);
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C0951DD0((uint64_t)&v111, (uint64_t (*)(void))sub_1C0951C60);
          uint64_t v44 = (char *)v9 + *(int *)(v7 + 24);
          uint64_t v45 = type metadata accessor for FormatInspectionItem.Value(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
          *id v9 = v91;
          uint64_t v46 = v93;
          *uint64_t v93 = 0;
          v46[1] = 0;
          id v47 = (char *)v9 + *(int *)(v7 + 28);
          *(void *)id v47 = 0;
          *((void *)v47 + 1) = 0;
          v47[16] = -1;
        }
        sub_1C0951CB8((uint64_t)v9, (uint64_t)v19, type metadata accessor for FormatInspectionItem);
        (*v92)(v19, 0, 1, v7);
        sub_1C0951DD0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
        uint64_t v31 = v120;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F62D0(0, *(void *)(v31 + 16) + 1, 1);
          uint64_t v31 = v120;
        }
        unint64_t v49 = *(void *)(v31 + 16);
        unint64_t v48 = *(void *)(v31 + 24);
        if (v49 >= v48 >> 1)
        {
          sub_1C05F62D0(v48 > 1, v49 + 1, 1);
          uint64_t v31 = v120;
        }
        *(void *)(v31 + 16) = v49 + 1;
        sub_1C0951CB8((uint64_t)v19, v31 + v99 + v49 * v100, (uint64_t (*)(void))sub_1C0181BEC);
        v33 += v94;
        --v30;
        uint64_t v7 = v101;
      }
      while (v30);
      swift_bridgeObjectRelease();
      uint64_t v25 = v87;
    }
    sub_1C09BCFA4(0x736D657449, 0xE500000000000000, 0, 0, v31, &v102);
    swift_bridgeObjectRelease();
    uint64_t v50 = v81;
    *(void *)(v81 + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v50 + 64) = &off_1F1BDEC90;
    uint64_t v51 = swift_allocObject();
    *(void *)(v50 + 32) = v51;
    *(void *)(v51 + 48) = v104;
    long long v52 = v103;
    *(_OWORD *)(v51 + 16) = v102;
    *(_OWORD *)(v51 + 32) = v52;
    uint64_t v53 = sub_1C0233FC8(v50);
    swift_setDeallocating();
    unint64_t v95 = sub_1C01004D8();
    swift_arrayDestroy();
    uint64_t v54 = sub_1C131B79C(v53);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x736D657449, 0xE500000000000000, (uint64_t)v54, 0, 0, v25);
    char v55 = *(void (**)(void, void, void, void))(v90 + 56);
    v55(v25, 0, 1, v101);
    uint64_t v56 = swift_initStackObject();
    *(_OWORD *)(v56 + 16) = v89;
    uint64_t v93 = (void *)(v56 + 32);
    uint64_t v94 = v56;
    uint64_t v57 = v88;
    int64_t v58 = *(void *)(v88 + 16);
    uint64_t v59 = MEMORY[0x1E4FBC860];
    if (v58)
    {
      *(void *)&long long v111 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C05F62D0(0, v58, 0);
      uint64_t v60 = v57 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
      uint64_t v61 = *(void *)(v80 + 72);
      unint64_t v62 = v98;
      do
      {
        uint64_t v63 = v96;
        sub_1C0951D68(v60, v96, (uint64_t (*)(void))type metadata accessor for FormatOption);
        int v64 = v97;
        sub_1C0951D68(v63, (uint64_t)v97, (uint64_t (*)(void))type metadata accessor for FormatOption);
        sub_1C0AF5D04(v64, v62);
        v55(v62, 0, 1, v101);
        sub_1C0951DD0(v63, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v59 = v111;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F62D0(0, *(void *)(v59 + 16) + 1, 1);
          uint64_t v59 = v111;
        }
        unint64_t v66 = *(void *)(v59 + 16);
        unint64_t v65 = *(void *)(v59 + 24);
        if (v66 >= v65 >> 1)
        {
          sub_1C05F62D0(v65 > 1, v66 + 1, 1);
          uint64_t v59 = v111;
        }
        *(void *)(v59 + 16) = v66 + 1;
        unint64_t v62 = v98;
        sub_1C0951CB8((uint64_t)v98, v59 + v99 + v66 * v100, (uint64_t (*)(void))sub_1C0181BEC);
        v60 += v61;
        --v58;
      }
      while (v58);
      swift_bridgeObjectRelease();
      uint64_t v25 = v87;
    }
    uint64_t v67 = (void *)((char *)v25 + v100);
    sub_1C09BCFA4(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v59, &v108);
    swift_bridgeObjectRelease();
    uint64_t v68 = v94;
    *(void *)(v94 + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v68 + 64) = &off_1F1BDEC90;
    uint64_t v69 = swift_allocObject();
    *(void *)(v68 + 32) = v69;
    *(void *)(v69 + 48) = v110;
    long long v70 = v109;
    *(_OWORD *)(v69 + 16) = v108;
    *(_OWORD *)(v69 + 32) = v70;
    uint64_t v71 = sub_1C0233FC8(v68);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v72 = sub_1C131B79C(v71);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x736E6F6974704FLL, 0xE700000000000000, (uint64_t)v72, 0, 0, v67);
    v55(v67, 0, 1, v101);
    sub_1C09BCFA4(0x7261696C69787541, 0xE900000000000079, 0, 0, v83, &v111);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v73 = v84;
    *(void *)(v84 + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v73 + 64) = &off_1F1BDEC90;
    uint64_t v74 = swift_allocObject();
    *(void *)(v73 + 32) = v74;
    *(void *)(v74 + 48) = v113;
    long long v75 = v112;
    *(_OWORD *)(v74 + 16) = v111;
    *(_OWORD *)(v74 + 32) = v75;
    uint64_t v76 = sub_1C131B79C(v73);
    swift_setDeallocating();
    sub_1C01004A4(0);
    swift_arrayDestroy();
    return v76;
  }
  else
  {
    uint64_t v78 = MEMORY[0x1E4FBC860];
    return sub_1C131B79C(v78);
  }
}

unint64_t sub_1C0951C08()
{
  unint64_t result = qword_1EB87AF60;
  if (!qword_1EB87AF60)
  {
    type metadata accessor for FeedItem(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87AF60);
  }
  return result;
}

void sub_1C0951C60()
{
  if (!qword_1EA1ACFC0)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ACFC0);
    }
  }
}

uint64_t sub_1C0951CB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0951D20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0951D68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0951DD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0951E30(void *a1)
{
  sub_1C095245C(0, &qword_1EA1A12A0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = v1[2];
  uint64_t v17 = v1[3];
  uint64_t v18 = v8;
  uint64_t v9 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = v9;
  uint64_t v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0952408();
  sub_1C1520F0C();
  char v24 = 0;
  uint64_t v10 = v19;
  sub_1C15207CC();
  if (!v10)
  {
    uint64_t v11 = v14;
    char v23 = 1;
    sub_1C15207CC();
    uint64_t v20 = v11;
    char v22 = 2;
    sub_1C01CBAF4();
    sub_1C01CBC04(&qword_1EA197EC0, (void (*)(void))sub_1C01CBC70);
    sub_1C152080C();
    char v21 = 3;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0952078@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C095245C(0, &qword_1EB86B808, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0952408();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v30 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152069C();
  uint64_t v26 = v14;
  uint64_t v24 = v13;
  sub_1C01CBAF4();
  char v29 = 2;
  sub_1C01CBC04((unint64_t *)&unk_1EB86B2F0, (void (*)(void))sub_1C01CBB4C);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  char v28 = 3;
  uint64_t v23 = v27;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C152060C();
  uint64_t v18 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v22 = v15;
  v19(v9, v6);
  swift_bridgeObjectRetain();
  uint64_t v20 = v26;
  *(void *)a2 = v25;
  *(void *)(a2 + 8) = v12;
  uint64_t v21 = v23;
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v22;
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v21;
  *(unsigned char *)(a2 + 56) = 7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C0952408()
{
  unint64_t result = qword_1EB86AC18;
  if (!qword_1EB86AC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AC18);
  }
  return result;
}

void sub_1C095245C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0952408();
    unint64_t v7 = a3(a1, &type metadata for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C095258CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseKeyPlayerItem()
{
  return &type metadata for SportsDataVisualizationResponseKeyPlayerItem;
}

uint64_t sub_1C09525D4()
{
  uint64_t result = 0x6E6F6E6143636D75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6449746E657665;
      break;
    case 2:
      uint64_t result = 0x53617461446C7275;
      break;
    case 3:
      uint64_t result = 0x615465756761656CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0952684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C095285C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C09526AC(uint64_t a1)
{
  unint64_t v2 = sub_1C0952408();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09526E8(uint64_t a1)
{
  unint64_t v2 = sub_1C0952408();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0952724@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0952078(a1, a2);
}

uint64_t sub_1C095273C(void *a1)
{
  return sub_1C0951E30(a1);
}

unint64_t sub_1C0952758()
{
  unint64_t result = qword_1EA1A12A8;
  if (!qword_1EA1A12A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A12A8);
  }
  return result;
}

unint64_t sub_1C09527B0()
{
  unint64_t result = qword_1EB86AC28;
  if (!qword_1EB86AC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AC28);
  }
  return result;
}

unint64_t sub_1C0952808()
{
  unint64_t result = qword_1EB86AC20;
  if (!qword_1EB86AC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AC20);
  }
  return result;
}

uint64_t sub_1C095285C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6E6143636D75 && a2 == 0xEE0064496C616369;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E657665 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53617461446C7275 && a2 == 0xEE0073656372756FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x615465756761656CLL && a2 == 0xEB00000000644967)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

id EndpointConnectionError.underlyingError.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void *EndpointConnectionError.httpResponse.getter()
{
  id v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

uint64_t EndpointConnectionError.init(underlyingError:httpResponse:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t EndpointConnectionResponse.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1C00C2AC0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

void *EndpointConnectionResponse.response.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t EndpointConnectionResponse.init(data:response:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t FCEndpointConnectionType.performHTTPRequest(with:method:data:contentType:priority:requiresMescalSigning:networkEventType:callbackQueue:)()
{
  return FCEndpointConnectionType.performHTTPRequest(with:valuesByHTTPHeaderField:method:data:contentType:priority:networkEventType:requiresMescalSigning:callbackQueue:)();
}

uint64_t FCEndpointConnectionType.performHTTPRequest(with:valuesByHTTPHeaderField:method:data:contentType:priority:networkEventType:requiresMescalSigning:callbackQueue:)()
{
  return sub_1C0952D04();
}

void sub_1C0952BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1C0952BF0(uint64_t a1, void *a2, void *a3, void *a4)
{
  char v6 = a2;
  unint64_t v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    char v6 = (void *)sub_1C151606C();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1BFE95878((uint64_t)v6, v10);
  return swift_release();
}

uint64_t FCEndpointConnectionType.performAuthenticatedHTTPRequest(with:valuesByHTTPHeaderField:method:data:contentType:priority:networkEventType:reauthenticateIfNeeded:callbackQueue:)()
{
  return sub_1C0952D04();
}

uint64_t sub_1C0952D04()
{
  return sub_1C151911C();
}

void sub_1C0952DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, float a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,SEL *a22)
{
  uint64_t v27 = (void *)sub_1C1515E9C();
  if (a8)
  {
    sub_1C095356C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    char v28 = (void *)sub_1C151E32C();
  }
  else
  {
    char v28 = 0;
  }
  uint64_t v37 = (void *)sub_1C151E5EC();
  if (a12 >> 60 == 15) {
    char v29 = 0;
  }
  else {
    char v29 = (void *)sub_1C151605C();
  }
  if (a14) {
    char v30 = (void *)sub_1C151E5EC();
  }
  else {
    char v30 = 0;
  }
  char v31 = (void *)swift_allocObject();
  v31[2] = a3;
  v31[3] = a4;
  v31[4] = a1;
  v31[5] = a2;
  aBlock[4] = a20;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0952BF0;
  aBlock[3] = a21;
  unint64_t v32 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  LODWORD(v34) = a16;
  *(float *)&double v33 = a6;
  objc_msgSend(a5, *a22, v27, v28, v37, v29, v30, a15 & 1, v33, v34, a17, v32);
  _Block_release(v32);
}

void sub_1C0952FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1C0953004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, SEL *a8)
{
  sub_1C0952DA4(a1, a2, a3, a4, *(void **)(v8 + 24), *(float *)(v8 + 96), *(void *)(v8 + 32), *(void *)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void *)(v8 + 64), *(void *)(v8 + 72), *(void *)(v8 + 80), *(void *)(v8 + 88), *(unsigned char *)(v8 + 100), *(_DWORD *)(v8 + 104), *(void *)(v8 + 112), *(void *)(v8 + 16), a5,
    a6,
    a7,
    a8);
}

void *initializeBufferWithCopyOfBuffer for EndpointConnectionError(void *a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  id v5 = *(id *)a2;
  char v6 = *(void **)(a2 + 8);
  *a1 = v4;
  a1[1] = v6;
  id v7 = v6;
  return a1;
}

void destroy for EndpointConnectionError(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for EndpointConnectionError(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  id v5 = *(id *)a2;
  char v6 = *(void **)a1;
  *(void *)a1 = v4;

  id v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for EndpointConnectionError(uint64_t a1, _OWORD *a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for EndpointConnectionError()
{
  return &type metadata for EndpointConnectionError;
}

void destroy for EndpointConnectionResponse(uint64_t *a1)
{
  unint64_t v2 = a1[1];
  if (v2 >> 60 != 15) {
    sub_1BFE95664(*a1, v2);
  }
  int v3 = (void *)a1[2];
}

uint64_t _s8NewsFeed26EndpointConnectionResponseVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v5 = *a2;
    sub_1BFE95820(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }
  char v6 = (void *)a2[2];
  *(void *)(a1 + 16) = v6;
  id v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for EndpointConnectionResponse(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *a2;
      sub_1BFE95820(*a2, a2[1]);
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_1BFE95664(v7, v8);
      goto LABEL_8;
    }
    sub_1C01D91B8((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v5 = *a2;
  sub_1BFE95820(*a2, a2[1]);
  *a1 = v5;
  a1[1] = v4;
LABEL_8:
  id v9 = (void *)a1[2];
  unint64_t v10 = (void *)a2[2];
  a1[2] = (uint64_t)v10;
  id v11 = v10;

  return a1;
}

uint64_t *assignWithTake for EndpointConnectionResponse(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_1BFE95664(v6, v4);
      goto LABEL_6;
    }
    sub_1C01D91B8((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  return a1;
}

uint64_t getEnumTagSinglePayload for EndpointConnectionResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EndpointConnectionResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EndpointConnectionResponse()
{
  return &type metadata for EndpointConnectionResponse;
}

void sub_1C0953458(uint64_t a1, unint64_t a2, void *a3, void *a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(void *))
{
  if (a4)
  {
    sub_1C09535B8();
    uint64_t v10 = swift_allocError();
    *id v11 = a4;
    v11[1] = a3;
    id v12 = a3;
    id v13 = a4;
    a5(v10);
    uint64_t v14 = (void *)v10;
  }
  else
  {
    v19[0] = a1;
    v19[1] = a2;
    v19[2] = a3;
    sub_1C00C2AC0(a1, a2);
    id v18 = a3;
    a7(v19);
    sub_1BFE95878(a1, a2);
    uint64_t v14 = v18;
  }
}

void sub_1C095356C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C09535B8()
{
  unint64_t result = qword_1EA1A12B0;
  if (!qword_1EA1A12B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A12B0);
  }
  return result;
}

void sub_1C0953610(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  sub_1C0953458(a1, a2, a3, a4, *(void (**)(uint64_t))(v4 + 16), *(void *)(v4 + 24), *(void (**)(void *))(v4 + 32));
}

void static FormatCodingButtLineCapStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static FormatCodingMiddleBorderInsetStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t static FormatCodingAllBorderEdgeStrategy.defaultValue.getter()
{
  return sub_1C00B7DF8((uint64_t)&unk_1F1B88F38);
}

BOOL static FormatCodingAllBorderEdgeStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  uint64_t v2 = sub_1C00B7DF8((uint64_t)&unk_1F1B88F60);
  LOBYTE(a1) = sub_1BFDF73D8(a1, v2);
  swift_bridgeObjectRelease();
  return (a1 & 1) == 0;
}

uint64_t static FormatCodingAllBorderEdgeStrategy.encode(wrappedValue:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1BFDF7818(v0);
  swift_bridgeObjectRelease();
  uint64_t v3 = v1;
  swift_retain();
  sub_1BFDF78C0(&v3);
  swift_release();
  return v3;
}

uint64_t static FormatCodingAllBorderEdgeStrategy.decode(rawValue:)(uint64_t a1)
{
  return sub_1BFDFBFE4(a1);
}

uint64_t sub_1C0953758@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C00B7DF8((uint64_t)&unk_1F1B65C88);
  *a1 = result;
  return result;
}

BOOL sub_1C0953788(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = sub_1C00B7DF8((uint64_t)&unk_1F1B64390);
  LOBYTE(v1) = sub_1BFDF73D8(v1, v2);
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

uint64_t sub_1C09537D8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1BFDF7818(v2);
  swift_bridgeObjectRelease();
  uint64_t v5 = v3;
  swift_retain();
  sub_1BFDF78C0(&v5);
  uint64_t result = swift_release();
  *a1 = v5;
  return result;
}

uint64_t sub_1C095385C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFDFBFE4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C0953930(unsigned char *__src, unsigned char *a2, unint64_t a3, unsigned char *__dst)
{
  uint64_t v34 = __src;
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  double v33 = __dst;
  if (a2 - __src < (uint64_t)(a3 - (void)a2))
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      if (__dst != __src || a2 <= __dst) {
        memmove(__dst, __src, v8);
      }
      uint64_t v10 = &v4[v8];
      unint64_t v32 = &v4[v8];
      if (v6 != __src && (unint64_t)v6 < a3)
      {
        id v11 = __src;
        while (2)
        {
          unint64_t v12 = 0xE300000000000000;
          uint64_t v13 = 7368564;
          switch(*v6)
          {
            case 1:
              unint64_t v12 = 0xE700000000000000;
              uint64_t v13 = 0x676E696461656CLL;
              break;
            case 2:
              unint64_t v12 = 0xE800000000000000;
              uint64_t v13 = 0x676E696C69617274;
              break;
            case 3:
              unint64_t v12 = 0xE600000000000000;
              uint64_t v13 = 0x6D6F74746F62;
              break;
            case 4:
              uint64_t v13 = 7105633;
              break;
            default:
              break;
          }
          unint64_t v14 = 0xE300000000000000;
          uint64_t v15 = 7368564;
          switch(*v4)
          {
            case 1:
              unint64_t v14 = 0xE700000000000000;
              if (v13 == 0x676E696461656CLL) {
                goto LABEL_21;
              }
              goto LABEL_24;
            case 2:
              unint64_t v14 = 0xE800000000000000;
              uint64_t v15 = 0x676E696C69617274;
              goto LABEL_20;
            case 3:
              unint64_t v14 = 0xE600000000000000;
              if (v13 != 0x6D6F74746F62) {
                goto LABEL_24;
              }
              goto LABEL_21;
            case 4:
              if (v13 != 7105633) {
                goto LABEL_24;
              }
              goto LABEL_21;
            default:
LABEL_20:
              if (v13 != v15) {
                goto LABEL_24;
              }
LABEL_21:
              if (v12 == v14)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
LABEL_24:
                char v16 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v16)
                {
                  uint64_t v17 = v6 + 1;
                  if (v11 < v6 || v11 >= v17 || v11 != v6) {
                    *id v11 = *v6;
                  }
                  goto LABEL_32;
                }
              }
              if (v11 != v4) {
                *id v11 = *v4;
              }
              double v33 = ++v4;
              uint64_t v17 = v6;
LABEL_32:
              ++v11;
              if (v4 < v10)
              {
                uint64_t v6 = v17;
                if ((unint64_t)v17 < a3) {
                  continue;
                }
              }
              uint64_t v34 = v11;
              break;
          }
          break;
        }
      }
      goto LABEL_69;
    }
LABEL_70:
    sub_1C152052C();
    __break(1u);
    JUMPOUT(0x1C0953E14);
  }
  if ((v9 & 0x8000000000000000) != 0) {
    goto LABEL_70;
  }
  if (__dst != a2 || a3 <= (unint64_t)__dst) {
    memmove(__dst, a2, a3 - (void)a2);
  }
  id v18 = &v4[v9];
  char v31 = __src;
  unint64_t v32 = &v4[v9];
  uint64_t v34 = v6;
  if (__src < v6 && (unsigned char *)a3 != v6)
  {
    uint64_t v19 = (unsigned char *)(a3 - 1);
    uint64_t v20 = v6;
    char v30 = v4;
    while (2)
    {
      uint64_t v21 = v19 + 1;
      unsigned int v23 = *--v20;
      uint64_t v22 = v23;
      unint64_t v24 = 0xE300000000000000;
      uint64_t v25 = 7368564;
      switch(*(v18 - 1))
      {
        case 1:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x676E696461656CLL;
          break;
        case 2:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x676E696C69617274;
          break;
        case 3:
          unint64_t v24 = 0xE600000000000000;
          uint64_t v25 = 0x6D6F74746F62;
          break;
        case 4:
          uint64_t v25 = 7105633;
          break;
        default:
          break;
      }
      unint64_t v26 = 0xE300000000000000;
      uint64_t v27 = 7368564;
      switch(v22)
      {
        case 1:
          unint64_t v26 = 0xE700000000000000;
          if (v25 == 0x676E696461656CLL) {
            goto LABEL_54;
          }
          goto LABEL_57;
        case 2:
          unint64_t v26 = 0xE800000000000000;
          uint64_t v27 = 0x676E696C69617274;
          goto LABEL_53;
        case 3:
          unint64_t v26 = 0xE600000000000000;
          if (v25 != 0x6D6F74746F62) {
            goto LABEL_57;
          }
          goto LABEL_54;
        case 4:
          if (v25 != 7105633) {
            goto LABEL_57;
          }
          goto LABEL_54;
        default:
LABEL_53:
          if (v25 != v27) {
            goto LABEL_57;
          }
LABEL_54:
          if (v24 == v26)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
LABEL_57:
            char v28 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v28)
            {
              if (v21 != v6 || v19 >= v6) {
                *uint64_t v19 = *v20;
              }
              uint64_t v34 = v20;
              goto LABEL_67;
            }
          }
          unint64_t v32 = v18 - 1;
          if (v21 < v18 || v19 >= v18 || v21 != v18) {
            *uint64_t v19 = *(v18 - 1);
          }
          uint64_t v20 = v6;
          --v18;
LABEL_67:
          if (v20 <= v31) {
            break;
          }
          --v19;
          uint64_t v6 = v20;
          if (v18 <= v30) {
            break;
          }
          continue;
      }
      break;
    }
  }
LABEL_69:
  sub_1C063502C(&v34, &v33, &v32);
  return 1;
}

uint64_t _s8NewsFeed31FormatCodingButtLineCapStrategyV12shouldEncode12wrappedValueSbAA0cfG0O_tFZ_0(unsigned char *a1)
{
  if (*a1)
  {
    char v1 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v2 = v1 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t _s8NewsFeed37FormatCodingMiddleBorderInsetStrategyV12shouldEncode12wrappedValueSbAA0cfG0O_tFZ_0(unsigned char *a1)
{
  if (*a1 && *a1 == 1)
  {
    swift_bridgeObjectRelease();
    char v1 = 0;
  }
  else
  {
    char v2 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v1 = v2 ^ 1;
  }
  return v1 & 1;
}

unint64_t sub_1C0953F80(uint64_t a1)
{
  unint64_t result = sub_1C0953FA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0953FA8()
{
  unint64_t result = qword_1EA1A12B8;
  if (!qword_1EA1A12B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A12B8);
  }
  return result;
}

unint64_t sub_1C0954004(uint64_t a1)
{
  unint64_t result = sub_1C095402C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C095402C()
{
  unint64_t result = qword_1EA1A12C0;
  if (!qword_1EA1A12C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A12C0);
  }
  return result;
}

unint64_t sub_1C0954088(uint64_t a1)
{
  unint64_t result = sub_1C09540B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C09540B0()
{
  unint64_t result = qword_1EA1A12C8;
  if (!qword_1EA1A12C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A12C8);
  }
  return result;
}

uint64_t sub_1C0954104()
{
  return sub_1C09542CC((unint64_t *)&qword_1EB87A008, (void (*)(uint64_t))sub_1C0954160, (void (*)(void))sub_1C007F27C);
}

void sub_1C0954160()
{
  if (!qword_1EB87A000)
  {
    sub_1BFDFD140();
    unint64_t v0 = sub_1C151F04C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A000);
    }
  }
}

uint64_t sub_1C09541BC()
{
  return sub_1C09542CC((unint64_t *)&qword_1EB860C98, (void (*)(uint64_t))sub_1C0954218, (void (*)(void))sub_1C007F324);
}

void sub_1C0954218()
{
  if (!qword_1EB860C90)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB860C90);
    }
  }
}

uint64_t sub_1C0954270()
{
  return sub_1C09542CC((unint64_t *)&unk_1EB85C4E0, (void (*)(uint64_t))sub_1C0954160, (void (*)(void))sub_1C007F324);
}

uint64_t sub_1C09542CC(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingButtLineCapStrategy()
{
  return &type metadata for FormatCodingButtLineCapStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingMiddleBorderInsetStrategy()
{
  return &type metadata for FormatCodingMiddleBorderInsetStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingAllBorderEdgeStrategy()
{
  return &type metadata for FormatCodingAllBorderEdgeStrategy;
}

NewsFeed::PuzzlePublishDateFormat_optional __swiftcall PuzzlePublishDateFormat.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

void *static PuzzlePublishDateFormat.allCases.getter()
{
  return &unk_1F1B88F88;
}

uint64_t PuzzlePublishDateFormat.rawValue.getter()
{
  uint64_t v1 = 0x6D756964656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 1735290732;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74726F6873;
  }
}

uint64_t sub_1C0954420(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1481C40(*a1, *a2);
}

uint64_t sub_1C095442C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09544C0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0954540()
{
  return sub_1C1520E0C();
}

NewsFeed::PuzzlePublishDateFormat_optional sub_1C09545D0(Swift::String *a1)
{
  return PuzzlePublishDateFormat.init(rawValue:)(*a1);
}

void sub_1C09545DC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x6D756964656DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1735290732;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x74726F6873;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_1C095462C(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B5C8;
}

uint64_t FCPuzzleProviding.traits.getter@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_puzzleType);
  swift_getObjectType();
  FCPuzzleTypeProviding.puzzleKind.getter();
  uint64_t result = swift_unknownObjectRelease();
  *a1 = qword_1C157D5C8[v5];
  return result;
}

Swift::String_optional __swiftcall FCPuzzleProviding.publishDateString(format:)(NewsFeed::PuzzlePublishDateFormat format)
{
  int v2 = v1;
  sub_1C0954C18(0, (unint64_t *)&qword_1EB871190, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v40 - v4;
  uint64_t v6 = sub_1C15164AC();
  uint64_t v41 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  size_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0954C18(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v40 - v10;
  uint64_t v12 = sub_1C151631C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v17 = MEMORY[0x1F4188790](v16).n128_u64[0];
  uint64_t v19 = (char *)&v40 - v18;
  id v20 = objc_msgSend(v2, sel_publishDate, v17);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_8;
  }
  uint64_t v21 = v20;
  long long v40 = v19;
  sub_1C15162BC();

  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v22(v11, v15, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_8:
    sub_1BFF97BE4((uint64_t)v11);
    uint64_t v35 = 0;
    id v28 = 0;
    goto LABEL_11;
  }
  v22(v40, v11, v12);
  swift_bridgeObjectRetain();
  sub_1C151644C();
  sub_1C151637C();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v6);
  sub_1C151667C();
  unsigned int v23 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  unint64_t v24 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_1C15166BC();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v5, 1, v25) != 1)
  {
    uint64_t v27 = (void *)sub_1C151669C();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v25);
  }
  id v28 = objc_msgSend(self, sel_dateFormatterWithFormat_localeIdentifier_timezone_forReuse_, v23, v24, v27, 1);

  if (v28)
  {
    id v29 = v28;
    char v30 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v29, sel_setLocalizedDateFormatFromTemplate_, v30);

    id v31 = v29;
    unint64_t v32 = v40;
    double v33 = (void *)sub_1C151621C();
    id v34 = objc_msgSend(v31, sel_stringFromDate_, v33);

    uint64_t v35 = sub_1C151E62C();
    id v28 = v36;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = 0;
    unint64_t v32 = v40;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_11:
  uint64_t v37 = v35;
  long long v38 = v28;
  result.value._object = v38;
  result.value._countAndFlagsBits = v37;
  return result;
}

void sub_1C0954C18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C0954C70()
{
  unint64_t result = qword_1EA1A12D0;
  if (!qword_1EA1A12D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A12D0);
  }
  return result;
}

unint64_t sub_1C0954CC8()
{
  unint64_t result = qword_1EA1A12D8;
  if (!qword_1EA1A12D8)
  {
    sub_1C0954D20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A12D8);
  }
  return result;
}

void sub_1C0954D20()
{
  if (!qword_1EA1A12E0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A12E0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PuzzlePublishDateFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0954E44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzlePublishDateFormat()
{
  return &type metadata for PuzzlePublishDateFormat;
}

uint64_t FeedGroupConfigSidecarConfig.placements.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::FeedGroupConfigSidecarConfig __swiftcall FeedGroupConfigSidecarConfig.init(placements:)(NewsFeed::FeedGroupConfigSidecarConfig placements)
{
  v1->placements._rawValue = placements.placements._rawValue;
  return placements;
}

uint64_t sub_1C0954E8C()
{
  return 0x6E656D6563616C70;
}

uint64_t sub_1C0954EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E656D6563616C70 && a2 == 0xEA00000000007374)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0954F4C(uint64_t a1)
{
  unint64_t v2 = sub_1C0955158();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0954F88(uint64_t a1)
{
  unint64_t v2 = sub_1C0955158();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupConfigSidecarConfig.encode(to:)(void *a1)
{
  sub_1C0955428(0, &qword_1EB86B868, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0955158();
  sub_1C1520F0C();
  v10[1] = v8;
  sub_1C09551AC();
  sub_1C095548C(&qword_1EB86B060, (void (*)(void))sub_1C0955204);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0955158()
{
  unint64_t result = qword_1EB8655A0;
  if (!qword_1EB8655A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8655A0);
  }
  return result;
}

void sub_1C09551AC()
{
  if (!qword_1EB86B058)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B058);
    }
  }
}

unint64_t sub_1C0955204()
{
  unint64_t result = qword_1EB8655E8;
  if (!qword_1EB8655E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8655E8);
  }
  return result;
}

uint64_t FeedGroupConfigSidecarConfig.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0955428(0, &qword_1EB86B638, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0955158();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1C09551AC();
    sub_1C095548C(&qword_1EB86B068, (void (*)(void))sub_1C09554F8);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C0955428(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0955158();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupConfigSidecarConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C095548C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C09551AC();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C09554F8()
{
  unint64_t result = qword_1EB8655F0;
  if (!qword_1EB8655F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8655F0);
  }
  return result;
}

uint64_t sub_1C095554C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FeedGroupConfigSidecarConfig.init(from:)(a1, a2);
}

uint64_t sub_1C0955564(void *a1)
{
  return FeedGroupConfigSidecarConfig.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FeedGroupConfigSidecarConfig.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0955618);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupConfigSidecarConfig.CodingKeys()
{
  return &type metadata for FeedGroupConfigSidecarConfig.CodingKeys;
}

unint64_t sub_1C0955654()
{
  unint64_t result = qword_1EA1A12E8;
  if (!qword_1EA1A12E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A12E8);
  }
  return result;
}

unint64_t sub_1C09556AC()
{
  unint64_t result = qword_1EB8655B0;
  if (!qword_1EB8655B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8655B0);
  }
  return result;
}

unint64_t sub_1C0955704()
{
  unint64_t result = qword_1EB8655A8;
  if (!qword_1EB8655A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8655A8);
  }
  return result;
}

double sub_1C0955758()
{
  uint64_t v1 = type metadata accessor for DebugFormatLayoutOrderingModel();
  MEMORY[0x1F4188790](v1);
  int v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0955AA4(v0, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v4 = *((_OWORD *)v3 + 5);
    void v12[4] = *((_OWORD *)v3 + 4);
    v12[5] = v4;
    long long v5 = *((_OWORD *)v3 + 7);
    v12[6] = *((_OWORD *)v3 + 6);
    v12[7] = v5;
    long long v6 = *((_OWORD *)v3 + 1);
    v12[0] = *(_OWORD *)v3;
    v12[1] = v6;
    long long v7 = *((_OWORD *)v3 + 3);
    void v12[2] = *((_OWORD *)v3 + 2);
    v12[3] = v7;
    uint64_t v8 = *((void *)v3 + 16);
    sub_1C0955B08((uint64_t)v12);
    double v9 = *(double *)(*(void *)(v8
                               + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                   + 16);
    swift_release();
  }
  else
  {
    sub_1C0955B70();
    double v9 = *(double *)(*(void *)(*(void *)&v3[*(int *)(v10 + 48)]
                               + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                   + 16);
    swift_release();
    sub_1C0955EC8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
  }
  return v9;
}

BOOL sub_1C09558A8()
{
  double v0 = sub_1C0955758();
  double v2 = v1;
  BOOL v3 = v0 <= sub_1C0955758();
  if (v2 == v4) {
    return v3;
  }
  else {
    return v2 < v4;
  }
}

BOOL sub_1C09558FC()
{
  double v0 = sub_1C0955758();
  double v2 = v1;
  BOOL v3 = v0 > sub_1C0955758();
  if (v2 == v4) {
    return v3;
  }
  else {
    return v2 >= v4;
  }
}

BOOL sub_1C0955950()
{
  double v0 = sub_1C0955758();
  double v2 = v1;
  BOOL v3 = v0 > sub_1C0955758();
  if (v2 == v4) {
    return v3;
  }
  else {
    return v2 >= v4;
  }
}

BOOL sub_1C09559A4()
{
  double v0 = sub_1C0955758();
  double v2 = v1;
  BOOL v3 = v0 <= sub_1C0955758();
  if (v2 == v4) {
    return v3;
  }
  else {
    return v2 < v4;
  }
}

unint64_t sub_1C0955A00()
{
  unint64_t result = qword_1EA1A12F0;
  if (!qword_1EA1A12F0)
  {
    type metadata accessor for DebugFormatLayoutOrderingModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A12F0);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatLayoutOrderingModel()
{
  uint64_t result = qword_1EA1A1308;
  if (!qword_1EA1A1308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0955AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatLayoutOrderingModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0955B08(uint64_t a1)
{
  return a1;
}

void sub_1C0955B70()
{
  if (!qword_1EA1A12F8)
  {
    type metadata accessor for FormatItemNodeLayoutContext();
    type metadata accessor for FormatItemNodeDataLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A12F8);
    }
  }
}

uint64_t sub_1C0955BE4(uint64_t a1, uint64_t a2)
{
  sub_1C0955E64();
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t)&v6[*(int *)(v7 + 56)];
  sub_1C0955AA4(a1, (uint64_t)v6);
  sub_1C0955AA4(a2, v8);
  type metadata accessor for DebugFormatLayoutOrderingModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v9 = *((_OWORD *)v6 + 5);
    v31[4] = *((_OWORD *)v6 + 4);
    v31[5] = v9;
    long long v10 = *((_OWORD *)v6 + 7);
    v31[6] = *((_OWORD *)v6 + 6);
    v31[7] = v10;
    long long v11 = *((_OWORD *)v6 + 1);
    v31[0] = *(_OWORD *)v6;
    v31[1] = v11;
    long long v12 = *((_OWORD *)v6 + 3);
    v31[2] = *((_OWORD *)v6 + 2);
    v31[3] = v12;
    uint64_t v13 = *((void *)v6 + 16);
    sub_1C0955B08((uint64_t)v31);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v14 = *(_OWORD *)(v8 + 80);
      v30[4] = *(_OWORD *)(v8 + 64);
      v30[5] = v14;
      long long v15 = *(_OWORD *)(v8 + 112);
      v30[6] = *(_OWORD *)(v8 + 96);
      v30[7] = v15;
      long long v16 = *(_OWORD *)(v8 + 16);
      v30[0] = *(_OWORD *)v8;
      v30[1] = v16;
      long long v17 = *(_OWORD *)(v8 + 48);
      v30[2] = *(_OWORD *)(v8 + 32);
      v30[3] = v17;
      uint64_t v18 = *(void *)(v8 + 128);
      sub_1C0955B08((uint64_t)v30);
      uint64_t v19 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
      uint64_t v20 = *(void *)(v18 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
      if (*(void *)(v19 + 48) == *(void *)(v20 + 48) && *(void *)(v19 + 56) == *(void *)(v20 + 56)) {
        char v22 = 1;
      }
      else {
        char v22 = sub_1C1520A9C();
      }
      swift_release();
      swift_release();
      return v22 & 1;
    }
    swift_release();
LABEL_11:
    sub_1C0955EC8(v8, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
    char v22 = 0;
    return v22 & 1;
  }
  sub_1C0955B70();
  uint64_t v24 = *(int *)(v23 + 48);
  uint64_t v25 = *(void *)&v6[v24];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    sub_1C0955EC8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
    goto LABEL_11;
  }
  uint64_t v26 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  uint64_t v27 = *(void *)(*(void *)(v8 + v24)
                  + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  if (*(void *)(v26 + 48) == *(void *)(v27 + 48) && *(void *)(v26 + 56) == *(void *)(v27 + 56)) {
    char v22 = 1;
  }
  else {
    char v22 = sub_1C1520A9C();
  }
  swift_release();
  swift_release();
  sub_1C0955EC8(v8, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
  sub_1C0955EC8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
  return v22 & 1;
}

void sub_1C0955E64()
{
  if (!qword_1EA1A1300)
  {
    type metadata accessor for DebugFormatLayoutOrderingModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A1300);
    }
  }
}

uint64_t sub_1C0955EC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0955F28(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[2];
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = v7;
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v8;
      *(void *)(a1 + 40) = a2[5];
      long long v9 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v9;
      long long v10 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v10;
      uint64_t v11 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v11;
      *(void *)(a1 + 128) = a2[16];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_212:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v13 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v13;
    uint64_t v14 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v14;
    *(void *)(a1 + 40) = a2[5];
    long long v15 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
    uint64_t v16 = v15[7];
    long long v17 = (void *)(a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = type metadata accessor for FeedItem(0);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v20 = v18[1];
        void *v17 = *v18;
        v17[1] = v20;
        uint64_t v21 = v18[3];
        v17[2] = v18[2];
        v17[3] = v21;
        *((unsigned char *)v17 + 32) = *((unsigned char *)v18 + 32);
        char v22 = v18 + 5;
        unint64_t v23 = v18[6];
        swift_bridgeObjectRetain();
        if (v23 >= 0x11)
        {
          v17[5] = *v22;
          v17[6] = v23;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 5) = *(_OWORD *)v22;
        }
        goto LABEL_210;
      case 1u:
        uint64_t v60 = v18[1];
        void *v17 = *v18;
        v17[1] = v60;
        uint64_t v61 = v18[3];
        v17[2] = v18[2];
        v17[3] = v61;
        *((unsigned char *)v17 + 32) = *((unsigned char *)v18 + 32);
        uint64_t v62 = v18[6];
        v17[5] = v18[5];
        v17[6] = v62;
        uint64_t v63 = v18[8];
        v17[7] = v18[7];
        v17[8] = v63;
        int v64 = v18 + 9;
        unint64_t v65 = v18[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v65 >= 0x11)
        {
          v17[9] = *v64;
          v17[10] = v65;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 9) = *(_OWORD *)v64;
        }
        goto LABEL_210;
      case 2u:
        uint64_t v431 = v15;
        uint64_t v24 = v18[1];
        void *v17 = *v18;
        v17[1] = v24;
        uint64_t v25 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v26 = v25[5];
        uint64_t v27 = (char *)v17 + v26;
        uint64_t v426 = (char *)v18 + v26;
        uint64_t v28 = sub_1C151DBAC();
        id v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v29(v27, v426, v28);
        *(void *)((char *)v17 + v25[6]) = *(void *)((char *)v18 + v25[6]);
        uint64_t v30 = v25[7];
        id v31 = (char *)v17 + v30;
        unint64_t v32 = (char *)v18 + v30;
        *(void *)id v31 = *(void *)v32;
        _OWORD v31[8] = v32[8];
        uint64_t v33 = v25[8];
        id v34 = (void *)((char *)v17 + v33);
        uint64_t v35 = (void *)((char *)v18 + v33);
        unint64_t v36 = v35[1];
        if (v36 >= 0x11)
        {
          *id v34 = *v35;
          v34[1] = v36;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)id v34 = *(_OWORD *)v35;
        }
        long long v15 = v431;
        goto LABEL_210;
      case 3u:
        uint64_t v433 = v15;
        uint64_t v66 = v18[1];
        void *v17 = *v18;
        v17[1] = v66;
        v17[2] = v18[2];
        *((unsigned char *)v17 + 24) = *((unsigned char *)v18 + 24);
        uint64_t v67 = v18[5];
        v17[4] = v18[4];
        v17[5] = v67;
        v17[6] = v18[6];
        *((unsigned char *)v17 + 56) = *((unsigned char *)v18 + 56);
        int v427 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v68 = v427[10];
        uint64_t v69 = (char *)v17 + v68;
        long long v70 = (char *)v18 + v68;
        *uint64_t v69 = *((unsigned char *)v18 + v68);
        v69[1] = *((unsigned char *)v18 + v68 + 1);
        uint64_t v421 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v71 = v421[6];
        __dst = &v69[v71];
        uint64_t v72 = &v70[v71];
        uint64_t v73 = (int *)type metadata accessor for SharedItem();
        uint64_t v397 = *((void *)v73 - 1);
        uint64_t v74 = *(unsigned int (**)(char *, uint64_t, int *))(v397 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v74(v72, 1, v73))
        {
          uint64_t v75 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v72, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          uint64_t v188 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16))(__dst, v72, v188);
          __dst[v73[5]] = v72[v73[5]];
          uint64_t v189 = v73[6];
          uint64_t v190 = *(void **)&v72[v189];
          *(void *)&__dst[v189] = v190;
          uint64_t v191 = v73[7];
          uint64_t v404 = &v72[v191];
          uint64_t v409 = &__dst[v191];
          uint64_t v192 = sub_1C1515FDC();
          uint64_t v396 = *(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16);
          id v193 = v190;
          v396(v409, v404, v192);
          (*(void (**)(char *, void, uint64_t, int *))(v397 + 56))(__dst, 0, 1, v73);
        }
        v69[v421[7]] = v70[v421[7]];
        v69[v421[8]] = v70[v421[8]];
        v69[v421[9]] = v70[v421[9]];
        v69[v421[10]] = v70[v421[10]];
        uint64_t v194 = v427[11];
        uint64_t v195 = (char *)v17 + v194;
        uint64_t v196 = (char *)v18 + v194;
        uint64_t v197 = sub_1C151D2DC();
        uint64_t v198 = *(void *)(v197 - 8);
        long long v15 = v433;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v198 + 48))(v196, 1, v197))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v195, v196, *(void *)(*(void *)(v199 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v198 + 16))(v195, v196, v197);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v198 + 56))(v195, 0, 1, v197);
        }
        uint64_t v206 = v427[12];
        uint64_t v207 = (void *)((char *)v17 + v206);
        uint64_t v208 = (void *)((char *)v18 + v206);
        unint64_t v209 = v208[1];
        if (v209 >= 0x11)
        {
          *uint64_t v207 = *v208;
          v207[1] = v209;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v207 = *(_OWORD *)v208;
        }
        uint64_t v210 = v427[13];
        unint64_t v211 = *(void *)((char *)v18 + v210);
        if (v211 >= 2)
        {
          if (v211 == 2)
          {
            *(void *)((char *)v17 + v210) = 2;
          }
          else
          {
            *(void *)((char *)v17 + v210) = v211;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v17 + v210) = v211;
        }
        uint64_t v247 = v427[14];
        uint64_t v248 = *(void **)((char *)v18 + v247);
        *(void *)((char *)v17 + v247) = v248;
        id v249 = v248;
        goto LABEL_210;
      case 4u:
        uint64_t v37 = v18[1];
        void *v17 = *v18;
        v17[1] = v37;
        *((unsigned char *)v17 + 16) = *((unsigned char *)v18 + 16);
        long long v38 = v18 + 3;
        unint64_t v39 = v18[4];
        if (v39 >= 0x11)
        {
          v17[3] = *v38;
          v17[4] = v39;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 3) = *(_OWORD *)v38;
        }
        uint64_t v127 = v18[6];
        v17[5] = v18[5];
        v17[6] = v127;
        uint64_t v128 = type metadata accessor for FeedWebEmbed();
        uint64_t v129 = *(int *)(v128 + 32);
        uint64_t v415 = (char *)v18 + v129;
        uint64_t v422 = (char *)v17 + v129;
        uint64_t v130 = sub_1C1515FDC();
        uint64_t v131 = *(void *)(v130 - 8);
        uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
        swift_bridgeObjectRetain();
        v132(v422, v415, v130);
        uint64_t v133 = *(int *)(v128 + 36);
        uint64_t v423 = (char *)v17 + v133;
        uint64_t v430 = (int *)v128;
        long long v134 = (char *)v18 + v133;
        __dsta = (void (*)(char *, char *, void *))v132;
        uint64_t v434 = v15;
        uint64_t v408 = (void *)v130;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))((char *)v18 + v133, 1, v130))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v423, v134, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          v132(v423, v134, v130);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v423, 0, 1, v130);
        }
        *(void *)((char *)v17 + v430[10]) = *(void *)((char *)v18 + v430[10]);
        *(void *)((char *)v17 + v430[11]) = *(void *)((char *)v18 + v430[11]);
        uint64_t v166 = v430[12];
        uint64_t v167 = (void *)((char *)v17 + v166);
        uint64_t v424 = (void *)((char *)v18 + v166);
        uint64_t v168 = type metadata accessor for FeedHeadline(0);
        uint64_t v416 = *(void *)(v168 - 8);
        int v169 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v416 + 48);
        swift_retain();
        swift_retain();
        if (v169(v424, 1, v168))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v167, v424, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          uint64_t v176 = v424[1];
          *uint64_t v167 = *v424;
          v167[1] = v176;
          v167[2] = v424[2];
          *((unsigned char *)v167 + 24) = *((unsigned char *)v424 + 24);
          uint64_t v177 = v424[5];
          v167[4] = v424[4];
          v167[5] = v177;
          v167[6] = v424[6];
          *((unsigned char *)v167 + 56) = *((unsigned char *)v424 + 56);
          uint64_t v395 = v167;
          uint64_t v398 = (int *)v168;
          uint64_t v178 = *(int *)(v168 + 40);
          uint64_t v179 = (char *)v167 + v178;
          uint64_t v180 = (char *)v424 + v178;
          *uint64_t v179 = *((unsigned char *)v424 + v178);
          v179[1] = *((unsigned char *)v424 + v178 + 1);
          uint64_t v181 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v182 = *(int *)(v181 + 24);
          uint64_t v393 = &v179[v182];
          uint64_t v394 = (int *)v181;
          int v183 = &v180[v182];
          uint64_t v184 = (int *)type metadata accessor for SharedItem();
          uint64_t v392 = *((void *)v184 - 1);
          uint64_t v185 = *(unsigned int (**)(char *, uint64_t, int *))(v392 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v185(v183, 1, v184))
          {
            uint64_t v186 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v393, v183, *(void *)(*(void *)(v186 - 8) + 64));
          }
          else
          {
            uint64_t v273 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v393, v183, v273);
            v393[v184[5]] = v183[v184[5]];
            uint64_t v274 = v184[6];
            long long v275 = *(void **)&v183[v274];
            *(void *)&v393[v274] = v275;
            uint64_t v276 = v184[7];
            uint64_t v277 = &v393[v276];
            unint64_t v278 = &v183[v276];
            id v279 = v275;
            __dsta(v277, v278, v408);
            (*(void (**)(char *, void, uint64_t, int *))(v392 + 56))(v393, 0, 1, v184);
          }
          v179[v394[7]] = v180[v394[7]];
          v179[v394[8]] = v180[v394[8]];
          v179[v394[9]] = v180[v394[9]];
          v179[v394[10]] = v180[v394[10]];
          uint64_t v280 = v398[11];
          uint64_t v281 = (char *)v395 + v280;
          long long v282 = (char *)v424 + v280;
          uint64_t v283 = sub_1C151D2DC();
          uint64_t v284 = *(void *)(v283 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v284 + 48))(v282, 1, v283))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v281, v282, *(void *)(*(void *)(v285 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v284 + 16))(v281, v282, v283);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v284 + 56))(v281, 0, 1, v283);
          }
          uint64_t v286 = v398[12];
          long long v287 = (void *)((char *)v395 + v286);
          long long v288 = (void *)((char *)v424 + v286);
          unint64_t v289 = v288[1];
          if (v289 >= 0x11)
          {
            *long long v287 = *v288;
            v287[1] = v289;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)long long v287 = *(_OWORD *)v288;
          }
          uint64_t v290 = v398[13];
          unint64_t v291 = *(void *)((char *)v424 + v290);
          if (v291 >= 2)
          {
            if (v291 == 2)
            {
              *(void *)((char *)v395 + v290) = 2;
            }
            else
            {
              *(void *)((char *)v395 + v290) = v291;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v395 + v290) = v291;
          }
          uint64_t v313 = v398[14];
          uint64_t v314 = *(void **)((char *)v424 + v313);
          *(void *)((char *)v395 + v313) = v314;
          uint64_t v315 = *(void (**)(void *, void, uint64_t, int *))(v416 + 56);
          id v316 = v314;
          v315(v395, 0, 1, v398);
        }
        uint64_t v317 = v430[13];
        uint64_t v318 = (void *)((char *)v17 + v317);
        uint64_t v319 = (void *)((char *)v18 + v317);
        uint64_t v320 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v321 = *(void *)(v320 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v321 + 48))(v319, 1, v320))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v318, v319, *(void *)(*(void *)(v322 - 8) + 64));
        }
        else
        {
          int v323 = swift_getEnumCaseMultiPayload();
          uint64_t v324 = *v319;
          if (v323 == 1)
          {
            uint64_t v325 = v319[1];
            *uint64_t v318 = v324;
            v318[1] = v325;
            uint64_t v438 = type metadata accessor for GenericDataVisualization();
            uint64_t v326 = *(int *)(v438 + 20);
            uint64_t v420 = (char *)v319 + v326;
            uint64_t v425 = (char *)v318 + v326;
            swift_bridgeObjectRetain();
            __dsta(v425, v420, v408);
            *(void *)((char *)v318 + *(int *)(v438 + 24)) = *(uint64_t *)((char *)v319 + *(int *)(v438 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            *uint64_t v318 = v324;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v321 + 56))(v318, 0, 1, v320);
        }
        *((unsigned char *)v17 + v430[14]) = *((unsigned char *)v18 + v430[14]);
        goto LABEL_176;
      case 5u:
        uint64_t v76 = (void *)*v18;
        uint64_t v77 = v18[1];
        void *v17 = *v18;
        v17[1] = v77;
        v17[2] = v18[2];
        *((_WORD *)v17 + 12) = *((_WORD *)v18 + 12);
        v17[4] = v18[4];
        *((unsigned char *)v17 + 40) = *((unsigned char *)v18 + 40);
        uint64_t v78 = (void *)v18[7];
        v17[6] = v18[6];
        v17[7] = v78;
        *((unsigned char *)v17 + 64) = *((unsigned char *)v18 + 64);
        uint64_t v79 = v18[10];
        id v80 = v76;
        swift_bridgeObjectRetain();
        id v81 = v78;
        if (v79 == 1)
        {
          long long v82 = *(_OWORD *)(v18 + 11);
          *(_OWORD *)(v17 + 9) = *(_OWORD *)(v18 + 9);
          *(_OWORD *)(v17 + 11) = v82;
          *(_OWORD *)(v17 + 13) = *(_OWORD *)(v18 + 13);
        }
        else
        {
          v17[9] = v18[9];
          v17[10] = v79;
          uint64_t v137 = v18[12];
          v17[11] = v18[11];
          v17[12] = v137;
          uint64_t v139 = (void *)v18[13];
          uint64_t v138 = v18[14];
          v17[13] = v139;
          v17[14] = v138;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v140 = v139;
        }
        uint64_t v141 = v18 + 15;
        unint64_t v142 = v18[16];
        if (v142 >= 0x11)
        {
          v17[15] = *v141;
          v17[16] = v142;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 15) = *(_OWORD *)v141;
        }
        *((unsigned char *)v17 + 136) = *((unsigned char *)v18 + 136);
        goto LABEL_210;
      case 6u:
        uint64_t v434 = v15;
        int v83 = *((unsigned __int8 *)v18 + 281);
        if (v83 == 2)
        {
          uint64_t v218 = v18[1];
          void *v17 = *v18;
          v17[1] = v218;
          v17[2] = v18[2];
          *((unsigned char *)v17 + 24) = *((unsigned char *)v18 + 24);
          v17[4] = v18[4];
          *((unsigned char *)v17 + 40) = *((unsigned char *)v18 + 40);
          uint64_t v219 = v18[7];
          v17[6] = v18[6];
          v17[7] = v219;
          uint64_t v220 = v18[9];
          v17[8] = v18[8];
          v17[9] = v220;
          uint64_t v221 = v18[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v221 == 1)
          {
            long long v222 = *((_OWORD *)v18 + 8);
            *((_OWORD *)v17 + 7) = *((_OWORD *)v18 + 7);
            *((_OWORD *)v17 + 8) = v222;
            *((unsigned char *)v17 + 144) = *((unsigned char *)v18 + 144);
            long long v223 = *((_OWORD *)v18 + 6);
            *((_OWORD *)v17 + 5) = *((_OWORD *)v18 + 5);
            *((_OWORD *)v17 + 6) = v223;
          }
          else
          {
            v17[10] = v18[10];
            v17[11] = v221;
            uint64_t v257 = v18[15];
            swift_bridgeObjectRetain();
            if (v257)
            {
              uint64_t v258 = v18[16];
              v17[15] = v257;
              v17[16] = v258;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v257 - 8))((uint64_t)(v17 + 12), (uint64_t)(v18 + 12), v257);
              v17[17] = v18[17];
            }
            else
            {
              long long v349 = *((_OWORD *)v18 + 7);
              *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
              *((_OWORD *)v17 + 7) = v349;
              *((_OWORD *)v17 + 8) = *((_OWORD *)v18 + 8);
            }
            *((unsigned char *)v17 + 144) = *((unsigned char *)v18 + 144);
          }
        }
        else if (v83 == 1)
        {
          uint64_t v84 = (void *)*v18;
          uint64_t v85 = v18[1];
          void *v17 = *v18;
          v17[1] = v85;
          v17[2] = v18[2];
          *((_WORD *)v17 + 12) = *((_WORD *)v18 + 12);
          v17[4] = v18[4];
          *((unsigned char *)v17 + 40) = *((unsigned char *)v18 + 40);
          uint64_t v86 = (void *)v18[7];
          v17[6] = v18[6];
          v17[7] = v86;
          *((unsigned char *)v17 + 64) = *((unsigned char *)v18 + 64);
          uint64_t v87 = v18[10];
          id v88 = v84;
          swift_bridgeObjectRetain();
          id v89 = v86;
          if (v87 == 1)
          {
            long long v90 = *(_OWORD *)(v18 + 11);
            *(_OWORD *)(v17 + 9) = *(_OWORD *)(v18 + 9);
            *(_OWORD *)(v17 + 11) = v90;
            *(_OWORD *)(v17 + 13) = *(_OWORD *)(v18 + 13);
          }
          else
          {
            v17[9] = v18[9];
            v17[10] = v87;
            uint64_t v251 = v18[12];
            v17[11] = v18[11];
            v17[12] = v251;
            unint64_t v253 = (void *)v18[13];
            uint64_t v252 = v18[14];
            v17[13] = v253;
            v17[14] = v252;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v254 = v253;
          }
          uint64_t v255 = v18 + 15;
          unint64_t v256 = v18[16];
          if (v256 >= 0x11)
          {
            v17[15] = *v255;
            v17[16] = v256;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v17 + 15) = *(_OWORD *)v255;
          }
          uint64_t v265 = (void *)v18[18];
          *((unsigned char *)v17 + 136) = *((unsigned char *)v18 + 136);
          if (v265)
          {
            uint64_t v266 = v18[19];
            uint64_t v267 = v18[20];
            v17[18] = v265;
            v17[19] = v266;
            v17[20] = v267;
            *((_WORD *)v17 + 84) = *((_WORD *)v18 + 84);
            v17[22] = v18[22];
            *((unsigned char *)v17 + 184) = *((unsigned char *)v18 + 184);
            id v268 = (void *)v18[25];
            v17[24] = v18[24];
            v17[25] = v268;
            *((unsigned char *)v17 + 208) = *((unsigned char *)v18 + 208);
            uint64_t v269 = v18[28];
            id v270 = v265;
            swift_bridgeObjectRetain();
            id v271 = v268;
            if (v269 == 1)
            {
              long long v272 = *(_OWORD *)(v18 + 29);
              *(_OWORD *)(v17 + 27) = *(_OWORD *)(v18 + 27);
              *(_OWORD *)(v17 + 29) = v272;
              *(_OWORD *)(v17 + 31) = *(_OWORD *)(v18 + 31);
            }
            else
            {
              v17[27] = v18[27];
              v17[28] = v269;
              uint64_t v296 = v18[30];
              v17[29] = v18[29];
              v17[30] = v296;
              int v298 = (void *)v18[31];
              uint64_t v297 = v18[32];
              v17[31] = v298;
              v17[32] = v297;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v299 = v298;
            }
            int v300 = v18 + 33;
            unint64_t v301 = v18[34];
            if (v301 >= 0x11)
            {
              v17[33] = *v300;
              v17[34] = v301;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v17 + 33) = *(_OWORD *)v300;
            }
            *((unsigned char *)v17 + 280) = *((unsigned char *)v18 + 280);
          }
          else
          {
            long long v292 = *((_OWORD *)v18 + 16);
            *((_OWORD *)v17 + 15) = *((_OWORD *)v18 + 15);
            *((_OWORD *)v17 + 16) = v292;
            *(_OWORD *)((char *)v17 + 265) = *(_OWORD *)((char *)v18 + 265);
            long long v293 = *((_OWORD *)v18 + 12);
            *((_OWORD *)v17 + 11) = *((_OWORD *)v18 + 11);
            *((_OWORD *)v17 + 12) = v293;
            long long v294 = *((_OWORD *)v18 + 14);
            *((_OWORD *)v17 + 13) = *((_OWORD *)v18 + 13);
            *((_OWORD *)v17 + 14) = v294;
            long long v295 = *((_OWORD *)v18 + 10);
            *((_OWORD *)v17 + 9) = *((_OWORD *)v18 + 9);
            *((_OWORD *)v17 + 10) = v295;
          }
        }
        else
        {
          int v224 = (void *)*v18;
          uint64_t v225 = v18[1];
          void *v17 = *v18;
          v17[1] = v225;
          v17[2] = v18[2];
          *((_WORD *)v17 + 12) = *((_WORD *)v18 + 12);
          v17[4] = v18[4];
          *((unsigned char *)v17 + 40) = *((unsigned char *)v18 + 40);
          uint64_t v226 = (void *)v18[7];
          v17[6] = v18[6];
          v17[7] = v226;
          *((unsigned char *)v17 + 64) = *((unsigned char *)v18 + 64);
          uint64_t v227 = v18[10];
          id v228 = v224;
          swift_bridgeObjectRetain();
          id v229 = v226;
          if (v227 == 1)
          {
            long long v230 = *(_OWORD *)(v18 + 11);
            *(_OWORD *)(v17 + 9) = *(_OWORD *)(v18 + 9);
            *(_OWORD *)(v17 + 11) = v230;
            *(_OWORD *)(v17 + 13) = *(_OWORD *)(v18 + 13);
          }
          else
          {
            v17[9] = v18[9];
            v17[10] = v227;
            uint64_t v259 = v18[12];
            v17[11] = v18[11];
            v17[12] = v259;
            long long v261 = (void *)v18[13];
            uint64_t v260 = v18[14];
            v17[13] = v261;
            v17[14] = v260;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v262 = v261;
          }
          uint64_t v263 = v18 + 15;
          unint64_t v264 = v18[16];
          if (v264 >= 0x11)
          {
            v17[15] = *v263;
            v17[16] = v264;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v17 + 15) = *(_OWORD *)v263;
          }
          *((unsigned char *)v17 + 136) = *((unsigned char *)v18 + 136);
        }
        *((unsigned char *)v17 + 281) = v83;
LABEL_176:
        swift_storeEnumTagMultiPayload();
        long long v15 = v434;
        goto LABEL_211;
      case 7u:
        uint64_t v91 = v18[1];
        void *v17 = *v18;
        v17[1] = v91;
        v17[2] = v18[2];
        *((unsigned char *)v17 + 24) = *((unsigned char *)v18 + 24);
        v17[4] = v18[4];
        *((unsigned char *)v17 + 40) = *((unsigned char *)v18 + 40);
        uint64_t v92 = v18[7];
        v17[6] = v18[6];
        v17[7] = v92;
        uint64_t v93 = v18[9];
        v17[8] = v18[8];
        v17[9] = v93;
        uint64_t v94 = v18[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v94 == 1)
        {
          long long v95 = *((_OWORD *)v18 + 8);
          *((_OWORD *)v17 + 7) = *((_OWORD *)v18 + 7);
          *((_OWORD *)v17 + 8) = v95;
          *((unsigned char *)v17 + 144) = *((unsigned char *)v18 + 144);
          long long v96 = *((_OWORD *)v18 + 6);
          *((_OWORD *)v17 + 5) = *((_OWORD *)v18 + 5);
          *((_OWORD *)v17 + 6) = v96;
        }
        else
        {
          v17[10] = v18[10];
          v17[11] = v94;
          uint64_t v143 = v18[15];
          swift_bridgeObjectRetain();
          if (v143)
          {
            uint64_t v144 = v18[16];
            v17[15] = v143;
            v17[16] = v144;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v143 - 8))((uint64_t)(v17 + 12), (uint64_t)(v18 + 12), v143);
            v17[17] = v18[17];
          }
          else
          {
            long long v250 = *((_OWORD *)v18 + 7);
            *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
            *((_OWORD *)v17 + 7) = v250;
            *((_OWORD *)v17 + 8) = *((_OWORD *)v18 + 8);
          }
          *((unsigned char *)v17 + 144) = *((unsigned char *)v18 + 144);
        }
        goto LABEL_210;
      case 8u:
        uint64_t v435 = v15;
        uint64_t v97 = v18[1];
        void *v17 = *v18;
        v17[1] = v97;
        uint64_t v98 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        unint64_t v99 = (void *)((char *)v17 + v98);
        uint64_t v100 = (char *)v18 + v98;
        uint64_t v101 = *(void *)((char *)v18 + v98 + 8);
        *unint64_t v99 = *(void *)((char *)v18 + v98);
        v99[1] = v101;
        uint64_t v102 = *(void *)((char *)v18 + v98 + 16);
        uint64_t v103 = *((void *)v100 + 3);
        v99[2] = v102;
        v99[3] = v103;
        uint64_t v428 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v104 = *(int *)(v428 + 24);
        uint64_t v407 = (char *)v99 + v104;
        unint64_t v414 = &v100[v104];
        uint64_t v105 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v403 = *(void **)(v105 - 8);
        long long v106 = (unsigned int (*)(char *, uint64_t, uint64_t))v403[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v106(v414, 1, v105))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v407, v414, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          uint64_t v200 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v407, v414, v200);
          ((void (*)(char *, void, uint64_t, uint64_t))v403[7])(v407, 0, 1, v105);
        }
        long long v15 = v435;
        *(void *)((char *)v99 + *(int *)(v428 + 28)) = *(void *)&v100[*(int *)(v428 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_210;
      case 9u:
        uint64_t v40 = v18[1];
        void *v17 = *v18;
        v17[1] = v40;
        uint64_t v41 = v18[3];
        v17[2] = v18[2];
        v17[3] = v41;
        uint64_t v42 = v18[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v42)
        {
          uint64_t v43 = v18[8];
          v17[7] = v42;
          v17[8] = v43;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v42 - 8))((uint64_t)(v17 + 4), (uint64_t)(v18 + 4), v42);
        }
        else
        {
          long long v161 = *((_OWORD *)v18 + 3);
          *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
          *((_OWORD *)v17 + 3) = v161;
          v17[8] = v18[8];
        }
        uint64_t v162 = v17 + 9;
        uint64_t v163 = v18 + 9;
        uint64_t v164 = v18[12];
        if (v164)
        {
          uint64_t v165 = v18[13];
          v17[12] = v164;
          v17[13] = v165;
          (**(void (***)(_OWORD *, _OWORD *))(v164 - 8))(v162, v163);
        }
        else
        {
          long long v171 = *(_OWORD *)(v18 + 11);
          *uint64_t v162 = *v163;
          *(_OWORD *)(v17 + 11) = v171;
          v17[13] = v18[13];
        }
        uint64_t v172 = v17 + 14;
        uint64_t v173 = v18 + 14;
        uint64_t v174 = v18[17];
        if (v174)
        {
          uint64_t v175 = v18[18];
          v17[17] = v174;
          v17[18] = v175;
          (**(void (***)(_OWORD *, _OWORD *))(v174 - 8))(v172, v173);
        }
        else
        {
          long long v187 = *((_OWORD *)v18 + 8);
          *uint64_t v172 = *v173;
          *((_OWORD *)v17 + 8) = v187;
          v17[18] = v18[18];
        }
        goto LABEL_210;
      case 0xAu:
        uint64_t v436 = v15;
        uint64_t v108 = v18[1];
        void *v17 = *v18;
        v17[1] = v108;
        long long v109 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v110 = v109[5];
        long long v111 = (char *)v17 + v110;
        uint64_t v429 = (char *)v18 + v110;
        uint64_t v112 = sub_1C151959C();
        unint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
        swift_bridgeObjectRetain();
        v113(v111, v429, v112);
        *(void *)((char *)v17 + v109[6]) = *(void *)((char *)v18 + v109[6]);
        uint64_t v114 = v109[7];
        uint64_t v115 = (char *)v17 + v114;
        long long v116 = (char *)v18 + v114;
        *(void *)uint64_t v115 = *(void *)v116;
        v115[8] = v116[8];
        uint64_t v117 = v109[8];
        long long v118 = (void *)((char *)v17 + v117);
        char v119 = (void *)((char *)v18 + v117);
        unint64_t v120 = v119[1];
        if (v120 >= 0x11)
        {
          void *v118 = *v119;
          v118[1] = v120;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)long long v118 = *(_OWORD *)v119;
        }
        long long v15 = v436;
        goto LABEL_210;
      case 0xBu:
        void *v17 = *v18;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_211;
      case 0xCu:
        uint64_t v44 = v18[1];
        void *v17 = *v18;
        v17[1] = v44;
        uint64_t v45 = v18[3];
        v17[2] = v18[2];
        v17[3] = v45;
        *((unsigned char *)v17 + 32) = *((unsigned char *)v18 + 32);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_211;
      case 0xDu:
        uint64_t v121 = v18[1];
        void *v17 = *v18;
        v17[1] = v121;
        *((unsigned char *)v17 + 16) = *((unsigned char *)v18 + 16);
        uint64_t v122 = v18 + 3;
        unint64_t v123 = v18[4];
        if (v123 >= 0x11)
        {
          v17[3] = *v122;
          v17[4] = v123;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 3) = *(_OWORD *)v122;
        }
        uint64_t v145 = v18[6];
        v17[5] = v18[5];
        v17[6] = v145;
        long long v146 = (void *)v18[8];
        v17[7] = v18[7];
        v17[8] = v146;
        *((unsigned char *)v17 + 72) = *((unsigned char *)v18 + 72);
        v17[10] = v18[10];
        uint64_t v147 = v18[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v148 = v146;
        swift_bridgeObjectRetain();
        if (v147)
        {
          uint64_t v149 = v18[15];
          v17[14] = v147;
          v17[15] = v149;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v147 - 8))((uint64_t)(v17 + 11), (uint64_t)(v18 + 11), v147);
        }
        else
        {
          long long v201 = *(_OWORD *)(v18 + 13);
          *(_OWORD *)(v17 + 11) = *(_OWORD *)(v18 + 11);
          *(_OWORD *)(v17 + 13) = v201;
          v17[15] = v18[15];
        }
        id v202 = v17 + 16;
        uint64_t v203 = v18 + 16;
        uint64_t v204 = v18[19];
        if (v204)
        {
          uint64_t v205 = v18[20];
          v17[19] = v204;
          v17[20] = v205;
          (**(void (***)(_OWORD *, _OWORD *))(v204 - 8))(v202, v203);
        }
        else
        {
          long long v212 = *((_OWORD *)v18 + 9);
          *id v202 = *v203;
          *((_OWORD *)v17 + 9) = v212;
          v17[20] = v18[20];
        }
        long long v213 = v17 + 21;
        long long v214 = v18 + 21;
        uint64_t v215 = v18[24];
        if (v215)
        {
          uint64_t v216 = v18[25];
          v17[24] = v215;
          v17[25] = v216;
          (**(void (***)(_OWORD *, _OWORD *))(v215 - 8))(v213, v214);
        }
        else
        {
          long long v217 = *(_OWORD *)(v18 + 23);
          *long long v213 = *v214;
          *(_OWORD *)(v17 + 23) = v217;
          v17[25] = v18[25];
        }
        goto LABEL_210;
      case 0xEu:
        uint64_t v46 = v18[1];
        void *v17 = *v18;
        v17[1] = v46;
        *((unsigned char *)v17 + 16) = *((unsigned char *)v18 + 16);
        id v47 = v18 + 3;
        unint64_t v48 = v18[4];
        if (v48 >= 0x11)
        {
          v17[3] = *v47;
          v17[4] = v48;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 3) = *(_OWORD *)v47;
        }
        uint64_t v136 = v18[6];
        v17[5] = v18[5];
        v17[6] = v136;
        v17[7] = v18[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_210;
      case 0xFu:
        uint64_t v124 = v18[1];
        void *v17 = *v18;
        v17[1] = v124;
        *((unsigned char *)v17 + 16) = *((unsigned char *)v18 + 16);
        uint64_t v125 = v18 + 3;
        unint64_t v126 = v18[4];
        uint64_t v437 = v15;
        if (v126 >= 0x11)
        {
          v17[3] = *v125;
          v17[4] = v126;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 3) = *(_OWORD *)v125;
        }
        break;
      case 0x10u:
        uint64_t v432 = v15;
        uint64_t v49 = v18[1];
        void *v17 = *v18;
        v17[1] = v49;
        uint64_t v50 = v18[3];
        v17[2] = v18[2];
        v17[3] = v50;
        uint64_t v51 = v18[5];
        v17[4] = v18[4];
        v17[5] = v51;
        *((_WORD *)v17 + 24) = *((_WORD *)v18 + 24);
        *(_OWORD *)(v17 + 7) = *(_OWORD *)(v18 + 7);
        uint64_t v52 = v18[10];
        v17[9] = v18[9];
        v17[10] = v52;
        uint64_t v53 = v18[12];
        v17[11] = v18[11];
        v17[12] = v53;
        v17[13] = v18[13];
        *((unsigned char *)v17 + 112) = *((unsigned char *)v18 + 112);
        uint64_t v54 = v18[16];
        v17[15] = v18[15];
        v17[16] = v54;
        *((unsigned char *)v17 + 136) = *((unsigned char *)v18 + 136);
        uint64_t v55 = v18[19];
        v17[18] = v18[18];
        v17[19] = v55;
        uint64_t v56 = v18[21];
        v17[20] = v18[20];
        v17[21] = v56;
        *((unsigned char *)v17 + 184) = *((unsigned char *)v18 + 184);
        v17[22] = v18[22];
        uint64_t v57 = v18[25];
        v17[24] = v18[24];
        v17[25] = v57;
        *((unsigned char *)v17 + 224) = *((unsigned char *)v18 + 224);
        uint64_t v58 = v18[27];
        v17[26] = v18[26];
        v17[27] = v58;
        uint64_t v402 = v18 + 29;
        unint64_t v59 = v18[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v59 >= 0x11)
        {
          v17[29] = *v402;
          v17[30] = v59;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 29) = *(_OWORD *)v402;
        }
        long long v15 = v432;
        goto LABEL_210;
      default:
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        goto LABEL_211;
    }
    uint64_t v150 = v18[6];
    v17[5] = v18[5];
    v17[6] = v150;
    uint64_t v151 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v152 = (char *)v17 + v151;
    uint64_t v153 = (void *)((char *)v18 + v151);
    *(void *)((char *)v17 + v151) = *v153;
    uint64_t v154 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v155 = &v152[v154];
    uint64_t v156 = (void *)((char *)v153 + v154);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v235 = type metadata accessor for PuzzleStatisticValue(0);
        int v236 = swift_getEnumCaseMultiPayload();
        uint64_t v417 = v235;
        if (v236 == 5)
        {
          uint64_t v346 = type metadata accessor for PuzzleStreak();
          uint64_t v347 = *(void *)(v346 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v347 + 48))(v156, 1, v346))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v155, v156, *(void *)(*(void *)(v348 - 8) + 64));
          }
          else
          {
            uint64_t v358 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v358 - 8) + 16))(v155, v156, v358);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v347 + 56))(v155, 0, 1, v346);
          }
          uint64_t v235 = v417;
        }
        else
        {
          if (v236 != 4)
          {
            memcpy(v155, v156, *(void *)(*(void *)(v235 - 8) + 64));
            goto LABEL_188;
          }
          uint64_t v237 = type metadata accessor for PuzzleStreak();
          uint64_t v238 = *(void *)(v237 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v238 + 48))(v156, 1, v237))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v155, v156, *(void *)(*(void *)(v239 - 8) + 64));
          }
          else
          {
            uint64_t v356 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v356 - 8) + 16))(v155, v156, v356);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v238 + 56))(v155, 0, 1, v237);
          }
          uint64_t v235 = v417;
        }
        swift_storeEnumTagMultiPayload();
LABEL_188:
        uint64_t v359 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v360 = *(int *)(v359 + 20);
        uint64_t v361 = v155;
        int v362 = &v155[v360];
        uint64_t v363 = (char *)v156 + v360;
        int v364 = swift_getEnumCaseMultiPayload();
        if (v364 == 5)
        {
          uint64_t v413 = (void *)v359;
          uint64_t v368 = type metadata accessor for PuzzleStreak();
          uint64_t v369 = *(void *)(v368 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v369 + 48))(v363, 1, v368))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v362, v363, *(void *)(*(void *)(v370 - 8) + 64));
          }
          else
          {
            uint64_t v373 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v373 - 8) + 16))(v362, v363, v373);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v369 + 56))(v362, 0, 1, v368);
          }
          uint64_t v235 = v417;
          swift_storeEnumTagMultiPayload();
          int v372 = v361;
          uint64_t v359 = (uint64_t)v413;
        }
        else
        {
          if (v364 == 4)
          {
            v412 = (void *)v359;
            uint64_t v365 = type metadata accessor for PuzzleStreak();
            uint64_t v366 = *(void *)(v365 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v366 + 48))(v363, 1, v365))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v362, v363, *(void *)(*(void *)(v367 - 8) + 64));
            }
            else
            {
              uint64_t v371 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v371 - 8) + 16))(v362, v363, v371);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v362, 0, 1, v365);
            }
            uint64_t v359 = (uint64_t)v412;
            uint64_t v235 = v417;
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v362, v363, *(void *)(*(void *)(v235 - 8) + 64));
          }
          int v372 = v361;
        }
        uint64_t v374 = *(int *)(v359 + 24);
        uint64_t v375 = (char *)v372 + v374;
        uint64_t v376 = (char *)v156 + v374;
        int v377 = swift_getEnumCaseMultiPayload();
        if (v377 == 5)
        {
          uint64_t v378 = type metadata accessor for PuzzleStreak();
          uint64_t v379 = *(void *)(v378 - 8);
          long long v15 = v437;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v379 + 48))(v376, 1, v378))
          {
LABEL_203:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v375, v376, *(void *)(*(void *)(v380 - 8) + 64));
            goto LABEL_208;
          }
        }
        else
        {
          long long v15 = v437;
          if (v377 != 4)
          {
            memcpy(v375, v376, *(void *)(*(void *)(v235 - 8) + 64));
            goto LABEL_209;
          }
          uint64_t v378 = type metadata accessor for PuzzleStreak();
          uint64_t v379 = *(void *)(v378 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v379 + 48))(v376, 1, v378)) {
            goto LABEL_203;
          }
        }
        uint64_t v381 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v381 - 8) + 16))(v375, v376, v381);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v379 + 56))(v375, 0, 1, v378);
LABEL_208:
        swift_storeEnumTagMultiPayload();
        goto LABEL_209;
      case 2u:
        uint64_t v231 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        unint64_t v232 = (unsigned int (**)(void *, uint64_t, int *))*((void *)v231 - 1);
        if (v232[6](v156, 1, v231))
        {
          sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          size_t v234 = *(void *)(*(void *)(v233 - 8) + 64);
          goto LABEL_170;
        }
        uint64_t v411 = v232;
        uint64_t v302 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v302 - 8) + 16))(v155, v156, v302);
        uint64_t v303 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v304 = v303[5];
        uint64_t v305 = &v155[v304];
        uint64_t v306 = (void *)((char *)v156 + v304);
        uint64_t v307 = v306[1];
        *(void *)uint64_t v305 = *v306;
        *((void *)v305 + 1) = v307;
        uint64_t v308 = v303[6];
        uint64_t v419 = v155;
        uint64_t v309 = &v155[v308];
        uint64_t v310 = (void *)((char *)v156 + v308);
        uint64_t v311 = v310[1];
        *(void *)uint64_t v309 = *v310;
        *((void *)v309 + 1) = v311;
        int v406 = v310 + 2;
        unint64_t v312 = v310[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v312 >> 60 == 15)
        {
          *((_OWORD *)v309 + 1) = *(_OWORD *)v406;
        }
        else
        {
          uint64_t v350 = *v406;
          sub_1BFE95820(*v406, v312);
          *((void *)v309 + 2) = v350;
          *((void *)v309 + 3) = v312;
        }
        *(void *)((char *)v419 + v303[7]) = *(void *)((char *)v156 + v303[7]);
        *(void *)((char *)v419 + v303[8]) = *(void *)((char *)v156 + v303[8]);
        *(void *)((char *)v419 + v231[5]) = *(void *)((char *)v156 + v231[5]);
        *(void *)((char *)v419 + v231[6]) = *(void *)((char *)v156 + v231[6]);
        uint64_t v351 = v231[7];
        uint64_t v352 = (void *)((char *)v419 + v351);
        uint64_t v353 = (void *)((char *)v156 + v351);
        uint64_t v354 = v353[1];
        void *v352 = *v353;
        v352[1] = v354;
        uint64_t v355 = (void (*)(void *, void, uint64_t, int *))v411[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v355(v419, 0, 1, v231);
        long long v15 = v437;
        goto LABEL_209;
      case 3u:
        uint64_t v240 = v156[1];
        *(void *)uint64_t v155 = *v156;
        *((void *)v155 + 1) = v240;
        v155[16] = *((unsigned char *)v156 + 16);
        uint64_t v241 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v242 = v241[6];
        uint64_t v418 = v155;
        int v405 = &v155[v242];
        uint64_t v243 = (char *)v156 + v242;
        uint64_t v244 = type metadata accessor for PuzzleStreak();
        uint64_t v245 = *(void *)(v244 - 8);
        uint64_t v410 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v245 + 48);
        __dstb = (void (**)(void *, void, uint64_t, uint64_t))v245;
        if (v410(v243, 1, v244))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v405, v243, *(void *)(*(void *)(v246 - 8) + 64));
        }
        else
        {
          uint64_t v327 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v327 - 8) + 16))(v405, v243, v327);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v245 + 56))(v405, 0, 1, v244);
        }
        uint64_t v328 = v241[7];
        uint64_t v329 = (char *)v418 + v328;
        uint64_t v330 = (char *)v156 + v328;
        if (v410((char *)v156 + v328, 1, v244))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v329, v330, *(void *)(*(void *)(v331 - 8) + 64));
        }
        else
        {
          uint64_t v332 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 16))(v329, v330, v332);
          __dstb[7](v329, 0, 1, v244);
        }
        uint64_t v333 = v241[8];
        uint64_t v334 = (_OWORD *)((char *)v418 + v333);
        long long v335 = (_OWORD *)((char *)v156 + v333);
        long long v336 = v335[1];
        *uint64_t v334 = *v335;
        v334[1] = v336;
        *(_OWORD *)((char *)v334 + 25) = *(_OWORD *)((char *)v335 + 25);
        uint64_t v337 = v241[9];
        uint64_t v338 = (_OWORD *)((char *)v418 + v337);
        uint64_t v339 = (_OWORD *)((char *)v156 + v337);
        *(_OWORD *)((char *)v338 + 25) = *(_OWORD *)((char *)v339 + 25);
        long long v340 = v339[1];
        _OWORD *v338 = *v339;
        v338[1] = v340;
        uint64_t v341 = v241[10];
        uint64_t v342 = (_OWORD *)((char *)v418 + v341);
        uint64_t v343 = (_OWORD *)((char *)v156 + v341);
        long long v344 = v343[1];
        _OWORD *v342 = *v343;
        v342[1] = v344;
        *(_OWORD *)((char *)v342 + 25) = *(_OWORD *)((char *)v343 + 25);
        goto LABEL_184;
      default:
        uint64_t v157 = type metadata accessor for PuzzleStatisticValue(0);
        int v158 = swift_getEnumCaseMultiPayload();
        if (v158 == 5)
        {
          uint64_t v159 = type metadata accessor for PuzzleStreak();
          uint64_t v160 = *(void *)(v159 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v160 + 48))(v156, 1, v159))
          {
LABEL_168:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v155, v156, *(void *)(*(void *)(v345 - 8) + 64));
LABEL_183:
            swift_storeEnumTagMultiPayload();
            goto LABEL_184;
          }
        }
        else
        {
          if (v158 != 4)
          {
            size_t v234 = *(void *)(*(void *)(v157 - 8) + 64);
LABEL_170:
            memcpy(v155, v156, v234);
LABEL_184:
            long long v15 = v437;
LABEL_209:
            swift_storeEnumTagMultiPayload();
LABEL_210:
            swift_storeEnumTagMultiPayload();
LABEL_211:
            uint64_t v382 = v15[8];
            uint64_t v383 = (_OWORD *)(a1 + v382);
            int v384 = (_OWORD *)((char *)a2 + v382);
            long long v385 = v384[1];
            *uint64_t v383 = *v384;
            v383[1] = v385;
            uint64_t v386 = v15[9];
            uint64_t v387 = (_OWORD *)(a1 + v386);
            uint64_t v388 = (_OWORD *)((char *)a2 + v386);
            long long v389 = v388[1];
            *uint64_t v387 = *v388;
            v387[1] = v389;
            sub_1C0955B70();
            *(void *)(a1 + *(int *)(v390 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v390 + 48));
            swift_retain();
            goto LABEL_212;
          }
          uint64_t v159 = type metadata accessor for PuzzleStreak();
          uint64_t v160 = *(void *)(v159 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v160 + 48))(v156, 1, v159)) {
            goto LABEL_168;
          }
        }
        uint64_t v357 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v357 - 8) + 16))(v155, v156, v357);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v155, 0, 1, v159);
        goto LABEL_183;
    }
  }
  uint64_t v12 = *a2;
  *(void *)a1 = *a2;
  a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_1C0958C18(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_76;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = a1 + *(int *)(type metadata accessor for FormatItemNodeLayoutContext() + 28);
  type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 48) < 0x11uLL) {
        goto LABEL_75;
      }
      goto LABEL_74;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 80) < 0x11uLL) {
        goto LABEL_75;
      }
      goto LABEL_74;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for FeedBannerAd();
      uint64_t v5 = v3 + *(int *)(v4 + 20);
      uint64_t v6 = sub_1C151DBAC();
      goto LABEL_55;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v7 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v8 = v7[10];
      uint64_t v9 = v3 + v8 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      uint64_t v10 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
      {
        uint64_t v11 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);

        uint64_t v12 = v9 + *(int *)(v10 + 28);
        uint64_t v13 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      uint64_t v14 = v3 + v7[11];
      uint64_t v15 = sub_1C151D2DC();
      uint64_t v16 = *(void *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      }
      if (*(void *)(v3 + v7[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v3 + v7[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }

      goto LABEL_75;
    case 4u:
      if (*(void *)(v3 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      long long v17 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v18 = v3 + v17[8];
      uint64_t v19 = sub_1C1515FDC();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v21(v18, v19);
      uint64_t v22 = v3 + v17[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v22, 1, v19)) {
        v21(v22, v19);
      }
      swift_release();
      swift_release();
      uint64_t v23 = v3 + v17[12];
      uint64_t v24 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v24 - 1) + 48))(v23, 1, v24))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v25 = v24[10];
        uint64_t v26 = v23 + v25 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v27 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27))
        {
          uint64_t v28 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v26, v28);

          v21(v26 + *(int *)(v27 + 28), v19);
        }
        unint64_t v65 = v21;
        uint64_t v29 = v23 + v24[11];
        uint64_t v30 = sub_1C151D2DC();
        uint64_t v31 = *(void *)(v30 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30)) {
          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
        }
        if (*(void *)(v23 + v24[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v21 = v65;
        if (*(void *)(v23 + v24[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v32 = v3 + v17[13];
      uint64_t v33 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33)) {
        goto LABEL_75;
      }
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_57;
      }
      swift_bridgeObjectRelease();
      uint64_t v34 = type metadata accessor for GenericDataVisualization();
      v21(v32 + *(int *)(v34 + 20), v19);
      goto LABEL_74;
    case 5u:
      goto LABEL_38;
    case 6u:
      int v35 = *(unsigned __int8 *)(v3 + 281);
      if (v35 == 2) {
        goto LABEL_42;
      }
      if (v35 != 1)
      {
        if (*(unsigned char *)(v3 + 281)) {
          goto LABEL_75;
        }
LABEL_38:

        swift_bridgeObjectRelease();
        if (*(void *)(v3 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v3 + 128) < 0x11uLL) {
          goto LABEL_75;
        }
LABEL_74:
        swift_bridgeObjectRelease();
        goto LABEL_75;
      }

      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v3 + 128) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v43 = *(void **)(v3 + 144);
      if (v43)
      {

        swift_bridgeObjectRelease();
        if (*(void *)(v3 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v3 + 272) >= 0x11uLL) {
          goto LABEL_74;
        }
      }
LABEL_75:
      sub_1C0955B70();
LABEL_76:
      return swift_release();
    case 7u:
LABEL_42:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(void *)(v3 + 120)) {
          __swift_destroy_boxed_opaque_existential_1(v3 + 96);
        }
      }
      goto LABEL_75;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v36 = v3 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = v36 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v38 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v37, 1, v38))
      {
        uint64_t v39 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v37, v39);
      }
      goto LABEL_74;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 56)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 32);
      }
      if (*(void *)(v3 + 96)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 72);
      }
      if (*(void *)(v3 + 136)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 112);
      }
      goto LABEL_75;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for FeedEngagementBanner();
      uint64_t v5 = v3 + *(int *)(v4 + 20);
      uint64_t v6 = sub_1C151959C();
LABEL_55:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      if (*(void *)(v3 + *(int *)(v4 + 32) + 8) < 0x11uLL) {
        goto LABEL_75;
      }
      goto LABEL_74;
    case 0xBu:
LABEL_57:
      swift_release();
      goto LABEL_75;
    case 0xCu:
      goto LABEL_68;
    case 0xDu:
      if (*(void *)(v3 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 88);
      }
      if (*(void *)(v3 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 128);
      }
      if (*(void *)(v3 + 192)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 168);
      }
      goto LABEL_75;
    case 0xEu:
      if (*(void *)(v3 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_68:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_75;
    case 0xFu:
      if (*(void *)(v3 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v40 = v3 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v41 = v40 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_97;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int v44 = swift_getEnumCaseMultiPayload();
          if (v44 == 5 || v44 == 4)
          {
            uint64_t v45 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v41, 1, v45))
            {
              uint64_t v46 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v41, v46);
            }
          }
          uint64_t v47 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v48 = v41 + *(int *)(v47 + 20);
          int v49 = swift_getEnumCaseMultiPayload();
          if (v49 == 5 || v49 == 4)
          {
            uint64_t v50 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v48, 1, v50))
            {
              uint64_t v51 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v48, v51);
            }
          }
          v41 += *(int *)(v47 + 24);
LABEL_97:
          int v52 = swift_getEnumCaseMultiPayload();
          if (v52 == 5 || v52 == 4)
          {
            uint64_t v53 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v41, 1, v53))goto LABEL_108; {
          }
            }
          goto LABEL_75;
        case 2u:
          uint64_t v54 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v41, 1, v54)) {
            goto LABEL_75;
          }
          uint64_t v55 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v41, v55);
          uint64_t v56 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v57 = v41 + *(int *)(v56 + 24);
          swift_bridgeObjectRelease();
          unint64_t v58 = *(void *)(v57 + 24);
          if (v58 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v57 + 16), v58);
          }
          swift_bridgeObjectRelease();
          goto LABEL_74;
        case 3u:
          uint64_t v59 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v60 = v41 + *(int *)(v59 + 24);
          uint64_t v61 = type metadata accessor for PuzzleStreak();
          uint64_t v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 48);
          if (!v62(v60, 1, v61))
          {
            uint64_t v63 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v60, v63);
          }
          v41 += *(int *)(v59 + 28);
          if (!v62(v41, 1, v61))
          {
LABEL_108:
            uint64_t v64 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v41, v64);
          }
          goto LABEL_75;
        default:
          goto LABEL_75;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 240) >= 0x11uLL) {
        goto LABEL_74;
      }
      goto LABEL_75;
    default:
      goto LABEL_75;
  }
}

uint64_t sub_1C0959AE0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(void *)a1 = *(void *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    long long v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v7;
    long long v8 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v8;
    uint64_t v9 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v9;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_174;
  }
  uint64_t v10 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v10;
  uint64_t v11 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v12 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
  uint64_t v13 = v12[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = type metadata accessor for FeedItem(0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v17 = v12;
      uint64_t v18 = v15[1];
      void *v14 = *v15;
      v14[1] = v18;
      uint64_t v19 = v15[3];
      v14[2] = v15[2];
      v14[3] = v19;
      *((unsigned char *)v14 + 32) = *((unsigned char *)v15 + 32);
      uint64_t v20 = v15 + 5;
      unint64_t v21 = v15[6];
      swift_bridgeObjectRetain();
      if (v21 >= 0x11)
      {
        v14[5] = *v20;
        v14[6] = v21;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v14 + 5) = *(_OWORD *)v20;
      }
      uint64_t v12 = v17;
      goto LABEL_172;
    case 1u:
      uint64_t v60 = v12;
      uint64_t v61 = v15[1];
      void *v14 = *v15;
      v14[1] = v61;
      uint64_t v62 = v15[3];
      v14[2] = v15[2];
      v14[3] = v62;
      *((unsigned char *)v14 + 32) = *((unsigned char *)v15 + 32);
      uint64_t v63 = v15[6];
      v14[5] = v15[5];
      v14[6] = v63;
      uint64_t v64 = v15[8];
      v14[7] = v15[7];
      v14[8] = v64;
      unint64_t v65 = v15 + 9;
      unint64_t v66 = v15[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v66 >= 0x11)
      {
        v14[9] = *v65;
        v14[10] = v66;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v14 + 9) = *(_OWORD *)v65;
      }
      uint64_t v12 = v60;
      goto LABEL_172;
    case 2u:
      uint64_t v452 = v12;
      uint64_t v22 = v15[1];
      uint64_t v23 = v14;
      void *v14 = *v15;
      v14[1] = v22;
      uint64_t v24 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v25 = v24[5];
      uint64_t v446 = (char *)v14 + v25;
      uint64_t v26 = (char *)v15 + v25;
      uint64_t v27 = sub_1C151DBAC();
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v446, v26, v27);
      *(void *)((char *)v23 + v24[6]) = *(void *)((char *)v15 + v24[6]);
      uint64_t v29 = v24[7];
      uint64_t v30 = (char *)v23 + v29;
      uint64_t v31 = (char *)v15 + v29;
      *(void *)uint64_t v30 = *(void *)v31;
      _OWORD v30[8] = v31[8];
      uint64_t v32 = v24[8];
      uint64_t v33 = (char *)v23 + v32;
      uint64_t v34 = (char *)v15 + v32;
      unint64_t v35 = *((void *)v34 + 1);
      if (v35 >= 0x11) {
        goto LABEL_56;
      }
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      goto LABEL_57;
    case 3u:
      uint64_t v454 = v12;
      uint64_t v67 = v15[1];
      uint64_t v68 = v14;
      void *v14 = *v15;
      v14[1] = v67;
      v14[2] = v15[2];
      *((unsigned char *)v14 + 24) = *((unsigned char *)v15 + 24);
      uint64_t v69 = v15[5];
      v14[4] = v15[4];
      v14[5] = v69;
      v14[6] = v15[6];
      *((unsigned char *)v14 + 56) = *((unsigned char *)v15 + 56);
      uint64_t v447 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v70 = v447[10];
      uint64_t v71 = (char *)v14 + v70;
      uint64_t v72 = (char *)v15 + v70;
      *uint64_t v71 = *((unsigned char *)v15 + v70);
      v71[1] = *((unsigned char *)v15 + v70 + 1);
      uint64_t v73 = type metadata accessor for FeedHeadline.State(0);
      uint64_t v74 = *(int *)(v73 + 24);
      __dst = &v71[v74];
      uint64_t v429 = (int *)v73;
      uint64_t v75 = &v72[v74];
      uint64_t v76 = (int *)type metadata accessor for SharedItem();
      uint64_t v424 = *((void *)v76 - 1);
      uint64_t v77 = *(unsigned int (**)(char *, uint64_t, int *))(v424 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v77(v75, 1, v76))
      {
        uint64_t v78 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v75, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        uint64_t v201 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16))(__dst, v75, v201);
        __dst[v76[5]] = v75[v76[5]];
        uint64_t v202 = v76[6];
        uint64_t v432 = *(void **)&v75[v202];
        *(void *)&__dst[v202] = v432;
        uint64_t v203 = v76[7];
        uint64_t v438 = &v75[v203];
        uint64_t v444 = &__dst[v203];
        uint64_t v204 = sub_1C1515FDC();
        uint64_t v423 = *(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16);
        id v205 = v432;
        v423(v444, v438, v204);
        (*(void (**)(char *, void, uint64_t, int *))(v424 + 56))(__dst, 0, 1, v76);
      }
      v71[v429[7]] = v72[v429[7]];
      v71[v429[8]] = v72[v429[8]];
      v71[v429[9]] = v72[v429[9]];
      v71[v429[10]] = v72[v429[10]];
      uint64_t v206 = v447[11];
      uint64_t v207 = (char *)v68 + v206;
      uint64_t v208 = (char *)v15 + v206;
      uint64_t v209 = sub_1C151D2DC();
      uint64_t v210 = *(void *)(v209 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48))(v208, 1, v209))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v207, v208, *(void *)(*(void *)(v211 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v207, v208, v209);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v210 + 56))(v207, 0, 1, v209);
      }
      uint64_t v12 = v454;
      uint64_t v218 = v447[12];
      uint64_t v219 = (void *)((char *)v68 + v218);
      uint64_t v220 = (void *)((char *)v15 + v218);
      unint64_t v221 = v220[1];
      if (v221 >= 0x11)
      {
        *uint64_t v219 = *v220;
        v219[1] = v221;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v219 = *(_OWORD *)v220;
      }
      uint64_t v222 = v447[13];
      unint64_t v223 = *(void *)((char *)v15 + v222);
      if (v223 >= 2)
      {
        if (v223 == 2)
        {
          *(void *)((char *)v68 + v222) = 2;
        }
        else
        {
          *(void *)((char *)v68 + v222) = v223;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)((char *)v68 + v222) = v223;
      }
      uint64_t v260 = v447[14];
      long long v261 = *(void **)((char *)v15 + v260);
      *(void *)((char *)v68 + v260) = v261;
      id v262 = v261;
      swift_storeEnumTagMultiPayload();
      goto LABEL_173;
    case 4u:
      uint64_t v36 = v15[1];
      void *v14 = *v15;
      v14[1] = v36;
      *((unsigned char *)v14 + 16) = *((unsigned char *)v15 + 16);
      uint64_t v37 = v15 + 3;
      unint64_t v38 = v15[4];
      uint64_t v453 = v12;
      if (v38 >= 0x11)
      {
        v14[3] = *v37;
        v14[4] = v38;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v14 + 3) = *(_OWORD *)v37;
      }
      uint64_t v134 = v15[6];
      v14[5] = v15[5];
      v14[6] = v134;
      uint64_t v135 = type metadata accessor for FeedWebEmbed();
      uint64_t v136 = *(int *)(v135 + 32);
      uint64_t v449 = (char *)v14 + v136;
      uint64_t v137 = (char *)v15 + v136;
      uint64_t v138 = sub_1C1515FDC();
      uint64_t v139 = *(void *)(v138 - 8);
      id v140 = *(void (**)(char *, char *, void *))(v139 + 16);
      uint64_t v141 = (void *)v138;
      swift_bridgeObjectRetain();
      v140(v449, v137, v141);
      long long v450 = (int *)v135;
      long long v451 = v14;
      uint64_t v142 = *(int *)(v135 + 36);
      uint64_t v143 = (char *)v14 + v142;
      uint64_t v144 = (char *)v15 + v142;
      uint64_t v430 = v140;
      uint64_t v437 = v141;
      if ((*(unsigned int (**)(char *, uint64_t, void *))(v139 + 48))((char *)v15 + v142, 1, v141))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
      }
      else
      {
        v140(v143, v144, v141);
        (*(void (**)(char *, void, uint64_t, void *))(v139 + 56))(v143, 0, 1, v141);
      }
      *(void *)((char *)v14 + v450[10]) = *(void *)((char *)v15 + v450[10]);
      *(void *)((char *)v14 + v450[11]) = *(void *)((char *)v15 + v450[11]);
      uint64_t v177 = v450[12];
      uint64_t v178 = (void *)((char *)v14 + v177);
      uint64_t v443 = (void *)((char *)v15 + v177);
      uint64_t v179 = type metadata accessor for FeedHeadline(0);
      uint64_t v180 = *(void *)(v179 - 8);
      uint64_t v181 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v180 + 48);
      swift_retain();
      swift_retain();
      if (v181(v443, 1, v179))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v178, v443, *(void *)(*(void *)(v182 - 8) + 64));
        int v183 = v451;
      }
      else
      {
        uint64_t v422 = v180;
        uint64_t v425 = (int *)v179;
        uint64_t v189 = v443[1];
        *uint64_t v178 = *v443;
        v178[1] = v189;
        v178[2] = v443[2];
        *((unsigned char *)v178 + 24) = *((unsigned char *)v443 + 24);
        uint64_t v190 = v443[5];
        v178[4] = v443[4];
        v178[5] = v190;
        v178[6] = v443[6];
        *((unsigned char *)v178 + 56) = *((unsigned char *)v443 + 56);
        uint64_t v191 = *(int *)(v179 + 40);
        uint64_t v192 = (char *)v178 + v191;
        id v193 = (char *)v443 + v191;
        *uint64_t v192 = *((unsigned char *)v443 + v191);
        v192[1] = *((unsigned char *)v443 + v191 + 1);
        uint64_t v194 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v195 = *(int *)(v194 + 24);
        uint64_t v420 = &v192[v195];
        uint64_t v421 = (int *)v194;
        uint64_t v196 = &v193[v195];
        uint64_t v197 = (int *)type metadata accessor for SharedItem();
        uint64_t v418 = *((void *)v197 - 1);
        uint64_t v198 = *(unsigned int (**)(char *, uint64_t, int *))(v418 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v198(v196, 1, v197))
        {
          uint64_t v199 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v420, v196, *(void *)(*(void *)(v199 - 8) + 64));
        }
        else
        {
          uint64_t v287 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v287 - 8) + 16))(v420, v196, v287);
          v420[v197[5]] = v196[v197[5]];
          uint64_t v288 = v197[6];
          unint64_t v289 = *(void **)&v196[v288];
          *(void *)&v420[v288] = v289;
          uint64_t v290 = v197[7];
          uint64_t v419 = &v420[v290];
          unint64_t v291 = &v196[v290];
          id v292 = v289;
          v430(v419, v291, v437);
          (*(void (**)(char *, void, uint64_t, int *))(v418 + 56))(v420, 0, 1, v197);
        }
        int v183 = v451;
        v192[v421[7]] = v193[v421[7]];
        v192[v421[8]] = v193[v421[8]];
        v192[v421[9]] = v193[v421[9]];
        v192[v421[10]] = v193[v421[10]];
        uint64_t v293 = v425[11];
        long long v294 = (char *)v178 + v293;
        long long v295 = (char *)v443 + v293;
        uint64_t v296 = sub_1C151D2DC();
        uint64_t v297 = *(void *)(v296 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v297 + 48))(v295, 1, v296))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v294, v295, *(void *)(*(void *)(v298 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v297 + 16))(v294, v295, v296);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v297 + 56))(v294, 0, 1, v296);
        }
        uint64_t v299 = v425[12];
        int v300 = (void *)((char *)v178 + v299);
        unint64_t v301 = (void *)((char *)v443 + v299);
        unint64_t v302 = v301[1];
        if (v302 >= 0x11)
        {
          *int v300 = *v301;
          v300[1] = v302;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)int v300 = *(_OWORD *)v301;
        }
        uint64_t v303 = v425[13];
        unint64_t v304 = *(void *)((char *)v443 + v303);
        if (v304 >= 2)
        {
          if (v304 == 2)
          {
            *(void *)((char *)v178 + v303) = 2;
          }
          else
          {
            *(void *)((char *)v178 + v303) = v304;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v178 + v303) = v304;
        }
        uint64_t v327 = v425[14];
        uint64_t v328 = *(void **)((char *)v443 + v327);
        *(void *)((char *)v178 + v327) = v328;
        uint64_t v329 = *(void (**)(void *, void, uint64_t, int *))(v422 + 56);
        id v330 = v328;
        v329(v178, 0, 1, v425);
      }
      uint64_t v331 = v450[13];
      uint64_t v332 = (void *)((char *)v183 + v331);
      uint64_t v333 = (void *)((char *)v15 + v331);
      uint64_t v334 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v335 = *(void *)(v334 - 8);
      uint64_t v12 = v453;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v335 + 48))(v333, 1, v334))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v332, v333, *(void *)(*(void *)(v336 - 8) + 64));
      }
      else
      {
        int v337 = swift_getEnumCaseMultiPayload();
        uint64_t v338 = *v333;
        if (v337 == 1)
        {
          uint64_t v339 = v333[1];
          *uint64_t v332 = v338;
          v332[1] = v339;
          uint64_t v340 = type metadata accessor for GenericDataVisualization();
          uint64_t v341 = *(int *)(v340 + 20);
          long long v445 = (char *)v332 + v341;
          __dsta = (char *)v333 + v341;
          uint64_t v12 = v453;
          swift_bridgeObjectRetain();
          v430(v445, __dsta, v437);
          *(void *)((char *)v332 + *(int *)(v340 + 24)) = *(uint64_t *)((char *)v333 + *(int *)(v340 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *uint64_t v332 = v338;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v335 + 56))(v332, 0, 1, v334);
      }
      *((unsigned char *)v183 + v450[14]) = *((unsigned char *)v15 + v450[14]);
      goto LABEL_172;
    case 5u:
      uint64_t v79 = v12;
      id v80 = (void *)*v15;
      uint64_t v81 = v15[1];
      void *v14 = *v15;
      v14[1] = v81;
      v14[2] = v15[2];
      *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
      v14[4] = v15[4];
      *((unsigned char *)v14 + 40) = *((unsigned char *)v15 + 40);
      long long v82 = (void *)v15[7];
      v14[6] = v15[6];
      v14[7] = v82;
      *((unsigned char *)v14 + 64) = *((unsigned char *)v15 + 64);
      uint64_t v83 = v15[10];
      id v84 = v80;
      swift_bridgeObjectRetain();
      id v85 = v82;
      if (v83 == 1)
      {
        long long v86 = *(_OWORD *)(v15 + 11);
        *(_OWORD *)(v14 + 9) = *(_OWORD *)(v15 + 9);
        *(_OWORD *)(v14 + 11) = v86;
        *(_OWORD *)(v14 + 13) = *(_OWORD *)(v15 + 13);
      }
      else
      {
        v14[9] = v15[9];
        v14[10] = v83;
        uint64_t v147 = v15[12];
        v14[11] = v15[11];
        v14[12] = v147;
        uint64_t v149 = (void *)v15[13];
        uint64_t v148 = v15[14];
        v14[13] = v149;
        v14[14] = v148;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v150 = v149;
      }
      uint64_t v12 = v79;
      uint64_t v151 = v15 + 15;
      unint64_t v152 = v15[16];
      if (v152 >= 0x11)
      {
        v14[15] = *v151;
        v14[16] = v152;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v14 + 15) = *(_OWORD *)v151;
      }
      *((unsigned char *)v14 + 136) = *((unsigned char *)v15 + 136);
      goto LABEL_172;
    case 6u:
      int v87 = *((unsigned __int8 *)v15 + 281);
      if (v87 == 2)
      {
        uint64_t v230 = v15[1];
        id v88 = v14;
        void *v14 = *v15;
        v14[1] = v230;
        v14[2] = v15[2];
        *((unsigned char *)v14 + 24) = *((unsigned char *)v15 + 24);
        v14[4] = v15[4];
        *((unsigned char *)v14 + 40) = *((unsigned char *)v15 + 40);
        uint64_t v231 = v15[7];
        v14[6] = v15[6];
        v14[7] = v231;
        uint64_t v232 = v15[9];
        v14[8] = v15[8];
        v14[9] = v232;
        uint64_t v233 = v15[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v233 == 1)
        {
          long long v234 = *((_OWORD *)v15 + 8);
          *((_OWORD *)v14 + 7) = *((_OWORD *)v15 + 7);
          *((_OWORD *)v14 + 8) = v234;
          *((unsigned char *)v14 + 144) = *((unsigned char *)v15 + 144);
          long long v235 = *((_OWORD *)v15 + 6);
          *((_OWORD *)v14 + 5) = *((_OWORD *)v15 + 5);
          *((_OWORD *)v14 + 6) = v235;
        }
        else
        {
          char v270 = v87;
          v88[10] = v15[10];
          v88[11] = v233;
          uint64_t v271 = v15[15];
          swift_bridgeObjectRetain();
          if (v271)
          {
            uint64_t v272 = v15[16];
            v88[15] = v271;
            v88[16] = v272;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v271 - 8))((uint64_t)(v88 + 12), (uint64_t)(v15 + 12), v271);
            v88[17] = v15[17];
          }
          else
          {
            long long v366 = *((_OWORD *)v15 + 7);
            *((_OWORD *)v88 + 6) = *((_OWORD *)v15 + 6);
            *((_OWORD *)v88 + 7) = v366;
            *((_OWORD *)v88 + 8) = *((_OWORD *)v15 + 8);
          }
          *((unsigned char *)v88 + 144) = *((unsigned char *)v15 + 144);
          LOBYTE(v87) = v270;
        }
      }
      else
      {
        id v88 = v14;
        id v89 = v12;
        if (v87 == 1)
        {
          long long v90 = (void *)*v15;
          uint64_t v91 = v15[1];
          void *v14 = *v15;
          v14[1] = v91;
          v14[2] = v15[2];
          *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
          v14[4] = v15[4];
          *((unsigned char *)v14 + 40) = *((unsigned char *)v15 + 40);
          uint64_t v92 = (void *)v15[7];
          v14[6] = v15[6];
          v14[7] = v92;
          *((unsigned char *)v14 + 64) = *((unsigned char *)v15 + 64);
          uint64_t v93 = v15[10];
          id v94 = v90;
          swift_bridgeObjectRetain();
          id v95 = v92;
          if (v93 == 1)
          {
            long long v96 = *(_OWORD *)(v15 + 11);
            *(_OWORD *)(v14 + 9) = *(_OWORD *)(v15 + 9);
            *(_OWORD *)(v14 + 11) = v96;
            *(_OWORD *)(v14 + 13) = *(_OWORD *)(v15 + 13);
          }
          else
          {
            v14[9] = v15[9];
            v14[10] = v93;
            uint64_t v264 = v15[12];
            v14[11] = v15[11];
            v14[12] = v264;
            uint64_t v266 = (void *)v15[13];
            uint64_t v265 = v15[14];
            v14[13] = v266;
            v14[14] = v265;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v267 = v266;
          }
          id v268 = v15 + 15;
          unint64_t v269 = v15[16];
          if (v269 >= 0x11)
          {
            v14[15] = *v268;
            v14[16] = v269;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v14 + 15) = *(_OWORD *)v268;
          }
          id v279 = (void *)v15[18];
          *((unsigned char *)v14 + 136) = *((unsigned char *)v15 + 136);
          if (v279)
          {
            uint64_t v280 = v15[19];
            uint64_t v281 = v15[20];
            v14[18] = v279;
            v14[19] = v280;
            v14[20] = v281;
            *((_WORD *)v14 + 84) = *((_WORD *)v15 + 84);
            v14[22] = v15[22];
            *((unsigned char *)v14 + 184) = *((unsigned char *)v15 + 184);
            long long v282 = (void *)v15[25];
            v14[24] = v15[24];
            v14[25] = v282;
            *((unsigned char *)v14 + 208) = *((unsigned char *)v15 + 208);
            uint64_t v283 = v15[28];
            id v284 = v279;
            swift_bridgeObjectRetain();
            id v285 = v282;
            if (v283 == 1)
            {
              long long v286 = *(_OWORD *)(v15 + 29);
              *(_OWORD *)(v14 + 27) = *(_OWORD *)(v15 + 27);
              *(_OWORD *)(v14 + 29) = v286;
              *(_OWORD *)(v14 + 31) = *(_OWORD *)(v15 + 31);
            }
            else
            {
              v14[27] = v15[27];
              v14[28] = v283;
              uint64_t v309 = v15[30];
              v14[29] = v15[29];
              v14[30] = v309;
              uint64_t v311 = (void *)v15[31];
              uint64_t v310 = v15[32];
              v14[31] = v311;
              v14[32] = v310;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v312 = v311;
            }
            uint64_t v12 = v89;
            uint64_t v313 = v15 + 33;
            unint64_t v314 = v15[34];
            if (v314 >= 0x11)
            {
              v14[33] = *v313;
              v14[34] = v314;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v14 + 33) = *(_OWORD *)v313;
            }
            *((unsigned char *)v14 + 280) = *((unsigned char *)v15 + 280);
          }
          else
          {
            long long v305 = *((_OWORD *)v15 + 16);
            *((_OWORD *)v14 + 15) = *((_OWORD *)v15 + 15);
            *((_OWORD *)v14 + 16) = v305;
            *(_OWORD *)((char *)v14 + 265) = *(_OWORD *)((char *)v15 + 265);
            long long v306 = *((_OWORD *)v15 + 12);
            *((_OWORD *)v14 + 11) = *((_OWORD *)v15 + 11);
            *((_OWORD *)v14 + 12) = v306;
            long long v307 = *((_OWORD *)v15 + 14);
            *((_OWORD *)v14 + 13) = *((_OWORD *)v15 + 13);
            *((_OWORD *)v14 + 14) = v307;
            long long v308 = *((_OWORD *)v15 + 10);
            *((_OWORD *)v14 + 9) = *((_OWORD *)v15 + 9);
            *((_OWORD *)v14 + 10) = v308;
            uint64_t v12 = v89;
          }
        }
        else
        {
          int v236 = (void *)*v15;
          uint64_t v237 = v15[1];
          void *v14 = *v15;
          v14[1] = v237;
          v14[2] = v15[2];
          *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
          v14[4] = v15[4];
          *((unsigned char *)v14 + 40) = *((unsigned char *)v15 + 40);
          uint64_t v238 = (void *)v15[7];
          v14[6] = v15[6];
          v14[7] = v238;
          *((unsigned char *)v14 + 64) = *((unsigned char *)v15 + 64);
          uint64_t v239 = v15[10];
          id v240 = v236;
          swift_bridgeObjectRetain();
          id v241 = v238;
          if (v239 == 1)
          {
            long long v242 = *(_OWORD *)(v15 + 11);
            *(_OWORD *)(v14 + 9) = *(_OWORD *)(v15 + 9);
            *(_OWORD *)(v14 + 11) = v242;
            *(_OWORD *)(v14 + 13) = *(_OWORD *)(v15 + 13);
          }
          else
          {
            v14[9] = v15[9];
            v14[10] = v239;
            uint64_t v273 = v15[12];
            v14[11] = v15[11];
            v14[12] = v273;
            long long v275 = (void *)v15[13];
            uint64_t v274 = v15[14];
            v14[13] = v275;
            v14[14] = v274;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v276 = v275;
          }
          uint64_t v12 = v89;
          uint64_t v277 = v15 + 15;
          unint64_t v278 = v15[16];
          if (v278 >= 0x11)
          {
            v14[15] = *v277;
            v14[16] = v278;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v14 + 15) = *(_OWORD *)v277;
          }
          *((unsigned char *)v14 + 136) = *((unsigned char *)v15 + 136);
        }
      }
      *((unsigned char *)v88 + 281) = v87;
      goto LABEL_172;
    case 7u:
      uint64_t v97 = v15[1];
      void *v14 = *v15;
      v14[1] = v97;
      v14[2] = v15[2];
      *((unsigned char *)v14 + 24) = *((unsigned char *)v15 + 24);
      v14[4] = v15[4];
      *((unsigned char *)v14 + 40) = *((unsigned char *)v15 + 40);
      uint64_t v98 = v15[7];
      v14[6] = v15[6];
      v14[7] = v98;
      uint64_t v99 = v15[9];
      v14[8] = v15[8];
      v14[9] = v99;
      uint64_t v100 = v15[11];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v100 == 1)
      {
        long long v101 = *((_OWORD *)v15 + 8);
        *((_OWORD *)v14 + 7) = *((_OWORD *)v15 + 7);
        *((_OWORD *)v14 + 8) = v101;
        *((unsigned char *)v14 + 144) = *((unsigned char *)v15 + 144);
        long long v102 = *((_OWORD *)v15 + 6);
        *((_OWORD *)v14 + 5) = *((_OWORD *)v15 + 5);
        *((_OWORD *)v14 + 6) = v102;
      }
      else
      {
        v14[10] = v15[10];
        v14[11] = v100;
        uint64_t v153 = v15[15];
        swift_bridgeObjectRetain();
        if (v153)
        {
          uint64_t v154 = v15[16];
          v14[15] = v153;
          v14[16] = v154;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v153 - 8))((uint64_t)(v14 + 12), (uint64_t)(v15 + 12), v153);
          v14[17] = v15[17];
        }
        else
        {
          long long v263 = *((_OWORD *)v15 + 7);
          *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
          *((_OWORD *)v14 + 7) = v263;
          *((_OWORD *)v14 + 8) = *((_OWORD *)v15 + 8);
        }
        *((unsigned char *)v14 + 144) = *((unsigned char *)v15 + 144);
      }
      goto LABEL_172;
    case 8u:
      int v455 = v12;
      uint64_t v103 = v15[1];
      void *v14 = *v15;
      v14[1] = v103;
      uint64_t v104 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v105 = (void *)((char *)v14 + v104);
      long long v106 = (void *)((char *)v15 + v104);
      uint64_t v107 = v106[1];
      *uint64_t v105 = *v106;
      v105[1] = v107;
      uint64_t v108 = v106[3];
      v105[2] = v106[2];
      v105[3] = v108;
      uint64_t v109 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v110 = *(int *)(v109 + 24);
      uint64_t v436 = (char *)v105 + v110;
      uint64_t v442 = v109;
      long long v111 = (char *)v106 + v110;
      uint64_t v112 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v431 = *(void *)(v112 - 8);
      unint64_t v113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v431 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v113(v111, 1, v112))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v436, v111, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        uint64_t v212 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 16))(v436, v111, v212);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v431 + 56))(v436, 0, 1, v112);
      }
      uint64_t v12 = v455;
      *(void *)((char *)v105 + *(int *)(v442 + 28)) = *(void *)((char *)v106 + *(int *)(v442 + 28));
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_173;
    case 9u:
      uint64_t v39 = v12;
      uint64_t v40 = v15[1];
      void *v14 = *v15;
      v14[1] = v40;
      uint64_t v41 = v15[3];
      v14[2] = v15[2];
      v14[3] = v41;
      uint64_t v42 = v15[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v42)
      {
        uint64_t v43 = v15[8];
        v14[7] = v42;
        v14[8] = v43;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v42 - 8))((uint64_t)(v14 + 4), (uint64_t)(v15 + 4), v42);
      }
      else
      {
        long long v172 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v172;
        v14[8] = v15[8];
      }
      uint64_t v173 = v14 + 9;
      uint64_t v174 = v15 + 9;
      uint64_t v175 = v15[12];
      uint64_t v12 = v39;
      if (v175)
      {
        uint64_t v176 = v15[13];
        v14[12] = v175;
        v14[13] = v176;
        (**(void (***)(_OWORD *, _OWORD *))(v175 - 8))(v173, v174);
      }
      else
      {
        long long v184 = *(_OWORD *)(v15 + 11);
        *uint64_t v173 = *v174;
        *(_OWORD *)(v14 + 11) = v184;
        v14[13] = v15[13];
      }
      uint64_t v185 = v14 + 14;
      uint64_t v186 = v15 + 14;
      uint64_t v187 = v15[17];
      if (v187)
      {
        uint64_t v188 = v15[18];
        v14[17] = v187;
        v14[18] = v188;
        (**(void (***)(_OWORD *, _OWORD *))(v187 - 8))(v185, v186);
      }
      else
      {
        long long v200 = *((_OWORD *)v15 + 8);
        *uint64_t v185 = *v186;
        *((_OWORD *)v14 + 8) = v200;
        v14[18] = v15[18];
      }
      goto LABEL_172;
    case 0xAu:
      uint64_t v452 = v12;
      uint64_t v115 = v15[1];
      long long v116 = v14;
      void *v14 = *v15;
      v14[1] = v115;
      uint64_t v117 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v118 = v117[5];
      long long v448 = (char *)v14 + v118;
      char v119 = (char *)v15 + v118;
      uint64_t v120 = sub_1C151959C();
      uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
      swift_bridgeObjectRetain();
      v121(v448, v119, v120);
      *(void *)((char *)v116 + v117[6]) = *(void *)((char *)v15 + v117[6]);
      uint64_t v122 = v117[7];
      unint64_t v123 = (char *)v116 + v122;
      uint64_t v124 = (char *)v15 + v122;
      *(void *)unint64_t v123 = *(void *)v124;
      v123[8] = v124[8];
      uint64_t v125 = v117[8];
      uint64_t v33 = (char *)v116 + v125;
      uint64_t v34 = (char *)v15 + v125;
      unint64_t v35 = *((void *)v34 + 1);
      if (v35 >= 0x11)
      {
LABEL_56:
        *(void *)uint64_t v33 = *(void *)v34;
        *((void *)v33 + 1) = v35;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      }
      goto LABEL_57;
    case 0xBu:
      void *v14 = *v15;
      swift_retain();
      goto LABEL_172;
    case 0xCu:
      uint64_t v44 = v15[1];
      void *v14 = *v15;
      v14[1] = v44;
      uint64_t v45 = v15[3];
      v14[2] = v15[2];
      v14[3] = v45;
      *((unsigned char *)v14 + 32) = *((unsigned char *)v15 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_172;
    case 0xDu:
      uint64_t v126 = v15[1];
      uint64_t v127 = v14;
      void *v14 = *v15;
      v14[1] = v126;
      *((unsigned char *)v14 + 16) = *((unsigned char *)v15 + 16);
      uint64_t v128 = v15 + 3;
      unint64_t v129 = v15[4];
      if (v129 >= 0x11)
      {
        v14[3] = *v128;
        v14[4] = v129;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v14 + 3) = *(_OWORD *)v128;
      }
      uint64_t v155 = v15[6];
      v14[5] = v15[5];
      v14[6] = v155;
      uint64_t v156 = (void *)v15[8];
      v127[7] = v15[7];
      v127[8] = v156;
      *((unsigned char *)v127 + 72) = *((unsigned char *)v15 + 72);
      v127[10] = v15[10];
      uint64_t v157 = v15[14];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v158 = v156;
      swift_bridgeObjectRetain();
      if (v157)
      {
        uint64_t v159 = v15[15];
        v127[14] = v157;
        v127[15] = v159;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v157 - 8))((uint64_t)(v127 + 11), (uint64_t)(v15 + 11), v157);
      }
      else
      {
        long long v213 = *(_OWORD *)(v15 + 13);
        *(_OWORD *)(v127 + 11) = *(_OWORD *)(v15 + 11);
        *(_OWORD *)(v127 + 13) = v213;
        v127[15] = v15[15];
      }
      long long v214 = v127 + 16;
      uint64_t v215 = v15 + 16;
      uint64_t v216 = v15[19];
      if (v216)
      {
        uint64_t v217 = v15[20];
        v127[19] = v216;
        v127[20] = v217;
        (**(void (***)(_OWORD *, _OWORD *))(v216 - 8))(v214, v215);
      }
      else
      {
        long long v224 = *((_OWORD *)v15 + 9);
        *long long v214 = *v215;
        *((_OWORD *)v127 + 9) = v224;
        v127[20] = v15[20];
      }
      uint64_t v225 = v127 + 21;
      uint64_t v226 = v15 + 21;
      uint64_t v227 = v15[24];
      if (v227)
      {
        uint64_t v228 = v15[25];
        v127[24] = v227;
        v127[25] = v228;
        (**(void (***)(_OWORD *, _OWORD *))(v227 - 8))(v225, v226);
      }
      else
      {
        long long v229 = *(_OWORD *)(v15 + 23);
        *uint64_t v225 = *v226;
        *(_OWORD *)(v127 + 23) = v229;
        v127[25] = v15[25];
      }
LABEL_172:
      swift_storeEnumTagMultiPayload();
      goto LABEL_173;
    case 0xEu:
      uint64_t v46 = v15[1];
      void *v14 = *v15;
      v14[1] = v46;
      *((unsigned char *)v14 + 16) = *((unsigned char *)v15 + 16);
      uint64_t v47 = v15 + 3;
      unint64_t v48 = v15[4];
      if (v48 >= 0x11)
      {
        v14[3] = *v47;
        v14[4] = v48;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v14 + 3) = *(_OWORD *)v47;
      }
      uint64_t v146 = v15[6];
      v14[5] = v15[5];
      v14[6] = v146;
      v14[7] = v15[7];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_173;
    case 0xFu:
      uint64_t v130 = v15[1];
      void *v14 = *v15;
      v14[1] = v130;
      *((unsigned char *)v14 + 16) = *((unsigned char *)v15 + 16);
      uint64_t v131 = v15 + 3;
      unint64_t v132 = v15[4];
      uint64_t v133 = v12;
      if (v132 >= 0x11)
      {
        v14[3] = *v131;
        v14[4] = v132;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v14 + 3) = *(_OWORD *)v131;
      }
      break;
    case 0x10u:
      uint64_t v452 = v12;
      uint64_t v49 = v15[1];
      void *v14 = *v15;
      v14[1] = v49;
      uint64_t v50 = v15[3];
      v14[2] = v15[2];
      v14[3] = v50;
      uint64_t v51 = v15[5];
      v14[4] = v15[4];
      v14[5] = v51;
      *((_WORD *)v14 + 24) = *((_WORD *)v15 + 24);
      *(_OWORD *)(v14 + 7) = *(_OWORD *)(v15 + 7);
      uint64_t v52 = v15[10];
      v14[9] = v15[9];
      v14[10] = v52;
      uint64_t v53 = v15[12];
      v14[11] = v15[11];
      v14[12] = v53;
      v14[13] = v15[13];
      *((unsigned char *)v14 + 112) = *((unsigned char *)v15 + 112);
      uint64_t v54 = v15[16];
      v14[15] = v15[15];
      v14[16] = v54;
      *((unsigned char *)v14 + 136) = *((unsigned char *)v15 + 136);
      uint64_t v55 = v15[19];
      v14[18] = v15[18];
      v14[19] = v55;
      uint64_t v56 = v15[21];
      v14[20] = v15[20];
      v14[21] = v56;
      *((unsigned char *)v14 + 184) = *((unsigned char *)v15 + 184);
      v14[22] = v15[22];
      uint64_t v57 = v15[25];
      v14[24] = v15[24];
      v14[25] = v57;
      *((unsigned char *)v14 + 224) = *((unsigned char *)v15 + 224);
      uint64_t v58 = v15[27];
      v14[26] = v15[26];
      v14[27] = v58;
      uint64_t v428 = v15 + 29;
      unint64_t v59 = v15[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v59 >= 0x11)
      {
        v14[29] = *v428;
        v14[30] = v59;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v14 + 29) = *(_OWORD *)v428;
      }
LABEL_57:
      uint64_t v12 = v452;
      swift_storeEnumTagMultiPayload();
      goto LABEL_173;
    default:
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      goto LABEL_173;
  }
  uint64_t v160 = v15[6];
  v14[5] = v15[5];
  v14[6] = v160;
  uint64_t v161 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v162 = (char *)v14 + v161;
  uint64_t v163 = (void *)((char *)v15 + v161);
  *(void *)((char *)v14 + v161) = *v163;
  uint64_t v164 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v165 = &v162[v164];
  uint64_t v166 = (void *)((char *)v163 + v164);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v12 = v133;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v246 = type metadata accessor for PuzzleStatisticValue(0);
      int v247 = swift_getEnumCaseMultiPayload();
      int v439 = (void *)v246;
      if (v247 == 5)
      {
        uint64_t v248 = v133;
        uint64_t v363 = type metadata accessor for PuzzleStreak();
        uint64_t v364 = *(void *)(v363 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v364 + 48))(v166, 1, v363))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v165, v166, *(void *)(*(void *)(v365 - 8) + 64));
        }
        else
        {
          uint64_t v386 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v386 - 8) + 16))(v165, v166, v386);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v364 + 56))(v165, 0, 1, v363);
        }
        uint64_t v246 = (uint64_t)v439;
      }
      else
      {
        if (v247 != 4)
        {
          memcpy(v165, v166, *(void *)(*(void *)(v246 - 8) + 64));
          goto LABEL_186;
        }
        uint64_t v248 = v133;
        uint64_t v249 = type metadata accessor for PuzzleStreak();
        uint64_t v250 = *(void *)(v249 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v250 + 48))(v166, 1, v249))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v165, v166, *(void *)(*(void *)(v251 - 8) + 64));
        }
        else
        {
          uint64_t v384 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v384 - 8) + 16))(v165, v166, v384);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v250 + 56))(v165, 0, 1, v249);
        }
        uint64_t v246 = (uint64_t)v439;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v12 = v248;
LABEL_186:
      uint64_t v387 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v388 = *(int *)(v387 + 20);
      long long v389 = v165;
      uint64_t v390 = &v165[v388];
      uint64_t v391 = (char *)v166 + v388;
      int v392 = swift_getEnumCaseMultiPayload();
      if (v392 == 5)
      {
        uint64_t v435 = v387;
        uint64_t v397 = v12;
        uint64_t v398 = type metadata accessor for PuzzleStreak();
        uint64_t v399 = *(void *)(v398 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v399 + 48))(v391, 1, v398))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v390, v391, *(void *)(*(void *)(v400 - 8) + 64));
        }
        else
        {
          uint64_t v403 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v403 - 8) + 16))(v390, v391, v403);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v399 + 56))(v390, 0, 1, v398);
        }
        uint64_t v12 = v397;
        uint64_t v246 = (uint64_t)v439;
      }
      else
      {
        if (v392 != 4)
        {
          memcpy(v390, v391, *(void *)(*(void *)(v246 - 8) + 64));
          uint64_t v401 = v389;
          goto LABEL_198;
        }
        uint64_t v435 = v387;
        uint64_t v393 = v12;
        uint64_t v394 = type metadata accessor for PuzzleStreak();
        uint64_t v395 = *(void *)(v394 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v395 + 48))(v391, 1, v394))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v390, v391, *(void *)(*(void *)(v396 - 8) + 64));
        }
        else
        {
          uint64_t v402 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v402 - 8) + 16))(v390, v391, v402);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v395 + 56))(v390, 0, 1, v394);
        }
        uint64_t v12 = v393;
        uint64_t v246 = (uint64_t)v439;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v401 = v389;
      uint64_t v387 = v435;
LABEL_198:
      uint64_t v404 = *(int *)(v387 + 24);
      int v405 = (char *)v401 + v404;
      int v406 = (char *)v166 + v404;
      int v407 = swift_getEnumCaseMultiPayload();
      if (v407 == 5)
      {
        v412 = v12;
        uint64_t v413 = type metadata accessor for PuzzleStreak();
        uint64_t v414 = *(void *)(v413 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v414 + 48))(v406, 1, v413))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v405, v406, *(void *)(*(void *)(v415 - 8) + 64));
        }
        else
        {
          uint64_t v417 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v417 - 8) + 16))(v405, v406, v417);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v414 + 56))(v405, 0, 1, v413);
        }
        uint64_t v12 = v412;
        goto LABEL_209;
      }
      if (v407 == 4)
      {
        uint64_t v408 = v12;
        uint64_t v409 = type metadata accessor for PuzzleStreak();
        uint64_t v410 = *(void *)(v409 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v410 + 48))(v406, 1, v409))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v405, v406, *(void *)(*(void *)(v411 - 8) + 64));
        }
        else
        {
          uint64_t v416 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v416 - 8) + 16))(v405, v406, v416);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v410 + 56))(v405, 0, 1, v409);
        }
        uint64_t v12 = v408;
        goto LABEL_209;
      }
      memcpy(v405, v406, *(void *)(*(void *)(v246 - 8) + 64));
LABEL_210:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
LABEL_173:
      uint64_t v367 = v12[8];
      uint64_t v368 = (_OWORD *)(a1 + v367);
      uint64_t v369 = (_OWORD *)(a2 + v367);
      long long v370 = v369[1];
      *uint64_t v368 = *v369;
      v368[1] = v370;
      uint64_t v371 = v12[9];
      int v372 = (_OWORD *)(a1 + v371);
      uint64_t v373 = (_OWORD *)(a2 + v371);
      long long v374 = v373[1];
      *int v372 = *v373;
      v372[1] = v374;
      sub_1C0955B70();
      *(void *)(a1 + *(int *)(v375 + 48)) = *(void *)(a2 + *(int *)(v375 + 48));
LABEL_174:
      swift_retain();
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2u:
      uint64_t v243 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v244 = *((void *)v243 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v244 + 48))(v166, 1, v243))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        memcpy(v165, v166, *(void *)(*(void *)(v245 - 8) + 64));
      }
      else
      {
        uint64_t v434 = v244;
        uint64_t v458 = v12;
        uint64_t v315 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v315 - 8) + 16))(v165, v166, v315);
        id v316 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v317 = v316[5];
        uint64_t v318 = &v165[v317];
        uint64_t v319 = (void *)((char *)v166 + v317);
        uint64_t v320 = v319[1];
        *(void *)uint64_t v318 = *v319;
        *((void *)v318 + 1) = v320;
        uint64_t v321 = v316[6];
        uint64_t v441 = v165;
        uint64_t v322 = &v165[v321];
        int v323 = (void *)((char *)v166 + v321);
        uint64_t v324 = v323[1];
        *(void *)uint64_t v322 = *v323;
        *((void *)v322 + 1) = v324;
        uint64_t v325 = v323 + 2;
        unint64_t v326 = v323[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v326 >> 60 == 15)
        {
          *((_OWORD *)v322 + 1) = *(_OWORD *)v325;
        }
        else
        {
          uint64_t v377 = *v325;
          sub_1BFE95820(*v325, v326);
          *((void *)v322 + 2) = v377;
          *((void *)v322 + 3) = v326;
        }
        *(void *)&v441[v316[7]] = *(void *)((char *)v166 + v316[7]);
        *(void *)&v441[v316[8]] = *(void *)((char *)v166 + v316[8]);
        *(void *)&v441[v243[5]] = *(void *)((char *)v166 + v243[5]);
        *(void *)&v441[v243[6]] = *(void *)((char *)v166 + v243[6]);
        uint64_t v378 = v243[7];
        uint64_t v379 = &v441[v378];
        uint64_t v380 = (void *)((char *)v166 + v378);
        uint64_t v381 = v380[1];
        *(void *)uint64_t v379 = *v380;
        *((void *)v379 + 1) = v381;
        uint64_t v382 = *(void (**)(char *, void, uint64_t, int *))(v434 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v382(v441, 0, 1, v243);
        uint64_t v12 = v458;
      }
      goto LABEL_210;
    case 3u:
      uint64_t v457 = v133;
      uint64_t v252 = v166[1];
      *(void *)uint64_t v165 = *v166;
      *((void *)v165 + 1) = v252;
      v165[16] = *((unsigned char *)v166 + 16);
      unint64_t v253 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v254 = v253[6];
      uint64_t v440 = v165;
      uint64_t v255 = &v165[v254];
      unint64_t v256 = (char *)v166 + v254;
      uint64_t v257 = type metadata accessor for PuzzleStreak();
      uint64_t v258 = *(void *)(v257 - 8);
      uint64_t v433 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v258 + 48);
      if (v433(v256, 1, v257))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v255, v256, *(void *)(*(void *)(v259 - 8) + 64));
      }
      else
      {
        uint64_t v342 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 16))(v255, v256, v342);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v258 + 56))(v255, 0, 1, v257);
      }
      uint64_t v343 = v253[7];
      long long v344 = &v440[v343];
      uint64_t v345 = (char *)v166 + v343;
      if (v433((char *)v166 + v343, 1, v257))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v344, v345, *(void *)(*(void *)(v346 - 8) + 64));
      }
      else
      {
        uint64_t v347 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 16))(v344, v345, v347);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v258 + 56))(v344, 0, 1, v257);
      }
      uint64_t v12 = v457;
      uint64_t v348 = v253[8];
      long long v349 = &v440[v348];
      uint64_t v350 = (_OWORD *)((char *)v166 + v348);
      long long v351 = v350[1];
      *(_OWORD *)long long v349 = *v350;
      *((_OWORD *)v349 + 1) = v351;
      *(_OWORD *)(v349 + 25) = *(_OWORD *)((char *)v350 + 25);
      uint64_t v352 = v253[9];
      uint64_t v353 = &v440[v352];
      uint64_t v354 = (_OWORD *)((char *)v166 + v352);
      *(_OWORD *)(v353 + 25) = *(_OWORD *)((char *)v354 + 25);
      long long v355 = v354[1];
      *(_OWORD *)uint64_t v353 = *v354;
      *((_OWORD *)v353 + 1) = v355;
      uint64_t v356 = v253[10];
      uint64_t v357 = &v440[v356];
      uint64_t v358 = (_OWORD *)((char *)v166 + v356);
      long long v359 = v358[1];
      *(_OWORD *)uint64_t v357 = *v358;
      *((_OWORD *)v357 + 1) = v359;
      *(_OWORD *)(v357 + 25) = *(_OWORD *)((char *)v358 + 25);
      goto LABEL_210;
    default:
      uint64_t v167 = type metadata accessor for PuzzleStatisticValue(0);
      int v168 = swift_getEnumCaseMultiPayload();
      if (v168 == 5)
      {
        uint64_t v459 = v12;
        uint64_t v360 = type metadata accessor for PuzzleStreak();
        uint64_t v361 = *(void *)(v360 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v361 + 48))(v166, 1, v360))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v165, v166, *(void *)(*(void *)(v362 - 8) + 64));
        }
        else
        {
          uint64_t v385 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v385 - 8) + 16))(v165, v166, v385);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v361 + 56))(v165, 0, 1, v360);
        }
        uint64_t v12 = v459;
      }
      else
      {
        if (v168 != 4)
        {
          memcpy(v165, v166, *(void *)(*(void *)(v167 - 8) + 64));
          goto LABEL_210;
        }
        int v456 = v12;
        uint64_t v169 = type metadata accessor for PuzzleStreak();
        uint64_t v170 = *(void *)(v169 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v170 + 48))(v166, 1, v169))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v165, v166, *(void *)(*(void *)(v171 - 8) + 64));
        }
        else
        {
          uint64_t v383 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v383 - 8) + 16))(v165, v166, v383);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v165, 0, 1, v169);
        }
        uint64_t v12 = v456;
      }
LABEL_209:
      swift_storeEnumTagMultiPayload();
      goto LABEL_210;
  }
}

uint64_t sub_1C095C83C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C0955EC8(a1, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      long long v5 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v5;
      long long v6 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v6;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_160:
      swift_retain();
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    long long v7 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
    uint64_t v8 = v7[7];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    uint64_t v11 = type metadata accessor for FeedItem(0);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = v7;
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        uint64_t v13 = v10[3];
        *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
        v9[3] = v13;
        unint64_t v14 = v10[6];
        swift_bridgeObjectRetain();
        if (v14 >= 0x11)
        {
          v9[5] = v10[5];
          v9[6] = v10[6];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
        }
        long long v7 = v12;
        goto LABEL_158;
      case 1u:
        uint64_t v34 = v7;
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        uint64_t v35 = v10[3];
        *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
        v9[3] = v35;
        v9[5] = v10[5];
        v9[6] = v10[6];
        v9[7] = v10[7];
        v9[8] = v10[8];
        unint64_t v36 = v10[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v36 >= 0x11)
        {
          v9[9] = v10[9];
          v9[10] = v10[10];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 9);
        }
        long long v7 = v34;
        goto LABEL_158;
      case 2u:
        uint64_t v391 = v7;
        uint64_t v15 = v9;
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        uint64_t v16 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v17 = v16[5];
        uint64_t v384 = (char *)v9 + v17;
        uint64_t v18 = (char *)v10 + v17;
        uint64_t v19 = sub_1C151DBAC();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v384, v18, v19);
        *(void *)((char *)v15 + v16[6]) = *(void *)((char *)v10 + v16[6]);
        uint64_t v21 = v16[7];
        uint64_t v22 = (char *)v15 + v21;
        uint64_t v23 = (char *)v10 + v21;
        char v24 = v23[8];
        *(void *)uint64_t v22 = *(void *)v23;
        v22[8] = v24;
        uint64_t v25 = v16[8];
        uint64_t v26 = (char *)v15 + v25;
        uint64_t v27 = (char *)v10 + v25;
        if (*((void *)v27 + 1) >= 0x11uLL) {
          goto LABEL_56;
        }
        *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        goto LABEL_57;
      case 3u:
        uint64_t v393 = v7;
        uint64_t v37 = v9;
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        uint64_t v38 = v10[2];
        *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
        v9[2] = v38;
        void v9[4] = v10[4];
        v9[5] = v10[5];
        v9[6] = v10[6];
        *((unsigned char *)v9 + 56) = *((unsigned char *)v10 + 56);
        uint64_t v385 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v39 = v385[10];
        uint64_t v40 = (char *)v9 + v39;
        uint64_t v41 = (char *)v10 + v39;
        unsigned char *v40 = *((unsigned char *)v10 + v39);
        v40[1] = *((unsigned char *)v10 + v39 + 1);
        uint64_t v381 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v42 = v381[6];
        __dst = &v40[v42];
        uint64_t v43 = &v41[v42];
        uint64_t v44 = (int *)type metadata accessor for SharedItem();
        uint64_t v363 = *((void *)v44 - 1);
        uint64_t v45 = *(unsigned int (**)(char *, uint64_t, int *))(v363 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v45(v43, 1, v44))
        {
          uint64_t v46 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v43, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          uint64_t v150 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(__dst, v43, v150);
          __dst[v44[5]] = v43[v44[5]];
          uint64_t v151 = v44[6];
          uint64_t v368 = *(void **)&v43[v151];
          *(void *)&__dst[v151] = v368;
          uint64_t v152 = v44[7];
          uint64_t v371 = &v43[v152];
          uint64_t v377 = &__dst[v152];
          uint64_t v153 = sub_1C1515FDC();
          uint64_t v362 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16);
          id v154 = v368;
          v362(v377, v371, v153);
          (*(void (**)(char *, void, uint64_t, int *))(v363 + 56))(__dst, 0, 1, v44);
        }
        v40[v381[7]] = v41[v381[7]];
        v40[v381[8]] = v41[v381[8]];
        v40[v381[9]] = v41[v381[9]];
        v40[v381[10]] = v41[v381[10]];
        uint64_t v155 = v385[11];
        uint64_t v156 = (char *)v37 + v155;
        uint64_t v157 = (char *)v10 + v155;
        uint64_t v158 = sub_1C151D2DC();
        uint64_t v159 = *(void *)(v158 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48))(v157, 1, v158))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v156, v157, *(void *)(*(void *)(v160 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v156, v157, v158);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v159 + 56))(v156, 0, 1, v158);
        }
        long long v7 = v393;
        uint64_t v167 = v385[12];
        int v168 = (void *)((char *)v37 + v167);
        uint64_t v169 = (void *)((char *)v10 + v167);
        if (v169[1] >= 0x11uLL)
        {
          *int v168 = *v169;
          v168[1] = v169[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)int v168 = *(_OWORD *)v169;
        }
        uint64_t v170 = v385[13];
        unint64_t v171 = *(void *)((char *)v10 + v170);
        if (v171 >= 2)
        {
          if (v171 == 2)
          {
            *(void *)((char *)v37 + v170) = 2;
          }
          else
          {
            *(void *)((char *)v37 + v170) = v171;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v37 + v170) = v171;
        }
        uint64_t v209 = v385[14];
        uint64_t v210 = *(void **)((char *)v10 + v209);
        *(void *)((char *)v37 + v209) = v210;
        id v211 = v210;
        swift_storeEnumTagMultiPayload();
        goto LABEL_159;
      case 4u:
        *uint64_t v9 = *v10;
        uint64_t v28 = v10[1];
        *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
        v9[1] = v28;
        int v392 = v7;
        if (v10[4] >= 0x11uLL)
        {
          v9[3] = v10[3];
          void v9[4] = v10[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v9 + 3) = *(_OWORD *)(v10 + 3);
        }
        v9[5] = v10[5];
        v9[6] = v10[6];
        uint64_t v92 = type metadata accessor for FeedWebEmbed();
        uint64_t v93 = *(int *)(v92 + 32);
        uint64_t v388 = (char *)v9 + v93;
        id v94 = (char *)v10 + v93;
        uint64_t v95 = sub_1C1515FDC();
        uint64_t v96 = *(void *)(v95 - 8);
        uint64_t v97 = *(void (**)(char *, char *, void *))(v96 + 16);
        uint64_t v98 = (void *)v95;
        swift_bridgeObjectRetain();
        v97(v388, v94, v98);
        long long v389 = (int *)v92;
        uint64_t v390 = v9;
        uint64_t v99 = *(int *)(v92 + 36);
        uint64_t v100 = (char *)v9 + v99;
        long long v101 = (char *)v10 + v99;
        uint64_t v367 = v97;
        uint64_t v376 = v98;
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v96 + 48))((char *)v10 + v99, 1, v98))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          v97(v100, v101, v98);
          (*(void (**)(char *, void, uint64_t, void *))(v96 + 56))(v100, 0, 1, v98);
        }
        *(void *)((char *)v9 + v389[10]) = *(void *)((char *)v10 + v389[10]);
        *(void *)((char *)v9 + v389[11]) = *(void *)((char *)v10 + v389[11]);
        uint64_t v126 = v389[12];
        uint64_t v127 = (void *)((char *)v9 + v126);
        uint64_t v382 = (void *)((char *)v10 + v126);
        uint64_t v128 = type metadata accessor for FeedHeadline(0);
        uint64_t v129 = *(void *)(v128 - 8);
        uint64_t v130 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v129 + 48);
        swift_retain();
        swift_retain();
        if (v130(v382, 1, v128))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v127, v382, *(void *)(*(void *)(v131 - 8) + 64));
          unint64_t v132 = v390;
        }
        else
        {
          uint64_t v361 = v129;
          uint64_t v364 = (int *)v128;
          *uint64_t v127 = *v382;
          v127[1] = v382[1];
          uint64_t v138 = v382[2];
          *((unsigned char *)v127 + 24) = *((unsigned char *)v382 + 24);
          v127[2] = v138;
          v127[4] = v382[4];
          v127[5] = v382[5];
          v127[6] = v382[6];
          *((unsigned char *)v127 + 56) = *((unsigned char *)v382 + 56);
          uint64_t v139 = *(int *)(v128 + 40);
          id v140 = (char *)v127 + v139;
          uint64_t v141 = (char *)v382 + v139;
          *id v140 = *((unsigned char *)v382 + v139);
          v140[1] = *((unsigned char *)v382 + v139 + 1);
          uint64_t v142 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v143 = *(int *)(v142 + 24);
          long long v359 = &v140[v143];
          uint64_t v360 = (int *)v142;
          uint64_t v144 = &v141[v143];
          uint64_t v145 = (int *)type metadata accessor for SharedItem();
          uint64_t v357 = *((void *)v145 - 1);
          uint64_t v146 = *(unsigned int (**)(char *, uint64_t, int *))(v357 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v146(v144, 1, v145))
          {
            uint64_t v147 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v359, v144, *(void *)(*(void *)(v147 - 8) + 64));
          }
          else
          {
            uint64_t v229 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16))(v359, v144, v229);
            v359[v145[5]] = v144[v145[5]];
            uint64_t v230 = v145[6];
            uint64_t v231 = *(void **)&v144[v230];
            *(void *)&v359[v230] = v231;
            uint64_t v232 = v145[7];
            uint64_t v358 = &v359[v232];
            uint64_t v233 = &v144[v232];
            id v234 = v231;
            v367(v358, v233, v376);
            (*(void (**)(char *, void, uint64_t, int *))(v357 + 56))(v359, 0, 1, v145);
          }
          unint64_t v132 = v390;
          v140[v360[7]] = v141[v360[7]];
          v140[v360[8]] = v141[v360[8]];
          v140[v360[9]] = v141[v360[9]];
          v140[v360[10]] = v141[v360[10]];
          uint64_t v235 = v364[11];
          int v236 = (char *)v127 + v235;
          uint64_t v237 = (char *)v382 + v235;
          uint64_t v238 = sub_1C151D2DC();
          uint64_t v239 = *(void *)(v238 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v239 + 48))(v237, 1, v238))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v236, v237, *(void *)(*(void *)(v240 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v239 + 16))(v236, v237, v238);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v239 + 56))(v236, 0, 1, v238);
          }
          uint64_t v241 = v364[12];
          long long v242 = (void *)((char *)v127 + v241);
          uint64_t v243 = (void *)((char *)v382 + v241);
          if (v243[1] >= 0x11uLL)
          {
            *long long v242 = *v243;
            v242[1] = v243[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)long long v242 = *(_OWORD *)v243;
          }
          uint64_t v244 = v364[13];
          unint64_t v245 = *(void *)((char *)v382 + v244);
          if (v245 >= 2)
          {
            if (v245 == 2)
            {
              *(void *)((char *)v127 + v244) = 2;
            }
            else
            {
              *(void *)((char *)v127 + v244) = v245;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v127 + v244) = v245;
          }
          uint64_t v264 = v364[14];
          uint64_t v265 = *(void **)((char *)v382 + v264);
          *(void *)((char *)v127 + v264) = v265;
          uint64_t v266 = *(void (**)(void *, void, uint64_t, int *))(v361 + 56);
          id v267 = v265;
          v266(v127, 0, 1, v364);
        }
        uint64_t v268 = v389[13];
        unint64_t v269 = (void *)((char *)v132 + v268);
        char v270 = (void *)((char *)v10 + v268);
        uint64_t v271 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v272 = *(void *)(v271 - 8);
        long long v7 = v392;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v272 + 48))(v270, 1, v271))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v269, v270, *(void *)(*(void *)(v273 - 8) + 64));
        }
        else
        {
          int v274 = swift_getEnumCaseMultiPayload();
          void *v269 = *v270;
          if (v274 == 1)
          {
            v269[1] = v270[1];
            uint64_t v275 = type metadata accessor for GenericDataVisualization();
            uint64_t v276 = *(int *)(v275 + 20);
            uint64_t v383 = (char *)v269 + v276;
            __dsta = (char *)v270 + v276;
            long long v7 = v392;
            swift_bridgeObjectRetain();
            v367(v383, __dsta, v376);
            *(void *)((char *)v269 + *(int *)(v275 + 24)) = *(void *)((char *)v270 + *(int *)(v275 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v269, 0, 1, v271);
        }
        *((unsigned char *)v132 + v389[14]) = *((unsigned char *)v10 + v389[14]);
        goto LABEL_158;
      case 5u:
        uint64_t v47 = (void *)*v10;
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
        *((unsigned char *)v9 + 25) = *((unsigned char *)v10 + 25);
        uint64_t v48 = v10[4];
        *((unsigned char *)v9 + 40) = *((unsigned char *)v10 + 40);
        void v9[4] = v48;
        v9[6] = v10[6];
        uint64_t v49 = (void *)v10[7];
        v9[7] = v49;
        *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
        uint64_t v50 = v10[10];
        id v51 = v47;
        swift_bridgeObjectRetain();
        id v52 = v49;
        if (v50 == 1)
        {
          long long v53 = *(_OWORD *)(v10 + 9);
          long long v54 = *(_OWORD *)(v10 + 13);
          *(_OWORD *)(v9 + 11) = *(_OWORD *)(v10 + 11);
          *(_OWORD *)(v9 + 13) = v54;
          *(_OWORD *)(v9 + 9) = v53;
        }
        else
        {
          v9[9] = v10[9];
          v9[10] = v10[10];
          v9[11] = v10[11];
          v9[12] = v10[12];
          uint64_t v103 = (void *)v10[13];
          v9[13] = v103;
          v9[14] = v10[14];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v104 = v103;
        }
        if (v10[16] >= 0x11uLL)
        {
          v9[15] = v10[15];
          v9[16] = v10[16];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v9 + 15) = *(_OWORD *)(v10 + 15);
        }
        *((unsigned char *)v9 + 136) = *((unsigned char *)v10 + 136);
        swift_storeEnumTagMultiPayload();
        goto LABEL_159;
      case 6u:
        int v55 = *((unsigned __int8 *)v10 + 281);
        if (v55 == 2)
        {
          uint64_t v56 = v9;
          *uint64_t v9 = *v10;
          v9[1] = v10[1];
          v9[2] = v10[2];
          *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
          uint64_t v179 = v10[4];
          *((unsigned char *)v9 + 40) = *((unsigned char *)v10 + 40);
          void v9[4] = v179;
          v9[6] = v10[6];
          v9[7] = v10[7];
          v9[8] = v10[8];
          v9[9] = v10[9];
          uint64_t v180 = v10[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v180 == 1)
          {
            *((_OWORD *)v9 + 5) = *((_OWORD *)v10 + 5);
            long long v181 = *((_OWORD *)v10 + 6);
            long long v182 = *((_OWORD *)v10 + 7);
            long long v183 = *((_OWORD *)v10 + 8);
            *((unsigned char *)v9 + 144) = *((unsigned char *)v10 + 144);
            *((_OWORD *)v9 + 7) = v182;
            *((_OWORD *)v9 + 8) = v183;
            *((_OWORD *)v9 + 6) = v181;
          }
          else
          {
            v9[10] = v10[10];
            v9[11] = v10[11];
            uint64_t v217 = v10[15];
            swift_bridgeObjectRetain();
            if (v217)
            {
              v9[15] = v217;
              v9[16] = v10[16];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v217 - 8))((uint64_t)(v9 + 12), (uint64_t)(v10 + 12), v217);
              char v218 = *((unsigned char *)v10 + 144);
              v9[17] = v10[17];
              *((unsigned char *)v9 + 144) = v218;
            }
            else
            {
              long long v314 = *((_OWORD *)v10 + 6);
              long long v315 = *((_OWORD *)v10 + 7);
              long long v316 = *((_OWORD *)v10 + 8);
              *((unsigned char *)v9 + 144) = *((unsigned char *)v10 + 144);
              *((_OWORD *)v9 + 7) = v315;
              *((_OWORD *)v9 + 8) = v316;
              *((_OWORD *)v9 + 6) = v314;
            }
          }
        }
        else
        {
          uint64_t v56 = v9;
          if (v55 == 1)
          {
            uint64_t v57 = (void *)*v10;
            *uint64_t v9 = *v10;
            v9[1] = v10[1];
            v9[2] = v10[2];
            *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
            *((unsigned char *)v9 + 25) = *((unsigned char *)v10 + 25);
            uint64_t v58 = v10[4];
            *((unsigned char *)v9 + 40) = *((unsigned char *)v10 + 40);
            void v9[4] = v58;
            v9[6] = v10[6];
            unint64_t v59 = (void *)v10[7];
            v9[7] = v59;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            uint64_t v60 = v10[10];
            id v61 = v57;
            swift_bridgeObjectRetain();
            id v62 = v59;
            if (v60 == 1)
            {
              long long v63 = *(_OWORD *)(v10 + 9);
              long long v64 = *(_OWORD *)(v10 + 13);
              *(_OWORD *)(v9 + 11) = *(_OWORD *)(v10 + 11);
              *(_OWORD *)(v9 + 13) = v64;
              *(_OWORD *)(v9 + 9) = v63;
            }
            else
            {
              v9[9] = v10[9];
              v9[10] = v10[10];
              v9[11] = v10[11];
              v9[12] = v10[12];
              uint64_t v215 = (void *)v10[13];
              v9[13] = v215;
              v9[14] = v10[14];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v216 = v215;
            }
            if (v10[16] >= 0x11uLL)
            {
              v9[15] = v10[15];
              v9[16] = v10[16];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v9 + 15) = *(_OWORD *)(v10 + 15);
            }
            *((unsigned char *)v9 + 136) = *((unsigned char *)v10 + 136);
            unint64_t v221 = (void *)v10[18];
            if (v221)
            {
              v9[18] = v221;
              v9[19] = v10[19];
              v9[20] = v10[20];
              *((unsigned char *)v9 + 168) = *((unsigned char *)v10 + 168);
              *((unsigned char *)v9 + 169) = *((unsigned char *)v10 + 169);
              uint64_t v222 = v10[22];
              *((unsigned char *)v9 + 184) = *((unsigned char *)v10 + 184);
              v9[22] = v222;
              v9[24] = v10[24];
              unint64_t v223 = (void *)v10[25];
              v9[25] = v223;
              *((unsigned char *)v9 + 208) = *((unsigned char *)v10 + 208);
              uint64_t v224 = v10[28];
              id v225 = v221;
              swift_bridgeObjectRetain();
              id v226 = v223;
              if (v224 == 1)
              {
                long long v227 = *(_OWORD *)(v10 + 27);
                long long v228 = *(_OWORD *)(v10 + 31);
                *(_OWORD *)(v9 + 29) = *(_OWORD *)(v10 + 29);
                *(_OWORD *)(v9 + 31) = v228;
                *(_OWORD *)(v9 + 27) = v227;
              }
              else
              {
                v9[27] = v10[27];
                v9[28] = v10[28];
                v9[29] = v10[29];
                v9[30] = v10[30];
                uint64_t v252 = (void *)v10[31];
                v9[31] = v252;
                v9[32] = v10[32];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v253 = v252;
              }
              if (v10[34] >= 0x11uLL)
              {
                v9[33] = v10[33];
                v9[34] = v10[34];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v9 + 33) = *(_OWORD *)(v10 + 33);
              }
              *((unsigned char *)v9 + 280) = *((unsigned char *)v10 + 280);
            }
            else
            {
              *((_OWORD *)v9 + 9) = *((_OWORD *)v10 + 9);
              long long v246 = *((_OWORD *)v10 + 10);
              long long v247 = *((_OWORD *)v10 + 11);
              long long v248 = *((_OWORD *)v10 + 13);
              *((_OWORD *)v9 + 12) = *((_OWORD *)v10 + 12);
              *((_OWORD *)v9 + 13) = v248;
              *((_OWORD *)v9 + 10) = v246;
              *((_OWORD *)v9 + 11) = v247;
              long long v249 = *((_OWORD *)v10 + 14);
              long long v250 = *((_OWORD *)v10 + 15);
              long long v251 = *((_OWORD *)v10 + 16);
              *(_OWORD *)((char *)v9 + 265) = *(_OWORD *)((char *)v10 + 265);
              *((_OWORD *)v9 + 15) = v250;
              *((_OWORD *)v9 + 16) = v251;
              *((_OWORD *)v9 + 14) = v249;
            }
          }
          else
          {
            long long v184 = (void *)*v10;
            *uint64_t v9 = *v10;
            v9[1] = v10[1];
            v9[2] = v10[2];
            *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
            *((unsigned char *)v9 + 25) = *((unsigned char *)v10 + 25);
            uint64_t v185 = v10[4];
            *((unsigned char *)v9 + 40) = *((unsigned char *)v10 + 40);
            void v9[4] = v185;
            v9[6] = v10[6];
            uint64_t v186 = (void *)v10[7];
            v9[7] = v186;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            uint64_t v187 = v10[10];
            id v188 = v184;
            swift_bridgeObjectRetain();
            id v189 = v186;
            if (v187 == 1)
            {
              long long v190 = *(_OWORD *)(v10 + 9);
              long long v191 = *(_OWORD *)(v10 + 13);
              *(_OWORD *)(v9 + 11) = *(_OWORD *)(v10 + 11);
              *(_OWORD *)(v9 + 13) = v191;
              *(_OWORD *)(v9 + 9) = v190;
            }
            else
            {
              v9[9] = v10[9];
              v9[10] = v10[10];
              v9[11] = v10[11];
              v9[12] = v10[12];
              uint64_t v219 = (void *)v10[13];
              v9[13] = v219;
              v9[14] = v10[14];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v220 = v219;
            }
            if (v10[16] >= 0x11uLL)
            {
              v9[15] = v10[15];
              v9[16] = v10[16];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v9 + 15) = *(_OWORD *)(v10 + 15);
            }
            *((unsigned char *)v9 + 136) = *((unsigned char *)v10 + 136);
          }
        }
        *((unsigned char *)v56 + 281) = v55;
        swift_storeEnumTagMultiPayload();
        goto LABEL_159;
      case 7u:
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
        uint64_t v65 = v10[4];
        *((unsigned char *)v9 + 40) = *((unsigned char *)v10 + 40);
        void v9[4] = v65;
        v9[6] = v10[6];
        v9[7] = v10[7];
        v9[8] = v10[8];
        v9[9] = v10[9];
        uint64_t v66 = v10[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v66 == 1)
        {
          *((_OWORD *)v9 + 5) = *((_OWORD *)v10 + 5);
          long long v67 = *((_OWORD *)v10 + 6);
          long long v68 = *((_OWORD *)v10 + 7);
          long long v69 = *((_OWORD *)v10 + 8);
          *((unsigned char *)v9 + 144) = *((unsigned char *)v10 + 144);
          *((_OWORD *)v9 + 7) = v68;
          *((_OWORD *)v9 + 8) = v69;
          *((_OWORD *)v9 + 6) = v67;
        }
        else
        {
          v9[10] = v10[10];
          v9[11] = v10[11];
          uint64_t v105 = v10[15];
          swift_bridgeObjectRetain();
          if (v105)
          {
            v9[15] = v105;
            v9[16] = v10[16];
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v105 - 8))((uint64_t)(v9 + 12), (uint64_t)(v10 + 12), v105);
            char v106 = *((unsigned char *)v10 + 144);
            v9[17] = v10[17];
            *((unsigned char *)v9 + 144) = v106;
          }
          else
          {
            long long v212 = *((_OWORD *)v10 + 6);
            long long v213 = *((_OWORD *)v10 + 7);
            long long v214 = *((_OWORD *)v10 + 8);
            *((unsigned char *)v9 + 144) = *((unsigned char *)v10 + 144);
            *((_OWORD *)v9 + 7) = v213;
            *((_OWORD *)v9 + 8) = v214;
            *((_OWORD *)v9 + 6) = v212;
          }
        }
        goto LABEL_158;
      case 8u:
        uint64_t v394 = v7;
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        uint64_t v70 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v71 = (void *)((char *)v9 + v70);
        uint64_t v72 = (void *)((char *)v10 + v70);
        *uint64_t v71 = *v72;
        v71[1] = v72[1];
        v71[2] = v72[2];
        v71[3] = v72[3];
        uint64_t v386 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v73 = *(int *)(v386 + 24);
        uint64_t v375 = (char *)v71 + v73;
        uint64_t v74 = (char *)v72 + v73;
        uint64_t v75 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v370 = *(void *)(v75 - 8);
        uint64_t v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v370 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v76(v74, 1, v75))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v375, v74, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          uint64_t v161 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16))(v375, v74, v161);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v370 + 56))(v375, 0, 1, v75);
        }
        long long v7 = v394;
        *(void *)((char *)v71 + *(int *)(v386 + 28)) = *(void *)((char *)v72 + *(int *)(v386 + 28));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_159;
      case 9u:
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        v9[3] = v10[3];
        uint64_t v29 = v10[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v29)
        {
          v9[7] = v29;
          v9[8] = v10[8];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v29 - 8))((uint64_t)(v9 + 4), (uint64_t)(v10 + 4), v29);
        }
        else
        {
          long long v121 = *((_OWORD *)v10 + 2);
          long long v122 = *((_OWORD *)v10 + 3);
          v9[8] = v10[8];
          *((_OWORD *)v9 + 2) = v121;
          *((_OWORD *)v9 + 3) = v122;
        }
        unint64_t v123 = v9 + 9;
        uint64_t v124 = (long long *)(v10 + 9);
        uint64_t v125 = v10[12];
        if (v125)
        {
          v9[12] = v125;
          v9[13] = v10[13];
          (**(void (***)(_OWORD *, long long *))(v125 - 8))(v123, v124);
        }
        else
        {
          long long v133 = *v124;
          long long v134 = *(_OWORD *)(v10 + 11);
          v9[13] = v10[13];
          _OWORD *v123 = v133;
          *(_OWORD *)(v9 + 11) = v134;
        }
        uint64_t v135 = v9 + 14;
        uint64_t v136 = (long long *)(v10 + 14);
        uint64_t v137 = v10[17];
        if (v137)
        {
          v9[17] = v137;
          v9[18] = v10[18];
          (**(void (***)(_OWORD *, long long *))(v137 - 8))(v135, v136);
        }
        else
        {
          long long v148 = *v136;
          long long v149 = *((_OWORD *)v10 + 8);
          v9[18] = v10[18];
          *uint64_t v135 = v148;
          *((_OWORD *)v9 + 8) = v149;
        }
        goto LABEL_158;
      case 0xAu:
        uint64_t v391 = v7;
        uint64_t v78 = v9;
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        uint64_t v79 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v80 = v79[5];
        uint64_t v387 = (char *)v9 + v80;
        uint64_t v81 = (char *)v10 + v80;
        uint64_t v82 = sub_1C151959C();
        uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(v387, v81, v82);
        *(void *)((char *)v78 + v79[6]) = *(void *)((char *)v10 + v79[6]);
        uint64_t v84 = v79[7];
        id v85 = (char *)v78 + v84;
        long long v86 = (char *)v10 + v84;
        char v87 = v86[8];
        *(void *)id v85 = *(void *)v86;
        v85[8] = v87;
        uint64_t v88 = v79[8];
        uint64_t v26 = (char *)v78 + v88;
        uint64_t v27 = (char *)v10 + v88;
        if (*((void *)v27 + 1) >= 0x11uLL)
        {
LABEL_56:
          *(void *)uint64_t v26 = *(void *)v27;
          *((void *)v26 + 1) = *((void *)v27 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        }
        goto LABEL_57;
      case 0xBu:
        *uint64_t v9 = *v10;
        swift_retain();
        goto LABEL_158;
      case 0xCu:
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        uint64_t v30 = v10[3];
        *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
        v9[3] = v30;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_158;
      case 0xDu:
        id v89 = v9;
        *uint64_t v9 = *v10;
        uint64_t v90 = v10[1];
        *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
        v9[1] = v90;
        if (v10[4] >= 0x11uLL)
        {
          v9[3] = v10[3];
          void v9[4] = v10[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v9 + 3) = *(_OWORD *)(v10 + 3);
        }
        v9[5] = v10[5];
        v9[6] = v10[6];
        v9[7] = v10[7];
        uint64_t v107 = (void *)v10[8];
        v89[8] = v107;
        *((unsigned char *)v89 + 72) = *((unsigned char *)v10 + 72);
        v89[10] = v10[10];
        uint64_t v108 = v10[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v109 = v107;
        swift_bridgeObjectRetain();
        if (v108)
        {
          v89[14] = v108;
          v89[15] = v10[15];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v108 - 8))((uint64_t)(v89 + 11), (uint64_t)(v10 + 11), v108);
        }
        else
        {
          long long v162 = *(_OWORD *)(v10 + 11);
          long long v163 = *(_OWORD *)(v10 + 13);
          v89[15] = v10[15];
          *(_OWORD *)(v89 + 11) = v162;
          *(_OWORD *)(v89 + 13) = v163;
        }
        uint64_t v164 = v89 + 16;
        uint64_t v165 = (long long *)(v10 + 16);
        uint64_t v166 = v10[19];
        if (v166)
        {
          v89[19] = v166;
          v89[20] = v10[20];
          (**(void (***)(_OWORD *, long long *))(v166 - 8))(v164, v165);
        }
        else
        {
          long long v172 = *v165;
          long long v173 = *((_OWORD *)v10 + 9);
          v89[20] = v10[20];
          *uint64_t v164 = v172;
          *((_OWORD *)v89 + 9) = v173;
        }
        uint64_t v174 = v89 + 21;
        uint64_t v175 = (long long *)(v10 + 21);
        uint64_t v176 = v10[24];
        if (v176)
        {
          v89[24] = v176;
          v89[25] = v10[25];
          (**(void (***)(_OWORD *, long long *))(v176 - 8))(v174, v175);
        }
        else
        {
          long long v177 = *v175;
          long long v178 = *(_OWORD *)(v10 + 23);
          v89[25] = v10[25];
          *uint64_t v174 = v177;
          *(_OWORD *)(v89 + 23) = v178;
        }
LABEL_158:
        swift_storeEnumTagMultiPayload();
        goto LABEL_159;
      case 0xEu:
        *uint64_t v9 = *v10;
        uint64_t v31 = v10[1];
        *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
        v9[1] = v31;
        if (v10[4] >= 0x11uLL)
        {
          v9[3] = v10[3];
          void v9[4] = v10[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v9 + 3) = *(_OWORD *)(v10 + 3);
        }
        v9[5] = v10[5];
        v9[6] = v10[6];
        v9[7] = v10[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_159;
      case 0xFu:
        *uint64_t v9 = *v10;
        uint64_t v91 = v10[1];
        *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
        v9[1] = v91;
        if (v10[4] >= 0x11uLL)
        {
          v9[3] = v10[3];
          void v9[4] = v10[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v9 + 3) = *(_OWORD *)(v10 + 3);
        }
        break;
      case 0x10u:
        uint64_t v391 = v7;
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        v9[3] = v10[3];
        void v9[4] = v10[4];
        v9[5] = v10[5];
        *((unsigned char *)v9 + 48) = *((unsigned char *)v10 + 48);
        *((unsigned char *)v9 + 49) = *((unsigned char *)v10 + 49);
        v9[7] = v10[7];
        v9[8] = v10[8];
        v9[9] = v10[9];
        v9[10] = v10[10];
        v9[11] = v10[11];
        v9[12] = v10[12];
        v9[13] = v10[13];
        *((unsigned char *)v9 + 112) = *((unsigned char *)v10 + 112);
        v9[15] = v10[15];
        v9[16] = v10[16];
        *((unsigned char *)v9 + 136) = *((unsigned char *)v10 + 136);
        v9[18] = v10[18];
        v9[19] = v10[19];
        v9[20] = v10[20];
        v9[21] = v10[21];
        uint64_t v32 = v10[22];
        *((unsigned char *)v9 + 184) = *((unsigned char *)v10 + 184);
        v9[22] = v32;
        v9[24] = v10[24];
        v9[25] = v10[25];
        v9[26] = v10[26];
        uint64_t v33 = v10[27];
        *((unsigned char *)v9 + 224) = *((unsigned char *)v10 + 224);
        v9[27] = v33;
        unint64_t v369 = v10[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v369 >= 0x11)
        {
          v9[29] = v10[29];
          v9[30] = v10[30];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v9 + 29) = *(_OWORD *)(v10 + 29);
        }
LABEL_57:
        long long v7 = v391;
        swift_storeEnumTagMultiPayload();
        goto LABEL_159;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_159;
    }
    v9[5] = v10[5];
    v9[6] = v10[6];
    uint64_t v110 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    long long v111 = (char *)v9 + v110;
    uint64_t v112 = (void *)((char *)v10 + v110);
    *(void *)((char *)v9 + v110) = *v112;
    uint64_t v113 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v114 = &v111[v113];
    uint64_t v115 = (void *)((char *)v112 + v113);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v195 = type metadata accessor for PuzzleStatisticValue(0);
        int v196 = swift_getEnumCaseMultiPayload();
        uint64_t v378 = (void *)v195;
        if (v196 == 5)
        {
          uint64_t v197 = v7;
          uint64_t v311 = type metadata accessor for PuzzleStreak();
          uint64_t v312 = *(void *)(v311 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v312 + 48))(v115, 1, v311))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v114, v115, *(void *)(*(void *)(v313 - 8) + 64));
          }
          else
          {
            uint64_t v325 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v325 - 8) + 16))(v114, v115, v325);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v312 + 56))(v114, 0, 1, v311);
          }
          uint64_t v195 = (uint64_t)v378;
        }
        else
        {
          if (v196 != 4)
          {
            memcpy(v114, v115, *(void *)(*(void *)(v195 - 8) + 64));
            goto LABEL_186;
          }
          uint64_t v197 = v7;
          uint64_t v198 = type metadata accessor for PuzzleStreak();
          uint64_t v199 = *(void *)(v198 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v199 + 48))(v115, 1, v198))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v114, v115, *(void *)(*(void *)(v200 - 8) + 64));
          }
          else
          {
            uint64_t v323 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v323 - 8) + 16))(v114, v115, v323);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v199 + 56))(v114, 0, 1, v198);
          }
          uint64_t v195 = (uint64_t)v378;
        }
        swift_storeEnumTagMultiPayload();
        long long v7 = v197;
LABEL_186:
        uint64_t v326 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v327 = *(int *)(v326 + 20);
        uint64_t v328 = v114;
        uint64_t v329 = &v114[v327];
        id v330 = (char *)v115 + v327;
        int v331 = swift_getEnumCaseMultiPayload();
        if (v331 == 5)
        {
          uint64_t v374 = v326;
          uint64_t v336 = v7;
          uint64_t v337 = type metadata accessor for PuzzleStreak();
          uint64_t v338 = *(void *)(v337 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v338 + 48))(v330, 1, v337))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v329, v330, *(void *)(*(void *)(v339 - 8) + 64));
          }
          else
          {
            uint64_t v342 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 16))(v329, v330, v342);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v338 + 56))(v329, 0, 1, v337);
          }
          long long v7 = v336;
          uint64_t v195 = (uint64_t)v378;
        }
        else
        {
          if (v331 != 4)
          {
            memcpy(v329, v330, *(void *)(*(void *)(v195 - 8) + 64));
            uint64_t v340 = v328;
LABEL_198:
            uint64_t v343 = *(int *)(v326 + 24);
            long long v344 = (char *)v340 + v343;
            uint64_t v345 = (char *)v115 + v343;
            int v346 = swift_getEnumCaseMultiPayload();
            if (v346 == 5)
            {
              long long v351 = v7;
              uint64_t v352 = type metadata accessor for PuzzleStreak();
              uint64_t v353 = *(void *)(v352 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v353 + 48))(v345, 1, v352))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v344, v345, *(void *)(*(void *)(v354 - 8) + 64));
              }
              else
              {
                uint64_t v356 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v344, v345, v356);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v353 + 56))(v344, 0, 1, v352);
              }
              long long v7 = v351;
              goto LABEL_209;
            }
            if (v346 == 4)
            {
              uint64_t v347 = v7;
              uint64_t v348 = type metadata accessor for PuzzleStreak();
              uint64_t v349 = *(void *)(v348 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v349 + 48))(v345, 1, v348))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v344, v345, *(void *)(*(void *)(v350 - 8) + 64));
              }
              else
              {
                uint64_t v355 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v355 - 8) + 16))(v344, v345, v355);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v349 + 56))(v344, 0, 1, v348);
              }
              long long v7 = v347;
              goto LABEL_209;
            }
            memcpy(v344, v345, *(void *)(*(void *)(v195 - 8) + 64));
LABEL_210:
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
LABEL_159:
            uint64_t v277 = v7[8];
            unint64_t v278 = (_OWORD *)(a1 + v277);
            id v279 = (_OWORD *)(a2 + v277);
            long long v280 = v279[1];
            *unint64_t v278 = *v279;
            v278[1] = v280;
            uint64_t v281 = v7[9];
            long long v282 = (_OWORD *)(a1 + v281);
            uint64_t v283 = (_OWORD *)(a2 + v281);
            long long v284 = v283[1];
            *long long v282 = *v283;
            v282[1] = v284;
            sub_1C0955B70();
            *(void *)(a1 + *(int *)(v285 + 48)) = *(void *)(a2 + *(int *)(v285 + 48));
            goto LABEL_160;
          }
          uint64_t v374 = v326;
          uint64_t v332 = v7;
          uint64_t v333 = type metadata accessor for PuzzleStreak();
          uint64_t v334 = *(void *)(v333 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v334 + 48))(v330, 1, v333))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v329, v330, *(void *)(*(void *)(v335 - 8) + 64));
          }
          else
          {
            uint64_t v341 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v341 - 8) + 16))(v329, v330, v341);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v334 + 56))(v329, 0, 1, v333);
          }
          long long v7 = v332;
          uint64_t v195 = (uint64_t)v378;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v340 = v328;
        uint64_t v326 = v374;
        goto LABEL_198;
      case 2u:
        uint64_t v192 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v193 = *((void *)v192 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v193 + 48))(v115, 1, v192))
        {
          sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          memcpy(v114, v115, *(void *)(*(void *)(v194 - 8) + 64));
        }
        else
        {
          uint64_t v373 = v193;
          uint64_t v397 = v7;
          uint64_t v254 = sub_1C151631C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v254 - 8) + 16))(v114, v115, v254);
          uint64_t v255 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v256 = v255[5];
          uint64_t v257 = &v114[v256];
          uint64_t v258 = (void *)((char *)v115 + v256);
          *(void *)uint64_t v257 = *v258;
          *((void *)v257 + 1) = v258[1];
          uint64_t v259 = v255[6];
          uint64_t v380 = v114;
          uint64_t v260 = &v114[v259];
          long long v261 = (void *)((char *)v115 + v259);
          *(void *)uint64_t v260 = *v261;
          *((void *)v260 + 1) = v261[1];
          id v262 = v261 + 2;
          unint64_t v263 = v261[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v263 >> 60 == 15)
          {
            *((_OWORD *)v260 + 1) = *(_OWORD *)v262;
          }
          else
          {
            uint64_t v317 = *v262;
            sub_1BFE95820(*v262, v263);
            *((void *)v260 + 2) = v317;
            *((void *)v260 + 3) = v263;
          }
          *(void *)&v380[v255[7]] = *(void *)((char *)v115 + v255[7]);
          *(void *)&v380[v255[8]] = *(void *)((char *)v115 + v255[8]);
          *(void *)&v380[v192[5]] = *(void *)((char *)v115 + v192[5]);
          *(void *)&v380[v192[6]] = *(void *)((char *)v115 + v192[6]);
          uint64_t v318 = v192[7];
          uint64_t v319 = &v380[v318];
          uint64_t v320 = (void *)((char *)v115 + v318);
          *(void *)uint64_t v319 = *v320;
          *((void *)v319 + 1) = v320[1];
          uint64_t v321 = *(void (**)(char *, void, uint64_t, int *))(v373 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v321(v380, 0, 1, v192);
          long long v7 = v397;
        }
        goto LABEL_210;
      case 3u:
        uint64_t v396 = v7;
        *(void *)uint64_t v114 = *v115;
        uint64_t v201 = v115[1];
        v114[16] = *((unsigned char *)v115 + 16);
        *((void *)v114 + 1) = v201;
        uint64_t v202 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v203 = v202[6];
        uint64_t v379 = v114;
        uint64_t v204 = &v114[v203];
        id v205 = (char *)v115 + v203;
        uint64_t v206 = type metadata accessor for PuzzleStreak();
        uint64_t v207 = *(void *)(v206 - 8);
        int v372 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v207 + 48);
        if (v372(v205, 1, v206))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v204, v205, *(void *)(*(void *)(v208 - 8) + 64));
        }
        else
        {
          uint64_t v287 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v287 - 8) + 16))(v204, v205, v287);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v207 + 56))(v204, 0, 1, v206);
        }
        uint64_t v288 = v202[7];
        unint64_t v289 = &v379[v288];
        uint64_t v290 = (char *)v115 + v288;
        if (v372((char *)v115 + v288, 1, v206))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v289, v290, *(void *)(*(void *)(v291 - 8) + 64));
        }
        else
        {
          uint64_t v292 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v292 - 8) + 16))(v289, v290, v292);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v207 + 56))(v289, 0, 1, v206);
        }
        long long v7 = v396;
        uint64_t v293 = v202[8];
        long long v294 = &v379[v293];
        long long v295 = (long long *)((char *)v115 + v293);
        long long v296 = *v295;
        long long v297 = v295[1];
        *(_OWORD *)(v294 + 25) = *(long long *)((char *)v295 + 25);
        *(_OWORD *)long long v294 = v296;
        *((_OWORD *)v294 + 1) = v297;
        uint64_t v298 = v202[9];
        uint64_t v299 = &v379[v298];
        int v300 = (long long *)((char *)v115 + v298);
        long long v301 = *v300;
        long long v302 = v300[1];
        *(_OWORD *)(v299 + 25) = *(long long *)((char *)v300 + 25);
        *(_OWORD *)uint64_t v299 = v301;
        *((_OWORD *)v299 + 1) = v302;
        uint64_t v303 = v202[10];
        unint64_t v304 = &v379[v303];
        long long v305 = (long long *)((char *)v115 + v303);
        long long v306 = *v305;
        long long v307 = v305[1];
        *(_OWORD *)(v304 + 25) = *(long long *)((char *)v305 + 25);
        *(_OWORD *)unint64_t v304 = v306;
        *((_OWORD *)v304 + 1) = v307;
        goto LABEL_210;
      default:
        uint64_t v116 = type metadata accessor for PuzzleStatisticValue(0);
        int v117 = swift_getEnumCaseMultiPayload();
        if (v117 == 5)
        {
          uint64_t v398 = v7;
          uint64_t v308 = type metadata accessor for PuzzleStreak();
          uint64_t v309 = *(void *)(v308 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v309 + 48))(v115, 1, v308))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v114, v115, *(void *)(*(void *)(v310 - 8) + 64));
          }
          else
          {
            uint64_t v324 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v324 - 8) + 16))(v114, v115, v324);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v309 + 56))(v114, 0, 1, v308);
          }
          long long v7 = v398;
        }
        else
        {
          if (v117 != 4)
          {
            memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
            goto LABEL_210;
          }
          uint64_t v395 = v7;
          uint64_t v118 = type metadata accessor for PuzzleStreak();
          uint64_t v119 = *(void *)(v118 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v119 + 48))(v115, 1, v118))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v114, v115, *(void *)(*(void *)(v120 - 8) + 64));
          }
          else
          {
            uint64_t v322 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v322 - 8) + 16))(v114, v115, v322);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v114, 0, 1, v118);
          }
          long long v7 = v395;
        }
LABEL_209:
        swift_storeEnumTagMultiPayload();
        goto LABEL_210;
    }
  }
  return a1;
}

_OWORD *sub_1C095F8F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  long long v7 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
  uint64_t v8 = v7[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v12 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v13 = v12[5];
      unint64_t v14 = &v9[v13];
      uint64_t v15 = &v10[v13];
      uint64_t v16 = sub_1C151DBAC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
      uint64_t v17 = v12[7];
      uint64_t v18 = &v9[v17];
      uint64_t v19 = &v10[v17];
      v18[8] = v19[8];
      *(void *)uint64_t v18 = *(void *)v19;
      *(_OWORD *)&v9[v12[8]] = *(_OWORD *)&v10[v12[8]];
      goto LABEL_95;
    case 3u:
      uint64_t v208 = v7;
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((void *)v9 + 2) = *((void *)v10 + 2);
      v9[24] = v10[24];
      *((void *)v9 + 4) = *((void *)v10 + 4);
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
      v9[56] = v10[56];
      uint64_t v206 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v20 = v206[10];
      long long v213 = v9;
      uint64_t v21 = &v9[v20];
      uint64_t v22 = &v10[v20];
      *uint64_t v21 = v10[v20];
      v21[1] = v10[v20 + 1];
      uint64_t v23 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v24 = v23[6];
      __dst = &v21[v24];
      uint64_t v25 = &v22[v24];
      uint64_t v26 = (int *)type metadata accessor for SharedItem();
      uint64_t v27 = *((void *)v26 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
      {
        uint64_t v28 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v70 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(__dst, v25, v70);
        __dst[v26[5]] = v25[v26[5]];
        *(void *)&__dst[v26[6]] = *(void *)&v25[v26[6]];
        uint64_t v71 = v26[7];
        uint64_t v198 = &__dst[v71];
        uint64_t v72 = &v25[v71];
        uint64_t v73 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v198, v72, v73);
        (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(__dst, 0, 1, v26);
      }
      v21[v23[7]] = v22[v23[7]];
      v21[v23[8]] = v22[v23[8]];
      v21[v23[9]] = v22[v23[9]];
      v21[v23[10]] = v22[v23[10]];
      uint64_t v74 = v206[11];
      uint64_t v75 = &v213[v74];
      uint64_t v76 = &v10[v74];
      uint64_t v77 = sub_1C151D2DC();
      uint64_t v78 = *(void *)(v77 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v75, v76, v77);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
      }
      long long v7 = v208;
      *(_OWORD *)&v213[v206[12]] = *(_OWORD *)&v10[v206[12]];
      uint64_t v89 = v206[13];
      uint64_t v90 = *(void *)&v10[v89];
      if (v90 == 2) {
        uint64_t v90 = 2;
      }
      *(void *)&v213[v89] = v90;
      *(void *)&v213[v206[14]] = *(void *)&v10[v206[14]];
      goto LABEL_95;
    case 4u:
      uint64_t v209 = v7;
      uint64_t v29 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v29;
      v9[16] = v10[16];
      *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
      uint64_t v30 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v31 = v30[8];
      uint64_t v32 = &v9[v31];
      uint64_t v33 = &v10[v31];
      uint64_t v34 = sub_1C1515FDC();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v201 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v201(v32, v33, v34);
      uint64_t v207 = v30;
      uint64_t v36 = v30[9];
      uint64_t v37 = &v9[v36];
      uint64_t v38 = &v10[v36];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v10[v36], 1, v34))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        v201(v37, v38, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v34);
      }
      *(void *)&v9[v30[10]] = *(void *)&v10[v30[10]];
      *(void *)&v9[v30[11]] = *(void *)&v10[v30[11]];
      uint64_t v80 = v30[12];
      long long v214 = v9;
      uint64_t v81 = &v9[v80];
      uint64_t v82 = &v10[v80];
      uint64_t v83 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v84 = *((void *)v83 - 1);
      uint64_t v199 = v34;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v84 + 48))(v82, 1, v83))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
        long long v86 = v214;
        char v87 = v30;
      }
      else
      {
        uint64_t v196 = v84;
        *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
        *((void *)v81 + 2) = *((void *)v82 + 2);
        v81[24] = v82[24];
        *((void *)v81 + 4) = *((void *)v82 + 4);
        *(_OWORD *)(v81 + 40) = *(_OWORD *)(v82 + 40);
        v81[56] = v82[56];
        uint64_t v91 = v83[10];
        uint64_t v92 = &v81[v91];
        uint64_t v93 = &v82[v91];
        *uint64_t v92 = v82[v91];
        v92[1] = v82[v91 + 1];
        uint64_t v195 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v94 = v195[6];
        uint64_t v197 = &v92[v94];
        uint64_t v95 = &v93[v94];
        uint64_t v96 = (int *)type metadata accessor for SharedItem();
        uint64_t v194 = *((void *)v96 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v194 + 48))(v95, 1, v96))
        {
          uint64_t v97 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v197, v95, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          uint64_t v114 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v197, v95, v114);
          v197[v96[5]] = v95[v96[5]];
          *(void *)&v197[v96[6]] = *(void *)&v95[v96[6]];
          v201(&v197[v96[7]], &v95[v96[7]], v199);
          (*(void (**)(char *, void, uint64_t, int *))(v194 + 56))(v197, 0, 1, v96);
        }
        v92[v195[7]] = v93[v195[7]];
        v92[v195[8]] = v93[v195[8]];
        v92[v195[9]] = v93[v195[9]];
        v92[v195[10]] = v93[v195[10]];
        uint64_t v115 = v83[11];
        __dsta = &v81[v115];
        uint64_t v116 = &v82[v115];
        uint64_t v117 = sub_1C151D2DC();
        uint64_t v118 = *(void *)(v117 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(__dsta, v116, *(void *)(*(void *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v118 + 32))(__dsta, v116, v117);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(__dsta, 0, 1, v117);
        }
        char v87 = v207;
        *(_OWORD *)&v81[v83[12]] = *(_OWORD *)&v82[v83[12]];
        uint64_t v120 = v83[13];
        uint64_t v121 = *(void *)&v82[v120];
        if (v121 == 2) {
          uint64_t v121 = 2;
        }
        *(void *)&v81[v120] = v121;
        *(void *)&v81[v83[14]] = *(void *)&v82[v83[14]];
        (*(void (**)(char *, void, uint64_t, int *))(v196 + 56))(v81, 0, 1, v83);
        long long v86 = v214;
      }
      uint64_t v122 = v87[13];
      unint64_t v123 = &v86[v122];
      uint64_t v124 = &v10[v122];
      uint64_t v125 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v126 = *(void *)(v125 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)unint64_t v123 = *(_OWORD *)v124;
          uint64_t v128 = type metadata accessor for GenericDataVisualization();
          v201(&v123[*(int *)(v128 + 20)], &v124[*(int *)(v128 + 20)], v199);
          uint64_t v129 = *(int *)(v128 + 24);
          char v87 = v207;
          *(void *)&v123[v129] = *(void *)&v124[v129];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v123, v124, *(void *)(v126 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
      }
      long long v7 = v209;
      v86[v87[14]] = v10[v87[14]];
      goto LABEL_95;
    case 8u:
      uint64_t v210 = v7;
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v40 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v41 = &v9[v40];
      uint64_t v42 = &v10[v40];
      long long v43 = *(_OWORD *)&v10[v40 + 16];
      *(_OWORD *)uint64_t v41 = *(_OWORD *)&v10[v40];
      *((_OWORD *)v41 + 1) = v43;
      uint64_t v44 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v45 = *(int *)(v44 + 24);
      uint64_t v46 = &v41[v45];
      uint64_t v47 = &v42[v45];
      uint64_t v48 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v49 = *(void *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        uint64_t v88 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v46, v47, v88);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      *(void *)&v41[*(int *)(v44 + 28)] = *(void *)&v42[*(int *)(v44 + 28)];
      swift_storeEnumTagMultiPayload();
      long long v7 = v210;
      goto LABEL_96;
    case 0xAu:
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      id v51 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v52 = v51[5];
      long long v53 = &v9[v52];
      long long v54 = &v10[v52];
      uint64_t v55 = sub_1C151959C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
      *(void *)&v9[v51[6]] = *(void *)&v10[v51[6]];
      uint64_t v56 = v51[7];
      uint64_t v57 = &v9[v56];
      uint64_t v58 = &v10[v56];
      v57[8] = v58[8];
      *(void *)uint64_t v57 = *(void *)v58;
      *(_OWORD *)&v9[v51[8]] = *(_OWORD *)&v10[v51[8]];
      goto LABEL_95;
    case 0xFu:
      uint64_t v59 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v59;
      v9[16] = v10[16];
      *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
      uint64_t v60 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      id v61 = &v9[v60];
      id v62 = &v10[v60];
      *(void *)&v9[v60] = *(void *)&v10[v60];
      uint64_t v63 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      long long v64 = &v61[v63];
      uint64_t v65 = &v62[v63];
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v101 = type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v211 = v101;
          if (EnumCaseMultiPayload == 5)
          {
            uint64_t v155 = type metadata accessor for PuzzleStreak();
            uint64_t v156 = *(void *)(v155 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(v65, 1, v155))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v64, v65, *(void *)(*(void *)(v157 - 8) + 64));
            }
            else
            {
              uint64_t v161 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v64, v65, v161);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v64, 0, 1, v155);
            }
            uint64_t v101 = v211;
            uint64_t v158 = v7;
          }
          else
          {
            if (EnumCaseMultiPayload != 4)
            {
              uint64_t v158 = v7;
              memcpy(v64, v65, *(void *)(*(void *)(v101 - 8) + 64));
              goto LABEL_73;
            }
            uint64_t v103 = type metadata accessor for PuzzleStreak();
            uint64_t v104 = *(void *)(v103 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v65, 1, v103))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v64, v65, *(void *)(*(void *)(v105 - 8) + 64));
            }
            else
            {
              uint64_t v159 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v64, v65, v159);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v64, 0, 1, v103);
            }
            uint64_t v158 = v7;
            uint64_t v101 = v211;
          }
          swift_storeEnumTagMultiPayload();
LABEL_73:
          uint64_t v162 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v163 = *(int *)(v162 + 20);
          uint64_t v203 = v64;
          uint64_t v164 = &v64[v163];
          uint64_t v165 = &v65[v163];
          int v166 = swift_getEnumCaseMultiPayload();
          if (v166 == 5)
          {
            uint64_t v170 = type metadata accessor for PuzzleStreak();
            uint64_t v171 = *(void *)(v170 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v165, 1, v170))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v164, v165, *(void *)(*(void *)(v172 - 8) + 64));
            }
            else
            {
              uint64_t v175 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 32))(v164, v165, v175);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v164, 0, 1, v170);
            }
            uint64_t v174 = v203;
            uint64_t v101 = v211;
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            if (v166 == 4)
            {
              uint64_t v167 = type metadata accessor for PuzzleStreak();
              uint64_t v168 = *(void *)(v167 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v165, 1, v167))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v164, v165, *(void *)(*(void *)(v169 - 8) + 64));
              }
              else
              {
                uint64_t v173 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v164, v165, v173);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56))(v164, 0, 1, v167);
              }
              uint64_t v101 = v211;
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v164, v165, *(void *)(*(void *)(v101 - 8) + 64));
            }
            uint64_t v174 = v203;
          }
          uint64_t v176 = *(int *)(v162 + 24);
          long long v177 = (char *)v174 + v176;
          long long v178 = &v65[v176];
          int v179 = swift_getEnumCaseMultiPayload();
          long long v7 = v158;
          if (v179 == 5)
          {
            uint64_t v180 = type metadata accessor for PuzzleStreak();
            uint64_t v181 = *(void *)(v180 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v181 + 48))(v178, 1, v180))
            {
LABEL_90:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v177, v178, *(void *)(*(void *)(v182 - 8) + 64));
              goto LABEL_93;
            }
          }
          else
          {
            if (v179 != 4)
            {
              memcpy(v177, v178, *(void *)(*(void *)(v101 - 8) + 64));
              goto LABEL_94;
            }
            uint64_t v180 = type metadata accessor for PuzzleStreak();
            uint64_t v181 = *(void *)(v180 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v181 + 48))(v178, 1, v180)) {
              goto LABEL_90;
            }
          }
          uint64_t v183 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 32))(v177, v178, v183);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v181 + 56))(v177, 0, 1, v180);
          goto LABEL_93;
        case 2u:
          uint64_t v98 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v99 = *((void *)v98 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v99 + 48))(v65, 1, v98))
          {
            sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            memcpy(v64, v65, *(void *)(*(void *)(v100 - 8) + 64));
          }
          else
          {
            uint64_t v130 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v64, v65, v130);
            uint64_t v131 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)&v64[v131[5]] = *(_OWORD *)&v65[v131[5]];
            uint64_t v132 = v131[6];
            long long v133 = &v64[v132];
            long long v134 = &v65[v132];
            long long v135 = *((_OWORD *)v134 + 1);
            *(_OWORD *)long long v133 = *(_OWORD *)v134;
            *((_OWORD *)v133 + 1) = v135;
            *(void *)&v64[v131[7]] = *(void *)&v65[v131[7]];
            *(void *)&v64[v131[8]] = *(void *)&v65[v131[8]];
            *(void *)&v64[v98[5]] = *(void *)&v65[v98[5]];
            *(void *)&v64[v98[6]] = *(void *)&v65[v98[6]];
            *(_OWORD *)&v64[v98[7]] = *(_OWORD *)&v65[v98[7]];
            (*(void (**)(char *, void, uint64_t, int *))(v99 + 56))(v64, 0, 1, v98);
          }
          goto LABEL_94;
        case 3u:
          long long v212 = v7;
          uint64_t v106 = *((void *)v65 + 1);
          *(void *)long long v64 = *(void *)v65;
          *((void *)v64 + 1) = v106;
          v64[16] = v65[16];
          uint64_t v107 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v108 = v107[6];
          uint64_t v202 = v64;
          id v109 = &v64[v108];
          uint64_t v110 = &v65[v108];
          uint64_t v111 = type metadata accessor for PuzzleStreak();
          uint64_t v112 = *(void *)(v111 - 8);
          uint64_t v200 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48);
          if (v200(v110, 1, v111))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64));
          }
          else
          {
            uint64_t v136 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v109, v110, v136);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
          }
          uint64_t v137 = v107[7];
          uint64_t v138 = (char *)v202 + v137;
          uint64_t v139 = &v65[v137];
          if (v200(&v65[v137], 1, v111))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
          }
          else
          {
            uint64_t v141 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v138, v139, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v138, 0, 1, v111);
          }
          long long v7 = v212;
          uint64_t v142 = v107[8];
          uint64_t v143 = (_OWORD *)((char *)v202 + v142);
          uint64_t v144 = &v65[v142];
          long long v145 = *((_OWORD *)v144 + 1);
          *uint64_t v143 = *(_OWORD *)v144;
          v143[1] = v145;
          *(_OWORD *)((char *)v143 + 25) = *(_OWORD *)(v144 + 25);
          uint64_t v146 = v107[9];
          uint64_t v147 = (_OWORD *)((char *)v202 + v146);
          long long v148 = &v65[v146];
          *(_OWORD *)((char *)v147 + 25) = *(_OWORD *)(v148 + 25);
          long long v149 = *((_OWORD *)v148 + 1);
          *uint64_t v147 = *(_OWORD *)v148;
          v147[1] = v149;
          uint64_t v150 = v107[10];
          uint64_t v151 = (_OWORD *)((char *)v202 + v150);
          uint64_t v152 = &v65[v150];
          long long v153 = *((_OWORD *)v152 + 1);
          _OWORD *v151 = *(_OWORD *)v152;
          v151[1] = v153;
          *(_OWORD *)((char *)v151 + 25) = *(_OWORD *)(v152 + 25);
          goto LABEL_94;
        default:
          uint64_t v66 = type metadata accessor for PuzzleStatisticValue(0);
          int v67 = swift_getEnumCaseMultiPayload();
          if (v67 == 5)
          {
            uint64_t v68 = type metadata accessor for PuzzleStreak();
            uint64_t v69 = *(void *)(v68 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v65, 1, v68))
            {
LABEL_61:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v64, v65, *(void *)(*(void *)(v154 - 8) + 64));
              goto LABEL_93;
            }
          }
          else
          {
            if (v67 != 4)
            {
              memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
              goto LABEL_94;
            }
            uint64_t v68 = type metadata accessor for PuzzleStreak();
            uint64_t v69 = *(void *)(v68 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v65, 1, v68)) {
              goto LABEL_61;
            }
          }
          uint64_t v160 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v64, v65, v160);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v64, 0, 1, v68);
LABEL_93:
          swift_storeEnumTagMultiPayload();
LABEL_94:
          swift_storeEnumTagMultiPayload();
LABEL_95:
          swift_storeEnumTagMultiPayload();
LABEL_96:
          uint64_t v184 = v7[8];
          uint64_t v185 = (_OWORD *)((char *)a1 + v184);
          uint64_t v186 = (_OWORD *)((char *)a2 + v184);
          long long v187 = v186[1];
          *uint64_t v185 = *v186;
          v185[1] = v187;
          uint64_t v188 = v7[9];
          id v189 = (_OWORD *)((char *)a1 + v188);
          long long v190 = (_OWORD *)((char *)a2 + v188);
          long long v191 = v190[1];
          *id v189 = *v190;
          v189[1] = v191;
          sub_1C0955B70();
          *(void *)((char *)a1 + *(int *)(v192 + 48)) = *(void *)((char *)a2 + *(int *)(v192 + 48));
          swift_storeEnumTagMultiPayload();
          return a1;
      }
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_96;
  }
}

_OWORD *sub_1C09616E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0955EC8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    long long v7 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
    uint64_t v8 = v7[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        uint64_t v12 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v13 = v12[5];
        unint64_t v14 = &v9[v13];
        uint64_t v15 = &v10[v13];
        uint64_t v16 = sub_1C151DBAC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
        uint64_t v17 = v12[7];
        uint64_t v18 = &v9[v17];
        uint64_t v19 = &v10[v17];
        v18[8] = v19[8];
        *(void *)uint64_t v18 = *(void *)v19;
        *(_OWORD *)&v9[v12[8]] = *(_OWORD *)&v10[v12[8]];
        goto LABEL_96;
      case 3u:
        uint64_t v204 = v7;
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        *((void *)v9 + 2) = *((void *)v10 + 2);
        v9[24] = v10[24];
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
        v9[56] = v10[56];
        uint64_t v202 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v20 = v202[10];
        uint64_t v209 = v9;
        uint64_t v21 = &v9[v20];
        uint64_t v22 = &v10[v20];
        *uint64_t v21 = v10[v20];
        v21[1] = v10[v20 + 1];
        uint64_t v23 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v24 = v23[6];
        __dst = &v21[v24];
        uint64_t v25 = &v22[v24];
        uint64_t v26 = (int *)type metadata accessor for SharedItem();
        uint64_t v27 = *((void *)v26 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
        {
          uint64_t v28 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v71 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(__dst, v25, v71);
          __dst[v26[5]] = v25[v26[5]];
          *(void *)&__dst[v26[6]] = *(void *)&v25[v26[6]];
          uint64_t v72 = v26[7];
          uint64_t v195 = &__dst[v72];
          uint64_t v73 = &v25[v72];
          uint64_t v74 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v195, v73, v74);
          (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(__dst, 0, 1, v26);
        }
        v21[v23[7]] = v22[v23[7]];
        v21[v23[8]] = v22[v23[8]];
        v21[v23[9]] = v22[v23[9]];
        v21[v23[10]] = v22[v23[10]];
        uint64_t v75 = v202[11];
        uint64_t v76 = &v209[v75];
        uint64_t v77 = &v10[v75];
        uint64_t v78 = sub_1C151D2DC();
        uint64_t v79 = *(void *)(v78 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v76, v77, v78);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
        }
        long long v7 = v204;
        *(_OWORD *)&v209[v202[12]] = *(_OWORD *)&v10[v202[12]];
        uint64_t v88 = v202[13];
        uint64_t v89 = *(void *)&v10[v88];
        if (v89 == 2) {
          uint64_t v89 = 2;
        }
        *(void *)&v209[v88] = v89;
        *(void *)&v209[v202[14]] = *(void *)&v10[v202[14]];
        goto LABEL_96;
      case 4u:
        id v205 = v7;
        uint64_t v29 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v29;
        v9[16] = v10[16];
        *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
        *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
        uint64_t v30 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v31 = v30[8];
        uint64_t v32 = &v9[v31];
        uint64_t v33 = &v10[v31];
        uint64_t v34 = sub_1C1515FDC();
        uint64_t v35 = *(void *)(v34 - 8);
        uint64_t v198 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
        v198(v32, v33, v34);
        uint64_t v203 = v30;
        uint64_t v36 = v30[9];
        uint64_t v37 = &v9[v36];
        uint64_t v38 = &v10[v36];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v10[v36], 1, v34))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          v198(v37, v38, v34);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v34);
        }
        *(void *)&v9[v30[10]] = *(void *)&v10[v30[10]];
        *(void *)&v9[v30[11]] = *(void *)&v10[v30[11]];
        uint64_t v81 = v30[12];
        uint64_t v210 = v9;
        uint64_t v82 = &v9[v81];
        uint64_t v83 = &v10[v81];
        uint64_t v84 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v85 = *((void *)v84 - 1);
        uint64_t v196 = v34;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v85 + 48))(v83, 1, v84))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          uint64_t v193 = v85;
          *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
          *((void *)v82 + 2) = *((void *)v83 + 2);
          v82[24] = v83[24];
          *((void *)v82 + 4) = *((void *)v83 + 4);
          *(_OWORD *)(v82 + 40) = *(_OWORD *)(v83 + 40);
          v82[56] = v83[56];
          uint64_t v90 = v84[10];
          uint64_t v91 = &v82[v90];
          uint64_t v92 = &v83[v90];
          *uint64_t v91 = v83[v90];
          v91[1] = v83[v90 + 1];
          uint64_t v192 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v93 = v192[6];
          uint64_t v194 = &v91[v93];
          uint64_t v94 = &v92[v93];
          uint64_t v95 = (int *)type metadata accessor for SharedItem();
          uint64_t v191 = *((void *)v95 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v191 + 48))(v94, 1, v95))
          {
            uint64_t v96 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v194, v94, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            uint64_t v113 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v194, v94, v113);
            v194[v95[5]] = v94[v95[5]];
            *(void *)&v194[v95[6]] = *(void *)&v94[v95[6]];
            v198(&v194[v95[7]], &v94[v95[7]], v196);
            (*(void (**)(char *, void, uint64_t, int *))(v191 + 56))(v194, 0, 1, v95);
          }
          v91[v192[7]] = v92[v192[7]];
          v91[v192[8]] = v92[v192[8]];
          v91[v192[9]] = v92[v192[9]];
          v91[v192[10]] = v92[v192[10]];
          uint64_t v114 = v84[11];
          uint64_t v115 = &v82[v114];
          uint64_t v116 = &v83[v114];
          uint64_t v117 = sub_1C151D2DC();
          uint64_t v118 = *(void *)(v117 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v115, v116, v117);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
          }
          uint64_t v30 = v203;
          *(_OWORD *)&v82[v84[12]] = *(_OWORD *)&v83[v84[12]];
          uint64_t v120 = v84[13];
          uint64_t v121 = *(void *)&v83[v120];
          if (v121 == 2) {
            uint64_t v121 = 2;
          }
          *(void *)&v82[v120] = v121;
          *(void *)&v82[v84[14]] = *(void *)&v83[v84[14]];
          (*(void (**)(char *, void, uint64_t, int *))(v193 + 56))(v82, 0, 1, v84);
        }
        uint64_t v122 = v30[13];
        unint64_t v123 = &v210[v122];
        uint64_t v124 = &v10[v122];
        uint64_t v125 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v126 = *(void *)(v125 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)unint64_t v123 = *(_OWORD *)v124;
            uint64_t v128 = type metadata accessor for GenericDataVisualization();
            v198(&v123[*(int *)(v128 + 20)], &v124[*(int *)(v128 + 20)], v196);
            uint64_t v30 = v203;
            *(void *)&v123[*(int *)(v128 + 24)] = *(void *)&v124[*(int *)(v128 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v123, v124, *(void *)(v126 + 64));
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
        }
        long long v7 = v205;
        v210[v30[14]] = v10[v30[14]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_97;
      case 8u:
        uint64_t v206 = v7;
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        uint64_t v40 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v41 = &v9[v40];
        uint64_t v42 = &v10[v40];
        long long v43 = *(_OWORD *)&v10[v40 + 16];
        *(_OWORD *)uint64_t v41 = *(_OWORD *)&v10[v40];
        *((_OWORD *)v41 + 1) = v43;
        uint64_t v44 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v45 = *(int *)(v44 + 24);
        uint64_t v46 = &v41[v45];
        uint64_t v47 = &v42[v45];
        uint64_t v48 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v49 = *(void *)(v48 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v87 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v46, v47, v87);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
        }
        *(void *)&v41[*(int *)(v44 + 28)] = *(void *)&v42[*(int *)(v44 + 28)];
        swift_storeEnumTagMultiPayload();
        long long v7 = v206;
        goto LABEL_97;
      case 0xAu:
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        id v51 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v52 = v51[5];
        long long v53 = &v9[v52];
        long long v54 = &v10[v52];
        uint64_t v55 = sub_1C151959C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
        *(void *)&v9[v51[6]] = *(void *)&v10[v51[6]];
        uint64_t v56 = v51[7];
        uint64_t v57 = &v9[v56];
        uint64_t v58 = &v10[v56];
        v57[8] = v58[8];
        *(void *)uint64_t v57 = *(void *)v58;
        *(_OWORD *)&v9[v51[8]] = *(_OWORD *)&v10[v51[8]];
        goto LABEL_96;
      case 0xFu:
        uint64_t v59 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v59;
        v9[16] = v10[16];
        *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
        *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
        uint64_t v60 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        id v61 = &v9[v60];
        id v62 = &v10[v60];
        *(void *)&v9[v60] = *(void *)&v10[v60];
        uint64_t v63 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        long long v64 = &v61[v63];
        uint64_t v65 = &v62[v63];
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v100 = type metadata accessor for PuzzleStatisticValue(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v207 = v100;
            if (EnumCaseMultiPayload == 5)
            {
              uint64_t v153 = type metadata accessor for PuzzleStreak();
              uint64_t v154 = *(void *)(v153 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v65, 1, v153))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v64, v65, *(void *)(*(void *)(v155 - 8) + 64));
              }
              else
              {
                uint64_t v159 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v64, v65, v159);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v64, 0, 1, v153);
              }
              uint64_t v156 = v7;
              uint64_t v100 = v207;
            }
            else
            {
              if (EnumCaseMultiPayload != 4)
              {
                uint64_t v156 = v7;
                memcpy(v64, v65, *(void *)(*(void *)(v100 - 8) + 64));
                goto LABEL_74;
              }
              uint64_t v102 = type metadata accessor for PuzzleStreak();
              uint64_t v103 = *(void *)(v102 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v65, 1, v102))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v64, v65, *(void *)(*(void *)(v104 - 8) + 64));
              }
              else
              {
                uint64_t v157 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v64, v65, v157);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v64, 0, 1, v102);
              }
              uint64_t v156 = v7;
              uint64_t v100 = v207;
            }
            swift_storeEnumTagMultiPayload();
LABEL_74:
            uint64_t v160 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v161 = *(int *)(v160 + 20);
            uint64_t v200 = v64;
            uint64_t v162 = &v64[v161];
            uint64_t v163 = &v65[v161];
            int v164 = swift_getEnumCaseMultiPayload();
            if (v164 == 5)
            {
              uint64_t v168 = type metadata accessor for PuzzleStreak();
              uint64_t v169 = *(void *)(v168 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48))(v163, 1, v168))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v162, v163, *(void *)(*(void *)(v170 - 8) + 64));
              }
              else
              {
                uint64_t v172 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 32))(v162, v163, v172);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v162, 0, 1, v168);
              }
              uint64_t v100 = v207;
            }
            else
            {
              if (v164 != 4)
              {
                memcpy(v162, v163, *(void *)(*(void *)(v100 - 8) + 64));
                goto LABEL_86;
              }
              uint64_t v165 = type metadata accessor for PuzzleStreak();
              uint64_t v166 = *(void *)(v165 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(v163, 1, v165))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v162, v163, *(void *)(*(void *)(v167 - 8) + 64));
              }
              else
              {
                uint64_t v171 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v162, v163, v171);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v166 + 56))(v162, 0, 1, v165);
              }
              uint64_t v100 = v207;
            }
            swift_storeEnumTagMultiPayload();
LABEL_86:
            uint64_t v173 = *(int *)(v160 + 24);
            uint64_t v174 = (char *)v200 + v173;
            uint64_t v175 = &v65[v173];
            int v176 = swift_getEnumCaseMultiPayload();
            long long v7 = v156;
            if (v176 == 5)
            {
              uint64_t v177 = type metadata accessor for PuzzleStreak();
              uint64_t v178 = *(void *)(v177 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48))(v175, 1, v177)) {
                goto LABEL_89;
              }
            }
            else
            {
              if (v176 != 4)
              {
                memcpy(v174, v175, *(void *)(*(void *)(v100 - 8) + 64));
                goto LABEL_95;
              }
              uint64_t v177 = type metadata accessor for PuzzleStreak();
              uint64_t v178 = *(void *)(v177 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48))(v175, 1, v177))
              {
LABEL_89:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v174, v175, *(void *)(*(void *)(v179 - 8) + 64));
                goto LABEL_94;
              }
            }
            uint64_t v180 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(v174, v175, v180);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v178 + 56))(v174, 0, 1, v177);
            goto LABEL_94;
          case 2u:
            uint64_t v97 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v98 = *((void *)v97 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v98 + 48))(v65, 1, v97))
            {
              sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              memcpy(v64, v65, *(void *)(*(void *)(v99 - 8) + 64));
            }
            else
            {
              uint64_t v129 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v64, v65, v129);
              uint64_t v130 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              *(_OWORD *)&v64[v130[5]] = *(_OWORD *)&v65[v130[5]];
              uint64_t v131 = v130[6];
              uint64_t v132 = &v64[v131];
              long long v133 = &v65[v131];
              long long v134 = *((_OWORD *)v133 + 1);
              *(_OWORD *)uint64_t v132 = *(_OWORD *)v133;
              *((_OWORD *)v132 + 1) = v134;
              *(void *)&v64[v130[7]] = *(void *)&v65[v130[7]];
              *(void *)&v64[v130[8]] = *(void *)&v65[v130[8]];
              *(void *)&v64[v97[5]] = *(void *)&v65[v97[5]];
              *(void *)&v64[v97[6]] = *(void *)&v65[v97[6]];
              *(_OWORD *)&v64[v97[7]] = *(_OWORD *)&v65[v97[7]];
              (*(void (**)(char *, void, uint64_t, int *))(v98 + 56))(v64, 0, 1, v97);
            }
            goto LABEL_95;
          case 3u:
            uint64_t v208 = v7;
            uint64_t v105 = *((void *)v65 + 1);
            *(void *)long long v64 = *(void *)v65;
            *((void *)v64 + 1) = v105;
            v64[16] = v65[16];
            uint64_t v106 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v107 = v106[6];
            uint64_t v199 = v64;
            uint64_t v108 = &v64[v107];
            id v109 = &v65[v107];
            uint64_t v110 = type metadata accessor for PuzzleStreak();
            uint64_t v111 = *(void *)(v110 - 8);
            uint64_t v197 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48);
            if (v197(v109, 1, v110))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v108, v109, *(void *)(*(void *)(v112 - 8) + 64));
            }
            else
            {
              uint64_t v135 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v108, v109, v135);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
            }
            uint64_t v136 = v106[7];
            uint64_t v137 = (char *)v199 + v136;
            uint64_t v138 = &v65[v136];
            if (v197(&v65[v136], 1, v110))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
            }
            else
            {
              uint64_t v140 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v137, v138, v140);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v137, 0, 1, v110);
            }
            long long v7 = v208;
            uint64_t v141 = v106[8];
            uint64_t v142 = (_OWORD *)((char *)v199 + v141);
            uint64_t v143 = &v65[v141];
            long long v144 = *((_OWORD *)v143 + 1);
            *uint64_t v142 = *(_OWORD *)v143;
            v142[1] = v144;
            *(_OWORD *)((char *)v142 + 25) = *(_OWORD *)(v143 + 25);
            uint64_t v145 = v106[9];
            uint64_t v146 = (_OWORD *)((char *)v199 + v145);
            uint64_t v147 = &v65[v145];
            *(_OWORD *)((char *)v146 + 25) = *(_OWORD *)(v147 + 25);
            long long v148 = *((_OWORD *)v147 + 1);
            _OWORD *v146 = *(_OWORD *)v147;
            v146[1] = v148;
            uint64_t v149 = v106[10];
            uint64_t v150 = (_OWORD *)((char *)v199 + v149);
            uint64_t v151 = &v65[v149];
            long long v152 = *((_OWORD *)v151 + 1);
            *uint64_t v150 = *(_OWORD *)v151;
            v150[1] = v152;
            *(_OWORD *)((char *)v150 + 25) = *(_OWORD *)(v151 + 25);
            goto LABEL_95;
          default:
            uint64_t v66 = type metadata accessor for PuzzleStatisticValue(0);
            int v67 = swift_getEnumCaseMultiPayload();
            if (v67 == 5)
            {
              uint64_t v68 = type metadata accessor for PuzzleStreak();
              uint64_t v69 = *(void *)(v68 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v65, 1, v68)) {
                goto LABEL_18;
              }
            }
            else
            {
              if (v67 != 4)
              {
                memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
                goto LABEL_95;
              }
              uint64_t v68 = type metadata accessor for PuzzleStreak();
              uint64_t v69 = *(void *)(v68 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v65, 1, v68))
              {
LABEL_18:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v64, v65, *(void *)(*(void *)(v70 - 8) + 64));
                goto LABEL_94;
              }
            }
            uint64_t v158 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v64, v65, v158);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v64, 0, 1, v68);
LABEL_94:
            swift_storeEnumTagMultiPayload();
LABEL_95:
            swift_storeEnumTagMultiPayload();
LABEL_96:
            swift_storeEnumTagMultiPayload();
LABEL_97:
            uint64_t v181 = v7[8];
            uint64_t v182 = (_OWORD *)((char *)a1 + v181);
            uint64_t v183 = (_OWORD *)((char *)a2 + v181);
            long long v184 = v183[1];
            *uint64_t v182 = *v183;
            v182[1] = v184;
            uint64_t v185 = v7[9];
            uint64_t v186 = (_OWORD *)((char *)a1 + v185);
            long long v187 = (_OWORD *)((char *)a2 + v185);
            long long v188 = v187[1];
            *uint64_t v186 = *v187;
            v186[1] = v188;
            sub_1C0955B70();
            *(void *)((char *)a1 + *(int *)(v189 + 48)) = *(void *)((char *)a2 + *(int *)(v189 + 48));
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_97;
    }
  }
  return a1;
}

uint64_t sub_1C0963504()
{
  uint64_t result = type metadata accessor for FormatItemNodeLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_1C157D810;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t NativeAdHeadline.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend((id)sub_1C151D58C(), sel_articleID, 0xD000000000000013, 0x80000001C1615F80);
  swift_unknownObjectRelease();
  sub_1C151E62C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1CB10]);
  uint64_t v4 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithString_, v4);

  if (!v5) {
    goto LABEL_6;
  }
  sub_1C151E79C();
  uint64_t v6 = sub_1C151F6EC();
  swift_bridgeObjectRelease();
  if (!v6)
  {

LABEL_6:
    uint64_t v8 = sub_1C151CA3C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = a1;
    uint64_t v12 = 1;
    goto LABEL_8;
  }
  id v7 = objc_msgSend((id)sub_1C151D58C(), sel_title);
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_1C151E62C();
  }
  sub_1C151CA2C();

  uint64_t v13 = sub_1C151CA3C();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v10 = v13;
  uint64_t v11 = a1;
  uint64_t v12 = 0;
LABEL_8:
  return v9(v11, v12, 1, v10);
}

uint64_t DebugNativeAdHeadline.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend((id)sub_1C151D84C(), sel_articleID, 0xD000000000000013, 0x80000001C1615F80);
  swift_unknownObjectRelease();
  sub_1C151E62C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1CB10]);
  uint64_t v4 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithString_, v4);

  if (v5)
  {
    id v6 = objc_msgSend((id)sub_1C151D84C(), sel_title);
    swift_unknownObjectRelease();
    if (v6)
    {
      sub_1C151E62C();
    }
    sub_1C151CA2C();
    uint64_t v12 = sub_1C151CA3C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v7 = sub_1C151CA3C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }
  return v8(v10, v11, 1, v9);
}

uint64_t FeedReloadChecker.__allocating_init(changes:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t FeedReloadChecker.init(changes:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t FeedReloadChecker.shouldReload(headline:)(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  id v5 = (unsigned char *)(v2 + 40);
  while (1)
  {
    if (*v5 - 1 >= 2)
    {
      uint64_t v12 = *((void *)v5 - 1);
      if (*v5)
      {
        swift_bridgeObjectRetain();
        id v13 = objc_msgSend(a1, sel_sourceChannelID);
        if (!v13)
        {
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        unint64_t v14 = v13;
        uint64_t v15 = sub_1C151E62C();
        uint64_t v9 = v16;

        uint64_t v10 = v15;
      }
      else
      {
        swift_bridgeObjectRetain();
        id v6 = objc_msgSend(a1, sel_identifier);
        uint64_t v7 = sub_1C151E62C();
        uint64_t v9 = v8;

        uint64_t v10 = v7;
      }
      char v11 = sub_1BFF896B4(v10, v9, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11) {
        break;
      }
    }
LABEL_5:
    v5 += 16;
    if (!--v3)
    {
      uint64_t v17 = 0;
      goto LABEL_14;
    }
  }
  uint64_t v17 = 1;
LABEL_14:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t FeedReloadChecker.shouldReload(puzzle:)(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  id v5 = (unsigned __int8 *)(v2 + 40);
  id v6 = (unsigned __int8 *)(v2 + 40);
  do
  {
    int v7 = *v6;
    v6 += 16;
    if (v7 == 1)
    {
      uint64_t v8 = *((void *)v5 - 1);
      swift_bridgeObjectRetain();
      id v9 = objc_msgSend(a1, sel_identifier);
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;

      LOBYTE(v9) = sub_1BFF896B4(v10, v12, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v9)
      {
        uint64_t v13 = 1;
        goto LABEL_8;
      }
    }
    id v5 = v6;
    --v3;
  }
  while (v3);
  uint64_t v13 = 0;
LABEL_8:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t FeedReloadChecker.shouldReload(puzzleStatistic:)(void **a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = swift_bridgeObjectRetain() + 40;
  id v5 = (unsigned __int8 *)v4;
  while (1)
  {
    int v7 = *v5;
    v5 += 16;
    if (v7 == 2)
    {
      uint64_t v8 = *(void *)(v4 - 8);
      id v9 = *a1;
      swift_bridgeObjectRetain();
      id v10 = objc_msgSend(v9, sel_identifier);
      uint64_t v11 = sub_1C151E62C();
      uint64_t v13 = v12;

      type metadata accessor for PuzzleStatistic();
      PuzzleStatisticCategory.statisticType.getter(&v16);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v6 = sub_1BFF896B4(v11, v13, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v6) {
        break;
      }
    }
    uint64_t v4 = (uint64_t)v5;
    if (!--v3)
    {
      uint64_t v14 = 0;
      goto LABEL_10;
    }
  }
  uint64_t v14 = 1;
LABEL_10:
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t FeedReloadChecker.shouldReload(issue:)(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  id v5 = (unsigned __int8 *)(v2 + 40);
  char v6 = (unsigned __int8 *)(v2 + 40);
  do
  {
    unsigned int v7 = *v6;
    v6 += 16;
    if (v7 >= 3)
    {
      uint64_t v8 = *((void *)v5 - 1);
      swift_bridgeObjectRetain();
      id v9 = objc_msgSend(objc_msgSend(a1, sel_sourceChannel), sel_identifier);
      swift_unknownObjectRelease();
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;

      LOBYTE(v10) = sub_1BFF896B4(v10, v12, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v10)
      {
        uint64_t v13 = 1;
        goto LABEL_8;
      }
    }
    id v5 = v6;
    --v3;
  }
  while (v3);
  uint64_t v13 = 0;
LABEL_8:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t FeedReloadChecker.shouldReload(formatGroup:)()
{
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v173 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v185);
  uint64_t v189 = (uint64_t)v173 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v187);
  uint64_t v182 = (uint64_t)v173 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v173 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v186 = (uint64_t)v173 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v188 = (uint64_t)v173 - v14;
  uint64_t v191 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v191);
  uint64_t v199 = (uint64_t)v173 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v190);
  uint64_t v198 = (void *)((char *)v173 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (id *)((char *)v173 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v203 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v202 = (uint64_t)v173 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatFeedGroup();
  type metadata accessor for FormatContent.Resolved();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C0BF11C4(v22);
  uint64_t v181 = 0;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24) {
    goto LABEL_187;
  }
  unint64_t v25 = 0;
  uint64_t v26 = v23 + 32;
  uint64_t v178 = "uzzlesSolved";
  int v176 = "fastestTimeByDifficultyLevel";
  v173[1] = "averageTimeByDifficultyLevel";
  uint64_t v179 = "fficultyLevel";
  uint64_t v194 = v6;
  uint64_t v195 = v10;
  uint64_t v193 = v17;
  uint64_t v192 = v19;
  uint64_t v184 = v23;
  uint64_t v180 = v2;
  uint64_t v175 = v24;
  uint64_t v174 = v23 + 32;
LABEL_3:
  if (v25 >= *(void *)(v23 + 16))
  {
LABEL_197:
    __break(1u);
    JUMPOUT(0x1C096577CLL);
  }
  uint64_t v27 = *(void *)(v26 + 16 * v25);
  uint64_t v200 = *(void *)(v27 + 16);
  if (!v200) {
    goto LABEL_186;
  }
  unint64_t v177 = v25;
  uint64_t v201 = v27 + ((*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80));
  swift_bridgeObjectRetain();
  unint64_t v28 = 0;
  uint64_t v197 = v27;
LABEL_8:
  if (v28 >= *(void *)(v27 + 16))
  {
    __break(1u);
    goto LABEL_197;
  }
  uint64_t v29 = v202;
  unint64_t v30 = v28;
  sub_1C0965824(v201 + *(void *)(v203 + 72) * v28, v202, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
  unint64_t v204 = v30 + 1;
  sub_1C0965824(v29, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  sub_1C096588C(v29, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v36 = (char *)*v19;
      uint64_t v37 = *(void *)(v196 + 16);
      uint64_t v38 = *(void *)(v37 + 16);
      if (v38)
      {
        uint64_t v39 = v37 + 32;
        v173[0] = *(void *)(v196 + 16);
        swift_bridgeObjectRetain();
        uint64_t v40 = 0;
        uint64_t v183 = v36;
        do
        {
          uint64_t v41 = (uint64_t *)(v39 + 16 * v40);
          if (*((unsigned __int8 *)v41 + 8) >= 3u)
          {
            uint64_t v42 = *v41;
            swift_bridgeObjectRetain();
            id v43 = objc_msgSend(objc_msgSend(v36, sel_sourceChannel), sel_identifier);
            swift_unknownObjectRelease();
            uint64_t v44 = sub_1C151E62C();
            uint64_t v46 = v45;

            if (*(void *)(v42 + 16))
            {
              sub_1C1520DBC();
              sub_1C151E77C();
              uint64_t v47 = sub_1C1520E0C();
              uint64_t v48 = -1 << *(unsigned char *)(v42 + 32);
              unint64_t v49 = v47 & ~v48;
              if ((*(void *)(v42 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49))
              {
                uint64_t v50 = *(void *)(v42 + 48);
                id v51 = (void *)(v50 + 16 * v49);
                BOOL v52 = *v51 == v44 && v51[1] == v46;
                if (v52 || (sub_1C1520A9C() & 1) != 0)
                {
LABEL_188:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  return 1;
                }
                uint64_t v53 = ~v48;
                while (1)
                {
                  unint64_t v49 = (v49 + 1) & v53;
                  if (((*(void *)(v42 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
                    break;
                  }
                  long long v54 = (void *)(v50 + 16 * v49);
                  BOOL v55 = *v54 == v44 && v54[1] == v46;
                  if (v55 || (sub_1C1520A9C() & 1) != 0) {
                    goto LABEL_188;
                  }
                }
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v19 = v192;
            uint64_t v36 = v183;
          }
          ++v40;
        }
        while (v40 != v38);

        swift_bridgeObjectRelease();
        uint64_t v27 = v197;
        char v6 = v194;
        uint64_t v10 = v195;
      }
      else
      {

        char v6 = v194;
      }
      goto LABEL_7;
    case 2u:
    case 5u:
      swift_unknownObjectRelease();
      goto LABEL_7;
    case 3u:
      uint64_t v56 = v189;
      sub_1BFEADF18((uint64_t)v19, v189, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      uint64_t v57 = (uint64_t)v180;
      sub_1C0965824(v56 + *(int *)(v185 + 36), (uint64_t)v180, (uint64_t (*)(void))sub_1BFEC8548);
      sub_1BFEC84E0();
      uint64_t v59 = v58;
      uint64_t v60 = *(void *)(v58 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v57, 1, v58) == 1)
      {
        sub_1C096588C(v57, (uint64_t (*)(void))sub_1BFEC8548);
LABEL_184:
        sub_1C096588C(v189, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
        goto LABEL_7;
      }
      sub_1C151948C();
      uint64_t v137 = v205;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v57, v59);
      uint64_t v138 = *(void *)(v196 + 16);
      uint64_t v139 = *(void *)(v138 + 16);
      if (!v139)
      {
        swift_unknownObjectRelease();
        goto LABEL_184;
      }
      uint64_t v140 = v138 + 32;
      v173[0] = *(void *)(v196 + 16);
      swift_bridgeObjectRetain();
      uint64_t v141 = 0;
      id v142 = v137;
      uint64_t v183 = v137;
      while (2)
      {
        uint64_t v143 = (uint64_t *)(v140 + 16 * v141);
        if (*((unsigned __int8 *)v143 + 8) - 1 < 2) {
          goto LABEL_136;
        }
        uint64_t v144 = *v143;
        if (!*((unsigned char *)v143 + 8))
        {
          swift_bridgeObjectRetain();
          id v145 = objc_msgSend(v142, sel_identifier);
          uint64_t v146 = sub_1C151E62C();
          uint64_t v148 = v147;

          if (*(void *)(v144 + 16))
          {
            sub_1C1520DBC();
            sub_1C151E77C();
            uint64_t v149 = sub_1C1520E0C();
            uint64_t v150 = -1 << *(unsigned char *)(v144 + 32);
            unint64_t v151 = v149 & ~v150;
            if ((*(void *)(v144 + 56 + ((v151 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v151))
            {
              uint64_t v152 = *(void *)(v144 + 48);
              uint64_t v153 = (void *)(v152 + 16 * v151);
              BOOL v154 = *v153 == v146 && v153[1] == v148;
              if (v154 || (sub_1C1520A9C() & 1) != 0) {
                goto LABEL_192;
              }
              uint64_t v155 = ~v150;
              while (1)
              {
                unint64_t v151 = (v151 + 1) & v155;
                if (((*(void *)(v144 + 56 + ((v151 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v151) & 1) == 0) {
                  goto LABEL_134;
                }
                uint64_t v156 = (void *)(v152 + 16 * v151);
                BOOL v157 = *v156 == v146 && v156[1] == v148;
                if (v157 || (sub_1C1520A9C() & 1) != 0) {
                  goto LABEL_192;
                }
              }
            }
LABEL_172:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_135;
          }
          goto LABEL_170;
        }
        swift_bridgeObjectRetain();
        id v158 = objc_msgSend(v142, sel_sourceChannelID);
        if (!v158)
        {
LABEL_171:
          swift_bridgeObjectRelease();
LABEL_136:
          if (++v141 == v139)
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v27 = v197;
            uint64_t v19 = v192;
            goto LABEL_184;
          }
          continue;
        }
        break;
      }
      uint64_t v159 = v158;
      uint64_t v160 = sub_1C151E62C();
      uint64_t v162 = v161;

      if (!*(void *)(v144 + 16))
      {
LABEL_170:
        swift_bridgeObjectRelease();
        goto LABEL_171;
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t v163 = sub_1C1520E0C();
      uint64_t v164 = -1 << *(unsigned char *)(v144 + 32);
      unint64_t v165 = v163 & ~v164;
      if (((*(void *)(v144 + 56 + ((v165 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v165) & 1) == 0) {
        goto LABEL_172;
      }
      uint64_t v166 = *(void *)(v144 + 48);
      uint64_t v167 = (void *)(v166 + 16 * v165);
      BOOL v168 = *v167 == v160 && v167[1] == v162;
      if (!v168 && (sub_1C1520A9C() & 1) == 0)
      {
        uint64_t v169 = ~v164;
        while (1)
        {
          unint64_t v165 = (v165 + 1) & v169;
          if (((*(void *)(v144 + 56 + ((v165 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v165) & 1) == 0) {
            break;
          }
          uint64_t v170 = (void *)(v166 + 16 * v165);
          BOOL v171 = *v170 == v160 && v170[1] == v162;
          if (v171 || (sub_1C1520A9C() & 1) != 0) {
            goto LABEL_192;
          }
        }
LABEL_134:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v6 = v194;
LABEL_135:
        uint64_t v10 = v195;
        id v142 = v183;
        goto LABEL_136;
      }
LABEL_192:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_1C096588C(v189, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
LABEL_193:
      swift_bridgeObjectRelease();
LABEL_194:
      swift_bridgeObjectRelease();
      return 1;
    case 4u:
      id v61 = (char *)*v19;
      uint64_t v62 = *(void *)(v196 + 16);
      uint64_t v63 = *(void *)(v62 + 16);
      if (!v63) {
        goto LABEL_175;
      }
      uint64_t v64 = v62 + 32;
      v173[0] = *(void *)(v196 + 16);
      swift_bridgeObjectRetain();
      uint64_t v65 = 0;
      uint64_t v183 = v61;
      do
      {
        uint64_t v66 = (uint64_t *)(v64 + 16 * v65);
        if (*((unsigned char *)v66 + 8) == 1)
        {
          uint64_t v67 = *v66;
          swift_bridgeObjectRetain();
          id v68 = objc_msgSend(v61, sel_identifier);
          uint64_t v69 = sub_1C151E62C();
          uint64_t v71 = v70;

          if (*(void *)(v67 + 16))
          {
            sub_1C1520DBC();
            sub_1C151E77C();
            uint64_t v72 = sub_1C1520E0C();
            uint64_t v73 = -1 << *(unsigned char *)(v67 + 32);
            unint64_t v74 = v72 & ~v73;
            if ((*(void *)(v67 + 56 + ((v74 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v74))
            {
              uint64_t v75 = *(void *)(v67 + 48);
              uint64_t v76 = (void *)(v75 + 16 * v74);
              BOOL v77 = *v76 == v69 && v76[1] == v71;
              if (v77 || (sub_1C1520A9C() & 1) != 0)
              {
LABEL_189:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                return 1;
              }
              uint64_t v78 = ~v73;
              while (1)
              {
                unint64_t v74 = (v74 + 1) & v78;
                if (((*(void *)(v67 + 56 + ((v74 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v74) & 1) == 0) {
                  break;
                }
                uint64_t v79 = (void *)(v75 + 16 * v74);
                BOOL v80 = *v79 == v69 && v79[1] == v71;
                if (v80 || (sub_1C1520A9C() & 1) != 0) {
                  goto LABEL_189;
                }
              }
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v27 = v197;
          id v61 = v183;
        }
        ++v65;
      }
      while (v65 != v63);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      char v6 = v194;
      uint64_t v10 = v195;
      goto LABEL_181;
    case 6u:
      sub_1BFEADF18((uint64_t)v19, (uint64_t)v198, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v81 = *(void *)(v196 + 16);
      uint64_t v82 = *(void *)(v81 + 16);
      if (!v82) {
        goto LABEL_180;
      }
      uint64_t v83 = (char *)(v81 + 32);
      v173[0] = *(void *)(v196 + 16);
      swift_bridgeObjectRetain();
      uint64_t v84 = 0;
      uint64_t v183 = v83;
      while (1)
      {
        uint64_t v85 = &v83[16 * v84];
        if (v85[8] == 2)
        {
          uint64_t v86 = *(void *)v85;
          uint64_t v87 = v198;
          uint64_t v88 = (void *)*v198;
          swift_bridgeObjectRetain();
          id v89 = objc_msgSend(v88, sel_identifier);
          uint64_t v90 = sub_1C151E62C();
          uint64_t v92 = v91;

          sub_1C0965824((uint64_t)v87 + *(int *)(v190 + 20), v199, type metadata accessor for PuzzleStatisticCategory);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              sub_1BFEADF18(v199, (uint64_t)v6, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
              sub_1C0965824((uint64_t)v6, (uint64_t)v10, type metadata accessor for PuzzleStatisticValue);
              if (swift_getEnumCaseMultiPayload() == 2) {
                goto LABEL_69;
              }
              sub_1C096588C((uint64_t)v10, type metadata accessor for PuzzleStatisticValue);
              uint64_t v94 = v182;
              sub_1C0965824((uint64_t)v6, v182, type metadata accessor for PuzzleStatisticValue);
              if (swift_getEnumCaseMultiPayload() == 3)
              {
                uint64_t v95 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
                uint64_t v96 = (uint64_t)v6;
              }
              else
              {
                sub_1C096588C(v94, type metadata accessor for PuzzleStatisticValue);
LABEL_69:
                uint64_t v95 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
                uint64_t v96 = (uint64_t)v6;
              }
LABEL_73:
              sub_1C096588C(v96, v95);
LABEL_74:
              id v205 = (char *)v90;
              uint64_t v206 = v92;
              swift_bridgeObjectRetain();
              sub_1C151E80C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v97 = v206;
              if (*(void *)(v86 + 16))
              {
                uint64_t v98 = v205;
                sub_1C1520DBC();
                sub_1C151E77C();
                uint64_t v99 = sub_1C1520E0C();
                uint64_t v100 = -1 << *(unsigned char *)(v86 + 32);
                unint64_t v101 = v99 & ~v100;
                if ((*(void *)(v86 + 56 + ((v101 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v101))
                {
                  uint64_t v102 = *(void *)(v86 + 48);
                  uint64_t v103 = (void **)(v102 + 16 * v101);
                  BOOL v104 = *v103 == v98 && v103[1] == v97;
                  if (v104 || (sub_1C1520A9C() & 1) != 0)
                  {
LABEL_190:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_1C096588C((uint64_t)v198, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                    swift_bridgeObjectRelease();
                    goto LABEL_194;
                  }
                  uint64_t v105 = ~v100;
                  while (1)
                  {
                    unint64_t v101 = (v101 + 1) & v105;
                    if (((*(void *)(v86 + 56 + ((v101 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v101) & 1) == 0) {
                      break;
                    }
                    uint64_t v106 = (void **)(v102 + 16 * v101);
                    BOOL v107 = *v106 == v98 && v106[1] == v97;
                    if (v107 || (sub_1C1520A9C() & 1) != 0) {
                      goto LABEL_190;
                    }
                  }
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              char v6 = v194;
              uint64_t v10 = v195;
              uint64_t v83 = v183;
              break;
            case 2u:
              sub_1C096588C(v199, type metadata accessor for PuzzleStatisticCategory);
              goto LABEL_74;
            case 3u:
              sub_1C096588C(v199, type metadata accessor for PuzzleStatisticCategory);
              goto LABEL_74;
            default:
              uint64_t v93 = v188;
              sub_1BFEADF18(v199, v188, type metadata accessor for PuzzleStatisticValue);
              sub_1C0965824(v93, v186, type metadata accessor for PuzzleStatisticValue);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 2u:
                  uint64_t v95 = type metadata accessor for PuzzleStatisticValue;
                  uint64_t v96 = v188;
                  goto LABEL_73;
                case 3u:
                  uint64_t v95 = type metadata accessor for PuzzleStatisticValue;
                  uint64_t v96 = v188;
                  goto LABEL_73;
                case 4u:
                case 5u:
                  sub_1C096588C(v186, type metadata accessor for PuzzleStatisticValue);
                  sub_1C096588C(v188, type metadata accessor for PuzzleStatisticValue);
                  break;
                case 6u:
                  sub_1C096588C(v188, type metadata accessor for PuzzleStatisticValue);
                  break;
                default:
                  sub_1C096588C(v188, type metadata accessor for PuzzleStatisticValue);
                  break;
              }
              goto LABEL_74;
          }
        }
        if (++v84 == v82)
        {
          swift_bridgeObjectRelease();
          uint64_t v27 = v197;
LABEL_180:
          sub_1C096588C((uint64_t)v198, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
LABEL_181:
          uint64_t v19 = v192;
LABEL_7:
          unint64_t v28 = v204;
          if (v204 != v200) {
            goto LABEL_8;
          }
          swift_bridgeObjectRelease();
          uint64_t v23 = v184;
          uint64_t v24 = v175;
          unint64_t v25 = v177;
          uint64_t v26 = v174;
LABEL_186:
          if (++v25 == v24)
          {
LABEL_187:
            swift_bridgeObjectRelease();
            return 0;
          }
          goto LABEL_3;
        }
      }
    case 7u:
      sub_1C096588C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      goto LABEL_7;
    case 8u:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    default:
      uint64_t v31 = (char *)*v19;
      uint64_t v32 = *(void *)(v196 + 16);
      uint64_t v33 = *(void *)(v32 + 16);
      if (!v33)
      {
LABEL_175:
        swift_unknownObjectRelease();
        goto LABEL_181;
      }
      uint64_t v34 = v32 + 32;
      v173[0] = *(void *)(v196 + 16);
      swift_bridgeObjectRetain();
      uint64_t v35 = 0;
      uint64_t v183 = v31;
      break;
  }
  while (1)
  {
    uint64_t v108 = (uint64_t *)(v34 + 16 * v35);
    if (*((unsigned __int8 *)v108 + 8) - 1 < 2) {
      goto LABEL_95;
    }
    uint64_t v109 = *v108;
    if (*((unsigned char *)v108 + 8))
    {
      swift_bridgeObjectRetain();
      id v123 = objc_msgSend(v31, sel_sourceChannelID);
      if (!v123) {
        goto LABEL_130;
      }
      uint64_t v124 = v123;
      uint64_t v125 = sub_1C151E62C();
      uint64_t v127 = v126;

      if (!*(void *)(v109 + 16))
      {
LABEL_129:
        swift_bridgeObjectRelease();
LABEL_130:
        swift_bridgeObjectRelease();
        goto LABEL_95;
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t v128 = sub_1C1520E0C();
      uint64_t v129 = -1 << *(unsigned char *)(v109 + 32);
      unint64_t v130 = v128 & ~v129;
      if (((*(void *)(v109 + 56 + ((v130 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v130) & 1) == 0)
      {
LABEL_131:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_94;
      }
      uint64_t v131 = *(void *)(v109 + 48);
      uint64_t v132 = (void *)(v131 + 16 * v130);
      BOOL v133 = *v132 == v125 && v132[1] == v127;
      if (v133 || (sub_1C1520A9C() & 1) != 0)
      {
LABEL_191:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_193;
      }
      uint64_t v134 = ~v129;
      while (1)
      {
        unint64_t v130 = (v130 + 1) & v134;
        if (((*(void *)(v109 + 56 + ((v130 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v130) & 1) == 0) {
          break;
        }
        uint64_t v135 = (void *)(v131 + 16 * v130);
        BOOL v136 = *v135 == v125 && v135[1] == v127;
        if (v136 || (sub_1C1520A9C() & 1) != 0) {
          goto LABEL_191;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      id v110 = objc_msgSend(v31, sel_identifier);
      uint64_t v111 = sub_1C151E62C();
      uint64_t v113 = v112;

      if (!*(void *)(v109 + 16)) {
        goto LABEL_129;
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t v114 = sub_1C1520E0C();
      uint64_t v115 = -1 << *(unsigned char *)(v109 + 32);
      unint64_t v116 = v114 & ~v115;
      if (((*(void *)(v109 + 56 + ((v116 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v116) & 1) == 0) {
        goto LABEL_131;
      }
      uint64_t v117 = *(void *)(v109 + 48);
      uint64_t v118 = (void *)(v117 + 16 * v116);
      BOOL v119 = *v118 == v111 && v118[1] == v113;
      if (v119 || (sub_1C1520A9C() & 1) != 0) {
        goto LABEL_191;
      }
      uint64_t v120 = ~v115;
      while (1)
      {
        unint64_t v116 = (v116 + 1) & v120;
        if (((*(void *)(v109 + 56 + ((v116 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v116) & 1) == 0) {
          break;
        }
        uint64_t v121 = (void *)(v117 + 16 * v116);
        BOOL v122 = *v121 == v111 && v121[1] == v113;
        if (v122 || (sub_1C1520A9C() & 1) != 0) {
          goto LABEL_191;
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v194;
LABEL_94:
    uint64_t v10 = v195;
    uint64_t v31 = v183;
LABEL_95:
    if (++v35 == v33)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v197;
      goto LABEL_181;
    }
  }
}

uint64_t FeedReloadChecker.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedReloadChecker.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0965824(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C096588C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatRatio(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatRatio(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatRatio(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedReloadChange()
{
  return &type metadata for FeedReloadChange;
}

uint64_t type metadata accessor for FeedReloadChecker()
{
  return self;
}

uint64_t method lookup function for FeedReloadChecker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedReloadChecker);
}

uint64_t dispatch thunk of FeedReloadChecker.__allocating_init(changes:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void PuzzleAccessoryInputConfiguration.init(with:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(void *)(a1 + 16)) {
    goto LABEL_19;
  }
  unint64_t v4 = sub_1BFEF2D8C(1701869940, 0xE400000000000000);
  if (v5)
  {
    sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v38);
    sub_1C0969434();
    if (swift_dynamicCast())
    {
      char v6 = v43;
      swift_bridgeObjectRelease();

LABEL_20:
      *(void *)(a2 + 64) = 0;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return;
    }
  }
  if (!*(void *)(a1 + 16) || (unint64_t v7 = sub_1BFEF2D8C(1701869940, 0xE400000000000000), (v8 & 1) == 0))
  {
LABEL_19:
    long long v38 = 0u;
    long long v39 = 0u;
    sub_1BFEFE4A0((uint64_t)&v38);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v38);
  sub_1BFEFE4A0((uint64_t)&v38);
  if (!*(void *)(a1 + 16)
    || (unint64_t v9 = sub_1BFEF2D8C(25705, 0xE200000000000000), (v10 & 1) == 0)
    || (sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v38), (swift_dynamicCast() & 1) == 0))
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1C15198DC();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C15198AC();
    os_log_type_t v19 = sub_1C151F36C();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      *(void *)&long long v38 = v21;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C151E34C();
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      id v43 = (void *)sub_1BFDA76EC(v27, v29, (uint64_t *)&v38);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      unint64_t v25 = "Failed parsing PuzzleAccessoryInputConfig. Invalid id entry: %s";
      goto LABEL_25;
    }
LABEL_30:

    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  uint64_t v11 = v44;
  if (!*(void *)(a1 + 16)
    || (uint64_t v12 = (uint64_t)v43, v13 = sub_1BFEF2D8C(1701869940, 0xE400000000000000), (v14 & 1) == 0)
    || (sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v38), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1C15198DC();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C15198AC();
    os_log_type_t v19 = sub_1C151F36C();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      *(void *)&long long v38 = v21;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1C151E34C();
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      id v43 = (void *)sub_1BFDA76EC(v31, v33, (uint64_t *)&v38);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      unint64_t v25 = "Failed parsing PuzzleAccessoryInputConfig. Invalid type entry: %s";
      goto LABEL_25;
    }
    goto LABEL_30;
  }
  sub_1C096811C((uint64_t)v43, v44, a1, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  uint64_t v15 = v39;
  unint64_t v16 = v41;
  if ((unint64_t)v39 >> 8 == 0xFFFFFFFF && v41 <= 3)
  {
    swift_bridgeObjectRelease();
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C15198DC();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C15198AC();
    os_log_type_t v19 = sub_1C151F36C();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      *(void *)&long long v38 = v21;
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1C151E34C();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      id v43 = (void *)sub_1BFDA76EC(v22, v24, (uint64_t *)&v38);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      unint64_t v25 = "Failed parsing PuzzleAccessoryInputConfig. Invalid inputType entry: %s";
LABEL_25:
      _os_log_impl(&dword_1BFC31000, v18, v19, v25, v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v21, -1, -1);
      MEMORY[0x1C18C9B00](v20, -1, -1);

      goto LABEL_20;
    }
    goto LABEL_30;
  }
  uint64_t v37 = v42;
  uint64_t v35 = *((void *)&v39 + 1);
  uint64_t v34 = v40;
  long long v36 = v38;
  swift_bridgeObjectRelease();
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = v11;
  *(_OWORD *)(a2 + 16) = v36;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v35;
  *(void *)(a2 + 48) = v34;
  *(void *)(a2 + 56) = v16;
  *(void *)(a2 + 64) = v37;
}

void __swiftcall PuzzleAccessoryHintConfig.init(text:direction:number:textFormat:visibilityOptions:)(NewsFeed::PuzzleAccessoryHintConfig *__return_ptr retstr, Swift::String_optional text, Swift::String_optional direction, Swift::String_optional number, Swift::String_optional textFormat, NewsFeed::PuzzleAccessoryHintConfig::PuzzleAccessoryHintVisibilityOptions visibilityOptions)
{
  object = textFormat.value._object;
  uint64_t countAndFlagsBits = textFormat.value._countAndFlagsBits;
  char v8 = number.value._object;
  uint64_t v9 = number.value._countAndFlagsBits;
  char v10 = text.value._object;
  uint64_t v11 = text.value._countAndFlagsBits;
  Swift::UInt v13 = *(void *)visibilityOptions.rawValue;
  if (direction.value._object)
  {
    uint64_t v14 = sub_1C15205AC();
    swift_bridgeObjectRelease();
    if (v14 == 1) {
      char v15 = 1;
    }
    else {
      char v15 = 2;
    }
    if (v14) {
      NewsFeed::PuzzleAccessoryHintConfig::Direction v16 = v15;
    }
    else {
      NewsFeed::PuzzleAccessoryHintConfig::Direction v16 = NewsFeed_PuzzleAccessoryHintConfig_Direction_right;
    }
    if (object) {
      goto LABEL_9;
    }
LABEL_13:
    NewsFeed::PuzzleAccessoryHintConfig::TextFormat v18 = NewsFeed_PuzzleAccessoryHintConfig_TextFormat_none;
    goto LABEL_14;
  }
  NewsFeed::PuzzleAccessoryHintConfig::Direction v16 = NewsFeed_PuzzleAccessoryHintConfig_Direction_unknownDefault;
  if (!textFormat.value._object) {
    goto LABEL_13;
  }
LABEL_9:
  v17._uint64_t countAndFlagsBits = countAndFlagsBits;
  v17._object = object;
  PuzzleAccessoryHintConfig.TextFormat.init(rawValue:)(v17);
  NewsFeed::PuzzleAccessoryHintConfig::TextFormat v18 = v19;
  if (v19 == NewsFeed_PuzzleAccessoryHintConfig_TextFormat_unknownDefault) {
    NewsFeed::PuzzleAccessoryHintConfig::TextFormat v18 = NewsFeed_PuzzleAccessoryHintConfig_TextFormat_none;
  }
LABEL_14:
  retstr->text.value._uint64_t countAndFlagsBits = v11;
  retstr->text.value._object = v10;
  retstr->direction.value = v16;
  retstr->number.value._uint64_t countAndFlagsBits = v9;
  retstr->number.value._object = v8;
  retstr->textFormat = v18;
  retstr->visibilityOptions.rawValue = v13;
}

__n128 PuzzleAccessoryInputConfiguration.init(identifier:inputType:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a3 + 48);
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  long long v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 32) = v5;
  __n128 result = *(__n128 *)(a3 + 32);
  *(__n128 *)(a4 + 48) = result;
  *(void *)(a4 + 64) = v4;
  return result;
}

NewsFeed::PuzzleAccessoryHintConfig::Direction_optional __swiftcall PuzzleAccessoryHintConfig.Direction.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t PuzzleAccessoryHintConfig.Direction.rawValue.getter()
{
  if (*v0) {
    return 1853321060;
  }
  else {
    return 0x7468676972;
  }
}

uint64_t sub_1C09661E8(char *a1, char *a2)
{
  return sub_1C147F758(*a1, *a2);
}

uint64_t sub_1C09661F4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C096626C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09662D0()
{
  return sub_1C1520E0C();
}

NewsFeed::PuzzleAccessoryHintConfig::Direction_optional sub_1C0966344(Swift::String *a1)
{
  return PuzzleAccessoryHintConfig.Direction.init(rawValue:)(*a1);
}

void sub_1C0966350(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1853321060;
  if (!*v1) {
    uint64_t v2 = 0x7468676972;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0966384()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C09663E4()
{
  return sub_1C151EAEC();
}

NewsFeed::PuzzleAccessoryHintConfig::TextFormat_optional __swiftcall PuzzleAccessoryHintConfig.TextFormat.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t PuzzleAccessoryHintConfig.TextFormat.rawValue.getter()
{
  uint64_t v1 = 0x6E776F646B72616DLL;
  if (*v0 != 1) {
    uint64_t v1 = 1819112552;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701736302;
  }
}

uint64_t sub_1C09664DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C147F7F4(*a1, *a2);
}

uint64_t sub_1C09664E8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C096657C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C09665FC()
{
  return sub_1C1520E0C();
}

NewsFeed::PuzzleAccessoryHintConfig::TextFormat_optional sub_1C096668C(Swift::String *a1)
{
  return PuzzleAccessoryHintConfig.TextFormat.init(rawValue:)(*a1);
}

void sub_1C0966698(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6E776F646B72616DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1819112552;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701736302;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C09666E8()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0966748()
{
  return sub_1C151EAEC();
}

uint64_t PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.rawValue.getter()
{
  return *(void *)v0;
}

NewsFeed::PuzzleAccessoryHintConfig::PuzzleAccessoryHintVisibilityOptions __swiftcall PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.init(rawValue:)(NewsFeed::PuzzleAccessoryHintConfig::PuzzleAccessoryHintVisibilityOptions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.left.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.right.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.keyboardDismiss.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.text.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void sub_1C09667D8()
{
  uint64_t v0 = unk_1F1B670B8;
  if ((unk_1F1B670B8 & ~qword_1F1B670B0) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = v0 | qword_1F1B670B0;
  uint64_t v3 = qword_1F1B670C0;
  uint64_t v2 = unk_1F1B670C8;
  if ((qword_1F1B670C0 & ~v1) == 0) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 | v1;
  if ((unk_1F1B670C8 & ~v4) == 0) {
    uint64_t v2 = 0;
  }
  qword_1EA1A1318 = v2 | v4;
}

uint64_t static PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.all.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA194828 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_1EA1A1318;
  return result;
}

uint64_t sub_1C0966874()
{
  return sub_1C151EB7C();
}

uint64_t sub_1C09668D4()
{
  return sub_1C151EB0C();
}

uint64_t PuzzleAccessoryHintConfig.text.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void PuzzleAccessoryHintConfig.direction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t PuzzleAccessoryHintConfig.number.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void PuzzleAccessoryHintConfig.textFormat.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

void PuzzleAccessoryHintConfig.visibilityOptions.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 48);
}

unint64_t sub_1C09669A8()
{
  unint64_t result = 1954047348;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F69746365726964;
      break;
    case 2:
      unint64_t result = 0x7265626D756ELL;
      break;
    case 3:
      unint64_t result = 0x6D726F4674786574;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0966A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C096B0D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0966A7C(uint64_t a1)
{
  unint64_t v2 = sub_1C0969474();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0966AB8(uint64_t a1)
{
  unint64_t v2 = sub_1C0969474();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleAccessoryHintConfig.encode(to:)(void *a1)
{
  sub_1C0969B40(0, &qword_1EA1A1328, (uint64_t (*)(void))sub_1C0969474, (uint64_t)&type metadata for PuzzleAccessoryHintConfig.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - v6;
  int v18 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v16 = *(void *)(v1 + 32);
  uint64_t v17 = v8;
  int v15 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v14 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0969474();
  sub_1C1520F0C();
  char v27 = 0;
  uint64_t v9 = v19;
  sub_1C152074C();
  if (!v9)
  {
    char v10 = v15;
    uint64_t v11 = v14;
    char v26 = v18;
    char v25 = 1;
    sub_1C09694C8();
    sub_1C152078C();
    char v24 = 2;
    sub_1C152074C();
    char v23 = v10;
    char v22 = 3;
    sub_1C096951C();
    sub_1C152080C();
    uint64_t v20 = v11;
    char v21 = 4;
    sub_1C0969570();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleAccessoryHintConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0969B40(0, &qword_1EA1A1350, (uint64_t (*)(void))sub_1C0969474, (uint64_t)&type metadata for PuzzleAccessoryHintConfig.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = a1[3];
  unint64_t v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1C0969474();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  uint64_t v11 = v7;
  char v36 = 0;
  uint64_t v12 = v6;
  uint64_t v13 = sub_1C152060C();
  uint64_t v15 = v14;
  char v34 = 1;
  sub_1C09695C4();
  swift_bridgeObjectRetain();
  sub_1C152065C();
  int v16 = v35;
  char v33 = 2;
  uint64_t v25 = sub_1C152060C();
  int v26 = v16;
  char v31 = 3;
  uint64_t v18 = v17;
  sub_1C0969618();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v27 = v18;
  LOBYTE(v18) = v32;
  char v30 = 4;
  sub_1C096966C();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v12);
  uint64_t v19 = (uint64_t)v28;
  uint64_t v20 = v29;
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v15;
  *(unsigned char *)(a2 + 16) = v26;
  char v21 = v18;
  uint64_t v22 = v27;
  *(void *)(a2 + 24) = v25;
  *(void *)(a2 + 32) = v22;
  *(unsigned char *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v20;
  __swift_destroy_boxed_opaque_existential_1(v19);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0967134@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleAccessoryHintConfig.init(from:)(a1, a2);
}

uint64_t sub_1C096714C(void *a1)
{
  return PuzzleAccessoryHintConfig.encode(to:)(a1);
}

uint64_t sub_1C0967164(uint64_t a1)
{
  unint64_t v2 = sub_1C09696C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09671A0(uint64_t a1)
{
  unint64_t v2 = sub_1C09696C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C09671DC()
{
  uint64_t v1 = 0x6B63617473;
  if (*v0 != 1) {
    uint64_t v1 = 0x736E6F74747562;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1953393000;
  }
}

uint64_t sub_1C096722C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C096B2F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0967254(uint64_t a1)
{
  unint64_t v2 = sub_1C09697BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0967290(uint64_t a1)
{
  unint64_t v2 = sub_1C09697BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C09672CC(uint64_t a1)
{
  unint64_t v2 = sub_1C0969768();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0967308(uint64_t a1)
{
  unint64_t v2 = sub_1C0969768();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0967344(uint64_t a1)
{
  unint64_t v2 = sub_1C0969714();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0967380(uint64_t a1)
{
  unint64_t v2 = sub_1C0969714();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleAccessoryInputConfiguration.InputType.encode(to:)(void *a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C0969B40(0, &qword_1EA1A1370, (uint64_t (*)(void))sub_1C09696C0, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v41 = v4;
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v38 = (char *)&v27 - v5;
  sub_1C0969B40(0, &qword_1EA1A1380, (uint64_t (*)(void))sub_1C0969714, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys, v3);
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v27 - v7;
  sub_1C0969B40(0, &qword_1EA1A1390, (uint64_t (*)(void))sub_1C0969768, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys, v3);
  uint64_t v36 = v8;
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v35 = (char *)&v27 - v9;
  sub_1C0969B40(0, &qword_1EA1A13A0, (uint64_t (*)(void))sub_1C09697BC, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.CodingKeys, v3);
  uint64_t v11 = v10;
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v15 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v16 = v1[2];
  uint64_t v31 = v1[3];
  uint64_t v32 = v16;
  uint64_t v17 = v1[4];
  unint64_t v18 = v1[5];
  uint64_t v29 = v14;
  uint64_t v30 = v17;
  uint64_t v33 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09697BC();
  sub_1C1520F0C();
  if (v18 >> 62)
  {
    if (v18 >> 62 == 1)
    {
      LOBYTE(v43) = 1;
      sub_1C0969714();
      uint64_t v19 = v37;
      sub_1C152073C();
      uint64_t v43 = v15;
      sub_1BFEFDD5C(0, &qword_1EA1A13B8, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration, MEMORY[0x1E4FBB320]);
      sub_1C0969960(&qword_1EA1A13C0, (void (*)(void))sub_1C0969864);
      uint64_t v20 = v40;
      sub_1C152080C();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v20);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v13, v11);
    }
    LOBYTE(v43) = 2;
    sub_1C09696C0();
    uint64_t v25 = v38;
    sub_1C152073C();
    uint64_t v43 = v15;
    sub_1C0969810();
    uint64_t v26 = v41;
    sub_1C152080C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v26);
  }
  else
  {
    uint64_t v22 = v34;
    LOBYTE(v43) = 0;
    sub_1C0969768();
    char v23 = v35;
    sub_1C152073C();
    uint64_t v43 = v15;
    uint64_t v44 = v29;
    char v45 = v32;
    uint64_t v46 = v31;
    uint64_t v47 = v30;
    char v48 = v18;
    uint64_t v49 = v33;
    sub_1C09698B8();
    uint64_t v24 = v36;
    sub_1C152080C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v13, v11);
}

uint64_t PuzzleAccessoryInputConfiguration.InputType.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C0969B40(0, &qword_1EA1A13D8, (uint64_t (*)(void))sub_1C09696C0, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v38 = v4;
  uint64_t v40 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v46 = (char *)&v37 - v5;
  sub_1C0969B40(0, &qword_1EA1A13E0, (uint64_t (*)(void))sub_1C0969714, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys, v3);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  uint64_t v42 = v7;
  MEMORY[0x1F4188790](v6);
  char v45 = (char *)&v37 - v8;
  sub_1C0969B40(0, &qword_1EA1A13E8, (uint64_t (*)(void))sub_1C0969768, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys, v3);
  uint64_t v10 = v9;
  uint64_t v39 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v37 - v11;
  sub_1C0969B40(0, &qword_1EA1A13F0, (uint64_t (*)(void))sub_1C09697BC, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.CodingKeys, v3);
  uint64_t v14 = v13;
  uint64_t v44 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v37 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C09697BC();
  uint64_t v17 = v52;
  sub_1C1520EBC();
  if (v17) {
    goto LABEL_7;
  }
  uint64_t v18 = v10;
  uint64_t v19 = v45;
  uint64_t v20 = v46;
  BOOL v52 = a1;
  uint64_t v21 = sub_1C152070C();
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v23 = sub_1C15201EC();
    swift_allocError();
    uint64_t v25 = v24;
    sub_1C01AC8BC();
    *uint64_t v25 = &type metadata for PuzzleAccessoryInputConfiguration.InputType;
    sub_1C15205DC();
    sub_1C15201AC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x1E4FBBA70], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v14);
    a1 = v52;
LABEL_7:
    uint64_t v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  if (*(unsigned char *)(v21 + 32))
  {
    if (*(unsigned char *)(v21 + 32) == 1)
    {
      LOBYTE(v47) = 1;
      sub_1C0969714();
      sub_1C15205CC();
      sub_1BFEFDD5C(0, &qword_1EA1A13B8, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration, MEMORY[0x1E4FBB320]);
      sub_1C0969960(&qword_1EA1A1400, (void (*)(void))sub_1C09699F0);
      uint64_t v22 = v41;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v14);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      *(void *)&long long v33 = v47;
      long long v34 = 0uLL;
      unint64_t v35 = 0x4000000000000000;
    }
    else
    {
      LOBYTE(v47) = 2;
      sub_1C09696C0();
      uint64_t v28 = v20;
      sub_1C15205CC();
      sub_1C096990C();
      uint64_t v29 = v38;
      sub_1C15206EC();
      uint64_t v30 = v44;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v14);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      *(void *)&long long v33 = v47;
      long long v34 = 0uLL;
      unint64_t v35 = 0x8000000000000000;
    }
  }
  else
  {
    LOBYTE(v47) = 0;
    sub_1C0969768();
    sub_1C15205CC();
    sub_1C0969A44();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v18);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v14);
    long long v33 = v47;
    uint64_t v31 = v48;
    long long v34 = v49;
    unint64_t v35 = v50;
    uint64_t v32 = v51;
  }
  uint64_t v36 = v43;
  *uint64_t v43 = v33;
  *((void *)v36 + 2) = v31;
  *(_OWORD *)((char *)v36 + 24) = v34;
  *((void *)v36 + 5) = v35;
  *((void *)v36 + 6) = v32;
  uint64_t v26 = (uint64_t)v52;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_1C0968098@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return PuzzleAccessoryInputConfiguration.InputType.init(from:)(a1, a2);
}

uint64_t sub_1C09680B0(void *a1)
{
  return PuzzleAccessoryInputConfiguration.InputType.encode(to:)(a1);
}

uint64_t PuzzleAccessoryInputConfiguration.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleAccessoryInputConfiguration.inputType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  unint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_1C028A540(v2, v3, v4, v5, v6, v7);
}

void sub_1C096811C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  BOOL v6 = a1 == 1953393000 && a2 == 0xE400000000000000;
  if (!v6 && (sub_1C1520A9C() & 1) == 0)
  {
    if (a1 == 0x6B63617473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
    {
      if (*(void *)(a3 + 16))
      {
        unint64_t v14 = sub_1BFEF2D8C(0x736D657469, 0xE500000000000000);
        if (v15)
        {
          sub_1BFF6A008(*(void *)(a3 + 56) + 32 * v14, (uint64_t)v69);
          sub_1C065D978();
          if (swift_dynamicCast())
          {
            uint64_t v16 = *((void *)with._rawValue + 2);
            if (v16)
            {
              swift_bridgeObjectRetain();
              uint64_t v17 = 0;
              uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
              do
              {
                uint64_t v20 = swift_bridgeObjectRetain();
                PuzzleAccessoryInputConfiguration.init(with:)(v69, v20);
                uint64_t v21 = *(void *)&v69[8];
                if (*(void *)&v69[8])
                {
                  uint64_t v22 = *(void *)v69;
                  long long v65 = *(_OWORD *)&v69[32];
                  long long v66 = *(_OWORD *)&v69[16];
                  long long v64 = *(_OWORD *)&v69[48];
                  uint64_t v23 = v70;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v18 = sub_1C0EE2AC8(0, v18[2] + 1, 1, v18);
                  }
                  unint64_t v25 = v18[2];
                  unint64_t v24 = v18[3];
                  if (v25 >= v24 >> 1) {
                    uint64_t v18 = sub_1C0EE2AC8((void *)(v24 > 1), v25 + 1, 1, v18);
                  }
                  v18[2] = v25 + 1;
                  uint64_t v19 = &v18[9 * v25];
                  v19[4] = v22;
                  v19[5] = v21;
                  *((_OWORD *)v19 + 3) = v66;
                  *((_OWORD *)v19 + 4) = v65;
                  *((_OWORD *)v19 + 5) = v64;
                  v19[12] = v23;
                }
                ++v17;
              }
              while (v16 != v17);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
            }
            swift_bridgeObjectRelease();
            *(void *)a4 = v18;
            *(_OWORD *)(a4 + 8) = 0u;
            *(_OWORD *)(a4 + 24) = 0u;
            long long v59 = xmmword_1C157D900;
            goto LABEL_83;
          }
        }
      }
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1C15198DC();
      __swift_project_value_buffer(v38, (uint64_t)qword_1EB93C7A8);
      swift_bridgeObjectRetain_n();
      uint64_t v39 = sub_1C15198AC();
      os_log_type_t v40 = sub_1C151F36C();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        *(void *)uint64_t v69 = v42;
        *(_DWORD *)uint64_t v41 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1C151E34C();
        unint64_t v45 = v44;
        swift_bridgeObjectRelease();
        with._rawValue = (void *)sub_1BFDA76EC(v43, v45, (uint64_t *)v69);
        sub_1C151FE1C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v46 = "Failed parsing PuzzleAccessoryInputConfiguration. Invalid items entry: %s";
LABEL_80:
        _os_log_impl(&dword_1BFC31000, v39, v40, v46, v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v42, -1, -1);
        MEMORY[0x1C18C9B00](v41, -1, -1);

LABEL_82:
        *(void *)a4 = 0;
        *(void *)(a4 + 8) = 0;
        *(void *)(a4 + 16) = 0xFFFFFFFF00;
        long long v59 = 0uLL;
        *(_OWORD *)(a4 + 24) = 0u;
        goto LABEL_83;
      }
    }
    else
    {
      if ((a1 != 0x736E6F74747562 || a2 != 0xE700000000000000) && (sub_1C1520A9C() & 1) == 0) {
        goto LABEL_82;
      }
      if (*(void *)(a3 + 16))
      {
        unint64_t v57 = sub_1BFEF2D8C(0x736D657469, 0xE500000000000000);
        if (v58)
        {
          sub_1BFF6A008(*(void *)(a3 + 56) + 32 * v57, (uint64_t)v69);
          sub_1C065D978();
          if (swift_dynamicCast())
          {
            PuzzleAccessoryButtonsConfig.init(with:)(with);
            if (*(void *)v69)
            {
              *(void *)a4 = *(void *)v69;
              *(_OWORD *)(a4 + 8) = 0u;
              *(_OWORD *)(a4 + 24) = 0u;
              long long v59 = xmmword_1C157D8F0;
LABEL_83:
              *(_OWORD *)(a4 + 40) = v59;
              return;
            }
          }
        }
      }
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v60 = sub_1C15198DC();
      __swift_project_value_buffer(v60, (uint64_t)qword_1EB93C7A8);
      swift_bridgeObjectRetain_n();
      uint64_t v39 = sub_1C15198AC();
      os_log_type_t v40 = sub_1C151F36C();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        *(void *)uint64_t v69 = v42;
        *(_DWORD *)uint64_t v41 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_1C151E34C();
        unint64_t v63 = v62;
        swift_bridgeObjectRelease();
        with._rawValue = (void *)sub_1BFDA76EC(v61, v63, (uint64_t *)v69);
        sub_1C151FE1C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v46 = "Failed parsing PuzzleAccessoryButtonsConfig. Invalid items entry: %s";
        goto LABEL_80;
      }
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_82;
  }
  if (!*(void *)(a3 + 16))
  {
    uint64_t v13 = 0;
    rawValue = 0;
    goto LABEL_42;
  }
  unint64_t v9 = sub_1BFEF2D8C(1954047348, 0xE400000000000000);
  if ((v10 & 1) == 0)
  {
    rawValue = 0;
    uint64_t v13 = 0;
    if (*(void *)(a3 + 16)) {
      goto LABEL_33;
    }
LABEL_42:
    uint64_t v30 = 0;
    uint64_t v29 = 0;
    goto LABEL_43;
  }
  sub_1BFF6A008(*(void *)(a3 + 56) + 32 * v9, (uint64_t)v69);
  int v11 = swift_dynamicCast();
  if (v11) {
    rawValue = with._rawValue;
  }
  else {
    rawValue = 0;
  }
  if (v11) {
    uint64_t v13 = v68;
  }
  else {
    uint64_t v13 = 0;
  }
  if (!*(void *)(a3 + 16)) {
    goto LABEL_42;
  }
LABEL_33:
  unint64_t v26 = sub_1BFEF2D8C(0x6F69746365726964, 0xE90000000000006ELL);
  if (v27)
  {
    sub_1BFF6A008(*(void *)(a3 + 56) + 32 * v26, (uint64_t)v69);
    int v28 = swift_dynamicCast();
    if (v28) {
      uint64_t v29 = with._rawValue;
    }
    else {
      uint64_t v29 = 0;
    }
    if (v28) {
      uint64_t v30 = v68;
    }
    else {
      uint64_t v30 = 0;
    }
    if (!*(void *)(a3 + 16))
    {
LABEL_43:
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      if (!*(void *)(a3 + 16)) {
        goto LABEL_64;
      }
      goto LABEL_44;
    }
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    if (!*(void *)(a3 + 16)) {
      goto LABEL_43;
    }
  }
  unint64_t v47 = sub_1BFEF2D8C(0x7265626D756ELL, 0xE600000000000000);
  if ((v48 & 1) == 0) {
    goto LABEL_43;
  }
  sub_1BFF6A008(*(void *)(a3 + 56) + 32 * v47, (uint64_t)v69);
  int v49 = swift_dynamicCast();
  if (v49) {
    uint64_t v31 = with._rawValue;
  }
  else {
    uint64_t v31 = 0;
  }
  if (v49) {
    uint64_t v32 = v68;
  }
  else {
    uint64_t v32 = 0;
  }
  if (!*(void *)(a3 + 16)) {
    goto LABEL_64;
  }
LABEL_44:
  unint64_t v33 = sub_1BFEF2D8C(0x6D726F4674786574, 0xEA00000000007461);
  if (v34)
  {
    sub_1BFF6A008(*(void *)(a3 + 56) + 32 * v33, (uint64_t)v69);
    int v35 = swift_dynamicCast();
    if (v35) {
      uint64_t v36 = with._rawValue;
    }
    else {
      uint64_t v36 = 0;
    }
    if (v35) {
      uint64_t v37 = v68;
    }
    else {
      uint64_t v37 = 0;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t v36 = 0;
  uint64_t v37 = 0;
LABEL_65:
  if (qword_1EA194828 != -1) {
    swift_once();
  }
  with._rawValue = (void *)qword_1EA1A1318;
  v50.value._uint64_t countAndFlagsBits = (uint64_t)rawValue;
  v50.value._object = v13;
  v51.value._uint64_t countAndFlagsBits = (uint64_t)v29;
  v51.value._object = v30;
  v52.value._uint64_t countAndFlagsBits = (uint64_t)v31;
  v52.value._object = v32;
  v53.value._uint64_t countAndFlagsBits = (uint64_t)v36;
  v53.value._object = v37;
  PuzzleAccessoryHintConfig.init(text:direction:number:textFormat:visibilityOptions:)((NewsFeed::PuzzleAccessoryHintConfig *)v69, v50, v51, v52, v53, (NewsFeed::PuzzleAccessoryHintConfig::PuzzleAccessoryHintVisibilityOptions)&with);
  uint64_t v54 = v69[16];
  uint64_t v55 = v69[40];
  uint64_t v56 = *(void *)&v69[48];
  *(_OWORD *)a4 = *(_OWORD *)v69;
  *(void *)(a4 + 16) = v54;
  *(_OWORD *)(a4 + 24) = *(_OWORD *)&v69[24];
  *(void *)(a4 + 40) = v55;
  *(void *)(a4 + 48) = v56;
}

uint64_t sub_1C09689D4()
{
  if (*v0) {
    return 0x7079547475706E69;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C0968A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C096B430(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0968A40(uint64_t a1)
{
  unint64_t v2 = sub_1C0969A98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0968A7C(uint64_t a1)
{
  unint64_t v2 = sub_1C0969A98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleAccessoryInputConfiguration.encode(to:)(void *a1)
{
  sub_1C0969B40(0, &qword_1EA1A1418, (uint64_t (*)(void))sub_1C0969A98, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = v1[2];
  uint64_t v19 = v1[3];
  uint64_t v20 = v8;
  uint64_t v9 = v1[4];
  uint64_t v17 = v1[5];
  uint64_t v18 = v9;
  uint64_t v10 = v1[6];
  uint64_t v15 = v1[7];
  uint64_t v16 = v10;
  uint64_t v14 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0969A98();
  sub_1C1520F0C();
  LOBYTE(v22) = 0;
  uint64_t v11 = v21;
  sub_1C15207CC();
  if (!v11)
  {
    uint64_t v22 = v20;
    uint64_t v23 = v19;
    uint64_t v24 = v18;
    uint64_t v25 = v17;
    uint64_t v26 = v16;
    uint64_t v27 = v15;
    uint64_t v28 = v14;
    char v29 = 1;
    sub_1C0969AEC();
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleAccessoryInputConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v32 = a2;
  sub_1C0969B40(0, &qword_1EA1A1430, (uint64_t (*)(void))sub_1C0969A98, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0969A98();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v33) = 0;
  uint64_t v9 = sub_1C152069C();
  uint64_t v11 = v10;
  char v40 = 1;
  sub_1C0969BA8();
  swift_bridgeObjectRetain();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v33;
  uint64_t v31 = v34;
  uint64_t v13 = v35;
  uint64_t v14 = v36;
  uint64_t v16 = v37;
  unint64_t v15 = v38;
  uint64_t v26 = v37;
  uint64_t v27 = v33;
  unint64_t v28 = v38;
  uint64_t v29 = v36;
  uint64_t v17 = v39;
  swift_bridgeObjectRetain();
  uint64_t v18 = v12;
  uint64_t v19 = v31;
  uint64_t v30 = v13;
  sub_1C028A540(v18, v31, v13, v14, v16, v15);
  swift_bridgeObjectRelease();
  uint64_t v20 = v32;
  *uint64_t v32 = v9;
  v20[1] = v11;
  uint64_t v21 = v26;
  uint64_t v22 = v27;
  v20[2] = v27;
  v20[3] = v19;
  v20[4] = v13;
  unint64_t v23 = v28;
  uint64_t v24 = v29;
  v20[5] = v29;
  v20[6] = v21;
  v20[7] = v23;
  v20[8] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1C019BAA8(v22, v31, v30, v24, v21, v23);
}

uint64_t sub_1C0968F84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PuzzleAccessoryInputConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C0968F9C(void *a1)
{
  return PuzzleAccessoryInputConfiguration.encode(to:)(a1);
}

uint64_t sub_1C0968FB4()
{
  return swift_slowAlloc();
}

uint64_t sub_1C0968FBC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_1C0968FF8()
{
}

uint64_t sub_1C0969004(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C096902C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1BFDA76EC(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1C151FE1C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1C09690A4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C096913C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C09692B4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1C09692B4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C096913C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1C029682C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1C152010C();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1C15203FC();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1C151E82C();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1C152052C();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1C15203FC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C09692B4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFEFDD5C(0, (unint64_t *)&qword_1EB890518, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

unsigned char **sub_1C0969424(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

unint64_t sub_1C0969434()
{
  unint64_t result = qword_1EA1A1320;
  if (!qword_1EA1A1320)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A1320);
  }
  return result;
}

unint64_t sub_1C0969474()
{
  unint64_t result = qword_1EA1A1330;
  if (!qword_1EA1A1330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1330);
  }
  return result;
}

unint64_t sub_1C09694C8()
{
  unint64_t result = qword_1EA1A1338;
  if (!qword_1EA1A1338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1338);
  }
  return result;
}

unint64_t sub_1C096951C()
{
  unint64_t result = qword_1EA1A1340;
  if (!qword_1EA1A1340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1340);
  }
  return result;
}

unint64_t sub_1C0969570()
{
  unint64_t result = qword_1EA1A1348;
  if (!qword_1EA1A1348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1348);
  }
  return result;
}

unint64_t sub_1C09695C4()
{
  unint64_t result = qword_1EA1A1358;
  if (!qword_1EA1A1358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1358);
  }
  return result;
}

unint64_t sub_1C0969618()
{
  unint64_t result = qword_1EA1A1360;
  if (!qword_1EA1A1360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1360);
  }
  return result;
}

unint64_t sub_1C096966C()
{
  unint64_t result = qword_1EA1A1368;
  if (!qword_1EA1A1368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1368);
  }
  return result;
}

unint64_t sub_1C09696C0()
{
  unint64_t result = qword_1EA1A1378;
  if (!qword_1EA1A1378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1378);
  }
  return result;
}

unint64_t sub_1C0969714()
{
  unint64_t result = qword_1EA1A1388;
  if (!qword_1EA1A1388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1388);
  }
  return result;
}

unint64_t sub_1C0969768()
{
  unint64_t result = qword_1EA1A1398;
  if (!qword_1EA1A1398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1398);
  }
  return result;
}

unint64_t sub_1C09697BC()
{
  unint64_t result = qword_1EA1A13A8;
  if (!qword_1EA1A13A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A13A8);
  }
  return result;
}

unint64_t sub_1C0969810()
{
  unint64_t result = qword_1EA1A13B0;
  if (!qword_1EA1A13B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A13B0);
  }
  return result;
}

unint64_t sub_1C0969864()
{
  unint64_t result = qword_1EA1A13C8;
  if (!qword_1EA1A13C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A13C8);
  }
  return result;
}

unint64_t sub_1C09698B8()
{
  unint64_t result = qword_1EA1A13D0;
  if (!qword_1EA1A13D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A13D0);
  }
  return result;
}

unint64_t sub_1C096990C()
{
  unint64_t result = qword_1EA1A13F8;
  if (!qword_1EA1A13F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A13F8);
  }
  return result;
}

uint64_t sub_1C0969960(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEFDD5C(255, &qword_1EA1A13B8, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C09699F0()
{
  unint64_t result = qword_1EA1A1408;
  if (!qword_1EA1A1408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1408);
  }
  return result;
}

unint64_t sub_1C0969A44()
{
  unint64_t result = qword_1EA1A1410;
  if (!qword_1EA1A1410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1410);
  }
  return result;
}

unint64_t sub_1C0969A98()
{
  unint64_t result = qword_1EA1A1420;
  if (!qword_1EA1A1420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1420);
  }
  return result;
}

unint64_t sub_1C0969AEC()
{
  unint64_t result = qword_1EA1A1428;
  if (!qword_1EA1A1428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1428);
  }
  return result;
}

void sub_1C0969B40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0969BA8()
{
  unint64_t result = qword_1EA1A1438;
  if (!qword_1EA1A1438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1438);
  }
  return result;
}

unint64_t sub_1C0969C00()
{
  unint64_t result = qword_1EA1A1440;
  if (!qword_1EA1A1440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1440);
  }
  return result;
}

unint64_t sub_1C0969C58()
{
  unint64_t result = qword_1EA1A1448;
  if (!qword_1EA1A1448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1448);
  }
  return result;
}

unint64_t sub_1C0969CB0()
{
  unint64_t result = qword_1EA1A1450;
  if (!qword_1EA1A1450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1450);
  }
  return result;
}

unint64_t sub_1C0969D08()
{
  unint64_t result = qword_1EA1A1458;
  if (!qword_1EA1A1458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1458);
  }
  return result;
}

unint64_t sub_1C0969D60()
{
  unint64_t result = qword_1EA1A1460;
  if (!qword_1EA1A1460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1460);
  }
  return result;
}

unint64_t sub_1C0969DB8()
{
  unint64_t result = qword_1EA1A1468;
  if (!qword_1EA1A1468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1468);
  }
  return result;
}

uint64_t destroy for PuzzleAccessoryHintConfig()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleAccessoryHintConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleAccessoryHintConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for PuzzleAccessoryHintConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleAccessoryHintConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleAccessoryHintConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryHintConfig()
{
  return &type metadata for PuzzleAccessoryHintConfig;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryHintConfig.Direction()
{
  return &type metadata for PuzzleAccessoryHintConfig.Direction;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryHintConfig.TextFormat()
{
  return &type metadata for PuzzleAccessoryHintConfig.TextFormat;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions()
{
  return &type metadata for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions;
}

uint64_t destroy for PuzzleAccessoryInputConfiguration(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = a1[4];
  unint64_t v4 = a1[7];
  if (v3 >> 8 != 0xFFFFFFFF || v4 >= 4)
  {
    uint64_t v6 = a1[2];
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[5];
    uint64_t v9 = a1[6];
    return sub_1C019BAC0(v6, v7, v3, v8, v9, v4);
  }
  return result;
}

void *initializeWithCopy for PuzzleAccessoryInputConfiguration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  unint64_t v5 = a2[4];
  unint64_t v6 = a2[7];
  swift_bridgeObjectRetain();
  if (v5 >> 8 != 0xFFFFFFFF || v6 >= 4)
  {
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[6];
    uint64_t v12 = a2[8];
    sub_1C028A558(v8, v9, v5, v10, v11, v6);
    a1[2] = v8;
    a1[3] = v9;
    a1[4] = v5;
    a1[5] = v10;
    a1[6] = v11;
    a1[7] = v6;
    a1[8] = v12;
  }
  else
  {
    long long v13 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v13;
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    a1[8] = a2[8];
  }
  return a1;
}

uint64_t assignWithCopy for PuzzleAccessoryInputConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unint64_t v5 = (long long *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 32);
  unint64_t v7 = *(void *)(a2 + 56);
  BOOL v9 = v6 >> 8 == 0xFFFFFFFF && v7 < 4;
  if (*(void *)(a1 + 32) >> 8 != 0xFFFFFFFFLL || *(void *)(a1 + 56) >= 4uLL)
  {
    if (v9)
    {
      sub_1C096A324(a1 + 16);
      long long v12 = *(_OWORD *)(a2 + 32);
      long long v11 = *(_OWORD *)(a2 + 48);
      long long v13 = *v5;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v12;
      *(_OWORD *)(a1 + 48) = v11;
      *uint64_t v4 = v13;
    }
    else
    {
      uint64_t v17 = *(void *)(a2 + 16);
      uint64_t v18 = *(void *)(a2 + 24);
      uint64_t v19 = *(void *)(a2 + 40);
      uint64_t v20 = *(void *)(a2 + 48);
      uint64_t v21 = *(void *)(a2 + 64);
      sub_1C028A558(v17, v18, v6, v19, v20, v7);
      uint64_t v22 = *(void *)(a1 + 16);
      uint64_t v23 = *(void *)(a1 + 24);
      uint64_t v24 = *(void *)(a1 + 32);
      uint64_t v25 = *(void *)(a1 + 40);
      uint64_t v26 = *(void *)(a1 + 48);
      unint64_t v27 = *(void *)(a1 + 56);
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = v18;
      *(void *)(a1 + 32) = v6;
      *(void *)(a1 + 40) = v19;
      *(void *)(a1 + 48) = v20;
      *(void *)(a1 + 56) = v7;
      *(void *)(a1 + 64) = v21;
      sub_1C019BAC0(v22, v23, v24, v25, v26, v27);
    }
  }
  else if (v9)
  {
    long long v14 = *v5;
    long long v15 = *(_OWORD *)(a2 + 32);
    long long v16 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v15;
    *(_OWORD *)(a1 + 48) = v16;
    *uint64_t v4 = v14;
  }
  else
  {
    uint64_t v28 = *(void *)(a2 + 16);
    uint64_t v29 = *(void *)(a2 + 24);
    uint64_t v30 = *(void *)(a2 + 40);
    uint64_t v31 = *(void *)(a2 + 48);
    uint64_t v32 = *(void *)(a2 + 64);
    sub_1C028A558(v28, v29, v6, v30, v31, v7);
    *(void *)(a1 + 16) = v28;
    *(void *)(a1 + 24) = v29;
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v30;
    *(void *)(a1 + 48) = v31;
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v32;
  }
  return a1;
}

uint64_t sub_1C096A324(uint64_t a1)
{
  return a1;
}

void *assignWithTake for PuzzleAccessoryInputConfiguration(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = a1[4];
  unint64_t v6 = a1[7];
  if (v5 >> 8 == 0xFFFFFFFF && v6 < 4) {
    goto LABEL_12;
  }
  unint64_t v8 = *(void *)(a2 + 32);
  unint64_t v9 = *(void *)(a2 + 56);
  if (v8 >> 8 == 0xFFFFFFFF && v9 < 4)
  {
    sub_1C096A324((uint64_t)(a1 + 2));
LABEL_12:
    long long v16 = *(_OWORD *)(a2 + 32);
    *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
    *((_OWORD *)a1 + 2) = v16;
    *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
    a1[8] = *(void *)(a2 + 64);
    return a1;
  }
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = a1[2];
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[5];
  uint64_t v15 = a1[6];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  a1[4] = v8;
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  a1[7] = v9;
  a1[8] = v11;
  sub_1C019BAC0(v12, v13, v5, v14, v15, v6);
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration()
{
  return &type metadata for PuzzleAccessoryInputConfiguration;
}

uint64_t destroy for PuzzleAccessoryInputConfiguration.InputType(uint64_t a1)
{
  return sub_1C019BAC0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40));
}

uint64_t *initializeWithCopy for PuzzleAccessoryInputConfiguration.InputType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  sub_1C028A558(*a2, v4, v5, v6, v7, v8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return a1;
}

uint64_t *assignWithCopy for PuzzleAccessoryInputConfiguration.InputType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  sub_1C028A558(*a2, v4, v5, v6, v7, v8);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_1C019BAC0(v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t *assignWithTake for PuzzleAccessoryInputConfiguration.InputType(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v10;
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  a1[6] = v3;
  sub_1C019BAC0(v4, v6, v5, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleAccessoryInputConfiguration.InputType(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 17);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for PuzzleAccessoryInputConfiguration.InputType(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = (unint64_t)-a2 << 8;
      double result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C096A658(uint64_t a1)
{
  return *(void *)(a1 + 40) >> 62;
}

uint64_t sub_1C096A664(uint64_t result)
{
  *(void *)(result + 40) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1C096A674(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 40) & 3 | (a2 << 62);
  *(void *)(result + 16) = *(unsigned __int8 *)(result + 16);
  *(void *)(result + 40) = v2;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.InputType()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.InputType;
}

unsigned char *_s8NewsFeed25PuzzleAccessoryHintConfigV9DirectionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C096A76CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.CodingKeys()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.CodingKeys;
}

unsigned char *_s8NewsFeed25PuzzleAccessoryHintConfigV10TextFormatOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C096A870);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.InputType.CodingKeys()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.InputType.CodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys;
}

unsigned char *_s8NewsFeed33PuzzleAccessoryInputConfigurationV9InputTypeO14HintCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C096A968);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PuzzleAccessoryHintConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *double result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C096AA6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryHintConfig.CodingKeys()
{
  return &type metadata for PuzzleAccessoryHintConfig.CodingKeys;
}

unint64_t sub_1C096AAA8()
{
  unint64_t result = qword_1EA1A1470;
  if (!qword_1EA1A1470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1470);
  }
  return result;
}

unint64_t sub_1C096AB00()
{
  unint64_t result = qword_1EA1A1478;
  if (!qword_1EA1A1478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1478);
  }
  return result;
}

unint64_t sub_1C096AB58()
{
  unint64_t result = qword_1EA1A1480;
  if (!qword_1EA1A1480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1480);
  }
  return result;
}

unint64_t sub_1C096ABB0()
{
  unint64_t result = qword_1EA1A1488;
  if (!qword_1EA1A1488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1488);
  }
  return result;
}

unint64_t sub_1C096AC08()
{
  unint64_t result = qword_1EA1A1490;
  if (!qword_1EA1A1490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1490);
  }
  return result;
}

unint64_t sub_1C096AC60()
{
  unint64_t result = qword_1EA1A1498;
  if (!qword_1EA1A1498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1498);
  }
  return result;
}

unint64_t sub_1C096ACB8()
{
  unint64_t result = qword_1EA1A14A0;
  if (!qword_1EA1A14A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14A0);
  }
  return result;
}

unint64_t sub_1C096AD10()
{
  unint64_t result = qword_1EA1A14A8;
  if (!qword_1EA1A14A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14A8);
  }
  return result;
}

unint64_t sub_1C096AD68()
{
  unint64_t result = qword_1EA1A14B0;
  if (!qword_1EA1A14B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14B0);
  }
  return result;
}

unint64_t sub_1C096ADC0()
{
  unint64_t result = qword_1EA1A14B8;
  if (!qword_1EA1A14B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14B8);
  }
  return result;
}

unint64_t sub_1C096AE18()
{
  unint64_t result = qword_1EA1A14C0;
  if (!qword_1EA1A14C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14C0);
  }
  return result;
}

unint64_t sub_1C096AE70()
{
  unint64_t result = qword_1EA1A14C8;
  if (!qword_1EA1A14C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14C8);
  }
  return result;
}

unint64_t sub_1C096AEC8()
{
  unint64_t result = qword_1EA1A14D0;
  if (!qword_1EA1A14D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14D0);
  }
  return result;
}

unint64_t sub_1C096AF20()
{
  unint64_t result = qword_1EA1A14D8;
  if (!qword_1EA1A14D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14D8);
  }
  return result;
}

unint64_t sub_1C096AF78()
{
  unint64_t result = qword_1EA1A14E0;
  if (!qword_1EA1A14E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14E0);
  }
  return result;
}

unint64_t sub_1C096AFD0()
{
  unint64_t result = qword_1EA1A14E8;
  if (!qword_1EA1A14E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14E8);
  }
  return result;
}

unint64_t sub_1C096B028()
{
  unint64_t result = qword_1EA1A14F0;
  if (!qword_1EA1A14F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14F0);
  }
  return result;
}

unint64_t sub_1C096B080()
{
  unint64_t result = qword_1EA1A14F8;
  if (!qword_1EA1A14F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A14F8);
  }
  return result;
}

uint64_t sub_1C096B0D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265626D756ELL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D726F4674786574 && a2 == 0xEA00000000007461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1615FD0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1C096B2F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953393000 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B63617473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F74747562 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C096B430(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079547475706E69 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C096B53C()
{
  unint64_t result = qword_1EA1A1500;
  if (!qword_1EA1A1500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1500);
  }
  return result;
}

unint64_t sub_1C096B590()
{
  unint64_t result = qword_1EA1A1508;
  if (!qword_1EA1A1508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1508);
  }
  return result;
}

uint64_t sub_1C096B5E4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1BFF9E910(0, v1, 0);
    uint64_t v2 = v10;
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_1C10E55EC(&v9);
      uint64_t v5 = v9;
      uint64_t v10 = v2;
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_1BFF9E910(v6 > 1, v7 + 1, 1);
        uint64_t v2 = v10;
      }
      *(void *)(v2 + 16) = v7 + 1;
      *(void *)(v2 + 8 * v7 + 32) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C096B6BC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1BFCDA0E0(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (unsigned char *)(a1 + 64);
    do
    {
      uint64_t v5 = *((void *)v4 - 4);
      uint64_t v6 = *((void *)v4 - 3);
      uint64_t v7 = *((void *)v4 - 2);
      uint64_t v8 = *((void *)v4 - 1);
      int v9 = *v4;
      if ((v9 - 1) >= 0xB)
      {
        if (*v4) {
          goto LABEL_5;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
LABEL_5:
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1BFCDA0E0(v10 > 1, v11 + 1, 1);
      }
      v4 += 40;
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 40 * v11;
      *(void *)(v12 + 32) = v5;
      *(void *)(v12 + 40) = v6;
      *(void *)(v12 + 48) = v7;
      *(void *)(v12 + 56) = v8;
      *(unsigned char *)(v12 + 64) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C096B7D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatOption();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)&v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v34[-v7];
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1C05F66C4(0, v9, 0);
    uint64_t v11 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v37 = v2;
    uint64_t v38 = (v11 + 32) & ~v11;
    uint64_t v12 = a1 + v38;
    uint64_t v13 = *(void *)(v3 + 72);
    while (2)
    {
      sub_1C0971674(v12, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v14 = *v5;
      uint64_t v15 = v5[1];
      unint64_t v16 = v5[2];
      switch(v16 >> 60)
      {
        case 7uLL:
          uint64_t v21 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v22 = swift_allocObject();
          uint64_t v39 = v21;
          swift_bridgeObjectRetain();
          sub_1C10E55EC((void *)(v22 + 16));
          unint64_t v16 = v22 | 0x7000000000000000;
          uint64_t v2 = v37;
          goto LABEL_6;
        case 8uLL:
          unint64_t v16 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          goto LABEL_4;
        case 0xCuLL:
          uint64_t v23 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v24 = swift_allocObject();
          uint64_t v25 = v24;
          if (v23 < 0)
          {
            uint64_t v26 = v23 & 0x1FFFFFFFFFFFFFFFLL;
            uint64_t v27 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v28 = *(void *)(v26 + 24);
            uint64_t v36 = *(void *)(v26 + 32);
            int v35 = *(unsigned __int8 *)(v26 + 40);
            uint64_t v29 = swift_allocObject();
            *(void *)(v29 + 16) = v27;
            *(void *)(v29 + 24) = v28;
            uint64_t v30 = v36;
            *(void *)(v29 + 32) = v36;
            char v31 = v35;
            *(unsigned char *)(v29 + 40) = v35;
            *(void *)(v25 + 16) = v29 | 0x6000000000000000;
            uint64_t v32 = v28;
            uint64_t v2 = v37;
            sub_1BFF67F78(v27, v32, v30, v31);
          }
          else
          {
            *(void *)(v24 + 16) = v23;
            swift_retain();
          }
          unint64_t v16 = v25 | 0xC000000000000000;
          goto LABEL_5;
        default:
LABEL_4:
          swift_retain();
LABEL_5:
          swift_bridgeObjectRetain();
LABEL_6:
          *uint64_t v8 = v14;
          v8[1] = v15;
          _OWORD v8[2] = v16;
          v8[3] = 1;
          uint64_t v17 = (char *)v8 + *(int *)(v2 + 28);
          uint64_t v18 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
          sub_1C09716DC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v10 = v40;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F66C4(0, *(void *)(v10 + 16) + 1, 1);
            uint64_t v10 = v40;
          }
          unint64_t v20 = *(void *)(v10 + 16);
          unint64_t v19 = *(void *)(v10 + 24);
          if (v20 >= v19 >> 1)
          {
            sub_1C05F66C4(v19 > 1, v20 + 1, 1);
            uint64_t v10 = v40;
          }
          *(void *)(v10 + 16) = v20 + 1;
          sub_1C00AB068((uint64_t)v8, v10 + v38 + v20 * v13);
          v12 += v13;
          if (!--v9) {
            return v10;
          }
          continue;
      }
    }
  }
  return v10;
}

uint64_t sub_1C096BB70(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1BFFB3A2C(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = (void *)(a1 + 64);
    do
    {
      uint64_t v5 = *(v4 - 4);
      uint64_t v6 = *(v4 - 2);
      char v13 = *((unsigned char *)v4 - 7);
      char v14 = *((unsigned char *)v4 - 8);
      uint64_t v7 = *v4;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_1C10E55EC(&v15);
      uint64_t v8 = v15;
      swift_retain();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v16 = v2;
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1BFFB3A2C(v9 > 1, v10 + 1, 1);
        uint64_t v2 = v16;
      }
      *(void *)(v2 + 16) = v10 + 1;
      uint64_t v11 = v2 + 40 * v10;
      *(void *)(v11 + 32) = v5;
      *(void *)(v11 + 40) = v8;
      *(void *)(v11 + 48) = v6;
      *(unsigned char *)(v11 + 56) = v14;
      *(unsigned char *)(v11 + 57) = v13;
      *(void *)(v11 + 64) = v7;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C096BCCC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C05F6804(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      uint64_t v7 = *v4;
      if ((~v6 & 0xF000000000000007) != 0)
      {
        sub_1BFDC11A4(v6);
        sub_1BFEF683C(v5);
        sub_1BFEF683C(v7);
        sub_1C10E55EC(&v13);
        uint64_t v8 = v13;
      }
      else
      {
        sub_1BFDC11A4(*(v4 - 2));
        sub_1BFEF683C(v5);
        sub_1BFEF683C(v7);
        uint64_t v8 = v6;
      }
      sub_1BFEF683C(v5);
      sub_1BFEF683C(v7);
      sub_1BFDC11BC(v6);
      sub_1BFEF68C0(v5);
      sub_1BFEF68C0(v7);
      uint64_t v14 = v2;
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1C05F6804(v9 > 1, v10 + 1, 1);
        uint64_t v2 = v14;
      }
      v4 += 3;
      *(void *)(v2 + 16) = v10 + 1;
      uint64_t v11 = (void *)(v2 + 24 * v10);
      v11[4] = v8;
      v11[5] = v5;
      v11[6] = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C096BE30(uint64_t a1)
{
  uint64_t v2 = sub_1BFFCDB8C(a1);
  if (!v2) {
    return sub_1C01AFDD4(0);
  }
  uint64_t v3 = v2;
  uint64_t v553 = sub_1BFEACEF4();
  sub_1C1146970(v3);
  if (v3 < 0) {
    goto LABEL_233;
  }
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 32;
  uint64_t v518 = v3;
  uint64_t v519 = v5;
  do
  {
    sub_1C00F5BA4(v5 + 136 * v4, (uint64_t)v551);
    sub_1C00F5BA4((uint64_t)v551, (uint64_t)v552);
    int v8 = sub_1C00F5C00((uint64_t)v552);
    if (v8)
    {
      if (v8 == 1)
      {
        uint64_t v9 = sub_1C00F5EAC((uint64_t)v552);
        sub_1BFCF2D74(v9, (uint64_t)&v548);
        if (sub_1C00F5F20((uint64_t)&v548) == 1)
        {
          uint64_t v10 = sub_1C00F5F2C((uint64_t)&v548);
          char v11 = *(unsigned char *)(v10 + 8);
          *(void *)&v536[0] = *(void *)v10;
          sub_1C10E55EC(&v538);
          *(void *)&v536[0] = v538;
          BYTE8(v536[0]) = v11;
          sub_1C088E7EC((uint64_t)v536);
        }
        else
        {
          uint64_t v123 = sub_1C00F5F2C((uint64_t)&v548);
          sub_1C00F6034(v123, (uint64_t)&v526);
          int v124 = sub_1C00F6090((uint64_t)&v526);
          uint64_t v125 = (uint64_t *)sub_1C00F609C((uint64_t)&v526);
          uint64_t v126 = v125;
          if (v124 == 1)
          {
            uint64_t v127 = v125[14];
            uint64_t v128 = sub_1BFFCDB8C(v127);
            if (v128)
            {
              uint64_t v129 = v128;
              *(void *)&v523[0] = sub_1BFEACEF4();
              sub_1C00F5BA4((uint64_t)v551, (uint64_t)&v538);
              uint64_t v130 = sub_1C00F5EAC((uint64_t)&v538);
              sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
              sub_1C00F5EBC(v130);
              sub_1C1146958(v129);
              if (v129 < 0) {
                goto LABEL_231;
              }
              uint64_t v520 = v123;
              uint64_t v131 = (unint64_t *)(v127 + 32);
              do
              {
                unint64_t v134 = *v131++;
                uint64_t v133 = v134;
                switch(v134 >> 60)
                {
                  case 3uLL:
                    uint64_t v135 = v133 & 0xFFFFFFFFFFFFFFFLL;
                    unint64_t v137 = *(void *)(v135 + 16);
                    unint64_t v136 = *(void *)(v135 + 24);
                    switch(v137 >> 60)
                    {
                      case 3uLL:
                        unint64_t v151 = *(void *)((v137 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        unint64_t v511 = *(void *)((v137 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        switch(v511 >> 60)
                        {
                          case 3uLL:
                            uint64_t v498 = swift_allocObject();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            sub_1C10E5AF0((void *)(v498 + 16));
                            swift_release();
                            swift_release();
                            uint64_t v495 = v498 | 0x3000000000000000;
                            break;
                          case 9uLL:
                            uint64_t v175 = *(void *)((v511 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v435 = *(void *)((v511 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v473 = *(void *)((v511 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                            char v464 = *(unsigned char *)((v511 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                            uint64_t v176 = swift_allocObject();
                            *(void *)(v176 + 16) = v175;
                            *(void *)(v176 + 24) = v435;
                            *(void *)(v176 + 32) = v473;
                            *(unsigned char *)(v176 + 40) = v464;
                            uint64_t v495 = v176 | 0x7000000000000000;
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            sub_1BFF67F78(v175, v435, v473, v464);
                            break;
                          case 0xAuLL:
                            uint64_t v177 = *(void *)((v511 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v178 = *(void *)((v511 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v179 = swift_allocObject();
                            *(void *)(v179 + 16) = v177;
                            *(void *)(v179 + 24) = v178;
                            unint64_t v180 = v179 | 0x4000000000000000;
                            goto LABEL_96;
                          case 0xBuLL:
                            uint64_t v181 = *(void *)((v511 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v182 = *(void *)((v511 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v183 = swift_allocObject();
                            *(void *)(v183 + 16) = v181;
                            *(void *)(v183 + 24) = v182;
                            unint64_t v180 = v183 | 0x8000000000000000;
LABEL_96:
                            uint64_t v495 = v180;
                            swift_retain();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            break;
                          default:
                            swift_retain();
                            swift_retain_n();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            uint64_t v495 = v511;
                            break;
                        }
                        switch(v151 >> 60)
                        {
                          case 3uLL:
                            uint64_t v184 = swift_allocObject();
                            uint64_t v465 = (void *)(v184 + 16);
                            uint64_t v474 = v184;
                            swift_retain();
                            swift_retain();
                            sub_1C10E5AF0(v465);
                            swift_release();
                            swift_release();
                            unint64_t v151 = v474 | 0x3000000000000000;
                            break;
                          case 9uLL:
                            uint64_t v185 = *(void *)((v151 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v475 = *(void *)((v151 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                            uint64_t v484 = *(void *)((v151 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            char v186 = *(unsigned char *)((v151 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                            uint64_t v187 = swift_allocObject();
                            *(void *)(v187 + 16) = v185;
                            *(void *)(v187 + 24) = v484;
                            *(void *)(v187 + 32) = v475;
                            *(unsigned char *)(v187 + 40) = v186;
                            char v188 = v186;
                            unint64_t v151 = v187 | 0x7000000000000000;
                            sub_1BFF67F78(v185, v484, v475, v188);
                            break;
                          case 0xAuLL:
                            uint64_t v189 = v151 & 0xFFFFFFFFFFFFFFFLL;
                            uint64_t v191 = *(void *)((v151 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v190 = *(void *)(v189 + 24);
                            uint64_t v192 = swift_allocObject();
                            *(void *)(v192 + 16) = v191;
                            *(void *)(v192 + 24) = v190;
                            unint64_t v193 = v192 | 0x4000000000000000;
                            goto LABEL_103;
                          case 0xBuLL:
                            uint64_t v194 = v151 & 0xFFFFFFFFFFFFFFFLL;
                            uint64_t v196 = *(void *)((v151 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v195 = *(void *)(v194 + 24);
                            uint64_t v197 = swift_allocObject();
                            *(void *)(v197 + 16) = v196;
                            *(void *)(v197 + 24) = v195;
                            unint64_t v193 = v197 | 0x8000000000000000;
LABEL_103:
                            unint64_t v151 = v193;
                            swift_retain();
                            swift_bridgeObjectRetain();
                            break;
                          default:
                            swift_retain();
                            break;
                        }
                        uint64_t v198 = swift_allocObject();
                        *(void *)(v198 + 16) = v495;
                        *(void *)(v198 + 24) = v151;
                        swift_release();
                        swift_release();
                        unint64_t v138 = v198 | 0x3000000000000000;
                        break;
                      case 9uLL:
                        uint64_t v152 = *(void *)((v137 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v496 = v152;
                        uint64_t v153 = *(void *)((v137 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                        uint64_t v472 = *(void *)((v137 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        char v463 = *(unsigned char *)((v137 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                        uint64_t v154 = swift_allocObject();
                        *(void *)(v154 + 16) = v152;
                        *(void *)(v154 + 24) = v472;
                        *(void *)(v154 + 32) = v153;
                        *(unsigned char *)(v154 + 40) = v463;
                        unint64_t v138 = v154 | 0x7000000000000000;
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        sub_1BFF67F78(v496, v472, v153, v463);
                        break;
                      case 0xAuLL:
                        uint64_t v155 = *(void *)((v137 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v156 = *(void *)((v137 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v157 = swift_allocObject();
                        *(void *)(v157 + 16) = v155;
                        *(void *)(v157 + 24) = v156;
                        unint64_t v138 = v157 | 0x4000000000000000;
                        goto LABEL_86;
                      case 0xBuLL:
                        uint64_t v158 = *(void *)((v137 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v159 = *(void *)((v137 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v160 = swift_allocObject();
                        *(void *)(v160 + 16) = v158;
                        *(void *)(v160 + 24) = v159;
                        unint64_t v138 = v160 | 0x8000000000000000;
LABEL_86:
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        break;
                      default:
                        swift_retain();
                        swift_retain_n();
                        swift_retain();
                        unint64_t v138 = v137;
                        break;
                    }
                    switch(v136 >> 60)
                    {
                      case 3uLL:
                        uint64_t v161 = v136 & 0xFFFFFFFFFFFFFFFLL;
                        uint64_t v163 = *(void *)((v136 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v162 = *(void *)(v161 + 24);
                        uint64_t v164 = swift_allocObject();
                        *(void *)&v536[0] = v163;
                        *((void *)&v536[0] + 1) = v162;
                        uint64_t v512 = v164;
                        swift_retain();
                        swift_retain();
                        sub_1C10E55EC(v525);
                        sub_1C10E55EC(&v522);
                        uint64_t v165 = v522;
                        *(void *)(v512 + 16) = v525[0];
                        *(void *)(v512 + 24) = v165;
                        swift_release();
                        swift_release();
                        unint64_t v136 = v512 | 0x3000000000000000;
                        break;
                      case 9uLL:
                        uint64_t v166 = v136 & 0xFFFFFFFFFFFFFFFLL;
                        uint64_t v167 = *(void *)((v136 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v168 = *(void *)((v136 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v513 = *(void *)(v166 + 32);
                        char v497 = *(unsigned char *)(v166 + 40);
                        uint64_t v169 = swift_allocObject();
                        *(void *)(v169 + 16) = v167;
                        *(void *)(v169 + 24) = v168;
                        uint64_t v170 = v168;
                        *(void *)(v169 + 32) = v513;
                        *(unsigned char *)(v169 + 40) = v497;
                        unint64_t v136 = v169 | 0x7000000000000000;
                        sub_1BFF67F78(v167, v170, v513, v497);
                        break;
                      case 0xAuLL:
                        uint64_t v171 = *(void *)((v136 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v514 = *(void *)((v136 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v172 = swift_allocObject();
                        *(void *)(v172 + 16) = v171;
                        *(void *)(v172 + 24) = v514;
                        unint64_t v136 = v172 | 0x4000000000000000;
                        goto LABEL_91;
                      case 0xBuLL:
                        uint64_t v173 = *(void *)((v136 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v515 = *(void *)((v136 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v174 = swift_allocObject();
                        *(void *)(v174 + 16) = v173;
                        *(void *)(v174 + 24) = v515;
                        unint64_t v136 = v174 | 0x8000000000000000;
LABEL_91:
                        swift_retain();
                        swift_bridgeObjectRetain();
                        break;
                      default:
                        swift_retain();
                        break;
                    }
                    uint64_t v139 = swift_allocObject();
                    *(void *)(v139 + 16) = v138;
                    *(void *)(v139 + 24) = v136;
                    swift_release();
                    swift_release();
                    swift_release();
                    uint64_t v133 = v139 | 0x3000000000000000;
                    break;
                  case 9uLL:
                    uint64_t v140 = *(void *)((v133 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v141 = *(void *)((v133 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v142 = *(void *)((v133 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                    char v143 = *(unsigned char *)((v133 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                    uint64_t v144 = swift_allocObject();
                    *(void *)(v144 + 16) = v140;
                    *(void *)(v144 + 24) = v141;
                    *(void *)(v144 + 32) = v142;
                    *(unsigned char *)(v144 + 40) = v143;
                    uint64_t v133 = v144 | 0x7000000000000000;
                    sub_1BFF67F78(v140, v141, v142, v143);
                    break;
                  case 0xAuLL:
                    uint64_t v146 = *(void *)((v133 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v145 = *(void *)((v133 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v147 = swift_allocObject();
                    *(void *)(v147 + 16) = v146;
                    *(void *)(v147 + 24) = v145;
                    uint64_t v133 = v147 | 0x4000000000000000;
                    goto LABEL_80;
                  case 0xBuLL:
                    uint64_t v149 = *(void *)((v133 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v148 = *(void *)((v133 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v150 = swift_allocObject();
                    *(void *)(v150 + 16) = v149;
                    *(void *)(v150 + 24) = v148;
                    uint64_t v133 = v150 | 0x8000000000000000;
LABEL_80:
                    swift_retain();
                    swift_bridgeObjectRetain();
                    break;
                  default:
                    swift_retain();
                    break;
                }
                sub_1C1146BE0();
                uint64_t v132 = *(void *)(*(void *)&v523[0] + 16);
                sub_1C1146E7C(v132);
                sub_1C1147150(v132, v133);
                nullsub_1();
                --v129;
              }
              while (v129);
              uint64_t v424 = *(void *)&v523[0];
              uint64_t v123 = v520;
            }
            else
            {
              sub_1C00F5BA4((uint64_t)v551, (uint64_t)&v538);
              uint64_t v426 = sub_1C00F5EAC((uint64_t)&v538);
              sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
              sub_1C00F5EBC(v426);
              uint64_t v424 = sub_1C01AFD68(0);
            }
            char v427 = *((unsigned char *)v126 + 104);
            uint64_t v428 = v126[15];
            LOBYTE(v536[0]) = *((unsigned char *)v126 + 48);
            LOBYTE(v523[0]) = v427;
            long long v429 = *((_OWORD *)v126 + 1);
            long long v538 = *(_OWORD *)v126;
            long long v539 = v429;
            long long v540 = *((_OWORD *)v126 + 2);
            LOBYTE(v541) = v536[0];
            long long v542 = *(_OWORD *)(v126 + 7);
            long long v543 = *(_OWORD *)(v126 + 9);
            long long v544 = *(_OWORD *)(v126 + 11);
            char v545 = v427;
            uint64_t v546 = v424;
            uint64_t v547 = v428;
            sub_1C088473C((uint64_t)&v538);
            swift_bridgeObjectRetain();
            sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
            sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
            sub_1C00F6034((uint64_t)&v538, (uint64_t)v525);
            uint64_t v3 = v518;
            uint64_t v5 = v519;
          }
          else
          {
            uint64_t v521 = v123;
            uint64_t v329 = *v125;
            uint64_t v328 = v125[1];
            uint64_t v330 = v125[2];
            uint64_t v331 = v125[3];
            uint64_t v332 = v125[4];
            uint64_t v333 = v125[5];
            uint64_t v500 = v125[6];
            uint64_t v517 = v125[7];
            uint64_t v334 = sub_1BFFCDB8C(*v125);
            if (v334)
            {
              uint64_t v335 = v334;
              uint64_t v476 = v328;
              *(void *)&v523[0] = sub_1BFEACEF4();
              sub_1C00F5BA4((uint64_t)v551, (uint64_t)&v538);
              uint64_t v336 = sub_1C00F5EAC((uint64_t)&v538);
              sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
              sub_1C00F5EBC(v336);
              sub_1C1146958(v335);
              if (v335 < 0) {
                goto LABEL_232;
              }
              uint64_t v337 = (unint64_t *)(v329 + 32);
              do
              {
                unint64_t v340 = *v337++;
                uint64_t v339 = v340;
                switch(v340 >> 60)
                {
                  case 3uLL:
                    uint64_t v341 = v339 & 0xFFFFFFFFFFFFFFFLL;
                    unint64_t v343 = *(void *)(v341 + 16);
                    unint64_t v342 = *(void *)(v341 + 24);
                    switch(v343 >> 60)
                    {
                      case 3uLL:
                        uint64_t v357 = v343 & 0xFFFFFFFFFFFFFFFLL;
                        unint64_t v359 = *(void *)((v343 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        unint64_t v358 = *(void *)(v357 + 24);
                        switch(v359 >> 60)
                        {
                          case 3uLL:
                            uint64_t v490 = swift_allocObject();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            sub_1C10E5AF0((void *)(v490 + 16));
                            swift_release();
                            swift_release();
                            unint64_t v360 = v490 | 0x3000000000000000;
                            break;
                          case 9uLL:
                            uint64_t v392 = *(void *)((v359 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v439 = v392;
                            uint64_t v491 = *(void *)((v359 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v456 = *(void *)((v359 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                            char v446 = *(unsigned char *)((v359 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                            uint64_t v393 = swift_allocObject();
                            *(void *)(v393 + 16) = v392;
                            *(void *)(v393 + 24) = v491;
                            *(void *)(v393 + 32) = v456;
                            *(unsigned char *)(v393 + 40) = v446;
                            unint64_t v360 = v393 | 0x7000000000000000;
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            sub_1BFF67F78(v439, v491, v456, v446);
                            break;
                          case 0xAuLL:
                            uint64_t v394 = *(void *)((v359 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v395 = *(void *)((v359 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v396 = swift_allocObject();
                            *(void *)(v396 + 16) = v394;
                            *(void *)(v396 + 24) = v395;
                            unint64_t v360 = v396 | 0x4000000000000000;
                            goto LABEL_199;
                          case 0xBuLL:
                            uint64_t v397 = *(void *)((v359 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v398 = *(void *)((v359 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v399 = swift_allocObject();
                            *(void *)(v399 + 16) = v397;
                            *(void *)(v399 + 24) = v398;
                            unint64_t v360 = v399 | 0x8000000000000000;
LABEL_199:
                            swift_retain();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            break;
                          default:
                            swift_retain();
                            swift_retain_n();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            unint64_t v360 = v359;
                            break;
                        }
                        switch(v358 >> 60)
                        {
                          case 3uLL:
                            uint64_t v410 = swift_allocObject();
                            uint64_t v449 = (void *)(v410 + 16);
                            uint64_t v459 = v410;
                            swift_retain();
                            swift_retain();
                            sub_1C10E5AF0(v449);
                            swift_release();
                            swift_release();
                            unint64_t v358 = v459 | 0x3000000000000000;
                            break;
                          case 9uLL:
                            uint64_t v411 = v358 & 0xFFFFFFFFFFFFFFFLL;
                            uint64_t v412 = *(void *)((v358 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v413 = *(void *)((v358 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v492 = *(void *)(v411 + 32);
                            char v460 = *(unsigned char *)(v411 + 40);
                            uint64_t v414 = swift_allocObject();
                            *(void *)(v414 + 16) = v412;
                            *(void *)(v414 + 24) = v413;
                            uint64_t v415 = v413;
                            *(void *)(v414 + 32) = v492;
                            *(unsigned char *)(v414 + 40) = v460;
                            unint64_t v358 = v414 | 0x7000000000000000;
                            sub_1BFF67F78(v412, v415, v492, v460);
                            break;
                          case 0xAuLL:
                            uint64_t v416 = *(void *)((v358 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v493 = *(void *)((v358 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v417 = swift_allocObject();
                            *(void *)(v417 + 16) = v416;
                            *(void *)(v417 + 24) = v493;
                            unint64_t v358 = v417 | 0x4000000000000000;
                            goto LABEL_212;
                          case 0xBuLL:
                            uint64_t v418 = *(void *)((v358 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v494 = *(void *)((v358 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v419 = swift_allocObject();
                            *(void *)(v419 + 16) = v418;
                            *(void *)(v419 + 24) = v494;
                            unint64_t v358 = v419 | 0x8000000000000000;
LABEL_212:
                            swift_retain();
                            swift_bridgeObjectRetain();
                            break;
                          default:
                            swift_retain();
                            break;
                        }
                        uint64_t v420 = swift_allocObject();
                        *(void *)(v420 + 16) = v360;
                        *(void *)(v420 + 24) = v358;
                        swift_release();
                        swift_release();
                        uint64_t v344 = v420 | 0x3000000000000000;
                        uint64_t v5 = v519;
                        break;
                      case 9uLL:
                        uint64_t v361 = v343 & 0xFFFFFFFFFFFFFFFLL;
                        uint64_t v362 = *(void *)((v343 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v363 = *(void *)((v343 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v364 = *(void *)((v343 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                        char v365 = *(unsigned char *)(v361 + 40);
                        uint64_t v366 = swift_allocObject();
                        *(void *)(v366 + 16) = v362;
                        *(void *)(v366 + 24) = v363;
                        *(void *)(v366 + 32) = v364;
                        *(unsigned char *)(v366 + 40) = v365;
                        uint64_t v486 = v366 | 0x7000000000000000;
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        uint64_t v367 = v362;
                        uint64_t v344 = v486;
                        char v368 = v365;
                        uint64_t v5 = v519;
                        sub_1BFF67F78(v367, v363, v364, v368);
                        break;
                      case 0xAuLL:
                        uint64_t v370 = *(void *)((v343 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v369 = *(void *)((v343 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v371 = swift_allocObject();
                        *(void *)(v371 + 16) = v370;
                        *(void *)(v371 + 24) = v369;
                        unint64_t v372 = v371 | 0x4000000000000000;
                        goto LABEL_188;
                      case 0xBuLL:
                        uint64_t v374 = *(void *)((v343 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v373 = *(void *)((v343 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v375 = swift_allocObject();
                        *(void *)(v375 + 16) = v374;
                        *(void *)(v375 + 24) = v373;
                        unint64_t v372 = v375 | 0x8000000000000000;
LABEL_188:
                        swift_retain();
                        uint64_t v344 = v372;
                        swift_bridgeObjectRetain();
                        swift_retain();
                        swift_retain();
                        uint64_t v5 = v519;
                        swift_retain();
                        break;
                      default:
                        swift_retain();
                        swift_retain_n();
                        swift_retain();
                        uint64_t v344 = v343;
                        break;
                    }
                    switch(v342 >> 60)
                    {
                      case 3uLL:
                        uint64_t v376 = v342 & 0xFFFFFFFFFFFFFFFLL;
                        unint64_t v377 = *(void *)((v342 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v378 = *(void *)(v376 + 24);
                        *(void *)&v536[0] = v377;
                        *((void *)&v536[0] + 1) = v378;
                        uint64_t v487 = v344;
                        switch(v377 >> 60)
                        {
                          case 3uLL:
                            uint64_t v400 = swift_allocObject();
                            uint64_t v440 = (void *)(v400 + 16);
                            uint64_t v447 = v400;
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            sub_1C10E5AF0(v440);
                            swift_release();
                            uint64_t v5 = v519;
                            swift_release();
                            unint64_t v377 = v447 | 0x3000000000000000;
                            break;
                          case 9uLL:
                            uint64_t v401 = *(void *)((v377 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v441 = v401;
                            uint64_t v448 = *(void *)((v377 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v434 = *(void *)((v377 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                            char v402 = *(unsigned char *)((v377 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                            uint64_t v403 = swift_allocObject();
                            *(void *)(v403 + 16) = v448;
                            *(void *)(v403 + 24) = v401;
                            *(void *)(v403 + 32) = v434;
                            *(unsigned char *)(v403 + 40) = v402;
                            unint64_t v377 = v403 | 0x7000000000000000;
                            swift_retain();
                            swift_retain();
                            uint64_t v5 = v519;
                            sub_1BFF67F78(v448, v441, v434, v402);
                            break;
                          case 0xAuLL:
                            uint64_t v404 = *(void *)((v377 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v457 = *(void *)((v377 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v405 = swift_allocObject();
                            *(void *)(v405 + 16) = v404;
                            *(void *)(v405 + 24) = v457;
                            unint64_t v377 = v405 | 0x4000000000000000;
                            goto LABEL_206;
                          case 0xBuLL:
                            uint64_t v406 = *(void *)((v377 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v458 = *(void *)((v377 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v407 = swift_allocObject();
                            *(void *)(v407 + 16) = v406;
                            *(void *)(v407 + 24) = v458;
                            unint64_t v377 = v407 | 0x8000000000000000;
LABEL_206:
                            swift_retain();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            swift_retain();
                            break;
                          default:
                            swift_retain();
                            swift_retain_n();
                            break;
                        }
                        uint64_t v408 = swift_allocObject();
                        sub_1C10E55EC(v525);
                        uint64_t v409 = v525[0];
                        *(void *)(v408 + 16) = v377;
                        *(void *)(v408 + 24) = v409;
                        swift_release();
                        swift_release();
                        unint64_t v342 = v408 | 0x3000000000000000;
                        uint64_t v344 = v487;
                        break;
                      case 9uLL:
                        uint64_t v488 = v344;
                        uint64_t v379 = *(void *)((v342 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v380 = *(void *)((v342 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v381 = *(void *)((v342 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                        char v382 = *(unsigned char *)((v342 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                        uint64_t v383 = swift_allocObject();
                        *(void *)(v383 + 16) = v379;
                        *(void *)(v383 + 24) = v380;
                        *(void *)(v383 + 32) = v381;
                        *(unsigned char *)(v383 + 40) = v382;
                        unint64_t v342 = v383 | 0x7000000000000000;
                        uint64_t v384 = v380;
                        uint64_t v344 = v488;
                        uint64_t v385 = v381;
                        uint64_t v5 = v519;
                        sub_1BFF67F78(v379, v384, v385, v382);
                        break;
                      case 0xAuLL:
                        uint64_t v489 = v344;
                        uint64_t v387 = *(void *)((v342 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v386 = *(void *)((v342 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v388 = swift_allocObject();
                        *(void *)(v388 + 16) = v387;
                        *(void *)(v388 + 24) = v386;
                        unint64_t v342 = v388 | 0x4000000000000000;
                        goto LABEL_194;
                      case 0xBuLL:
                        uint64_t v489 = v344;
                        uint64_t v390 = *(void *)((v342 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v389 = *(void *)((v342 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v391 = swift_allocObject();
                        *(void *)(v391 + 16) = v390;
                        *(void *)(v391 + 24) = v389;
                        unint64_t v342 = v391 | 0x8000000000000000;
LABEL_194:
                        uint64_t v344 = v489;
                        swift_retain();
                        swift_bridgeObjectRetain();
                        break;
                      default:
                        swift_retain();
                        break;
                    }
                    uint64_t v345 = swift_allocObject();
                    *(void *)(v345 + 16) = v344;
                    *(void *)(v345 + 24) = v342;
                    swift_release();
                    swift_release();
                    swift_release();
                    uint64_t v339 = v345 | 0x3000000000000000;
                    break;
                  case 9uLL:
                    uint64_t v346 = *(void *)((v339 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v347 = *(void *)((v339 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v348 = *(void *)((v339 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                    char v349 = *(unsigned char *)((v339 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                    uint64_t v350 = swift_allocObject();
                    *(void *)(v350 + 16) = v346;
                    *(void *)(v350 + 24) = v347;
                    *(void *)(v350 + 32) = v348;
                    *(unsigned char *)(v350 + 40) = v349;
                    uint64_t v339 = v350 | 0x7000000000000000;
                    sub_1BFF67F78(v346, v347, v348, v349);
                    break;
                  case 0xAuLL:
                    uint64_t v352 = *(void *)((v339 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v351 = *(void *)((v339 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v353 = swift_allocObject();
                    *(void *)(v353 + 16) = v352;
                    *(void *)(v353 + 24) = v351;
                    uint64_t v339 = v353 | 0x4000000000000000;
                    goto LABEL_182;
                  case 0xBuLL:
                    uint64_t v355 = *(void *)((v339 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v354 = *(void *)((v339 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v356 = swift_allocObject();
                    *(void *)(v356 + 16) = v355;
                    *(void *)(v356 + 24) = v354;
                    uint64_t v339 = v356 | 0x8000000000000000;
LABEL_182:
                    swift_retain();
                    swift_bridgeObjectRetain();
                    break;
                  default:
                    swift_retain();
                    break;
                }
                sub_1C1146BE0();
                uint64_t v338 = *(void *)(*(void *)&v523[0] + 16);
                sub_1C1146E7C(v338);
                sub_1C1147150(v338, v339);
                nullsub_1();
                --v335;
              }
              while (v335);
              uint64_t v425 = *(void *)&v523[0];
              uint64_t v3 = v518;
              uint64_t v328 = v476;
            }
            else
            {
              sub_1C00F5BA4((uint64_t)v551, (uint64_t)&v538);
              uint64_t v430 = sub_1C00F5EAC((uint64_t)&v538);
              sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
              sub_1C00F5EBC(v430);
              uint64_t v425 = sub_1C01AFD68(0);
            }
            *(void *)&long long v538 = v425;
            *((void *)&v538 + 1) = v328;
            *(void *)&long long v539 = v330;
            *((void *)&v539 + 1) = v331;
            *(void *)&long long v540 = v332;
            *((void *)&v540 + 1) = v333;
            uint64_t v541 = v500;
            *(void *)&long long v542 = v517;
            sub_1C0884764((uint64_t)&v538);
            swift_bridgeObjectRetain();
            sub_1BFDB3920(v500);
            sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
            sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
            sub_1C00F6034((uint64_t)&v538, (uint64_t)v525);
            uint64_t v123 = v521;
          }
          char v431 = *(unsigned char *)(v123 + 128);
          sub_1C00F6034((uint64_t)v525, (uint64_t)v523);
          char v524 = v431;
          char v537 = v431;
          v536[6] = v523[6];
          v536[7] = v523[7];
          v536[2] = v523[2];
          v536[3] = v523[3];
          v536[4] = v523[4];
          v536[5] = v523[5];
          v536[0] = v523[0];
          v536[1] = v523[1];
          sub_1C088E860((uint64_t)v536);
        }
        sub_1BFCF2D74((uint64_t)v536, (uint64_t)&v538);
        sub_1C0862D24((uint64_t)&v538);
        uint64_t v6 = &v538;
      }
      else
      {
        sub_1C00F5EAC((uint64_t)v552);
        uint64_t v6 = (long long *)v551;
      }
      sub_1C00F5BA4((uint64_t)v6, (uint64_t)v550);
    }
    else
    {
      uint64_t v12 = sub_1C00F5EAC((uint64_t)v552);
      sub_1C00F61EC(v12, (uint64_t)v536);
      sub_1C00F6034((uint64_t)v536, (uint64_t)&v538);
      int v13 = sub_1C00F6090((uint64_t)&v538);
      uint64_t v14 = (uint64_t *)sub_1C00F609C((uint64_t)&v538);
      uint64_t v15 = v14;
      if (v13 == 1)
      {
        uint64_t v16 = v14[14];
        uint64_t v17 = sub_1BFFCDB8C(v16);
        if (v17)
        {
          uint64_t v18 = v17;
          *(void *)&v523[0] = sub_1BFEACEF4();
          sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
          sub_1C1146958(v18);
          if (v18 < 0)
          {
            __break(1u);
LABEL_230:
            __break(1u);
LABEL_231:
            __break(1u);
LABEL_232:
            __break(1u);
LABEL_233:
            __break(1u);
            JUMPOUT(0x1C096F0B0);
          }
          unint64_t v19 = (unint64_t *)(v16 + 32);
          do
          {
            unint64_t v22 = *v19++;
            uint64_t v21 = v22;
            switch(v22 >> 60)
            {
              case 3uLL:
                unint64_t v24 = *(void *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                switch(v24 >> 60)
                {
                  case 3uLL:
                    unint64_t v38 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    unint64_t v39 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    switch(v38 >> 60)
                    {
                      case 3uLL:
                        unint64_t v71 = *(void *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v70 = *(void *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v505 = swift_allocObject();
                        unint64_t v548 = v71;
                        uint64_t v549 = v70;
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        sub_1C10E55EC(&v526);
                        sub_1C10E55EC(v525);
                        uint64_t v72 = v525[0];
                        *(void *)(v505 + 16) = v526;
                        *(void *)(v505 + 24) = v72;
                        swift_release();
                        swift_release();
                        uint64_t v40 = v505 | 0x3000000000000000;
                        break;
                      case 9uLL:
                        uint64_t v73 = *(void *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v442 = *(void *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v477 = *(void *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                        char v468 = *(unsigned char *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                        uint64_t v74 = swift_allocObject();
                        *(void *)(v74 + 16) = v73;
                        *(void *)(v74 + 24) = v442;
                        *(void *)(v74 + 32) = v477;
                        *(unsigned char *)(v74 + 40) = v468;
                        uint64_t v506 = v74 | 0x7000000000000000;
                        swift_retain();
                        swift_retain();
                        uint64_t v40 = v506;
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        sub_1BFF67F78(v73, v442, v477, v468);
                        break;
                      case 0xAuLL:
                        uint64_t v75 = *(void *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v76 = *(void *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v77 = swift_allocObject();
                        *(void *)(v77 + 16) = v75;
                        *(void *)(v77 + 24) = v76;
                        unint64_t v78 = v77 | 0x4000000000000000;
                        goto LABEL_43;
                      case 0xBuLL:
                        uint64_t v79 = *(void *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v80 = *(void *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v81 = swift_allocObject();
                        *(void *)(v81 + 16) = v79;
                        *(void *)(v81 + 24) = v80;
                        unint64_t v78 = v81 | 0x8000000000000000;
LABEL_43:
                        unint64_t v507 = v78;
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        uint64_t v40 = v507;
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        break;
                      default:
                        swift_retain();
                        swift_retain_n();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        uint64_t v40 = v38;
                        break;
                    }
                    switch(v39 >> 60)
                    {
                      case 3uLL:
                        uint64_t v508 = v40;
                        unint64_t v94 = *(void *)((v39 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v95 = *(void *)((v39 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v96 = swift_allocObject();
                        unint64_t v548 = v94;
                        uint64_t v549 = v95;
                        swift_retain();
                        swift_retain();
                        sub_1C10E55EC(&v526);
                        sub_1C10E55EC(v525);
                        uint64_t v40 = v508;
                        uint64_t v97 = v525[0];
                        *(void *)(v96 + 16) = v526;
                        *(void *)(v96 + 24) = v97;
                        swift_release();
                        swift_release();
                        unint64_t v39 = v96 | 0x3000000000000000;
                        break;
                      case 9uLL:
                        uint64_t v98 = v39 & 0xFFFFFFFFFFFFFFFLL;
                        uint64_t v509 = v40;
                        uint64_t v99 = *(void *)((v39 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v100 = *(void *)((v39 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v101 = *(void *)((v39 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                        char v480 = *(unsigned char *)(v98 + 40);
                        uint64_t v102 = swift_allocObject();
                        *(void *)(v102 + 16) = v99;
                        *(void *)(v102 + 24) = v100;
                        uint64_t v103 = v101;
                        *(void *)(v102 + 32) = v101;
                        *(unsigned char *)(v102 + 40) = v480;
                        unint64_t v39 = v102 | 0x7000000000000000;
                        uint64_t v104 = v100;
                        uint64_t v40 = v509;
                        sub_1BFF67F78(v99, v104, v103, v480);
                        break;
                      case 0xAuLL:
                        uint64_t v510 = v40;
                        uint64_t v106 = *(void *)((v39 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v105 = *(void *)((v39 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v107 = swift_allocObject();
                        *(void *)(v107 + 16) = v106;
                        *(void *)(v107 + 24) = v105;
                        unint64_t v39 = v107 | 0x4000000000000000;
                        goto LABEL_57;
                      case 0xBuLL:
                        uint64_t v510 = v40;
                        uint64_t v109 = *(void *)((v39 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v108 = *(void *)((v39 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v110 = swift_allocObject();
                        *(void *)(v110 + 16) = v109;
                        *(void *)(v110 + 24) = v108;
                        unint64_t v39 = v110 | 0x8000000000000000;
LABEL_57:
                        uint64_t v40 = v510;
                        swift_retain();
                        swift_bridgeObjectRetain();
                        break;
                      default:
                        swift_retain();
                        break;
                    }
                    uint64_t v111 = swift_allocObject();
                    *(void *)(v111 + 16) = v40;
                    *(void *)(v111 + 24) = v39;
                    swift_release();
                    swift_release();
                    uint64_t v25 = v111 | 0x3000000000000000;
                    break;
                  case 9uLL:
                    uint64_t v41 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v42 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v43 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                    char v44 = *(unsigned char *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                    uint64_t v45 = swift_allocObject();
                    *(void *)(v45 + 16) = v41;
                    *(void *)(v45 + 24) = v42;
                    *(void *)(v45 + 32) = v43;
                    *(unsigned char *)(v45 + 40) = v44;
                    uint64_t v501 = v45 | 0x7000000000000000;
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    uint64_t v46 = v41;
                    uint64_t v25 = v501;
                    sub_1BFF67F78(v46, v42, v43, v44);
                    break;
                  case 0xAuLL:
                    uint64_t v48 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v47 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v49 = swift_allocObject();
                    *(void *)(v49 + 16) = v48;
                    *(void *)(v49 + 24) = v47;
                    unint64_t v50 = v49 | 0x4000000000000000;
                    goto LABEL_32;
                  case 0xBuLL:
                    uint64_t v52 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v51 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v53 = swift_allocObject();
                    *(void *)(v53 + 16) = v52;
                    *(void *)(v53 + 24) = v51;
                    unint64_t v50 = v53 | 0x8000000000000000;
LABEL_32:
                    swift_retain();
                    uint64_t v25 = v50;
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    break;
                  default:
                    swift_retain();
                    swift_retain_n();
                    swift_retain();
                    uint64_t v25 = v24;
                    break;
                }
                switch(v23 >> 60)
                {
                  case 3uLL:
                    uint64_t v54 = v23 & 0xFFFFFFFFFFFFFFFLL;
                    unint64_t v55 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    unint64_t v56 = *(void *)(v54 + 24);
                    uint64_t v502 = v25;
                    switch(v55 >> 60)
                    {
                      case 3uLL:
                        unint64_t v82 = *(void *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v83 = *(void *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v478 = swift_allocObject();
                        unint64_t v548 = v82;
                        uint64_t v549 = v83;
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        sub_1C10E55EC(&v526);
                        sub_1C10E55EC(v525);
                        uint64_t v84 = v525[0];
                        *(void *)(v478 + 16) = v526;
                        *(void *)(v478 + 24) = v84;
                        swift_release();
                        swift_release();
                        unint64_t v57 = v478 | 0x3000000000000000;
                        break;
                      case 9uLL:
                        uint64_t v85 = *(void *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v479 = *(void *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v461 = v85;
                        uint64_t v86 = *(void *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                        char v469 = *(unsigned char *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                        uint64_t v87 = swift_allocObject();
                        *(void *)(v87 + 16) = v479;
                        *(void *)(v87 + 24) = v85;
                        *(void *)(v87 + 32) = v86;
                        *(unsigned char *)(v87 + 40) = v469;
                        unint64_t v57 = v87 | 0x7000000000000000;
                        swift_retain();
                        swift_retain();
                        sub_1BFF67F78(v479, v461, v86, v469);
                        break;
                      case 0xAuLL:
                        uint64_t v88 = *(void *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v89 = *(void *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v90 = swift_allocObject();
                        *(void *)(v90 + 16) = v88;
                        *(void *)(v90 + 24) = v89;
                        unint64_t v57 = v90 | 0x4000000000000000;
                        goto LABEL_50;
                      case 0xBuLL:
                        uint64_t v91 = *(void *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v92 = *(void *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v93 = swift_allocObject();
                        *(void *)(v93 + 16) = v91;
                        *(void *)(v93 + 24) = v92;
                        unint64_t v57 = v93 | 0x8000000000000000;
LABEL_50:
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        swift_retain();
                        break;
                      default:
                        swift_retain();
                        swift_retain_n();
                        unint64_t v57 = v55;
                        break;
                    }
                    switch(v56 >> 60)
                    {
                      case 3uLL:
                        uint64_t v112 = swift_allocObject();
                        int v462 = (void *)(v112 + 16);
                        uint64_t v470 = v112;
                        swift_retain();
                        swift_retain();
                        sub_1C10E5AF0(v462);
                        swift_release();
                        swift_release();
                        unint64_t v56 = v470 | 0x3000000000000000;
                        break;
                      case 9uLL:
                        uint64_t v113 = v56 & 0xFFFFFFFFFFFFFFFLL;
                        uint64_t v114 = *(void *)((v56 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v115 = *(void *)((v56 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v481 = *(void *)(v113 + 32);
                        char v471 = *(unsigned char *)(v113 + 40);
                        uint64_t v116 = swift_allocObject();
                        *(void *)(v116 + 16) = v114;
                        *(void *)(v116 + 24) = v115;
                        uint64_t v117 = v115;
                        *(void *)(v116 + 32) = v481;
                        *(unsigned char *)(v116 + 40) = v471;
                        unint64_t v56 = v116 | 0x7000000000000000;
                        sub_1BFF67F78(v114, v117, v481, v471);
                        break;
                      case 0xAuLL:
                        uint64_t v118 = *(void *)((v56 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v482 = *(void *)((v56 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v119 = swift_allocObject();
                        *(void *)(v119 + 16) = v118;
                        *(void *)(v119 + 24) = v482;
                        unint64_t v56 = v119 | 0x4000000000000000;
                        goto LABEL_63;
                      case 0xBuLL:
                        uint64_t v120 = *(void *)((v56 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v483 = *(void *)((v56 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v121 = swift_allocObject();
                        *(void *)(v121 + 16) = v120;
                        *(void *)(v121 + 24) = v483;
                        unint64_t v56 = v121 | 0x8000000000000000;
LABEL_63:
                        swift_retain();
                        swift_bridgeObjectRetain();
                        break;
                      default:
                        swift_retain();
                        break;
                    }
                    uint64_t v122 = swift_allocObject();
                    *(void *)(v122 + 16) = v57;
                    *(void *)(v122 + 24) = v56;
                    swift_release();
                    swift_release();
                    unint64_t v23 = v122 | 0x3000000000000000;
                    uint64_t v25 = v502;
                    break;
                  case 9uLL:
                    uint64_t v503 = v25;
                    uint64_t v58 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v59 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v60 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                    char v61 = *(unsigned char *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                    uint64_t v62 = swift_allocObject();
                    *(void *)(v62 + 16) = v58;
                    *(void *)(v62 + 24) = v59;
                    *(void *)(v62 + 32) = v60;
                    *(unsigned char *)(v62 + 40) = v61;
                    unint64_t v23 = v62 | 0x7000000000000000;
                    uint64_t v63 = v59;
                    uint64_t v25 = v503;
                    sub_1BFF67F78(v58, v63, v60, v61);
                    break;
                  case 0xAuLL:
                    uint64_t v504 = v25;
                    uint64_t v65 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v64 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v66 = swift_allocObject();
                    *(void *)(v66 + 16) = v65;
                    *(void *)(v66 + 24) = v64;
                    unint64_t v23 = v66 | 0x4000000000000000;
                    goto LABEL_38;
                  case 0xBuLL:
                    uint64_t v504 = v25;
                    uint64_t v68 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v67 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v69 = swift_allocObject();
                    *(void *)(v69 + 16) = v68;
                    *(void *)(v69 + 24) = v67;
                    unint64_t v23 = v69 | 0x8000000000000000;
LABEL_38:
                    uint64_t v25 = v504;
                    swift_retain();
                    swift_bridgeObjectRetain();
                    break;
                  default:
                    swift_retain();
                    break;
                }
                uint64_t v26 = swift_allocObject();
                *(void *)(v26 + 16) = v25;
                *(void *)(v26 + 24) = v23;
                swift_release();
                swift_release();
                swift_release();
                uint64_t v21 = v26 | 0x3000000000000000;
                break;
              case 9uLL:
                uint64_t v27 = *(void *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v28 = *(void *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                uint64_t v29 = *(void *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                char v30 = *(unsigned char *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                uint64_t v31 = swift_allocObject();
                *(void *)(v31 + 16) = v27;
                *(void *)(v31 + 24) = v28;
                *(void *)(v31 + 32) = v29;
                *(unsigned char *)(v31 + 40) = v30;
                uint64_t v21 = v31 | 0x7000000000000000;
                sub_1BFF67F78(v27, v28, v29, v30);
                break;
              case 0xAuLL:
                uint64_t v33 = *(void *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v32 = *(void *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                uint64_t v34 = swift_allocObject();
                *(void *)(v34 + 16) = v33;
                *(void *)(v34 + 24) = v32;
                uint64_t v21 = v34 | 0x4000000000000000;
                goto LABEL_26;
              case 0xBuLL:
                uint64_t v36 = *(void *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v35 = *(void *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                uint64_t v37 = swift_allocObject();
                *(void *)(v37 + 16) = v36;
                *(void *)(v37 + 24) = v35;
                uint64_t v21 = v37 | 0x8000000000000000;
LABEL_26:
                swift_retain();
                swift_bridgeObjectRetain();
                break;
              default:
                swift_retain();
                break;
            }
            sub_1C1146BE0();
            uint64_t v20 = *(void *)(*(void *)&v523[0] + 16);
            sub_1C1146E7C(v20);
            sub_1C1147150(v20, v21);
            nullsub_1();
            --v18;
          }
          while (v18);
          uint64_t v326 = *(void *)&v523[0];
        }
        else
        {
          sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
          uint64_t v326 = sub_1C01AFD68(0);
        }
        char v421 = *((unsigned char *)v15 + 104);
        uint64_t v422 = v15[15];
        LOBYTE(v525[0]) = *((unsigned char *)v15 + 48);
        LOBYTE(v522) = v421;
        long long v423 = *((_OWORD *)v15 + 1);
        long long v526 = *(_OWORD *)v15;
        long long v527 = v423;
        long long v528 = *((_OWORD *)v15 + 2);
        LOBYTE(v529) = v525[0];
        long long v530 = *(_OWORD *)(v15 + 7);
        long long v531 = *(_OWORD *)(v15 + 9);
        long long v532 = *(_OWORD *)(v15 + 11);
        char v533 = v421;
        uint64_t v534 = v326;
        uint64_t v535 = v422;
        sub_1C088473C((uint64_t)&v526);
        sub_1C00F6034((uint64_t)&v526, (uint64_t)v523);
        nullsub_1();
        sub_1C00F61EC((uint64_t)v523, (uint64_t)&v548);
        sub_1C0862D98((uint64_t)&v548);
        swift_bridgeObjectRetain();
        sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
        sub_1C00F5BA4((uint64_t)&v548, (uint64_t)v550);
        uint64_t v3 = v518;
      }
      else
      {
        uint64_t v200 = *v14;
        uint64_t v199 = v14[1];
        uint64_t v201 = v14[2];
        uint64_t v202 = v14[3];
        uint64_t v203 = v14[4];
        uint64_t v204 = v14[5];
        uint64_t v205 = v14[6];
        uint64_t v516 = v14[7];
        uint64_t v206 = sub_1BFFCDB8C(*v14);
        if (v206)
        {
          uint64_t v207 = v206;
          uint64_t v485 = v205;
          uint64_t v499 = v199;
          *(void *)&v523[0] = sub_1BFEACEF4();
          sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
          sub_1C1146958(v207);
          if (v207 < 0) {
            goto LABEL_230;
          }
          uint64_t v208 = (unint64_t *)(v200 + 32);
          do
          {
            unint64_t v211 = *v208++;
            uint64_t v210 = v211;
            switch(v211 >> 60)
            {
              case 3uLL:
                uint64_t v212 = v210 & 0xFFFFFFFFFFFFFFFLL;
                unint64_t v213 = *(void *)((v210 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v214 = *(void *)(v212 + 24);
                switch(v213 >> 60)
                {
                  case 3uLL:
                    unint64_t v228 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    unint64_t v229 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    switch(v228 >> 60)
                    {
                      case 3uLL:
                        unint64_t v260 = *(void *)((v228 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v261 = *(void *)((v228 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        unint64_t v548 = v260;
                        uint64_t v549 = v261;
                        switch(v260 >> 60)
                        {
                          case 3uLL:
                            uint64_t v300 = swift_allocObject();
                            uint64_t v444 = (void *)(v300 + 16);
                            uint64_t v454 = v300;
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            sub_1C10E5AF0(v444);
                            swift_release();
                            swift_release();
                            uint64_t v262 = v454 | 0x3000000000000000;
                            goto LABEL_157;
                          case 9uLL:
                            uint64_t v301 = *(void *)((v260 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v445 = *(void *)((v260 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                            uint64_t v455 = *(void *)((v260 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            char v438 = *(unsigned char *)((v260 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                            uint64_t v302 = swift_allocObject();
                            *(void *)(v302 + 16) = v301;
                            *(void *)(v302 + 24) = v455;
                            *(void *)(v302 + 32) = v445;
                            *(unsigned char *)(v302 + 40) = v438;
                            uint64_t v433 = v302 | 0x7000000000000000;
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            uint64_t v262 = v433;
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            sub_1BFF67F78(v301, v455, v445, v438);
                            goto LABEL_157;
                          case 0xAuLL:
                            uint64_t v304 = *(void *)((v260 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v303 = *(void *)((v260 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v305 = swift_allocObject();
                            unint64_t v306 = v305 | 0x4000000000000000;
                            goto LABEL_155;
                          case 0xBuLL:
                            uint64_t v304 = *(void *)((v260 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                            uint64_t v303 = *(void *)((v260 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                            uint64_t v305 = swift_allocObject();
                            unint64_t v306 = v305 | 0x8000000000000000;
LABEL_155:
                            *(void *)(v305 + 16) = v304;
                            *(void *)(v305 + 24) = v303;
                            uint64_t v262 = v306;
                            swift_retain();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            goto LABEL_156;
                          default:
                            uint64_t v262 = v260;
                            swift_retain();
                            swift_retain_n();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
LABEL_156:
                            swift_retain();
LABEL_157:
                            uint64_t v307 = swift_allocObject();
                            sub_1C10E55EC(&v526);
                            uint64_t v308 = v526;
                            *(void *)(v307 + 16) = v262;
                            *(void *)(v307 + 24) = v308;
                            swift_release();
                            swift_release();
                            unint64_t v228 = v307 | 0x3000000000000000;
                            break;
                        }
                        break;
                      case 9uLL:
                        uint64_t v263 = *(void *)((v228 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v450 = *(void *)((v228 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v436 = *(void *)((v228 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                        char v264 = *(unsigned char *)((v228 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                        uint64_t v265 = swift_allocObject();
                        *(void *)(v265 + 16) = v450;
                        *(void *)(v265 + 24) = v263;
                        *(void *)(v265 + 32) = v436;
                        *(unsigned char *)(v265 + 40) = v264;
                        unint64_t v228 = v265 | 0x7000000000000000;
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        sub_1BFF67F78(v450, v263, v436, v264);
                        break;
                      case 0xAuLL:
                        uint64_t v266 = *(void *)((v228 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v267 = *(void *)((v228 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v268 = swift_allocObject();
                        *(void *)(v268 + 16) = v266;
                        *(void *)(v268 + 24) = v267;
                        unint64_t v228 = v268 | 0x4000000000000000;
                        goto LABEL_137;
                      case 0xBuLL:
                        uint64_t v269 = *(void *)((v228 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v270 = *(void *)((v228 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v271 = swift_allocObject();
                        *(void *)(v271 + 16) = v269;
                        *(void *)(v271 + 24) = v270;
                        unint64_t v228 = v271 | 0x8000000000000000;
LABEL_137:
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        break;
                      default:
                        swift_retain();
                        swift_retain_n();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        break;
                    }
                    switch(v229 >> 60)
                    {
                      case 3uLL:
                        unint64_t v309 = *(void *)((v229 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v310 = *(void *)((v229 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v311 = swift_allocObject();
                        unint64_t v548 = v309;
                        uint64_t v549 = v310;
                        swift_retain();
                        swift_retain();
                        sub_1C10E55EC(&v526);
                        sub_1C10E55EC(v525);
                        uint64_t v312 = v525[0];
                        *(void *)(v311 + 16) = v526;
                        *(void *)(v311 + 24) = v312;
                        swift_release();
                        swift_release();
                        unint64_t v229 = v311 | 0x3000000000000000;
                        break;
                      case 9uLL:
                        uint64_t v313 = *(void *)((v229 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v314 = *(void *)((v229 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v315 = *(void *)((v229 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                        char v316 = *(unsigned char *)((v229 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                        uint64_t v317 = swift_allocObject();
                        *(void *)(v317 + 16) = v313;
                        *(void *)(v317 + 24) = v314;
                        *(void *)(v317 + 32) = v315;
                        char v318 = v316;
                        *(unsigned char *)(v317 + 40) = v316;
                        unint64_t v229 = v317 | 0x7000000000000000;
                        sub_1BFF67F78(v313, v314, v315, v318);
                        break;
                      case 0xAuLL:
                        uint64_t v320 = *(void *)((v229 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v319 = *(void *)((v229 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v321 = swift_allocObject();
                        *(void *)(v321 + 16) = v320;
                        *(void *)(v321 + 24) = v319;
                        unint64_t v229 = v321 | 0x4000000000000000;
                        goto LABEL_164;
                      case 0xBuLL:
                        uint64_t v323 = *(void *)((v229 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v322 = *(void *)((v229 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v324 = swift_allocObject();
                        *(void *)(v324 + 16) = v323;
                        *(void *)(v324 + 24) = v322;
                        unint64_t v229 = v324 | 0x8000000000000000;
LABEL_164:
                        swift_retain();
                        swift_bridgeObjectRetain();
                        break;
                      default:
                        swift_retain();
                        break;
                    }
                    uint64_t v325 = swift_allocObject();
                    *(void *)(v325 + 16) = v228;
                    *(void *)(v325 + 24) = v229;
                    swift_release();
                    swift_release();
                    uint64_t v215 = v325 | 0x3000000000000000;
                    break;
                  case 9uLL:
                    uint64_t v230 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v231 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v232 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                    char v233 = *(unsigned char *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                    uint64_t v234 = swift_allocObject();
                    *(void *)(v234 + 16) = v230;
                    *(void *)(v234 + 24) = v231;
                    *(void *)(v234 + 32) = v232;
                    *(unsigned char *)(v234 + 40) = v233;
                    uint64_t v235 = v234 | 0x7000000000000000;
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    uint64_t v236 = v231;
                    uint64_t v215 = v235;
                    sub_1BFF67F78(v230, v236, v232, v233);
                    break;
                  case 0xAuLL:
                    uint64_t v238 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v237 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v239 = swift_allocObject();
                    *(void *)(v239 + 16) = v238;
                    *(void *)(v239 + 24) = v237;
                    unint64_t v240 = v239 | 0x4000000000000000;
                    goto LABEL_125;
                  case 0xBuLL:
                    uint64_t v242 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v241 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v243 = swift_allocObject();
                    *(void *)(v243 + 16) = v242;
                    *(void *)(v243 + 24) = v241;
                    unint64_t v240 = v243 | 0x8000000000000000;
LABEL_125:
                    uint64_t v215 = v240;
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    break;
                  default:
                    swift_retain();
                    swift_retain_n();
                    swift_retain();
                    uint64_t v215 = v213;
                    break;
                }
                switch(v214 >> 60)
                {
                  case 3uLL:
                    uint64_t v466 = v215;
                    uint64_t v244 = v214 & 0xFFFFFFFFFFFFFFFLL;
                    unint64_t v246 = *(void *)((v214 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    unint64_t v245 = *(void *)(v244 + 24);
                    switch(v246 >> 60)
                    {
                      case 3uLL:
                        unint64_t v272 = *(void *)((v246 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v273 = *(void *)((v246 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v274 = swift_allocObject();
                        unint64_t v548 = v272;
                        uint64_t v549 = v273;
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        sub_1C10E55EC(&v526);
                        sub_1C10E55EC(v525);
                        uint64_t v275 = v525[0];
                        *(void *)(v274 + 16) = v526;
                        *(void *)(v274 + 24) = v275;
                        swift_release();
                        swift_release();
                        unint64_t v247 = v274 | 0x3000000000000000;
                        break;
                      case 9uLL:
                        uint64_t v276 = *(void *)((v246 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v437 = *(void *)((v246 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v277 = *(void *)((v246 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                        uint64_t v451 = v277;
                        char v278 = *(unsigned char *)((v246 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                        uint64_t v279 = swift_allocObject();
                        *(void *)(v279 + 16) = v276;
                        *(void *)(v279 + 24) = v437;
                        *(void *)(v279 + 32) = v277;
                        *(unsigned char *)(v279 + 40) = v278;
                        unint64_t v247 = v279 | 0x7000000000000000;
                        swift_retain();
                        swift_retain();
                        sub_1BFF67F78(v276, v437, v451, v278);
                        break;
                      case 0xAuLL:
                        uint64_t v280 = *(void *)((v246 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v281 = *(void *)((v246 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v282 = swift_allocObject();
                        *(void *)(v282 + 16) = v280;
                        *(void *)(v282 + 24) = v281;
                        unint64_t v247 = v282 | 0x4000000000000000;
                        goto LABEL_142;
                      case 0xBuLL:
                        uint64_t v283 = *(void *)((v246 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v284 = *(void *)((v246 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v285 = swift_allocObject();
                        *(void *)(v285 + 16) = v283;
                        *(void *)(v285 + 24) = v284;
                        unint64_t v247 = v285 | 0x8000000000000000;
LABEL_142:
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        swift_retain();
                        break;
                      default:
                        swift_retain();
                        swift_retain_n();
                        unint64_t v247 = v246;
                        break;
                    }
                    switch(v245 >> 60)
                    {
                      case 3uLL:
                        uint64_t v286 = swift_allocObject();
                        uint64_t v443 = (void *)(v286 + 16);
                        uint64_t v452 = v286;
                        swift_retain();
                        swift_retain();
                        sub_1C10E5AF0(v443);
                        swift_release();
                        swift_release();
                        unint64_t v245 = v452 | 0x3000000000000000;
                        break;
                      case 9uLL:
                        uint64_t v287 = v245 & 0xFFFFFFFFFFFFFFFLL;
                        uint64_t v288 = *(void *)((v245 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v289 = *(void *)((v245 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v290 = *(void *)((v245 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                        char v453 = *(unsigned char *)(v287 + 40);
                        uint64_t v291 = swift_allocObject();
                        *(void *)(v291 + 16) = v288;
                        *(void *)(v291 + 24) = v289;
                        uint64_t v292 = v290;
                        *(void *)(v291 + 32) = v290;
                        *(unsigned char *)(v291 + 40) = v453;
                        unint64_t v245 = v291 | 0x7000000000000000;
                        sub_1BFF67F78(v288, v289, v292, v453);
                        break;
                      case 0xAuLL:
                        uint64_t v293 = *(void *)((v245 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v294 = *(void *)((v245 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v295 = swift_allocObject();
                        *(void *)(v295 + 16) = v293;
                        *(void *)(v295 + 24) = v294;
                        unint64_t v245 = v295 | 0x4000000000000000;
                        goto LABEL_149;
                      case 0xBuLL:
                        uint64_t v296 = *(void *)((v245 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                        uint64_t v297 = *(void *)((v245 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                        uint64_t v298 = swift_allocObject();
                        *(void *)(v298 + 16) = v296;
                        *(void *)(v298 + 24) = v297;
                        unint64_t v245 = v298 | 0x8000000000000000;
LABEL_149:
                        swift_retain();
                        swift_bridgeObjectRetain();
                        break;
                      default:
                        swift_retain();
                        break;
                    }
                    uint64_t v299 = swift_allocObject();
                    *(void *)(v299 + 16) = v247;
                    *(void *)(v299 + 24) = v245;
                    swift_release();
                    swift_release();
                    unint64_t v214 = v299 | 0x3000000000000000;
                    uint64_t v215 = v466;
                    break;
                  case 9uLL:
                    uint64_t v248 = *(void *)((v214 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v249 = *(void *)((v214 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v467 = v215;
                    uint64_t v250 = *(void *)((v214 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                    char v251 = *(unsigned char *)((v214 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                    uint64_t v252 = swift_allocObject();
                    *(void *)(v252 + 16) = v248;
                    *(void *)(v252 + 24) = v249;
                    *(void *)(v252 + 32) = v250;
                    *(unsigned char *)(v252 + 40) = v251;
                    unint64_t v214 = v252 | 0x7000000000000000;
                    uint64_t v253 = v250;
                    uint64_t v215 = v467;
                    sub_1BFF67F78(v248, v249, v253, v251);
                    break;
                  case 0xAuLL:
                    uint64_t v255 = *(void *)((v214 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v254 = *(void *)((v214 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v256 = swift_allocObject();
                    *(void *)(v256 + 16) = v255;
                    *(void *)(v256 + 24) = v254;
                    unint64_t v214 = v256 | 0x4000000000000000;
                    goto LABEL_131;
                  case 0xBuLL:
                    uint64_t v258 = *(void *)((v214 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v257 = *(void *)((v214 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                    uint64_t v259 = swift_allocObject();
                    *(void *)(v259 + 16) = v258;
                    *(void *)(v259 + 24) = v257;
                    unint64_t v214 = v259 | 0x8000000000000000;
LABEL_131:
                    swift_retain();
                    swift_bridgeObjectRetain();
                    break;
                  default:
                    swift_retain();
                    break;
                }
                uint64_t v216 = swift_allocObject();
                *(void *)(v216 + 16) = v215;
                *(void *)(v216 + 24) = v214;
                swift_release();
                swift_release();
                swift_release();
                uint64_t v210 = v216 | 0x3000000000000000;
                break;
              case 9uLL:
                uint64_t v217 = *(void *)((v210 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v218 = *(void *)((v210 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                uint64_t v219 = *(void *)((v210 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                char v220 = *(unsigned char *)((v210 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
                uint64_t v221 = swift_allocObject();
                *(void *)(v221 + 16) = v217;
                *(void *)(v221 + 24) = v218;
                *(void *)(v221 + 32) = v219;
                *(unsigned char *)(v221 + 40) = v220;
                uint64_t v210 = v221 | 0x7000000000000000;
                sub_1BFF67F78(v217, v218, v219, v220);
                break;
              case 0xAuLL:
                uint64_t v222 = *(void *)((v210 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v223 = *(void *)((v210 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                uint64_t v224 = swift_allocObject();
                *(void *)(v224 + 16) = v222;
                *(void *)(v224 + 24) = v223;
                uint64_t v210 = v224 | 0x4000000000000000;
                goto LABEL_119;
              case 0xBuLL:
                uint64_t v225 = *(void *)((v210 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v226 = *(void *)((v210 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                uint64_t v227 = swift_allocObject();
                *(void *)(v227 + 16) = v225;
                *(void *)(v227 + 24) = v226;
                uint64_t v210 = v227 | 0x8000000000000000;
LABEL_119:
                swift_retain();
                swift_bridgeObjectRetain();
                break;
              default:
                swift_retain();
                break;
            }
            sub_1C1146BE0();
            uint64_t v209 = *(void *)(*(void *)&v523[0] + 16);
            sub_1C1146E7C(v209);
            sub_1C1147150(v209, v210);
            nullsub_1();
            --v207;
          }
          while (v207);
          uint64_t v327 = *(void *)&v523[0];
          uint64_t v3 = v518;
          uint64_t v205 = v485;
          uint64_t v199 = v499;
        }
        else
        {
          sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
          uint64_t v327 = sub_1C01AFD68(0);
        }
        *(void *)&long long v526 = v327;
        *((void *)&v526 + 1) = v199;
        *(void *)&long long v527 = v201;
        *((void *)&v527 + 1) = v202;
        *(void *)&long long v528 = v203;
        *((void *)&v528 + 1) = v204;
        uint64_t v529 = v205;
        *(void *)&long long v530 = v516;
        sub_1C0884764((uint64_t)&v526);
        sub_1C00F6034((uint64_t)&v526, (uint64_t)v523);
        nullsub_1();
        sub_1C00F61EC((uint64_t)v523, (uint64_t)&v548);
        sub_1C0862D98((uint64_t)&v548);
        swift_bridgeObjectRetain();
        sub_1BFDB3920(v205);
        sub_1C00F5E3C((uint64_t)v551, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
        sub_1C00F5BA4((uint64_t)&v548, (uint64_t)v550);
      }
      uint64_t v5 = v519;
    }
    ++v4;
    sub_1C00F5BA4((uint64_t)v550, (uint64_t)v554);
    sub_1C1146BF8();
    uint64_t v7 = *(void *)(v553 + 16);
    sub_1C1146E94(v7);
    sub_1C1147168(v7, (uint64_t)v554);
    nullsub_1();
  }
  while (v4 != v3);
  return v553;
}

uint64_t FormatGroupNodeMaskStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C096F5C8(uint64_t a1)
{
  uint64_t v33 = a1;
  uint64_t v3 = type metadata accessor for FormatOption();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (void *)((char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v32);
  uint64_t v29 = (uint64_t)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v28 = (uint64_t)v26 - v8;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)v26 - v10;
  uint64_t v12 = sub_1BFC939F8(0.0, 0.0, 0.0, 0.0);
  uint64_t v31 = v12[2];
  if (v31)
  {
    v26[0] = v1;
    v26[1] = v12;
    uint64_t v13 = 0;
    uint64_t v27 = v5;
    char v30 = v11;
    while (1)
    {
      sub_1BFEF9524((uint64_t)v5);
      swift_retain();
      sub_1C0C49248(v5, (uint64_t)v11);
      if (v2)
      {
        swift_release();
        return swift_bridgeObjectRelease();
      }
      uint64_t v14 = swift_allocBox();
      uint64_t v16 = v15;
      sub_1C0971674((uint64_t)v11, v15, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      uint64_t v17 = *(void **)(v33 + 48);
      uint64_t v18 = v17[2];
      if (!v18 || v17[v18 + 3] >> 60 != 1) {
        goto LABEL_10;
      }
      uint64_t v19 = swift_projectBox();
      uint64_t v20 = v28;
      sub_1C0971674(v19, v28, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      uint64_t v21 = v29;
      sub_1C0971674(v16, v29, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      swift_retain();
      swift_retain();
      BOOL v22 = sub_1C0C4C6E0(v20, v21);
      sub_1C09716DC(v21, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      sub_1C09716DC(v20, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      swift_release();
      swift_release();
      if (!v22) {
        break;
      }
      swift_release();
      uint64_t v5 = v27;
LABEL_4:
      ++v13;
      char v11 = v30;
      sub_1C09716DC((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      swift_release();
      if (v31 == v13) {
        goto LABEL_17;
      }
    }
    uint64_t v17 = *(void **)(v33 + 48);
    uint64_t v5 = v27;
LABEL_10:
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_1C0EE23FC(0, v17[2] + 1, 1, v17);
    }
    unint64_t v24 = v17[2];
    unint64_t v23 = v17[3];
    if (v24 >= v23 >> 1) {
      uint64_t v17 = sub_1C0EE23FC((void *)(v23 > 1), v24 + 1, 1, v17);
    }
    v17[2] = v24 + 1;
    v17[v24 + 4] = v14 | 0x1000000000000000;
    swift_release();
    *(void *)(v33 + 48) = v17;
    goto LABEL_4;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return sub_1C05AD5AC(v33);
}

uint64_t FormatGroupNodeMaskStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeMaskStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatGroupNodeMaskStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatGroupNodeMaskStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeMaskStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatGroupNodeMaskStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatGroupNodeMaskStyle.path.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 96);
  uint64_t v8 = *(void *)(v1 + 104);
  uint64_t v9 = *(void *)(v1 + 112);
  unsigned __int8 v10 = *(unsigned char *)(v1 + 120);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return sub_1BFFE54A0(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t FormatGroupNodeMaskStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeMaskStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 144);
  uint64_t v4 = *(void *)(v1 + 152);
  uint64_t v5 = *(void *)(v1 + 160);
  uint64_t v6 = *(void *)(v1 + 168);
  uint64_t v7 = *(void *)(v1 + 176);
  uint64_t v8 = *(void *)(v1 + 184);
  uint64_t v9 = *(void *)(v1 + 192);
  uint64_t v10 = *(void *)(v1 + 200);
  uint64_t v11 = *(void *)(v1 + 208);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 216);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatGroupNodeMaskStyle.__allocating_init(identifier:class:selectors:path:borders:shadow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, long long *a8)
{
  uint64_t v13 = swift_allocObject();
  long long v20 = a6[1];
  long long v21 = *a6;
  long long v19 = a6[2];
  uint64_t v15 = *((void *)a6 + 6);
  uint64_t v14 = *((void *)a6 + 7);
  LOBYTE(a6) = *((unsigned char *)a6 + 64);
  long long v24 = a8[1];
  long long v25 = *a8;
  long long v22 = a8[3];
  long long v23 = a8[2];
  uint64_t v16 = *((void *)a8 + 8);
  uint64_t v17 = *((void *)a8 + 9);
  LOBYTE(a8) = *((unsigned char *)a8 + 80);
  swift_beginAccess();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(void *)(v13 + 32) = a3;
  *(void *)(v13 + 40) = a4;
  swift_beginAccess();
  *(void *)(v13 + 48) = a5;
  *(_OWORD *)(v13 + 56) = v21;
  *(_OWORD *)(v13 + 72) = v20;
  *(_OWORD *)(v13 + 88) = v19;
  *(void *)(v13 + 104) = v15;
  *(void *)(v13 + 112) = v14;
  *(unsigned char *)(v13 + 120) = (_BYTE)a6;
  *(void *)(v13 + 128) = a7;
  *(_OWORD *)(v13 + 136) = v25;
  *(_OWORD *)(v13 + 152) = v24;
  *(_OWORD *)(v13 + 168) = v23;
  *(_OWORD *)(v13 + 184) = v22;
  *(void *)(v13 + 200) = v16;
  *(void *)(v13 + 208) = v17;
  *(unsigned char *)(v13 + 216) = (_BYTE)a8;
  return v13;
}

uint64_t FormatGroupNodeMaskStyle.init(identifier:class:selectors:path:borders:shadow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, long long *a8)
{
  long long v20 = a6[1];
  long long v21 = *a6;
  long long v19 = a6[2];
  uint64_t v13 = *((void *)a6 + 6);
  uint64_t v14 = *((void *)a6 + 7);
  char v15 = *((unsigned char *)a6 + 64);
  long long v25 = a8[1];
  long long v26 = *a8;
  long long v23 = a8[3];
  long long v24 = a8[2];
  uint64_t v16 = *((void *)a8 + 9);
  uint64_t v22 = *((void *)a8 + 8);
  char v17 = *((unsigned char *)a8 + 80);
  swift_beginAccess();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a4;
  swift_beginAccess();
  *(void *)(v8 + 48) = a5;
  *(_OWORD *)(v8 + 56) = v21;
  *(_OWORD *)(v8 + 72) = v20;
  *(_OWORD *)(v8 + 88) = v19;
  *(void *)(v8 + 104) = v13;
  *(void *)(v8 + 112) = v14;
  *(unsigned char *)(v8 + 120) = v15;
  *(void *)(v8 + 128) = a7;
  *(_OWORD *)(v8 + 136) = v26;
  *(_OWORD *)(v8 + 152) = v25;
  *(_OWORD *)(v8 + 168) = v24;
  *(_OWORD *)(v8 + 184) = v23;
  *(void *)(v8 + 200) = v22;
  *(void *)(v8 + 208) = v16;
  *(unsigned char *)(v8 + 216) = v17;
  return v8;
}

uint64_t sub_1C096FE30()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v32 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v30 = *(void *)(v0 + 32);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v35 = *(void *)(v0 + 96);
  uint64_t v36 = *(void *)(v0 + 88);
  uint64_t v33 = *(void *)(v0 + 112);
  uint64_t v34 = *(void *)(v0 + 104);
  unsigned __int8 v7 = *(unsigned char *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v31 = v1;
  uint64_t v28 = *(void *)(v0 + 48);
  uint64_t v29 = v2;
  uint64_t v26 = v4;
  uint64_t v27 = v3;
  uint64_t v24 = v6;
  uint64_t v25 = v5;
  unsigned __int8 v23 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFFE54A0(v3, v4, v5, v6, v36, v35, v34, v33, v7);
  if (v8) {
    uint64_t v9 = sub_1C096BB70(v8);
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v11 = *(void *)(v0 + 136);
  uint64_t v10 = *(void *)(v0 + 144);
  uint64_t v12 = *(void *)(v0 + 152);
  uint64_t v13 = *(void *)(v0 + 160);
  uint64_t v14 = *(void *)(v0 + 168);
  uint64_t v15 = *(void *)(v0 + 176);
  uint64_t v16 = *(void *)(v0 + 184);
  int v17 = *(unsigned __int8 *)(v0 + 216);
  uint64_t v21 = *(void *)(v0 + 200);
  uint64_t v22 = *(void *)(v0 + 192);
  uint64_t v20 = *(void *)(v0 + 208);
  if (v17 != 254)
  {
    sub_1C10E55EC(v37);
    uint64_t v14 = v37[0];
    uint64_t v10 = v10;
  }
  uint64_t v18 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v18 + 16) = v32;
  *(void *)(v18 + 24) = v31;
  *(void *)(v18 + 32) = v30;
  *(void *)(v18 + 40) = v29;
  swift_beginAccess();
  *(void *)(v18 + 48) = v28;
  *(void *)(v18 + 56) = v27;
  *(void *)(v18 + 64) = v26;
  *(void *)(v18 + 72) = v25;
  *(void *)(v18 + 80) = v24;
  *(void *)(v18 + 88) = v36;
  *(void *)(v18 + 96) = v35;
  *(void *)(v18 + 104) = v34;
  *(void *)(v18 + 112) = v33;
  *(unsigned char *)(v18 + 120) = v23;
  *(void *)(v18 + 128) = v9;
  *(void *)(v18 + 136) = v11;
  *(void *)(v18 + 144) = v10;
  *(void *)(v18 + 152) = v12;
  *(void *)(v18 + 160) = v13;
  *(void *)(v18 + 168) = v14;
  *(void *)(v18 + 176) = v15;
  *(void *)(v18 + 184) = v16;
  *(void *)(v18 + 192) = v22;
  *(void *)(v18 + 200) = v21;
  *(void *)(v18 + 208) = v20;
  *(unsigned char *)(v18 + 216) = v17;
  return v18;
}

uint64_t FormatGroupNodeMaskStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFFE54B8(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(unsigned char *)(v0 + 120));
  swift_bridgeObjectRelease();
  sub_1BFEF8738(*(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(unsigned char *)(v0 + 216));
  return v0;
}

uint64_t sub_1C0970114(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed24FormatGroupNodeMaskStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatGroupNodeMaskStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeMaskStyle.Selector.path.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  unsigned __int8 v10 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return sub_1BFFE54A0(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t FormatGroupNodeMaskStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeMaskStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 128);
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v8 = *(void *)(v1 + 144);
  uint64_t v9 = *(void *)(v1 + 152);
  uint64_t v10 = *(void *)(v1 + 160);
  uint64_t v11 = *(void *)(v1 + 168);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 176);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1C09701F0(uint64_t a1)
{
  return sub_1C096F5C8(a1);
}

BOOL _s8NewsFeed24FormatGroupNodeMaskStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v74 = *(void *)(a1 + 72);
  int v9 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v69 = *(void *)(a1 + 88);
  uint64_t v54 = *(void *)(a1 + 96);
  uint64_t v55 = *(void *)(a1 + 104);
  uint64_t v56 = *(void *)(a1 + 112);
  uint64_t v57 = *(void *)(a1 + 120);
  uint64_t v58 = *(void *)(a1 + 128);
  uint64_t v59 = *(void *)(a1 + 136);
  uint64_t v61 = *(void *)(a1 + 152);
  uint64_t v63 = *(void *)(a1 + 144);
  uint64_t v52 = *(void *)(a1 + 168);
  uint64_t v53 = *(void *)(a1 + 160);
  int v65 = *(unsigned __int8 *)(a1 + 176);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v17 = *(void *)(a2 + 64);
  uint64_t v16 = *(void *)(a2 + 72);
  int v18 = *(unsigned __int8 *)(a2 + 80);
  uint64_t v67 = *(void *)(a2 + 88);
  uint64_t v43 = *(void *)(a2 + 96);
  uint64_t v44 = *(void *)(a2 + 104);
  uint64_t v45 = *(void *)(a2 + 112);
  uint64_t v46 = *(void *)(a2 + 120);
  uint64_t v47 = *(void *)(a2 + 128);
  uint64_t v48 = *(void *)(a2 + 136);
  uint64_t v49 = *(void *)(a2 + 144);
  uint64_t v50 = *(void *)(a2 + 152);
  uint64_t v42 = *(void *)(a2 + 160);
  uint64_t v41 = *(void *)(a2 + 168);
  int v51 = *(unsigned __int8 *)(a2 + 176);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    goto LABEL_4;
  }
  uint64_t v71 = *(void *)(a2 + 48);
  uint64_t v73 = *(void *)(a1 + 40);
  int v40 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v38 = *(void *)(a1 + 16);
  uint64_t v39 = *(void *)(a2 + 64);
  uint64_t v36 = *(void *)(a1 + 32);
  uint64_t v37 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a2 + 72);
  uint64_t v20 = *(void *)(a2 + 56);
  uint64_t v21 = *(void *)(a2 + 40);
  uint64_t v22 = *(void *)(a2 + 32);
  uint64_t v23 = *(void *)(a2 + 24);
  uint64_t v24 = *(void *)(a2 + 16);
  int v25 = *(unsigned __int8 *)(a2 + 80);
  char v26 = sub_1C1520A9C();
  int v18 = v25;
  uint64_t v11 = v24;
  uint64_t v10 = v23;
  uint64_t v13 = v22;
  uint64_t v12 = v21;
  uint64_t v14 = v71;
  uint64_t v6 = v73;
  uint64_t v15 = v20;
  uint64_t v16 = v19;
  uint64_t v4 = v36;
  uint64_t v3 = v37;
  uint64_t v2 = v38;
  uint64_t v17 = v39;
  int v9 = v40;
  char v27 = v26;
  BOOL result = 0;
  if (v27)
  {
LABEL_4:
    if (v9 == 255)
    {
      if (v18 == 255)
      {
LABEL_9:
        if (v69)
        {
          if (!v67) {
            return 0;
          }
          swift_bridgeObjectRetain();
          uint64_t v30 = swift_bridgeObjectRetain();
          BOOL v31 = sub_1C00DFB58(v30, v67);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v31) {
            return 0;
          }
        }
        else if (v67)
        {
          return 0;
        }
        char v32 = v65;
        if (v65 == 254)
        {
          unsigned __int8 v33 = v51;
          uint64_t v34 = v61;
          if (v51 == 254) {
            return 1;
          }
          goto LABEL_23;
        }
        uint64_t v86 = v54;
        uint64_t v87 = v55;
        uint64_t v88 = v56;
        uint64_t v89 = v57;
        uint64_t v90 = v58;
        uint64_t v91 = v59;
        uint64_t v34 = v61;
        uint64_t v92 = v63;
        uint64_t v93 = v61;
        uint64_t v94 = v53;
        uint64_t v95 = v52;
        LOBYTE(v96) = v65;
        if (v51 == 254)
        {
          swift_retain();
          char v32 = v65;
          unsigned __int8 v33 = -2;
LABEL_23:
          uint64_t v86 = v54;
          uint64_t v87 = v55;
          uint64_t v88 = v56;
          uint64_t v89 = v57;
          uint64_t v90 = v58;
          uint64_t v91 = v59;
          uint64_t v92 = v63;
          uint64_t v93 = v34;
          uint64_t v94 = v53;
          uint64_t v95 = v52;
          LOBYTE(v96) = v32;
          uint64_t v97 = v43;
          uint64_t v98 = v44;
          uint64_t v99 = v45;
          uint64_t v100 = v46;
          uint64_t v101 = v47;
          uint64_t v102 = v48;
          uint64_t v103 = v49;
          uint64_t v104 = v50;
          uint64_t v105 = v42;
          uint64_t v106 = v41;
          unsigned __int8 v107 = v33;
          sub_1BFEF8708(v43, v44, v45, v46, v47, v48, v49, v50, v42, v41, v33);
          sub_1C02D2004((uint64_t)&v86);
          return 0;
        }
        uint64_t v75 = v43;
        LODWORD(v76) = v44;
        uint64_t v77 = v45;
        uint64_t v78 = v46;
        uint64_t v79 = v47;
        uint64_t v80 = v48;
        uint64_t v81 = v49;
        uint64_t v82 = v50;
        uint64_t v83 = v42;
        uint64_t v84 = v41;
        char v85 = v51;
        sub_1BFEF8708(v54, v55, v56, v57, v58, v59, v63, v61, v53, v52, v65);
        swift_retain();
        char v35 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v86, (uint64_t)&v75);
        swift_release();
        sub_1BFEF8738(v54, v55, v56, v57, v58, v59, v63, v61, v53, v52, v65);
        return (v35 & 1) != 0;
      }
    }
    else
    {
      uint64_t v86 = v2;
      uint64_t v87 = v3;
      uint64_t v88 = v4;
      uint64_t v89 = v6;
      uint64_t v90 = v5;
      uint64_t v91 = v8;
      uint64_t v92 = v7;
      uint64_t v93 = v74;
      LOBYTE(v94) = v9;
      if (v18 != 255)
      {
        uint64_t v75 = v11;
        uint64_t v76 = v10;
        uint64_t v77 = v13;
        uint64_t v78 = v12;
        uint64_t v79 = v14;
        uint64_t v80 = v15;
        uint64_t v81 = v17;
        uint64_t v82 = v16;
        LOBYTE(v83) = v18;
        sub_1BFFE54A0(v2, v3, v4, v6, v5, v8, v7, v74, v9);
        sub_1BFFE54D0(v2, v3, v4, v6, v5, v8, v7, v74, v9);
        char v29 = _s8NewsFeed23FormatGroupNodeMaskPathO2eeoiySbAC_ACtFZ_0((uint64_t)&v86, (uint64_t)&v75);
        sub_1BFD1EFFC(v86, v87, v88, v89, v90, v91, v92, v93, v94);
        sub_1BFFE54B8(v2, v3, v4, v6, v5, v8, v7, v74, v9);
        if ((v29 & 1) == 0) {
          return 0;
        }
        goto LABEL_9;
      }
      uint64_t v72 = v14;
      uint64_t v68 = v15;
      uint64_t v70 = v16;
      uint64_t v64 = v13;
      uint64_t v66 = v12;
      uint64_t v60 = v11;
      uint64_t v62 = v10;
      sub_1BFFE54D0(v2, v3, v4, v6, v5, v8, v7, v74, v9);
      sub_1BFFE54D0(v2, v3, v4, v6, v5, v8, v7, v74, v9);
      sub_1BFD1EFFC(v2, v3, v4, v6, v5, v8, v7, v74, v9);
      LOBYTE(v18) = -1;
      uint64_t v11 = v60;
      uint64_t v10 = v62;
      uint64_t v13 = v64;
      uint64_t v12 = v66;
      uint64_t v16 = v70;
      uint64_t v14 = v72;
      uint64_t v15 = v68;
    }
    uint64_t v86 = v2;
    uint64_t v87 = v3;
    uint64_t v88 = v4;
    uint64_t v89 = v6;
    uint64_t v90 = v5;
    uint64_t v91 = v8;
    uint64_t v92 = v7;
    uint64_t v93 = v74;
    LOBYTE(v94) = v9;
    uint64_t v95 = v11;
    uint64_t v96 = v10;
    uint64_t v97 = v13;
    uint64_t v98 = v12;
    uint64_t v99 = v14;
    uint64_t v100 = v15;
    uint64_t v101 = v17;
    uint64_t v102 = v16;
    LOBYTE(v103) = v18;
    sub_1BFFE54A0(v11, v10, v13, v12, v14, v15, v17, v16, v18);
    sub_1C08E9670((uint64_t)&v86);
    return 0;
  }
  return result;
}

uint64_t sub_1C09707B8(uint64_t a1)
{
  uint64_t result = sub_1C09708F0(&qword_1EA1A1510);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09707FC(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C09708F0(&qword_1EB88B450);
  uint64_t result = sub_1C09708F0(&qword_1EB867640);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C0970864(void *a1)
{
  a1[1] = sub_1C09708F0(&qword_1EB88B450);
  a1[2] = sub_1C09708F0(&qword_1EB867640);
  uint64_t result = sub_1C09708F0(&qword_1EA1A1518);
  a1[3] = result;
  return result;
}

uint64_t sub_1C09708F0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatGroupNodeMaskStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0970930(uint64_t a1)
{
  unint64_t result = sub_1C0970958();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0970958()
{
  unint64_t result = qword_1EA1A1520;
  if (!qword_1EA1A1520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1520);
  }
  return result;
}

unint64_t sub_1C09709AC(void *a1)
{
  a1[1] = sub_1C0070BA8();
  a1[2] = sub_1C0070BFC();
  unint64_t result = sub_1C09709E4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C09709E4()
{
  unint64_t result = qword_1EA1A1528;
  if (!qword_1EA1A1528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1528);
  }
  return result;
}

uint64_t sub_1C0970A38@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0970A88@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatGroupNodeMaskStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatGroupNodeMaskStyle);
}

uint64_t dispatch thunk of FormatGroupNodeMaskStyle.__allocating_init(identifier:class:selectors:path:borders:shadow:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t assignWithCopy for FormatGroupNodeMaskStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (_OWORD *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v6 == 255)
    {
      *uint64_t v4 = *v5;
      long long v33 = *(_OWORD *)(a2 + 32);
      long long v34 = *(_OWORD *)(a2 + 48);
      long long v35 = *(_OWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(_OWORD *)(a1 + 48) = v34;
      *(_OWORD *)(a1 + 64) = v35;
      *(_OWORD *)(a1 + 32) = v33;
    }
    else
    {
      uint64_t v23 = *(void *)(a2 + 16);
      uint64_t v53 = *(void *)(a2 + 24);
      uint64_t v24 = *(void *)(a2 + 32);
      uint64_t v25 = *(void *)(a2 + 40);
      uint64_t v26 = *(void *)(a2 + 48);
      uint64_t v27 = *(void *)(a2 + 56);
      uint64_t v28 = *(void *)(a2 + 64);
      uint64_t v29 = *(void *)(a2 + 72);
      sub_1BFFE54D0(v23, v53, v24, v25, v26, v27, v28, v29, v6);
      *(void *)(a1 + 16) = v23;
      *(void *)(a1 + 24) = v53;
      *(void *)(a1 + 32) = v24;
      *(void *)(a1 + 40) = v25;
      *(void *)(a1 + 48) = v26;
      *(void *)(a1 + 56) = v27;
      *(void *)(a1 + 64) = v28;
      *(void *)(a1 + 72) = v29;
      *(unsigned char *)(a1 + 80) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_1C0970DD8(a1 + 16);
    *uint64_t v4 = *v5;
    long long v31 = *(_OWORD *)(a2 + 48);
    long long v30 = *(_OWORD *)(a2 + 64);
    long long v32 = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v31;
    *(_OWORD *)(a1 + 64) = v30;
    *(_OWORD *)(a1 + 32) = v32;
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v52 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 40);
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 72);
    sub_1BFFE54D0(v7, v52, v8, v9, v10, v11, v12, v13, v6);
    uint64_t v14 = *(void *)(a1 + 16);
    uint64_t v15 = *(void *)(a1 + 24);
    uint64_t v16 = *(void *)(a1 + 32);
    uint64_t v17 = *(void *)(a1 + 40);
    uint64_t v18 = *(void *)(a1 + 48);
    uint64_t v19 = *(void *)(a1 + 56);
    uint64_t v20 = *(void *)(a1 + 64);
    uint64_t v21 = *(void *)(a1 + 72);
    char v22 = *(unsigned char *)(a1 + 80);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v52;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v13;
    *(unsigned char *)(a1 + 80) = v6;
    sub_1BFD1EFFC(v14, v15, v16, v17, v18, v19, v20, v21, v22);
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = (_OWORD *)(a1 + 96);
  uint64_t v37 = (_OWORD *)(a2 + 96);
  int v38 = *(unsigned __int8 *)(a2 + 176);
  if (*(unsigned __int8 *)(a1 + 176) == 254)
  {
    if (v38 == 254)
    {
      long long v39 = *(_OWORD *)(a2 + 112);
      *uint64_t v36 = *v37;
      *(_OWORD *)(a1 + 112) = v39;
      long long v40 = *(_OWORD *)(a2 + 128);
      long long v41 = *(_OWORD *)(a2 + 144);
      long long v42 = *(_OWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(_OWORD *)(a1 + 144) = v41;
      *(_OWORD *)(a1 + 160) = v42;
      *(_OWORD *)(a1 + 128) = v40;
    }
    else
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      long long v47 = *(_OWORD *)(a2 + 136);
      long long v48 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
      *(_OWORD *)(a1 + 152) = v48;
      *(_OWORD *)(a1 + 136) = v47;
      swift_retain();
    }
  }
  else if (v38 == 254)
  {
    sub_1C02D0FD8(a1 + 96);
    long long v43 = *(_OWORD *)(a2 + 112);
    *uint64_t v36 = *v37;
    *(_OWORD *)(a1 + 112) = v43;
    long long v45 = *(_OWORD *)(a2 + 144);
    long long v44 = *(_OWORD *)(a2 + 160);
    long long v46 = *(_OWORD *)(a2 + 128);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(_OWORD *)(a1 + 144) = v45;
    *(_OWORD *)(a1 + 160) = v44;
    *(_OWORD *)(a1 + 128) = v46;
  }
  else
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_retain();
    swift_release();
    long long v49 = *(_OWORD *)(a2 + 136);
    long long v50 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
    *(_OWORD *)(a1 + 152) = v50;
    *(_OWORD *)(a1 + 136) = v49;
  }
  return a1;
}

uint64_t sub_1C0970DD8(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatGroupNodeMaskStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  int v5 = *(unsigned __int8 *)(a1 + 80);
  if (v5 != 255)
  {
    int v6 = *(unsigned __int8 *)(a2 + 80);
    if (v6 != 255)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      uint64_t v11 = *(void *)(a1 + 48);
      uint64_t v12 = *(void *)(a1 + 56);
      uint64_t v13 = *(void *)(a1 + 64);
      uint64_t v14 = *(void *)(a1 + 72);
      long long v15 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v15;
      long long v16 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v16;
      *(unsigned char *)(a1 + 80) = v6;
      sub_1BFD1EFFC(v7, v8, v9, v10, v11, v12, v13, v14, v5);
      goto LABEL_6;
    }
    sub_1C0970DD8(a1 + 16);
  }
  long long v17 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v17;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v18 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v18;
LABEL_6:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 176) != 254)
  {
    if (*(unsigned __int8 *)(a2 + 176) != 254)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_release();
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
      return a1;
    }
    sub_1C02D0FD8(a1 + 96);
  }
  long long v19 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v19;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  long long v20 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v20;
  return a1;
}

ValueMetadata *type metadata accessor for FormatGroupNodeMaskStyle.Selector()
{
  return &type metadata for FormatGroupNodeMaskStyle.Selector;
}

void *sub_1C0970F94(double *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v3);
  sub_1C0181BEC(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  uint64_t v7 = (void *)(v6 + v5);
  if (a2)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    unint64_t v9 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1C096FE30();
    long long v49 = 0u;
    long long v50 = 0u;
    uint64_t v51 = 0;
    long long v52 = xmmword_1C157E530;
    uint64_t v10 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)&v48, v10 + 16);
    uint64_t v11 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v11 = sub_1C139486C;
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v13 = (uint64_t (**)())((char *)v7 + *(int *)(v12 + 24));
  *uint64_t v13 = v11;
  v13[1] = (uint64_t (*)())v10;
  uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *uint64_t v7 = v8;
  v7[1] = v9;
  v7[2] = 0;
  v7[3] = 0;
  long long v15 = (char *)v7 + *(int *)(v12 + 28);
  *(void *)long long v15 = 0;
  *((void *)v15 + 1) = 0;
  unsigned __int8 v16 = -1;
  v15[16] = -1;
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 0, 1, v12);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v6, v56);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v17 = swift_allocObject();
  *(void *)(inited + 32) = v17;
  *(void *)(v17 + 48) = v57;
  long long v18 = v56[1];
  *(_OWORD *)(v17 + 16) = v56[0];
  *(_OWORD *)(v17 + 32) = v18;
  if (a2)
  {
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v20 = *(void *)(a2 + 64);
    uint64_t v21 = *(void *)(a2 + 72);
    uint64_t v22 = *(void *)(a2 + 80);
    uint64_t v23 = *(void *)(a2 + 88);
    uint64_t v24 = *(void *)(a2 + 96);
    uint64_t v26 = *(void *)(a2 + 104);
    uint64_t v25 = *(void *)(a2 + 112);
    unsigned __int8 v16 = *(unsigned char *)(a2 + 120);
    sub_1BFFE54A0(v19, v20, v21, v22, v23, v24, v26, v25, v16);
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    uint64_t v25 = 0;
  }
  uint64_t v48 = v19;
  *(void *)&long long v49 = v20;
  *((void *)&v49 + 1) = v21;
  *(void *)&long long v50 = v22;
  *((void *)&v50 + 1) = v23;
  uint64_t v51 = v24;
  *(void *)&long long v52 = v26;
  *((void *)&v52 + 1) = v25;
  LOBYTE(v53) = v16;
  uint64_t v27 = sub_1C04647F0(a1, (uint64_t)&v48);
  unsigned __int8 v28 = v16;
  uint64_t v29 = v27;
  sub_1BFFE54B8(v19, v20, v21, v22, v23, v24, v26, v25, v28);
  *(void *)(inited + 96) = &type metadata for FormatInspection;
  *(void *)(inited + 104) = &off_1F1C29D30;
  *(void *)(inited + 72) = v29;
  if (a2)
  {
    unsigned __int8 v43 = *(unsigned char *)(a2 + 216);
    uint64_t v44 = *(void *)(a2 + 208);
    uint64_t v46 = *(void *)(a2 + 200);
    uint64_t v30 = *(void *)(a2 + 136);
    uint64_t v31 = *(void *)(a2 + 144);
    uint64_t v32 = *(void *)(a2 + 152);
    uint64_t v33 = *(void *)(a2 + 160);
    uint64_t v34 = *(void *)(a2 + 168);
    uint64_t v35 = *(void *)(a2 + 176);
    uint64_t v36 = *(void *)(a2 + 184);
    uint64_t v37 = *(void *)(a2 + 192);
    sub_1BFEF8708(v30, v31, v32, v33, v34, v35, v36, v37, v46, v44, v43);
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v44 = 0;
    uint64_t v46 = 0;
    unsigned __int8 v43 = -2;
  }
  uint64_t v48 = v30;
  *(void *)&long long v49 = v31;
  *((void *)&v49 + 1) = v32;
  *(void *)&long long v50 = v33;
  *((void *)&v50 + 1) = v34;
  uint64_t v51 = v35;
  *(void *)&long long v52 = v36;
  *((void *)&v52 + 1) = v37;
  uint64_t v53 = v46;
  uint64_t v54 = v44;
  unsigned __int8 v55 = v43;
  int v38 = sub_1C0AD49A4((uint64_t)&v48);
  uint64_t v39 = v30;
  long long v40 = v38;
  sub_1BFEF8738(v39, v31, v32, v33, v34, v35, v36, v37, v46, v44, v43);
  *(void *)(inited + 136) = &type metadata for FormatInspection;
  *(void *)(inited + 144) = &off_1F1C29D30;
  *(void *)(inited + 112) = v40;
  long long v41 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v41;
}

uint64_t sub_1C09714D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C097151C()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1C0971560()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_24Tm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C09715F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0971638()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0971674(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C09716DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceHeader()
{
  return &type metadata for SportsTaxonomyGraphResourceHeader;
}

unint64_t sub_1C0971754()
{
  unint64_t result = qword_1EA1A1530;
  if (!qword_1EA1A1530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1530);
  }
  return result;
}

uint64_t sub_1C09717A8(uint64_t a1)
{
  unint64_t v2 = sub_1C0971B84();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C09717E4(uint64_t a1)
{
  unint64_t v2 = sub_1C0971B84();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0971820()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0971878()
{
  return sub_1C151E77C();
}

uint64_t sub_1C0971894()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09718E8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C097193C(void *a1@<X8>)
{
  *a1 = 0x726F705365726F6DLL;
  a1[1] = 0xEA00000000007374;
}

uint64_t sub_1C097195C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C09719BC()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0971A0C(void *a1)
{
  return sub_1C0971C2C(a1);
}

uint64_t sub_1C0971A24(void *a1)
{
  return sub_1C0971A3C(a1);
}

uint64_t sub_1C0971A3C(void *a1)
{
  sub_1C0971D8C(0, &qword_1EA1A1538, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0971B84();
  sub_1C1520F0C();
  sub_1C0971BD8();
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C0971B84()
{
  unint64_t result = qword_1EB86F408;
  if (!qword_1EB86F408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F408);
  }
  return result;
}

unint64_t sub_1C0971BD8()
{
  unint64_t result = qword_1EA1A1540;
  if (!qword_1EA1A1540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1540);
  }
  return result;
}

uint64_t sub_1C0971C2C(void *a1)
{
  sub_1C0971D8C(0, &qword_1EB86F468, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0971B84();
  sub_1C1520EBC();
  if (!v1)
  {
    sub_1C0971DF0();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C0971D8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0971B84();
    unint64_t v7 = a3(a1, &type metadata for SportsTaxonomyGraphResourceHeader.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0971DF0()
{
  unint64_t result = qword_1EB86F428;
  if (!qword_1EB86F428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F428);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceHeader.CodingType()
{
  return &type metadata for SportsTaxonomyGraphResourceHeader.CodingType;
}

unsigned char *_s8NewsFeed33SportsTaxonomyGraphResourceHeaderOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0971EF0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceHeader.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceHeader.CodingKeys;
}

unint64_t sub_1C0971F2C()
{
  unint64_t result = qword_1EA1A1548;
  if (!qword_1EA1A1548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1548);
  }
  return result;
}

unint64_t sub_1C0971F84()
{
  unint64_t result = qword_1EA1A1550;
  if (!qword_1EA1A1550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1550);
  }
  return result;
}

unint64_t sub_1C0971FDC()
{
  unint64_t result = qword_1EB86F418;
  if (!qword_1EB86F418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F418);
  }
  return result;
}

unint64_t sub_1C0972034()
{
  unint64_t result = qword_1EB86F410;
  if (!qword_1EB86F410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F410);
  }
  return result;
}

unint64_t sub_1C0972088()
{
  unint64_t result = qword_1EB86F420;
  if (!qword_1EB86F420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F420);
  }
  return result;
}

uint64_t AudioTrackFontBook.titleAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

id AudioTrackFontBook.publisherFont.getter()
{
  return *(id *)(v0 + 8);
}

id AudioTrackFontBook.trackDurationFont.getter()
{
  return *(id *)(v0 + 16);
}

id AudioTrackFontBook.readButtonFont.getter()
{
  return *(id *)(v0 + 24);
}

id AudioTrackFontBook.accessoryFont.getter()
{
  return *(id *)(v0 + 32);
}

void __swiftcall AudioTrackFontBook.init(titleAttributes:publisherFont:trackDurationFont:readButtonFont:accessoryFont:)(NewsFeed::AudioTrackFontBook *__return_ptr retstr, Swift::OpaquePointer titleAttributes, UIFont publisherFont, UIFont trackDurationFont, UIFont readButtonFont, UIFont accessoryFont)
{
  retstr->titleAttributes = titleAttributes;
  retstr->publisherFont = publisherFont;
  retstr->trackDurationFont = trackDurationFont;
  retstr->readButtonFont = readButtonFont;
  retstr->accessoryFont = accessoryFont;
}

void destroy for AudioTrackFontBook(uint64_t a1)
{
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for AudioTrackFontBook(void *a1, void *a2)
{
  int v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unsigned int v4 = (void *)a2[2];
  uint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  unint64_t v6 = (void *)a2[4];
  a1[4] = v6;
  swift_bridgeObjectRetain();
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

void *assignWithCopy for AudioTrackFontBook(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  id v7 = (void *)a2[2];
  id v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  id v10 = (void *)a2[3];
  uint64_t v11 = (void *)a1[3];
  a1[3] = v10;
  id v12 = v10;

  uint64_t v13 = (void *)a2[4];
  uint64_t v14 = (void *)a1[4];
  a1[4] = v13;
  id v15 = v13;

  return a1;
}

uint64_t assignWithTake for AudioTrackFontBook(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for AudioTrackFontBook()
{
  return &type metadata for AudioTrackFontBook;
}

double SharedItemManager.replyContextMenuItem(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  type metadata accessor for SharedItem();
  id v6 = (void *)sub_1C1515E9C();
  id v7 = objc_msgSend(v6, sel_fc_NewsArticleID);

  if (v7)
  {
    uint64_t v8 = sub_1C151E62C();
    uint64_t v10 = v9;

    uint64_t v11 = (void *)sub_1C09747D4(v3, v8, v10, a1);
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(ObjectType, v13);
    if (v15)
    {
      uint64_t v16 = v15;
      *(void *)(a2 + 24) = sub_1BFC39268(0, (unint64_t *)&qword_1EA196BB0);
      *(void *)(a2 + 32) = sub_1C0976EAC();

      *(void *)a2 = v16;
      return result;
    }
  }
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

double SharedItemManager.hideContextMenuItem(for:)@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for SharedItem();
  uint64_t v2 = (void *)sub_1C1515E9C();
  id v3 = objc_msgSend(v2, sel_fc_NewsArticleID);

  if (v3)
  {
    sub_1C151E62C();

    MEMORY[0x1F4188790](v4);
    sub_1C1517ECC();
    sub_1C0976F34();
    swift_retain();
    sub_1C1518D3C();
    swift_bridgeObjectRelease();
    swift_release();
    if (v14)
    {
      swift_getObjectType();
      uint64_t v5 = swift_conformsToProtocol2();
      if (v5) {
        uint64_t v6 = v5;
      }
      else {
        uint64_t v6 = 0;
      }
      if (v5) {
        id v7 = v14;
      }
      else {
        id v7 = 0;
      }
      if (v7)
      {
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 40);
        id v10 = v14;
        uint64_t v11 = v9(ObjectType, v6);
        if (v11)
        {
          uint64_t v12 = v11;
          *(void *)(a1 + 24) = sub_1BFC39268(0, (unint64_t *)&qword_1EA196BB0);
          *(void *)(a1 + 32) = sub_1C0976EAC();

          *(void *)a1 = v12;
          return result;
        }
      }
      else
      {
      }
    }
  }
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t SharedItem.articleID.getter()
{
  type metadata accessor for SharedItem();
  uint64_t v0 = (void *)sub_1C1515E9C();
  id v1 = objc_msgSend(v0, sel_fc_NewsArticleID);

  if (!v1) {
    return 0;
  }
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

id static SharedItemManager.shared.getter()
{
  if (qword_1EB87C520 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB87E9C8;
  return v0;
}

uint64_t SharedItemManager.modificationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_modificationDate;
  swift_beginAccess();
  uint64_t v4 = sub_1C151631C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SharedItemManager.modificationDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_modificationDate;
  swift_beginAccess();
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*SharedItemManager.modificationDate.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C097283C(void *a1)
{
  sub_1C0976FA0(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v14 - v3;
  uint64_t v5 = sub_1C151EE9C();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  id v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  id v9 = a1;
  if (v8 == 1)
  {
    sub_1BFDA7634((uint64_t)v4, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  }
  else
  {
    sub_1C151EE8C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_1C151EDBC();
      uint64_t v12 = v11;
      swift_unknownObjectRelease();
      if (v12 | v10)
      {
        v14[0] = 0;
        v14[1] = 0;
        v14[2] = v10;
        v14[3] = v12;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C0972AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x1F4188298](sub_1C0972AC0, 0, 0);
}

uint64_t sub_1C0972AC0()
{
  uint64_t v1 = sub_1C0972D28();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  sub_1C0976FA0(0, &qword_1EB880C98, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, MEMORY[0x1E4FBB320]);
  uint64_t v4 = v3;
  uint64_t v5 = sub_1BFCB6824(0, (unint64_t *)&qword_1EB87A930);
  *uint64_t v2 = v0;
  v2[1] = sub_1C0972BE0;
  uint64_t v6 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187D90](v0 + 16, v1, v4, v5, v6);
}

uint64_t sub_1C0972BE0()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    uint64_t v2 = sub_1C0972D10;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1C02431F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0972D10()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0972D28()
{
  uint64_t v1 = v0;
  sub_1C0976FA0(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v13 - v3;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager____lazy_storage___initializingTask;
  if (*(void *)&v0[OBJC_IVAR____TtC8NewsFeed17SharedItemManager____lazy_storage___initializingTask])
  {
    uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed17SharedItemManager____lazy_storage___initializingTask];
  }
  else
  {
    uint64_t v7 = sub_1C151EE9C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    sub_1C151EE6C();
    uint64_t v8 = v0;
    uint64_t v9 = sub_1C151EE5C();
    uint64_t v10 = (void *)swift_allocObject();
    uint64_t v11 = MEMORY[0x1E4FBCFD8];
    void v10[2] = v9;
    v10[3] = v11;
    v10[4] = v8;
    uint64_t v6 = sub_1C0972EA4((uint64_t)v4, (uint64_t)&unk_1EA1A15E8, (uint64_t)v10);
    *(void *)&v1[v5] = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

uint64_t sub_1C0972EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C151EE9C();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1C151EE8C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1BFDA7634(a1, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C151EDBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_1C0976FA0(0, &qword_1EB880C98, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, MEMORY[0x1E4FBB320]);
  return swift_task_create();
}

uint64_t sub_1C097306C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a1;
  unsigned char v4[24] = a4;
  v4[25] = swift_getObjectType();
  v4[26] = sub_1C151EE6C();
  v4[27] = sub_1C151EE5C();
  return MEMORY[0x1F4188298](sub_1C09730F4, 0, 0);
}

uint64_t sub_1C09730F4()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
  v0[28] = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
  uint64_t v3 = v1 + v2;
  swift_beginAccess();
  sub_1BFC66384(v3, (uint64_t)(v0 + 7));
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v4);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5 + 40) + **(int **)(v5 + 40));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[29] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C097322C;
  return v8(v4, v5);
}

uint64_t sub_1C097322C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1C09735FC;
  }
  else {
    uint64_t v4 = sub_1C0973340;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C0973340()
{
  uint64_t v1 = v0[30];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  if (sub_1BFC64AA4(v1))
  {
    uint64_t v2 = v0[24];
    v0[22] = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
    *(void *)(swift_task_alloc() + 16) = v2;
    sub_1C1517ECC();
    sub_1C0976FA0(0, &qword_1EB86BEB0, (uint64_t (*)(uint64_t))type metadata accessor for WeakSharedItemManagerObserver, MEMORY[0x1E4FBB320]);
    swift_retain();
    sub_1C1518D3C();
    swift_task_dealloc();
    swift_release();
    unint64_t v3 = v0[21];
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C15204BC();
      uint64_t v4 = v5;
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v5 = swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return MEMORY[0x1F4188298](v5, v6, v7);
        }
        uint64_t v8 = 0;
        unint64_t v26 = v3 & 0xC000000000000001;
        uint64_t v25 = v4;
        do
        {
          if (v26)
          {
            uint64_t v11 = MEMORY[0x1C18C7CB0](v8, v3);
          }
          else
          {
            uint64_t v11 = *(void *)(v3 + 8 * v8 + 32);
            swift_retain();
          }
          uint64_t v12 = v0[24];
          v0[5] = v0[25];
          v0[6] = &protocol witness table for SharedItemManager;
          v0[2] = v12;
          uint64_t v13 = MEMORY[0x1C18C9C60](v11 + 16);
          uint64_t v14 = (void *)v0[24];
          if (v13)
          {
            unint64_t v15 = v3;
            uint64_t v16 = *(void *)(v11 + 24);
            uint64_t ObjectType = swift_getObjectType();
            long long v18 = *(void (**)(void *, uint64_t, uint64_t))(v16 + 8);
            id v19 = v14;
            uint64_t v10 = (uint64_t)(v0 + 2);
            uint64_t v20 = v16;
            unint64_t v3 = v15;
            uint64_t v4 = v25;
            v18(v0 + 2, ObjectType, v20);
            swift_unknownObjectRelease();
            id v9 = (id)v0[24];
          }
          else
          {
            id v9 = v14;
            uint64_t v10 = (uint64_t)(v0 + 2);
          }
          ++v8;
          __swift_destroy_boxed_opaque_existential_1(v10);
          swift_release();
        }
        while (v4 != v8);
      }
    }
    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = sub_1C151EDBC();
  uint64_t v23 = v22;
  uint64_t v5 = (uint64_t)sub_1C0973768;
  uint64_t v6 = v21;
  uint64_t v7 = v23;
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C09735FC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v2 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C0973680, v2, v1);
}

uint64_t sub_1C0973680()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[24];
  swift_release();
  uint64_t v3 = v2 + v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v6 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = swift_unknownObjectRetain();
  v6(v7, &protocol witness table for SharedItemManager, v4, v5);
  swift_endAccess();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1C0973768()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[28];
  uint64_t v4 = (void *)v0[23];
  uint64_t v3 = v0[24];
  swift_release();
  uint64_t v5 = v3 + v2;
  *uint64_t v4 = v1;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v8 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 16);
  uint64_t v9 = swift_unknownObjectRetain();
  v8(v9, &protocol witness table for SharedItemManager, v6, v7);
  swift_endAccess();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

id SharedItemManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharedItemManager.init()()
{
}

id SharedItemManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SharedItemManager.items.getter()
{
  sub_1C1517ECC();
  sub_1C0976FA0(0, &qword_1EB880C98, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, MEMORY[0x1E4FBB320]);
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  return v1;
}

uint64_t SharedItemManager.itemArticleIDs.getter()
{
  sub_1C1517ECC();
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  return v1;
}

uint64_t SharedItemManager.item(for:)()
{
  return swift_release();
}

uint64_t SharedItemManager.loadItemsIfNeeded()()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x1F4188298](sub_1C0973C7C, 0, 0);
}

uint64_t sub_1C0973C7C()
{
  uint64_t v1 = sub_1C0972D28();
  v0[6] = v1;
  objc_super v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  sub_1C0976FA0(0, &qword_1EB880C98, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, MEMORY[0x1E4FBB320]);
  uint64_t v4 = v3;
  v0[8] = v3;
  uint64_t v5 = sub_1BFCB6824(0, (unint64_t *)&qword_1EB87A930);
  *objc_super v2 = v0;
  v2[1] = sub_1C0973DA0;
  uint64_t v6 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187D90](v0 + 2, v1, v4, v5, v6);
}

uint64_t sub_1C0973DA0()
{
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
    uint64_t v1 = sub_1C0973FE0;
  }
  else
  {
    swift_release();
    uint64_t v1 = sub_1C0973EE8;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1C0973EE8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[5];
  v0[4] = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
  *(void *)(swift_task_alloc() + 16) = v1;
  sub_1C1517ECC();
  swift_retain();
  sub_1C1518D3C();
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = v0[3];
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_1C0973FE0()
{
  uint64_t v1 = v0[5];
  v0[4] = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
  *(void *)(swift_task_alloc() + 16) = v1;
  sub_1C1517ECC();
  swift_retain();
  sub_1C1518D3C();
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = v0[3];
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

void *SharedItemManager.createAttributionView(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
  swift_beginAccess();
  sub_1BFC66384(v4, (uint64_t)v10);
  uint64_t v5 = v11;
  uint64_t v6 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v5, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  uint64_t v8 = *MEMORY[0x1E4FB27D0];
  objc_msgSend(v7, sel_setMinimumContentSizeCategory_, *MEMORY[0x1E4FB27D0]);
  objc_msgSend(v7, sel_setMaximumContentSizeCategory_, v8);
  v10[0] = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
  sub_1C1517ECC();
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  return v7;
}

void sub_1C0974224(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SharedItem();
  uint64_t v7 = (void *)sub_1C1515E9C();
  id v8 = objc_msgSend(v7, sel_fc_NewsArticleID);

  if (!v8) {
    return;
  }
  uint64_t v9 = sub_1C151E62C();
  uint64_t v11 = v10;

  uint64_t v12 = (uint64_t *)(a4 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_viewContextsByArticleID);
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v14 = *(void *)(*v12 + 16);
  id v15 = a2;
  if (!v14) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1BFEF2D8C(v9, v11);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    long long v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_7;
  }
  long long v18 = *(void **)(*(void *)(v13 + 56) + 8 * v16);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  id v19 = v15;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v18 = sub_1C0EE63E0(0, v18[2] + 1, 1, v18);
  }
  unint64_t v21 = v18[2];
  unint64_t v20 = v18[3];
  if (v21 >= v20 >> 1) {
    long long v18 = sub_1C0EE63E0((void *)(v20 > 1), v21 + 1, 1, v18);
  }
  v18[2] = v21 + 1;
  uint64_t v22 = &v18[4 * v21];
  v22[4] = v19;
  v22[5] = a3;
  v22[6] = 0;
  v22[7] = 0;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v12;
  *uint64_t v12 = 0x8000000000000000;
  sub_1C106878C((uint64_t)v18, v9, v11, isUniquelyReferenced_nonNull_native);
  *uint64_t v12 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
}

uint64_t SharedItemManager.register(for:attributionView:hideHandler:)()
{
  return swift_release();
}

void sub_1C09744C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for SharedItem();
  uint64_t v10 = (void *)sub_1C1515E9C();
  id v11 = objc_msgSend(v10, sel_fc_NewsArticleID);

  if (!v11) {
    return;
  }
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  id v15 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_viewContextsByArticleID);
  swift_beginAccess();
  uint64_t v16 = *v15;
  if (*(void *)(*v15 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_1BFEF2D8C(v12, v14);
    if (v18)
    {
      uint64_t v19 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  uint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_7:
  uint64_t v32 = v19;
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    unint64_t v21 = 0;
    uint64_t v22 = (void *)(v19 + 32);
    while (*v22 != a3)
    {
      ++v21;
      v22 += 4;
      if (v20 == v21) {
        goto LABEL_11;
      }
    }
    uint64_t v23 = (void *)sub_1C0378ADC(v21);
    uint64_t v30 = v25;
    if (*(void *)(v19 + 16) < v21)
    {
      __break(1u);
    }
    else
    {
      uint64_t v26 = v24;
      id v27 = v23;
      sub_1BFC648F8(a5);
      id v28 = v27;
      sub_1BFC648F8(a5);
      sub_1C02471C4(v21, v21, (uint64_t)v28, v26, a5, a6);
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v31 = *v15;
      *id v15 = 0x8000000000000000;
      sub_1C106878C(v32, v12, v14, isUniquelyReferenced_nonNull_native);
      *id v15 = v31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();

      sub_1BFC3E5C0(a5);
      sub_1BFC3E5C0(v30);
    }
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t SharedItemManager.report(feedback:for:)(char *a1, uint64_t a2)
{
  char v4 = *a1;
  uint64_t v5 = v2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
  swift_beginAccess();
  sub_1BFC66384(v5, (uint64_t)v10);
  uint64_t v6 = v11;
  uint64_t v7 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  char v9 = v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(&v9, a2, v6, v7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_1C09747D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SharedItem();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  sub_1C1517ECC();
  sub_1C0976F34();
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  uint64_t v11 = v20;
  sub_1C0977524(a4, (uint64_t)v10);
  if (v11)
  {
    sub_1C0978284((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SharedItem);
  }
  else
  {
    uint64_t v12 = a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
    swift_beginAccess();
    sub_1BFC66384(v12, (uint64_t)&v20);
    uint64_t v13 = v21;
    uint64_t v14 = v22;
    __swift_project_boxed_opaque_existential_1(&v20, v21);
    uint64_t v11 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v10, v13, v14);
    sub_1C0978284((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SharedItem);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  }
  return v11;
}

uint64_t sub_1C09749A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_viewContextsByArticleID);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1BFEF2D8C(a2, a3);
    if (v10)
    {
      uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(void *)(v11 + 16))
      {
        long long v14 = *(_OWORD *)(v11 + 32);
        id v12 = (id)v14;
        uint64_t result = swift_bridgeObjectRelease();
        *(_OWORD *)a4 = v14;
        return result;
      }
    }
    else
    {
      swift_endAccess();
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_endAccess();
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  return result;
}

uint64_t SharedItemManager.add(observer:)()
{
  return swift_release();
}

uint64_t SharedItemManager.remove(observer:)()
{
  return swift_release();
}

void sub_1C0974BB4(uint64_t a1)
{
  uint64_t v1 = (unint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_observers);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (*v1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    if (*v1 >> 62) {
      goto LABEL_28;
    }
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
LABEL_17:
      if (*v1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (v11 >= v4)
        {
LABEL_19:
          sub_1C024A4BC(v4, v11);
          swift_endAccess();
          return;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11 >= v4) {
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
  }
LABEL_3:
  uint64_t v4 = 0;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = MEMORY[0x1C18C7CB0](v4, v2);
    }
    else
    {
      uint64_t v5 = *(void *)(v2 + 8 * v4 + 32);
      swift_retain();
    }
    uint64_t v6 = MEMORY[0x1C18C9C60](v5 + 16);
    if (v6)
    {
      uint64_t v7 = v6;
      swift_unknownObjectRelease();
      if (v7 == v5) {
        break;
      }
    }
    uint64_t v8 = MEMORY[0x1C18C9C60](v5 + 16);
    swift_release();
    swift_unknownObjectRelease();
    if (!v8)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v4 + 1;
      if (!__OFADD__(v4, 1)) {
        goto LABEL_15;
      }
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C15204BC();
      if (!v3) {
        goto LABEL_12;
      }
      goto LABEL_3;
    }
    uint64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_23;
    }
    ++v4;
    if (v9 == v3) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v10 = v4 + 1;
  if (__OFADD__(v4, 1)) {
    goto LABEL_22;
  }
LABEL_15:
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10 == v12) {
      goto LABEL_17;
    }
  }
  else if (v10 == *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_17;
  }
  uint64_t v13 = v4 + 5;
  while (1)
  {
    unint64_t v14 = v13 - 4;
    unint64_t v15 = *v1;
    if ((*v1 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = MEMORY[0x1C18C7CB0](v13 - 4);
      goto LABEL_35;
    }
    if ((v14 & 0x8000000000000000) != 0) {
      break;
    }
    if (v14 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_71;
    }
    uint64_t v16 = *(void *)(v15 + 8 * v13);
    swift_retain();
LABEL_35:
    uint64_t v17 = MEMORY[0x1C18C9C60](v16 + 16);
    if (!v17 || (uint64_t v18 = v17, swift_unknownObjectRelease(), v18 != v16))
    {
      uint64_t v19 = MEMORY[0x1C18C9C60](v16 + 16);
      swift_release();
      swift_unknownObjectRelease();
      if (!v19) {
        goto LABEL_58;
      }
      if (v14 == v4) {
        goto LABEL_57;
      }
      unint64_t v20 = *v1;
      if ((*v1 & 0xC000000000000001) != 0)
      {
        uint64_t v21 = MEMORY[0x1C18C7CB0](v4, *v1);
        unint64_t v20 = *v1;
        if ((*v1 & 0xC000000000000001) == 0) {
          goto LABEL_43;
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_74;
        }
        if ((unint64_t)v4 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_75;
        }
        uint64_t v21 = *(void *)(v20 + 8 * v4 + 32);
        swift_retain();
        if ((v20 & 0xC000000000000001) == 0)
        {
LABEL_43:
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_76;
          }
          if (v14 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_77;
          }
          uint64_t v22 = *(void *)(v20 + 8 * v13);
          swift_retain();
LABEL_46:
          int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *uint64_t v1 = v20;
          if (!isUniquelyReferenced_nonNull_bridgeObject
            || (v20 & 0x8000000000000000) != 0
            || (v20 & 0x4000000000000000) != 0)
          {
            sub_1C0378E04(v20);
            unint64_t v20 = v24;
            *uint64_t v1 = v24;
          }
          *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v22;
          swift_release();
          sub_1C151EBEC();
          unint64_t v25 = *v1;
          int v26 = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *uint64_t v1 = v25;
          if (!v26 || (v25 & 0x8000000000000000) != 0 || (v25 & 0x4000000000000000) != 0)
          {
            sub_1C0378E04(v25);
            unint64_t v25 = v27;
            *uint64_t v1 = v27;
          }
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_78;
          }
          if (v14 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_79;
          }
          *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 8 * v13) = v21;
          swift_release();
          sub_1C151EBEC();
LABEL_57:
          if (__OFADD__(v4++, 1)) {
            goto LABEL_73;
          }
LABEL_58:
          uint64_t v29 = v13 - 3;
          if (__OFADD__(v14, 1)) {
            goto LABEL_72;
          }
          goto LABEL_59;
        }
      }
      uint64_t v22 = MEMORY[0x1C18C7CB0](v13 - 4, v20);
      unint64_t v20 = *v1;
      goto LABEL_46;
    }
    swift_release();
    uint64_t v29 = v13 - 3;
    if (__OFADD__(v14, 1)) {
      goto LABEL_72;
    }
LABEL_59:
    if (*v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    ++v13;
    if (v29 == v30) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
}

uint64_t SharedItemManager.countOfUnreadItems(since:readArticleIDs:)()
{
  sub_1C1517ECC();
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  return v1;
}

uint64_t sub_1C09750EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_itemsByArticleID);
  swift_beginAccess();
  uint64_t v8 = *v7;
  void v12[2] = a2;
  v12[3] = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0977BE4((uint64_t)sub_1C09781F8, (uint64_t)v12, v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t result = swift_release();
  *a4 = v10;
  return result;
}

uint64_t sub_1C097519C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a4;
  uint64_t v31 = a3;
  uint64_t v30 = sub_1C151631C();
  uint64_t v6 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0978218();
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v29 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (uint64_t *)((char *)&v28 - v13);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)&v28 - v16);
  uint64_t v19 = *a1;
  uint64_t v18 = a1[1];
  unint64_t v20 = (char *)&v28 + *(int *)(v10 + 56) - v16;
  uint64_t *v17 = v19;
  v17[1] = v18;
  sub_1C0977524(a2, (uint64_t)v20);
  uint64_t v21 = (uint64_t)v14 + *(int *)(v10 + 56);
  uint64_t *v14 = v19;
  v14[1] = v18;
  sub_1C0977524((uint64_t)v20, v21);
  uint64_t v22 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v30);
  swift_bridgeObjectRetain();
  sub_1C0978284(v21, (uint64_t (*)(void))type metadata accessor for SharedItem);
  LOBYTE(v21) = sub_1C151622C();
  uint64_t v23 = v6;
  unint64_t v24 = v29;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
  uint64_t v25 = (uint64_t)v24 + *(int *)(v10 + 56);
  *unint64_t v24 = v19;
  v24[1] = v18;
  sub_1C0977524((uint64_t)v20, v25);
  swift_bridgeObjectRetain();
  if (v21) {
    char v26 = sub_1BFF896B4(v19, v18, v28) ^ 1;
  }
  else {
    char v26 = 0;
  }
  sub_1C0978284((uint64_t)v24, (uint64_t (*)(void))sub_1C0978218);
  sub_1C0978284((uint64_t)v17, (uint64_t (*)(void))sub_1C0978218);
  return v26 & 1;
}

uint64_t _s8NewsFeed17SharedItemManagerC9groupNameSSvg_0()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v5 = *(void *)(v2 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, __n128))(v5 + 16))((char *)&v11 - v7, v6);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64))(v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v2);
  return v9;
}

uint64_t sub_1C097554C()
{
  sub_1C1517ECC();
  sub_1C0976FA0(0, &qword_1EB880C98, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, MEMORY[0x1E4FBB320]);
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  return v1;
}

uint64_t sub_1C0975620()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C0328A38;
  v3[5] = v2;
  return MEMORY[0x1F4188298](sub_1C0973C7C, 0, 0);
}

uint64_t sub_1C09756CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_modificationDate;
  swift_beginAccess();
  uint64_t v4 = sub_1C151631C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

void *sub_1C0975754(uint64_t a1)
{
  return SharedItemManager.createAttributionView(for:)(a1);
}

uint64_t sub_1C0975778()
{
  return swift_release();
}

uint64_t sub_1C0975818(char *a1, uint64_t a2)
{
  char v4 = *a1;
  uint64_t v5 = *v2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
  swift_beginAccess();
  sub_1BFC66384(v5, (uint64_t)v10);
  uint64_t v6 = v11;
  uint64_t v7 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  char v9 = v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(&v9, a2, v6, v7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

double sub_1C09758C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SharedItemManager.replyContextMenuItem(for:)(a1, a2);
}

double sub_1C09758EC@<D0>(uint64_t a1@<X8>)
{
  return SharedItemManager.hideContextMenuItem(for:)(a1);
}

uint64_t sub_1C0975910()
{
  return swift_release();
}

uint64_t sub_1C09759A4()
{
  sub_1C1517ECC();
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  return v1;
}

uint64_t sub_1C0975A48()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  char v4 = __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v5 = *(void *)(v2 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, __n128))(v5 + 16))((char *)&v11 - v7, v6);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64))(v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v2);
  return v9;
}

uint64_t SharedItemManager.sharedItemCenterDidAddItems(_:)()
{
  sub_1C0976FA0(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v13 - v2;
  uint64_t v4 = sub_1C151EE9C();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  __n128 v6 = (void *)swift_allocObject();
  v6[2] = 0;
  void v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_1BFDA7634((uint64_t)v3, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  }
  else
  {
    sub_1C151EE8C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1C151EDBC();
      uint64_t v11 = v10;
      swift_unknownObjectRelease();
      if (v11 | v9)
      {
        v13[0] = 0;
        v13[1] = 0;
        v13[2] = v9;
        v13[3] = v11;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C0975DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 136) = a4;
  *(void *)(v4 + 144) = swift_getObjectType();
  return MEMORY[0x1F4188298](sub_1C0975E4C, 0, 0);
}

uint64_t sub_1C0975E4C()
{
  uint64_t v1 = v0[17] + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
  swift_beginAccess();
  sub_1BFC66384(v1, (uint64_t)(v0 + 2));
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 40) + **(int **)(v3 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[19] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C0975F80;
  return v6(v2, v3);
}

uint64_t sub_1C0975F80(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 160) = a1;
  *(void *)(v3 + 168) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1C097633C;
  }
  else {
    uint64_t v4 = sub_1C0976094;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C0976094()
{
  uint64_t v1 = v0[20];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  if (sub_1BFC64AA4(v1))
  {
    uint64_t v2 = v0[17];
    v0[16] = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
    *(void *)(swift_task_alloc() + 16) = v2;
    sub_1C1517ECC();
    sub_1C0976FA0(0, &qword_1EB86BEB0, (uint64_t (*)(uint64_t))type metadata accessor for WeakSharedItemManagerObserver, MEMORY[0x1E4FBB320]);
    swift_retain();
    sub_1C1518D3C();
    swift_task_dealloc();
    swift_release();
    unint64_t v3 = v0[15];
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C15204BC();
      uint64_t v4 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = 0;
        unint64_t v21 = v3 & 0xC000000000000001;
        uint64_t v20 = v4;
        do
        {
          if (v21)
          {
            uint64_t v9 = MEMORY[0x1C18C7CB0](v6, v3);
          }
          else
          {
            uint64_t v9 = *(void *)(v3 + 8 * v6 + 32);
            swift_retain();
          }
          uint64_t v10 = v0[17];
          v0[10] = v0[18];
          v0[11] = &protocol witness table for SharedItemManager;
          v0[7] = v10;
          uint64_t v11 = MEMORY[0x1C18C9C60](v9 + 16);
          uint64_t v12 = (void *)v0[17];
          if (v11)
          {
            unint64_t v13 = v3;
            uint64_t v14 = *(void *)(v9 + 24);
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v16 = *(void (**)(void *, uint64_t, uint64_t))(v14 + 8);
            id v17 = v12;
            uint64_t v8 = (uint64_t)(v0 + 7);
            uint64_t v18 = v14;
            unint64_t v3 = v13;
            uint64_t v4 = v20;
            v16(v0 + 7, ObjectType, v18);
            swift_unknownObjectRelease();
            id v7 = (id)v0[17];
          }
          else
          {
            id v7 = v12;
            uint64_t v8 = (uint64_t)(v0 + 7);
          }
          ++v6;
          __swift_destroy_boxed_opaque_existential_1(v8);
          swift_release();
        }
        while (v4 != v6);
      }
    }
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1C097633C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void SharedItemManager.sharedItemCenter(_:didRemove:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v35 = type metadata accessor for SharedItem();
  MEMORY[0x1F4188790](v35);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v10 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v11 = *(void *)(v6 + 72);
    unint64_t v33 = a2;
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1C0977524(v10, (uint64_t)v8);
      unint64_t v13 = (void *)sub_1C1515E9C();
      id v14 = objc_msgSend(v13, sel_fc_NewsArticleID);

      if (v14)
      {
        uint64_t v15 = sub_1C151E62C();
        uint64_t v17 = v16;

        sub_1C0978284((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SharedItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_1BFEF9B68(0, v12[2] + 1, 1, v12);
        }
        unint64_t v19 = v12[2];
        unint64_t v18 = v12[3];
        if (v19 >= v18 >> 1) {
          uint64_t v12 = sub_1BFEF9B68((void *)(v18 > 1), v19 + 1, 1, v12);
        }
        void v12[2] = v19 + 1;
        uint64_t v20 = &v12[2 * v19];
        v20[4] = v15;
        v20[5] = v17;
      }
      else
      {
        sub_1C0978284((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SharedItem);
      }
      v10 += v11;
      --v9;
    }
    while (v9);
    uint64_t v5 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v41 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock];
  MEMORY[0x1F4188790](v5);
  *((void *)&v32 - 2) = v12;
  *((void *)&v32 - 1) = v3;
  sub_1C1517ECC();
  sub_1C0977590();
  swift_retain();
  sub_1C1518D3C();
  swift_release();
  long long v32 = aBlock;
  uint64_t v21 = aBlock;
  if (!((unint64_t)aBlock >> 62))
  {
    uint64_t v22 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v35 = v22;
    if (v22) {
      goto LABEL_15;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = v32;
    uint64_t v39 = sub_1C0977684;
    uint64_t v40 = v30;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v37 = sub_1BFC9FC68;
    int v38 = &block_descriptor_34;
    uint64_t v31 = _Block_copy(&aBlock);
    swift_release();
    FCPerformBlockOnMainThread();
    _Block_release(v31);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C15204BC();
  if (!v35) {
    goto LABEL_25;
  }
LABEL_15:
  if (v35 >= 1)
  {
    uint64_t v23 = 0;
    unint64_t v33 = v21 & 0xC000000000000001;
    do
    {
      if (v33)
      {
        uint64_t v25 = MEMORY[0x1C18C7CB0](v23, v21);
      }
      else
      {
        uint64_t v25 = *(void *)(v21 + 8 * v23 + 32);
        swift_retain();
      }
      int v38 = (void *)ObjectType;
      uint64_t v39 = (void (*)())&protocol witness table for SharedItemManager;
      *(void *)&long long aBlock = v3;
      if (MEMORY[0x1C18C9C60](v25 + 16))
      {
        uint64_t v26 = *(void *)(v25 + 24);
        uint64_t v27 = swift_getObjectType();
        uint64_t v28 = *(void (**)(long long *, void *, uint64_t, uint64_t))(v26 + 16);
        uint64_t v29 = v3;
        v28(&aBlock, v12, v27, v26);
        swift_unknownObjectRelease();
      }
      else
      {
        unint64_t v24 = v3;
      }
      ++v23;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);

      swift_release();
    }
    while (v35 != v23);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_1C097682C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1C0976FA0(0, (unint64_t *)&qword_1EB87C618, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v51 - v7;
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
    uint64_t v47 = MEMORY[0x1E4FBC860];
    goto LABEL_22;
  }
  long long v52 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v10;
  uint64_t v54 = v9;
  unsigned __int8 v55 = a3;
  id v14 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_viewContextsByArticleID);
  swift_bridgeObjectRetain();
  uint64_t v56 = a1;
  uint64_t v15 = (uint64_t *)(a1 + 40);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v60 = v13;
  do
  {
    uint64_t v19 = *(v15 - 1);
    uint64_t v18 = *v15;
    swift_beginAccess();
    uint64_t v20 = *v14;
    uint64_t v21 = *(void *)(*v14 + 16);
    swift_bridgeObjectRetain();
    if (!v21) {
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1BFEF2D8C(v19, v18);
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_4:
      swift_endAccess();
      uint64_t v17 = v16;
      goto LABEL_5;
    }
    uint64_t v17 = *(void *)(*(void *)(v20 + 56) + 8 * v22);
    swift_endAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_5:
    v15 += 2;
    swift_bridgeObjectRelease();
    sub_1C104A13C(v17);
    --v13;
  }
  while (v13);
  uint64_t v24 = v56;
  swift_bridgeObjectRelease();
  uint64_t v51 = v61;
  uint64_t v25 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_itemsByArticleID);
  uint64_t v59 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs;
  swift_bridgeObjectRetain();
  uint64_t v26 = (uint64_t *)(v24 + 40);
  uint64_t v57 = v8;
  uint64_t v58 = a2;
  do
  {
    uint64_t v28 = *(v26 - 1);
    uint64_t v27 = *v26;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_1BFEF2D8C(v28, v27);
    char v31 = v30;
    swift_bridgeObjectRelease();
    if (v31)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = *v25;
      uint64_t v61 = *v25;
      *uint64_t v25 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C107089C();
        uint64_t v33 = v61;
      }
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void *)(v33 + 56);
      uint64_t v35 = type metadata accessor for SharedItem();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = v34 + *(void *)(v36 + 72) * v29;
      uint64_t v38 = (uint64_t)v57;
      sub_1C097768C(v37, (uint64_t)v57);
      sub_1C091E45C(v29, v33);
      *uint64_t v25 = v33;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v38, 0, 1, v35);
      uint64_t v8 = (char *)v38;
      a2 = v58;
    }
    else
    {
      uint64_t v39 = type metadata accessor for SharedItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v8, 1, 1, v39);
    }
    swift_bridgeObjectRelease();
    sub_1BFDA7634((uint64_t)v8, (unint64_t *)&qword_1EB87C618, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem);
    swift_endAccess();
    id v40 = *(id *)(a2 + v59);
    uint64_t v41 = sub_1C151E5EC();
    objc_msgSend(v40, sel_removeObject_, v41);

    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v42 = sub_1BFEF2D8C(v28, v27);
    LOBYTE(v41) = v43;
    swift_bridgeObjectRelease();
    uint64_t v44 = v60;
    if (v41)
    {
      char v45 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = *v14;
      uint64_t v61 = *v14;
      uint64_t *v14 = 0x8000000000000000;
      if ((v45 & 1) == 0)
      {
        sub_1C1070BF0();
        uint64_t v46 = v61;
      }
      swift_bridgeObjectRelease();
      sub_1C091D59C(v42, v46);
      uint64_t *v14 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v26 += 2;
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v60 = v44 - 1;
  }
  while (v44 != 1);
  swift_bridgeObjectRelease();
  uint64_t v9 = v54;
  a3 = v55;
  uint64_t v12 = v52;
  uint64_t v10 = v53;
  uint64_t v47 = v51;
LABEL_22:
  sub_1C151630C();
  uint64_t v48 = a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_modificationDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v48, v12, v9);
  swift_endAccess();
  long long v49 = (void *)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_observers);
  swift_beginAccess();
  *a3 = *v49;
  a3[1] = v47;
  return swift_bridgeObjectRetain();
}

void sub_1C0976DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = a2 + 56;
    do
    {
      uint64_t v5 = *(void (**)(uint64_t))(v4 - 8);
      if (v5)
      {
        id v6 = *(id *)(v4 - 24);
        uint64_t v7 = sub_1BFC648F8((uint64_t)v5);
        v5(v7);

        sub_1BFC3E5C0((uint64_t)v5);
      }
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1C0976EAC()
{
  unint64_t result = qword_1EA1A1558;
  if (!qword_1EA1A1558)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EA196BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1558);
  }
  return result;
}

uint64_t sub_1C0976F14@<X0>(uint64_t a1@<X8>)
{
  return sub_1C09749A0(v1[2], v1[3], v1[4], a1);
}

void sub_1C0976F34()
{
  if (!qword_1EA1A1568)
  {
    sub_1BFCB6824(255, &qword_1EA1A1570);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A1568);
    }
  }
}

void sub_1C0976FA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0977004()
{
  sub_1C0974224(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1C0977014()
{
  sub_1C0974BB4(*(void *)(v0 + 16));
}

uint64_t sub_1C097701C@<X0>(void *a1@<X8>)
{
  return sub_1C09750EC(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1C097702C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1BFC542F4;
  v3[17] = v2;
  v3[18] = swift_getObjectType();
  return MEMORY[0x1F4188298](sub_1C0975E4C, 0, 0);
}

uint64_t static ContextMenuItem.replyToSharer(headline:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C0977140(a1, (uint64_t)sub_1C09784E8, (void (*)(char *))SharedItemManager.replyContextMenuItem(for:), a2);
}

uint64_t static ContextMenuItem.hideShare(headline:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C0977140(a1, (uint64_t)sub_1C09784E8, (void (*)(char *))SharedItemManager.hideContextMenuItem(for:), a2);
}

uint64_t sub_1C0977140@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *)@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v23 = a2;
  uint64_t v24 = a4;
  sub_1C0976FA0(0, (unint64_t *)&qword_1EB87C618, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, MEMORY[0x1E4FBB718]);
  uint64_t v22 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = type metadata accessor for SharedItem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB87C520 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1EB87E9C8;
  id v13 = objc_msgSend(a1, sel_articleID);
  uint64_t v14 = sub_1C151E62C();
  uint64_t v16 = v15;

  uint64_t v25 = *(void *)(v12 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
  MEMORY[0x1F4188790](v17);
  *(&v20 - 4) = v12;
  *(&v20 - 3) = v14;
  *(&v20 - 2) = v16;
  sub_1C1517ECC();
  swift_retain();
  sub_1C1518D3C();
  swift_bridgeObjectRelease();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t result = sub_1BFDA7634((uint64_t)v7, (unint64_t *)&qword_1EB87C618, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem);
    uint64_t v19 = v24;
    *uint64_t v24 = 0u;
    v19[1] = 0u;
    *((void *)v19 + 4) = 0;
  }
  else
  {
    sub_1C097768C((uint64_t)v7, (uint64_t)v11);
    v21(v11);
    return sub_1C0978284((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SharedItem);
  }
  return result;
}

void *UIAction.build(commandCenter:source:)()
{
  id v1 = v0;
  return v0;
}

id sub_1C0977424()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t sub_1C097744C()
{
  sub_1C019B9B4(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0977484(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return sub_1C0977FFC((uint64_t)v4, v1, v2, v3);
}

uint64_t sub_1C09774D0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  return sub_1C09780B8((uint64_t)v6, a2, v2, v4, v5);
}

uint64_t sub_1C0977524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0977588@<X0>(void *a1@<X8>)
{
  return sub_1C097682C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1C0977590()
{
  if (!qword_1EA1A1598)
  {
    sub_1C0976FA0(255, &qword_1EB86BEB0, (uint64_t (*)(uint64_t))type metadata accessor for WeakSharedItemManagerObserver, MEMORY[0x1E4FBB320]);
    sub_1BFC6CA08(255, &qword_1EA1A15A0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A1598);
    }
  }
}

uint64_t sub_1C0977644()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0977684()
{
  sub_1C0976DE8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C097768C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of SharedItemManagerObserver.sharedItemManagerDidAddItems(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SharedItemManagerObserver.sharedItemManager(_:didHideItemsFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SharedItemManagerType.items.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SharedItemManagerType.loadItemsIfNeeded()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C032DE74;
  return v7(a1, a2);
}

uint64_t dispatch thunk of SharedItemManagerType.item(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of SharedItemManagerType.modificationDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SharedItemManagerType.createAttributionView(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SharedItemManagerType.register(for:attributionView:hideHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of SharedItemManagerType.report(feedback:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of SharedItemManagerType.replyContextMenuItem(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SharedItemManagerType.hideContextMenuItem(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of SharedItemManagerType.remove(observer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of SharedItemManagerType.countOfUnreadItems(since:readArticleIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of SharedItemManagerType.groupName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of SharedItemManagerType.feedName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1C09778F8()
{
  return type metadata accessor for SharedItemManager();
}

uint64_t sub_1C0977900()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SharedItemManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharedItemManager);
}

void destroy for SharedItemManager.ShareAttributionViewContext(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for SharedItemManager.ShareAttributionViewContext(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_OWORD *)a1 = *a2;
  uint64_t v5 = (_OWORD *)(a1 + 16);
  uint64_t v7 = a2 + 1;
  uint64_t v6 = *((void *)a2 + 2);
  id v8 = (id)v4;
  if (v6)
  {
    uint64_t v9 = *((void *)a2 + 3);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v9;
    swift_retain();
  }
  else
  {
    *uint64_t v5 = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for SharedItemManager.ShareAttributionViewContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v7 = v4;

  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v5;
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v8)
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v11;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v9)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SharedItemManager.ShareAttributionViewContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SharedItemManager.ShareAttributionViewContext()
{
  return &type metadata for SharedItemManager.ShareAttributionViewContext;
}

uint64_t sub_1C0977BE4(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(void *, char *))isStackAllocationSafe;
  v14[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_1C0977D5C((void *)((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    sub_1C0977D5C((unint64_t *)v11, v8, a3, v6);
    a2 = v12;
    MEMORY[0x1C18C9B00](v11, -1, -1);
  }
  return a2;
}

void sub_1C0977D5C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, char *))
{
  char v31 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  uint64_t v6 = type metadata accessor for SharedItem();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  size_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v27 = 0;
  uint64_t v28 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    unint64_t v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v16 = v15 | (v10 << 6);
LABEL_17:
    uint64_t v20 = *(void *)(a3 + 56);
    uint64_t v21 = (void *)(*(void *)(a3 + 48) + 16 * v16);
    uint64_t v22 = v21[1];
    v30[0] = *v21;
    v30[1] = v22;
    sub_1C0977524(v20 + *(void *)(v7 + 72) * v16, (uint64_t)v9);
    swift_bridgeObjectRetain();
    char v23 = v31(v30, v9);
    sub_1C0978284((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SharedItem);
    swift_bridgeObjectRelease();
    if (v4) {
      return;
    }
    if (v23)
    {
      *(unint64_t *)((char *)v26 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      BOOL v17 = __OFADD__(v27++, 1);
      if (v17) {
        goto LABEL_30;
      }
    }
  }
  BOOL v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v29) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v10);
  if (v18)
  {
LABEL_16:
    unint64_t v14 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  int64_t v19 = v10 + 1;
  if (v10 + 1 >= v29) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 2;
  if (v10 + 2 >= v29) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 3;
  if (v10 + 3 >= v29)
  {
LABEL_27:
    sub_1C05F03C0(v26, v25, v27, (void *)a3);
    return;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v19);
  if (v18)
  {
LABEL_15:
    int64_t v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_27;
    }
    unint64_t v18 = *(void *)(v28 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1C0977FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[3] = a3;
  v11[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_0, a1, a3);
  if (MEMORY[0x1C18C9C60](a2 + 16))
  {
    uint64_t v8 = *(void *)(a2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 8))(v11, ObjectType, v8);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t sub_1C09780B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[3] = a4;
  void v13[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_0, a1, a4);
  if (MEMORY[0x1C18C9C60](a3 + 16))
  {
    uint64_t v10 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, a2, ObjectType, v10);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

void sub_1C0978180()
{
  sub_1C09744C0(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1C0978194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C09781F8(uint64_t *a1, uint64_t a2)
{
  return sub_1C097519C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24)) & 1;
}

void sub_1C0978218()
{
  if (!qword_1EA1A15D8)
  {
    type metadata accessor for SharedItem();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, &qword_1EA1A15D8);
    }
  }
}

uint64_t sub_1C0978284(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C09782E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C005E7F4;
  return sub_1C097306C(a1, v4, v5, v6);
}

uint64_t sub_1C097839C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_observers);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C09783F4()
{
  return swift_deallocObject();
}

uint64_t sub_1C0978430()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C005E7F4;
  v3[3] = v2;
  return MEMORY[0x1F4188298](sub_1C0972AC0, 0, 0);
}

uint64_t FeedPluginManager.delegate.getter()
{
  uint64_t v1 = v0 + qword_1EB864E70;
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v1);
}

void (*FeedPluginManager.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = qword_1EB864E70;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C019ACB8;
}

uint64_t FeedPluginManager.pluginContainerController.getter()
{
  sub_1C151A3EC();
  uint64_t v0 = (uint64_t (*)(void))sub_1C151A3FC();
  return v0();
}

void (*FeedPluginManager.pluginContainerController.modify(void *a1))(void *a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  sub_1C151A3EC();
  uint64_t v4 = (uint64_t (*)(void *))sub_1C151A3FC();
  v3[5] = v4(v3);
  return sub_1C09786A8;
}

void sub_1C09786A8(void *a1, char a2)
{
  uint64_t v3 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  if ((a2 & 1) == 0) {
    sub_1BFC3DF8C();
  }
  free(v3);
}

uint64_t FeedPluginManager.__allocating_init(feed:feedDescriptor:formatPluginFactory:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  uint64_t v12 = *(void *)a1;
  long long v13 = *(_OWORD *)(a1 + 8);
  uint64_t v14 = v7;
  char v15 = v8;
  FCFeedDescriptor.feedKind.getter(&v11);
  swift_allocObject();
  uint64_t v9 = sub_1BFC7472C(&v12, &v11, a2, a3, a4);

  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_1C09787B4(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (!v1)
  {
    sub_1BFE4DBE0();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C15320E0;
    swift_retain();
    uint64_t v3 = sub_1C0978B9C();
    goto LABEL_5;
  }
  if (v1 == 1)
  {
    sub_1BFE4DBE0();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C15320E0;
    swift_retain();
    uint64_t v3 = sub_1C0978920();
LABEL_5:
    *(void *)(v2 + 32) = v3;
    sub_1C151EBEC();
    uint64_t v4 = v2;
    swift_release();
    return v4;
  }
  uint64_t v5 = *(void *)((*a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = *(void *)(v5 + 8 * v7 + 32);
      swift_retain();
      uint64_t v13 = v9;
      unint64_t v10 = sub_1C09787B4(&v13);
      swift_release();
      sub_1C104A290(v10);
      uint64_t v7 = v8;
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    return v12;
  }
  return v4;
}

uint64_t sub_1C0978920()
{
  swift_getWitnessTable();
  swift_unknownObjectRetain();
  sub_1C151C95C();
  sub_1C151A3BC();
  sub_1BFFDEB20();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1529AE0;
  uint64_t v1 = sub_1C151C92C();
  uint64_t v3 = v2;
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1BFE9C558();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  sub_1C00BC390(0);
  swift_allocObject();
  return sub_1C151911C();
}

uint64_t sub_1C0978B9C()
{
  sub_1BFFDEB20();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1529AE0;
  uint64_t v1 = sub_1C151C92C();
  uint64_t v3 = v2;
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1BFE9C558();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  sub_1C00BC390(0);
  swift_allocObject();
  return sub_1C151911C();
}

uint64_t sub_1C0978C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1BFD35658;
  *(void *)(v5 + 24) = v4;
  swift_retain();
  sub_1C151C93C();
  return swift_release();
}

uint64_t sub_1C0978D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1C03CD68C;
  *(void *)(v5 + 24) = v4;
  swift_retain();
  sub_1C151C96C();
  return swift_release();
}

uint64_t sub_1C0978DF0()
{
  swift_release();
  return swift_deallocClassInstance();
}

void FeedPluginManager.__allocating_init()()
{
}

void FeedPluginManager.init()()
{
}

void FeedPluginManager.__allocating_init(enableReuseLayoutSuppression:)()
{
}

void FeedPluginManager.init(enableReuseLayoutSuppression:)()
{
}

uint64_t sub_1C0978F00()
{
  sub_1C019B9B4(v0 + qword_1EB864E70);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + qword_1EB864E68 + 16);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t FeedPluginManager.deinit()
{
  uint64_t v0 = sub_1C151A40C();
  sub_1C019B9B4(v0 + qword_1EB864E70);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + qword_1EB864E68 + 16);

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeedPluginManager.__deallocating_deinit()
{
  FeedPluginManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedPluginManager.plugin(_:didResizePluginModel:)()
{
  uint64_t v1 = v0 + qword_1EB864E70;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v1);
  if (result)
  {
    swift_getObjectType();
    sub_1C151A5DC();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FeedPluginManager.select(_:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + qword_1EB864E70;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v5);
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8) + 8))(a1, a2, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FeedPluginManager.preview(for:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3 + qword_1EB864E70;
  swift_beginAccess();
  if (!MEMORY[0x1C18C9C60](v7)) {
    return 0;
  }
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + 16))(a1, a2, a3, ObjectType);
  swift_unknownObjectRelease();
  return v10;
}

uint64_t FeedPluginManager.sender(_:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3 + qword_1EB864E70;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v7);
  if (result)
  {
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + 24))(a1, a2, a3, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C0979308()
{
  uint64_t v1 = type metadata accessor for FeedPluginFactoryContext();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v3 = (id *)(v0 + v2 + *(int *)(v1 + 40));
  uint64_t v4 = (int *)type metadata accessor for FeedContext();
  uint64_t v5 = (char *)v3 + v4[5];
  uint64_t v6 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = &v5[*(int *)(v6 + 20)];
    uint64_t v8 = sub_1C151631C();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(char **)((char *)v3 + v4[12] + 8) - 1 >= (char *)3) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C0979534()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0979570()
{
}

void sub_1C09795A0()
{
}

uint64_t sub_1C09795D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + qword_1EB864E70;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1C097962C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + qword_1EB864E70;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1C0979690()
{
  return 24;
}

__n128 sub_1C097969C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t method lookup function for FeedPluginManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedPluginManager);
}

uint64_t sub_1C09796C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0979700(uint64_t a1, uint64_t a2)
{
  return sub_1C0978C90(a1, a2);
}

uint64_t sub_1C0979708()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0979740(uint64_t a1, uint64_t a2)
{
  return sub_1C0978D40(a1, a2);
}

uint64_t sub_1C0979748()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t FormatPuzzleBinding.Image.image(from:context:imageContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  int v6 = *v3;
  uint64_t v7 = *(void *)(a1 + 56);
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v8 = swift_allocObject();
      uint64_t v10 = *(void *)(a2 + 48);
      uint64_t v9 = *(void *)(a2 + 56);
      long long v32 = *(_OWORD *)(a2 + 80);
      long long v35 = *(_OWORD *)(a2 + 64);
      long long v29 = *(_OWORD *)(a2 + 96);
      uint64_t v11 = *(void *)(a2 + 112);
      uint64_t v12 = *(void *)(a2 + 120);
      char v13 = *(unsigned char *)(a2 + 128);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v7;
      *(_OWORD *)(v8 + 16) = 0u;
      *(_OWORD *)(v8 + 32) = 0u;
      *(unsigned char *)(v8 + 48) = 1;
      *(void *)(v8 + 56) = v10;
      *(void *)(v8 + 64) = v9;
      *(_OWORD *)(v8 + 72) = v35;
      *(_OWORD *)(v8 + 88) = v32;
      *(_OWORD *)(v8 + 104) = v29;
      *(void *)(v8 + 120) = v11;
      *(void *)(v8 + 128) = v12;
      *(unsigned char *)(v8 + 136) = v13;
      char v15 = sub_1C0979FA4;
    }
    else
    {
      uint64_t v8 = swift_allocObject();
      uint64_t v24 = *(void *)(a2 + 48);
      uint64_t v23 = *(void *)(a2 + 56);
      long long v34 = *(_OWORD *)(a2 + 80);
      long long v37 = *(_OWORD *)(a2 + 64);
      long long v31 = *(_OWORD *)(a2 + 96);
      uint64_t v25 = *(void *)(a2 + 112);
      uint64_t v26 = *(void *)(a2 + 120);
      char v27 = *(unsigned char *)(a2 + 128);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v7;
      *(_OWORD *)(v8 + 16) = 0u;
      *(_OWORD *)(v8 + 32) = 0u;
      *(unsigned char *)(v8 + 48) = 1;
      *(void *)(v8 + 56) = v24;
      *(void *)(v8 + 64) = v23;
      *(_OWORD *)(v8 + 72) = v37;
      *(_OWORD *)(v8 + 88) = v34;
      *(_OWORD *)(v8 + 104) = v31;
      *(void *)(v8 + 120) = v25;
      *(void *)(v8 + 128) = v26;
      *(unsigned char *)(v8 + 136) = v27;
      char v15 = sub_1C0979F78;
    }
    *(void *)(v8 + 144) = v15;
    *(void *)(v8 + 152) = v14;
    *a3 = v8 | 0x2000000000000000;
  }
  else
  {
    uint64_t v17 = *(void *)(a2 + 48);
    uint64_t v16 = *(void *)(a2 + 56);
    long long v33 = *(_OWORD *)(a2 + 80);
    long long v36 = *(_OWORD *)(a2 + 64);
    long long v30 = *(_OWORD *)(a2 + 96);
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = *(void *)(a2 + 120);
    char v20 = *(unsigned char *)(a2 + 128);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v7;
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = 0u;
    *(_OWORD *)(v22 + 32) = 0u;
    *(unsigned char *)(v22 + 48) = 1;
    *(void *)(v22 + 56) = v17;
    *(void *)(v22 + 64) = v16;
    *(_OWORD *)(v22 + 72) = v36;
    *(_OWORD *)(v22 + 88) = v33;
    *(_OWORD *)(v22 + 104) = v30;
    *(void *)(v22 + 120) = v18;
    *(void *)(v22 + 128) = v19;
    *(unsigned char *)(v22 + 136) = v20;
    *(void *)(v22 + 144) = sub_1C0979FD0;
    *(void *)(v22 + 152) = v21;
    *a3 = v22 | 0x2000000000000000;
  }
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

uint64_t sub_1C0979A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (*v3)
  {
    if (*v3 == 1)
    {
      uint64_t v7 = swift_allocObject();
      uint64_t v9 = *(void *)(a2 + 48);
      uint64_t v8 = *(void *)(a2 + 56);
      long long v31 = *(_OWORD *)(a2 + 80);
      long long v34 = *(_OWORD *)(a2 + 64);
      long long v28 = *(_OWORD *)(a2 + 96);
      uint64_t v10 = *(void *)(a2 + 112);
      uint64_t v11 = *(void *)(a2 + 120);
      char v12 = *(unsigned char *)(a2 + 128);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = a1;
      *(_OWORD *)(v7 + 16) = 0u;
      *(_OWORD *)(v7 + 32) = 0u;
      *(unsigned char *)(v7 + 48) = 1;
      *(void *)(v7 + 56) = v9;
      *(void *)(v7 + 64) = v8;
      *(_OWORD *)(v7 + 72) = v34;
      *(_OWORD *)(v7 + 88) = v31;
      *(_OWORD *)(v7 + 104) = v28;
      *(void *)(v7 + 120) = v10;
      *(void *)(v7 + 128) = v11;
      *(unsigned char *)(v7 + 136) = v12;
      uint64_t v14 = sub_1C097A300;
    }
    else
    {
      uint64_t v7 = swift_allocObject();
      uint64_t v23 = *(void *)(a2 + 48);
      uint64_t v22 = *(void *)(a2 + 56);
      long long v33 = *(_OWORD *)(a2 + 80);
      long long v36 = *(_OWORD *)(a2 + 64);
      long long v30 = *(_OWORD *)(a2 + 96);
      uint64_t v24 = *(void *)(a2 + 112);
      uint64_t v25 = *(void *)(a2 + 120);
      char v26 = *(unsigned char *)(a2 + 128);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = a1;
      *(_OWORD *)(v7 + 16) = 0u;
      *(_OWORD *)(v7 + 32) = 0u;
      *(unsigned char *)(v7 + 48) = 1;
      *(void *)(v7 + 56) = v23;
      *(void *)(v7 + 64) = v22;
      *(_OWORD *)(v7 + 72) = v36;
      *(_OWORD *)(v7 + 88) = v33;
      *(_OWORD *)(v7 + 104) = v30;
      *(void *)(v7 + 120) = v24;
      *(void *)(v7 + 128) = v25;
      *(unsigned char *)(v7 + 136) = v26;
      uint64_t v14 = sub_1C097A2FC;
    }
    *(void *)(v7 + 144) = v14;
    *(void *)(v7 + 152) = v13;
    *a3 = v7 | 0x2000000000000000;
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 48);
    uint64_t v15 = *(void *)(a2 + 56);
    long long v32 = *(_OWORD *)(a2 + 80);
    long long v35 = *(_OWORD *)(a2 + 64);
    long long v29 = *(_OWORD *)(a2 + 96);
    uint64_t v17 = *(void *)(a2 + 112);
    uint64_t v18 = *(void *)(a2 + 120);
    char v19 = *(unsigned char *)(a2 + 128);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a1;
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = 0u;
    *(_OWORD *)(v21 + 32) = 0u;
    *(unsigned char *)(v21 + 48) = 1;
    *(void *)(v21 + 56) = v16;
    *(void *)(v21 + 64) = v15;
    *(_OWORD *)(v21 + 72) = v35;
    *(_OWORD *)(v21 + 88) = v32;
    *(_OWORD *)(v21 + 104) = v29;
    *(void *)(v21 + 120) = v17;
    *(void *)(v21 + 128) = v18;
    *(unsigned char *)(v21 + 136) = v19;
    *(void *)(v21 + 144) = sub_1C097A304;
    *(void *)(v21 + 152) = v20;
    *a3 = v21 | 0x2000000000000000;
  }
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

uint64_t sub_1C0979C90()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

double sub_1C0979CD0@<D0>(id a1@<X2>, void *a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X8>)
{
  if (a3 == 2)
  {
    char v11 = 0;
    id v6 = objc_msgSend(a1, sel_puzzleType);
    swift_getObjectType();
    uint64_t v7 = &v11;
  }
  else
  {
    id v8 = objc_msgSend(a2, sel_userInterfaceStyle);
    if ((unint64_t)v8 >= 2)
    {
      if (v8 == (id)2)
      {
        char v12 = 0;
        id v6 = objc_msgSend(a1, sel_puzzleType);
        swift_getObjectType();
        uint64_t v7 = &v12;
      }
      else
      {
        char v14 = 1;
        id v6 = objc_msgSend(a1, sel_puzzleType);
        swift_getObjectType();
        uint64_t v7 = &v14;
      }
    }
    else
    {
      char v13 = 1;
      id v6 = objc_msgSend(a1, sel_puzzleType);
      swift_getObjectType();
      uint64_t v7 = &v13;
    }
  }
  id v9 = sub_1BFFB1574(v6, v7);
  swift_unknownObjectRelease();
  if (v9)
  {
    *(void *)(a4 + 24) = sub_1BFF6C3A8();
    *(void *)(a4 + 32) = sub_1BFF6C3E8();
    *(void *)a4 = v9;
  }
  else
  {
    *(void *)(a4 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

id sub_1C0979E28@<X0>(id a1@<X2>, SEL *a2@<X3>, SEL *a3@<X4>, uint64_t a4@<X8>)
{
  id result = [a1 *a2];
  if (result)
  {
    id v8 = result;
    unint64_t v9 = sub_1BFF6C3A8();
    unint64_t v19 = v9;
    unint64_t v10 = sub_1BFF6C3E8();
    unint64_t v20 = v10;
    *(void *)&long long v18 = v8;
    id v11 = v8;
    id v12 = [a1 *a3];
    if (v12)
    {
      id v13 = v12;
      *((void *)&v16 + 1) = v9;
      unint64_t v17 = v10;

      *(void *)&long long v15 = v13;
    }
    else
    {

      unint64_t v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
    }
    *(void *)(a4 + 24) = &type metadata for FormatAssetHandle;
    *(void *)(a4 + 32) = sub_1BFF6C440();
    uint64_t v14 = swift_allocObject();
    *(void *)a4 = v14;
    sub_1BFC773DC(&v18, v14 + 16);
    return (id)sub_1C0290FCC((uint64_t)&v15, v14 + 56);
  }
  else
  {
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C0979F40()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_1C0979F78@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0979E28(*(id *)(v1 + 16), (SEL *)&selRef_thumbnailLargeImageAssetHandle, (SEL *)&selRef_thumbnailSmallImageAssetHandle, a1);
}

id sub_1C0979FA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0979E28(*(id *)(v1 + 16), (SEL *)&selRef_thumbnailSmallImageAssetHandle, (SEL *)&selRef_thumbnailLargeImageAssetHandle, a1);
}

double sub_1C0979FD0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0979CD0(*(id *)(v3 + 16), a1, a2, a3);
}

BOOL static FormatPuzzleBinding.Image.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatPuzzleBinding.Image.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPuzzleBinding.Image.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C097A064()
{
  unint64_t result = qword_1EA1A1600;
  if (!qword_1EA1A1600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1600);
  }
  return result;
}

unint64_t sub_1C097A0B8(uint64_t a1)
{
  unint64_t result = sub_1C097A0E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C097A0E0()
{
  unint64_t result = qword_1EA1A1608;
  if (!qword_1EA1A1608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1608);
  }
  return result;
}

unint64_t sub_1C097A134(void *a1)
{
  a1[1] = sub_1C088F960();
  a1[2] = sub_1C08F8BB8();
  unint64_t result = sub_1C097A064();
  a1[3] = result;
  return result;
}

uint64_t sub_1C097A16C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatPuzzleBinding.Image.init(from:)(a1, a2);
}

uint64_t sub_1C097A184(void *a1)
{
  return FormatPuzzleBinding.Image.encode(to:)(a1);
}

unsigned char *_s5ImageOwst_4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C097A268);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Image()
{
  return &type metadata for FormatPuzzleBinding.Image;
}

uint64_t sub_1C097A2A0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  return swift_deallocObject();
}

Swift::Bool __swiftcall FeedServiceContextType.canReadFromNetwork()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedServiceOptions(0);
  uint64_t v8 = v7 - 8;
  __n128 v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v3, v2, v9);
  sub_1BFC69940((uint64_t)&v11[*(int *)(v8 + 28)], (uint64_t)v6);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  Swift::Bool result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1BFE62B90((uint64_t)v6, type metadata accessor for FeedServiceOptions.RootCursorSource);
      goto LABEL_3;
    case 2:
      return result;
    default:
LABEL_3:
      Swift::Bool result = 1;
      break;
  }
  return result;
}

uint64_t sub_1C097A478@<X0>(uint64_t a1@<X8>)
{
  return FeedServiceContextType.serviceOptions.getter(a1);
}

uint64_t dispatch thunk of FeedServiceContextType.serviceOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id ArticleActivityItemsConfiguration.__allocating_init(headline:shareLinkProvider:shareLinkTextProvider:userHasAccess:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = sub_1C151804C();
  MEMORY[0x1F4188790](v9);
  sub_1BFF2E6FC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  MEMORY[0x1F4188790](v12);
  if (a4)
  {
    long long v15 = (char *)&v50 - v13;
    Class v57 = v4;
    uint64_t v16 = v14;
    uint64_t v50 = v9;
    unint64_t v17 = (void *)a2;
    uint64_t v18 = *(void *)(a2 + 24);
    uint64_t v19 = v17[4];
    uint64_t v54 = v18;
    unint64_t v20 = __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v58 = a3;
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8);
    long long v52 = v20;
    uint64_t v53 = v21;
    uint64_t v55 = v19;
    uint64_t v56 = v19 + 8;
    uint64_t v51 = v15;
    v21((uint64_t)a1, v18, v19);
    sub_1C0025B10((uint64_t)v15, v16);
    unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a1;
    uint64_t v24 = v16;
    sub_1C002F694(v16, v23 + v22);
    v60[0] = MEMORY[0x1E4FBC860];
    sub_1BFC4D6D4();
    sub_1BFF2E6FC(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
    sub_1BFD98B68();
    uint64_t v59 = v17;
    swift_unknownObjectRetain();
    sub_1C151FFBC();
    sub_1C097AA34();
    swift_allocObject();
    uint64_t v25 = sub_1C1518D1C();
    Class v57 = (Class)objc_allocWithZone(v57);
    sub_1BFE4DBE0();
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1C1540C60;
    char v27 = (objc_class *)type metadata accessor for SharingArticleImageActivityItemSource();
    long long v28 = (char *)objc_allocWithZone(v27);
    *(void *)&v28[OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline] = a1;
    v64.receiver = v28;
    v64.super_class = v27;
    swift_unknownObjectRetain();
    *(void *)(v26 + 32) = objc_msgSendSuper2(&v64, sel_init);
    long long v29 = (objc_class *)type metadata accessor for SharingArticleTextActivityItemSource();
    long long v30 = (char *)objc_allocWithZone(v29);
    *(void *)&v30[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
    swift_unknownObjectRetain();
    long long v31 = v30;
    uint64_t v32 = sub_1C0352610(a1);
    long long v33 = (uint64_t *)&v31[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
    *long long v33 = v32;
    v33[1] = v34;

    v63.receiver = v31;
    v63.super_class = v29;
    *(void *)(v26 + 40) = objc_msgSendSuper2(&v63, sel_init);
    uint64_t v35 = swift_unknownObjectRetain();
    v53(v35, v54, v55);
    uint64_t v36 = v58;
    sub_1BFC66384(v58, (uint64_t)v60);
    long long v37 = (char *)objc_allocWithZone((Class)type metadata accessor for SharingArticleURLActivityItemSource());
    uint64_t v38 = v61;
    uint64_t v39 = v62;
    uint64_t v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v60, v61);
    __n128 v41 = MEMORY[0x1F4188790](v40);
    char v43 = (char *)&v50 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v44 + 16))(v43, v41);
    swift_retain();
    uint64_t v45 = v24;
    a2 = (uint64_t)v59;
    id v46 = sub_1C0175F04((uint64_t)a1, v45, (uint64_t)v43, v25, v37, v38, v39);
    swift_unknownObjectRelease();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    *(void *)(v26 + 48) = v46;
    v60[0] = v26;
    sub_1C151EBEC();
    sub_1BFC9DBE8(0, (unint64_t *)&unk_1EA1A32A0);
    uint64_t v47 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    id v48 = [(objc_class *)v57 initNAWithActivityItemSources:v47];
    swift_release();
    swift_unknownObjectRelease();

    __swift_destroy_boxed_opaque_existential_1(v36);
    sub_1C002F608((uint64_t)v51);
  }
  else
  {
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a3);
    id v48 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v48;
}

void sub_1C097AA34()
{
  if (!qword_1EB86C250)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB86DE60);
    unint64_t v0 = sub_1C1518D2C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C250);
    }
  }
}

id ArticleActivityItemsConfiguration.__allocating_init(headline:userHasAccess:)(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C151804C();
  MEMORY[0x1F4188790](v6);
  sub_1BFF2E6FC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v34 - v12;
  if (a2)
  {
    uint64_t v34 = type metadata accessor for ShareLinkProvider();
    swift_initStackObject();
    sub_1C097AEF4(a1, (uint64_t)v13);
    sub_1C0025B10((uint64_t)v13, (uint64_t)v10);
    unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    sub_1C002F694((uint64_t)v10, v15 + v14);
    uint64_t v37 = MEMORY[0x1E4FBC860];
    sub_1BFC4D6D4();
    sub_1BFF2E6FC(0, (unint64_t *)&qword_1EB879C30, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBB320]);
    sub_1BFD98B68();
    swift_unknownObjectRetain();
    sub_1C151FFBC();
    sub_1C097AA34();
    swift_allocObject();
    uint64_t v16 = sub_1C1518D1C();
    id v17 = objc_allocWithZone(v3);
    sub_1BFE4DBE0();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C1540C60;
    uint64_t v19 = (objc_class *)type metadata accessor for SharingArticleImageActivityItemSource();
    unint64_t v20 = (char *)objc_allocWithZone(v19);
    *(void *)&v20[OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline] = a1;
    v36.receiver = v20;
    v36.super_class = v19;
    swift_unknownObjectRetain();
    *(void *)(v18 + 32) = objc_msgSendSuper2(&v36, sel_init);
    uint64_t v21 = (objc_class *)type metadata accessor for SharingArticleTextActivityItemSource();
    unint64_t v22 = (char *)objc_allocWithZone(v21);
    *(void *)&v22[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
    swift_unknownObjectRetain();
    uint64_t v23 = v22;
    uint64_t v24 = sub_1C0352610(a1);
    uint64_t v25 = (uint64_t *)&v23[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
    *uint64_t v25 = v24;
    v25[1] = v26;

    v35.receiver = v23;
    v35.super_class = v21;
    *(void *)(v18 + 40) = objc_msgSendSuper2(&v35, sel_init);
    swift_initStackObject();
    char v27 = (void *)swift_unknownObjectRetain();
    sub_1C097AEF4(v27, (uint64_t)v10);
    type metadata accessor for MailShareLinkTextProvider();
    uint64_t v28 = swift_allocObject();
    long long v29 = (char *)objc_allocWithZone((Class)type metadata accessor for SharingArticleURLActivityItemSource());
    swift_retain();
    id v30 = sub_1C097B9BC((uint64_t)a1, (uint64_t)v10, v28, v16, v29);
    swift_unknownObjectRelease();
    swift_release();
    *(void *)(v18 + 48) = v30;
    uint64_t v37 = v18;
    sub_1C151EBEC();
    sub_1BFC9DBE8(0, (unint64_t *)&unk_1EA1A32A0);
    long long v31 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v17, sel_initNAWithActivityItemSources_, v31);
    swift_release();
    swift_unknownObjectRelease();

    sub_1C002F608((uint64_t)v13);
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v32;
}

uint64_t sub_1C097AEF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFF2E6FC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v34 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v18 = MEMORY[0x1F4188790](v17).n128_u64[0];
  unint64_t v20 = (char *)&v34 - v19;
  if (objc_msgSend(a1, sel_contentType, v18) != (id)1)
  {
    uint64_t v34 = a2;
    id v21 = objc_msgSend(a1, sel_articleID);
    if (!v21)
    {
      sub_1C151E62C();
      id v21 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    id v22 = objc_msgSend(a1, sel_routeURL);
    if (v22)
    {
      sub_1C1515F1C();

      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v9, v16, v13);
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v23(v9, 0, 1, v13);
      int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13);
      objc_super v35 = v23;
      if (v24 == 1)
      {
        id v22 = 0;
      }
      else
      {
        id v22 = (id)sub_1C1515E9C();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
      }
    }
    else
    {
      objc_super v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v35(v9, 1, 1, v13);
    }
    id v25 = objc_msgSend(self, sel_nss_NewsURLForArticleID_routeURL_, v21, v22);

    if (v25)
    {
      sub_1C1515F1C();

      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v26(v6, v16, v13);
      v35(v6, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) != 1)
      {
        v26(v20, v6, v13);
        id v27 = objc_msgSend(a1, sel_sourceChannel);
        if (!v27
          || (unsigned __int8 v28 = objc_msgSend(v27, sel_isPublic), swift_unknownObjectRelease(), (v28 & 1) != 0))
        {
          uint64_t v29 = v34;
          v26((char *)v34, v20, v13);
          return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v35)(v29, 0, 1, v13);
        }
        (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
        goto LABEL_16;
      }
    }
    else
    {
      v35(v6, 1, 1, v13);
    }
    sub_1C002F608((uint64_t)v6);
LABEL_16:
    a2 = v34;
  }
  id v31 = objc_msgSend(a1, sel_contentURL);
  if (v31)
  {
    id v32 = v31;
    sub_1C1515F1C();

    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v33, 1, v13);
  return sub_1C002F694((uint64_t)v12, a2);
}

uint64_t sub_1C097B3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1BFF2E6FC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - v7;
  sub_1C0025B10(a2, (uint64_t)&v15 - v7);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_unknownObjectRetain();
  uint64_t v12 = 0;
  if (v11 != 1)
  {
    uint64_t v12 = (void *)sub_1C1515E9C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  id v13 = objc_msgSend(objc_allocWithZone((Class)NEArticleLinkPresentationSource), sel_initWithHeadline_articleURL_selectedText_, a1, v12, 0);

  uint64_t result = swift_unknownObjectRelease();
  *a3 = v13;
  return result;
}

id ArticleActivityItemsConfiguration.__allocating_init(headline:itemOptions:)(void *a1, uint64_t a2)
{
  char v3 = sub_1BFFD07D4(12, a2);
  swift_bridgeObjectRelease();
  return ArticleActivityItemsConfiguration.__allocating_init(headline:userHasAccess:)(a1, v3 & 1);
}

id ArticleActivityItemsConfiguration.__allocating_init(objects:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_1BFC9DBE8(0, &qword_1EA19A1F0);
  uint64_t v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithObjects_, v2);

  return v3;
}

id ArticleActivityItemsConfiguration.init(objects:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1BFC9DBE8(0, &qword_1EA19A1F0);
  uint64_t v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v5, sel_initWithObjects_, v2);

  return v3;
}

id ArticleActivityItemsConfiguration.__allocating_init(itemProviders:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_1C036AFB4();
  uint64_t v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithItemProviders_, v2);

  return v3;
}

id ArticleActivityItemsConfiguration.init(itemProviders:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C036AFB4();
  uint64_t v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v5, sel_initWithItemProviders_, v2);

  return v3;
}

id ArticleActivityItemsConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C097B924@<X0>(void *a1@<X8>)
{
  sub_1BFF2E6FC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  return sub_1C097B3D0(*(void *)(v1 + 16), v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), a1);
}

id sub_1C097B9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v17[3] = type metadata accessor for MailShareLinkTextProvider();
  v17[4] = &protocol witness table for MailShareLinkTextProvider;
  v17[0] = a3;
  *(void *)&a5[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline] = a1;
  int v11 = a5;
  id v12 = objc_msgSend((id)swift_unknownObjectRetain(), sel_sourceChannel);
  if (v12)
  {
    unsigned __int8 v13 = objc_msgSend(v12, sel_isPublic);
    swift_unknownObjectRelease();
  }
  else
  {
    unsigned __int8 v13 = 0;
  }
  sub_1C0025B10(a2, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL]);
  sub_1BFC66384((uint64_t)v17, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider]);
  v11[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_sourceChannelPublic] = v13;
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_linkPresentationSource] = a4;
  swift_retain();

  v16.receiver = v11;
  v16.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1C002F608(a2);
  return v14;
}

uint64_t type metadata accessor for ArticleActivityItemsConfiguration()
{
  return self;
}

uint64_t sub_1C097BB1C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  if (*a1 == 0x8000000000000008 || (uint64_t v9 = *v2) == 0)
  {
    objc_super v5 = (unsigned int *)MEMORY[0x1E4FAC240];
LABEL_3:
    uint64_t v6 = *v5;
    uint64_t v7 = sub_1C151AC1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(a2, v6, v7);
  }
  if (v9 == 1)
  {
    objc_super v5 = (unsigned int *)MEMORY[0x1E4FAC248];
    goto LABEL_3;
  }
  if (v9 == 2)
  {
    objc_super v5 = (unsigned int *)MEMORY[0x1E4FAC238];
    goto LABEL_3;
  }
  uint64_t v10 = v2[1];
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  sub_1BFF493E4(v11, v9);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v3)
  {
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    sub_1BFF493E4(v11, v10);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C151BD9C();
    objc_super v5 = (unsigned int *)MEMORY[0x1E4FAC250];
    goto LABEL_3;
  }
  return result;
}

uint64_t sub_1C097BCA0@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  return FormatItemNodeSwipeActionStyle.init(from:)(a1, a2);
}

uint64_t sub_1C097BCB8(void *a1)
{
  return FormatItemNodeSwipeActionStyle.encode(to:)(a1);
}

BOOL _s8NewsFeed30FormatItemNodeSwipeActionStyleO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  if (!*a1)
  {
    if (!v5)
    {
      sub_1C05DCC44(0);
      unint64_t v6 = 0;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      uint64_t v7 = 1;
      sub_1C05DCC44(1uLL);
      sub_1C05DCC44(1uLL);
      return v7;
    }
    goto LABEL_12;
  }
  if (v3 != 2)
  {
    if (v5 >= 3)
    {
      sub_1C05DCC00(*a2);
      sub_1C05DCC00(v3);
      sub_1C05DCC00(v5);
      sub_1C05DCC00(v3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v10 = sub_1C00DE998(v3, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v11 = sub_1C00DE998(v2, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C05DCC44(v3);
        sub_1C05DCC44(v5);
        sub_1C05DCC44(v5);
        sub_1C05DCC44(v3);
        return (v11 & 1) != 0;
      }
      sub_1C05DCC44(v3);
      sub_1C05DCC44(v5);
      sub_1C05DCC44(v5);
      unint64_t v8 = v3;
LABEL_13:
      sub_1C05DCC44(v8);
      return 0;
    }
LABEL_12:
    sub_1C05DCC00(*a2);
    sub_1C05DCC00(v3);
    sub_1C05DCC44(v3);
    unint64_t v8 = v5;
    goto LABEL_13;
  }
  if (v5 != 2) {
    goto LABEL_12;
  }
  sub_1C05DCC44(2uLL);
  unint64_t v6 = 2;
LABEL_8:
  sub_1C05DCC44(v6);
  return 1;
}

unint64_t sub_1C097BEC4(uint64_t a1)
{
  unint64_t result = sub_1C097BEEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C097BEEC()
{
  unint64_t result = qword_1EA1A1610;
  if (!qword_1EA1A1610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1610);
  }
  return result;
}

unint64_t sub_1C097BF40(void *a1)
{
  a1[1] = sub_1BFD88060();
  a1[2] = sub_1C08F73FC();
  unint64_t result = sub_1C097BF78();
  a1[3] = result;
  return result;
}

unint64_t sub_1C097BF78()
{
  unint64_t result = qword_1EA1A1618;
  if (!qword_1EA1A1618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1618);
  }
  return result;
}

unint64_t destroy for FormatItemNodeSwipeActionStyle(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8NewsFeed30FormatItemNodeSwipeActionStyleOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *assignWithCopy for FormatItemNodeSwipeActionStyle(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FormatItemNodeSwipeActionStyle(void *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatItemNodeSwipeActionStyle(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

void *sub_1C097C208(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatItemNodeSwipeActionStyle()
{
  return &type metadata for FormatItemNodeSwipeActionStyle;
}

void *sub_1C097C238(uint64_t *a1)
{
  uint64_t v1 = *a1;
  switch(*a1)
  {
    case 0:
      uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v2);
      sub_1C0181BEC(0);
      unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
      uint64_t v7 = (void *)(v6 + v5);
      unint64_t v8 = v7;
      uint64_t v9 = 0x64656C6261736944;
      uint64_t v10 = 0xE800000000000000;
      goto LABEL_6;
    case 1:
      id v30 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v30);
      sub_1C0181BEC(0);
      unint64_t v32 = (*(unsigned __int8 *)(*(void *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v31 - 8) + 80);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
      uint64_t v7 = (void *)(v6 + v32);
      uint64_t v10 = 0xE900000000000064;
      unint64_t v8 = v7;
      uint64_t v9 = 0x65736E65646E6F43;
      goto LABEL_6;
    case 2:
      uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v33);
      sub_1C0181BEC(0);
      unint64_t v35 = (*(unsigned __int8 *)(*(void *)(v34 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v34 - 8) + 80);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
      uint64_t v7 = (void *)(v6 + v35);
      unint64_t v8 = v7;
      uint64_t v9 = 0x746C7561666544;
      uint64_t v10 = 0xE700000000000000;
LABEL_6:
      sub_1C0433600(0x656C797453, 0xE500000000000000, v9, v10, v8);
      uint64_t v36 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v7, 0, 1, v36);
      goto LABEL_8;
    case 3:
      uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v37);
      sub_1C0181BEC(0);
      unint64_t v39 = (*(unsigned __int8 *)(*(void *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v38 - 8) + 80);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
      unint64_t v40 = v6 + v39;
      uint64_t v41 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v42 = v40 + *(int *)(v41 + 24);
      uint64_t v43 = type metadata accessor for FormatInspectionItem.Value(0);
      (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
      *(_OWORD *)unint64_t v40 = xmmword_1C157EEF0;
      *(void *)(v40 + 16) = 0;
      *(void *)(v40 + 24) = 0;
      unint64_t v44 = v40 + *(int *)(v41 + 28);
      *(void *)unint64_t v44 = 0;
      *(void *)(v44 + 8) = 0;
      *(unsigned char *)(v44 + 16) = -1;
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
LABEL_8:
      sub_1C09BCFA4(0x6341206570697753, 0xEC0000006E6F6974, 0, 0, v6, &v50);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(inited + 64) = &off_1F1BDEC90;
      uint64_t v27 = swift_allocObject();
      *(void *)(inited + 32) = v27;
      *(void *)(v27 + 48) = v52;
      long long v29 = v50;
      long long v28 = v51;
      break;
    default:
      uint64_t v11 = a1[1];
      id v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v12);
      sub_1C0181BEC(0);
      uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 72);
      unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
      uint64_t v47 = (void *)(v16 + v15);
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v12);
      uint64_t v17 = swift_initStackObject();
      *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1C1527210;
      unint64_t v19 = v18 + v15;
      swift_bridgeObjectRetain();
      sub_1C042F6B0(0x53206E6F74747542, 0xEB00000000657A69, v1, (void *)(v18 + v15));
      uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
      id v21 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
      v21(v19, 0, 1, v20);
      id v22 = (void *)(v19 + v14);
      swift_bridgeObjectRetain();
      sub_1C042F6B0(0x657241202E6E694DLL, 0xEF68746469572061, v11, v22);
      v21((unint64_t)v22, 0, 1, v20);
      sub_1C09BCFA4(0x6F69736E656D6944, 0xE90000000000006ELL, 0, 0, v18, v48);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v17 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v17 + 64) = &off_1F1BDEC90;
      uint64_t v23 = swift_allocObject();
      *(void *)(v17 + 32) = v23;
      *(void *)(v23 + 48) = v49;
      long long v24 = v48[1];
      *(_OWORD *)(v23 + 16) = v48[0];
      *(_OWORD *)(v23 + 32) = v24;
      uint64_t v25 = sub_1C0233FC8(v17);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      uint64_t v26 = sub_1C131B79C(v25);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x656C797453, 0xE500000000000000, (uint64_t)v26, 0x6F69736E656D6944, 0xE90000000000006ELL, v47);
      v21((unint64_t)v47, 0, 1, v20);
      sub_1C09BCFA4(0x6341206570697753, 0xEC0000006E6F6974, 0, 0, v16, &v50);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(inited + 64) = &off_1F1BDEC90;
      uint64_t v27 = swift_allocObject();
      *(void *)(inited + 32) = v27;
      *(void *)(v27 + 48) = v52;
      long long v29 = v50;
      long long v28 = v51;
      break;
  }
  *(_OWORD *)(v27 + 16) = v29;
  *(_OWORD *)(v27 + 32) = v28;
  uint64_t v45 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v45;
}

uint64_t sub_1C097CD08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *sub_1C097CD54(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatGroupCollection(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatGroupCollection(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatCompilerProgress()
{
  return &type metadata for DebugFormatCompilerProgress;
}

uint64_t sub_1C097CE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DebugFormatCompilingPackage();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v12 = (void *)((char *)v18 - v11);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C1144F00();
  uint64_t v15 = v14;
  *id v12 = a1;
  swift_retain();
  sub_1C151630C();
  sub_1C097D460((uint64_t)v12, (uint64_t)v9);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18[1] = a4;
  sub_1C10687A8((uint64_t)v9, v13, v15, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1C097CFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DebugFormatCompilerResultEntry();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v27[1] = a2;
    v27[3] = a4;
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v11, 0);
    uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
    v27[2] = a1;
    uint64_t v13 = a1 + ((v12 + 32) & ~v12);
    uint64_t v14 = *(void *)(v8 + 72);
    do
    {
      sub_1C097D4C4(v13, (uint64_t)v10);
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v15 = v28;
      unint64_t v16 = v29;
      sub_1C097D528((uint64_t)v10);
      uint64_t v17 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v30;
      }
      unint64_t v19 = *(void *)(v17 + 16);
      unint64_t v18 = *(void *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BFF661B8(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v30;
      }
      *(void *)(v17 + 16) = v19 + 1;
      uint64_t v20 = v17 + 16 * v19;
      *(void *)(v20 + 32) = v15;
      *(void *)(v20 + 40) = v16;
      v13 += v14;
      --v11;
    }
    while (v11);
    uint64_t v21 = sub_1BFEF4060(v17);
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v23 = sub_1C0D33AE0(v22, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = v23;
    sub_1C097D584();
    sub_1C097D5DC();
    sub_1C151E93C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v28 = v23;
    swift_bridgeObjectRetain();
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_1C104A2A8(v24);
    uint64_t v25 = v28;
    sub_1C151E93C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a2;
  }
  return v25;
}

uint64_t sub_1C097D3C4()
{
  swift_retain();
  uint64_t v0 = sub_1C1144F00();
  swift_release();
  return v0;
}

uint64_t type metadata accessor for DebugFormatCompilingPackage()
{
  uint64_t result = qword_1EA1A1628;
  if (!qword_1EA1A1628) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C097D460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatCompilingPackage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C097D4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatCompilerResultEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C097D528(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatCompilerResultEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C097D584()
{
  if (!qword_1EA1A3C90)
  {
    type metadata accessor for DebugFormatCompilerResultEntry();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A3C90);
    }
  }
}

unint64_t sub_1C097D5DC()
{
  unint64_t result = qword_1EA1A1620;
  if (!qword_1EA1A1620)
  {
    sub_1C097D584();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1620);
  }
  return result;
}

uint64_t *sub_1C097D634(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    unint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C151631C();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1C097D718(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1C097D790(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C151631C();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_1C097D828(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1C097D8BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1C097D938(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1C097D9C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C097D9D8);
}

uint64_t sub_1C097D9D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151631C();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    int64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C097DA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C097DA9C);
}

void *sub_1C097DA9C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C151631C();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C097DB44()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static FormatResizeConstraint.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  BOOL v6 = *(unsigned char *)a1 == 0;
  if (*(unsigned char *)a1) {
    uint64_t v7 = 0x746867696568;
  }
  else {
    uint64_t v7 = 0x6874646977;
  }
  if (v6) {
    unint64_t v8 = 0xE500000000000000;
  }
  else {
    unint64_t v8 = 0xE600000000000000;
  }
  if (*(unsigned char *)a2) {
    uint64_t v9 = 0x746867696568;
  }
  else {
    uint64_t v9 = 0x6874646977;
  }
  if (*(unsigned char *)a2) {
    unint64_t v10 = 0xE600000000000000;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  if (v7 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n();
    if (v2 != v4) {
      goto LABEL_24;
    }
  }
  else
  {
    char v12 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
    if (v2 != v4) {
      goto LABEL_24;
    }
  }
  if (v3 == v5) {
    return 1;
  }
LABEL_24:
  return sub_1C1520A9C();
}

uint64_t FormatResizeConstraint.Dimension.rawValue.getter()
{
  if (*v0) {
    return 0x746867696568;
  }
  else {
    return 0x6874646977;
  }
}

void FormatResizeConstraint.dimension.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FormatResizeConstraint.targetIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C097DD6C(char *a1, char *a2)
{
  return sub_1C1483D78(*a1, *a2);
}

uint64_t sub_1C097DD78()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C097DDF4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C097DE5C()
{
  return sub_1C1520E0C();
}

void sub_1C097DED4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6874646977;
  if (*v1) {
    uint64_t v2 = 0x746867696568;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1C097DF10()
{
  unint64_t result = qword_1EA1A1638;
  if (!qword_1EA1A1638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1638);
  }
  return result;
}

unint64_t sub_1C097DF64(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C097DF94();
  unint64_t result = sub_1BFC60344();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C097DF94()
{
  unint64_t result = qword_1EA1A1640;
  if (!qword_1EA1A1640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1640);
  }
  return result;
}

unint64_t sub_1C097DFE8(uint64_t a1)
{
  unint64_t result = sub_1C097E010();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C097E010()
{
  unint64_t result = qword_1EA1A1648;
  if (!qword_1EA1A1648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1648);
  }
  return result;
}

uint64_t sub_1C097E064(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C097E160(a1, a2, a3, (uint64_t (*)(void))sub_1BFCDF32C, (uint64_t (*)(void))sub_1BFCF54CC, (uint64_t (*)(void))sub_1C097DF10);
}

unint64_t sub_1C097E0A4(uint64_t a1)
{
  unint64_t result = sub_1C097E0CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C097E0CC()
{
  unint64_t result = qword_1EA1A1650;
  if (!qword_1EA1A1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1650);
  }
  return result;
}

uint64_t sub_1C097E120(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C097E160(a1, a2, a3, (uint64_t (*)(void))sub_1BFE1C96C, (uint64_t (*)(void))sub_1BFDF6500, (uint64_t (*)(void))sub_1C097E1B4);
}

uint64_t sub_1C097E160(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C097E1B4()
{
  unint64_t result = qword_1EA1A1658;
  if (!qword_1EA1A1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1658);
  }
  return result;
}

uint64_t sub_1C097E208(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if ((sub_1C1483D78(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  return sub_1C1520A9C();
}

uint64_t assignWithCopy for FormatResizeConstraint(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatResizeConstraint(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatResizeConstraint()
{
  return &type metadata for FormatResizeConstraint;
}

ValueMetadata *type metadata accessor for FormatResizeConstraint.Dimension()
{
  return &type metadata for FormatResizeConstraint.Dimension;
}

uint64_t FormatSwitchNodeCase.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSwitchNodeCase.expression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

uint64_t sub_1C097E3B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSwitchNodeCase.children.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSwitchNodeCase.children.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatSwitchNodeCase.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSwitchNodeCase.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C097E51C(uint64_t a1)
{
  uint64_t result = sub_1C097E5EC(&qword_1EA1A1660);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C097E560(void *a1)
{
  a1[1] = sub_1C097E5EC(&qword_1EB889BB0);
  a1[2] = sub_1C097E5EC(&qword_1EB866AF8);
  uint64_t result = sub_1C097E5EC(qword_1EA1A1668);
  a1[3] = result;
  return result;
}

uint64_t sub_1C097E5EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatSwitchNodeCase();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C097E62C(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed20FormatSwitchNodeCaseC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C097E638@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSwitchNodeCase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSwitchNodeCase);
}

uint64_t sub_1C097E6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1;
  type metadata accessor for FormatCodingEmptyArrayStrategy();
  swift_getWitnessTable();
  return FormatCodingDefault.init(wrappedValue:)((uint64_t)&v4, a2);
}

uint64_t FormatFeedConfigValue.init(selector:values:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  *a3 = *a1;
  return sub_1C097E6A0(a2, (uint64_t)(a3 + 1));
}

uint64_t sub_1C097E738(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C097E824(char a1)
{
  if (a1) {
    return 0x7365756C6176;
  }
  else {
    return 0x726F7463656C6573;
  }
}

uint64_t sub_1C097E858()
{
  return sub_1C097E824(*v0);
}

uint64_t sub_1C097E86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C097E738(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C097E8A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C097E8F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t FormatFeedConfigValue.encode(to:)(void *a1, void *a2)
{
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[4];
  uint64_t v18 = a2[3];
  uint64_t v19 = v4;
  uint64_t v17 = v5;
  type metadata accessor for FormatFeedConfigValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_1C152083C();
  uint64_t v21 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *v2;
  uint64_t v20 = v2[1];
  uint64_t v16 = v2[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  v23[0] = v9;
  v23[1] = v20;
  char v24 = 0;
  sub_1BFE79808();
  uint64_t v10 = v22;
  sub_1C152078C();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  }
  uint64_t v12 = v21;
  v23[0] = v16;
  char v24 = 1;
  uint64_t v13 = type metadata accessor for FormatCodingEmptyArrayStrategy();
  uint64_t WitnessTable = swift_getWitnessTable();
  KeyedEncodingContainer.encode<A>(_:forKey:)((uint64_t)v23, (uint64_t)&v24, v6, v13, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v6);
}

uint64_t type metadata accessor for FormatFeedConfigValue.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatFeedConfigValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v18 = a3;
  uint64_t v19 = a2;
  type metadata accessor for FormatFeedConfigValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v20 = sub_1C152072C();
  uint64_t v17 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v6 = (char *)&v15 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EBC();
  if (v3) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = a1;
  uint64_t v7 = v18;
  uint64_t v8 = v17;
  char v22 = 0;
  sub_1BFE9420C();
  uint64_t v9 = v20;
  sub_1C152065C();
  uint64_t v15 = v21[0];
  char v22 = 1;
  uint64_t v10 = v21[1];
  uint64_t v11 = type metadata accessor for FormatCodingEmptyArrayStrategy();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v11, WitnessTable, (uint64_t)v21);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v9);
  uint64_t v13 = v21[0];
  *uint64_t v7 = v15;
  v7[1] = v10;
  v7[2] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C097EE28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return FormatFeedConfigValue.init(from:)(a1, *(void *)(a2 + 32), a3);
}

uint64_t sub_1C097EE4C(void *a1, void *a2)
{
  return FormatFeedConfigValue.encode(to:)(a1, a2);
}

uint64_t type metadata accessor for FormatFeedConfigValue()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1C097EE7C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C097EF48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C097EF70()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C097EF8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C097EFA8()
{
  return swift_getWitnessTable();
}

uint64_t destroy for FormatDerivedDataResultBlock(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(unsigned __int16 *)(a1 + 60) >> 9 <= 0x7EuLL) {
    sub_1C017F5B0(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDerivedDataResultBlock(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(unsigned __int16 *)(a2 + 60);
  uint64_t v6 = *(unsigned int *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v5 >> 9 <= 0x7EuLL)
  {
    unint64_t v8 = v6 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v5 << 32);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    uint64_t v12 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_1C017F524(v9, v10, v11, v12, v13, v8);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v13;
    *(_WORD *)(a1 + 60) = WORD2(v8);
    *(_DWORD *)(a1 + 56) = v8;
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 46) = *(_OWORD *)(a2 + 46);
  }
  uint64_t v14 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v14;
  uint64_t v15 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v15;
  uint64_t v16 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v16;
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataResultBlock(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unsigned int v5 = (_OWORD *)(a2 + 16);
  unint64_t v6 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int16 *)(a2 + 60) << 32);
  if (*(unsigned __int16 *)(a1 + 60) >> 9 <= 0x7EuLL)
  {
    if (((v6 >> 41) & 0x7F) == 0x7F)
    {
      sub_1C030EAFC(a1 + 16);
      long long v9 = *(_OWORD *)(a2 + 46);
      long long v10 = *(_OWORD *)(a2 + 32);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)(a1 + 46) = v9;
    }
    else
    {
      uint64_t v16 = *(void *)(a2 + 16);
      uint64_t v17 = *(void *)(a2 + 24);
      uint64_t v18 = *(void *)(a2 + 32);
      uint64_t v19 = *(void *)(a2 + 40);
      uint64_t v20 = *(void *)(a2 + 48);
      sub_1C017F524(v16, v17, v18, v19, v20, *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int16 *)(a2 + 60) << 32));
      uint64_t v21 = *(void *)(a1 + 16);
      uint64_t v22 = *(void *)(a1 + 24);
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v24 = *(void *)(a1 + 40);
      uint64_t v25 = *(void *)(a1 + 48);
      unint64_t v26 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = v17;
      *(void *)(a1 + 32) = v18;
      *(void *)(a1 + 40) = v19;
      *(void *)(a1 + 48) = v20;
      *(_DWORD *)(a1 + 56) = v6;
      *(_WORD *)(a1 + 60) = WORD2(v6);
      sub_1C017F5B0(v21, v22, v23, v24, v25, v26);
    }
  }
  else if (((v6 >> 41) & 0x7F) == 0x7F)
  {
    long long v7 = *v5;
    long long v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 46) = *(_OWORD *)(a2 + 46);
    *uint64_t v4 = v7;
    *(_OWORD *)(a1 + 32) = v8;
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 16);
    uint64_t v12 = *(void *)(a2 + 24);
    uint64_t v13 = *(void *)(a2 + 32);
    uint64_t v14 = *(void *)(a2 + 40);
    uint64_t v15 = *(void *)(a2 + 48);
    sub_1C017F524(v11, v12, v13, v14, v15, *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int16 *)(a2 + 60) << 32));
    *(void *)(a1 + 16) = v11;
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v13;
    *(void *)(a1 + 40) = v14;
    *(void *)(a1 + 48) = v15;
    *(_WORD *)(a1 + 60) = WORD2(v6);
    *(_DWORD *)(a1 + 56) = v6;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataResultBlock(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(unsigned __int16 *)(a1 + 60) >> 9 <= 0x7EuLL)
  {
    unint64_t v5 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int16 *)(a2 + 60) << 32);
    if (((v5 >> 41) & 0x7F) != 0x7F)
    {
      unint64_t v7 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
      uint64_t v8 = *(void *)(a2 + 48);
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = *(void *)(a1 + 40);
      uint64_t v13 = *(void *)(a1 + 48);
      long long v14 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v14;
      *(void *)(a1 + 48) = v8;
      *(_DWORD *)(a1 + 56) = v5;
      *(_WORD *)(a1 + 60) = WORD2(v5);
      sub_1C017F5B0(v9, v10, v11, v12, v13, v7);
      goto LABEL_6;
    }
    sub_1C030EAFC(a1 + 16);
  }
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 46) = *(_OWORD *)(a2 + 46);
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedDataResultBlock()
{
  return &type metadata for FormatDerivedDataResultBlock;
}

id sub_1C097F4FC()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController____lazy_storage___nextBarButtonItem;
  BOOL v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController____lazy_storage___nextBarButtonItem];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController____lazy_storage___nextBarButtonItem];
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    v18[3] = ObjectType;
    v18[0] = v0;
    unint64_t v5 = v0;
    long long v6 = (void *)sub_1C151E5EC();
    if (ObjectType)
    {
      unint64_t v7 = __swift_project_boxed_opaque_existential_1(v18, ObjectType);
      uint64_t v8 = *(void *)(ObjectType - 8);
      __n128 v9 = MEMORY[0x1F4188790](v7);
      uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
      uint64_t v12 = sub_1C1520A7C();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      uint64_t v12 = 0;
    }
    id v13 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v14 = objc_msgSend(v13, sel_initWithTitle_style_target_action_, v6, 2, v12, sel_doNext, v18[0]);

    swift_unknownObjectRelease();
    uint64_t v15 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v14;
    id v3 = v14;

    BOOL v2 = 0;
  }
  id v16 = v2;
  return v3;
}

void sub_1C097F6E0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_1C151CCDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151CCEC();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = MEMORY[0x1F4188790](v6).n128_u64[0];
  uint64_t v10 = (uint64_t *)((char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55.receiver = v0;
  v55.super_class = ObjectType;
  objc_msgSendSuper2(&v55, sel_viewDidLoad, v8);
  id v11 = objc_msgSend(v0, sel_view);
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v12 = v11;
  uint64_t v47 = v7;
  id v48 = v5;
  uint64_t v49 = v6;
  uint64_t v50 = v3;
  uint64_t v51 = v2;
  uint64_t v52 = ObjectType;
  id v13 = self;
  id v14 = objc_msgSend(v13, sel_systemBackgroundColor);
  objc_msgSend(v12, sel_setBackgroundColor_, v14);

  id v15 = objc_msgSend(v0, sel_navigationItem);
  id v53 = v13;
  id v16 = objc_msgSend(v13, sel_systemBackgroundColor);
  sub_1C149EA4C(v15, (uint64_t)v16);

  id v17 = objc_msgSend(v0, sel_navigationItem);
  uint64_t v18 = (void *)sub_1C151E5EC();
  objc_msgSend(v17, sel_setTitle_, v18);

  id v19 = objc_msgSend(v0, sel_navigationItem);
  sub_1BFE4DBE0();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C15320E0;
  uint64_t v21 = (void *)sub_1C151E5EC();
  id v22 = objc_msgSend(self, sel_systemImageNamed_, v21);

  if (!v22)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v23 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  uint64_t v24 = v0;
  id v25 = objc_msgSend(v23, sel_initWithImage_style_target_action_, v22, 0, v24, sel_doDismissView);

  *(void *)(v20 + 32) = v25;
  uint64_t v54 = v20;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  unint64_t v26 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setRightBarButtonItems_, v26);

  id v27 = sub_1C097F4FC();
  objc_msgSend(v27, sel_setEnabled_, 0);

  id v28 = sub_1C097F4FC();
  id v29 = objc_msgSend(v53, sel_systemBlueColor);
  objc_msgSend(v28, sel_setTintColor_, v29);

  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1C15320F0;
  *(void *)(v30 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(void *)(v30 + 40) = sub_1C097F4FC();
  uint64_t v54 = v30;
  sub_1C151EBEC();
  uint64_t v31 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setToolbarItems_, v31);

  unint64_t v32 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_tableView];
  objc_msgSend(v32, sel_setDataSource_, v24);
  objc_msgSend(v32, sel_setDelegate_, v24);
  objc_msgSend(v32, sel_setAlwaysBounceVertical_, 1);
  id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v32, sel_setTableFooterView_, v33);

  sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
  sub_1C151F26C();
  type metadata accessor for DebugFormatMarkdownHeaderFooterView();
  sub_1C151F25C();
  id v34 = objc_msgSend(v24, sel_view);
  if (v34)
  {
    unint64_t v35 = v34;
    objc_msgSend(v34, sel_addSubview_, v32);

    sub_1C151AB8C();
    uint64_t v36 = sub_1C151BECC();
    uint64_t v37 = sub_1C151BEBC();
    uint64_t v38 = MEMORY[0x1E4FACFE8];
    void v10[3] = v36;
    v10[4] = v38;
    *uint64_t v10 = v37;
    v10[5] = 0x474E4944414F4CLL;
    v10[6] = 0xE700000000000000;
    uint64_t v39 = v47;
    uint64_t v40 = v49;
    (*(void (**)(uint64_t *, void, uint64_t))(v47 + 104))(v10, *MEMORY[0x1E4FAD858], v49);
    uint64_t v42 = v50;
    uint64_t v41 = v51;
    uint64_t v43 = v48;
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v48, *MEMORY[0x1E4FAD888], v51);
    sub_1C151AB7C();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
    uint64_t v44 = (*(uint64_t (**)(uint64_t *, uint64_t))(v39 + 8))(v10, v40);
    MEMORY[0x1F4188790](v44);
    *(&v47 - 2) = (uint64_t)v24;
    sub_1C0981D04();
    sub_1C151932C();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    uint64_t v45 = (void *)sub_1C151F56C();
    sub_1C151901C();
    swift_release();

    id v46 = (void *)sub_1C151F56C();
    sub_1C151904C();
    swift_release();
    swift_release();

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1C098005C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C1515FDC();
  __n128 v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = &v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate];
  int v8 = v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 56];
  if (v8 != 255)
  {
    uint64_t v9 = *((void *)v7 + 6);
    uint64_t v19 = *((void *)v7 + 5);
    uint64_t v20 = v9;
    uint64_t v11 = *((void *)v7 + 3);
    uint64_t v10 = *((void *)v7 + 4);
    uint64_t v13 = *((void *)v7 + 1);
    uint64_t v12 = *((void *)v7 + 2);
    *(void *)&long long v21 = *(void *)v7;
    uint64_t v14 = v21;
    *((void *)&v21 + 1) = v13;
    uint64_t v22 = v12;
    uint64_t v23 = v11;
    uint64_t v24 = v10;
    uint64_t v25 = v19;
    uint64_t v26 = v9;
    uint64_t v15 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_editor];
    char v27 = v8;
    (*(void (**)(char *, char *, __n128))(v3 + 16))(v6, &v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_editorURL], v4);
    objc_allocWithZone((Class)type metadata accessor for DebugFormatCreatePackageViewController());
    swift_retain();
    sub_1C0981CD4(v14, v13, v12, v11, v10, v19, v20, v8);
    id v16 = sub_1C0A74740(v15, (uint64_t)v6, &v21);
    swift_release();
    id v17 = objc_msgSend(v1, sel_navigationController);
    if (v17)
    {
      uint64_t v18 = v17;
      objc_msgSend(v17, sel_pushViewController_animated_, v16, 1);
    }
  }
}

uint64_t sub_1C098039C()
{
  return type metadata accessor for DebugFormatSelectPackageViewController();
}

uint64_t type metadata accessor for DebugFormatSelectPackageViewController()
{
  uint64_t result = qword_1EA1A17C0;
  if (!qword_1EA1A17C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C09803F0()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C09804E0(uint64_t a1)
{
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates);
  if (result >= *(void *)(v4 + 16))
  {
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v40 = v1;
  uint64_t v5 = v4 + (result << 6);
  uint64_t v37 = a1;
  uint64_t v7 = *(void *)(v5 + 32);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v8 = *(void *)(v5 + 48);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v10 = *(void *)(v5 + 64);
  uint64_t v11 = *(void *)(v5 + 72);
  uint64_t v12 = *(void *)(v5 + 80);
  unsigned __int8 v13 = *(unsigned char *)(v5 + 88);
  sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
  uint64_t v38 = v7;
  uint64_t v14 = v7;
  uint64_t v15 = v8;
  uint64_t v16 = v6;
  uint64_t v39 = v10;
  sub_1C064828C(v14, v6, v15, v9, v10, v11, v12, v13);
  id v17 = (void *)sub_1C151F24C();
  id v18 = objc_msgSend(v17, sel_textLabel);
  if (v18)
  {
    uint64_t v19 = v18;
    objc_msgSend(v18, sel_setNumberOfLines_, 0);
  }
  id v20 = objc_msgSend(v17, sel_textLabel, v37);
  if (v20)
  {
    long long v21 = v20;
    id v22 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
    objc_msgSend(v21, sel_setFont_, v22);
  }
  id v23 = objc_msgSend(v17, sel_textLabel);
  if (v23)
  {
    uint64_t v24 = v23;
    sub_1BFF27ECC();
    sub_1C151FE5C();
    uint64_t v25 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_setText_, v25);
  }
  objc_msgSend(v17, sel_setSelectionStyle_, 0);
  swift_bridgeObjectRetain();
  sub_1C0648314(v38, v16, v15, v9, v39, v11, v12, v13);
  uint64_t v26 = (void *)(v40 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate);
  if (*(unsigned __int8 *)(v40 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 56) == 255)
  {
    char v28 = 0;
  }
  else if (v38 == *v26 && v16 == v26[1])
  {
    char v28 = 1;
  }
  else
  {
    char v28 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(v17, sel_imageView);
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v31 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(self, sel_systemImageNamed_, v31);

    objc_msgSend(v30, sel_setImage_, v32);
  }
  id v33 = self;
  id v34 = v17;
  unint64_t v35 = &selRef_systemBlueColor;
  if ((v28 & 1) == 0) {
    unint64_t v35 = &selRef_secondarySystemFillColor;
  }
  id v36 = [v33 *v35];
  objc_msgSend(v34, sel_setTintColor_, v36);

  return (unint64_t)v34;
}

uint64_t sub_1C0980B4C(uint64_t a1)
{
  uint64_t v17 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v17 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v17);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_debugFormatService);
  sub_1C1515EDC();
  uint64_t v18 = v8;
  uint64_t v19 = v7;
  id v20 = &unk_1F1B89070;
  sub_1C151932C();
  *(void *)(swift_allocObject() + 16) = &unk_1F1B89070;
  uint64_t v9 = (void *)sub_1C1518E7C();
  sub_1C0981D04();
  sub_1C1518FFC();
  swift_release();
  swift_release();

  uint64_t v10 = v17;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v17);
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 10;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v12 + v11, v4, v10);
  *(void *)(v12 + ((v3 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = &unk_1F1B89070;
  unsigned __int8 v13 = (void *)sub_1C1518E7C();
  type metadata accessor for DebugFormatService();
  uint64_t v14 = sub_1C15190EC();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v10);
  return v14;
}

uint64_t sub_1C0980E08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C151CCDC();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v39 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151CCEC();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x1F4188790](v5);
  id v36 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151EC4C();
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates;
  *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates) = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + v8);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 32);
    uint64_t v12 = *(void *)(v9 + 40);
    uint64_t v14 = *(void *)(v9 + 48);
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v15 = *(void *)(v9 + 64);
    uint64_t v16 = *(void *)(v9 + 72);
    uint64_t v17 = *(void *)(v9 + 80);
    unsigned __int8 v18 = *(unsigned char *)(v9 + 88);
    sub_1C064828C(v11, v12, v14, v13, v15, v16, v17, v18);
    uint64_t v10 = v11;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    unsigned __int8 v18 = -1;
  }
  uint64_t v19 = a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate;
  uint64_t v20 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate);
  uint64_t v21 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 8);
  uint64_t v22 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 16);
  uint64_t v23 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 24);
  uint64_t v24 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 32);
  uint64_t v25 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 40);
  uint64_t v26 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 48);
  *(void *)uint64_t v19 = v10;
  *(void *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v13;
  *(void *)(v19 + 32) = v15;
  *(void *)(v19 + 40) = v16;
  *(void *)(v19 + 48) = v17;
  unsigned __int8 v27 = *(unsigned char *)(v19 + 56);
  *(unsigned char *)(v19 + 56) = v18;
  sub_1C0981C0C(v20, v21, v22, v23, v24, v25, v26, v27);
  id v28 = sub_1C097F4FC();
  objc_msgSend(v28, sel_setEnabled_, *(unsigned __int8 *)(v19 + 56) != 255);

  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_tableView), sel_reloadData);
  uint64_t v30 = v36;
  uint64_t v29 = v37;
  uint64_t v31 = v38;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E4FAD860], v38);
  id v33 = v39;
  uint64_t v32 = v40;
  uint64_t v34 = v41;
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v39, *MEMORY[0x1E4FAD880], v41);
  sub_1C151AB7C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v31);
}

uint64_t sub_1C0981128@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0981134(void *a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v3 = sub_1C151CCDC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151CCEC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  sub_1C02306F8(a1, 0, 0, 0xD000000000000019, 0x80000001C1616670);
  uint64_t v16 = *(void *)(v16 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_coverViewManager);
  *uint64_t v10 = 0xD000000000000019;
  v10[1] = 0x80000001C1616670;
  uint64_t v11 = sub_1C1519FFC();
  uint64_t v12 = MEMORY[0x1E4FABBF0];
  v10[5] = v11;
  v10[6] = v12;
  __swift_allocate_boxed_opaque_existential_0(v10 + 2);
  sub_1C1519FDC();
  swift_getErrorValue();
  v10[7] = sub_1C1520D3C();
  v10[8] = v13;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAD870], v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAD880], v3);
  sub_1C151AB7C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C09813D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1C06599C4(v8);
  sub_1C0981D6C();
  sub_1C1517D9C();
  uint64_t result = swift_release();
  if (!v3)
  {
    *a3 = v10;
    a3[1] = v6;
    a3[2] = v7;
    a3[3] = a2;
    swift_bridgeObjectRetain();
    return sub_1BFE95820(v6, v7);
  }
  return result;
}

id sub_1C09814A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)&v3[v7] = v8;
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_debugFormatService;
  type metadata accessor for DebugFormatService();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)&v3[v9] = v10;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_coverViewManager;
  sub_1C151ABAC();
  swift_allocObject();
  uint64_t v12 = v3;
  *(void *)&v3[v11] = sub_1C151AB9C();
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates] = MEMORY[0x1E4FBC860];
  uint64_t v13 = &v12[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  *((void *)v13 + 6) = 0;
  v13[56] = -1;
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_tableView;
  *(void *)&v12[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController____lazy_storage___nextBarButtonItem] = 0;
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_editor] = a1;
  uint64_t v15 = &v12[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_editorURL];
  uint64_t v16 = sub_1C1515FDC();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a2, v16);
  swift_retain();

  v20.receiver = v12;
  v20.super_class = ObjectType;
  id v18 = objc_msgSendSuper2(&v20, sel_initWithNibName_bundle_, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, v16);
  return v18;
}

void sub_1C09816A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)&v1[v2] = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_debugFormatService;
  type metadata accessor for DebugFormatService();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)&v1[v4] = v5;
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_coverViewManager;
  sub_1C151ABAC();
  swift_allocObject();
  *(void *)&v1[v6] = sub_1C151AB9C();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates] = MEMORY[0x1E4FBC860];
  uint64_t v7 = &v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *((void *)v7 + 6) = 0;
  v7[56] = -1;
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_tableView;
  *(void *)&v1[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController____lazy_storage___nextBarButtonItem] = 0;

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C09817F8()
{
  sub_1C0981C20();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v19[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C1515B3C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19[-1] - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate;
  if (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 56) == 255) {
    return 0;
  }
  uint64_t v13 = *(void *)(v11 + 32);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v11 + 40);
  sub_1BFC66384(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_editor)+ OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_sourceTheme, (uint64_t)v19);
  swift_bridgeObjectRetain();
  sub_1C10A7FB0(v13, v12, v19, (uint64_t)v3, 13.0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C0981C78((uint64_t)v3);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    type metadata accessor for DebugFormatMarkdownHeaderFooterView();
    uint64_t v14 = sub_1C151F23C();
    uint64_t v15 = *(void **)(v14 + OBJC_IVAR____TtC8NewsFeed35DebugFormatMarkdownHeaderFooterView_label);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1C0);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    uint64_t v16 = (void *)sub_1C151F5EC();
    objc_msgSend(v15, sel_setAttributedText_, v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return v14;
}

unint64_t sub_1C0981AE0()
{
  uint64_t v1 = v0;
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates);
  if (result >= *(void *)(v3 + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v4 = v3 + (result << 6);
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = *(void *)(v4 + 40);
  uint64_t v7 = *(void *)(v4 + 48);
  uint64_t v8 = *(void *)(v4 + 56);
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t v10 = *(void *)(v4 + 72);
  uint64_t v11 = *(void *)(v4 + 80);
  uint64_t v12 = v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate;
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate);
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 8);
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 16);
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 24);
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 32);
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 40);
  uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 48);
  unsigned __int8 v20 = *(unsigned char *)(v4 + 88);
  unsigned __int8 v21 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 56);
  *(void *)uint64_t v12 = v5;
  *(void *)(v12 + 8) = v6;
  *(void *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v8;
  *(void *)(v12 + 32) = v9;
  *(void *)(v12 + 40) = v10;
  *(void *)(v12 + 48) = v11;
  *(unsigned char *)(v12 + 56) = v20;
  sub_1C064828C(v5, v6, v7, v8, v9, v10, v11, v20);
  sub_1C0981C0C(v13, v14, v15, v16, v17, v18, v19, v21);
  id v22 = sub_1C097F4FC();
  objc_msgSend(v22, sel_setEnabled_, *(unsigned __int8 *)(v12 + 56) != 255);

  uint64_t v23 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_tableView);
  return (unint64_t)objc_msgSend(v23, sel_reloadData);
}

uint64_t sub_1C0981C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  if (a8 != 0xFF) {
    return sub_1C0648314(a1, a2, a3, a4, a5, a6, a7, a8);
  }
  return a1;
}

void sub_1C0981C20()
{
  if (!qword_1EA1A17D0)
  {
    sub_1C1515B3C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A17D0);
    }
  }
}

uint64_t sub_1C0981C78(uint64_t a1)
{
  sub_1C0981C20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0981CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  if (a8 != 0xFF) {
    return sub_1C064828C(a1, a2, a3, a4, a5, a6, a7, a8);
  }
  return a1;
}

uint64_t sub_1C0981CE8()
{
  return sub_1C0980B4C(*(void *)(v0 + 16));
}

void sub_1C0981D04()
{
  if (!qword_1EA1A17F0)
  {
    sub_1C0981D6C();
    sub_1C0981DC0();
    unint64_t v0 = type metadata accessor for DebugFormatServiceResult();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A17F0);
    }
  }
}

unint64_t sub_1C0981D6C()
{
  unint64_t result = qword_1EA1A17F8;
  if (!qword_1EA1A17F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A17F8);
  }
  return result;
}

unint64_t sub_1C0981DC0()
{
  unint64_t result = qword_1EA1A1800;
  if (!qword_1EA1A1800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1800);
  }
  return result;
}

uint64_t sub_1C0981E14()
{
  return sub_1C1149B88();
}

uint64_t sub_1C0981E34()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0981E6C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C09813D4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C0981E88()
{
  uint64_t v1 = sub_1C1515FDC();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0981F2C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C1515FDC() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1C102E19C(a1, a2, *(void *)(v2 + 16), v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void destroy for FormatMenuData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 <= 0xFD)
  {
    uint64_t v3 = *(void **)(a1 + 8);
    sub_1BFF43600(v3, v2);
  }
}

uint64_t _s8NewsFeed14FormatMenuDataVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = (void *)(a1 + 8);
  uint64_t v4 = a2 + 8;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    id v6 = *(id *)v4;
    sub_1BFF43A68(*(id *)v4, v5);
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v5;
  }
  else
  {
    *uint64_t v3 = *(void *)v4;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(v4 + 8);
  }
  return a1;
}

uint64_t assignWithCopy for FormatMenuData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + 8);
  uint64_t v5 = a2 + 8;
  unsigned int v6 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      id v10 = *(id *)v5;
      sub_1BFF43A68(*(id *)v5, v6);
      uint64_t v11 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v10;
      unsigned __int8 v12 = *(unsigned char *)(a1 + 16);
      *(unsigned char *)(a1 + 16) = v6;
      sub_1BFF43600(v11, v12);
    }
    else
    {
      sub_1C0982188(a1 + 8);
      char v8 = *(unsigned char *)(v5 + 8);
      *uint64_t v4 = *(void *)v5;
      *(unsigned char *)(a1 + 16) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    id v9 = *(id *)v5;
    sub_1BFF43A68(*(id *)v5, v6);
    *(void *)(a1 + 8) = v9;
    *(unsigned char *)(a1 + 16) = v6;
  }
  else
  {
    id v7 = *(id *)v5;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(v5 + 8);
    *uint64_t v4 = v7;
  }
  return a1;
}

uint64_t sub_1C0982188(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatMenuData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a2 + 8);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 16);
  if (v5 <= 0xFD)
  {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 16);
    if (v6 <= 0xFD)
    {
      id v7 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = *v4;
      *(unsigned char *)(a1 + 16) = v6;
      sub_1BFF43600(v7, v5);
      return a1;
    }
    sub_1C0982188(a1 + 8);
  }
  *(void *)(a1 + 8) = *v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupTag(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupTag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuData()
{
  return &type metadata for FormatMenuData;
}

void sub_1C0982304(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (id *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = type metadata accessor for FeedItem(0);
  uint64_t v5 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  id v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v26 - v9;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_init);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return;
  }
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v14 = a1;
  uint64_t v15 = *(void *)(v5 + 72);
  uint64_t v26 = v14;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1BFEE6734(v13, (uint64_t)v10);
    sub_1BFEE6734((uint64_t)v10, (uint64_t)v7);
    if (swift_getEnumCaseMultiPayload() != 3) {
      break;
    }
    sub_1C03FA8C8((uint64_t)v7, (uint64_t)v4);
    if (objc_msgSend(v4[5], sel_hasThumbnail))
    {
      uint64_t v24 = (void *)sub_1C151E5EC();
      id v17 = objc_msgSend(self, sel_systemImageNamed_, v24);

      if (!v17) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v16 = (void *)sub_1C151E5EC();
      id v17 = objc_msgSend(self, sel_systemImageNamed_, v16);

      if (!v17) {
        goto LABEL_15;
      }
    }
    uint64_t v18 = type metadata accessor for FeedHeadline;
    uint64_t v19 = (uint64_t)v4;
LABEL_5:
    sub_1BFEE3040(v19, v18);
    id v20 = objc_msgSend(self, sel_configurationWithPointSize_, 15.0);
    id v21 = objc_msgSend(v17, sel_imageWithConfiguration_, v20);

    id v22 = objc_msgSend(self, sel_textAttachmentWithImage_, v21);
    id v23 = objc_msgSend(self, sel_attributedStringWithAttachment_, v22);

    objc_msgSend(v11, sel_appendAttributedString_, v23);
    sub_1BFEE3040((uint64_t)v10, type metadata accessor for FeedItem);
    v13 += v15;
    if (!--v12)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  uint64_t v25 = (void *)sub_1C151E5EC();
  id v17 = objc_msgSend(self, sel_systemImageNamed_, v25);

  if (v17)
  {
    uint64_t v18 = type metadata accessor for FeedItem;
    uint64_t v19 = (uint64_t)v7;
    goto LABEL_5;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

ValueMetadata *type metadata accessor for DebugFormatTestCase()
{
  return &type metadata for DebugFormatTestCase;
}

void *Array<A>.webArchives.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 40;
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (*(unsigned char *)(v2 + 32) == 15)
    {
      uint64_t v6 = *(void *)(v2 - 8);
      uint64_t v5 = *(void *)v2;
      uint64_t v8 = *(void *)(v2 + 8);
      uint64_t v7 = *(void *)(v2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1C0EE029C(0, v3[2] + 1, 1, v3);
      }
      unint64_t v10 = v3[2];
      unint64_t v9 = v3[3];
      if (v10 >= v9 >> 1) {
        uint64_t v3 = sub_1C0EE029C((void *)(v9 > 1), v10 + 1, 1, v3);
      }
      v3[2] = v10 + 1;
      uint64_t v4 = &v3[4 * v10];
      v4[4] = v6;
      v4[5] = v5;
      v4[6] = v8;
      v4[7] = v7;
    }
    v2 += 48;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void *Array<A>.resources.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 40;
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (*(unsigned char *)(v2 + 32) == 16)
    {
      uint64_t v6 = *(void *)(v2 - 8);
      uint64_t v5 = *(void *)v2;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1C0EE03CC(0, v3[2] + 1, 1, v3);
      }
      unint64_t v8 = v3[2];
      unint64_t v7 = v3[3];
      if (v8 >= v7 >> 1) {
        uint64_t v3 = sub_1C0EE03CC((void *)(v7 > 1), v8 + 1, 1, v3);
      }
      v3[2] = v8 + 1;
      uint64_t v4 = &v3[2 * v8];
      v4[4] = v6;
      v4[5] = v5;
    }
    v2 += 48;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Array<A>.tags.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 3)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.tagFeeds.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 4)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.articleLists.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 1)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.issues.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 2)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.hasWebEmbedDataSource.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  for (uint64_t i = (unsigned char *)(a1 + 72); ; i += 48)
  {
    if (*i == 17)
    {
      int8x16_t v3 = vorrq_s8(*(int8x16_t *)(i - 40), *(int8x16_t *)(i - 24));
      if (!(*(void *)&vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL)) | *((void *)i - 1))) {
        break;
      }
    }
    if (!--v1) {
      return 0;
    }
  }
  return 1;
}

uint64_t Array<A>.scores.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 8)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.standings.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 9)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.brackets.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 10)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.boxScores.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 11)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.lineScores.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 12)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.injuryReports.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 13)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.keyPlayers.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 14)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.puzzles.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 5)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.puzzleTypes.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(a1 + 72);
    do
    {
      if (*v4 == 6)
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

void *Array<A>.puzzleStatistics.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (unsigned char *)(swift_bridgeObjectRetain() + 72);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (*v2 == 7)
    {
      uint64_t v6 = *((void *)v2 - 2);
      uint64_t v5 = *((void *)v2 - 1);
      uint64_t v7 = *((void *)v2 - 4);
      uint64_t v8 = *((void *)v2 - 3);
      uint64_t v9 = *((void *)v2 - 5);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1C0EE0558(0, v3[2] + 1, 1, v3);
      }
      unint64_t v11 = v3[2];
      unint64_t v10 = v3[3];
      if (v11 >= v10 >> 1) {
        uint64_t v3 = sub_1C0EE0558((void *)(v10 > 1), v11 + 1, 1, v3);
      }
      v3[2] = v11 + 1;
      uint64_t v4 = &v3[5 * v11];
      v4[4] = v9;
      v4[5] = v7;
      v4[6] = v8;
      v4[7] = v6;
      v4[8] = v5;
    }
    v2 += 48;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t FormatContentRequirement.sidecarDedupeIdentifier.getter()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t result = 0;
  switch(*(unsigned char *)(v0 + 40))
  {
    case 1:
      strcpy((char *)v13, "articleList::");
      HIWORD(v13[1]) = -4864;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 1);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 1;
      goto LABEL_17;
    case 2:
      strcpy((char *)v13, "issue::");
      v13[1] = 0xE700000000000000;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 2);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 2;
      goto LABEL_17;
    case 3:
      v13[0] = 0x3A3A676174;
      v13[1] = 0xE500000000000000;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 3);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 3;
      goto LABEL_17;
    case 4:
      strcpy((char *)v13, "tagFeed::");
      WORD1(v13[1]) = 0;
      HIDWORD(v13[1]) = -385875968;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 4);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 4;
      goto LABEL_17;
    case 5:
      strcpy((char *)v13, "puzzle::");
      BYTE1(v13[1]) = 0;
      WORD1(v13[1]) = 0;
      HIDWORD(v13[1]) = -402653184;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 5);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 5;
      goto LABEL_17;
    case 6:
      strcpy((char *)v13, "puzzleType::");
      BYTE5(v13[1]) = 0;
      HIWORD(v13[1]) = -5120;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 6);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 6;
      goto LABEL_17;
    case 7:
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      v13[0] = 0xD000000000000011;
      v13[1] = 0x80000001C16166D0;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 7;
      goto LABEL_17;
    case 8:
      strcpy((char *)v13, "score::");
      v13[1] = 0xE700000000000000;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 8);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 8;
      goto LABEL_17;
    case 9:
      strcpy((char *)v13, "standing::");
      BYTE3(v13[1]) = 0;
      HIDWORD(v13[1]) = -369098752;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 9);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 9;
      goto LABEL_17;
    case 0xA:
      strcpy((char *)v13, "bracket::");
      WORD1(v13[1]) = 0;
      HIDWORD(v13[1]) = -385875968;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 10);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 10;
      goto LABEL_17;
    case 0xB:
      strcpy((char *)v13, "boxScore::");
      BYTE3(v13[1]) = 0;
      HIDWORD(v13[1]) = -369098752;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 11);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 11;
      goto LABEL_17;
    case 0xC:
      strcpy((char *)v13, "lineScore::");
      HIDWORD(v13[1]) = -352321536;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 12);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 12;
      goto LABEL_17;
    case 0xD:
      swift_retain();
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v13, "injuryReport::");
      HIBYTE(v13[1]) = -18;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 13;
      goto LABEL_17;
    case 0xE:
      strcpy((char *)v13, "keyPlayer::");
      HIDWORD(v13[1]) = -352321536;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 14);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 14;
      goto LABEL_17;
    case 0xF:
    case 0x10:
    case 0x11:
      return result;
    default:
      strcpy((char *)v13, "article::");
      WORD1(v13[1]) = 0;
      HIDWORD(v13[1]) = -385875968;
      sub_1BFC9CF8C(v2, v1, v4, v3, v5, 0);
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v7 = v2;
      uint64_t v8 = v1;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 0;
LABEL_17:
      sub_1C004CD84(v7, v8, v9, v10, v11, v12);
      return v13[0];
  }
}

uint64_t assignWithCopy for FormatContentRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1BFC9CF8C(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1C004CD84(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for FormatContentRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1C004CD84(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatContentRequirement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xEF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 239);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 0x11) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatContentRequirement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 239;
    if (a3 >= 0xEF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xEF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0983FD0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 0x10u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 17);
  }
}

uint64_t sub_1C0983FE8(uint64_t result, unsigned int a2)
{
  if (a2 >= 0x11)
  {
    *(void *)uint64_t result = a2 - 17;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 17;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentRequirement()
{
  return &type metadata for FormatContentRequirement;
}

void *__swift_memcpy385_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x181uLL);
}

uint64_t getEnumTagSinglePayload for HMultiLayoutItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 385)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 384);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HMultiLayoutItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 376) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(unsigned char *)(result + 384) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 385) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 385) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 384) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0984118(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 384);
}

uint64_t sub_1C0984120(uint64_t result, char a2)
{
  *(unsigned char *)(result + 384) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HMultiLayoutItem()
{
  return &type metadata for HMultiLayoutItem;
}

uint64_t destroy for HGroupLayoutContext(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 392);
  if (v2 >= 2) {
    unsigned int v2 = *(_DWORD *)a1 + 2;
  }
  swift_release();
  if (v2 == 1)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 96) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 128)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 104);
      }
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 160);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {

    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 136) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
    unsigned int v3 = *(void **)(a1 + 152);
    if (v3)
    {

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 232) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 280) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 296);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t initializeWithCopy for HGroupLayoutContext(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 392);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  *(void *)a1 = *(void *)a2;
  if (v4 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    uint64_t v6 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v6;
    uint64_t v7 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v7;
    uint64_t v8 = *(void *)(a2 + 96);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8 == 1)
    {
      long long v9 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v9;
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      long long v10 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v10;
    }
    else
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v8;
      uint64_t v18 = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      if (v18)
      {
        uint64_t v19 = *(void *)(a2 + 136);
        *(void *)(a1 + 128) = v18;
        *(void *)(a1 + 136) = v19;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))(a1 + 104, a2 + 104, v18);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
      }
      else
      {
        long long v48 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = v48;
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      }
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    }
    long long v49 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 184) = v49;
    (**(void (***)(uint64_t, uint64_t))(v49 - 8))(a1 + 160, a2 + 160);
    uint64_t v50 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v50;
    uint64_t v51 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v51;
    uint64_t v53 = *(void *)(a2 + 232);
    uint64_t v52 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = v53;
    *(void *)(a1 + 240) = v52;
    *(unsigned char *)(a1 + 392) = 1;
  }
  else
  {
    uint64_t v12 = *(void **)(a2 + 8);
    uint64_t v11 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v11;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    uint64_t v13 = *(void **)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v13;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    uint64_t v14 = *(void *)(a2 + 88);
    swift_retain();
    id v15 = v12;
    swift_bridgeObjectRetain();
    id v16 = v13;
    if (v14 == 1)
    {
      long long v17 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v17;
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    }
    else
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v14;
      uint64_t v20 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v20;
      id v22 = *(void **)(a2 + 112);
      uint64_t v21 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = v22;
      *(void *)(a1 + 120) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = v22;
    }
    uint64_t v24 = (void *)(a2 + 128);
    unint64_t v25 = *(void *)(a2 + 136);
    if (v25 >= 0x11)
    {
      *(void *)(a1 + 128) = *v24;
      *(void *)(a1 + 136) = v25;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 128) = *(_OWORD *)v24;
    }
    uint64_t v26 = *(void **)(a2 + 152);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    if (v26)
    {
      uint64_t v27 = *(void *)(a2 + 160);
      uint64_t v28 = *(void *)(a2 + 168);
      *(void *)(a1 + 152) = v26;
      *(void *)(a1 + 160) = v27;
      *(void *)(a1 + 168) = v28;
      *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      uint64_t v29 = *(void **)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v29;
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      uint64_t v30 = *(void *)(a2 + 232);
      id v31 = v26;
      swift_bridgeObjectRetain();
      id v32 = v29;
      if (v30 == 1)
      {
        long long v33 = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
        *(_OWORD *)(a1 + 240) = v33;
        *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
      }
      else
      {
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = v30;
        uint64_t v38 = *(void *)(a2 + 248);
        *(void *)(a1 + 240) = *(void *)(a2 + 240);
        *(void *)(a1 + 248) = v38;
        uint64_t v40 = *(void **)(a2 + 256);
        uint64_t v39 = *(void *)(a2 + 264);
        *(void *)(a1 + 256) = v40;
        *(void *)(a1 + 264) = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v41 = v40;
      }
      uint64_t v42 = (void *)(a2 + 272);
      unint64_t v43 = *(void *)(a2 + 280);
      if (v43 >= 0x11)
      {
        *(void *)(a1 + 272) = *v42;
        *(void *)(a1 + 280) = v43;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 272) = *(_OWORD *)v42;
      }
      *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
    }
    else
    {
      long long v34 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 264) = v34;
      *(_OWORD *)(a1 + 273) = *(_OWORD *)(a2 + 273);
      long long v35 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v35;
      long long v36 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v36;
      long long v37 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v37;
    }
    long long v44 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 320) = v44;
    (**(void (***)(uint64_t, uint64_t))(v44 - 8))(a1 + 296, a2 + 296);
    uint64_t v45 = *(void *)(a2 + 344);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = v45;
    uint64_t v46 = *(void *)(a2 + 360);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = v46;
    uint64_t v47 = *(void *)(a2 + 376);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = v47;
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(unsigned char *)(a1 + 392) = 0;
    swift_retain();
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HGroupLayoutContext(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 392);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    swift_release();
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 96) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 128)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 104);
        }
      }
      __swift_destroy_boxed_opaque_existential_1(a1 + 160);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 136) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v5 = *(void **)(a1 + 152);
      if (v5)
      {

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 232) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 280) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
      }
      __swift_destroy_boxed_opaque_existential_1(a1 + 296);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    swift_release();
    unsigned int v6 = *(unsigned __int8 *)(a2 + 392);
    if (v6 >= 2) {
      unsigned int v6 = *(_DWORD *)a2 + 2;
    }
    *(void *)a1 = *(void *)a2;
    if (v6 == 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v7 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 40) = v7;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      uint64_t v8 = *(void *)(a2 + 96);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 == 1)
      {
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        long long v9 = *(_OWORD *)(a2 + 104);
        long long v10 = *(_OWORD *)(a2 + 120);
        long long v11 = *(_OWORD *)(a2 + 136);
        *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
        *(_OWORD *)(a1 + 120) = v10;
        *(_OWORD *)(a1 + 136) = v11;
        *(_OWORD *)(a1 + 104) = v9;
      }
      else
      {
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        uint64_t v20 = *(void *)(a2 + 128);
        swift_bridgeObjectRetain();
        if (v20)
        {
          *(void *)(a1 + 128) = v20;
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))(a1 + 104, a2 + 104, v20);
          char v21 = *(unsigned char *)(a2 + 152);
          *(void *)(a1 + 144) = *(void *)(a2 + 144);
          *(unsigned char *)(a1 + 152) = v21;
        }
        else
        {
          long long v41 = *(_OWORD *)(a2 + 104);
          long long v42 = *(_OWORD *)(a2 + 120);
          long long v43 = *(_OWORD *)(a2 + 136);
          *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
          *(_OWORD *)(a1 + 120) = v42;
          *(_OWORD *)(a1 + 136) = v43;
          *(_OWORD *)(a1 + 104) = v41;
        }
      }
      uint64_t v44 = *(void *)(a2 + 184);
      *(void *)(a1 + 184) = v44;
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      (**(void (***)(uint64_t, uint64_t))(v44 - 8))(a1 + 160, a2 + 160);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(unsigned char *)(a1 + 392) = 1;
    }
    else
    {
      uint64_t v12 = *(void **)(a2 + 8);
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
      uint64_t v13 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 40) = v13;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v14 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v14;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      uint64_t v15 = *(void *)(a2 + 88);
      swift_retain();
      id v16 = v12;
      swift_bridgeObjectRetain();
      id v17 = v14;
      if (v15 == 1)
      {
        long long v18 = *(_OWORD *)(a2 + 80);
        long long v19 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v19;
        *(_OWORD *)(a1 + 80) = v18;
      }
      else
      {
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        id v22 = *(void **)(a2 + 112);
        *(void *)(a1 + 112) = v22;
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v23 = v22;
      }
      if (*(void *)(a2 + 136) >= 0x11uLL)
      {
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      }
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      uint64_t v24 = *(void **)(a2 + 152);
      if (v24)
      {
        *(void *)(a1 + 152) = v24;
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
        *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
        uint64_t v25 = *(void *)(a2 + 184);
        *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
        *(void *)(a1 + 184) = v25;
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        uint64_t v26 = *(void **)(a2 + 208);
        *(void *)(a1 + 208) = v26;
        *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
        uint64_t v27 = *(void *)(a2 + 232);
        id v28 = v24;
        swift_bridgeObjectRetain();
        id v29 = v26;
        if (v27 == 1)
        {
          long long v30 = *(_OWORD *)(a2 + 224);
          long long v31 = *(_OWORD *)(a2 + 256);
          *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
          *(_OWORD *)(a1 + 256) = v31;
          *(_OWORD *)(a1 + 224) = v30;
        }
        else
        {
          *(void *)(a1 + 224) = *(void *)(a2 + 224);
          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          *(void *)(a1 + 240) = *(void *)(a2 + 240);
          *(void *)(a1 + 248) = *(void *)(a2 + 248);
          uint64_t v38 = *(void **)(a2 + 256);
          *(void *)(a1 + 256) = v38;
          *(void *)(a1 + 264) = *(void *)(a2 + 264);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v39 = v38;
        }
        if (*(void *)(a2 + 280) >= 0x11uLL)
        {
          *(void *)(a1 + 272) = *(void *)(a2 + 272);
          *(void *)(a1 + 280) = *(void *)(a2 + 280);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
        }
        *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
      }
      else
      {
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        long long v32 = *(_OWORD *)(a2 + 168);
        long long v33 = *(_OWORD *)(a2 + 184);
        long long v34 = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
        *(_OWORD *)(a1 + 216) = v34;
        *(_OWORD *)(a1 + 168) = v32;
        *(_OWORD *)(a1 + 184) = v33;
        long long v35 = *(_OWORD *)(a2 + 232);
        long long v36 = *(_OWORD *)(a2 + 248);
        long long v37 = *(_OWORD *)(a2 + 264);
        *(_OWORD *)(a1 + 273) = *(_OWORD *)(a2 + 273);
        *(_OWORD *)(a1 + 248) = v36;
        *(_OWORD *)(a1 + 264) = v37;
        *(_OWORD *)(a1 + 232) = v35;
      }
      uint64_t v40 = *(void *)(a2 + 320);
      *(void *)(a1 + 320) = v40;
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      (**(void (***)(uint64_t, uint64_t))(v40 - 8))(a1 + 296, a2 + 296);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(unsigned char *)(a1 + 392) = 0;
      swift_retain();
    }
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  return a1;
}

void *__swift_memcpy393_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x189uLL);
}

unsigned __int8 *assignWithTake for HGroupLayoutContext(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = a1[392];
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    swift_release();
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)a1 + 12) != 1)
      {
        swift_bridgeObjectRelease();
        if (*((void *)a1 + 16)) {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 104));
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 160));
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {

      swift_bridgeObjectRelease();
      if (*((void *)a1 + 11) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*((void *)a1 + 17) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v5 = (void *)*((void *)a1 + 19);
      if (v5)
      {

        swift_bridgeObjectRelease();
        if (*((void *)a1 + 29) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*((void *)a1 + 35) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 296));
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    swift_release();
    unsigned int v6 = a2[392];
    if (v6 >= 2) {
      unsigned int v6 = *(_DWORD *)a2 + 2;
    }
    if (v6 == 1)
    {
      long long v7 = *((_OWORD *)a2 + 13);
      *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
      *((_OWORD *)a1 + 13) = v7;
      *((_OWORD *)a1 + 14) = *((_OWORD *)a2 + 14);
      *((void *)a1 + 30) = *((void *)a2 + 30);
      long long v8 = *((_OWORD *)a2 + 9);
      *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
      *((_OWORD *)a1 + 9) = v8;
      long long v9 = *((_OWORD *)a2 + 11);
      *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
      *((_OWORD *)a1 + 11) = v9;
      long long v10 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v10;
      long long v11 = *((_OWORD *)a2 + 7);
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 7) = v11;
      long long v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v12;
      long long v13 = *((_OWORD *)a2 + 3);
      char v14 = 1;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v13;
    }
    else
    {
      memcpy(a1, a2, 0x188uLL);
      char v14 = 0;
    }
    a1[392] = v14;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HGroupLayoutContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 393)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 392);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HGroupLayoutContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 352) = 0u;
    *(_OWORD *)(result + 368) = 0u;
    *(_OWORD *)(result + 320) = 0u;
    *(_OWORD *)(result + 336) = 0u;
    *(_OWORD *)(result + 288) = 0u;
    *(_OWORD *)(result + 304) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 272) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 377) = 0u;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 393) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 393) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 392) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C09850A8(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 392);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1C09850C4(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 384) = 0;
    *(_OWORD *)(result + 352) = 0u;
    *(_OWORD *)(result + 368) = 0u;
    *(_OWORD *)(result + 320) = 0u;
    *(_OWORD *)(result + 336) = 0u;
    *(_OWORD *)(result + 288) = 0u;
    *(_OWORD *)(result + 304) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 272) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
  }
  *(unsigned char *)(result + 392) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HGroupLayoutContext()
{
  return &type metadata for HGroupLayoutContext;
}

uint64_t sub_1C0985128(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148D774(*a1, *a2);
}

uint64_t sub_1C0985134()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09851CC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0985250()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09852E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09864A8();
  *a1 = result;
  return result;
}

void sub_1C0985314(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x6575737369;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6C656E6E616863;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701869940;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0985368()
{
  uint64_t v1 = 0x6575737369;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C656E6E616863;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1C09853B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C09864A8();
  *a1 = result;
  return result;
}

uint64_t sub_1C09853E0(uint64_t a1)
{
  unint64_t v2 = sub_1C0985F10();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C098541C(uint64_t a1)
{
  unint64_t v2 = sub_1C0985F10();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0985458(char *a1, char *a2)
{
  return sub_1C148D6D0(*a1, *a2);
}

uint64_t sub_1C0985464()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09854E4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0985550()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C09855CC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C098562C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6575737369;
  if (*v1) {
    uint64_t v2 = 0x6C656E6E616863;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0985668()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C09856C8()
{
  return sub_1C151EAEC();
}

void *sub_1C0985718@<X0>(void *a1@<X8>)
{
  sub_1C0986018(v1, __src);
  sub_1C0986018(__src, v8);
  if (sub_1C0984118((uint64_t)v8) == 1)
  {
    nullsub_1();
    sub_1C03A7E58();
    sub_1C151798C();
    __dst[8] = v5[8];
    __dst[9] = v5[9];
    __dst[10] = v5[10];
    __dst[11] = v5[11];
    __dst[4] = v5[4];
    __dst[5] = v5[5];
    __dst[6] = v5[6];
    __dst[7] = v5[7];
    __dst[0] = v5[0];
    __dst[1] = v5[1];
    __dst[2] = v5[2];
    __dst[3] = v5[3];
    sub_1C098600C((uint64_t)__dst);
  }
  else
  {
    unint64_t v3 = (const void *)nullsub_1();
    memcpy(__dst, v3, 0x180uLL);
    sub_1C01BC844();
    sub_1C151798C();
    memcpy(__dst, v5, 0x180uLL);
    sub_1C098602C((uint64_t)__dst);
  }
  return sub_1C0986018(__dst, a1);
}

uint64_t sub_1C0985898@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v14 = a2;
  sub_1C0986034(0, &qword_1EA1A1820, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0985F10();
  sub_1C1520EBC();
  if (!v2)
  {
    long long v9 = v14;
    char v19 = 0;
    sub_1C0985F64();
    sub_1C15206EC();
    uint64_t v10 = v5;
    long long v11 = (void (**)(char *, uint64_t))(v6 + 8);
    if (v20)
    {
      char v18 = 2;
      sub_1C0985FB8();
      sub_1C15206EC();
      (*v11)(v8, v10);
      v16[8] = v15[8];
      v16[9] = v15[9];
      v16[10] = v15[10];
      v16[11] = v15[11];
      v16[4] = v15[4];
      v16[5] = v15[5];
      v16[6] = v15[6];
      v16[7] = v15[7];
      v16[0] = v15[0];
      v16[1] = v15[1];
      v16[2] = v15[2];
      v16[3] = v15[3];
      sub_1C098600C((uint64_t)v16);
    }
    else
    {
      char v18 = 1;
      sub_1C01BCFCC();
      sub_1C15206EC();
      (*v11)(v8, v10);
      memcpy(v16, v15, 0x180uLL);
      sub_1C098602C((uint64_t)v16);
    }
    sub_1C0986018(v16, v17);
    sub_1C0986018(v17, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0985B64(void *a1)
{
  sub_1C0986034(0, &qword_1EA1A1840, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v8 = (char *)v21 - v7;
  sub_1C0986018(v1, v22);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0985F10();
  sub_1C1520F0C();
  sub_1C0986018(v22, v23);
  int v9 = sub_1C0984118((uint64_t)v23);
  uint64_t v10 = (long long *)nullsub_1();
  if (v9 == 1)
  {
    LOBYTE(v21[0]) = 1;
    char v24 = 0;
    sub_1C0986098();
    sub_1C152080C();
    if (!v2)
    {
      long long v11 = *v10;
      long long v12 = v10[1];
      long long v13 = v10[3];
      void v21[2] = v10[2];
      v21[3] = v13;
      v21[0] = v11;
      v21[1] = v12;
      long long v14 = v10[4];
      long long v15 = v10[5];
      long long v16 = v10[7];
      v21[6] = v10[6];
      v21[7] = v16;
      v21[4] = v14;
      v21[5] = v15;
      long long v17 = v10[8];
      long long v18 = v10[9];
      long long v19 = v10[11];
      v21[10] = v10[10];
      v21[11] = v19;
      v21[8] = v17;
      v21[9] = v18;
      char v24 = 2;
      sub_1C09860EC();
LABEL_6:
      sub_1C152080C();
    }
  }
  else
  {
    LOBYTE(v21[0]) = 0;
    char v24 = 0;
    sub_1C0986098();
    sub_1C152080C();
    if (!v2)
    {
      memcpy(v21, v10, sizeof(v21));
      char v24 = 1;
      sub_1C01BD118();
      goto LABEL_6;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0985DD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0985898(a1, a2);
}

uint64_t sub_1C0985DEC(void *a1)
{
  return sub_1C0985B64(a1);
}

unint64_t sub_1C0985E0C()
{
  unint64_t result = qword_1EA1A1808;
  if (!qword_1EA1A1808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1808);
  }
  return result;
}

unint64_t sub_1C0985E64()
{
  unint64_t result = qword_1EA1A1810;
  if (!qword_1EA1A1810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1810);
  }
  return result;
}

unint64_t sub_1C0985EBC()
{
  unint64_t result = qword_1EA1A1818;
  if (!qword_1EA1A1818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1818);
  }
  return result;
}

unint64_t sub_1C0985F10()
{
  unint64_t result = qword_1EA1A1828;
  if (!qword_1EA1A1828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1828);
  }
  return result;
}

unint64_t sub_1C0985F64()
{
  unint64_t result = qword_1EA1A1830;
  if (!qword_1EA1A1830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1830);
  }
  return result;
}

unint64_t sub_1C0985FB8()
{
  unint64_t result = qword_1EA1A1838;
  if (!qword_1EA1A1838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1838);
  }
  return result;
}

uint64_t sub_1C098600C(uint64_t result)
{
  *(unsigned char *)(result + 384) = 1;
  return result;
}

void *sub_1C0986018(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x181uLL);
}

uint64_t sub_1C098602C(uint64_t result)
{
  *(unsigned char *)(result + 384) = 0;
  return result;
}

void sub_1C0986034(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0985F10();
    unint64_t v7 = a3(a1, &type metadata for HMultiLayoutItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0986098()
{
  unint64_t result = qword_1EA1A1848;
  if (!qword_1EA1A1848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1848);
  }
  return result;
}

unint64_t sub_1C09860EC()
{
  unint64_t result = qword_1EA1A1850;
  if (!qword_1EA1A1850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1850);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HMultiLayoutItem.CodedType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C098620CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HMultiLayoutItem.CodedType()
{
  return &type metadata for HMultiLayoutItem.CodedType;
}

unsigned char *storeEnumTagSinglePayload for HMultiLayoutItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0986310);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HMultiLayoutItem.CodingKeys()
{
  return &type metadata for HMultiLayoutItem.CodingKeys;
}

unint64_t sub_1C098634C()
{
  unint64_t result = qword_1EA1A1858;
  if (!qword_1EA1A1858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1858);
  }
  return result;
}

unint64_t sub_1C09863A4()
{
  unint64_t result = qword_1EA1A1860;
  if (!qword_1EA1A1860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1860);
  }
  return result;
}

unint64_t sub_1C09863FC()
{
  unint64_t result = qword_1EA1A1868;
  if (!qword_1EA1A1868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1868);
  }
  return result;
}

unint64_t sub_1C0986454()
{
  unint64_t result = qword_1EA1A1870;
  if (!qword_1EA1A1870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1870);
  }
  return result;
}

uint64_t sub_1C09864A8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C09864F4()
{
  unint64_t result = qword_1EA1A1878;
  if (!qword_1EA1A1878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1878);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLoadingEvent()
{
  return &type metadata for PuzzleLoadingEvent;
}

unsigned char *_s8NewsFeed18PuzzleLoadingEventOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0986628);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLoadingState()
{
  return &type metadata for PuzzleLoadingState;
}

unint64_t sub_1C0986668()
{
  unint64_t result = qword_1EA1A1880;
  if (!qword_1EA1A1880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1880);
  }
  return result;
}

unint64_t sub_1C09866C0()
{
  unint64_t result = qword_1EA1A5630;
  if (!qword_1EA1A5630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5630);
  }
  return result;
}

uint64_t sub_1C0986714(char a1)
{
  return sub_1C00BA90C((uint64_t)*(&off_1E6416980 + a1));
}

uint64_t sub_1C0986728()
{
  return sub_1C0986714(*v0);
}

void sub_1C0986730(char *a1@<X8>)
{
  if (*v1) {
    char v2 = 2;
  }
  else {
    char v2 = 1;
  }
  *a1 = v2;
}

unint64_t sub_1C098674C()
{
  unint64_t result = qword_1EA1A1888;
  if (!qword_1EA1A1888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1888);
  }
  return result;
}

uint64_t GapOfflineViewRenderer.deinit()
{
  return v0;
}

uint64_t GapOfflineViewRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s8NewsFeed22GapOfflineViewRendererC6render3for4with2inyAA0cdE6LayoutV7ContextV_AI10AttributesVAA0cdE0CtF_0(uint64_t a1, double *a2, uint64_t a3)
{
  double v4 = a2[4];
  double v5 = a2[5];
  double v6 = a2[6];
  double v7 = a2[7];
  sub_1BFC66384(a1 + 88, (uint64_t)v15);
  uint64_t v8 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed14GapOfflineView_offlineLabel);
  objc_msgSend(v8, sel_setFrame_, v4, v5, v6, v7);
  uint64_t v9 = v16;
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(v15, v16);
  v14[3] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v14);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(boxed_opaque_existential_0, v10, v9);
  id v12 = (id)sub_1C0DF62E0((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  objc_msgSend(v8, sel_setAttributedText_, v12);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t dispatch thunk of GapOfflineViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for GapOfflineViewRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GapOfflineViewRenderer);
}

id PuzzleColorTheme.primaryColor.getter()
{
  return *v0;
}

id PuzzleColorTheme.darkStylePrimaryColor.getter()
{
  return *(id *)(v0 + 8);
}

void PuzzleColorTheme.init(puzzleType:)(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_puzzlePrimaryColor);
  if (v4)
  {
    double v5 = v4;
    id v6 = objc_msgSend(v4, sel_ne_color);

    id v7 = objc_msgSend(a1, sel_darkStylePuzzlePrimaryColor);
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = objc_msgSend(v7, sel_ne_color);

      swift_unknownObjectRelease();
      *a2 = v6;
      a2[1] = v9;
      return;
    }
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C15198DC();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB93C7A8);
    long long v15 = sub_1C15198AC();
    os_log_type_t v16 = sub_1C151F36C();
    if (os_log_type_enabled(v15, v16))
    {
      long long v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v17 = 0;
      _os_log_impl(&dword_1BFC31000, v15, v16, "PuzzleColorTheme: invalid darkStylePrimaryColor", v17, 2u);
      MEMORY[0x1C18C9B00](v17, -1, -1);
    }

    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C15198DC();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB93C7A8);
    long long v11 = sub_1C15198AC();
    os_log_type_t v12 = sub_1C151F36C();
    if (os_log_type_enabled(v11, v12))
    {
      long long v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v13 = 0;
      _os_log_impl(&dword_1BFC31000, v11, v12, "PuzzleColorTheme: invalid puzzlePrimaryColor", v13, 2u);
      MEMORY[0x1C18C9B00](v13, -1, -1);
    }

    swift_unknownObjectRelease();
  }
  *a2 = 0;
  a2[1] = 0;
}

ValueMetadata *type metadata accessor for PuzzleColorTheme()
{
  return &type metadata for PuzzleColorTheme;
}

void static FormatCodingAlwaysRunModeStrategy.defaultValue.getter(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 2;
  *(unsigned char *)(a1 + 4) = 2;
}

BOOL static FormatCodingAlwaysRunModeStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  return *(_DWORD *)a1 != 2 || *(unsigned char *)(a1 + 4) != 2;
}

unint64_t sub_1C0986B80(uint64_t a1)
{
  unint64_t result = sub_1C0986BA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0986BA8()
{
  unint64_t result = qword_1EA1A1890;
  if (!qword_1EA1A1890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A1890);
  }
  return result;
}

void sub_1C0986C04(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 2;
  *(unsigned char *)(a1 + 4) = 2;
}

BOOL sub_1C0986C14(uint64_t a1)
{
  return *(_DWORD *)a1 != 2 || *(unsigned char *)(a1 + 4) != 2;
}

ValueMetadata *type metadata accessor for FormatCodingAlwaysRunModeStrategy()
{
  return &type metadata for FormatCodingAlwaysRunModeStrategy;
}

uint64_t FollowingCommandContext.init(tag:shouldAutoEnableNotifications:shouldShowChannelUpsell:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 9) = a3;
  return result;
}

{
  __int16 v4;
  __int16 v5;

  if (a3) {
    id v4 = 256;
  }
  else {
    id v4 = 0;
  }
  double v5 = v4 & 0xFFFE | a2 & 1;
  if (!result) {
    double v5 = 0;
  }
  *(void *)a4 = result;
  *(_WORD *)(a4 + 8) = v5;
  return result;
}

uint64_t static UIActivityType.follow.getter()
{
  return sub_1C151E5EC();
}

NewsFeed::FollowingCommandState_optional __swiftcall FollowingCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = NewsFeed_FollowingCommandState_notFollowing;
  }
  else {
    v2.value = NewsFeed_FollowingCommandState_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t FollowingCommandState.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6F6C6C6F46746F6ELL;
  }
  else {
    return 0x6E69776F6C6C6F66;
  }
}

uint64_t sub_1C0986D00(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x6F6C6C6F46746F6ELL;
  }
  else {
    uint64_t v3 = 0x6E69776F6C6C6F66;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000067;
  }
  else {
    unint64_t v4 = 0xEC000000676E6977;
  }
  if (*a2) {
    uint64_t v5 = 0x6F6C6C6F46746F6ELL;
  }
  else {
    uint64_t v5 = 0x6E69776F6C6C6F66;
  }
  if (*a2) {
    unint64_t v6 = 0xEC000000676E6977;
  }
  else {
    unint64_t v6 = 0xE900000000000067;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0986DB8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0986E48()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0986EC4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0986F50@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0986FB0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E69776F6C6C6F66;
  if (*v1) {
    uint64_t v2 = 0x6F6C6C6F46746F6ELL;
  }
  unint64_t v3 = 0xE900000000000067;
  if (*v1) {
    unint64_t v3 = 0xEC000000676E6977;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0986FFC(uint64_t a1)
{
  unint64_t v2 = sub_1C0988420();
  return MEMORY[0x1F4163458](a1, v2);
}

uint64_t FollowingNotificationContext.tag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FollowingNotificationContext.result.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t static FollowingNotificationContext.Result.== infix(_:_:)(char a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case 2:
      if (a2 != 2) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 3:
      if (a2 != 3) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 4:
      if (a2 != 4) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 5:
      if (a2 != 5) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t result = 1;
      break;
    default:
      if (a2 - 2 >= 4) {
        uint64_t result = (((a1 & 1) == 0) ^ a2) & 1;
      }
      else {
LABEL_11:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_1C09870FC(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 == 2) {
        goto LABEL_9;
      }
      goto LABEL_11;
    case 3:
      if (v2 != 3) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 4:
      if (v2 != 4) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 5:
      if (v2 != 5) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t result = 1;
      break;
    default:
      if ((v2 - 2) >= 4) {
        uint64_t result = (((*a1 & 1) == 0) ^ v2) & 1;
      }
      else {
LABEL_11:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t FollowingNotificationContext.isEligibleForTipPresentation.getter()
{
  char v1 = *(unsigned char *)(v0 + 8);
  if (objc_msgSend(*(id *)v0, sel_isPuzzleType)) {
    return 0;
  }
  if ((v1 - 2) >= 4u) {
    return v1 & 1;
  }
  return (7u >> ((v1 - 2) & 0xF)) & 1;
}

uint64_t FollowingCommandContext.tag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FollowingCommandContext.shouldAutoEnableNotifications.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FollowingCommandContext.shouldShowChannelUpsell.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t sub_1C0987244(char *a1, void *a2)
{
  char v3 = *a1;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  if (v3) {
    unint64_t v12 = 0x80000001C1616750;
  }
  else {
    unint64_t v12 = 0x80000001C1616780;
  }
  unint64_t v6 = 0xE000000000000000;
  sub_1C1515B8C();

  sub_1BFFDEB20();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
  swift_getObjectType();
  if (objc_msgSend(a2, sel_isPuzzleType, v12))
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = FCTagProviding.localizedTagType.getter();
    unint64_t v6 = v9;
  }
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = sub_1BFE9C558();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v6;
  uint64_t v10 = sub_1C151E66C();
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1C098740C(unsigned char *a1)
{
  if (*a1)
  {
    if (qword_1EB86AD70 != -1) {
      swift_once();
    }
    char v1 = &qword_1EB85DE50;
  }
  else
  {
    if (qword_1EA194A00 != -1) {
      swift_once();
    }
    char v1 = &qword_1EA1AA280;
  }
  int v2 = (void *)*v1;
  return v2;
}

uint64_t static SharingActivity.follow(tag:)(uint64_t a1)
{
  sub_1C0987E20();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C0090B88(0, (unint64_t *)&unk_1EB864240, (uint64_t)&type metadata for FollowingCommandState, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAC370]);
  MEMORY[0x1F4188790](v3 - 8);
  if (!a1) {
    return 0;
  }
  uint64_t v4 = qword_1EB87B198;
  swift_unknownObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151E5EC();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(_WORD *)(v5 + 24) = 256;
  sub_1C00764C0();
  swift_unknownObjectRetain();
  sub_1C151AEDC();
  sub_1C151B3AC();
  sub_1C151AEDC();
  swift_allocObject();
  uint64_t v6 = sub_1C151A9DC();
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1C0987720@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  char v5 = *a1;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  if (v5) {
    unint64_t v16 = 0x80000001C1616750;
  }
  else {
    unint64_t v16 = 0x80000001C1616780;
  }
  unint64_t v8 = 0xE000000000000000;
  sub_1C1515B8C();

  sub_1BFFDEB20();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
  swift_getObjectType();
  if (objc_msgSend(a2, sel_isPuzzleType, v16))
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = FCTagProviding.localizedTagType.getter();
    unint64_t v8 = v11;
  }
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1BFE9C558();
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v8;
  uint64_t v12 = sub_1C151E66C();
  uint64_t v14 = v13;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v12;
  a3[1] = v14;
  return result;
}

uint64_t sub_1C09878F0(unsigned char *a1)
{
  if (*a1)
  {
    if (qword_1EB86AD70 != -1) {
      swift_once();
    }
    id v1 = (id)qword_1EB85DE50;
  }
  else
  {
    if (qword_1EA194A00 != -1) {
      swift_once();
    }
    id v2 = (id)qword_1EA1AA280;
  }
  return sub_1C151B39C();
}

uint64_t static KeyCommandItem.follow(tag:)(uint64_t a1)
{
  sub_1C0090B88(0, (unint64_t *)&unk_1EB864240, (uint64_t)&type metadata for FollowingCommandState, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAC370]);
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EB87B198 != -1) {
    swift_once();
  }
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1C00764C0();
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_1C151AEDC();
  return sub_1C151A5AC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0(uint64_t a1)
{
  sub_1C0988474(0, &qword_1EB86FE70, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C0988474(0, &qword_1EB86FE38, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1C0988474(0, (unint64_t *)&unk_1EB86FE50, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v4 - 8);
  if (!a1) {
    return 0;
  }
  uint64_t v5 = qword_1EB87B198;
  swift_unknownObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(_WORD *)(v6 + 24) = 256;
  sub_1C00764C0();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151AEBC();
  sub_1C151AE9C();
  sub_1C151B2DC();
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A80C();
}

void sub_1C0987E20()
{
  if (!qword_1EB864230)
  {
    sub_1C151B3AC();
    sub_1C00764C0();
    unint64_t v0 = sub_1C151AEFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864230);
    }
  }
}

uint64_t sub_1C0987E8C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0987EC4@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0987720(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C0987EE4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0987F1C@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0987720(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_1C0987F28()
{
  unint64_t result = qword_1EB85D5C8;
  if (!qword_1EB85D5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D5C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FollowingCommandState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C098804CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingCommandState()
{
  return &type metadata for FollowingCommandState;
}

uint64_t initializeBufferWithCopyOfBuffer for FollowingNotificationContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FollowingNotificationContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for FollowingNotificationContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingNotificationContext.Result(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB)
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 5;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C09881FCLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 3;
  if (v8 <= 3) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FollowingNotificationContext.Result(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C09882E4);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C098830C(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingNotificationContext.Result()
{
  return &type metadata for FollowingNotificationContext.Result;
}

uint64_t sub_1C0988338(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FollowingCommandContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t assignWithTake for FollowingCommandContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

ValueMetadata *type metadata accessor for Commands.Following()
{
  return &type metadata for Commands.Following;
}

unint64_t sub_1C0988420()
{
  unint64_t result = qword_1EB866CB0;
  if (!qword_1EB866CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866CB0);
  }
  return result;
}

void sub_1C0988474(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C00764C0();
    unint64_t v7 = a3(a1, &type metadata for FollowingCommandState, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C09884D8(char *a1)
{
  return sub_1C0987244(a1, *(void **)(v1 + 16));
}

void sub_1C09884F8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t static FormatAbsoluteURL.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x1C18BDA40]() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for FormatAbsoluteURL() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a2 + v4);
  return sub_1BFD81AE8(v5, v6);
}

uint64_t FormatAbsoluteURL.parameters.getter()
{
  type metadata accessor for FormatAbsoluteURL();
  return swift_bridgeObjectRetain();
}

uint64_t FormatAbsoluteURL.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_1C098864C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatAbsoluteURL() + 20);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatAbsoluteURL.parameters.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatAbsoluteURL() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatAbsoluteURL.parameters.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C0988724(uint64_t a1)
{
  uint64_t result = sub_1C098885C(&qword_1EA1A1898);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0988768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((MEMORY[0x1C18BDA40]() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);
  return sub_1BFD81AE8(v7, v8);
}

uint64_t sub_1C09887D0(void *a1)
{
  a1[1] = sub_1C098885C(&qword_1EB85EAC0);
  a1[2] = sub_1C098885C(&qword_1EB862DF8);
  uint64_t result = sub_1C098885C(&qword_1EA1A18A0);
  a1[3] = result;
  return result;
}

uint64_t sub_1C098885C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatAbsoluteURL();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C09888A0(void *a1)
{
  return FormatAbsoluteURL.encode(to:)(a1);
}

uint64_t sub_1C09888B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatAbsoluteURL() + 20));
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatAbsoluteURL(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FormatAbsoluteURL(uint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}