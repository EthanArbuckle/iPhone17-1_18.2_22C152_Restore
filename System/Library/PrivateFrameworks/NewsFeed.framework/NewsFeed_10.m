uint64_t FeedModelFactory.create<A>(webEmbed:context:namespace:metadata:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v35 = a2;
  v40 = a8;
  v41 = a7;
  v38 = a6;
  v39 = a5;
  v11 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  v36 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v13 - 8);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v37);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  v20 = (uint64_t *)((char *)&v34 - v19);
  v21 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1527210;
  *(void *)(v22 + 32) = a3;
  *(void *)(v22 + 40) = a4;
  v23 = a1[1];
  *(void *)(v22 + 48) = *a1;
  *(void *)(v22 + 56) = v23;
  v42 = v22;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v21, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_1C151E55C();
  v26 = v25;
  swift_bridgeObjectRelease();
  v27 = v24;
  v28 = v35;
  sub_1C0E9C670(v27, v26, (uint64_t)a1, v35, v20);
  swift_bridgeObjectRelease();
  sub_1BFDB5E54((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFDB5E54((uint64_t)v28, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedContext);
  v29 = (uint64_t)v36;
  v30 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v36, v39, v38);
  v31 = sub_1C002C76C(&qword_1EB865598, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  v32 = sub_1C002C76C(&qword_1EB85B490, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  FeedModel<>.init(model:context:namespace:metadata:)((uint64_t)v17, (uint64_t)v15, 0, 0, v29, v37, v30, v31, v40, v32, v41);
  return sub_1BFF5B58C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
}

uint64_t FeedModelFactory.create(customItem:context:namespace:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v9 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FeedCustomItem();
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  v17 = (uint64_t *)((char *)&v30 - v16);
  uint64_t v18 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
  *(void *)(v19 + 32) = a3;
  *(void *)(v19 + 40) = a4;
  uint64_t v20 = a1[1];
  *(void *)(v19 + 48) = *a1;
  *(void *)(v19 + 56) = v20;
  uint64_t v33 = v19;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v18, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C151E55C();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  sub_1BFDB5E54((uint64_t)a1, (uint64_t)v17 + *(int *)(v12 + 28), (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
  uint64_t *v17 = v21;
  v17[1] = v23;
  sub_1BFDB5E54((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  uint64_t v24 = v31;
  sub_1BFDB5E54(v32, v31, (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1BFF976E8((uint64_t)v14, a5, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  sub_1C028A008();
  uint64_t v26 = v25;
  sub_1BFF976E8(v24, a5 + *(int *)(v25 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
  v27 = (void *)(a5 + *(int *)(v26 + 56));
  void *v27 = 0;
  v27[1] = 0;
  v28 = (uint64_t (**)())(a5 + *(int *)(v26 + 64));
  *v28 = sub_1BFE31C54;
  v28[1] = 0;
  return sub_1BFF5B58C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
}

uint64_t FeedModelFactory.create<A>(customItem:context:namespace:metadata:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v37 = a8;
  uint64_t v38 = a7;
  uint64_t v35 = a6;
  uint64_t v36 = a5;
  uint64_t v33 = *(void *)(a6 - 8);
  uint64_t v34 = a2;
  MEMORY[0x1F4188790](a1);
  uint64_t v32 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v12 - 8);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint64_t *)((char *)&v32 - v19);
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1527210;
  *(void *)(v22 + 32) = a3;
  *(void *)(v22 + 40) = a4;
  uint64_t v23 = a1[1];
  *(void *)(v22 + 48) = *a1;
  *(void *)(v22 + 56) = v23;
  uint64_t v39 = v22;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v21, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1C151E55C();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  sub_1BFDB5E54((uint64_t)a1, (uint64_t)v20 + *(int *)(v15 + 20), (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
  *uint64_t v20 = v24;
  v20[1] = v26;
  sub_1BFDB5E54((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  sub_1BFDB5E54(v34, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v27 = (uint64_t)v32;
  uint64_t v28 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, v36, v35);
  uint64_t v29 = sub_1C002C76C(&qword_1EB8611C0, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  uint64_t v30 = sub_1C002C76C((unint64_t *)&qword_1EB85E970, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  FeedModel<>.init(model:context:namespace:metadata:)((uint64_t)v17, (uint64_t)v14, 0, 0, v27, v15, v28, v29, v37, v30, v38);
  return sub_1BFF5B58C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
}

uint64_t FeedModelFactory.createBannerAd(context:namespace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v12 - 8);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  v17 = (char *)&v25 - v16;
  uint64_t v18 = v4[10];
  uint64_t v19 = v4[11];
  __swift_project_boxed_opaque_existential_1(v4 + 7, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  sub_1BFDB5E54((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  sub_1BFDB5E54(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1BFF976E8((uint64_t)v14, a4, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  sub_1C028A0E8();
  uint64_t v21 = v20;
  sub_1BFF976E8((uint64_t)v11, a4 + *(int *)(v20 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v22 = (void *)(a4 + *(int *)(v21 + 56));
  *uint64_t v22 = a2;
  v22[1] = a3;
  uint64_t v23 = (uint64_t (**)())(a4 + *(int *)(v21 + 64));
  *uint64_t v23 = sub_1BFE31C54;
  v23[1] = 0;
  swift_bridgeObjectRetain();
  return sub_1BFF5B58C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
}

uint64_t FeedModelFactory.createBannerAd<A>(context:namespace:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v27 = a4;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v24 - v17;
  uint64_t v19 = v5[10];
  uint64_t v20 = v5[11];
  __swift_project_boxed_opaque_existential_1(v5 + 7, v19);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  sub_1BFDB5E54((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  sub_1BFDB5E54(v24, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedContext);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v25, a3);
  uint64_t v21 = sub_1C002C76C(&qword_1EB865588, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  uint64_t v22 = sub_1C002C76C(&qword_1EB873738, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  FeedModel<>.init(model:context:namespace:metadata:)((uint64_t)v15, (uint64_t)v12, 0, 0, (uint64_t)v9, v13, a3, v21, v26, v22, v27);
  return sub_1BFF5B58C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
}

uint64_t FeedModelFactory.create(puzzle:context:namespace:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1527210;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_bridgeObjectRetain();
  id v15 = objc_msgSend(a1, sel_identifier);
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  *(void *)(v14 + 48) = v16;
  *(void *)(v14 + 56) = v18;
  v35[0] = v14;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v13, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v19 = sub_1C151E55C();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  sub_1C10109E0(v19, v21, (uint64_t)a1, (uint64_t)v35);
  swift_bridgeObjectRelease();
  sub_1C01F09C0((uint64_t)v35, (uint64_t)v34);
  sub_1BFDB5E54(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedContext);
  long long v22 = v34[11];
  a5[10] = v34[10];
  a5[11] = v22;
  a5[12] = v34[12];
  long long v23 = v34[7];
  a5[6] = v34[6];
  a5[7] = v23;
  long long v24 = v34[9];
  a5[8] = v34[8];
  a5[9] = v24;
  long long v25 = v34[3];
  a5[2] = v34[2];
  a5[3] = v25;
  long long v26 = v34[5];
  a5[4] = v34[4];
  a5[5] = v26;
  long long v27 = v34[1];
  *a5 = v34[0];
  a5[1] = v27;
  sub_1C028A270(0, &qword_1EB86FB28, (void (*)(void))sub_1C028A1C8, (void (*)(void))sub_1C028A21C);
  uint64_t v29 = v28;
  sub_1BFF976E8((uint64_t)v12, (uint64_t)a5 + *(int *)(v28 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v30 = (void *)((char *)a5 + *(int *)(v29 + 56));
  *uint64_t v30 = 0;
  v30[1] = 0;
  uint64_t v31 = (uint64_t (**)())((char *)a5 + *(int *)(v29 + 64));
  *uint64_t v31 = sub_1BFE31C54;
  v31[1] = 0;
  return sub_1C01F0A74((uint64_t)v35);
}

uint64_t FeedModelFactory.create<A>(puzzle:context:namespace:metadata:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v34 = a8;
  uint64_t v35 = a7;
  uint64_t v33 = a5;
  uint64_t v12 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1527210;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  swift_bridgeObjectRetain();
  id v19 = objc_msgSend(a1, sel_identifier);
  uint64_t v20 = sub_1C151E62C();
  uint64_t v22 = v21;

  *(void *)(v18 + 48) = v20;
  *(void *)(v18 + 56) = v22;
  v37[0] = v18;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v23 = sub_1C151E55C();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t)a1;
  uint64_t v27 = v32;
  sub_1C10109E0(v23, v25, v26, (uint64_t)v37);
  swift_bridgeObjectRelease();
  sub_1C01F09C0((uint64_t)v37, (uint64_t)v36);
  sub_1BFDB5E54(v27, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedContext);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v33, a6);
  unint64_t v28 = sub_1C028A1C8();
  unint64_t v29 = sub_1C028A21C();
  FeedModel<>.init(model:context:namespace:metadata:)((uint64_t)v36, (uint64_t)v17, 0, 0, (uint64_t)v14, (uint64_t)&type metadata for FeedPuzzle, a6, v28, v34, v29, v35);
  return sub_1C01F0A74((uint64_t)v37);
}

uint64_t FeedModelFactory.create(puzzleType:context:namespace:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1527210;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_bridgeObjectRetain();
  id v15 = objc_msgSend(a1, sel_identifier);
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  *(void *)(v14 + 48) = v16;
  *(void *)(v14 + 56) = v18;
  v27[1] = v14;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v13, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v19 = sub_1C151E55C();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  sub_1BFDB5E54(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedContext);
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = 1;
  *(_OWORD *)(a5 + 24) = xmmword_1C1538940;
  *(void *)(a5 + 40) = v19;
  *(void *)(a5 + 48) = v21;
  *(void *)(a5 + 56) = a1;
  sub_1C028A270(0, (unint64_t *)&unk_1EA1AF930, (void (*)(void))sub_1C028A300, (void (*)(void))sub_1C028A354);
  uint64_t v23 = v22;
  sub_1BFF976E8((uint64_t)v12, a5 + *(int *)(v22 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v24 = (void *)(a5 + *(int *)(v23 + 56));
  *uint64_t v24 = 0;
  v24[1] = 0;
  uint64_t v25 = (uint64_t (**)())(a5 + *(int *)(v23 + 64));
  *uint64_t v25 = sub_1BFE31C54;
  v25[1] = 0;
  return swift_unknownObjectRetain();
}

uint64_t FeedModelFactory.create(puzzleStatistic:context:namespace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v55 = a2;
  uint64_t v57 = a5;
  uint64_t v7 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v56 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v53 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v51 - v12;
  uint64_t v14 = type metadata accessor for PuzzleStatistic();
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FeedPuzzleStatistic();
  uint64_t v19 = v18 - 8;
  MEMORY[0x1F4188790](v18);
  uint64_t v52 = (uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v51 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v54 = (uint64_t)&v51 - v25;
  uint64_t v26 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C1527210;
  *(void *)(v27 + 32) = v51;
  *(void *)(v27 + 40) = a4;
  swift_bridgeObjectRetain();
  *(void *)(v27 + 48) = PuzzleStatistic.identifier.getter();
  *(void *)(v27 + 56) = v28;
  uint64_t v58 = v27;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v26, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v29 = sub_1C151E55C();
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  sub_1BFDB5E54(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  *(_OWORD *)(v23 + 24) = xmmword_1C1538950;
  *((void *)v23 + 5) = v29;
  *((void *)v23 + 6) = v31;
  sub_1BFDB5E54((uint64_t)v17, (uint64_t)&v23[*(int *)(v19 + 40)], (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  swift_getObjectType();
  swift_bridgeObjectRetain();
  FCPuzzleTypeProviding.puzzleKindTraits.getter(&v58);
  uint64_t v32 = v58;
  uint64_t v33 = (uint64_t)&v17[*(int *)(v15 + 28)];
  sub_1BFDB5E54(v33, (uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      char v35 = FCPuzzleTypeProviding.puzzleTypeTraits.getter();
      sub_1BFF5B58C((uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
      if ((v35 & 2) != 0) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_1BFF5B58C((uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
    }
    uint64_t v36 = 0x80000000000;
    goto LABEL_8;
  }
  sub_1BFF5B58C((uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
LABEL_7:
  uint64_t v36 = 0x100000000000;
LABEL_8:
  uint64_t v37 = v32 | v36;
  uint64_t v38 = v53;
  sub_1BFDB5E54(v33, v53, type metadata accessor for PuzzleStatisticCategory);
  int v39 = swift_getEnumCaseMultiPayload();
  sub_1BFF5B58C(v38, type metadata accessor for PuzzleStatisticCategory);
  if (v39 == 2) {
    uint64_t v40 = v37 | 0x1000000000000;
  }
  else {
    uint64_t v40 = v37;
  }
  sub_1BFF5B58C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  *(void *)uint64_t v23 = v40;
  uint64_t v41 = v54;
  sub_1BFF976E8((uint64_t)v23, v54, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  swift_bridgeObjectRelease();
  uint64_t v42 = v52;
  sub_1BFDB5E54(v41, v52, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  uint64_t v43 = v56;
  sub_1BFDB5E54(v55, v56, (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v44 = v42;
  uint64_t v45 = v57;
  sub_1BFF976E8(v44, v57, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  sub_1C028A3A8();
  uint64_t v47 = v46;
  sub_1BFF976E8(v43, v45 + *(int *)(v46 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
  v48 = (void *)(v45 + *(int *)(v47 + 56));
  void *v48 = 0;
  v48[1] = 0;
  v49 = (uint64_t (**)())(v45 + *(int *)(v47 + 64));
  *v49 = sub_1BFE31C54;
  v49[1] = 0;
  return sub_1BFF5B58C(v41, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
}

uint64_t (*FeedModelFactory.create<A>(puzzleType:context:namespace:metadata:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>))()
{
  uint64_t v32 = a8;
  uint64_t v33 = a7;
  uint64_t v30 = a2;
  uint64_t v31 = a5;
  uint64_t v12 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
  *(void *)(v19 + 32) = a3;
  *(void *)(v19 + 40) = a4;
  swift_bridgeObjectRetain();
  id v20 = objc_msgSend(a1, sel_identifier);
  uint64_t v21 = sub_1C151E62C();
  uint64_t v23 = v22;

  *(void *)(v19 + 48) = v21;
  *(void *)(v19 + 56) = v23;
  v34[0] = v19;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v18, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v24 = sub_1C151E55C();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  v34[0] = 0;
  v34[1] = 0;
  char v35 = 1;
  long long v36 = xmmword_1C1538940;
  uint64_t v37 = v24;
  uint64_t v38 = v26;
  int v39 = a1;
  sub_1BFDB5E54(v30, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedContext);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v31, a6);
  unint64_t v27 = sub_1C028A300();
  unint64_t v28 = sub_1C028A354();
  swift_unknownObjectRetain();
  return FeedModel<>.init(model:context:namespace:metadata:)((uint64_t)v34, (uint64_t)v17, 0, 0, (uint64_t)v14, (uint64_t)&type metadata for FeedPuzzleType, a6, v27, v32, v28, v33);
}

uint64_t FeedModelFactory.create<A>(puzzleStatistic:context:namespace:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v63 = a8;
  uint64_t v64 = a7;
  uint64_t v61 = a5;
  uint64_t v65 = a6;
  uint64_t v11 = *(void *)(a6 - 8);
  uint64_t v58 = a2;
  uint64_t v59 = v11;
  MEMORY[0x1F4188790](a1);
  v62 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v60 = (uint64_t)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v53);
  uint64_t v54 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = type metadata accessor for PuzzleStatistic();
  uint64_t v20 = v19 - 8;
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v23);
  uint64_t v56 = (uint64_t)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  unint64_t v27 = (char *)&v53 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v55 = (uint64_t)&v53 - v29;
  uint64_t v30 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C1527210;
  *(void *)(v31 + 32) = a3;
  *(void *)(v31 + 40) = a4;
  swift_bridgeObjectRetain();
  *(void *)(v31 + 48) = PuzzleStatistic.identifier.getter();
  *(void *)(v31 + 56) = v32;
  uint64_t v66 = v31;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v30, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v33 = sub_1C151E55C();
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  sub_1BFDB5E54(a1, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  *(void *)unint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  v27[16] = 1;
  *(_OWORD *)(v27 + 24) = xmmword_1C1538950;
  *((void *)v27 + 5) = v33;
  *((void *)v27 + 6) = v35;
  uint64_t v57 = v23;
  sub_1BFDB5E54((uint64_t)v22, (uint64_t)&v27[*(int *)(v23 + 32)], (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  swift_getObjectType();
  swift_bridgeObjectRetain();
  FCPuzzleTypeProviding.puzzleKindTraits.getter(&v66);
  uint64_t v36 = v66;
  uint64_t v37 = (uint64_t)&v22[*(int *)(v20 + 28)];
  sub_1BFDB5E54(v37, (uint64_t)v18, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      char v39 = FCPuzzleTypeProviding.puzzleTypeTraits.getter();
      sub_1BFF5B58C((uint64_t)v18, type metadata accessor for PuzzleStatisticCategory);
      if ((v39 & 2) != 0) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_1BFF5B58C((uint64_t)v18, type metadata accessor for PuzzleStatisticCategory);
    }
    uint64_t v40 = 0x80000000000;
    goto LABEL_8;
  }
  sub_1BFF5B58C((uint64_t)v18, type metadata accessor for PuzzleStatisticCategory);
LABEL_7:
  uint64_t v40 = 0x100000000000;
LABEL_8:
  uint64_t v41 = v36 | v40;
  uint64_t v42 = v54;
  sub_1BFDB5E54(v37, v54, type metadata accessor for PuzzleStatisticCategory);
  int v43 = swift_getEnumCaseMultiPayload();
  sub_1BFF5B58C(v42, type metadata accessor for PuzzleStatisticCategory);
  if (v43 == 2) {
    uint64_t v44 = v41 | 0x1000000000000;
  }
  else {
    uint64_t v44 = v41;
  }
  sub_1BFF5B58C((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  *(void *)unint64_t v27 = v44;
  uint64_t v45 = v55;
  sub_1BFF976E8((uint64_t)v27, v55, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  swift_bridgeObjectRelease();
  uint64_t v46 = v56;
  sub_1BFDB5E54(v45, v56, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  uint64_t v47 = v60;
  sub_1BFDB5E54(v58, v60, (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v48 = (uint64_t)v62;
  uint64_t v49 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v62, v61, v65);
  uint64_t v50 = sub_1C002C76C(&qword_1EA198E30, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  uint64_t v51 = sub_1C002C76C(&qword_1EA198E38, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  FeedModel<>.init(model:context:namespace:metadata:)(v46, v47, 0, 0, v48, v57, v49, v50, v63, v51, v64);
  return sub_1BFF5B58C(v45, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
}

uint64_t FeedModelFactory.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FeedModelFactory.__deallocating_deinit()
{
  FeedModelFactory.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedModelFactory.createAuxiliary(auxiliary:context:parentIdentifier:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  v12[2] = a3;
  v12[3] = a4;
  v12[5] = a2;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1C0283EC8((void (*)(uint64_t))sub_1C028A488, (uint64_t)v12, v8);
  swift_bridgeObjectRelease();
  *a5 = a3;
  a5[1] = a4;
  a5[2] = v10;
  a5[3] = v9;
  a5[4] = 0x7261696C69787561;
  a5[5] = 0xE900000000000079;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02889C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v165 = a4;
  v166 = a5;
  uint64_t v167 = a2;
  uint64_t v168 = a3;
  uint64_t v170 = a6;
  uint64_t v160 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v160);
  v161 = (uint64_t *)((char *)&v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v159 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v159);
  uint64_t v158 = (uint64_t)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v162 = (uint64_t)&v153 - v13;
  uint64_t v155 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v155);
  v156 = (uint64_t *)((char *)&v153 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v157 = (uint64_t)&v153 - v16;
  uint64_t v154 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v154);
  uint64_t v163 = (uint64_t)&v153 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v164 = (uint64_t)&v153 - v19;
  uint64_t v20 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (uint64_t *)((char *)&v153 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (uint64_t *)((char *)&v153 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C028A5CC(0);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v153 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v153 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (id *)((char *)&v153 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v169 = a1;
  sub_1BFDB5E54(a1, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v48 = *v34;
      id v49 = objc_msgSend(*v34, sel_identifier);
      uint64_t v50 = sub_1C151E62C();
      uint64_t v52 = v51;

      uint64_t v53 = MEMORY[0x1E4FBB1A0];
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1C152C7F0;
      *(void *)(v54 + 32) = 0x7261696C69787561;
      *(void *)(v54 + 40) = 0xE900000000000079;
      uint64_t v55 = v168;
      *(void *)(v54 + 48) = v167;
      *(void *)(v54 + 56) = v55;
      *(void *)(v54 + 64) = v50;
      *(void *)(v54 + 72) = v52;
      *(void *)&v179[0] = v54;
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v53, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_1C151E55C();
      uint64_t v58 = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&v179[0] = 0;
      BYTE8(v179[0]) = 1;
      sub_1C149DE5C(v56, v58, v48, (uint64_t)v166, (uint64_t)v179, (uint64_t)&v171);
      swift_bridgeObjectRelease();

      long long v184 = v177;
      v185[0] = v178[0];
      *(_OWORD *)((char *)v185 + 9) = *(_OWORD *)((char *)v178 + 9);
      long long v180 = v173;
      long long v181 = v174;
      long long v59 = v176;
      long long v182 = v175;
      long long v183 = v176;
      long long v60 = v172;
      v179[0] = v171;
      v179[1] = v172;
      long long v61 = v185[0];
      uint64_t v47 = v170;
      *(_OWORD *)(v170 + 96) = v177;
      *(_OWORD *)(v47 + 112) = v61;
      *(_OWORD *)(v47 + 121) = *(_OWORD *)((char *)v185 + 9);
      long long v62 = v181;
      long long v63 = v182;
      long long v64 = v179[0];
      *(_OWORD *)(v47 + 32) = v180;
      *(_OWORD *)(v47 + 48) = v62;
      *(_OWORD *)(v47 + 64) = v63;
      *(_OWORD *)(v47 + 80) = v59;
      *(_OWORD *)uint64_t v47 = v64;
      *(_OWORD *)(v47 + 16) = v60;
      type metadata accessor for FeedItem(0);
      goto LABEL_9;
    case 2u:
      id v65 = *v34;
      id v66 = objc_msgSend(*v34, sel_identifier);
      uint64_t v67 = sub_1C151E62C();
      uint64_t v69 = v68;

      uint64_t v70 = MEMORY[0x1E4FBB1A0];
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_1C152C7F0;
      *(void *)(v71 + 32) = 0x7261696C69787561;
      *(void *)(v71 + 40) = 0xE900000000000079;
      uint64_t v72 = v168;
      *(void *)(v71 + 48) = v167;
      *(void *)(v71 + 56) = v72;
      *(void *)(v71 + 64) = v67;
      *(void *)(v71 + 72) = v69;
      *(void *)&v179[0] = v71;
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v70, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_1C151E55C();
      uint64_t v75 = v74;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = v170;
      sub_1C0E80414(v73, v75, v65, v170);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FeedItem(0);
      goto LABEL_9;
    case 3u:
      sub_1BFF976E8((uint64_t)v34, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      uint64_t v77 = *v25;
      uint64_t v76 = v25[1];
      uint64_t v78 = MEMORY[0x1E4FBB1A0];
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_1C152C7F0;
      *(void *)(v79 + 32) = 0x7261696C69787561;
      *(void *)(v79 + 40) = 0xE900000000000079;
      uint64_t v80 = v168;
      *(void *)(v79 + 48) = v167;
      *(void *)(v79 + 56) = v80;
      *(void *)(v79 + 64) = v77;
      *(void *)(v79 + 72) = v76;
      *(void *)&v179[0] = v79;
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v78, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v81 = sub_1C151E55C();
      uint64_t v83 = v82;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0E9C670(v81, v83, (uint64_t)v25, v166, v22);
      swift_bridgeObjectRelease();
      sub_1BFF5B58C((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      uint64_t v84 = (uint64_t)v22;
      uint64_t v47 = v170;
      sub_1BFF976E8(v84, v170, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      type metadata accessor for FeedItem(0);
      goto LABEL_9;
    case 4u:
      id v85 = *v34;
      id v86 = objc_msgSend(*v34, sel_identifier);
      uint64_t v87 = sub_1C151E62C();
      uint64_t v89 = v88;

      uint64_t v90 = MEMORY[0x1E4FBB1A0];
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_1C152C7F0;
      *(void *)(v91 + 32) = 0x7261696C69787561;
      *(void *)(v91 + 40) = 0xE900000000000079;
      uint64_t v92 = v168;
      *(void *)(v91 + 48) = v167;
      *(void *)(v91 + 56) = v92;
      *(void *)(v91 + 64) = v87;
      *(void *)(v91 + 72) = v89;
      *(void *)&v179[0] = v91;
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v90, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1C151E55C();
      uint64_t v95 = v94;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = v170;
      sub_1C10109E0(v93, v95, (uint64_t)v85, v170);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FeedItem(0);
      goto LABEL_9;
    case 5u:
      id v96 = *v34;
      id v97 = objc_msgSend(*v34, sel_identifier);
      uint64_t v98 = sub_1C151E62C();
      uint64_t v100 = v99;

      uint64_t v101 = MEMORY[0x1E4FBB1A0];
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v102 = swift_allocObject();
      *(_OWORD *)(v102 + 16) = xmmword_1C152C7F0;
      *(void *)(v102 + 32) = 0x7261696C69787561;
      *(void *)(v102 + 40) = 0xE900000000000079;
      uint64_t v103 = v168;
      *(void *)(v102 + 48) = v167;
      *(void *)(v102 + 56) = v103;
      *(void *)(v102 + 64) = v98;
      *(void *)(v102 + 72) = v100;
      *(void *)&v179[0] = v102;
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v101, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v104 = sub_1C151E55C();
      uint64_t v106 = v105;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = v170;
      *(void *)uint64_t v170 = 0;
      *(void *)(v47 + 8) = 0;
      *(unsigned char *)(v47 + 16) = 1;
      *(_OWORD *)(v47 + 24) = xmmword_1C1538940;
      *(void *)(v47 + 40) = v104;
      *(void *)(v47 + 48) = v106;
      *(void *)(v47 + 56) = v96;
      type metadata accessor for FeedItem(0);
      goto LABEL_9;
    case 6u:
      uint64_t v121 = v164;
      sub_1BFF976E8((uint64_t)v34, v164, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v122 = PuzzleStatistic.identifier.getter();
      uint64_t v124 = v123;
      uint64_t v125 = MEMORY[0x1E4FBB1A0];
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v126 = swift_allocObject();
      *(_OWORD *)(v126 + 16) = xmmword_1C152C7F0;
      *(void *)(v126 + 32) = 0x7261696C69787561;
      *(void *)(v126 + 40) = 0xE900000000000079;
      uint64_t v127 = v168;
      *(void *)(v126 + 48) = v167;
      *(void *)(v126 + 56) = v127;
      *(void *)(v126 + 64) = v122;
      *(void *)(v126 + 72) = v124;
      *(void *)&v179[0] = v126;
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v125, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v128 = sub_1C151E55C();
      uint64_t v130 = v129;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v131 = v121;
      uint64_t v132 = v163;
      sub_1BFDB5E54(v131, v163, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v133 = (uint64_t)v156;
      void *v156 = 0;
      *(void *)(v133 + 8) = 0;
      *(unsigned char *)(v133 + 16) = 1;
      *(_OWORD *)(v133 + 24) = xmmword_1C1538950;
      *(void *)(v133 + 40) = v128;
      *(void *)(v133 + 48) = v130;
      sub_1BFDB5E54(v132, v133 + *(int *)(v155 + 32), (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      swift_getObjectType();
      swift_bridgeObjectRetain();
      FCPuzzleTypeProviding.puzzleKindTraits.getter(v179);
      uint64_t v134 = *(void *)&v179[0];
      uint64_t v135 = v132 + *(int *)(v154 + 20);
      uint64_t v136 = v162;
      sub_1BFDB5E54(v135, v162, type metadata accessor for PuzzleStatisticCategory);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 2) >= 2)
      {
        if (EnumCaseMultiPayload)
        {
          char v139 = FCPuzzleTypeProviding.puzzleTypeTraits.getter();
          sub_1BFF5B58C(v162, type metadata accessor for PuzzleStatisticCategory);
          if ((v139 & 2) != 0) {
            goto LABEL_19;
          }
        }
        else
        {
          sub_1BFF5B58C(v162, type metadata accessor for PuzzleStatisticCategory);
        }
        uint64_t v140 = 0x80000000000;
        goto LABEL_20;
      }
      sub_1BFF5B58C(v136, type metadata accessor for PuzzleStatisticCategory);
LABEL_19:
      uint64_t v140 = 0x100000000000;
LABEL_20:
      uint64_t v141 = v134 | v140;
      uint64_t v142 = v135;
      uint64_t v143 = v158;
      sub_1BFDB5E54(v142, v158, type metadata accessor for PuzzleStatisticCategory);
      int v144 = swift_getEnumCaseMultiPayload();
      sub_1BFF5B58C(v143, type metadata accessor for PuzzleStatisticCategory);
      if (v144 == 2) {
        uint64_t v145 = v141 | 0x1000000000000;
      }
      else {
        uint64_t v145 = v141;
      }
      sub_1BFF5B58C(v163, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      *(void *)uint64_t v133 = v145;
      uint64_t v146 = v157;
      sub_1BFF976E8(v133, v157, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      swift_bridgeObjectRelease();
      sub_1BFF5B58C(v164, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v147 = v146;
      uint64_t v148 = v170;
      sub_1BFF976E8(v147, v170, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      type metadata accessor for FeedItem(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v149 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v150 = *(void *)(v169 + *(int *)(v149 + 28));
      uint64_t v151 = *(void *)(v169 + *(int *)(v149 + 24));
      uint64_t v152 = type metadata accessor for FeedItemAuxiliaryItem();
      *(void *)(v148 + *(int *)(v152 + 20)) = v150;
      *(void *)(v148 + *(int *)(v152 + 24)) = v151;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v152 - 8) + 56))(v148, 0, 1, v152);
LABEL_10:
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    case 7u:
      sub_1BFF976E8((uint64_t)v34, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      uint64_t v108 = *v10;
      uint64_t v107 = v10[1];
      uint64_t v109 = MEMORY[0x1E4FBB1A0];
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v110 = swift_allocObject();
      *(_OWORD *)(v110 + 16) = xmmword_1C152C7F0;
      *(void *)(v110 + 32) = 0x7261696C69787561;
      *(void *)(v110 + 40) = 0xE900000000000079;
      uint64_t v111 = v168;
      *(void *)(v110 + 48) = v167;
      *(void *)(v110 + 56) = v111;
      *(void *)(v110 + 64) = v108;
      *(void *)(v110 + 72) = v107;
      *(void *)&v179[0] = v110;
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v109, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v112 = sub_1C151E55C();
      uint64_t v114 = v113;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v115 = v161;
      sub_1BFDB5E54((uint64_t)v10, (uint64_t)v161 + *(int *)(v160 + 20), (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      uint64_t *v115 = v112;
      v115[1] = v114;
      sub_1BFF5B58C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      uint64_t v47 = v170;
      sub_1BFF976E8((uint64_t)v115, v170, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      type metadata accessor for FeedItem(0);
      goto LABEL_9;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v138 = type metadata accessor for FeedItemAuxiliaryItem();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))(v170, 1, 1, v138);
    default:
      id v35 = *v34;
      id v36 = objc_msgSend(*v34, sel_identifier);
      uint64_t v37 = sub_1C151E62C();
      uint64_t v39 = v38;

      uint64_t v40 = MEMORY[0x1E4FBB1A0];
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1C152C7F0;
      *(void *)(v41 + 32) = 0x7261696C69787561;
      *(void *)(v41 + 40) = 0xE900000000000079;
      uint64_t v42 = v168;
      *(void *)(v41 + 48) = v167;
      *(void *)(v41 + 56) = v42;
      *(void *)(v41 + 64) = v37;
      *(void *)(v41 + 72) = v39;
      *(void *)&v179[0] = v41;
      sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v40, MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1C151E55C();
      uint64_t v45 = v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v46 = sub_1C151D2DC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v28, 1, 1, v46);
      sub_1BFDB60D4(v43, v45, v35, v166, (uint64_t)v28, (uint64_t)v31);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF5B58C((uint64_t)v28, (uint64_t (*)(void))sub_1C028A5CC);
      uint64_t v47 = v170;
      sub_1BFF976E8((uint64_t)v31, v170, type metadata accessor for FeedHeadline);
      type metadata accessor for FeedItem(0);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      uint64_t v116 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v117 = *(void *)(v169 + *(int *)(v116 + 28));
      uint64_t v118 = *(void *)(v169 + *(int *)(v116 + 24));
      uint64_t v119 = type metadata accessor for FeedItemAuxiliaryItem();
      *(void *)(v47 + *(int *)(v119 + 20)) = v117;
      *(void *)(v47 + *(int *)(v119 + 24)) = v118;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v47, 0, 1, v119);
      goto LABEL_10;
  }
}

uint64_t sub_1C0289D54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *v5;
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = v9;
  v14[5] = a2;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1C0283EC8((void (*)(uint64_t))sub_1C028A648, (uint64_t)v14, v10);
  swift_bridgeObjectRelease();
  *a5 = a3;
  a5[1] = a4;
  a5[2] = v12;
  a5[3] = v11;
  a5[4] = 0x7261696C69787561;
  a5[5] = 0xE900000000000079;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C0289E10()
{
  unint64_t result = qword_1EA198E18;
  if (!qword_1EA198E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198E18);
  }
  return result;
}

unint64_t sub_1C0289E64()
{
  unint64_t result = qword_1EB865540;
  if (!qword_1EB865540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865540);
  }
  return result;
}

uint64_t sub_1C0289EB8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1BFE99D58(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C0289F28()
{
  if (!qword_1EB865560)
  {
    type metadata accessor for FeedWebEmbed();
    sub_1C002C76C(&qword_1EB865598, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
    sub_1C002C76C(&qword_1EB85B490, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
    unint64_t v0 = type metadata accessor for FeedModel();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB865560);
    }
  }
}

void sub_1C028A008()
{
  if (!qword_1EB861210[0])
  {
    type metadata accessor for FeedCustomItem();
    sub_1C002C76C(&qword_1EB8611C0, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
    sub_1C002C76C((unint64_t *)&qword_1EB85E970, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
    unint64_t v0 = type metadata accessor for FeedModel();
    if (!v1) {
      atomic_store(v0, qword_1EB861210);
    }
  }
}

void sub_1C028A0E8()
{
  if (!qword_1EA198E20)
  {
    type metadata accessor for FeedBannerAd();
    sub_1C002C76C(&qword_1EB865588, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
    sub_1C002C76C(&qword_1EB873738, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
    unint64_t v0 = type metadata accessor for FeedModel();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA198E20);
    }
  }
}

unint64_t sub_1C028A1C8()
{
  unint64_t result = qword_1EB86FB30;
  if (!qword_1EB86FB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FB30);
  }
  return result;
}

unint64_t sub_1C028A21C()
{
  unint64_t result = qword_1EB865568;
  if (!qword_1EB865568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865568);
  }
  return result;
}

void sub_1C028A270(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = type metadata accessor for FeedModel();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C028A300()
{
  unint64_t result = qword_1EA1A4BC0;
  if (!qword_1EA1A4BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4BC0);
  }
  return result;
}

unint64_t sub_1C028A354()
{
  unint64_t result = qword_1EB864D60;
  if (!qword_1EB864D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864D60);
  }
  return result;
}

void sub_1C028A3A8()
{
  if (!qword_1EA198E28)
  {
    type metadata accessor for FeedPuzzleStatistic();
    sub_1C002C76C(&qword_1EA198E30, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
    sub_1C002C76C(&qword_1EA198E38, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
    unint64_t v0 = type metadata accessor for FeedModel();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA198E28);
    }
  }
}

uint64_t sub_1C028A488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C02889C0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), a2);
}

uint64_t method lookup function for FeedModelFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedModelFactory);
}

void sub_1C028A4C0(uint64_t a1)
{
}

void sub_1C028A4E0(uint64_t a1)
{
}

void sub_1C028A500(uint64_t a1)
{
}

void sub_1C028A520(uint64_t a1)
{
}

uint64_t sub_1C028A540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((unint64_t)a3 >> 8 != 0xFFFFFFFF || a6 >= 4) {
    return sub_1C028A558(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

uint64_t sub_1C028A558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 >> 62) - 1 >= 2)
  {
    if (a6 >> 62) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

void sub_1C028A5AC(uint64_t a1)
{
}

void sub_1C028A5CC(uint64_t a1)
{
}

uint64_t sub_1C028A5EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C028A648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C028A488(a1, a2);
}

uint64_t FormatCompilerOptions.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerOptions.properties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*FormatCompilerOptions.properties.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerOptions.slots.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerOptions.slots.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FormatCompilerOptions.slots.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerOptions.newsroom.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C028A7B0();
  MEMORY[0x1F4188790](v3 - 8);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatCompilerOptions(0);
  sub_1C028AD00(v1 + *(int *)(v6 + 24), (uint64_t)v5, (uint64_t (*)(void))sub_1C028A7B0);
  return sub_1C028A80C((uint64_t)v5, a1);
}

void sub_1C028A7B0()
{
  if (!qword_1EB8813E0)
  {
    sub_1C0068948();
    unint64_t v0 = type metadata accessor for FormatCodingDefault();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8813E0);
    }
  }
}

uint64_t sub_1C028A80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C028A870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C028A7B0();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatCompilerOptions(0);
  sub_1C028AD00(a1 + *(int *)(v7 + 24), (uint64_t)v6, (uint64_t (*)(void))sub_1C028A7B0);
  return sub_1C028A80C((uint64_t)v6, a2);
}

uint64_t sub_1C028A91C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C028AD00(a1, (uint64_t)v6, type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t v7 = type metadata accessor for FormatCompilerOptions(0);
  return sub_1C028AA0C((uint64_t)v6, a2 + *(int *)(v7 + 24));
}

uint64_t FormatCompilerOptions.newsroom.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 24);
  return sub_1C028AA0C(a1, v3);
}

uint64_t sub_1C028AA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FormatCompilerOptions.newsroom.modify())()
{
  return nullsub_1;
}

uint64_t FormatCompilerOptions.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 28);
  return sub_1BFEF6CE8(v3, a1);
}

uint64_t FormatCompilerOptions.compilerFlags.getter()
{
  type metadata accessor for FormatCompilerOptions(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C028AB30(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatCompilerOptions(0) + 32);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatCompilerOptions.compilerFlags.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatCompilerOptions(0) + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatCompilerOptions.compilerFlags.modify())()
{
  return nullsub_1;
}

double sub_1C028AC08()
{
  uint64_t v0 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  __swift_allocate_value_buffer(v0, qword_1EA198E48);
  uint64_t v1 = (_OWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA198E48);
  uint64_t v2 = (char *)v1 + *(int *)(v0 + 20);
  uint64_t v3 = sub_1C1518CDC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  double result = 0.0;
  v1[1] = 0u;
  v1[2] = 0u;
  *uint64_t v1 = 0u;
  return result;
}

uint64_t FormatCompilerOptions.Newsroom.init(environments:editorProperties:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  long long v4 = a1[1];
  *a3 = *a1;
  a3[1] = v4;
  a3[2] = a1[2];
  uint64_t v5 = (uint64_t)a3 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  return sub_1BFEF6F58(a2, v5);
}

uint64_t sub_1C028AD00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FormatCompilerOptions.Newsroom.environments.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1BFD5A4A4(v2, v3);
}

uint64_t FormatCompilerOptions.Newsroom.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  return sub_1BFEF6CE8(v3, a1);
}

__n128 FormatCompilerOptions.Newsroom.Environments.init(qa:staging:production:)@<Q0>(_OWORD *a1@<X0>, long long *a2@<X1>, __n128 *a3@<X2>, _OWORD *a4@<X8>)
{
  long long v4 = *a2;
  *a4 = *a1;
  a4[1] = v4;
  __n128 result = *a3;
  a4[2] = *a3;
  return result;
}

double static FormatCompilerOptions.Newsroom.Environments.empty.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t FormatCompilerOptions.Newsroom.Environments.qa.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerOptions.Newsroom.Environments.staging.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerOptions.Newsroom.Environments.production.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerOptions.Newsroom.Environment.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

NewsFeed::FormatCompilerOptions::Newsroom::Environment __swiftcall FormatCompilerOptions.Newsroom.Environment.init(identifier:)(NewsFeed::FormatCompilerOptions::Newsroom::Environment identifier)
{
  *uint64_t v1 = identifier;
  return identifier;
}

uint64_t static FormatCompilerOptions.Newsroom.Environment.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t FormatCompilerOptions.init(properties:slots:newsroom:editorProperties:compilerFlags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  uint64_t v10 = (int *)type metadata accessor for FormatCompilerOptions(0);
  sub_1C028A80C(a3, (uint64_t)a6 + v10[6]);
  uint64_t result = sub_1BFEF6F58(a4, (uint64_t)a6 + v10[7]);
  *(void *)((char *)a6 + v10[8]) = a5;
  return result;
}

uint64_t _s8NewsFeed21FormatCompilerOptionsV8NewsroomV5emptyAEvgZ_0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA194400 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA198E48);
  return sub_1C028AD00(v3, a1, type metadata accessor for FormatCompilerOptions.Newsroom);
}

uint64_t static FormatCodingEmptyNewsroomStrategy.shouldEncode(wrappedValue:)()
{
  return 1;
}

uint64_t sub_1C028AF94(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1C028B0CC(a1, (uint64_t)sub_1C028B020, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1C028B020@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1C028E0D8();
  uint64_t v5 = (char *)a1 + *(int *)(v4 + 48);
  sub_1C028E144();
  uint64_t v7 = (char *)a2 + *(int *)(v6 + 48);
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v10 = sub_1C1518CDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v5, v10);
  *a2 = v9;
  a2[1] = v8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C028B0CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v75 = a5;
  uint64_t v9 = sub_1C1518CDC();
  id v65 = *(void **)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v60 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  long long v59 = (char *)v58 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v58 - v14;
  sub_1BFE79AD8(0, &qword_1EA198EA8, (void (*)(uint64_t))sub_1C028E144);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (void *)((char *)v58 - v17);
  uint64_t v19 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = ~v19;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v22 = -v19;
  uint64_t v68 = a1;
  uint64_t v69 = a1 + 64;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  else {
    uint64_t v23 = -1;
  }
  uint64_t v70 = v20;
  uint64_t v71 = 0;
  uint64_t v72 = v23 & v21;
  uint64_t v73 = a2;
  uint64_t v74 = a3;
  v58[2] = a1;
  swift_bridgeObjectRetain();
  v58[1] = a3;
  swift_retain();
  sub_1C0DB564C((uint64_t)v18);
  sub_1C028E144();
  uint64_t v25 = v24;
  uint64_t v26 = *(void *)(v24 - 8);
  uint64_t v27 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48);
  uint64_t v63 = v26 + 48;
  long long v64 = v27;
  if (v27(v18, 1, v24) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BFEFB808();
    return swift_release();
  }
  id v66 = (void (*)(char *, char *, uint64_t))v65[4];
  uint64_t v67 = v65 + 4;
  v58[5] = v65 + 1;
  v58[6] = v65 + 2;
  v58[4] = v65 + 5;
  uint64_t v61 = v25;
  long long v62 = v18;
  while (1)
  {
    id v36 = (char *)v18 + *(int *)(v25 + 48);
    uint64_t v37 = *v18;
    uint64_t v38 = v18[1];
    uint64_t v39 = v15;
    v66(v15, v36, v9);
    uint64_t v40 = (void *)*v75;
    unint64_t v42 = sub_1BFEF2D8C(v37, v38);
    uint64_t v43 = v40[2];
    BOOL v44 = (v41 & 1) == 0;
    uint64_t v45 = v43 + v44;
    if (__OFADD__(v43, v44)) {
      break;
    }
    char v46 = v41;
    if (v40[3] >= v45)
    {
      if (a4)
      {
        uint64_t v51 = (void *)*v75;
        if (v41) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v57 = v75;
        sub_1C106D378();
        uint64_t v51 = (void *)*v57;
        if (v46) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      int v47 = a4 & 1;
      id v48 = v75;
      sub_1C1056C00(v45, v47);
      unint64_t v49 = sub_1BFEF2D8C(v37, v38);
      if ((v46 & 1) != (v50 & 1)) {
        goto LABEL_22;
      }
      unint64_t v42 = v49;
      uint64_t v51 = (void *)*v48;
      if (v46)
      {
LABEL_7:
        uint64_t v29 = v65;
        unint64_t v30 = v65[9] * v42;
        unint64_t v31 = v51[7] + v30;
        uint64_t v32 = (void (*)(char *, unint64_t, uint64_t))v65[2];
        uint64_t v33 = v60;
        v32(v60, v31, v9);
        uint64_t v34 = v59;
        v32(v59, (unint64_t)v33, v9);
        id v35 = (void (*)(char *, uint64_t))v29[1];
        v35(v33, v9);
        uint64_t v15 = v39;
        v35(v39, v9);
        swift_bridgeObjectRelease();
        ((void (*)(unint64_t, char *, uint64_t))v29[5])(*(void *)(*v75 + 56) + v30, v34, v9);
        goto LABEL_8;
      }
    }
    v51[(v42 >> 6) + 8] |= 1 << v42;
    uint64_t v52 = (uint64_t *)(v51[6] + 16 * v42);
    *uint64_t v52 = v37;
    v52[1] = v38;
    unint64_t v53 = v51[7] + v65[9] * v42;
    uint64_t v15 = v39;
    v66((char *)v53, v39, v9);
    uint64_t v54 = v51[2];
    BOOL v55 = __OFADD__(v54, 1);
    uint64_t v56 = v54 + 1;
    if (v55) {
      goto LABEL_21;
    }
    v51[2] = v56;
LABEL_8:
    uint64_t v18 = v62;
    sub_1C0DB564C((uint64_t)v62);
    a4 = 1;
    uint64_t v25 = v61;
    if (v64(v18, 1, v61) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed21FormatCompilerOptionsV8NewsroomV12EnvironmentsV2eeoiySbAG_AGtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v11 = a2[5];
  if (v3)
  {
    if (!v7)
    {
LABEL_25:
      swift_bridgeObjectRetain();
      goto LABEL_26;
    }
    if (*a1 != *a2 || v3 != v7)
    {
      char v12 = sub_1C1520A9C();
      uint64_t result = 0;
      if ((v12 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v7)
  {
    goto LABEL_26;
  }
  if (!v5)
  {
    if (!v10) {
      goto LABEL_16;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v10) {
    goto LABEL_25;
  }
  if (v2 != v8 || v5 != v10)
  {
    char v14 = sub_1C1520A9C();
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
LABEL_16:
  if (!v6)
  {
    if (!v11) {
      return 1;
    }
    goto LABEL_26;
  }
  if (!v11) {
    goto LABEL_25;
  }
  if (v4 == v9 && v6 == v11) {
    return 1;
  }
  char v15 = sub_1C1520A9C();
  uint64_t result = 0;
  if (v15) {
    return 1;
  }
  return result;
}

uint64_t _s8NewsFeed21FormatCompilerOptionsV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v52 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFC50CC();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v10 - 8);
  char v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v47 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = a1;
  uint64_t v20 = *a1;
  uint64_t v21 = a2;
  uint64_t v22 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v23 = sub_1C00DFA40(v20, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0) {
    goto LABEL_10;
  }
  char v50 = v18;
  uint64_t v51 = v15;
  id v48 = v12;
  unint64_t v49 = v9;
  uint64_t v24 = v19[1];
  uint64_t v25 = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v26 = sub_1C00F0198(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v27 = v21;
  uint64_t v28 = v19;
  uint64_t v29 = type metadata accessor for FormatCompilerOptions(0);
  if (!_s8NewsFeed21FormatCompilerOptionsV8NewsroomV2eeoiySbAE_AEtFZ_0((uint64_t *)((char *)v19 + *(int *)(v29 + 24)), (uint64_t *)((char *)v21 + *(int *)(v29 + 24))))goto LABEL_10; {
  uint64_t v30 = (uint64_t)v50;
  }
  sub_1BFEF6CE8((uint64_t)v19 + *(int *)(v29 + 28), (uint64_t)v50);
  uint64_t v47 = v29;
  uint64_t v31 = (uint64_t)v51;
  sub_1BFEF6CE8((uint64_t)v21 + *(int *)(v29 + 28), (uint64_t)v51);
  uint64_t v32 = (uint64_t)v49;
  uint64_t v33 = (uint64_t)&v49[*(int *)(v7 + 48)];
  sub_1BFEF6CE8(v30, (uint64_t)v49);
  sub_1BFEF6CE8(v31, v33);
  uint64_t v34 = v53;
  uint64_t v35 = v54;
  id v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v36(v32, 1, v54) == 1)
  {
    sub_1BFE79A60(v31);
    sub_1BFE79A60(v30);
    if (v36(v33, 1, v35) == 1)
    {
      sub_1BFE79A60(v32);
LABEL_13:
      uint64_t v44 = *(int *)(v47 + 32);
      uint64_t v45 = *(uint64_t *)((char *)v28 + v44);
      uint64_t v46 = *(uint64_t *)((char *)v27 + v44);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v38 = sub_1C00AC354(v45, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v38 & 1;
    }
    goto LABEL_9;
  }
  uint64_t v37 = (uint64_t)v48;
  sub_1BFEF6CE8(v32, (uint64_t)v48);
  if (v36(v33, 1, v35) == 1)
  {
    sub_1BFE79A60((uint64_t)v51);
    sub_1BFE79A60(v30);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v35);
LABEL_9:
    sub_1BFFDF090(v32);
    goto LABEL_10;
  }
  uint64_t v40 = v37;
  char v41 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v52, v33, v35);
  sub_1C028C444(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
  char v42 = sub_1C151E5CC();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v34 + 8);
  v43(v41, v35);
  sub_1BFE79A60((uint64_t)v51);
  sub_1BFE79A60((uint64_t)v50);
  v43((char *)v40, v35);
  sub_1BFE79A60(v32);
  if (v42) {
    goto LABEL_13;
  }
LABEL_10:
  char v38 = 0;
  return v38 & 1;
}

BOOL _s8NewsFeed21FormatCompilerOptionsV8NewsroomV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v53 = sub_1C1518CDC();
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  char v42 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFC50CC();
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v52 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v43 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v49 = (uint64_t)&v41 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v50 = (uint64_t)&v41 - v12;
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v16 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v17 = a1[4];
  uint64_t v18 = a1[5];
  uint64_t v20 = *a2;
  uint64_t v19 = a2[1];
  uint64_t v22 = a2[2];
  uint64_t v21 = a2[3];
  uint64_t v24 = a2[4];
  uint64_t v23 = a2[5];
  if (v14 != 1)
  {
    v55[0] = *a1;
    v55[1] = v14;
    v55[2] = v16;
    v55[3] = v15;
    v55[4] = v17;
    v55[5] = v18;
    if (v19 != 1)
    {
      v54[0] = v20;
      v54[1] = v19;
      v54[2] = v22;
      v54[3] = v21;
      v54[4] = v24;
      v54[5] = v23;
      uint64_t v26 = v13;
      sub_1BFD5A4A4(v13, v14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LODWORD(v47) = _s8NewsFeed21FormatCompilerOptionsV8NewsroomV12EnvironmentsV2eeoiySbAG_AGtFZ_0(v55, v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFD5A4F8(v26, v14);
      if ((v47 & 1) == 0) {
        return 0;
      }
      goto LABEL_8;
    }
    uint64_t v44 = v13;
    uint64_t v45 = v16;
    uint64_t v47 = v17;
    uint64_t v25 = v15;
    swift_bridgeObjectRetain();
    uint64_t v46 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_6:
    sub_1BFD5A4A4(v20, v19);
    sub_1BFD5A4F8(v44, v14);
    sub_1BFD5A4F8(v20, v19);
    return 0;
  }
  uint64_t v44 = *a1;
  uint64_t v45 = v16;
  uint64_t v46 = v15;
  uint64_t v47 = v17;
  if (v19 != 1) {
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v27 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  uint64_t v28 = (uint64_t)a1 + *(int *)(v27 + 20);
  uint64_t v29 = v50;
  sub_1BFEF6CE8(v28, v50);
  uint64_t v30 = v49;
  sub_1BFEF6CE8((uint64_t)a2 + *(int *)(v27 + 20), v49);
  uint64_t v31 = v52;
  uint64_t v32 = v52 + *(int *)(v48 + 48);
  sub_1BFEF6CE8(v29, v52);
  sub_1BFEF6CE8(v30, v32);
  uint64_t v33 = v51;
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  uint64_t v35 = v53;
  if (v34(v31, 1, v53) == 1)
  {
    sub_1BFE79A60(v30);
    sub_1BFE79A60(v29);
    if (v34(v32, 1, v35) == 1)
    {
      sub_1BFE79A60(v31);
      return 1;
    }
    goto LABEL_13;
  }
  uint64_t v36 = v43;
  sub_1BFEF6CE8(v31, v43);
  if (v34(v32, 1, v35) == 1)
  {
    sub_1BFE79A60(v30);
    sub_1BFE79A60(v29);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v36, v35);
LABEL_13:
    sub_1BFFDF090(v31);
    return 0;
  }
  uint64_t v37 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v42, v32, v35);
  sub_1C028C444(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
  char v38 = sub_1C151E5CC();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v33 + 8);
  v39(v37, v35);
  sub_1BFE79A60(v30);
  sub_1BFE79A60(v29);
  v39((char *)v36, v35);
  sub_1BFE79A60(v31);
  return (v38 & 1) != 0;
}

unint64_t sub_1C028C0CC(uint64_t a1)
{
  unint64_t result = sub_1C028C0F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C028C0F4()
{
  unint64_t result = qword_1EA198E60;
  if (!qword_1EA198E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198E60);
  }
  return result;
}

uint64_t sub_1C028C148(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C028C298(a1, a2, a3, (uint64_t (*)(void))sub_1BFCFEAAC, (uint64_t (*)(void))sub_1BFD5A54C, (uint64_t (*)(void))sub_1C028C188);
}

unint64_t sub_1C028C188()
{
  unint64_t result = qword_1EA198E68;
  if (!qword_1EA198E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198E68);
  }
  return result;
}

unint64_t sub_1C028C1DC(uint64_t a1)
{
  unint64_t result = sub_1C028C204();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C028C204()
{
  unint64_t result = qword_1EA198E70;
  if (!qword_1EA198E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198E70);
  }
  return result;
}

uint64_t sub_1C028C258(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C028C298(a1, a2, a3, (uint64_t (*)(void))sub_1BFCED994, (uint64_t (*)(void))sub_1BFD783E4, (uint64_t (*)(void))sub_1C028C2EC);
}

uint64_t sub_1C028C298(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C028C2EC()
{
  unint64_t result = qword_1EA198E78;
  if (!qword_1EA198E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198E78);
  }
  return result;
}

uint64_t sub_1C028C340(uint64_t a1)
{
  uint64_t result = sub_1C028C444(&qword_1EA198E80, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions.Newsroom);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C028C398(void *a1)
{
  a1[1] = sub_1C028C444(&qword_1EB876F40, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions.Newsroom);
  a1[2] = sub_1C028C444(&qword_1EB85BCA8, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t result = sub_1C028C444(&qword_1EA198E88, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions.Newsroom);
  a1[3] = result;
  return result;
}

uint64_t sub_1C028C444(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C028C48C(uint64_t a1)
{
  uint64_t result = sub_1C028C444(&qword_1EA198E90, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C028C4E4(void *a1)
{
  a1[1] = sub_1C028C444(&qword_1EB876F48, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions);
  a1[2] = sub_1C028C444(&qword_1EB85BCB0, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions);
  uint64_t result = sub_1C028C444(&qword_1EA198E98, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions);
  a1[3] = result;
  return result;
}

unint64_t sub_1C028C590(uint64_t a1)
{
  unint64_t result = sub_1C0068948();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C028C5B8()
{
  return sub_1C028C444(&qword_1EB876F40, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions.Newsroom);
}

uint64_t sub_1C028C600()
{
  return sub_1C028C444(&qword_1EB85BCA8, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions.Newsroom);
}

uint64_t sub_1C028C648@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C028C654(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1C028C698@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C028C6A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_1C028C6F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 32));
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatCompilerOptions(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 == 1)
    {
      long long v12 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v12;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v11;
      uint64_t v13 = *((void *)v10 + 3);
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = v13;
      uint64_t v14 = *((void *)v10 + 5);
      *((void *)v9 + 4) = *((void *)v10 + 4);
      *((void *)v9 + 5) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v15 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    uint64_t v16 = &v9[v15];
    uint64_t v17 = &v10[v15];
    uint64_t v18 = sub_1C1518CDC();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v20(v17, 1, v18))
    {
      sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    if (v20((char *)a2 + v22, 1, v18))
    {
      sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v24, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
    }
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for FormatCompilerOptions(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a1 + v6 + 8);
  uint64_t v10 = *(void *)((char *)a2 + v6 + 8);
  if (v9 == 1)
  {
    if (v10 == 1)
    {
      long long v11 = *(_OWORD *)v8;
      long long v12 = *((_OWORD *)v8 + 2);
      *(_OWORD *)(v7 + 16) = *((_OWORD *)v8 + 1);
      *(_OWORD *)(v7 + 32) = v12;
      *(_OWORD *)uint64_t v7 = v11;
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      *(void *)(v7 + 16) = *((void *)v8 + 2);
      *(void *)(v7 + 24) = *((void *)v8 + 3);
      *(void *)(v7 + 32) = *((void *)v8 + 4);
      *(void *)(v7 + 40) = *((void *)v8 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v10 == 1)
  {
    sub_1C028CE04(v7);
    long long v14 = *((_OWORD *)v8 + 1);
    long long v13 = *((_OWORD *)v8 + 2);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(v7 + 16) = v14;
    *(_OWORD *)(v7 + 32) = v13;
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    *(void *)(v7 + 8) = *((void *)v8 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v7 + 16) = *((void *)v8 + 2);
    *(void *)(v7 + 24) = *((void *)v8 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v7 + 32) = *((void *)v8 + 4);
    *(void *)(v7 + 40) = *((void *)v8 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v16 = (void *)(v7 + v15);
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_1C1518CDC();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_13:
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_14:
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  int v27 = v20((char *)a1 + v24, 1, v18);
  int v28 = v20(v26, 1, v18);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v25, v26, v18);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
    goto LABEL_19;
  }
  if (v28)
  {
LABEL_19:
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v25, v26, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
LABEL_20:
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C028CE04(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for FormatCompilerOptions(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = &a2[v6];
  long long v9 = *(_OWORD *)&a2[v6 + 32];
  v7[1] = *(_OWORD *)&a2[v6 + 16];
  v7[2] = v9;
  *uint64_t v7 = *(_OWORD *)&a2[v6];
  uint64_t v10 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  long long v11 = (char *)v7 + v10;
  long long v12 = &v8[v10];
  uint64_t v13 = sub_1C1518CDC();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = &a2[v17];
  if (v15(&a2[v17], 1, v13))
  {
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v19, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  *(void *)((char *)a1 + a3[8]) = *(void *)&a2[a3[8]];
  return a1;
}

void *assignWithTake for FormatCompilerOptions(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  if (*(void *)((char *)a1 + v6 + 8) == 1) {
    goto LABEL_4;
  }
  uint64_t v9 = *((void *)v8 + 1);
  if (v9 == 1)
  {
    sub_1C028CE04(v7);
LABEL_4:
    long long v10 = *((_OWORD *)v8 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(v7 + 16) = v10;
    *(_OWORD *)(v7 + 32) = *((_OWORD *)v8 + 2);
    goto LABEL_6;
  }
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v8 + 3);
  *(void *)(v7 + 16) = *((void *)v8 + 2);
  *(void *)(v7 + 24) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v8 + 5);
  *(void *)(v7 + 32) = *((void *)v8 + 4);
  *(void *)(v7 + 40) = v12;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v13 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v14 = (void *)(v7 + v13);
  uint64_t v15 = &v8[v13];
  uint64_t v16 = sub_1C1518CDC();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_11:
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_12:
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  int v25 = v18((char *)a1 + v22, 1, v16);
  int v26 = v18(v24, 1, v16);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v23, v24, v16);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v16);
    goto LABEL_17;
  }
  if (v26)
  {
LABEL_17:
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v23, v24, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
LABEL_18:
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C028D3B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C028A7B0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

void *sub_1C028D4F8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1C028A7B0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatCompilerOptions.Newsroom(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7 == 1)
    {
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    }
    else
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v10 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v10;
      uint64_t v11 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1C1518CDC();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return a1;
}

uint64_t assignWithCopy for FormatCompilerOptions.Newsroom(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *a2;
      long long v8 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v8;
      *(_OWORD *)a1 = v7;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1C028CE04(a1);
    long long v10 = a2[1];
    long long v9 = a2[2];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(_OWORD *)(a1 + 32) = v9;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1C1518CDC();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_13;
  }
  if (v18)
  {
LABEL_13:
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

_OWORD *initializeWithTake for FormatCompilerOptions.Newsroom(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  long long v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C1518CDC();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for FormatCompilerOptions.Newsroom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6 == 1)
  {
    sub_1C028CE04(a1);
LABEL_4:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_1C1518CDC();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_11;
  }
  if (v17)
  {
LABEL_11:
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_1C028DDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483645)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 - 1) & ~(((int)v4 - 1) >> 31);
  }
  else
  {
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C028DEC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483645)
  {
    *(void *)(result + 8) = (a2 + 1);
  }
  else
  {
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void *assignWithCopy for FormatTypeDefinition.Case(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FormatTypeDefinition.Case(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatCompilerOptions.Newsroom.Environments()
{
  return &type metadata for FormatCompilerOptions.Newsroom.Environments;
}

ValueMetadata *type metadata accessor for FormatCompilerOptions.Newsroom.Environment()
{
  return &type metadata for FormatCompilerOptions.Newsroom.Environment;
}

ValueMetadata *type metadata accessor for FormatCodingEmptyNewsroomStrategy()
{
  return &type metadata for FormatCodingEmptyNewsroomStrategy;
}

uint64_t sub_1C028E0A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C028E0D8()
{
  if (!qword_1EA198EA0)
  {
    sub_1C1518CDC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA198EA0);
    }
  }
}

void sub_1C028E144()
{
  if (!qword_1EB8704B0)
  {
    sub_1C1518CDC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB8704B0);
    }
  }
}

uint64_t sub_1C028E1AC(uint64_t a1)
{
  uint64_t v2 = sub_1BFC5D2EC((unint64_t *)&unk_1EB884DB0);
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C028E21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BFC5D2EC((unint64_t *)&unk_1EB884DB0);
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C028E294(uint64_t a1)
{
  uint64_t v2 = sub_1C151794C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_retain();
  sub_1C15170AC();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

Swift::Void __swiftcall FeedScalingManager.resetSize()()
{
  uint64_t v0 = sub_1C151794C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  __n128 v7 = (char *)&v8 - v6;
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))((char *)&v8 - v6, *MEMORY[0x1E4FAB820], v0, v5);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  swift_retain();
  sub_1C15170AC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
}

Swift::Bool __swiftcall FeedScalingManager.canIncreaseSize()()
{
  return sub_1C028E538(MEMORY[0x1E4FAB800]);
}

Swift::Bool __swiftcall FeedScalingManager.canDecreaseSize()()
{
  return sub_1C028E538(MEMORY[0x1E4FAB7F8]);
}

BOOL sub_1C028E538(unsigned int *a1)
{
  uint64_t v2 = sub_1C151794C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  __n128 v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v12 - v7;
  swift_retain();
  sub_1C151709C();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *a1, v2);
  sub_1BFC5D2EC((unint64_t *)&unk_1EB881488);
  char v9 = sub_1C151E5CC();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v10(v8, v2);
  return (v9 & 1) == 0;
}

Swift::Bool __swiftcall FeedScalingManager.canResetSize()()
{
  return sub_1C028E538(MEMORY[0x1E4FAB820]);
}

Swift::Void __swiftcall FeedScalingManager.increaseSize()()
{
  uint64_t v0 = sub_1C151794C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v13 - v5;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v13 - v8;
  swift_retain();
  sub_1C151709C();
  swift_release();
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v9, v0);
  uint64_t v11 = *MEMORY[0x1E4FAB810];
  if (v10 == *MEMORY[0x1E4FAB7F8]
    || (uint64_t v11 = *MEMORY[0x1E4FAB818], v10 == *MEMORY[0x1E4FAB810])
    || (v12 = v10 == v11, uint64_t v11 = *MEMORY[0x1E4FAB820], v12)
    || (uint64_t v11 = *MEMORY[0x1E4FAB808], v10 == *MEMORY[0x1E4FAB820])
    || (v12 = v10 == v11, uint64_t v11 = *MEMORY[0x1E4FAB7F0], v12)
    || (uint64_t v11 = *MEMORY[0x1E4FAB800], v10 == *MEMORY[0x1E4FAB7F0]))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 104))(v6, v11, v0);
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
    swift_retain();
    sub_1C15170AC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  }
  else if (v10 != v11)
  {
    sub_1C1520A8C();
    __break(1u);
  }
}

Swift::Void __swiftcall FeedScalingManager.decreaseSize()()
{
  uint64_t v0 = sub_1C151794C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - v5;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v12 - v8;
  swift_retain();
  sub_1C151709C();
  swift_release();
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v9, v0);
  uint64_t v11 = *MEMORY[0x1E4FAB7F8];
  if (v10 != v11)
  {
    if (v10 == *MEMORY[0x1E4FAB810]
      || (uint64_t v11 = *MEMORY[0x1E4FAB810], v10 == *MEMORY[0x1E4FAB818])
      || (uint64_t v11 = *MEMORY[0x1E4FAB818], v10 == *MEMORY[0x1E4FAB820])
      || (uint64_t v11 = *MEMORY[0x1E4FAB820], v10 == *MEMORY[0x1E4FAB808])
      || (uint64_t v11 = *MEMORY[0x1E4FAB808], v10 == *MEMORY[0x1E4FAB7F0])
      || (uint64_t v11 = *MEMORY[0x1E4FAB7F0], v10 == *MEMORY[0x1E4FAB800]))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 104))(v6, v11, v0);
      (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
      swift_retain();
      sub_1C15170AC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    }
    else
    {
      sub_1C1520A8C();
      __break(1u);
    }
  }
}

uint64_t FeedScalingManager.deinit()
{
  swift_release();
  return v0;
}

uint64_t FeedScalingManager.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C028EBA4()
{
  swift_retain();
  sub_1C151709C();
  return swift_release();
}

uint64_t method lookup function for FeedScalingManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedScalingManager);
}

void static FormatCodingNotScaledFontScalingStrategy.defaultValue.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 3072;
}

BOOL static FormatCodingNotScaledFontScalingStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 9) << 8 != 3072;
}

void sub_1C028EC30(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 3072;
}

BOOL sub_1C028EC40(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 9) << 8 != 3072;
}

void static FormatCodingRegularFontWeightStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

BOOL static FormatCodingRegularFontWeightStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1 != 5;
}

BOOL sub_1C028EC70(unsigned __int8 *a1)
{
  return *a1 != 5;
}

uint64_t static FormatCodingBlackSixteenSystemFontStrategy.defaultValue.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB8826F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_1EB88FBF8;
  return swift_retain();
}

uint64_t static FormatCodingBlackSixteenSystemFontStrategy.defaultValue.setter(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (qword_1EB8826F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EB88FBF8 = v1;
  return swift_release();
}

uint64_t (*static FormatCodingBlackSixteenSystemFontStrategy.defaultValue.modify())()
{
  if (qword_1EB8826F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C028EE14@<X0>(void *a1@<X8>)
{
  if (qword_1EB8826F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_1EB88FBF8;
  return swift_retain();
}

uint64_t _s8NewsFeed42FormatCodingBlackSixteenSystemFontStrategyV12shouldEncode12wrappedValueSbAA0cH0O_tFZ_0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >> 61)
  {
    char v10 = 1;
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 24);
    __int16 v3 = *(_WORD *)(v1 + 32);
    char v4 = *(unsigned char *)(v1 + 34);
    uint64_t v5 = *(void *)(v1 + 40);
    __int16 v6 = *(_WORD *)(v1 + 80);
    v19[0] = *(void *)(v1 + 16);
    v19[1] = v2;
    __int16 v20 = v3;
    char v21 = v4;
    uint64_t v22 = v5;
    long long v7 = *(_OWORD *)(v1 + 64);
    long long v23 = *(_OWORD *)(v1 + 48);
    long long v24 = v7;
    __int16 v25 = v6;
    uint64_t v8 = qword_1EB88FBF0;
    swift_bridgeObjectRetain();
    if (v8 != -1) {
      swift_once();
    }
    v12[0] = qword_1EB88FBA8;
    v12[1] = qword_1EB88FBB0;
    __int16 v13 = word_1EB88FBB8;
    char v14 = byte_1EB88FBBA;
    uint64_t v15 = qword_1EB88FBC0;
    long long v16 = xmmword_1EB88FBC8;
    long long v17 = unk_1EB88FBD8;
    __int16 v18 = word_1EB88FBE8;
    char v9 = _s8NewsFeed16FormatSystemFontV2eeoiySbAC_ACtFZ_0((uint64_t)v19, (uint64_t)v12);
    swift_bridgeObjectRelease();
    char v10 = v9 ^ 1;
  }
  return v10 & 1;
}

unint64_t sub_1C028EFA8(uint64_t a1)
{
  unint64_t result = sub_1C028EFD0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C028EFD0()
{
  unint64_t result = qword_1EA198EB0;
  if (!qword_1EA198EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198EB0);
  }
  return result;
}

unint64_t sub_1C028F02C(uint64_t a1)
{
  unint64_t result = sub_1C028F054();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C028F054()
{
  unint64_t result = qword_1EA198EB8;
  if (!qword_1EA198EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198EB8);
  }
  return result;
}

unint64_t sub_1C028F0B0(uint64_t a1)
{
  unint64_t result = sub_1C028F0D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C028F0D8()
{
  unint64_t result = qword_1EA198EC0;
  if (!qword_1EA198EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198EC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingNotScaledFontScalingStrategy()
{
  return &type metadata for FormatCodingNotScaledFontScalingStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingRegularFontWeightStrategy()
{
  return &type metadata for FormatCodingRegularFontWeightStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingBlackSixteenSystemFontStrategy()
{
  return &type metadata for FormatCodingBlackSixteenSystemFontStrategy;
}

uint64_t sub_1C028F164()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FeedBannerAdRequester.deinit()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeedBannerAdRequester.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Bool __swiftcall FeedBannerAdRequester.hasScheduledRequest(for:)(Swift::String a1)
{
  swift_retain();
  char v1 = sub_1C151832C();
  swift_release();
  return v1 & 1;
}

Swift::Void __swiftcall FeedBannerAdRequester.executeScheduledRequest(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v4 = sub_1C151E16C();
  uint64_t v15 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  __int16 v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151E1DC();
  uint64_t v7 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t aBlock = countAndFlagsBits;
  uint64_t v18 = (uint64_t)object;
  swift_retain();
  char v10 = sub_1C151832C();
  swift_release();
  if (v10)
  {
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v1;
    v11[3] = countAndFlagsBits;
    v11[4] = object;
    char v21 = sub_1C028FAB4;
    uint64_t v22 = v11;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_1BFC9FC68;
    __int16 v20 = &block_descriptor_14;
    uint64_t v12 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C151E19C();
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1BFDE8CF4((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
    sub_1BFDE826C();
    sub_1BFDE8CF4((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
    sub_1C151FFBC();
    MEMORY[0x1C18C70C0](0, v9, v6, v12);
    _Block_release(v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
    swift_release();
  }
}

uint64_t sub_1C028F594(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1BFEDE21C();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v40 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDE8F08(0, &qword_1EA198EC8, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAdRequester.ScheduledRequest, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v35 - v9;
  uint64_t v11 = type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v39 = (char *)&v35 - v16;
  swift_beginAccess();
  uint64_t v17 = a1[7];
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v37 = v10;
    char v38 = a1;
    uint64_t v19 = v17 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v36 = v12;
    uint64_t v20 = *(void *)(v12 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BFDEA410(v19, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      if (sub_1C151D86C() == a2 && v21 == a3) {
        break;
      }
      char v23 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_12;
      }
      sub_1BFDEA478((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      v19 += v20;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = 1;
        char v10 = v37;
        a1 = v38;
        uint64_t v12 = v36;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    char v10 = v37;
    a1 = v38;
    uint64_t v12 = v36;
    swift_bridgeObjectRelease();
    sub_1BFDE9098((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
    uint64_t v24 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = 1;
  }
LABEL_13:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v24, 1, v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1C0290CE4((uint64_t)v10);
  }
  int v26 = v39;
  sub_1BFDE9098((uint64_t)v10, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
  uint64_t v27 = v40;
  sub_1BFDE91FC(v26, v40);
  swift_beginAccess();
  if (a1[2])
  {
    uint64_t v28 = a1[3];
    swift_endAccess();
    uint64_t ObjectType = swift_getObjectType();
    sub_1BFDE8F08(0, &qword_1EB87A5C8, (uint64_t (*)(uint64_t))sub_1BFEDE21C, MEMORY[0x1E4FBBE00]);
    uint64_t v30 = v41;
    unint64_t v31 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1C1529AE0;
    uint64_t v33 = v42;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v30 + 16))(v32 + v31, v27, v42);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 8);
    swift_unknownObjectRetain();
    v34(v32, ObjectType, v28);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v27, v33);
    return sub_1BFDEA478((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v27, v42);
    sub_1BFDEA478((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
    return swift_endAccess();
  }
}

uint64_t sub_1C028FA9C()
{
  return objectdestroyTm_5(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C028FAB4()
{
  return sub_1C028F594(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1C028FAC0(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C028FAE4(uint64_t a1, uint64_t a2)
{
  return FeedBannerAdRequester.unscheduleRequests(where:)(a1, a2);
}

uint64_t FeedBannerAdRequester.shouldMonitorMotion.getter()
{
  return 0;
}

uint64_t FeedBannerAdRequester.shouldMonitorScroll.getter()
{
  return 1;
}

void FeedBannerAdRequester.blueprintViewportMonitor(_:viewportScrollDataDidChange:)()
{
}

void sub_1C028FB20()
{
}

uint64_t sub_1C028FB28()
{
  return sub_1C151C27C();
}

uint64_t sub_1C028FB54(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4162770](a1, a2, *v2);
}

uint64_t sub_1C028FB80()
{
  return sub_1C151C27C();
}

uint64_t sub_1C028FBAC()
{
  return sub_1C151C27C();
}

uint64_t sub_1C028FBD8()
{
  return sub_1C151C2CC();
}

uint64_t sub_1C028FC04()
{
  return sub_1C151C2CC();
}

uint64_t sub_1C028FC30()
{
  uint64_t v1 = (int *)(type metadata accessor for FeedBannerAd() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v9 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = sub_1C151D87C();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v2 + v1[7];
  uint64_t v7 = sub_1C151DBAC();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  if (*(void *)(v0 + v2 + v1[10] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v9 + v5) & ~v5), v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C028FE08()
{
  return objectdestroyTm_5(MEMORY[0x1E4FBC8D0]);
}

void sub_1C028FE20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151E16C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151E1DC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = (void *)sub_1C151BE9C();
  sub_1C151F32C();
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;

  double v19 = (double)*(uint64_t *)(v1 + 64);
  v42.origin.CGFloat x = v12;
  v42.origin.CGFloat y = v14;
  v42.size.CGFloat width = v16;
  v42.size.CGFloat height = v18;
  double MinX = CGRectGetMinX(v42);
  v43.origin.CGFloat x = v12;
  v43.origin.CGFloat y = v14;
  v43.size.CGFloat width = v16;
  v43.size.CGFloat height = v18;
  CGFloat v21 = MinX - CGRectGetWidth(v43) * v19;
  v44.origin.CGFloat x = v12;
  v44.origin.CGFloat y = v14;
  v44.size.CGFloat width = v16;
  v44.size.CGFloat height = v18;
  double MinY = CGRectGetMinY(v44);
  v45.origin.CGFloat x = v12;
  v45.origin.CGFloat y = v14;
  v45.size.CGFloat width = v16;
  v45.size.CGFloat height = v18;
  CGFloat v23 = MinY - CGRectGetHeight(v45) * v19;
  v46.origin.CGFloat x = v12;
  v46.origin.CGFloat y = v14;
  v46.size.CGFloat width = v16;
  v46.size.CGFloat height = v18;
  double v24 = v19 + v19;
  double v25 = (v19 + v19) * CGRectGetWidth(v46);
  v47.origin.CGFloat x = v12;
  v47.origin.CGFloat y = v14;
  v47.size.CGFloat width = v16;
  v47.size.CGFloat height = v18;
  double v26 = v24 * CGRectGetHeight(v47);
  v52.origin.CGFloat x = v21;
  CGFloat v27 = v21;
  v52.origin.CGFloat y = v23;
  CGFloat v28 = v23;
  v52.size.CGFloat width = v25;
  v52.size.CGFloat height = v26;
  CGRect v48 = CGRectIntersection(*(CGRect *)(v1 + 72), v52);
  CGFloat y = v48.origin.y;
  CGFloat width = v48.size.width;
  CGFloat height = v48.size.height;
  CGFloat x = v48.origin.x;
  double v32 = CGRectGetWidth(v48);
  CGFloat v39 = v27;
  v49.origin.CGFloat x = v27;
  v49.origin.CGFloat y = v28;
  v49.size.CGFloat width = v25;
  v49.size.CGFloat height = v26;
  if (v32 < CGRectGetWidth(v49) / 3.0) {
    goto LABEL_3;
  }
  v50.origin.CGFloat x = x;
  v50.origin.CGFloat y = y;
  v50.size.CGFloat width = width;
  v50.size.CGFloat height = height;
  double v33 = CGRectGetHeight(v50);
  v51.origin.CGFloat x = v39;
  v51.origin.CGFloat y = v28;
  v51.size.CGFloat width = v25;
  v51.size.CGFloat height = v26;
  if (v33 < CGRectGetHeight(v51) / 3.0)
  {
LABEL_3:
    CGFloat v34 = v39;
    *(CGFloat *)(v1 + 72) = v39;
    *(CGFloat *)(v1 + 80) = v28;
    *(double *)(v1 + 88) = v25;
    *(double *)(v1 + 96) = v26;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v1;
    *(CGFloat *)(v35 + 24) = v34;
    *(CGFloat *)(v35 + 32) = v28;
    *(double *)(v35 + 40) = v25;
    *(double *)(v35 + 48) = v26;
    aBlock[4] = sub_1BFDE5960;
    aBlock[5] = v35;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFC9FC68;
    aBlock[3] = &block_descriptor_28;
    uint64_t v36 = _Block_copy(aBlock);
    swift_retain();
    sub_1C151E19C();
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1BFDE8CF4((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
    sub_1BFDE826C();
    sub_1BFDE8CF4((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
    sub_1C151FFBC();
    MEMORY[0x1C18C70C0](0, v9, v5, v36);
    _Block_release(v36);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
  }
}

uint64_t dispatch thunk of FeedBannerAdRequesterType.hasScheduledRequest(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FeedBannerAdRequesterType.executeScheduledRequest(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FeedBannerAdRequesterType.scheduleRequest(for:placement:position:createContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of FeedBannerAdRequesterType.unscheduleRequests(where:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t method lookup function for FeedBannerAdRequester(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedBannerAdRequester);
}

uint64_t *sub_1C02902E4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (int *)type metadata accessor for FeedBannerAd();
    uint64_t v9 = v8[5];
    char v10 = (char *)v4 + v9;
    double v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C151DBAC();
    double v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(uint64_t *)((char *)v4 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    uint64_t v14 = v8[7];
    double v15 = (char *)v4 + v14;
    CGFloat v16 = (char *)a2 + v14;
    *(void *)double v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v8[8];
    CGFloat v18 = (uint64_t *)((char *)v4 + v17);
    double v19 = (uint64_t *)((char *)a2 + v17);
    unint64_t v20 = v19[1];
    if (v20 >= 0x11)
    {
      *CGFloat v18 = *v19;
      v18[1] = v20;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)CGFloat v18 = *(_OWORD *)v19;
    }
    uint64_t v22 = a3[5];
    CGFloat v23 = (char *)v4 + v22;
    double v24 = (char *)a2 + v22;
    uint64_t v25 = sub_1C151D87C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = a3[7];
    *(_OWORD *)((char *)v4 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    CGFloat v27 = (uint64_t *)((char *)v4 + v26);
    CGFloat v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    void *v27 = *v28;
    v27[1] = v29;
  }
  swift_retain();
  return v4;
}

void *sub_1C02904A4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  char v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C151DBAC();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
  uint64_t v13 = v7[7];
  uint64_t v14 = (char *)a1 + v13;
  double v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  void v14[8] = v15[8];
  uint64_t v16 = v7[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  CGFloat v18 = (void *)((char *)a2 + v16);
  unint64_t v19 = v18[1];
  if (v19 >= 0x11)
  {
    void *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  uint64_t v20 = a3[5];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1C151D87C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  swift_retain();
  return a1;
}

void *sub_1C0290618(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151DBAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  char v14 = v13[8];
  *(void *)uint64_t v12 = *(void *)v13;
  void v12[8] = v14;
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  unint64_t v18 = *(void *)((char *)a1 + v15 + 8);
  unint64_t v19 = *(void *)((char *)a2 + v15 + 8);
  if (v18 >= 0x11)
  {
    if (v19 >= 0x11)
    {
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C01A7564((uint64_t)v16);
    goto LABEL_6;
  }
  if (v19 < 0x11)
  {
LABEL_6:
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    goto LABEL_8;
  }
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
LABEL_8:
  uint64_t v20 = a3[5];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1C151D87C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  uint64_t v24 = a3[6];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  uint64_t v27 = a3[7];
  CGFloat v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v30 = v29[1];
  *CGFloat v28 = *v29;
  v28[1] = v30;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1C02907EC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151DBAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  void v12[8] = v13[8];
  *(void *)uint64_t v12 = *(void *)v13;
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  uint64_t v14 = a3[5];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1C151D87C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  return a1;
}

void *sub_1C0290914(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C151DBAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
  uint64_t v12 = v7[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = v7[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  if (*(void *)((char *)a1 + v15 + 8) >= 0x11uLL)
  {
    unint64_t v18 = v17[1];
    if (v18 >= 0x11)
    {
      *uint64_t v16 = *v17;
      v16[1] = v18;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C01A7564((uint64_t)v16);
  }
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
LABEL_6:
  uint64_t v19 = a3[5];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_1C151D87C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  swift_release();
  return a1;
}

uint64_t sub_1C0290A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedBannerAd();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1C151D87C();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1C0290B9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FeedBannerAd();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1C151D87C();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1C0290CAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0290CE4(uint64_t a1)
{
  sub_1BFDE8F08(0, &qword_1EA198EC8, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAdRequester.ScheduledRequest, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FeedCategory.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCategory.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCategory.icon1x.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFF44AD4(v1 + 32, a1);
}

uint64_t FeedCategory.icon2x.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFF44AD4(v1 + 72, a1);
}

uint64_t FeedCategory.icon3x.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFF44AD4(v1 + 112, a1);
}

double FeedCategory.largestCachedIcon.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 112;
  sub_1BFF44AD4(v1 + 112, (uint64_t)v14);
  if (v15)
  {
    __swift_project_boxed_opaque_existential_1(v14, v15);
    sub_1C151A71C();
    uint64_t v6 = v5;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    if (v6)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t v9 = v4;
LABEL_8:
      sub_1BFF44AD4(v9, a1);
      return result;
    }
  }
  else
  {
    sub_1BFF44FE0((uint64_t)v14);
  }
  uint64_t v4 = v2 + 72;
  sub_1BFF44AD4(v2 + 72, (uint64_t)v14);
  if (v15)
  {
    __swift_project_boxed_opaque_existential_1(v14, v15);
    sub_1C151A71C();
    uint64_t v8 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    if (v8) {
      goto LABEL_7;
    }
  }
  else
  {
    sub_1BFF44FE0((uint64_t)v14);
  }
  uint64_t v11 = v2 + 32;
  sub_1BFF44AD4(v11, (uint64_t)v14);
  if (v15)
  {
    __swift_project_boxed_opaque_existential_1(v14, v15);
    sub_1C151A71C();
    uint64_t v13 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    if (v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v11;
      goto LABEL_8;
    }
  }
  else
  {
    sub_1BFF44FE0((uint64_t)v14);
  }
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t FeedCategory.init(identifier:title:icon1x:icon2x:icon3x:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  sub_1C0290FCC(a5, (uint64_t)(a8 + 4));
  sub_1C0290FCC(a6, (uint64_t)(a8 + 9));
  return sub_1C0290FCC(a7, (uint64_t)(a8 + 14));
}

uint64_t sub_1C0290FCC(uint64_t a1, uint64_t a2)
{
  sub_1BFF97C98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static FeedCategory.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

void sub_1C0291060(void *a1@<X8>)
{
  *a1 = 0x40000;
}

void FeedCategory.traits.getter(void *a1@<X8>)
{
  *a1 = 0x40000;
}

void sub_1C0291078(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
}

void FeedCategory.layoutDirection.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
}

double sub_1C0291090@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C15390A0;
  return result;
}

double FeedCategory.kind.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C15390A0;
  return result;
}

uint64_t FeedCategory.debugSourceName.getter()
{
  return 0;
}

uint64_t sub_1C02910BC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCategory.debugTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCategory.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedCategory.debugScoreProfile.getter()
{
  return 0;
}

unint64_t sub_1C029112C(uint64_t a1)
{
  unint64_t result = sub_1C0291154();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0291154()
{
  unint64_t result = qword_1EB85E5D0;
  if (!qword_1EB85E5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E5D0);
  }
  return result;
}

uint64_t destroy for FeedCategory(void *a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (a1[7]) {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 4));
  }
  if (a1[12]) {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 9));
  }
  if (a1[17])
  {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 14));
  }
  return result;
}

uint64_t initializeWithCopy for FeedCategory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2 + 32;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    long long v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(void *)(a1 + 64) = *(void *)(v6 + 32);
  }
  uint64_t v10 = (_OWORD *)(a1 + 72);
  uint64_t v11 = (_OWORD *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 96);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v12;
    *(void *)(a1 + 104) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 88);
    *uint64_t v10 = *v11;
    *(_OWORD *)(a1 + 88) = v14;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
  }
  uint64_t v15 = (_OWORD *)(a1 + 112);
  uint64_t v16 = (_OWORD *)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 136);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = v17;
    *(void *)(a1 + 144) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 128);
    *uint64_t v15 = *v16;
    *(_OWORD *)(a1 + 128) = v19;
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
  }
  return a1;
}

uint64_t assignWithCopy for FeedCategory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  else if (v4)
  {
    *(void *)(a1 + 56) = v4;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v7)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  }
  else if (v7)
  {
    *(void *)(a1 + 96) = v7;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 72, a2 + 72);
    goto LABEL_15;
  }
  long long v8 = *(_OWORD *)(a2 + 72);
  long long v9 = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 72) = v8;
  *(_OWORD *)(a1 + 88) = v9;
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 136);
  if (!*(void *)(a1 + 136))
  {
    if (v10)
    {
      *(void *)(a1 + 136) = v10;
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 112, a2 + 112);
      return a1;
    }
LABEL_21:
    long long v11 = *(_OWORD *)(a2 + 112);
    long long v12 = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 128) = v12;
    return a1;
  }
  if (!v10)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 112);
    goto LABEL_21;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  return a1;
}

uint64_t assignWithTake for FeedCategory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  if (*(void *)(a1 + 96)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  }
  long long v7 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v7;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  if (*(void *)(a1 + 136)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 112);
  }
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

ValueMetadata *type metadata accessor for FeedCategory()
{
  return &type metadata for FeedCategory;
}

void *initializeBufferWithCopyOfBuffer for FormatShareAttributionData(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for SharedItem();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v6 = (int *)v4;
    uint64_t v7 = sub_1C151631C();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + v6[5]) = *((unsigned char *)a2 + v6[5]);
    uint64_t v8 = v6[6];
    long long v9 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v9;
    uint64_t v10 = v6[7];
    long long v11 = (char *)a1 + v10;
    long long v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1C1515FDC();
    long long v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    id v15 = v9;
    v14(v11, v12, v13);
  }
  return a1;
}

uint64_t initializeWithCopy for FormatShareAttributionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SharedItem();
  *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
  uint64_t v6 = v5[6];
  uint64_t v7 = *(void **)(a2 + v6);
  *(void *)(a1 + v6) = v7;
  uint64_t v8 = v5[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C1515FDC();
  long long v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for FormatShareAttributionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SharedItem();
  *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
  uint64_t v6 = v5[6];
  uint64_t v7 = *(void **)(a2 + v6);
  uint64_t v8 = *(void **)(a1 + v6);
  *(void *)(a1 + v6) = v7;
  id v9 = v7;

  uint64_t v10 = v5[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for FormatShareAttributionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SharedItem();
  *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  uint64_t v6 = v5[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for FormatShareAttributionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SharedItem();
  *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
  uint64_t v6 = v5[6];
  uint64_t v7 = *(void **)(a1 + v6);
  *(void *)(a1 + v6) = *(void *)(a2 + v6);

  uint64_t v8 = v5[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatShareAttributionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0291B2C);
}

uint64_t sub_1C0291B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedItem();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FormatShareAttributionData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0291BAC);
}

uint64_t sub_1C0291BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedItem();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void *sub_1C0291C1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedItem();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0292054(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C0292088(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  long long v24 = xmmword_1C1529AE0;
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0292088(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v8);
  sub_1C0181BEC(0);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v24;
  sub_1C0292134(a1, (uint64_t)v7, (uint64_t (*)(void))sub_1C0292054);
  uint64_t v13 = type metadata accessor for FormatShareAttributionData();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v7, 1, v13) == 1)
  {
    sub_1C029219C((uint64_t)v7, (uint64_t (*)(void))sub_1C0292054);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    sub_1C0292134((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SharedItem);
    sub_1C029219C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatShareAttributionData);
    uint64_t v16 = (void *)sub_1C1515E9C();
    id v17 = objc_msgSend(v16, sel_fc_NewsArticleID);

    if (v17)
    {
      uint64_t v14 = sub_1C151E62C();
      uint64_t v15 = v18;
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v15 = 0;
    }
    sub_1C029219C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SharedItem);
  }
  sub_1C0433600(0x696669746E656449, 0xEA00000000007265, v14, v15, (void *)(v12 + v11));
  uint64_t v19 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12 + v11, 0, 1, v19);
  sub_1C09BCFA4(0xD000000000000016, 0x80000001C16097A0, 0, 0, v12, v25);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v20 = swift_allocObject();
  *(void *)(inited + 32) = v20;
  *(void *)(v20 + 48) = v26;
  long long v21 = v25[1];
  *(_OWORD *)(v20 + 16) = v25[0];
  *(_OWORD *)(v20 + 32) = v21;
  uint64_t v22 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v22;
}

void sub_1C0292054(uint64_t a1)
{
}

void sub_1C0292088(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C02920EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0292134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C029219C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t Feed.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id Feed.log.getter()
{
  return *(id *)(v0 + 16);
}

id Feed.dbLog.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t Feed.adsEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t static Feed.databaseUserVersion.getter()
{
  return 10;
}

uint64_t sub_1C029224C()
{
  uint64_t result = sub_1C152088C();
  qword_1EA198ED8 = result;
  unk_1EA198EE0 = v1;
  return result;
}

uint64_t static Feed.databaseVersion.getter()
{
  if (qword_1EA194410 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA198ED8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static Feed.layoutTransitionsValue<A>(on:off:)(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(void))
{
  if (qword_1EB8918D8 != -1) {
    swift_once();
  }
  if (byte_1EB8918C8 == 1) {
    return a1();
  }
  else {
    return a3();
  }
}

uint64_t sub_1C02923A4()
{
  sub_1C151706C();
  sub_1C151704C();
  if (qword_1EB890B28 != -1) {
    swift_once();
  }
  char v0 = sub_1C151705C();
  uint64_t result = swift_release();
  byte_1EB8918C8 = v0 & 1;
  return result;
}

void static Feed.style(navigationItem:backgroundColor:)(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB19D8]), sel_init);
  uint64_t v4 = self;
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_effectWithStyle_, 4);
  objc_msgSend(v5, sel_setBackgroundEffect_, v6);

  objc_msgSend(v5, sel_setBackgroundColor_, a2);
  objc_msgSend(v5, sel_setShadowColor_, 0);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  unint64_t v8 = (void **)MEMORY[0x1E4FB0700];
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  uint64_t v9 = *v8;
  *(void *)(inited + 32) = *v8;
  id v26 = self;
  id v25 = v9;
  id v10 = objc_msgSend(v26, sel_labelColor);
  uint64_t v11 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 40) = v10;
  uint64_t v12 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 72) = v12;
  uint64_t v13 = self;
  double v14 = *MEMORY[0x1E4FB09B8];
  id v15 = v12;
  id v16 = objc_msgSend(v13, sel_systemFontOfSize_weight_, 34.0, v14);
  uint64_t v17 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 104) = v17;
  *(void *)(inited + 80) = v16;
  sub_1BFF991DC(inited);
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  uint64_t v18 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setLargeTitleTextAttributes_, v18);

  uint64_t v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
  *(void *)(v19 + 32) = v25;
  id v20 = v25;
  *(void *)(v19 + 40) = objc_msgSend(v26, sel_labelColor);
  *(void *)(v19 + 64) = v11;
  *(void *)(v19 + 72) = v15;
  id v21 = v15;
  id v22 = objc_msgSend(v13, sel_systemFontOfSize_weight_, 21.0, v14);
  *(void *)(v19 + 104) = v17;
  *(void *)(v19 + 80) = v22;
  sub_1BFF991DC(v19);
  uint64_t v23 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setTitleTextAttributes_, v23);

  id v24 = v5;
  objc_msgSend(a1, sel_setStandardAppearance_, v24);
  objc_msgSend(a1, sel_setScrollEdgeAppearance_, v24);
  objc_msgSend(a1, sel_setCompactAppearance_, v24);
}

uint64_t assignWithCopy for Feed(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 24);
  unint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for Feed(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_1C029286C@<X0>(char a1@<W0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v4 = 0xE90000000000006CLL;
  unint64_t v5 = 0x656E6E6168437369;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v5 = 0x6369706F547369;
      break;
    case 2:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v5 = 0x6C61636F4C7369;
      break;
    case 3:
      unint64_t v4 = 0xE800000000000000;
      goto LABEL_19;
    case 4:
      unint64_t v4 = 0xE90000000000006ELL;
      unint64_t v5 = 0x6F69746365537369;
      break;
    case 5:
      unint64_t v4 = 0xEB00000000726570;
      unint64_t v5 = 0x61707377654E7369;
      break;
    case 6:
      unint64_t v5 = 0x697A6167614D7369;
      unint64_t v4 = 0xEA0000000000656ELL;
      break;
    case 7:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v5 = 0x63696C6275507369;
      break;
    case 8:
      unint64_t v4 = 0xEE00656C62616269;
      unint64_t v5 = 0x7263736275537369;
      break;
    case 9:
      unint64_t v5 = 0xD000000000000011;
      uint64_t v7 = "isExplicitContent";
      goto LABEL_12;
    case 10:
      unint64_t v5 = 0xD000000000000018;
      uint64_t v7 = "isBlockedExplicitContent";
LABEL_12:
      unint64_t v4 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    case 11:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v5 = 0x6E65646469487369;
      break;
    case 12:
      unint64_t v4 = 0x80000001C15FEE80;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 13:
      unint64_t v4 = 0xE900000000000078;
      unint64_t v5 = 0x6F62646E61537369;
      break;
    case 14:
      unint64_t v4 = 0xEA00000000006C61;
      unint64_t v5 = 0x6E7265746E497369;
      break;
    case 15:
      unint64_t v4 = 0xEB00000000646565;
      unint64_t v5 = 0x6672657075537369;
      break;
    case 16:
      unint64_t v4 = 0xED0000746E657645;
LABEL_19:
      unint64_t v5 = 0x7374726F70537369;
      break;
    case 17:
      unint64_t v4 = 0xEA00000000007374;
      unint64_t v5 = 0x726F7053794D7369;
      break;
    case 18:
      unint64_t v4 = 0xEB00000000627548;
      unint64_t v5 = 0x656C7A7A75507369;
      break;
    default:
      break;
  }
  *a3 = v5;
  a3[1] = v4;
  uint64_t v8 = (uint64_t)a3 + *(int *)(type metadata accessor for FormatJsonKeyValue() + 20);
  return sub_1C02953C4(a2, v8);
}

void sub_1C0292B2C(id a1@<X0>, uint64_t *a2@<X8>)
{
  switch(*v2)
  {
    case 1:
      id v7 = objc_msgSend(a1, sel_theme);
      if (!v7) {
        goto LABEL_80;
      }
      id v6 = objc_msgSend(v7, sel_darkStyleForegroundColor);
      goto LABEL_45;
    case 2:
      id v8 = objc_msgSend(a1, sel_theme);
      if (!v8) {
        goto LABEL_84;
      }
      id v9 = objc_msgSend(v8, sel_backgroundColor);
      goto LABEL_35;
    case 3:
      id v10 = objc_msgSend(a1, sel_theme);
      if (!v10) {
        goto LABEL_84;
      }
      id v9 = objc_msgSend(v10, sel_darkStyleBackgroundColor);
      goto LABEL_35;
    case 4:
      id v11 = objc_msgSend(a1, sel_groupTitleColor);
      if (!v11) {
        goto LABEL_80;
      }
      goto LABEL_13;
    case 5:
      id v11 = objc_msgSend(a1, sel_groupDarkStyleTitleColor);
      if (!v11) {
        goto LABEL_80;
      }
LABEL_13:
      id v12 = v11;
      goto LABEL_46;
    case 6:
      id v13 = objc_msgSend(a1, sel_asSports);
      if (!v13) {
        goto LABEL_84;
      }
      id v14 = objc_msgSend(v13, sel_sportsTheme);
      swift_unknownObjectRelease();
      if (!v14) {
        goto LABEL_84;
      }
      id v9 = objc_msgSend(v14, sel_sportsPrimaryColor);
      goto LABEL_35;
    case 7:
      id v15 = objc_msgSend(a1, sel_asSports);
      if (!v15) {
        goto LABEL_84;
      }
      id v16 = objc_msgSend(v15, sel_sportsTheme);
      swift_unknownObjectRelease();
      if (!v16) {
        goto LABEL_84;
      }
      id v9 = objc_msgSend(v16, sel_sportsSecondaryColor);
      goto LABEL_35;
    case 8:
      swift_getObjectType();
      id v12 = FCTagProviding.iconColor.getter();
      sub_1C151F9DC();
      double v18 = v17;
      double v20 = v19;
      double v22 = v21;
      uint64_t v24 = v23;
      uint64_t v25 = swift_allocObject();
      *(double *)(v25 + 16) = v18 * 255.0;
      *(double *)(v25 + 24) = v20 * 255.0;
      *(double *)(v25 + 32) = v22 * 255.0;
      *(void *)(v25 + 40) = v24;
      *(unsigned char *)(v25 + 48) = 0;
      goto LABEL_47;
    case 9:
      id v26 = objc_msgSend(a1, sel_theme);
      if (v26)
      {
        id v27 = objc_msgSend(v26, sel_navigationChromeBackgroundColor);
        swift_unknownObjectRelease();
        if (v27)
        {
          id v28 = objc_msgSend(v27, sel_ne_color);

          sub_1C151F9DC();
          double v30 = v29;
          double v32 = v31;
          double v34 = v33;
          uint64_t v36 = v35;
          uint64_t v37 = swift_allocObject();
          *(double *)(v37 + 16) = v30 * 255.0;
          *(double *)(v37 + 24) = v32 * 255.0;
          *(double *)(v37 + 32) = v34 * 255.0;
          *(void *)(v37 + 40) = v36;
          *(unsigned char *)(v37 + 48) = 0;
          id v38 = objc_msgSend(a1, sel_theme);
          if (v38
            && (id v39 = objc_msgSend(v38, sel_darkStyleNavigationChromeBackgroundColor),
                swift_unknownObjectRelease(),
                v39))
          {
            id v40 = objc_msgSend(v39, sel_ne_color);
          }
          else
          {
            id v40 = v28;
          }
          uint64_t v75 = swift_allocObject();
          uint64_t v105 = v37 | 0x6000000000000000;
          sub_1C151F9DC();
          double v107 = v106;
          double v109 = v108;
          double v111 = v110;
          uint64_t v113 = v112;
          uint64_t v114 = swift_allocObject();
          *(double *)(v114 + 16) = v107 * 255.0;
          *(double *)(v114 + 24) = v109 * 255.0;
          *(double *)(v114 + 32) = v111 * 255.0;
          *(void *)(v114 + 40) = v113;
          *(unsigned char *)(v114 + 48) = 0;

          uint64_t v92 = v114 | 0x6000000000000000;
          goto LABEL_76;
        }
      }
      if (objc_msgSend(a1, sel_theme))
      {
        swift_getObjectType();
        char v96 = FCFeedTheming.hasNavigationChromeBackgroundImage.getter();
        swift_unknownObjectRelease();
        if (v96)
        {
          id v97 = objc_msgSend(self, sel_systemBackgroundColor);
          uint64_t v98 = swift_allocObject();
          *(void *)(v98 + 16) = v97;
          id v99 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
          aBlock[4] = (uint64_t)sub_1C029539C;
          aBlock[5] = v98;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_1BFDF2404;
          aBlock[3] = (uint64_t)&block_descriptor_15;
          uint64_t v100 = _Block_copy(aBlock);
          id v101 = v97;
          id v102 = objc_msgSend(v99, sel_initWithDynamicProvider_, v100);
          _Block_release(v100);

          swift_release();
          UIColor.dynamicFormatColor.getter(a2);

          return;
        }
      }
      if (objc_msgSend(a1, sel_asSports))
      {
        swift_getObjectType();
        id v104 = FCSportsProviding.navigationBarBackgroundColor.getter();
        goto LABEL_68;
      }
      if (objc_msgSend(a1, sel_theme))
      {
        swift_getObjectType();
        id v125 = FCFeedTheming.navigationBarBackgroundColor.getter();
        goto LABEL_83;
      }
LABEL_84:
      uint64_t v126 = swift_allocObject();
      char v127 = 29;
      goto LABEL_85;
    case 0xA:
      id v41 = objc_msgSend(a1, sel_theme);
      if (v41)
      {
        id v42 = objc_msgSend(v41, sel_navigationChromeBackgroundColor);
        swift_unknownObjectRelease();
        if (v42)
        {
          id v43 = objc_msgSend(v42, sel_ne_color);

          CGRect v44 = (void *)sub_1C151F9FC();
          sub_1C151F9DC();
          double v46 = v45;
          double v48 = v47;
          double v50 = v49;
          uint64_t v52 = v51;
          uint64_t v53 = swift_allocObject();
          *(double *)(v53 + 16) = v46 * 255.0;
          *(double *)(v53 + 24) = v48 * 255.0;
          *(double *)(v53 + 32) = v50 * 255.0;
          *(void *)(v53 + 40) = v52;
          *(unsigned char *)(v53 + 48) = 0;

          id v54 = objc_msgSend(a1, sel_theme);
          if (v54
            && (id v55 = objc_msgSend(v54, sel_darkStyleNavigationChromeBackgroundColor),
                swift_unknownObjectRelease(),
                v55))
          {
            id v56 = objc_msgSend(v55, sel_ne_color);
          }
          else
          {
            id v56 = v43;
          }
          uint64_t v75 = swift_allocObject();
          uint64_t v105 = v53 | 0x6000000000000000;
          v115 = (void *)sub_1C151F9FC();

          sub_1C151F9DC();
          double v117 = v116;
          double v119 = v118;
          double v121 = v120;
          uint64_t v123 = v122;
          uint64_t v124 = swift_allocObject();
          *(double *)(v124 + 16) = v117 * 255.0;
          *(double *)(v124 + 24) = v119 * 255.0;
          *(double *)(v124 + 32) = v121 * 255.0;
          *(void *)(v124 + 40) = v123;
          *(unsigned char *)(v124 + 48) = 0;

          uint64_t v92 = v124 | 0x6000000000000000;
LABEL_76:
          *(void *)(v75 + 16) = v105;
          goto LABEL_77;
        }
      }
      if (objc_msgSend(a1, sel_theme))
      {
        swift_getObjectType();
        char v103 = FCFeedTheming.hasNavigationChromeBackgroundImage.getter();
        swift_unknownObjectRelease();
        if (v103) {
          goto LABEL_80;
        }
      }
      if (objc_msgSend(a1, sel_asSports))
      {
        swift_getObjectType();
        id v104 = FCSportsProviding.navigationBarForegroundColor.getter();
LABEL_68:
        id v129 = v104;
        UIColor.dynamicFormatColor.getter(a2);
        swift_unknownObjectRelease();
        goto LABEL_69;
      }
      if (!objc_msgSend(a1, sel_theme))
      {
LABEL_80:
        uint64_t v126 = swift_allocObject();
        char v127 = 21;
LABEL_85:
        *(unsigned char *)(v126 + 16) = v127;
        *(void *)(v126 + 24) = 0x3FF0000000000000;
        *(unsigned char *)(v126 + 32) = 0;
        uint64_t v71 = v126 | 0x1000000000000000;
      }
      else
      {
        swift_getObjectType();
        id v125 = FCFeedTheming.navigationBarForegroundColor.getter();
LABEL_83:
        uint64_t v128 = v125;
        swift_unknownObjectRelease();
        UIColor.dynamicFormatColor.getter(aBlock);

        uint64_t v71 = aBlock[0];
      }
      goto LABEL_86;
    case 0xB:
      id v57 = objc_msgSend(a1, sel_theme);
      if (!v57) {
        goto LABEL_84;
      }
      id v9 = objc_msgSend(v57, sel_feedBackgroundColor);
      goto LABEL_35;
    case 0xC:
      id v58 = objc_msgSend(a1, sel_theme);
      if (!v58) {
        goto LABEL_84;
      }
      id v9 = objc_msgSend(v58, sel_darkStyleFeedBackgroundColor);
LABEL_35:
      id v12 = v9;
      swift_unknownObjectRelease();
      if (!v12) {
        goto LABEL_84;
      }
      goto LABEL_46;
    case 0xD:
      id v59 = objc_msgSend(a1, sel_theme);
      if (!v59) {
        goto LABEL_84;
      }
      id v129 = objc_msgSend(v59, sel_feedBackgroundColor);
      swift_unknownObjectRelease();
      if (!v129) {
        goto LABEL_84;
      }
      id v60 = objc_msgSend(a1, sel_theme);
      if (!v60) {
        goto LABEL_65;
      }
      id v61 = objc_msgSend(v60, sel_darkStyleFeedBackgroundColor);
      goto LABEL_52;
    case 0xE:
      id v62 = objc_msgSend(a1, sel_theme);
      if (!v62) {
        goto LABEL_80;
      }
      id v6 = objc_msgSend(v62, sel_feedControlColor);
      goto LABEL_45;
    case 0xF:
      id v63 = objc_msgSend(a1, sel_theme);
      if (!v63) {
        goto LABEL_80;
      }
      id v6 = objc_msgSend(v63, sel_darkStyleFeedControlColor);
      goto LABEL_45;
    case 0x10:
      id v72 = objc_msgSend(a1, sel_theme);
      if (!v72) {
        goto LABEL_80;
      }
      id v129 = objc_msgSend(v72, sel_feedControlColor);
      swift_unknownObjectRelease();
      if (!v129) {
        goto LABEL_80;
      }
      id v73 = objc_msgSend(a1, sel_theme);
      if (!v73) {
        goto LABEL_65;
      }
      id v61 = objc_msgSend(v73, sel_darkStyleFeedControlColor);
LABEL_52:
      id v74 = v61;
      swift_unknownObjectRelease();
      if (v74)
      {
        uint64_t v75 = swift_allocObject();
        uint64_t v76 = swift_allocObject();
        objc_msgSend(v129, sel_red);
        double v78 = v77 * 255.0;
        objc_msgSend(v129, sel_green);
        double v80 = v79 * 255.0;
        objc_msgSend(v129, sel_blue);
        double v82 = v81 * 255.0;
        objc_msgSend(v129, sel_alpha);
        *(double *)(v76 + 16) = v78;
        *(double *)(v76 + 24) = v80;
        *(double *)(v76 + 32) = v82;
        *(void *)(v76 + 40) = v83;
        *(unsigned char *)(v76 + 48) = 0;
        uint64_t v84 = swift_allocObject();
        objc_msgSend(v74, sel_red);
        double v86 = v85 * 255.0;
        objc_msgSend(v74, sel_green);
        double v88 = v87 * 255.0;
        objc_msgSend(v74, sel_blue);
        double v90 = v89 * 255.0;
        objc_msgSend(v74, sel_alpha);
        *(double *)(v84 + 16) = v86;
        *(double *)(v84 + 24) = v88;
        *(double *)(v84 + 32) = v90;
        *(void *)(v84 + 40) = v91;
        *(unsigned char *)(v84 + 48) = 0;

        uint64_t v92 = v84 | 0x6000000000000000;
        *(void *)(v75 + 16) = v76 | 0x6000000000000000;
LABEL_77:
        *(void *)(v75 + 24) = v92;
        uint64_t v71 = v75 | 0x3000000000000000;
LABEL_86:
        *a2 = v71;
      }
      else
      {
LABEL_65:
        FCColor.formatColor.getter(a2);
LABEL_69:
      }
      return;
    case 0x11:
      id v93 = objc_msgSend(a1, sel_asSports);
      if (v93)
      {
        id v94 = objc_msgSend(v93, sel_sportsTheme);
        swift_unknownObjectRelease();
        if (v94)
        {
          id v12 = objc_msgSend(v94, sel_sportsEventNavigationForegroundColor);
          swift_unknownObjectRelease();
          if (v12) {
            goto LABEL_46;
          }
        }
      }
      uint64_t v95 = swift_allocObject();
      *(unsigned char *)(v95 + 16) = 11;
      *(void *)(v95 + 24) = 0x3FF0000000000000;
      *(unsigned char *)(v95 + 32) = 0;
      uint64_t v71 = v95 | 0x2000000000000000;
      goto LABEL_86;
    default:
      id v5 = objc_msgSend(a1, sel_theme);
      if (!v5) {
        goto LABEL_80;
      }
      id v6 = objc_msgSend(v5, sel_foregroundColor);
LABEL_45:
      id v12 = v6;
      swift_unknownObjectRelease();
      if (!v12) {
        goto LABEL_80;
      }
LABEL_46:
      uint64_t v25 = swift_allocObject();
      objc_msgSend(v12, sel_red);
      double v65 = v64 * 255.0;
      objc_msgSend(v12, sel_green);
      double v67 = v66 * 255.0;
      objc_msgSend(v12, sel_blue);
      double v69 = v68 * 255.0;
      objc_msgSend(v12, sel_alpha);
      *(double *)(v25 + 16) = v65;
      *(double *)(v25 + 24) = v67;
      *(double *)(v25 + 32) = v69;
      *(void *)(v25 + 40) = v70;
      *(unsigned char *)(v25 + 48) = 0;
LABEL_47:

      uint64_t v71 = v25 | 0x6000000000000000;
      goto LABEL_86;
  }
}

uint64_t sub_1C02938D8(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C007DE8C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C007DE8C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0293964()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C007DE8C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C02939C8()
{
  sub_1C007DE8C(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0293A1C()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C007DE8C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

void sub_1C0293A7C(void *a1@<X8>)
{
  *a1 = &unk_1F1B647D0;
}

uint64_t FormatTagBinding.Color.hash(into:)()
{
  return sub_1C1520DCC();
}

BOOL static FormatTagBinding.Color.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void *static FormatTagBinding.Color.allCases.getter()
{
  return &unk_1F1B69D50;
}

uint64_t FormatTagBinding.Color.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0293B24()
{
  unint64_t result = qword_1EA198EE8;
  if (!qword_1EA198EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198EE8);
  }
  return result;
}

unint64_t sub_1C0293B78(uint64_t a1)
{
  unint64_t result = sub_1C0293BA0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0293BA0()
{
  unint64_t result = qword_1EA198EF0;
  if (!qword_1EA198EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198EF0);
  }
  return result;
}

uint64_t sub_1C0293BF4()
{
  return sub_1C0293CE4(&qword_1EA198EF8, &qword_1EA198F00);
}

void sub_1C0293C24(void *a1@<X8>)
{
  *a1 = &unk_1F1B69D50;
}

unint64_t sub_1C0293C34(void *a1)
{
  a1[1] = sub_1BFE2DE40();
  a1[2] = sub_1C007DD68();
  unint64_t result = sub_1C0293B24();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatTagBinding.Color()
{
  return &type metadata for FormatTagBinding.Color;
}

ValueMetadata *_s5ColorO10CodingTypeOMa()
{
  return &_s5ColorO10CodingTypeON;
}

uint64_t sub_1C0293CB4()
{
  return sub_1C0293CE4(&qword_1EA198F08, &qword_1EA198F10);
}

uint64_t sub_1C0293CE4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC6CA08(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0293D38()
{
  unint64_t result = qword_1EA198F18;
  if (!qword_1EA198F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198F18);
  }
  return result;
}

uint64_t sub_1C0293D8C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  switch(*a1)
  {
    case 1:
      char v8 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v8, &v89);
      uint64_t v9 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      id v10 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *id v10 = v9;
      uint64_t v11 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000011;
      id v13 = "Foreground (Dark)";
      goto LABEL_20;
    case 2:
      id v14 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v14, &v89);
      uint64_t v15 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      id v16 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *id v16 = v15;
      uint64_t v17 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
      swift_unknownObjectRelease();
      *(_OWORD *)a2 = xmmword_1C1539200;
      break;
    case 3:
      double v18 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v18, &v89);
      uint64_t v19 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v20 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *double v20 = v19;
      uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000011;
      id v13 = "Background (Dark)";
      goto LABEL_20;
    case 4:
      double v22 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v22, &v89);
      uint64_t v23 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v24 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *uint64_t v24 = v23;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
      swift_unknownObjectRelease();
      *(_OWORD *)a2 = xmmword_1C15391F0;
      break;
    case 5:
      id v26 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v26, &v89);
      uint64_t v27 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      id v28 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *id v28 = v27;
      uint64_t v29 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000012;
      id v13 = "Group Title (Dark)";
      goto LABEL_20;
    case 6:
      double v30 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v30, &v89);
      uint64_t v31 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v32 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *double v32 = v31;
      uint64_t v33 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
      swift_unknownObjectRelease();
      *(_OWORD *)a2 = xmmword_1C15391E0;
      break;
    case 7:
      double v34 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v34, &v89);
      uint64_t v35 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v36 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *uint64_t v36 = v35;
      uint64_t v37 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 0, 1, v37);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000010;
      id v13 = "Sports Secondary";
      goto LABEL_20;
    case 8:
      swift_getObjectType();
      swift_unknownObjectRetain();
      id v38 = FCTagProviding.iconColor.getter();
      sub_1C151F9DC();
      double v40 = v39;
      double v42 = v41;
      double v44 = v43;
      uint64_t v46 = v45;
      uint64_t v47 = swift_allocObject();
      *(double *)(v47 + 16) = v40 * 255.0;
      *(double *)(v47 + 24) = v42 * 255.0;
      *(double *)(v47 + 32) = v44 * 255.0;
      *(void *)(v47 + 40) = v46;
      *(unsigned char *)(v47 + 48) = 0;

      uint64_t v48 = v47 | 0x6000000000000000;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v49 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *double v49 = v48;
      uint64_t v50 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
      swift_unknownObjectRelease();
      *(_OWORD *)a2 = xmmword_1C15391D0;
      break;
    case 9:
      uint64_t v51 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v51, &v89);
      uint64_t v52 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v53 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *uint64_t v53 = v52;
      uint64_t v54 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000012;
      id v13 = "Nav Bar Background";
      goto LABEL_20;
    case 0xA:
      id v55 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v55, &v89);
      uint64_t v56 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      id v57 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *id v57 = v56;
      uint64_t v58 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 0, 1, v58);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000012;
      id v13 = "Nav Bar Foreground";
      goto LABEL_20;
    case 0xB:
      id v59 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v59, &v89);
      uint64_t v60 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      id v61 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *id v61 = v60;
      uint64_t v62 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
      swift_unknownObjectRelease();
      *(_OWORD *)a2 = xmmword_1C15391C0;
      break;
    case 0xC:
      id v63 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v63, &v89);
      uint64_t v64 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v65 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *double v65 = v64;
      uint64_t v66 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 0, 1, v66);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000016;
      id v13 = "Feed Background (Dark)";
      goto LABEL_20;
    case 0xD:
      double v67 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v67, &v89);
      uint64_t v68 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v69 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *double v69 = v68;
      uint64_t v70 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 0, 1, v70);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000019;
      id v13 = "Feed Background (Dynamic)";
      goto LABEL_20;
    case 0xE:
      uint64_t v71 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v71, &v89);
      uint64_t v72 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      id v73 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *id v73 = v72;
      uint64_t v74 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 0, 1, v74);
      swift_unknownObjectRelease();
      *(_OWORD *)a2 = xmmword_1C15391B0;
      break;
    case 0xF:
      uint64_t v75 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v75, &v89);
      uint64_t v76 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v77 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *double v77 = v76;
      uint64_t v78 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 0, 1, v78);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000013;
      id v13 = "Feed Control (Dark)";
      goto LABEL_20;
    case 0x10:
      double v79 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v79, &v89);
      uint64_t v80 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v81 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *double v81 = v80;
      uint64_t v82 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000016;
      id v13 = "Feed Control (Dynamic)";
      goto LABEL_20;
    case 0x11:
      uint64_t v83 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v83, &v89);
      uint64_t v84 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      double v85 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *double v85 = v84;
      uint64_t v86 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 0, 1, v86);
      swift_unknownObjectRelease();
      unint64_t v12 = 0xD000000000000028;
      id v13 = "Sports Event Navigation Foreground Color";
LABEL_20:
      *(void *)a2 = v12;
      *(void *)(a2 + 8) = (unint64_t)(v13 - 32) | 0x8000000000000000;
      break;
    default:
      unint64_t v3 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v3, &v89);
      uint64_t v4 = v89;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v6 = (uint64_t *)(a2 + *(int *)(v5 + 24));
      *uint64_t v6 = v4;
      uint64_t v7 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
      swift_unknownObjectRelease();
      *(_OWORD *)a2 = xmmword_1C1539210;
      break;
  }
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  uint64_t v87 = a2 + *(int *)(v5 + 28);
  *(void *)uint64_t v87 = 0;
  *(void *)(v87 + 8) = 0;
  *(unsigned char *)(v87 + 16) = -1;
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
}

uint64_t sub_1C0294AD8@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FormatJson();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  switch(*a1)
  {
    case 1:
      uint64_t v9 = 0xD000000000000018;
      char v41 = 1;
      id v10 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v10, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = "darkStyleForegroundColor";
      goto LABEL_21;
    case 2:
      char v41 = 2;
      unint64_t v12 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v12, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      unsigned int v8 = 1801675106;
      goto LABEL_5;
    case 3:
      uint64_t v9 = 0xD000000000000018;
      char v41 = 3;
      id v14 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v14, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = "darkStyleBackgroundColor";
      goto LABEL_21;
    case 4:
      char v41 = 4;
      uint64_t v15 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v15, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      unint64_t v13 = 0xEF726F6C6F43656CLL;
      uint64_t v9 = 0x74695470756F7267;
      break;
    case 5:
      uint64_t v9 = 0xD000000000000018;
      char v41 = 5;
      id v16 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v16, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = "groupDarkStyleTitleColor";
      goto LABEL_21;
    case 6:
      char v41 = 6;
      uint64_t v17 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v17, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD000000000000012;
      uint64_t v11 = "sportsPrimaryColor";
      goto LABEL_21;
    case 7:
      char v41 = 7;
      double v18 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v18, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD000000000000014;
      uint64_t v11 = "sportsSecondaryColor";
      goto LABEL_21;
    case 8:
      swift_getObjectType();
      swift_unknownObjectRetain();
      id v19 = FCTagProviding.iconColor.getter();
      sub_1C151F9DC();
      double v21 = v20;
      double v23 = v22;
      double v25 = v24;
      uint64_t v27 = v26;
      uint64_t v28 = swift_allocObject();
      *(double *)(v28 + 16) = v21 * 255.0;
      *(double *)(v28 + 24) = v23 * 255.0;
      *(double *)(v28 + 32) = v25 * 255.0;
      *(void *)(v28 + 40) = v27;
      *(unsigned char *)(v28 + 48) = 0;
      swift_unknownObjectRelease();

      *uint64_t v6 = v28 | 0x6000000000000000;
      swift_storeEnumTagMultiPayload();
      unint64_t v13 = 0xE900000000000072;
      uint64_t v9 = 0x6F6C6F436E6F6369;
      break;
    case 9:
      char v41 = 9;
      uint64_t v29 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v29, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD000000000000015;
      uint64_t v11 = "navBarBackgroundColor";
      goto LABEL_21;
    case 0xA:
      char v41 = 10;
      double v30 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v30, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD000000000000015;
      uint64_t v11 = "navBarForegroundColor";
      goto LABEL_21;
    case 0xB:
      char v41 = 11;
      uint64_t v31 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v31, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD000000000000013;
      uint64_t v11 = "feedBackgroundColor";
      goto LABEL_21;
    case 0xC:
      char v41 = 12;
      double v32 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v32, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD00000000000001CLL;
      uint64_t v11 = "darkStyleFeedBackgroundColor";
      goto LABEL_21;
    case 0xD:
      char v41 = 13;
      uint64_t v33 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v33, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD00000000000001ALL;
      uint64_t v11 = "dynamicFeedBackgroundColor";
      goto LABEL_21;
    case 0xE:
      char v41 = 14;
      double v34 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v34, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD000000000000010;
      uint64_t v11 = "feedControlColor";
      goto LABEL_21;
    case 0xF:
      char v41 = 15;
      uint64_t v35 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v35, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD000000000000019;
      uint64_t v11 = "darkStyleFeedControlColor";
      goto LABEL_21;
    case 0x10:
      char v41 = 16;
      uint64_t v36 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v36, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD000000000000017;
      uint64_t v11 = "dynamicFeedControlColor";
      goto LABEL_21;
    case 0x11:
      char v41 = 17;
      uint64_t v37 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v37, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = 0xD000000000000024;
      uint64_t v11 = "sportsEventNavigationForegroundColor";
LABEL_21:
      unint64_t v13 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      break;
    default:
      char v41 = 0;
      uint64_t v7 = (void *)swift_unknownObjectRetain();
      sub_1C0292B2C(v7, &v42);
      swift_unknownObjectRelease();
      *uint64_t v6 = v42;
      swift_storeEnumTagMultiPayload();
      unsigned int v8 = 1701998438;
LABEL_5:
      uint64_t v9 = v8 | 0x756F726700000000;
      unint64_t v13 = 0xEF726F6C6F43646ELL;
      break;
  }
  *a2 = v9;
  a2[1] = v13;
  uint64_t v38 = type metadata accessor for FormatJsonKeyValue();
  return sub_1C02953C4((uint64_t)v6, (uint64_t)a2 + *(int *)(v38 + 20));
}

double sub_1C0295258@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v6[2] = a1;
  uint64_t v3 = sub_1C0182048((void (*)(char *))sub_1C02953A4, (uint64_t)v6, (uint64_t)&unk_1F1B647D0);
  sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v3, v7);
  swift_bridgeObjectRelease();
  double result = *(double *)v7;
  long long v5 = v7[1];
  *(_OWORD *)a2 = v7[0];
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = v8;
  return result;
}

uint64_t sub_1C02952FC()
{
  return swift_deallocObject();
}

uint64_t sub_1C029530C()
{
  return swift_deallocObject();
}

uint64_t sub_1C029531C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0295364()
{
  return swift_deallocObject();
}

id sub_1C029539C(uint64_t a1)
{
  return sub_1C0B34204(a1, *(id *)(v1 + 16));
}

uint64_t sub_1C02953A4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0293D8C(a1, a2);
}

uint64_t sub_1C02953C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatJson();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C029542C(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v4 = v3;
    }
    else {
      unint64_t v4 = 0;
    }
    if (v2 >= v4) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C029546C(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_1C152020C();
      }
      uint64_t v7 = (uint64_t)sub_1BFDA238C(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        id v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_1C02969B8(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_1C02956BC@<X0>(_OWORD *a1@<X8>)
{
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v2 = sub_1C152013C();
  swift_getObjectType();
  uint64_t result = sub_1C152013C();
  if (v2 == result)
  {
    char v4 = sub_1C152014C();
    swift_unknownObjectRelease();
    if (v4)
    {
      uint64_t result = swift_unknownObjectRelease();
      a1[1] = 0u;
      a1[2] = 0u;
      *a1 = 0u;
    }
    else
    {
      sub_1C15203AC();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C02957D8(uint64_t a1)
{
  uint64_t result = sub_1C13F1474();
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  else {
    return sub_1C0297310(result, v3, 0, a1);
  }
}

uint64_t sub_1C0295854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1BFD44A04(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = type metadata accessor for WebEmbedDataVisualization();
    char v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_1C0297260(result, v5, a1, a2);
    uint64_t v12 = type metadata accessor for WebEmbedDataVisualization();
    char v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  return v8(v10, v11, 1, v9);
}

uint64_t sub_1C0295938@<X0>(uint64_t a1@<X8>)
{
  sub_1C0297718();
  sub_1BFFBA76C(&qword_1EB8636E0, (void (*)(uint64_t))sub_1C0297718);
  sub_1C151F09C();
  sub_1C151F0EC();
  if (v9[4] == v9[0])
  {
    uint64_t v2 = sub_1C15167BC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    char v4 = (void (*)(void *, void))sub_1C151F19C();
    uint64_t v6 = v5;
    uint64_t v7 = sub_1C15167BC();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
    v4(v9, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_1C0295AD4(uint64_t a1)
{
  return sub_1C0295AEC(a1, (uint64_t (*)(void))sub_1BFEABF78);
}

uint64_t sub_1C0295AEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result = a2();
  if (v5) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v4)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  sub_1C029754C(result, v4, 0, a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0295B58(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a2 + 32;
  uint64_t v5 = a1;
  while (2)
  {
    unint64_t v6 = 0xE700000000000000;
    uint64_t v7 = 0x656D6167657270;
    switch(*(unsigned char *)(v4 + v3))
    {
      case 1:
        unint64_t v6 = 0xE800000000000000;
        uint64_t v7 = 0x6576694C7261656ELL;
        break;
      case 2:
        uint64_t v7 = 0x6572676F72506E69;
        unint64_t v6 = 0xEA00000000007373;
        break;
      case 3:
        unint64_t v6 = 0xE500000000000000;
        uint64_t v7 = 0x6B61657262;
        break;
      case 4:
        uint64_t v7 = 0x656E6F7074736F70;
        goto LABEL_10;
      case 5:
        uint64_t v7 = 0x65646E6570737573;
        goto LABEL_10;
      case 6:
        uint64_t v7 = 0x656C6C65636E6163;
LABEL_10:
        unint64_t v6 = 0xE900000000000064;
        break;
      case 7:
        uint64_t v7 = 0x646579616C6564;
        break;
      case 8:
        unint64_t v6 = 0xE500000000000000;
        uint64_t v7 = 0x6C616E6966;
        break;
      case 9:
        uint64_t v7 = 0x74696566726F66;
        break;
      case 0xA:
        uint64_t v7 = 0x6E776F6E6B6E75;
        break;
      default:
        break;
    }
    unint64_t v8 = 0xE700000000000000;
    uint64_t v9 = 0x656D6167657270;
    switch(v5)
    {
      case 1:
        unint64_t v8 = 0xE800000000000000;
        if (v7 == 0x6576694C7261656ELL) {
          goto LABEL_33;
        }
        goto LABEL_34;
      case 2:
        unint64_t v8 = 0xEA00000000007373;
        if (v7 != 0x6572676F72506E69) {
          goto LABEL_34;
        }
        goto LABEL_33;
      case 3:
        unint64_t v8 = 0xE500000000000000;
        if (v7 != 0x6B61657262) {
          goto LABEL_34;
        }
        goto LABEL_33;
      case 4:
        uint64_t v10 = 0x656E6F7074736F70;
        goto LABEL_25;
      case 5:
        uint64_t v10 = 0x65646E6570737573;
        goto LABEL_25;
      case 6:
        uint64_t v10 = 0x656C6C65636E6163;
LABEL_25:
        unint64_t v8 = 0xE900000000000064;
        if (v7 != v10) {
          goto LABEL_34;
        }
        goto LABEL_33;
      case 7:
        if (v7 != 0x646579616C6564) {
          goto LABEL_34;
        }
        goto LABEL_33;
      case 8:
        unint64_t v8 = 0xE500000000000000;
        if (v7 != 0x6C616E6966) {
          goto LABEL_34;
        }
        goto LABEL_33;
      case 9:
        uint64_t v9 = 0x74696566726F66;
        goto LABEL_32;
      case 10:
        if (v7 != 0x6E776F6E6B6E75) {
          goto LABEL_34;
        }
        goto LABEL_33;
      default:
LABEL_32:
        if (v7 != v9) {
          goto LABEL_34;
        }
LABEL_33:
        if (v6 == v8)
        {
          swift_bridgeObjectRelease_n();
          return v3;
        }
LABEL_34:
        char v11 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v11) {
          return v3;
        }
        if (v2 != ++v3) {
          continue;
        }
        uint64_t v3 = 0;
        break;
    }
    return v3;
  }
}

uint64_t sub_1C0295EC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_1C1520A9C() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = sub_1C1520A9C();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

uint64_t sub_1C0295FB0()
{
  return 0;
}

uint64_t sub_1C0296058()
{
  return 0;
}

uint64_t FormatInteger.description.getter()
{
  if (*(unsigned char *)(v0 + 16) != 1) {
    return sub_1C152088C();
  }
  sub_1C151E80C();
  sub_1C151E80C();
  return 0x286E6F6974706FLL;
}

uint64_t FormatInteger.optionIdentifiers.getter()
{
  if (*((unsigned char *)v0 + 16) != 1) {
    return 0;
  }
  uint64_t v3 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = v3[1];
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A890);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
  *(void *)(v4 + 32) = v1;
  *(void *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t FormatInteger.init(value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t FormatInteger.value(contextLayoutOptions:)(uint64_t a1)
{
  sub_1C00AB000();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)v1;
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    uint64_t v11 = *(void *)(v1 + 8);
    swift_bridgeObjectRetain();
    FormatOptionCollection.subscript.getter(v10, v11, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1BFEFE928((uint64_t)v5, (uint64_t (*)(void))sub_1C00AB000);
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA76C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v12 = v10;
      v12[1] = v11;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    else
    {
      sub_1BFE94AD4(v10, v11, 1);
      sub_1C00AB068((uint64_t)v5, (uint64_t)v9);
      uint64_t v15 = *((void *)v9 + 2);
      swift_retain();
      uint64_t v10 = sub_1BFF5EAFC(&v15, a1, (uint64_t)v9);
      swift_release();
      sub_1BFEFE928((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
    }
  }
  return v10;
}

uint64_t sub_1C0296474()
{
  if (*((unsigned char *)v0 + 16) != 1) {
    return 0;
  }
  uint64_t v3 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = v3[1];
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A890);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
  *(void *)(v4 + 32) = v1;
  *(void *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return v4;
}

void *sub_1C02964F4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_1C0296504@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = FormatInteger.value(contextLayoutOptions:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0296530()
{
  if (*(unsigned char *)(v0 + 16) != 1) {
    return sub_1C152088C();
  }
  sub_1C151E80C();
  sub_1C151E80C();
  return 0x286E6F6974706FLL;
}

uint64_t sub_1C02965BC()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v2 = *(void *)v0;
    uint64_t v1 = *(void *)(v0 + 8);
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C00B857C((uint64_t)&unk_1F1B663C0);
    sub_1C0F49260(v2, v1, v3, 0);
    sub_1BFE94AD4(v2, v1, 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void FormatInteger.bind(binder:context:)()
{
  sub_1C00AB000();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v7 = v0;
    uint64_t v5 = *(void *)v0;
    uint64_t v6 = *(void *)(v7 + 8);
    uint64_t v8 = sub_1C00B857C((uint64_t)&unk_1F1B6CCA0);
    sub_1C0EC63F8(v5, v6, v8, 1, (uint64_t)v4);
    if (!v1) {
      sub_1BFEFE928((uint64_t)v4, (uint64_t (*)(void))sub_1C00AB000);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1C0296740()
{
  sub_1C00AB000();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v7 = v0;
    uint64_t v5 = *(void *)v0;
    uint64_t v6 = *(void *)(v7 + 8);
    uint64_t v8 = sub_1C00B857C((uint64_t)&unk_1F1B6CCA0);
    sub_1C0EC63F8(v5, v6, v8, 1, (uint64_t)v4);
    if (!v1) {
      sub_1BFEFE928((uint64_t)v4, (uint64_t (*)(void))sub_1C00AB000);
    }
    swift_bridgeObjectRelease();
  }
}

void *sub_1C029682C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB890518);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unsigned __int8 *sub_1C02968A0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0296AA0(a1, a2, a3);
}

unsigned __int8 *sub_1C02968B8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BFDA238C(a1, a2, a3);
}

uint64_t sub_1C02968D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C151E8DC();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1C0296D20();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_1C152020C();
  }
LABEL_7:
  uint64_t v11 = sub_1C0296AA0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_1C02969B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C151E8DC();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1C0296D20();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_1C152020C();
  }
LABEL_7:
  uint64_t v11 = sub_1BFDA238C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1C0296AA0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unsigned int v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0296D20()
{
  unint64_t v0 = sub_1C151E8EC();
  uint64_t v4 = sub_1C0296DA0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C0296DA0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_1C0296EF8(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      char v11 = sub_1C029682C(v9, 0);
      unint64_t v12 = sub_1C0296FF8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1C152020C();
LABEL_4:
        JUMPOUT(0x1C18C62A0);
      }
    }
    else
    {
      char v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1C18C62A0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C18C62A0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1C0296EF8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_1C149BAC0(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_1C149BAC0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_1C151E85C();
}

unint64_t sub_1C0296FF8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1C149BAC0(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1C151E86C();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1C152020C();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1C149BAC0(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1C151E83C();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C029720C@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, unsigned char *a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    *a4 = *(unsigned char *)(*(void *)(a3 + 48) + result);
    return result;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1C0297260@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    uint64_t v6 = *(void *)(a3 + 48);
    uint64_t v7 = type metadata accessor for WebEmbedDataVisualization();
    return sub_1BFED37AC(v6 + *(void *)(*(void *)(v7 - 8) + 72) * v4, a4, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1C0297310(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed13FormatIntegerO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if (v4 != 1)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0)
    {
      sub_1BFE94AD4(*(void *)a1, v3, 0);
      sub_1BFE94AD4(v5, v6, 0);
      char v9 = v2 == v5;
      return v9 & 1;
    }
LABEL_11:
    sub_1BFE94AB4(v5, v6, v7);
    sub_1BFE94AD4(v2, v3, v4);
    sub_1BFE94AD4(v5, v6, v7);
    char v9 = 0;
    return v9 & 1;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v2 == v5 && v3 == v6) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1C1520A9C();
  }
  sub_1BFE94AB4(v5, v6, 1);
  sub_1BFE94AB4(v2, v3, 1);
  sub_1BFE94AD4(v2, v3, 1);
  sub_1BFE94AD4(v5, v6, 1);
  return v9 & 1;
}

unint64_t sub_1C029748C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_1C151E7DC();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_1C151E8EC();
}

uint64_t sub_1C029753C()
{
  return sub_1C0296058();
}

uint64_t sub_1C0297544()
{
  return sub_1C0295FB0();
}

uint64_t sub_1C029754C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 56) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_1C029759C(uint64_t a1)
{
  unint64_t result = sub_1C02975C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C02975C4()
{
  unint64_t result = qword_1EA198F20;
  if (!qword_1EA198F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198F20);
  }
  return result;
}

unint64_t sub_1C0297618(void *a1)
{
  a1[1] = sub_1C00829B0();
  a1[2] = sub_1C0082A58();
  unint64_t result = sub_1C0082A04();
  a1[3] = result;
  return result;
}

_UNKNOWN **sub_1C0297650()
{
  return &protocol witness table for Int;
}

uint64_t assignWithCopy for FormatBoolean(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1BFE94AB4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1BFE94AD4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatBoolean(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1BFE94AD4(v4, v5, v6);
  return a1;
}

uint64_t sub_1C02976FC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatInteger()
{
  return &type metadata for FormatInteger;
}

void sub_1C0297718()
{
  if (!qword_1EB8636E8)
  {
    sub_1C15167BC();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F45E40];
    sub_1BFFBA76C(&qword_1EB8636A0, MEMORY[0x1E4F45E40]);
    sub_1BFFBA76C(&qword_1EB863690, v0);
    sub_1BFFBA76C(&qword_1EB863698, v0);
    unint64_t v1 = sub_1C15168EC();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB8636E8);
    }
  }
}

uint64_t FormatContentSlotItemResolution.object.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFECBAE8(v1, a1, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
}

uint64_t FormatContentSlotItemResolution.auxiliary.getter@<X0>(uint64_t *a1@<X8>)
{
  char v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FormatContentSlotItemResolution() + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1BFDB3920(v4);
}

uint64_t FormatContentSlotItemResolution.selectors.getter()
{
  type metadata accessor for FormatContentSlotItemResolution();
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlotItemResolution.options.getter()
{
  type metadata accessor for FormatContentSlotItemResolution();
  return swift_bridgeObjectRetain();
}

int *FormatContentSlotItemResolution.init(object:auxiliary:selectors:options:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  sub_1C029796C(a1, a5);
  unint64_t result = (int *)type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v11 = (void *)(a5 + result[5]);
  *uint64_t v11 = v8;
  v11[1] = v9;
  *(void *)(a5 + result[6]) = a3;
  *(void *)(a5 + result[7]) = a4;
  return result;
}

uint64_t sub_1C029796C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02979D0()
{
  uint64_t result = 0x7463656A626FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7261696C69787561;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0297A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C02A08BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0297A90(uint64_t a1)
{
  unint64_t v2 = sub_1C0297E10();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0297ACC(uint64_t a1)
{
  unint64_t v2 = sub_1C0297E10();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSlotItemResolution.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0298328(0, &qword_1EB863600, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0297E10();
  sub_1C1520F0C();
  LOBYTE(v14) = 0;
  type metadata accessor for FormatContentSlotItemObject.Resolved();
  sub_1BFD48940((unint64_t *)&unk_1EB868170, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved);
  sub_1C152080C();
  if (!v2)
  {
    unint64_t v10 = (int *)type metadata accessor for FormatContentSlotItemResolution();
    long long v14 = *(_OWORD *)(v3 + v10[5]);
    char v13 = 1;
    sub_1C006A4A8();
    sub_1C152078C();
    *(void *)&long long v14 = *(void *)(v3 + v10[6]);
    char v13 = 2;
    sub_1BFEBC4B4();
    sub_1BFE38978((unint64_t *)&qword_1EB85C4F0);
    sub_1C152080C();
    *(void *)&long long v14 = *(void *)(v3 + v10[7]);
    char v13 = 3;
    sub_1C0022F0C(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
    sub_1BFD4846C((unint64_t *)&qword_1EB85C3C0, &qword_1EB870AC0);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0297E10()
{
  unint64_t result = qword_1EB863118;
  if (!qword_1EB863118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863118);
  }
  return result;
}

uint64_t FormatContentSlotItemResolution.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0298328(0, &qword_1EB863528, MEMORY[0x1E4FBBDC0]);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = (int *)type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0297E10();
  uint64_t v9 = v19;
  sub_1C1520EBC();
  if (v9) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v16;
  uint64_t v11 = (uint64_t)v8;
  LOBYTE(v20) = 0;
  sub_1BFD48940((unint64_t *)&unk_1EB868180, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved);
  uint64_t v12 = v17;
  sub_1C15206EC();
  sub_1C029796C(v18, v11);
  char v21 = 1;
  sub_1C006A454();
  sub_1C152065C();
  *(_OWORD *)(v11 + v6[5]) = v20;
  sub_1BFEBC4B4();
  char v21 = 2;
  sub_1BFE38978((unint64_t *)&qword_1EB87A020);
  sub_1C15206EC();
  *(void *)(v11 + v6[6]) = v20;
  sub_1C0022F0C(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
  char v21 = 3;
  sub_1BFD4846C((unint64_t *)&qword_1EB879DA0, &qword_1EB874230);
  sub_1C15206EC();
  (*(void (**)(void, uint64_t))(v10 + 8))(0, v12);
  *(void *)(v11 + v6[7]) = v20;
  sub_1BFECBAE8(v11, v15, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BFECF004(v11, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
}

void sub_1C0298328(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0297E10();
    unint64_t v7 = a3(a1, &type metadata for FormatContentSlotItemResolution.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0298390@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSlotItemResolution.init(from:)(a1, a2);
}

uint64_t sub_1C02983A8(void *a1)
{
  return FormatContentSlotItemResolution.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for FormatContentSlotItemResolution(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (void *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v6 = a3;
    type metadata accessor for FormatContentSlotItemObject.Resolved();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = (void *)*v3;
        *a1 = *v3;
        id v9 = v8;
        goto LABEL_82;
      case 3u:
        long long v172 = v6;
        uint64_t v10 = v3[1];
        *a1 = *v3;
        a1[1] = v10;
        v166 = v3;
        __dst = (int *)type metadata accessor for FormatWebEmbed.Resolved();
        uint64_t v11 = __dst[5];
        uint64_t v12 = (void *)((char *)a1 + v11);
        char v13 = (char *)v3 + v11;
        uint64_t v14 = *(void *)((char *)v3 + v11 + 8);
        *uint64_t v12 = *(void *)((char *)v3 + v11);
        v12[1] = v14;
        uint64_t v15 = (int *)type metadata accessor for FormatWebEmbed();
        uint64_t v16 = v15[5];
        uint64_t v163 = &v13[v16];
        uint64_t v164 = (char *)v12 + v16;
        uint64_t v17 = sub_1C1515FDC();
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19(v164, v163, v17);
        uint64_t v20 = v15[6];
        char v21 = (char *)v12 + v20;
        uint64_t v22 = &v13[v20];
        uint64_t v159 = v17;
        uint64_t v158 = v19;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&v13[v20], 1, v17))
        {
          sub_1C0022F0C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          v19(v21, v22, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
        }
        *(void *)((char *)v12 + v15[7]) = *(void *)&v13[v15[7]];
        uint64_t v41 = v15[8];
        uint64_t v42 = (void *)((char *)v12 + v41);
        double v43 = &v13[v41];
        uint64_t v44 = *((void *)v43 + 1);
        *uint64_t v42 = *(void *)v43;
        v42[1] = v44;
        uint64_t v45 = v15[9];
        uint64_t v46 = (void *)((char *)v12 + v45);
        uint64_t v47 = &v13[v45];
        uint64_t v48 = *((void *)v47 + 1);
        *uint64_t v46 = *(void *)v47;
        v46[1] = v48;
        *(void *)((char *)v12 + v15[10]) = *(void *)&v13[v15[10]];
        *(void *)((char *)v12 + v15[11]) = *(void *)&v13[v15[11]];
        *(void *)((char *)v12 + v15[12]) = *(void *)&v13[v15[12]];
        uint64_t v3 = v166;
        *(void *)((char *)a1 + __dst[6]) = *(void *)((char *)v166 + __dst[6]);
        *(void *)((char *)a1 + __dst[7]) = *(void *)((char *)v166 + __dst[7]);
        uint64_t v49 = __dst[8];
        uint64_t v165 = (void *)((char *)a1 + v49);
        v161 = (void *)((char *)v166 + v49);
        uint64_t v50 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v160 = *(void *)(v50 - 8);
        uint64_t v162 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v160 + 48);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        if (v162(v161, 1, v50))
        {
          sub_1C0022F0C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(v165, v161, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v54 = *v161;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v55 = v161[1];
            *uint64_t v165 = v54;
            v165[1] = v55;
            uint64_t v56 = type metadata accessor for GenericDataVisualization();
            uint64_t v57 = *(int *)(v56 + 20);
            uint64_t v58 = (char *)v165 + v57;
            id v59 = (char *)v161 + v57;
            swift_bridgeObjectRetain();
            v158(v58, v59, v159);
            *(void *)((char *)v165 + *(int *)(v56 + 24)) = *(uint64_t *)((char *)v161 + *(int *)(v56 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            *uint64_t v165 = v54;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v160 + 56))(v165, 0, 1, v50);
        }
        uint64_t v78 = __dst[9];
        double v79 = (char *)a1 + v78;
        uint64_t v80 = (char *)v166 + v78;
        sub_1BFEC84E0();
        uint64_t v82 = v81;
        uint64_t v83 = *(void *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v80, 1, v81))
        {
          sub_1C0022F0C(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
          memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v79, v80, v82);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v79, 0, 1, v82);
        }
        goto LABEL_36;
      case 6u:
        *a1 = *v3;
        uint64_t v33 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        double v34 = (void *)((char *)a1 + v33);
        uint64_t v35 = (void *)((char *)v3 + v33);
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_unknownObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v64 = type metadata accessor for PuzzleStatisticValue(0);
            int v65 = swift_getEnumCaseMultiPayload();
            uint64_t v173 = v64;
            if (v65 == 5)
            {
              uint64_t v116 = type metadata accessor for PuzzleStreak();
              uint64_t v117 = *(void *)(v116 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v117 + 48))(v35, 1, v116))
              {
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v34, v35, *(void *)(*(void *)(v118 - 8) + 64));
              }
              else
              {
                uint64_t v128 = sub_1C151555C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v128 - 8) + 16))(v34, v35, v128);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v34, 0, 1, v116);
              }
              uint64_t v119 = v173;
            }
            else
            {
              if (v65 != 4)
              {
                memcpy(v34, v35, *(void *)(*(void *)(v64 - 8) + 64));
                uint64_t v119 = v64;
                goto LABEL_60;
              }
              uint64_t v66 = type metadata accessor for PuzzleStreak();
              uint64_t v67 = *(void *)(v66 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v67 + 48))(v35, 1, v66))
              {
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v34, v35, *(void *)(*(void *)(v68 - 8) + 64));
              }
              else
              {
                uint64_t v126 = sub_1C151555C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 16))(v34, v35, v126);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v34, 0, 1, v66);
              }
              uint64_t v119 = v173;
            }
            swift_storeEnumTagMultiPayload();
LABEL_60:
            id v129 = v34;
            uint64_t v130 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v131 = *(int *)(v130 + 20);
            uint64_t v169 = v129;
            uint64_t v132 = (char *)v129 + v131;
            uint64_t v133 = (char *)v35 + v131;
            int v134 = swift_getEnumCaseMultiPayload();
            if (v134 == 5)
            {
              uint64_t v138 = type metadata accessor for PuzzleStreak();
              uint64_t v139 = *(void *)(v138 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v133, 1, v138))
              {
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v132, v133, *(void *)(*(void *)(v140 - 8) + 64));
              }
              else
              {
                uint64_t v143 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v132, v133, v143);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v132, 0, 1, v138);
              }
              uint64_t v141 = v173;
            }
            else
            {
              if (v134 != 4)
              {
                uint64_t v141 = v119;
                memcpy(v132, v133, *(void *)(*(void *)(v119 - 8) + 64));
                goto LABEL_72;
              }
              uint64_t v135 = type metadata accessor for PuzzleStreak();
              uint64_t v136 = *(void *)(v135 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v133, 1, v135))
              {
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v132, v133, *(void *)(*(void *)(v137 - 8) + 64));
              }
              else
              {
                uint64_t v142 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v132, v133, v142);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v132, 0, 1, v135);
              }
              uint64_t v141 = v173;
            }
            swift_storeEnumTagMultiPayload();
LABEL_72:
            uint64_t v144 = *(int *)(v130 + 24);
            uint64_t v145 = (char *)v169 + v144;
            uint64_t v146 = (char *)v35 + v144;
            int v147 = swift_getEnumCaseMultiPayload();
            if (v147 == 5)
            {
              uint64_t v148 = type metadata accessor for PuzzleStreak();
              uint64_t v149 = *(void *)(v148 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v146, 1, v148)) {
                goto LABEL_75;
              }
            }
            else
            {
              if (v147 != 4)
              {
                memcpy(v145, v146, *(void *)(*(void *)(v141 - 8) + 64));
                goto LABEL_81;
              }
              uint64_t v148 = type metadata accessor for PuzzleStreak();
              uint64_t v149 = *(void *)(v148 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v146, 1, v148))
              {
LABEL_75:
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v145, v146, *(void *)(*(void *)(v150 - 8) + 64));
                goto LABEL_80;
              }
            }
            uint64_t v151 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16))(v145, v146, v151);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v145, 0, 1, v148);
            goto LABEL_80;
          case 2u:
            uint64_t v60 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v61 = *((void *)v60 - 1);
            if ((*(unsigned int (**)(void *, uint64_t, int *))(v61 + 48))(v35, 1, v60))
            {
              sub_1C0022F0C(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
              size_t v63 = *(void *)(*(void *)(v62 - 8) + 64);
              goto LABEL_47;
            }
            long long v175 = v6;
            uint64_t v85 = sub_1C151631C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v85 - 8) + 16))(v34, v35, v85);
            uint64_t v86 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            uint64_t v87 = v86[5];
            double v88 = (void *)((char *)v34 + v87);
            uint64_t v89 = (void *)((char *)v35 + v87);
            uint64_t v90 = v89[1];
            *double v88 = *v89;
            v88[1] = v90;
            uint64_t v91 = v86[6];
            uint64_t v168 = v34;
            uint64_t v92 = (char *)v34 + v91;
            id v93 = (void *)((char *)v35 + v91);
            uint64_t v94 = v93[1];
            *(void *)uint64_t v92 = *v93;
            *((void *)v92 + 1) = v94;
            uint64_t v95 = v93 + 2;
            unint64_t v96 = v93[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v96 >> 60 == 15)
            {
              *((_OWORD *)v92 + 1) = *(_OWORD *)v95;
            }
            else
            {
              uint64_t v120 = *v95;
              sub_1BFE95820(*v95, v96);
              *((void *)v92 + 2) = v120;
              *((void *)v92 + 3) = v96;
            }
            *(void *)((char *)v168 + v86[7]) = *(void *)((char *)v35 + v86[7]);
            *(void *)((char *)v168 + v86[8]) = *(void *)((char *)v35 + v86[8]);
            *(void *)((char *)v168 + v60[5]) = *(void *)((char *)v35 + v60[5]);
            *(void *)((char *)v168 + v60[6]) = *(void *)((char *)v35 + v60[6]);
            uint64_t v121 = v60[7];
            uint64_t v122 = (void *)((char *)v168 + v121);
            uint64_t v123 = (void *)((char *)v35 + v121);
            uint64_t v124 = v123[1];
            *uint64_t v122 = *v123;
            v122[1] = v124;
            id v125 = *(void (**)(void *, void, uint64_t, int *))(v61 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v125(v168, 0, 1, v60);
            unint64_t v6 = v175;
            goto LABEL_81;
          case 3u:
            long long v174 = v6;
            uint64_t v69 = v35[1];
            *double v34 = *v35;
            v34[1] = v69;
            *((unsigned char *)v34 + 16) = *((unsigned char *)v35 + 16);
            uint64_t v70 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v71 = v70[6];
            uint64_t v167 = v34;
            uint64_t v72 = (char *)v34 + v71;
            id v73 = (char *)v35 + v71;
            uint64_t v74 = type metadata accessor for PuzzleStreak();
            uint64_t v75 = *(void *)(v74 - 8);
            uint64_t v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
            if (v76(v73, 1, v74))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v72, v73, *(void *)(*(void *)(v77 - 8) + 64));
            }
            else
            {
              uint64_t v97 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v72, v73, v97);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
            }
            uint64_t v98 = v70[7];
            id v99 = (char *)v167 + v98;
            uint64_t v100 = (char *)v35 + v98;
            if (v76((char *)v35 + v98, 1, v74))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              uint64_t v102 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v99, v100, v102);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v99, 0, 1, v74);
            }
            unint64_t v6 = v174;
            uint64_t v103 = v70[8];
            id v104 = (_OWORD *)((char *)v167 + v103);
            uint64_t v105 = (_OWORD *)((char *)v35 + v103);
            long long v106 = v105[1];
            *id v104 = *v105;
            v104[1] = v106;
            *(_OWORD *)((char *)v104 + 25) = *(_OWORD *)((char *)v105 + 25);
            uint64_t v107 = v70[9];
            double v108 = (_OWORD *)((char *)v167 + v107);
            double v109 = (_OWORD *)((char *)v35 + v107);
            *(_OWORD *)((char *)v108 + 25) = *(_OWORD *)((char *)v109 + 25);
            long long v110 = v109[1];
            *double v108 = *v109;
            v108[1] = v110;
            uint64_t v111 = v70[10];
            uint64_t v112 = (_OWORD *)((char *)v167 + v111);
            uint64_t v113 = (_OWORD *)((char *)v35 + v111);
            long long v114 = v113[1];
            *uint64_t v112 = *v113;
            v112[1] = v114;
            *(_OWORD *)((char *)v112 + 25) = *(_OWORD *)((char *)v113 + 25);
            goto LABEL_81;
          default:
            uint64_t v36 = type metadata accessor for PuzzleStatisticValue(0);
            int v37 = swift_getEnumCaseMultiPayload();
            if (v37 == 5)
            {
              uint64_t v38 = type metadata accessor for PuzzleStreak();
              uint64_t v39 = *(void *)(v38 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v39 + 48))(v35, 1, v38))
              {
LABEL_45:
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v34, v35, *(void *)(*(void *)(v115 - 8) + 64));
                goto LABEL_80;
              }
            }
            else
            {
              if (v37 != 4)
              {
                size_t v63 = *(void *)(*(void *)(v36 - 8) + 64);
LABEL_47:
                memcpy(v34, v35, v63);
                goto LABEL_81;
              }
              uint64_t v38 = type metadata accessor for PuzzleStreak();
              uint64_t v39 = *(void *)(v38 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v39 + 48))(v35, 1, v38)) {
                goto LABEL_45;
              }
            }
            uint64_t v127 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v127 - 8) + 16))(v34, v35, v127);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v34, 0, 1, v38);
LABEL_80:
            swift_storeEnumTagMultiPayload();
LABEL_81:
            swift_storeEnumTagMultiPayload();
LABEL_82:
            swift_storeEnumTagMultiPayload();
LABEL_83:
            uint64_t v152 = v6[5];
            uint64_t v153 = (void *)((char *)a1 + v152);
            uint64_t v154 = (void *)((char *)v3 + v152);
            if (*v154)
            {
              uint64_t v155 = v154[1];
              *uint64_t v153 = *v154;
              v153[1] = v155;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v153 = *(_OWORD *)v154;
            }
            uint64_t v156 = v6[7];
            *(void *)((char *)a1 + v6[6]) = *(void *)((char *)v3 + v6[6]);
            *(void *)((char *)a1 + v156) = *(void *)((char *)v3 + v156);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
        }
        break;
      case 7u:
        long long v172 = v6;
        uint64_t v24 = v3[1];
        *a1 = *v3;
        a1[1] = v24;
        uint64_t v25 = v3[3];
        a1[2] = v3[2];
        a1[3] = v25;
        uint64_t v26 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v27 = *(int *)(v26 + 24);
        __dsta = (char *)a1 + v27;
        unsigned int v28 = (char *)v3 + v27;
        uint64_t v29 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v30 = *(void *)(v29 - 8);
        unint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31(v28, 1, v29))
        {
          sub_1C0022F0C(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
          memcpy(__dsta, v28, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          uint64_t v52 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(__dsta, v28, v52);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dsta, 0, 1, v29);
        }
        *(void *)((char *)a1 + *(int *)(v26 + 28)) = *(void *)((char *)v3 + *(int *)(v26 + 28));
        swift_bridgeObjectRetain();
LABEL_36:
        swift_storeEnumTagMultiPayload();
        unint64_t v6 = v172;
        goto LABEL_83;
      case 8u:
        uint64_t v40 = v3[1];
        *a1 = *v3;
        a1[1] = v40;
        *((unsigned char *)a1 + 16) = *((unsigned char *)v3 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_82;
      default:
        *a1 = *v3;
        swift_unknownObjectRetain();
        goto LABEL_82;
    }
  }
  return a1;
}

uint64_t destroy for FormatContentSlotItemResolution(id *a1, uint64_t a2)
{
  type metadata accessor for FormatContentSlotItemObject.Resolved();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 4u:
    case 5u:
      swift_unknownObjectRelease();
      break;
    case 1u:

      break;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v4 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      int v5 = (char *)a1 + v4[5];
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for FormatWebEmbed();
      uint64_t v7 = &v5[*(int *)(v6 + 20)];
      uint64_t v8 = sub_1C1515FDC();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(void (**)(char *, uint64_t))(v9 + 8);
      v10(v7, v8);
      uint64_t v11 = &v5[*(int *)(v6 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
        v10(v11, v8);
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v12 = (char *)a1 + v4[8];
      uint64_t v13 = type metadata accessor for WebEmbedDataVisualization();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v14 = type metadata accessor for GenericDataVisualization();
          v10(&v12[*(int *)(v14 + 20)], v8);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      uint64_t v40 = (char *)a1 + v4[9];
      sub_1BFEC84E0();
      uint64_t v42 = v41;
      uint64_t v43 = *(void *)(v41 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v40, 1, v41)) {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
      }
      break;
    case 6u:
      swift_unknownObjectRelease();
      uint64_t v15 = (char *)a1 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_23;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v20 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v15, 1, v20))
            {
              uint64_t v21 = sub_1C151555C();
              (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v15, v21);
            }
          }
          uint64_t v22 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v23 = &v15[*(int *)(v22 + 20)];
          int v24 = swift_getEnumCaseMultiPayload();
          if (v24 == 5 || v24 == 4)
          {
            uint64_t v25 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v23, 1, v25))
            {
              uint64_t v26 = sub_1C151555C();
              (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v23, v26);
            }
          }
          v15 += *(int *)(v22 + 24);
LABEL_23:
          int v27 = swift_getEnumCaseMultiPayload();
          if (v27 == 5 || v27 == 4)
          {
            uint64_t v28 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v15, 1, v28))goto LABEL_34; {
          }
            }
          goto LABEL_38;
        case 2u:
          uint64_t v29 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v15, 1, v29)) {
            goto LABEL_38;
          }
          uint64_t v30 = sub_1C151631C();
          (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v15, v30);
          uint64_t v31 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v32 = &v15[*(int *)(v31 + 24)];
          swift_bridgeObjectRelease();
          unint64_t v33 = *((void *)v32 + 3);
          if (v33 >> 60 != 15) {
            sub_1BFE95664(*((void *)v32 + 2), v33);
          }
          swift_bridgeObjectRelease();
          goto LABEL_13;
        case 3u:
          uint64_t v34 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v35 = &v15[*(int *)(v34 + 24)];
          uint64_t v36 = type metadata accessor for PuzzleStreak();
          int v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48);
          if (!v37(v35, 1, v36))
          {
            uint64_t v38 = sub_1C151555C();
            (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v35, v38);
          }
          v15 += *(int *)(v34 + 28);
          if (!v37(v15, 1, v36))
          {
LABEL_34:
            uint64_t v39 = sub_1C151555C();
            (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v15, v39);
          }
          goto LABEL_38;
        default:
          goto LABEL_38;
      }
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = (char *)a1 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v17 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
      {
        uint64_t v18 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
      }
      goto LABEL_13;
    case 8u:
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_38:
  if (*(id *)((char *)a1 + *(int *)(a2 + 20)))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatContentSlotItemResolution(void *a1, uint64_t a2, int *a3)
{
  type metadata accessor for FormatContentSlotItemObject.Resolved();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = *(void **)a2;
      *a1 = *(void *)a2;
      id v7 = v6;
      goto LABEL_79;
    case 3u:
      uint64_t v165 = a3;
      uint64_t v8 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v8;
      uint64_t v163 = a1;
      uint64_t v164 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      uint64_t v9 = v164[5];
      uint64_t v10 = (void *)((char *)a1 + v9);
      uint64_t v170 = a2;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = *(void *)(a2 + v9);
      uint64_t v13 = *(void *)(v11 + 8);
      *uint64_t v10 = v12;
      v10[1] = v13;
      uint64_t v14 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)v10 + v15;
      __dsta = (void *)(v11 + v15);
      uint64_t v17 = sub_1C1515FDC();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(void (**)(char *, void *, uint64_t))(v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v16, __dsta, v17);
      uint64_t v20 = v14[6];
      uint64_t v21 = (char *)v10 + v20;
      uint64_t v22 = (void *)(v11 + v20);
      uint64_t v157 = v17;
      uint64_t v156 = (void (*)(char *, char *, uint64_t))v19;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v11 + v20, 1, v17))
      {
        sub_1C0022F0C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        v19(v21, v22, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
      }
      *(void *)((char *)v10 + v14[7]) = *(void *)(v11 + v14[7]);
      uint64_t v42 = v14[8];
      uint64_t v43 = (void *)((char *)v10 + v42);
      uint64_t v44 = (void *)(v11 + v42);
      uint64_t v45 = v44[1];
      *uint64_t v43 = *v44;
      v43[1] = v45;
      uint64_t v46 = v14[9];
      uint64_t v47 = (void *)((char *)v10 + v46);
      uint64_t v48 = (void *)(v11 + v46);
      uint64_t v49 = v48[1];
      *uint64_t v47 = *v48;
      v47[1] = v49;
      *(void *)((char *)v10 + v14[10]) = *(void *)(v11 + v14[10]);
      *(void *)((char *)v10 + v14[11]) = *(void *)(v11 + v14[11]);
      *(void *)((char *)v10 + v14[12]) = *(void *)(v11 + v14[12]);
      a1 = v163;
      *(void *)((char *)v163 + v164[6]) = *(void *)(v170 + v164[6]);
      *(void *)((char *)v163 + v164[7]) = *(void *)(v170 + v164[7]);
      uint64_t v50 = v164[8];
      __dst = (void *)((char *)v163 + v50);
      uint64_t v159 = (uint64_t *)(v170 + v50);
      uint64_t v51 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v158 = *(void *)(v51 - 8);
      uint64_t v160 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v158 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v160(v159, 1, v51))
      {
        sub_1C0022F0C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(__dst, v159, *(void *)(*(void *)(v52 - 8) + 64));
        a3 = v165;
        a2 = v170;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v55 = *v159;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v56 = v159[1];
          void *__dst = v55;
          __dst[1] = v56;
          uint64_t v57 = type metadata accessor for GenericDataVisualization();
          uint64_t v58 = *(int *)(v57 + 20);
          id v59 = (char *)__dst + v58;
          uint64_t v60 = (char *)v159 + v58;
          swift_bridgeObjectRetain();
          v156(v59, v60, v157);
          *(void *)((char *)__dst + *(int *)(v57 + 24)) = *(uint64_t *)((char *)v159 + *(int *)(v57 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *__dst = v55;
          swift_retain();
        }
        a3 = v165;
        a2 = v170;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v158 + 56))(__dst, 0, 1, v51);
      }
      uint64_t v79 = v164[9];
      uint64_t v80 = (char *)v163 + v79;
      uint64_t v81 = (const void *)(a2 + v79);
      sub_1BFEC84E0();
      uint64_t v83 = v82;
      uint64_t v84 = *(void *)(v82 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v82))
      {
        sub_1C0022F0C(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        memcpy(v80, v81, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v84 + 16))(v80, v81, v83);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v80, 0, 1, v83);
      }
      goto LABEL_79;
    case 6u:
      *a1 = *(void *)a2;
      uint64_t v34 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v35 = (void *)((char *)a1 + v34);
      uint64_t v36 = (void *)(a2 + v34);
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_unknownObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v65 = type metadata accessor for PuzzleStatisticValue(0);
          int v66 = swift_getEnumCaseMultiPayload();
          uint64_t v167 = v65;
          if (v66 == 5)
          {
            uint64_t v117 = type metadata accessor for PuzzleStreak();
            uint64_t v118 = *(void *)(v117 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v118 + 48))(v36, 1, v117))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v35, v36, *(void *)(*(void *)(v119 - 8) + 64));
            }
            else
            {
              uint64_t v128 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v128 - 8) + 16))(v35, v36, v128);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v118 + 56))(v35, 0, 1, v117);
            }
            uint64_t v65 = v167;
          }
          else
          {
            if (v66 != 4)
            {
              memcpy(v35, v36, *(void *)(*(void *)(v65 - 8) + 64));
              goto LABEL_57;
            }
            uint64_t v67 = type metadata accessor for PuzzleStreak();
            uint64_t v68 = *(void *)(v67 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v68 + 48))(v36, 1, v67))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v35, v36, *(void *)(*(void *)(v69 - 8) + 64));
            }
            else
            {
              uint64_t v126 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 16))(v35, v36, v126);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v35, 0, 1, v67);
            }
            uint64_t v65 = v167;
          }
          swift_storeEnumTagMultiPayload();
LABEL_57:
          uint64_t v129 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v130 = *(int *)(v129 + 20);
          uint64_t v131 = (char *)v35 + v130;
          uint64_t v132 = (char *)v36 + v130;
          int v133 = swift_getEnumCaseMultiPayload();
          if (v133 == 5)
          {
            uint64_t v174 = a2;
            uint64_t v137 = type metadata accessor for PuzzleStreak();
            uint64_t v138 = *(void *)(v137 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48))(v132, 1, v137))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v131, v132, *(void *)(*(void *)(v139 - 8) + 64));
            }
            else
            {
              uint64_t v141 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v131, v132, v141);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v131, 0, 1, v137);
            }
            uint64_t v65 = v167;
            a2 = v174;
          }
          else
          {
            if (v133 != 4)
            {
              memcpy(v131, v132, *(void *)(*(void *)(v65 - 8) + 64));
              goto LABEL_69;
            }
            uint64_t v173 = a2;
            uint64_t v134 = type metadata accessor for PuzzleStreak();
            uint64_t v135 = *(void *)(v134 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v132, 1, v134))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v131, v132, *(void *)(*(void *)(v136 - 8) + 64));
            }
            else
            {
              uint64_t v140 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v131, v132, v140);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v131, 0, 1, v134);
            }
            uint64_t v65 = v167;
            a2 = v173;
          }
          swift_storeEnumTagMultiPayload();
LABEL_69:
          uint64_t v142 = *(int *)(v129 + 24);
          uint64_t v143 = (char *)v35 + v142;
          uint64_t v144 = (char *)v36 + v142;
          int v145 = swift_getEnumCaseMultiPayload();
          if (v145 == 5)
          {
            uint64_t v146 = type metadata accessor for PuzzleStreak();
            uint64_t v147 = *(void *)(v146 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48))(v144, 1, v146)) {
              goto LABEL_72;
            }
          }
          else
          {
            if (v145 != 4)
            {
              memcpy(v143, v144, *(void *)(*(void *)(v65 - 8) + 64));
              goto LABEL_78;
            }
            uint64_t v146 = type metadata accessor for PuzzleStreak();
            uint64_t v147 = *(void *)(v146 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48))(v144, 1, v146))
            {
LABEL_72:
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v143, v144, *(void *)(*(void *)(v148 - 8) + 64));
              goto LABEL_77;
            }
          }
          uint64_t v149 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v143, v144, v149);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v143, 0, 1, v146);
          goto LABEL_77;
        case 2u:
          uint64_t v61 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v62 = *((void *)v61 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v62 + 48))(v36, 1, v61))
          {
            sub_1C0022F0C(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
            size_t v64 = *(void *)(*(void *)(v63 - 8) + 64);
            goto LABEL_44;
          }
          uint64_t v169 = a3;
          uint64_t v172 = a2;
          uint64_t v86 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v86 - 8) + 16))(v35, v36, v86);
          uint64_t v87 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v88 = v87[5];
          uint64_t v89 = (void *)((char *)v35 + v88);
          uint64_t v90 = (void *)((char *)v36 + v88);
          uint64_t v91 = v90[1];
          *uint64_t v89 = *v90;
          v89[1] = v91;
          uint64_t v92 = v87[6];
          id v93 = (char *)v35 + v92;
          uint64_t v94 = (void *)((char *)v36 + v92);
          uint64_t v95 = v94[1];
          *(void *)id v93 = *v94;
          *((void *)v93 + 1) = v95;
          unint64_t v96 = v94 + 2;
          unint64_t v97 = v94[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v97 >> 60 == 15)
          {
            *((_OWORD *)v93 + 1) = *(_OWORD *)v96;
          }
          else
          {
            uint64_t v120 = *v96;
            sub_1BFE95820(*v96, v97);
            *((void *)v93 + 2) = v120;
            *((void *)v93 + 3) = v97;
          }
          a2 = v172;
          *(void *)((char *)v35 + v87[7]) = *(void *)((char *)v36 + v87[7]);
          *(void *)((char *)v35 + v87[8]) = *(void *)((char *)v36 + v87[8]);
          *(void *)((char *)v35 + v61[5]) = *(void *)((char *)v36 + v61[5]);
          *(void *)((char *)v35 + v61[6]) = *(void *)((char *)v36 + v61[6]);
          uint64_t v121 = v61[7];
          uint64_t v122 = (void *)((char *)v35 + v121);
          uint64_t v123 = (void *)((char *)v36 + v121);
          uint64_t v124 = v123[1];
          *uint64_t v122 = *v123;
          v122[1] = v124;
          id v125 = *(void (**)(void *, void, uint64_t, int *))(v62 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v125(v35, 0, 1, v61);
          a3 = v169;
          goto LABEL_78;
        case 3u:
          uint64_t v168 = a3;
          uint64_t v171 = a2;
          uint64_t v70 = v36[1];
          *uint64_t v35 = *v36;
          v35[1] = v70;
          *((unsigned char *)v35 + 16) = *((unsigned char *)v36 + 16);
          uint64_t v71 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v72 = v71[6];
          id v73 = (char *)v35 + v72;
          uint64_t v74 = (char *)v36 + v72;
          uint64_t v75 = type metadata accessor for PuzzleStreak();
          uint64_t v76 = *(void *)(v75 - 8);
          uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
          if (v77(v74, 1, v75))
          {
            sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v73, v74, *(void *)(*(void *)(v78 - 8) + 64));
          }
          else
          {
            uint64_t v98 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v73, v74, v98);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
          }
          uint64_t v99 = v71[7];
          uint64_t v100 = (char *)v35 + v99;
          uint64_t v101 = (char *)v36 + v99;
          if (v77((char *)v36 + v99, 1, v75))
          {
            sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
          }
          else
          {
            uint64_t v103 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v100, v101, v103);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v100, 0, 1, v75);
          }
          a3 = v168;
          a2 = v171;
          uint64_t v104 = v71[8];
          uint64_t v105 = (_OWORD *)((char *)v35 + v104);
          long long v106 = (_OWORD *)((char *)v36 + v104);
          long long v107 = v106[1];
          *uint64_t v105 = *v106;
          v105[1] = v107;
          *(_OWORD *)((char *)v105 + 25) = *(_OWORD *)((char *)v106 + 25);
          uint64_t v108 = v71[9];
          double v109 = (_OWORD *)((char *)v35 + v108);
          long long v110 = (_OWORD *)((char *)v36 + v108);
          *(_OWORD *)((char *)v109 + 25) = *(_OWORD *)((char *)v110 + 25);
          long long v111 = v110[1];
          *double v109 = *v110;
          v109[1] = v111;
          uint64_t v112 = v71[10];
          uint64_t v113 = (_OWORD *)((char *)v35 + v112);
          long long v114 = (_OWORD *)((char *)v36 + v112);
          long long v115 = v114[1];
          *uint64_t v113 = *v114;
          v113[1] = v115;
          *(_OWORD *)((char *)v113 + 25) = *(_OWORD *)((char *)v114 + 25);
          goto LABEL_78;
        default:
          uint64_t v37 = type metadata accessor for PuzzleStatisticValue(0);
          int v38 = swift_getEnumCaseMultiPayload();
          if (v38 == 5)
          {
            uint64_t v39 = type metadata accessor for PuzzleStreak();
            uint64_t v40 = *(void *)(v39 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v40 + 48))(v36, 1, v39))
            {
LABEL_42:
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v35, v36, *(void *)(*(void *)(v116 - 8) + 64));
              goto LABEL_77;
            }
          }
          else
          {
            if (v38 != 4)
            {
              size_t v64 = *(void *)(*(void *)(v37 - 8) + 64);
LABEL_44:
              memcpy(v35, v36, v64);
              goto LABEL_78;
            }
            uint64_t v39 = type metadata accessor for PuzzleStreak();
            uint64_t v40 = *(void *)(v39 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v40 + 48))(v36, 1, v39)) {
              goto LABEL_42;
            }
          }
          uint64_t v127 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v127 - 8) + 16))(v35, v36, v127);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v39);
LABEL_77:
          swift_storeEnumTagMultiPayload();
LABEL_78:
          swift_storeEnumTagMultiPayload();
LABEL_79:
          swift_storeEnumTagMultiPayload();
          uint64_t v150 = a3[5];
          uint64_t v151 = (void *)((char *)a1 + v150);
          uint64_t v152 = (void *)(a2 + v150);
          if (*v152)
          {
            uint64_t v153 = v152[1];
            *uint64_t v151 = *v152;
            v151[1] = v153;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v151 = *(_OWORD *)v152;
          }
          uint64_t v154 = a3[7];
          *(void *)((char *)a1 + a3[6]) = *(void *)(a2 + a3[6]);
          *(void *)((char *)a1 + v154) = *(void *)(a2 + v154);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          return a1;
      }
    case 7u:
      v166 = a3;
      uint64_t v24 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v24;
      uint64_t v25 = *(void *)(a2 + 24);
      a1[2] = *(void *)(a2 + 16);
      a1[3] = v25;
      uint64_t v26 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v27 = *(int *)(v26 + 24);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (const void *)(a2 + v27);
      uint64_t v30 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32(v29, 1, v30))
      {
        sub_1C0022F0C(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
        memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        uint64_t v53 = sub_1C1515FDC();
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v53 - 8) + 16))(v28, v29, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      a3 = v166;
      *(void *)((char *)a1 + *(int *)(v26 + 28)) = *(void *)(a2 + *(int *)(v26 + 28));
      swift_bridgeObjectRetain();
      goto LABEL_79;
    case 8u:
      uint64_t v41 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v41;
      *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_79;
    default:
      *a1 = *(void *)a2;
      swift_unknownObjectRetain();
      goto LABEL_79;
  }
}

void *assignWithCopy for FormatContentSlotItemResolution(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1BFECF004((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    type metadata accessor for FormatContentSlotItemObject.Resolved();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = (void *)*a2;
        *a1 = *a2;
        id v7 = v6;
        goto LABEL_79;
      case 3u:
        uint64_t v158 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v155 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
        uint64_t v8 = v155[5];
        uint64_t v9 = (void *)((char *)a1 + v8);
        uint64_t v10 = (char *)a2 + v8;
        *uint64_t v9 = *(void *)((char *)a2 + v8);
        v9[1] = *(void *)((char *)a2 + v8 + 8);
        uint64_t v11 = (int *)type metadata accessor for FormatWebEmbed();
        uint64_t v12 = v11[5];
        uint64_t v147 = &v10[v12];
        uint64_t v149 = (char *)v9 + v12;
        uint64_t v13 = sub_1C1515FDC();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15(v149, v147, v13);
        uint64_t v16 = v11[6];
        __dst = (char *)v9 + v16;
        uint64_t v17 = &v10[v16];
        uint64_t v144 = v15;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&v10[v16], 1, v13))
        {
          sub_1C0022F0C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(__dst, v17, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          v15(__dst, v17, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
        }
        *(void *)((char *)v9 + v11[7]) = *(void *)&v10[v11[7]];
        uint64_t v34 = v11[8];
        uint64_t v35 = (void *)((char *)v9 + v34);
        uint64_t v36 = &v10[v34];
        *uint64_t v35 = *(void *)v36;
        v35[1] = *((void *)v36 + 1);
        uint64_t v37 = v11[9];
        int v38 = (void *)((char *)v9 + v37);
        uint64_t v39 = &v10[v37];
        *int v38 = *(void *)v39;
        v38[1] = *((void *)v39 + 1);
        *(void *)((char *)v9 + v11[10]) = *(void *)&v10[v11[10]];
        *(void *)((char *)v9 + v11[11]) = *(void *)&v10[v11[11]];
        *(void *)((char *)v9 + v11[12]) = *(void *)&v10[v11[12]];
        *(void *)((char *)a1 + v155[6]) = *(void *)((char *)a2 + v155[6]);
        *(void *)((char *)a1 + v155[7]) = *(void *)((char *)a2 + v155[7]);
        uint64_t v40 = v155[8];
        __dsta = (void *)((char *)a1 + v40);
        uint64_t v148 = (void *)((char *)a2 + v40);
        uint64_t v41 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v145 = *(void *)(v41 - 8);
        uint64_t v146 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v145 + 48);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        if (v146(v148, 1, v41))
        {
          sub_1C0022F0C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(__dsta, v148, *(void *)(*(void *)(v42 - 8) + 64));
          a3 = v158;
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          a3 = v158;
          void *__dsta = *v148;
          if (EnumCaseMultiPayload == 1)
          {
            __dsta[1] = v148[1];
            uint64_t v45 = type metadata accessor for GenericDataVisualization();
            uint64_t v46 = *(int *)(v45 + 20);
            uint64_t v47 = (char *)__dsta + v46;
            uint64_t v48 = (char *)v148 + v46;
            swift_bridgeObjectRetain();
            v144(v47, v48, v13);
            *(void *)((char *)__dsta + *(int *)(v45 + 24)) = *(void *)((char *)v148 + *(int *)(v45 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v145 + 56))(__dsta, 0, 1, v41);
        }
        uint64_t v66 = v155[9];
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        sub_1BFEC84E0();
        uint64_t v70 = v69;
        uint64_t v71 = *(void *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v68, 1, v69))
        {
          sub_1C0022F0C(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
          memcpy(v67, v68, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v67, v68, v70);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v67, 0, 1, v70);
        }
        goto LABEL_79;
      case 6u:
        *a1 = *a2;
        uint64_t v26 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v27 = (void *)((char *)a1 + v26);
        uint64_t v28 = (void *)((char *)a2 + v26);
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_unknownObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v52 = type metadata accessor for PuzzleStatisticValue(0);
            int v53 = swift_getEnumCaseMultiPayload();
            uint64_t v157 = v52;
            if (v53 == 5)
            {
              uint64_t v104 = type metadata accessor for PuzzleStreak();
              uint64_t v105 = *(void *)(v104 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v105 + 48))(v28, 1, v104))
              {
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v27, v28, *(void *)(*(void *)(v106 - 8) + 64));
              }
              else
              {
                uint64_t v115 = sub_1C151555C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v115 - 8) + 16))(v27, v28, v115);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v27, 0, 1, v104);
              }
              uint64_t v107 = v157;
            }
            else
            {
              if (v53 != 4)
              {
                memcpy(v27, v28, *(void *)(*(void *)(v52 - 8) + 64));
                uint64_t v107 = v52;
                goto LABEL_57;
              }
              uint64_t v54 = type metadata accessor for PuzzleStreak();
              uint64_t v55 = *(void *)(v54 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v55 + 48))(v28, 1, v54))
              {
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v27, v28, *(void *)(*(void *)(v56 - 8) + 64));
              }
              else
              {
                uint64_t v114 = sub_1C151555C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v114 - 8) + 16))(v27, v28, v114);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v27, 0, 1, v54);
              }
              uint64_t v107 = v157;
            }
            swift_storeEnumTagMultiPayload();
LABEL_57:
            uint64_t v116 = v27;
            uint64_t v117 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v118 = *(int *)(v117 + 20);
            uint64_t v152 = v116;
            uint64_t v119 = (char *)v116 + v118;
            uint64_t v120 = (char *)v28 + v118;
            int v121 = swift_getEnumCaseMultiPayload();
            if (v121 == 5)
            {
              uint64_t v163 = a3;
              uint64_t v125 = type metadata accessor for PuzzleStreak();
              uint64_t v126 = *(void *)(v125 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v120, 1, v125))
              {
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v119, v120, *(void *)(*(void *)(v127 - 8) + 64));
              }
              else
              {
                uint64_t v130 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v119, v120, v130);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v119, 0, 1, v125);
              }
              uint64_t v128 = v157;
              a3 = v163;
            }
            else
            {
              if (v121 != 4)
              {
                uint64_t v128 = v107;
                memcpy(v119, v120, *(void *)(*(void *)(v107 - 8) + 64));
                goto LABEL_69;
              }
              uint64_t v162 = a3;
              uint64_t v122 = type metadata accessor for PuzzleStreak();
              uint64_t v123 = *(void *)(v122 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v120, 1, v122))
              {
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v119, v120, *(void *)(*(void *)(v124 - 8) + 64));
              }
              else
              {
                uint64_t v129 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v119, v120, v129);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v119, 0, 1, v122);
              }
              uint64_t v128 = v157;
              a3 = v162;
            }
            swift_storeEnumTagMultiPayload();
LABEL_69:
            uint64_t v131 = *(int *)(v117 + 24);
            uint64_t v132 = (char *)v152 + v131;
            int v133 = (char *)v28 + v131;
            int v134 = swift_getEnumCaseMultiPayload();
            if (v134 == 5)
            {
              uint64_t v135 = type metadata accessor for PuzzleStreak();
              uint64_t v136 = *(void *)(v135 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v133, 1, v135)) {
                goto LABEL_72;
              }
            }
            else
            {
              if (v134 != 4)
              {
                memcpy(v132, v133, *(void *)(*(void *)(v128 - 8) + 64));
                goto LABEL_78;
              }
              uint64_t v135 = type metadata accessor for PuzzleStreak();
              uint64_t v136 = *(void *)(v135 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v133, 1, v135))
              {
LABEL_72:
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v132, v133, *(void *)(*(void *)(v137 - 8) + 64));
                goto LABEL_77;
              }
            }
            uint64_t v138 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v132, v133, v138);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v132, 0, 1, v135);
            goto LABEL_77;
          case 2u:
            uint64_t v49 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v50 = *((void *)v49 - 1);
            if ((*(unsigned int (**)(void *, uint64_t, int *))(v50 + 48))(v28, 1, v49))
            {
              sub_1C0022F0C(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
              memcpy(v27, v28, *(void *)(*(void *)(v51 - 8) + 64));
            }
            else
            {
              v161 = a3;
              uint64_t v73 = sub_1C151631C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v73 - 8) + 16))(v27, v28, v73);
              uint64_t v74 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              uint64_t v75 = v74[5];
              uint64_t v76 = (void *)((char *)v27 + v75);
              uint64_t v77 = (void *)((char *)v28 + v75);
              *uint64_t v76 = *v77;
              v76[1] = v77[1];
              uint64_t v78 = v74[6];
              uint64_t v151 = v27;
              uint64_t v79 = (char *)v27 + v78;
              uint64_t v80 = (void *)((char *)v28 + v78);
              *(void *)uint64_t v79 = *v80;
              *((void *)v79 + 1) = v80[1];
              uint64_t v81 = v80 + 2;
              unint64_t v82 = v80[3];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v82 >> 60 == 15)
              {
                *((_OWORD *)v79 + 1) = *(_OWORD *)v81;
              }
              else
              {
                uint64_t v108 = *v81;
                sub_1BFE95820(*v81, v82);
                *((void *)v79 + 2) = v108;
                *((void *)v79 + 3) = v82;
              }
              a3 = v161;
              *(void *)((char *)v151 + v74[7]) = *(void *)((char *)v28 + v74[7]);
              *(void *)((char *)v151 + v74[8]) = *(void *)((char *)v28 + v74[8]);
              *(void *)((char *)v151 + v49[5]) = *(void *)((char *)v28 + v49[5]);
              *(void *)((char *)v151 + v49[6]) = *(void *)((char *)v28 + v49[6]);
              uint64_t v109 = v49[7];
              long long v110 = (void *)((char *)v151 + v109);
              long long v111 = (void *)((char *)v28 + v109);
              *long long v110 = *v111;
              v110[1] = v111[1];
              uint64_t v112 = *(void (**)(void *, void, uint64_t, int *))(v50 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v112(v151, 0, 1, v49);
            }
            goto LABEL_78;
          case 3u:
            uint64_t v160 = a3;
            void *v27 = *v28;
            uint64_t v57 = v28[1];
            *((unsigned char *)v27 + 16) = *((unsigned char *)v28 + 16);
            v27[1] = v57;
            uint64_t v58 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v59 = v58[6];
            uint64_t v150 = v27;
            uint64_t v60 = (char *)v27 + v59;
            uint64_t v61 = (char *)v28 + v59;
            uint64_t v62 = type metadata accessor for PuzzleStreak();
            uint64_t v63 = *(void *)(v62 - 8);
            size_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
            if (v64(v61, 1, v62))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
            }
            else
            {
              uint64_t v83 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v60, v61, v83);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
            }
            uint64_t v84 = v58[7];
            uint64_t v85 = (char *)v150 + v84;
            uint64_t v86 = (char *)v28 + v84;
            if (v64((char *)v28 + v84, 1, v62))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
            }
            else
            {
              uint64_t v88 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v85, v86, v88);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v85, 0, 1, v62);
            }
            a3 = v160;
            uint64_t v89 = v58[8];
            uint64_t v90 = (_OWORD *)((char *)v150 + v89);
            uint64_t v91 = (long long *)((char *)v28 + v89);
            long long v92 = *v91;
            long long v93 = v91[1];
            *(_OWORD *)((char *)v90 + 25) = *(long long *)((char *)v91 + 25);
            *uint64_t v90 = v92;
            v90[1] = v93;
            uint64_t v94 = v58[9];
            uint64_t v95 = (_OWORD *)((char *)v150 + v94);
            unint64_t v96 = (long long *)((char *)v28 + v94);
            long long v97 = *v96;
            long long v98 = v96[1];
            *(_OWORD *)((char *)v95 + 25) = *(long long *)((char *)v96 + 25);
            *uint64_t v95 = v97;
            v95[1] = v98;
            uint64_t v99 = v58[10];
            uint64_t v100 = (_OWORD *)((char *)v150 + v99);
            uint64_t v101 = (long long *)((char *)v28 + v99);
            long long v102 = *v101;
            long long v103 = v101[1];
            *(_OWORD *)((char *)v100 + 25) = *(long long *)((char *)v101 + 25);
            *uint64_t v100 = v102;
            v100[1] = v103;
            goto LABEL_78;
          default:
            uint64_t v29 = type metadata accessor for PuzzleStatisticValue(0);
            int v30 = swift_getEnumCaseMultiPayload();
            if (v30 == 5)
            {
              uint64_t v31 = type metadata accessor for PuzzleStreak();
              uint64_t v32 = *(void *)(v31 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v31)) {
                goto LABEL_13;
              }
            }
            else
            {
              if (v30 != 4)
              {
                memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
                goto LABEL_78;
              }
              uint64_t v31 = type metadata accessor for PuzzleStreak();
              uint64_t v32 = *(void *)(v31 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v31))
              {
LABEL_13:
                sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
                goto LABEL_77;
              }
            }
            uint64_t v113 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v113 - 8) + 16))(v27, v28, v113);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v27, 0, 1, v31);
LABEL_77:
            swift_storeEnumTagMultiPayload();
LABEL_78:
            swift_storeEnumTagMultiPayload();
LABEL_79:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      case 7u:
        uint64_t v159 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v19 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v20 = *(int *)(v19 + 24);
        uint64_t v156 = (char *)a1 + v20;
        uint64_t v21 = (char *)a2 + v20;
        uint64_t v22 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v24(v21, 1, v22))
        {
          sub_1C0022F0C(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
          memcpy(v156, v21, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          uint64_t v43 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v156, v21, v43);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v156, 0, 1, v22);
        }
        a3 = v159;
        *(void *)((char *)a1 + *(int *)(v19 + 28)) = *(void *)((char *)a2 + *(int *)(v19 + 28));
        swift_bridgeObjectRetain();
        goto LABEL_79;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_79;
      default:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_79;
    }
  }
  uint64_t v139 = a3[5];
  uint64_t v140 = (void *)((char *)a1 + v139);
  uint64_t v141 = (char *)a2 + v139;
  uint64_t v142 = *(void *)((char *)a2 + v139);
  if (!*(void *)((char *)a1 + v139))
  {
    if (v142)
    {
      *uint64_t v140 = v142;
      v140[1] = *((void *)v141 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_87;
    }
LABEL_86:
    *(_OWORD *)uint64_t v140 = *(_OWORD *)v141;
    goto LABEL_87;
  }
  if (!v142)
  {
    sub_1C01B4324((uint64_t)a1 + v139);
    goto LABEL_86;
  }
  *uint64_t v140 = v142;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v140[1] = *((void *)v141 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_87:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatContentSlotItemResolution(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 7:
      long long v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      uint64_t v24 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v25 = *(int *)(v24 + 24);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        sub_1C0022F0C(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
        memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        uint64_t v45 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v26, v27, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      *(void *)((char *)a1 + *(int *)(v24 + 28)) = *(void *)((char *)a2 + *(int *)(v24 + 28));
      goto LABEL_76;
    case 6:
      *(void *)a1 = *(void *)a2;
      uint64_t v31 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v32 = (void *)((char *)a1 + v31);
      uint64_t v33 = (void *)((char *)a2 + v31);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v53 = type metadata accessor for PuzzleStatisticValue(0);
          int v54 = swift_getEnumCaseMultiPayload();
          uint64_t v136 = v53;
          if (v54 == 5)
          {
            uint64_t v99 = type metadata accessor for PuzzleStreak();
            uint64_t v100 = *(void *)(v99 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v100 + 48))(v33, 1, v99))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v32, v33, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              uint64_t v104 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v104 - 8) + 32))(v32, v33, v104);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v32, 0, 1, v99);
            }
            uint64_t v53 = v136;
          }
          else
          {
            if (v54 != 4)
            {
              memcpy(v32, v33, *(void *)(*(void *)(v53 - 8) + 64));
              goto LABEL_54;
            }
            uint64_t v55 = type metadata accessor for PuzzleStreak();
            uint64_t v56 = *(void *)(v55 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48))(v33, 1, v55))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v32, v33, *(void *)(*(void *)(v57 - 8) + 64));
            }
            else
            {
              uint64_t v103 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v103 - 8) + 32))(v32, v33, v103);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v32, 0, 1, v55);
            }
            uint64_t v53 = v136;
          }
          swift_storeEnumTagMultiPayload();
LABEL_54:
          uint64_t v105 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v106 = *(int *)(v105 + 20);
          uint64_t v107 = (char *)v32 + v106;
          uint64_t v108 = (char *)v33 + v106;
          int v109 = swift_getEnumCaseMultiPayload();
          if (v109 == 5)
          {
            int v134 = v32;
            uint64_t v114 = a3;
            uint64_t v115 = type metadata accessor for PuzzleStreak();
            uint64_t v116 = *(void *)(v115 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v108, 1, v115))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v107, v108, *(void *)(*(void *)(v117 - 8) + 64));
            }
            else
            {
              uint64_t v119 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v107, v108, v119);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v107, 0, 1, v115);
            }
            a3 = v114;
            uint64_t v53 = v136;
          }
          else
          {
            if (v109 != 4)
            {
              memcpy(v107, v108, *(void *)(*(void *)(v53 - 8) + 64));
              goto LABEL_66;
            }
            int v134 = v32;
            long long v110 = a3;
            uint64_t v111 = type metadata accessor for PuzzleStreak();
            uint64_t v112 = *(void *)(v111 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v108, 1, v111))
            {
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v107, v108, *(void *)(*(void *)(v113 - 8) + 64));
            }
            else
            {
              uint64_t v118 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v107, v108, v118);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v107, 0, 1, v111);
            }
            a3 = v110;
            uint64_t v53 = v136;
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v32 = v134;
LABEL_66:
          uint64_t v120 = *(int *)(v105 + 24);
          int v121 = (char *)v32 + v120;
          uint64_t v122 = (char *)v33 + v120;
          int v123 = swift_getEnumCaseMultiPayload();
          if (v123 == 5)
          {
            uint64_t v124 = type metadata accessor for PuzzleStreak();
            uint64_t v125 = *(void *)(v124 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v122, 1, v124)) {
              goto LABEL_69;
            }
          }
          else
          {
            if (v123 != 4)
            {
              memcpy(v121, v122, *(void *)(*(void *)(v53 - 8) + 64));
LABEL_75:
              swift_storeEnumTagMultiPayload();
LABEL_76:
              swift_storeEnumTagMultiPayload();
              goto LABEL_77;
            }
            uint64_t v124 = type metadata accessor for PuzzleStreak();
            uint64_t v125 = *(void *)(v124 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v122, 1, v124))
            {
LABEL_69:
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v121, v122, *(void *)(*(void *)(v126 - 8) + 64));
              goto LABEL_74;
            }
          }
          uint64_t v127 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v121, v122, v127);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v121, 0, 1, v124);
          goto LABEL_74;
        case 2u:
          uint64_t v47 = v32;
          uint64_t v48 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v49 = *((void *)v48 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v49 + 48))(v33, 1, v48))
          {
            sub_1C0022F0C(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
            size_t v51 = *(void *)(*(void *)(v50 - 8) + 64);
            uint64_t v52 = v47;
            goto LABEL_43;
          }
          uint64_t v75 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v75 - 8) + 32))(v47, v33, v75);
          uint64_t v76 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          *(_OWORD *)((char *)v47 + v76[5]) = *(_OWORD *)((char *)v33 + v76[5]);
          uint64_t v77 = v76[6];
          uint64_t v78 = (_OWORD *)((char *)v47 + v77);
          uint64_t v79 = (_OWORD *)((char *)v33 + v77);
          long long v80 = v79[1];
          *uint64_t v78 = *v79;
          v78[1] = v80;
          *(void *)((char *)v47 + v76[7]) = *(void *)((char *)v33 + v76[7]);
          *(void *)((char *)v47 + v76[8]) = *(void *)((char *)v33 + v76[8]);
          *(void *)((char *)v47 + v48[5]) = *(void *)((char *)v33 + v48[5]);
          *(void *)((char *)v47 + v48[6]) = *(void *)((char *)v33 + v48[6]);
          *(_OWORD *)((char *)v47 + v48[7]) = *(_OWORD *)((char *)v33 + v48[7]);
          (*(void (**)(void *, void, uint64_t, int *))(v49 + 56))(v47, 0, 1, v48);
          goto LABEL_75;
        case 3u:
          int v133 = a3;
          uint64_t v58 = v33[1];
          *uint64_t v32 = *v33;
          v32[1] = v58;
          *((unsigned char *)v32 + 16) = *((unsigned char *)v33 + 16);
          uint64_t v59 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v60 = v59[6];
          uint64_t v61 = v32;
          uint64_t v62 = (char *)v32 + v60;
          uint64_t v63 = (char *)v33 + v60;
          uint64_t v64 = type metadata accessor for PuzzleStreak();
          uint64_t v65 = *(void *)(v64 - 8);
          uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
          if (v66(v63, 1, v64))
          {
            sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            uint64_t v81 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v62, v63, v81);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
          }
          uint64_t v82 = v59[7];
          uint64_t v83 = (char *)v61 + v82;
          uint64_t v84 = (char *)v33 + v82;
          if (v66((char *)v33 + v82, 1, v64))
          {
            sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
          }
          else
          {
            uint64_t v86 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v83, v84, v86);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v83, 0, 1, v64);
          }
          a3 = v133;
          uint64_t v87 = v59[8];
          uint64_t v88 = (_OWORD *)((char *)v61 + v87);
          uint64_t v89 = (_OWORD *)((char *)v33 + v87);
          long long v90 = v89[1];
          *uint64_t v88 = *v89;
          v88[1] = v90;
          *(_OWORD *)((char *)v88 + 25) = *(_OWORD *)((char *)v89 + 25);
          uint64_t v91 = v59[9];
          long long v92 = (_OWORD *)((char *)v61 + v91);
          long long v93 = (_OWORD *)((char *)v33 + v91);
          *(_OWORD *)((char *)v92 + 25) = *(_OWORD *)((char *)v93 + 25);
          long long v94 = v93[1];
          *long long v92 = *v93;
          v92[1] = v94;
          uint64_t v95 = v59[10];
          unint64_t v96 = (_OWORD *)((char *)v61 + v95);
          long long v97 = (_OWORD *)((char *)v33 + v95);
          long long v98 = v97[1];
          *unint64_t v96 = *v97;
          v96[1] = v98;
          *(_OWORD *)((char *)v96 + 25) = *(_OWORD *)((char *)v97 + 25);
          goto LABEL_75;
        default:
          uint64_t v34 = type metadata accessor for PuzzleStatisticValue(0);
          int v35 = swift_getEnumCaseMultiPayload();
          if (v35 == 5)
          {
            uint64_t v36 = type metadata accessor for PuzzleStreak();
            uint64_t v37 = *(void *)(v36 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v37 + 48))(v33, 1, v36)) {
              goto LABEL_12;
            }
          }
          else
          {
            if (v35 != 4)
            {
              size_t v51 = *(void *)(*(void *)(v34 - 8) + 64);
              uint64_t v52 = v32;
LABEL_43:
              memcpy(v52, v33, v51);
              goto LABEL_75;
            }
            uint64_t v36 = type metadata accessor for PuzzleStreak();
            uint64_t v37 = *(void *)(v36 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v37 + 48))(v33, 1, v36))
            {
LABEL_12:
              sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
              goto LABEL_74;
            }
          }
          uint64_t v102 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v102 - 8) + 32))(v32, v33, v102);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v32, 0, 1, v36);
LABEL_74:
          swift_storeEnumTagMultiPayload();
          goto LABEL_75;
      }
    case 3:
      uint64_t v132 = a3;
      *a1 = *a2;
      uint64_t v8 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      uint64_t v9 = v8[5];
      uint64_t v131 = a1;
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v135 = a2;
      uint64_t v11 = (char *)a2 + v9;
      *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
      uint64_t v12 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v13 = v12[5];
      uint64_t v14 = &v10[v13];
      uint64_t v15 = &v11[v13];
      uint64_t v16 = sub_1C1515FDC();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v18(v14, v15, v16);
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      uint64_t v130 = v18;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&v11[v19], 1, v16))
      {
        sub_1C0022F0C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        v18(v20, v21, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
      }
      a2 = v135;
      a1 = v131;
      *(void *)&v10[v12[7]] = *(void *)&v11[v12[7]];
      *(_OWORD *)&v10[v12[8]] = *(_OWORD *)&v11[v12[8]];
      *(_OWORD *)&v10[v12[9]] = *(_OWORD *)&v11[v12[9]];
      *(void *)&v10[v12[10]] = *(void *)&v11[v12[10]];
      *(void *)&v10[v12[11]] = *(void *)&v11[v12[11]];
      *(void *)&v10[v12[12]] = *(void *)&v11[v12[12]];
      *(void *)((char *)v131 + v8[6]) = *(void *)((char *)v135 + v8[6]);
      *(void *)((char *)v131 + v8[7]) = *(void *)((char *)v135 + v8[7]);
      uint64_t v39 = v8[8];
      uint64_t v40 = (_OWORD *)((char *)v131 + v39);
      uint64_t v41 = (_OWORD *)((char *)v135 + v39);
      uint64_t v42 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v43 = *(void *)(v42 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        sub_1C0022F0C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
        a3 = v132;
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v40 = *v41;
          uint64_t v46 = type metadata accessor for GenericDataVisualization();
          v130((char *)v40 + *(int *)(v46 + 20), (char *)v41 + *(int *)(v46 + 20), v16);
          *(void *)((char *)v40 + *(int *)(v46 + 24)) = *(void *)((char *)v41 + *(int *)(v46 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v40, v41, *(void *)(v43 + 64));
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        a3 = v132;
      }
      uint64_t v68 = v8[9];
      uint64_t v69 = (char *)v131 + v68;
      uint64_t v70 = (char *)v135 + v68;
      sub_1BFEC84E0();
      uint64_t v72 = v71;
      uint64_t v73 = *(void *)(v71 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v70, 1, v71))
      {
        sub_1C0022F0C(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        memcpy(v69, v70, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v69, v70, v72);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v69, 0, 1, v72);
      }
      goto LABEL_76;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_77:
  uint64_t v128 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v128) = *(void *)((char *)a2 + v128);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

_OWORD *assignWithTake for FormatContentSlotItemResolution(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    sub_1BFECF004((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    uint64_t v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 7)
    {
      long long v22 = v4[1];
      *a1 = *v4;
      a1[1] = v22;
      uint64_t v23 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v24 = *(int *)(v23 + 24);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)v4 + v24;
      uint64_t v27 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        sub_1C0022F0C(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v46 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v25, v26, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      *(void *)((char *)a1 + *(int *)(v23 + 28)) = *(void *)((char *)v4 + *(int *)(v23 + 28));
      goto LABEL_77;
    }
    if (EnumCaseMultiPayload != 6)
    {
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, v4, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_78;
      }
      uint64_t v136 = a3;
      *a1 = *v4;
      uint64_t v132 = v4;
      uint64_t v135 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      uint64_t v8 = v135[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)v4 + v8;
      *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)v4 + v8);
      uint64_t v11 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v12 = v11[5];
      uint64_t v13 = &v9[v12];
      uint64_t v14 = &v10[v12];
      uint64_t v15 = sub_1C1515FDC();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v17(v13, v14, v15);
      uint64_t v18 = v11[6];
      uint64_t v19 = &v9[v18];
      uint64_t v20 = &v10[v18];
      uint64_t v131 = v17;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&v10[v18], 1, v15))
      {
        sub_1C0022F0C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        v17(v19, v20, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
      }
      uint64_t v38 = v15;
      *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
      *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
      *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
      *(void *)&v9[v11[10]] = *(void *)&v10[v11[10]];
      *(void *)&v9[v11[11]] = *(void *)&v10[v11[11]];
      *(void *)&v9[v11[12]] = *(void *)&v10[v11[12]];
      uint64_t v4 = v132;
      uint64_t v39 = v135;
      *(void *)((char *)a1 + v135[6]) = *(void *)((char *)v132 + v135[6]);
      *(void *)((char *)a1 + v135[7]) = *(void *)((char *)v132 + v135[7]);
      uint64_t v40 = v135[8];
      uint64_t v41 = (_OWORD *)((char *)a1 + v40);
      uint64_t v42 = (_OWORD *)((char *)v132 + v40);
      uint64_t v43 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v44 = *(void *)(v43 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        sub_1C0022F0C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v41 = *v42;
          uint64_t v47 = type metadata accessor for GenericDataVisualization();
          v131((char *)v41 + *(int *)(v47 + 20), (char *)v42 + *(int *)(v47 + 20), v38);
          uint64_t v48 = *(int *)(v47 + 24);
          uint64_t v39 = v135;
          *(void *)((char *)v41 + v48) = *(void *)((char *)v42 + v48);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v41, v42, *(void *)(v44 + 64));
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      a3 = v136;
      uint64_t v67 = v39[9];
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)v132 + v67;
      sub_1BFEC84E0();
      uint64_t v71 = v70;
      uint64_t v72 = *(void *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v69, 1, v70))
      {
        sub_1C0022F0C(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        memcpy(v68, v69, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v68, v69, v71);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v68, 0, 1, v71);
      }
      goto LABEL_77;
    }
    *(void *)a1 = *(void *)v4;
    uint64_t v30 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v31 = (void *)((char *)a1 + v30);
    uint64_t v32 = (void *)((char *)v4 + v30);
    type metadata accessor for PuzzleStatisticCategory(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v53 = type metadata accessor for PuzzleStatisticValue(0);
        int v54 = swift_getEnumCaseMultiPayload();
        uint64_t v137 = v53;
        if (v54 == 5)
        {
          uint64_t v98 = type metadata accessor for PuzzleStreak();
          uint64_t v99 = *(void *)(v98 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v99 + 48))(v32, 1, v98))
          {
            sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v31, v32, *(void *)(*(void *)(v100 - 8) + 64));
          }
          else
          {
            uint64_t v103 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v103 - 8) + 32))(v31, v32, v103);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v99 + 56))(v31, 0, 1, v98);
          }
          uint64_t v53 = v137;
        }
        else
        {
          if (v54 != 4)
          {
            memcpy(v31, v32, *(void *)(*(void *)(v53 - 8) + 64));
            goto LABEL_55;
          }
          uint64_t v55 = type metadata accessor for PuzzleStreak();
          uint64_t v56 = *(void *)(v55 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48))(v32, 1, v55))
          {
            sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v31, v32, *(void *)(*(void *)(v57 - 8) + 64));
          }
          else
          {
            uint64_t v102 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v102 - 8) + 32))(v31, v32, v102);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v31, 0, 1, v55);
          }
          uint64_t v53 = v137;
        }
        swift_storeEnumTagMultiPayload();
LABEL_55:
        uint64_t v104 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v105 = *(int *)(v104 + 20);
        uint64_t v106 = (char *)v31 + v105;
        uint64_t v107 = (char *)v32 + v105;
        int v108 = swift_getEnumCaseMultiPayload();
        if (v108 == 5)
        {
          int v134 = v31;
          uint64_t v113 = a3;
          uint64_t v114 = type metadata accessor for PuzzleStreak();
          uint64_t v115 = *(void *)(v114 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v107, 1, v114))
          {
            sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v106, v107, *(void *)(*(void *)(v116 - 8) + 64));
          }
          else
          {
            uint64_t v118 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v106, v107, v118);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v106, 0, 1, v114);
          }
          a3 = v113;
          uint64_t v53 = v137;
        }
        else
        {
          if (v108 != 4)
          {
            memcpy(v106, v107, *(void *)(*(void *)(v53 - 8) + 64));
            goto LABEL_67;
          }
          int v134 = v31;
          int v109 = a3;
          uint64_t v110 = type metadata accessor for PuzzleStreak();
          uint64_t v111 = *(void *)(v110 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v107, 1, v110))
          {
            sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v106, v107, *(void *)(*(void *)(v112 - 8) + 64));
          }
          else
          {
            uint64_t v117 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v106, v107, v117);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v106, 0, 1, v110);
          }
          a3 = v109;
          uint64_t v53 = v137;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v31 = v134;
LABEL_67:
        uint64_t v119 = *(int *)(v104 + 24);
        uint64_t v120 = (char *)v31 + v119;
        int v121 = (char *)v32 + v119;
        int v122 = swift_getEnumCaseMultiPayload();
        if (v122 == 5)
        {
          uint64_t v123 = type metadata accessor for PuzzleStreak();
          uint64_t v124 = *(void *)(v123 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v121, 1, v123)) {
            goto LABEL_70;
          }
        }
        else
        {
          if (v122 != 4)
          {
            memcpy(v120, v121, *(void *)(*(void *)(v53 - 8) + 64));
LABEL_76:
            swift_storeEnumTagMultiPayload();
LABEL_77:
            swift_storeEnumTagMultiPayload();
            break;
          }
          uint64_t v123 = type metadata accessor for PuzzleStreak();
          uint64_t v124 = *(void *)(v123 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v121, 1, v123))
          {
LABEL_70:
            sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v120, v121, *(void *)(*(void *)(v125 - 8) + 64));
            goto LABEL_75;
          }
        }
        uint64_t v126 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v120, v121, v126);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v120, 0, 1, v123);
        goto LABEL_75;
      case 2u:
        uint64_t v49 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v50 = *((void *)v49 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v50 + 48))(v32, 1, v49))
        {
          sub_1C0022F0C(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v52 = *(void *)(*(void *)(v51 - 8) + 64);
          goto LABEL_44;
        }
        uint64_t v74 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 32))(v31, v32, v74);
        uint64_t v75 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        *(_OWORD *)((char *)v31 + v75[5]) = *(_OWORD *)((char *)v32 + v75[5]);
        uint64_t v76 = v75[6];
        uint64_t v77 = (_OWORD *)((char *)v31 + v76);
        uint64_t v78 = (_OWORD *)((char *)v32 + v76);
        long long v79 = v78[1];
        *uint64_t v77 = *v78;
        v77[1] = v79;
        *(void *)((char *)v31 + v75[7]) = *(void *)((char *)v32 + v75[7]);
        *(void *)((char *)v31 + v75[8]) = *(void *)((char *)v32 + v75[8]);
        *(void *)((char *)v31 + v49[5]) = *(void *)((char *)v32 + v49[5]);
        *(void *)((char *)v31 + v49[6]) = *(void *)((char *)v32 + v49[6]);
        *(_OWORD *)((char *)v31 + v49[7]) = *(_OWORD *)((char *)v32 + v49[7]);
        (*(void (**)(void *, void, uint64_t, int *))(v50 + 56))(v31, 0, 1, v49);
        goto LABEL_76;
      case 3u:
        uint64_t v138 = a3;
        uint64_t v58 = v32[1];
        *uint64_t v31 = *v32;
        v31[1] = v58;
        *((unsigned char *)v31 + 16) = *((unsigned char *)v32 + 16);
        uint64_t v59 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v60 = v59[6];
        int v133 = v31;
        uint64_t v61 = (char *)v31 + v60;
        uint64_t v62 = (char *)v32 + v60;
        uint64_t v63 = type metadata accessor for PuzzleStreak();
        uint64_t v64 = *(void *)(v63 - 8);
        uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
        if (v65(v62, 1, v63))
        {
          sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          uint64_t v80 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v61, v62, v80);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        uint64_t v81 = v59[7];
        uint64_t v82 = (char *)v133 + v81;
        uint64_t v83 = (char *)v32 + v81;
        if (v65((char *)v32 + v81, 1, v63))
        {
          sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          uint64_t v85 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v82, v83, v85);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v82, 0, 1, v63);
        }
        a3 = v138;
        uint64_t v86 = v59[8];
        uint64_t v87 = (_OWORD *)((char *)v133 + v86);
        uint64_t v88 = (_OWORD *)((char *)v32 + v86);
        long long v89 = v88[1];
        *uint64_t v87 = *v88;
        v87[1] = v89;
        *(_OWORD *)((char *)v87 + 25) = *(_OWORD *)((char *)v88 + 25);
        uint64_t v90 = v59[9];
        uint64_t v91 = (_OWORD *)((char *)v133 + v90);
        long long v92 = (_OWORD *)((char *)v32 + v90);
        *(_OWORD *)((char *)v91 + 25) = *(_OWORD *)((char *)v92 + 25);
        long long v93 = v92[1];
        *uint64_t v91 = *v92;
        v91[1] = v93;
        uint64_t v94 = v59[10];
        uint64_t v95 = (_OWORD *)((char *)v133 + v94);
        unint64_t v96 = (_OWORD *)((char *)v32 + v94);
        long long v97 = v96[1];
        *uint64_t v95 = *v96;
        v95[1] = v97;
        *(_OWORD *)((char *)v95 + 25) = *(_OWORD *)((char *)v96 + 25);
        goto LABEL_76;
      default:
        uint64_t v33 = type metadata accessor for PuzzleStatisticValue(0);
        int v34 = swift_getEnumCaseMultiPayload();
        if (v34 == 5)
        {
          uint64_t v35 = type metadata accessor for PuzzleStreak();
          uint64_t v36 = *(void *)(v35 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(v32, 1, v35)) {
            goto LABEL_13;
          }
        }
        else
        {
          if (v34 != 4)
          {
            size_t v52 = *(void *)(*(void *)(v33 - 8) + 64);
LABEL_44:
            memcpy(v31, v32, v52);
            goto LABEL_76;
          }
          uint64_t v35 = type metadata accessor for PuzzleStreak();
          uint64_t v36 = *(void *)(v35 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(v32, 1, v35))
          {
LABEL_13:
            sub_1C0022F0C(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
            goto LABEL_75;
          }
        }
        uint64_t v101 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v101 - 8) + 32))(v31, v32, v101);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v31, 0, 1, v35);
LABEL_75:
        swift_storeEnumTagMultiPayload();
        goto LABEL_76;
    }
  }
LABEL_78:
  uint64_t v127 = a3[5];
  uint64_t v128 = (uint64_t)a1 + v127;
  uint64_t v129 = (char *)v4 + v127;
  if (!*(void *)((char *)a1 + v127))
  {
LABEL_82:
    *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
    goto LABEL_83;
  }
  if (!*(void *)v129)
  {
    sub_1C01B4324(v128);
    goto LABEL_82;
  }
  *(void *)uint64_t v128 = *(void *)v129;
  swift_bridgeObjectRelease();
  *(void *)(v128 + 8) = *((void *)v129 + 1);
  swift_bridgeObjectRelease();
LABEL_83:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)v4 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)v4 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatContentSlotItemResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02A0520);
}

uint64_t sub_1C02A0520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FormatContentSlotItemResolution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02A05F4);
}

uint64_t sub_1C02A05F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSlotItemResolution.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02A077CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSlotItemResolution.CodingKeys()
{
  return &type metadata for FormatContentSlotItemResolution.CodingKeys;
}

unint64_t sub_1C02A07B8()
{
  unint64_t result = qword_1EA198F30;
  if (!qword_1EA198F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198F30);
  }
  return result;
}

unint64_t sub_1C02A0810()
{
  unint64_t result = qword_1EB861408;
  if (!qword_1EB861408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB861408);
  }
  return result;
}

unint64_t sub_1C02A0868()
{
  unint64_t result = qword_1EB863120;
  if (!qword_1EB863120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863120);
  }
  return result;
}

uint64_t sub_1C02A08BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261696C69787561 && a2 == 0xE900000000000079 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void *static FeedKind.allCases.getter()
{
  return &unk_1F1B693D8;
}

uint64_t sub_1C02A0AF4()
{
  return sub_1C15171AC();
}

NewsFeed::FeedKind_optional __swiftcall FeedKind.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_1C1520C8C();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 7;
  switch(v3)
  {
    case 0:
      goto LABEL_9;
    case 1:
      char v5 = 1;
      goto LABEL_9;
    case 2:
      char v5 = 2;
      goto LABEL_9;
    case 3:
      char v5 = 3;
      goto LABEL_9;
    case 4:
      char v5 = 4;
      goto LABEL_9;
    case 5:
      char v5 = 5;
      goto LABEL_9;
    case 6:
      char v5 = 6;
LABEL_9:
      char v6 = v5;
      break;
    case 7:
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    default:
      char v6 = 25;
      break;
  }
  *BOOL v2 = v6;
  return result;
}

unint64_t FeedKind.rawValue.getter()
{
  unint64_t result = 0x746C7561666564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F69647561;
      break;
    case 2:
      unint64_t result = 0x6C656E6E616863;
      break;
    case 3:
      unint64_t result = 0x536C656E6E616863;
      break;
    case 4:
      unint64_t result = 0x747241664F646E65;
      break;
    case 5:
      unint64_t result = 0x79726F74736968;
      break;
    case 6:
      unint64_t result = 0x6C61636F6CLL;
      break;
    case 7:
      unint64_t result = 0x6365536C61636F6CLL;
      break;
    case 8:
      unint64_t result = 0x656E697A6167616DLL;
      break;
    case 9:
      unint64_t result = 0x7374726F7053796DLL;
      break;
    case 0xA:
      unint64_t result = 0x7548656C7A7A7570;
      break;
    case 0xB:
      unint64_t result = 0x7954656C7A7A7570;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xD:
      unint64_t result = 0x6465766173;
      break;
    case 0xE:
      unint64_t result = 0x686372616573;
      break;
    case 0xF:
      unint64_t result = 0x6F4D686372616573;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x11:
      unint64_t result = 0x7053686372616573;
      break;
    case 0x12:
      unint64_t result = 0x6957646572616873;
      break;
    case 0x13:
      unint64_t result = 0x7961646F74;
      break;
    case 0x14:
      unint64_t result = 0x6369706F74;
      break;
    case 0x15:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    case 0x16:
      unint64_t result = 0x6F54736B636F7473;
      break;
    case 0x17:
      unint64_t result = 0x7953736B636F7473;
      break;
    case 0x18:
      unint64_t result = 0x76457374726F7073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C02A1598(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1492B44(*a1, *a2);
}

uint64_t sub_1C02A15A4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C02A160C()
{
  FeedKind.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02A1670()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedKind_optional sub_1C02A16D4(Swift::String *a1)
{
  return FeedKind.init(rawValue:)(*a1);
}

unint64_t sub_1C02A16E0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FeedKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C02A1708(uint64_t a1)
{
  unint64_t v2 = sub_1C02A1CC0();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C02A175C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C02A1CC0();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C02A17B8(uint64_t a1)
{
  unint64_t v2 = sub_1C02A1CC0();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

void sub_1C02A180C(void *a1@<X8>)
{
  *a1 = &unk_1F1B693D8;
}

uint64_t sub_1C02A181C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C02A187C()
{
  return sub_1C151EAEC();
}

uint64_t _s8NewsFeed0B4KindO7optionsSay11TeaSettings6OptionVyACGGvgZ_0()
{
  sub_1C02A1D14(0, &qword_1EA19CAA0, MEMORY[0x1E4FAB418]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v4 = &v12[-v3];
  uint64_t v5 = qword_1F1B693E8;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (qword_1F1B693E8)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C05F6DB8(0, qword_1F1B693E8, 0);
    uint64_t v6 = v13;
    uint64_t v7 = &byte_1F1B693F8;
    do
    {
      char v8 = *v7++;
      v12[23] = v8;
      sub_1C02A0AF4();
      uint64_t v13 = v6;
      unint64_t v10 = *(void *)(v6 + 16);
      unint64_t v9 = *(void *)(v6 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1C05F6DB8(v9 > 1, v10 + 1, 1);
        uint64_t v6 = v13;
      }
      *(void *)(v6 + 16) = v10 + 1;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v2 + 32))(v6+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v10, v4, v1);
      --v5;
    }
    while (v5);
  }
  return v6;
}

unint64_t sub_1C02A1A70()
{
  unint64_t result = qword_1EA198F38;
  if (!qword_1EA198F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198F38);
  }
  return result;
}

unint64_t sub_1C02A1AC8()
{
  unint64_t result = qword_1EA198F40;
  if (!qword_1EA198F40)
  {
    sub_1C02A1D14(255, &qword_1EA198F48, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198F40);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE8) {
    goto LABEL_17;
  }
  if (a2 + 24 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 24) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 24;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v8 = v6 - 25;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeedKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *unint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02A1C98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

unint64_t sub_1C02A1CC0()
{
  unint64_t result = qword_1EA1A5370;
  if (!qword_1EA1A5370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5370);
  }
  return result;
}

void sub_1C02A1D14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for FeedKind);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FormatBreakpointNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBreakpointNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBreakpointNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatBreakpointNode.line.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t FormatBreakpointNode.column.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t FormatBreakpointNode.filePath.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBreakpointNode.child.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  long long v3 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t FormatBreakpointNode.__allocating_init(identifier:line:column:filePath:child:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7)
{
  uint64_t v14 = swift_allocObject();
  long long v17 = a7[1];
  long long v18 = *a7;
  uint64_t v15 = *((void *)a7 + 4);
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  *(void *)(v14 + 48) = a5;
  *(void *)(v14 + 56) = a6;
  *(_OWORD *)(v14 + 64) = v18;
  *(_OWORD *)(v14 + 80) = v17;
  *(void *)(v14 + 96) = v15;
  return v14;
}

uint64_t FormatBreakpointNode.init(identifier:line:column:filePath:child:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7)
{
  long long v16 = a7[1];
  long long v17 = *a7;
  uint64_t v14 = *((void *)a7 + 4);
  swift_beginAccess();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = a6;
  *(_OWORD *)(v7 + 64) = v17;
  *(_OWORD *)(v7 + 80) = v16;
  *(void *)(v7 + 96) = v14;
  return v7;
}

uint64_t FormatBreakpointNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatBreakpointNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C02A20E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C0864C98(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C02A2110(void *a1)
{
  return FormatBreakpointNode.encode(to:)(a1);
}

uint64_t sub_1C02A2134(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed20FormatBreakpointNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C02A2140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v4 = *(_OWORD *)(a4 + 16);
  v6[0] = *(_OWORD *)a4;
  v6[1] = v4;
  uint64_t v7 = *(void *)(a4 + 32);
  return sub_1C1016BB8((uint64_t *)v6);
}

uint64_t FormatBreakpointNode.bind(binder:context:)(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4), uint64_t a2)
{
  return swift_release();
}

uint64_t sub_1C02A221C(uint64_t a1)
{
  uint64_t result = sub_1C02A2354(&qword_1EA198F50);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatBreakpointNode()
{
  return self;
}

uint64_t sub_1C02A2284(void *a1)
{
  a1[1] = sub_1C02A2354(&qword_1EA198F58);
  a1[2] = sub_1C02A2354(&qword_1EA198F60);
  uint64_t result = sub_1C02A2354(&qword_1EA198F68);
  a1[3] = result;
  return result;
}

uint64_t sub_1C02A2310(uint64_t a1)
{
  uint64_t result = sub_1C02A2354(&qword_1EA198F70);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C02A2354(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatBreakpointNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C02A2394(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4), uint64_t a2)
{
  return swift_release();
}

uint64_t sub_1C02A242C(uint64_t a1)
{
  return sub_1C02A24C0(a1);
}

uint64_t sub_1C02A2444@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatBreakpointNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBreakpointNode);
}

uint64_t dispatch thunk of FormatBreakpointNode.__allocating_init(identifier:line:column:filePath:child:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1C02A24C0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = v2[2];
  if (!v3
    || (unint64_t v4 = v2[v3 + 3],
        swift_retain(),
        char v5 = sub_1C0387D88(v4, 0xC000000000000000),
        uint64_t result = swift_release(),
        (v5 & 1) == 0))
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C0EE23FC(0, v2[2] + 1, 1, v2);
      uint64_t v2 = (void *)result;
    }
    unint64_t v8 = v2[2];
    unint64_t v7 = v2[3];
    if (v8 >= v7 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C0EE23FC((void *)(v7 > 1), v8 + 1, 1, v2);
      uint64_t v2 = (void *)result;
    }
    v2[2] = v8 + 1;
    v2[v8 + 4] = 0xC000000000000000;
    *(void *)(a1 + 48) = v2;
  }
  return result;
}

NewsFeed::FeedAdGroupAdjacency __swiftcall FeedAdGroupAdjacency.init(rawValue:)(NewsFeed::FeedAdGroupAdjacency rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t FeedAdGroupAdjacency.rawValue.getter()
{
  return *(void *)v0;
}

unint64_t sub_1C02A25B8()
{
  unint64_t result = qword_1EA198F78;
  if (!qword_1EA198F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198F78);
  }
  return result;
}

unint64_t sub_1C02A2610()
{
  unint64_t result = qword_1EA198F80;
  if (!qword_1EA198F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198F80);
  }
  return result;
}

uint64_t dispatch thunk of FeedAdGroupDataProviding.allowAdjacentAd.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedAdGroupDataProviding.adGroupKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedAdGroupDataProviding.tag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedAdGroupDataProviding.adKeywords.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1C02A26BC(uint64_t result)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t v5 = *(void *)(v1 + 16);
  char v6 = *(unsigned char *)(v1 + 48);
  char v7 = *(unsigned char *)(v1 + 49);
  int v8 = 1 << ((2 * v7) | ((v6 & 8) != 0));
  if ((v8 & 0x3FE3) == 0)
  {
    if ((v8 & 0x18) != 0)
    {
      uint64_t v9 = *(void *)(v1 + 32);
      uint64_t v10 = *(void *)(v1 + 40);
      uint64_t v11 = *(void *)(v1 + 24);
      uint64_t v14 = *(void *)v1;
      uint64_t v15 = v3;
      unint64_t v16 = v5;
      char v17 = 5;
      sub_1BFF2A99C(v4, v3, v5, v11, v9, v10, v6, v7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1C12ECBDC(&v14, &v17);
      if (!v2)
      {
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        sub_1C0F49260(v4, v3, v13, 0);
      }
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else if ((v6 & 0xF0) == 0x30 && BYTE1(v5) != 4 && *(void *)(v1 + 16) <= 0xFDu)
    {
      uint64_t v14 = *(void *)v1;
      uint64_t v15 = v3;
      LOBYTE(v16) = v5;
      return sub_1C05C3300(result);
    }
  }
  return result;
}

uint64_t sub_1C02A2844(uint64_t a1)
{
  return sub_1C02A26BC(a1);
}

uint64_t sub_1C02A285C(uint64_t a1, uint64_t a2)
{
  return FormatTextNodeBinding.bind(binder:context:)(a1, a2);
}

BOOL _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  unint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  char v14 = *(unsigned char *)(a2 + 48);
  char v113 = *(unsigned char *)(a1 + 48);
  char v114 = *(unsigned char *)(a2 + 49);
  char v112 = *(unsigned char *)(a1 + 49);
  switch((2 * v112) | ((v113 & 8) != 0))
  {
    case 1:
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      if (((2 * v114) | ((v14 & 8) != 0)) == 1) {
        goto LABEL_45;
      }
      goto LABEL_49;
    case 2:
      uint64_t v102 = *(void *)a1;
      uint64_t v104 = *(void *)a2;
      uint64_t v98 = *(void *)(a2 + 32);
      char v107 = *(unsigned char *)(a2 + 48);
      if (((2 * v114) | ((v14 & 8) != 0)) == 2)
      {
        uint64_t v122 = *(void *)a1;
        uint64_t v123 = v2;
        unint64_t v124 = v4;
        uint64_t v125 = v5;
        uint64_t v126 = v6;
        uint64_t v127 = v7;
        char v128 = v113;
        uint64_t v115 = v8;
        uint64_t v116 = v9;
        unint64_t v117 = v10;
        uint64_t v118 = v11;
        uint64_t v119 = v13;
        uint64_t v120 = v12;
        unint64_t v21 = v4;
        char v22 = v14;
        char v121 = v14;
        uint64_t v23 = v6;
        uint64_t v24 = v13;
        uint64_t v25 = v12;
        uint64_t v94 = v12;
        uint64_t v26 = v7;
        uint64_t v27 = v5;
        uint64_t v28 = v2;
        sub_1BFF2A99C(v8, v9, v10, v11, v24, v25, v22, v114);
        unint64_t v90 = v4;
        unint64_t v29 = v4;
        uint64_t v92 = v27;
        uint64_t v30 = v23;
        uint64_t v109 = v23;
        uint64_t v100 = v26;
        sub_1BFF2A99C(v3, v28, v29, v27, v23, v26, v113, v112);
        char v31 = v112;
        sub_1BFF2A99C(v3, v28, v21, v27, v30, v26, v113, v112);
        uint64_t v32 = v104;
        uint64_t v33 = v94;
        uint64_t v34 = v98;
        char v35 = v114;
        sub_1BFF2A99C(v104, v9, v10, v11, v98, v94, v107, v114);
        char v36 = _s8NewsFeed18FormatGroupBindingV4TextO2eeoiySbAE_AEtFZ_0((uint64_t)&v122, (uint64_t)&v115);
        goto LABEL_54;
      }
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      uint64_t v18 = *(void *)(a1 + 32);
      uint64_t v19 = *(void *)(a1 + 40);
      uint64_t v20 = *(void *)(a1 + 8);
      sub_1BFF58ECC(v3, v2, v4, v5, v6, v7, v113, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
      goto LABEL_48;
    case 3:
      uint64_t v110 = *(void *)(a1 + 32);
      uint64_t v101 = *(void *)(a1 + 40);
      uint64_t v93 = *(void *)(a1 + 24);
      uint64_t v95 = *(void *)(a2 + 40);
      if (((2 * v114) | ((v14 & 8) != 0)) == 3) {
        goto LABEL_9;
      }
      goto LABEL_15;
    case 4:
      uint64_t v110 = *(void *)(a1 + 32);
      uint64_t v101 = *(void *)(a1 + 40);
      uint64_t v93 = *(void *)(a1 + 24);
      uint64_t v95 = *(void *)(a2 + 40);
      if (((2 * v114) | ((v14 & 8) != 0)) != 4)
      {
LABEL_15:
        unint64_t v15 = *(void *)(a2 + 16);
        uint64_t v16 = *(void *)(a2 + 8);
        uint64_t v17 = *(void *)(a2 + 24);
        uint64_t v41 = *(void *)a2;
        char v42 = *(unsigned char *)(a2 + 48);
        uint64_t v43 = *(void *)(a1 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2 = v43;
        char v14 = v42;
        uint64_t v8 = v41;
        uint64_t v5 = v93;
        uint64_t v12 = v95;
        uint64_t v7 = v101;
        uint64_t v6 = v110;
        goto LABEL_49;
      }
LABEL_9:
      uint64_t v91 = *(void *)(a1 + 8);
      if (v3 != v8 || v2 != v9)
      {
        uint64_t v37 = *(void *)a2;
        uint64_t v38 = *(void *)(a1 + 8);
        char v39 = sub_1C1520A9C();
        uint64_t v2 = v38;
        uint64_t v8 = v37;
        if ((v39 & 1) == 0)
        {
          sub_1BFF2A99C(v3, v38, v4, v5, v110, v101, v113, v112);
          sub_1BFF2A99C(v37, v9, v10, v11, v13, v95, v14, v114);
          sub_1BFF0084C(v3, v91, v4, v93, v110, v101, v113, v112);
          uint64_t v70 = v37;
          uint64_t v71 = v9;
          unint64_t v72 = v10;
          uint64_t v73 = v11;
          uint64_t v74 = v13;
          uint64_t v75 = v95;
          char v76 = v14;
          char v77 = v114;
          goto LABEL_50;
        }
      }
      uint64_t v105 = v8;
      uint64_t v40 = v2;
      sub_1BFF2A99C(v8, v9, v10, v11, v13, v95, v14, v114);
      sub_1BFF2A99C(v3, v40, v4, v5, v110, v101, v113, v112);
      sub_1BFF2A99C(v3, v40, v4, v5, v110, v101, v113, v112);
      sub_1BFF2A99C(v105, v9, v10, v11, v13, v95, v14, v114);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v88 = sub_1C00E3FD8(v4, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF0084C(v3, v91, v4, v93, v110, v101, v113, v112);
      sub_1BFF0084C(v105, v9, v10, v11, v13, v95, v14, v114);
      sub_1BFF0084C(v105, v9, v10, v11, v13, v95, v14, v114);
      sub_1BFF0084C(v3, v91, v4, v93, v110, v101, v113, v112);
      return (v88 & 1) != 0;
    case 5:
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      if (((2 * v114) | ((v14 & 8) != 0)) != 5) {
        goto LABEL_49;
      }
      int v89 = *(void *)a2;
      uint64_t v44 = *(void *)a2;
      sub_1BFF0084C(v3, v2, v4, v5, v6, v7, v113, v112);
      sub_1BFF0084C(v44, v16, v15, v17, v13, v12, v14, v114);
      switch(v3)
      {
        case 2u:
          if (v89 == 2) {
            return 1;
          }
          break;
        case 3u:
          if (v89 == 3) {
            return 1;
          }
          break;
        case 4u:
          if (v89 == 4) {
            return 1;
          }
          break;
        default:
          if ((v89 - 2) >= 3 && ((v44 ^ v3) & 1) == 0) {
            return 1;
          }
          break;
      }
      return 0;
    case 6:
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      if (((2 * v114) | ((v14 & 8) != 0)) != 6) {
        goto LABEL_49;
      }
      goto LABEL_45;
    case 7:
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      if (((2 * v114) | ((v14 & 8) != 0)) != 7) {
        goto LABEL_49;
      }
      uint64_t v45 = *(void *)a2;
      sub_1BFF0084C(v3, v2, v4, v5, v6, v7, v113, v112);
      sub_1BFF0084C(v45, v16, v15, v17, v13, v12, v14, v114);
      if (v3 > 0xFBu) {
        return v45 > 0xFBu;
      }
      if (v45 > 0xFBu) {
        return 0;
      }
      if ((v3 & 0x80) != 0)
      {
        if ((v45 & 0x80) == 0 || ((v45 ^ v3) & 0x7F) != 0) {
          return 0;
        }
      }
      else if ((v45 & 0x80) != 0 || v45 != v3)
      {
        return 0;
      }
      return 1;
    case 8:
      uint64_t v102 = *(void *)a1;
      uint64_t v104 = *(void *)a2;
      uint64_t v98 = *(void *)(a2 + 32);
      char v107 = *(unsigned char *)(a2 + 48);
      if (((2 * v114) | ((v14 & 8) != 0)) == 8)
      {
        uint64_t v122 = *(void *)a1;
        uint64_t v123 = v2;
        unint64_t v124 = v4;
        uint64_t v125 = v5;
        uint64_t v126 = v6;
        uint64_t v127 = v7;
        char v128 = v113;
        uint64_t v115 = v8;
        uint64_t v116 = v9;
        unint64_t v117 = v10;
        uint64_t v118 = v11;
        uint64_t v119 = v13;
        uint64_t v120 = v12;
        unint64_t v46 = v4;
        char v47 = v14;
        char v121 = v14;
        uint64_t v48 = v6;
        uint64_t v49 = v13;
        uint64_t v50 = v12;
        uint64_t v96 = v12;
        uint64_t v51 = v7;
        uint64_t v52 = v5;
        uint64_t v28 = v2;
        sub_1BFF2A99C(v8, v9, v10, v11, v49, v50, v47, v114);
        unint64_t v90 = v4;
        unint64_t v53 = v4;
        uint64_t v92 = v52;
        uint64_t v54 = v48;
        uint64_t v109 = v48;
        uint64_t v100 = v51;
        sub_1BFF2A99C(v3, v28, v53, v52, v48, v51, v113, v112);
        char v31 = v112;
        sub_1BFF2A99C(v3, v28, v46, v52, v54, v51, v113, v112);
        uint64_t v32 = v104;
        uint64_t v33 = v96;
        uint64_t v34 = v98;
        char v35 = v114;
        sub_1BFF2A99C(v104, v9, v10, v11, v98, v96, v107, v114);
        char v36 = _s8NewsFeed19FormatPuzzleBindingV4TextO2eeoiySbAE_AEtFZ_0((uint64_t)&v122, (uint64_t)&v115);
        goto LABEL_54;
      }
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      uint64_t v18 = *(void *)(a1 + 32);
      uint64_t v19 = *(void *)(a1 + 40);
      uint64_t v20 = *(void *)(a1 + 8);
      sub_1C02240C4(v3, v2, v4, v5, v6, v7, v113);
      goto LABEL_48;
    case 9:
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      if (((2 * v114) | ((v14 & 8) != 0)) != 9) {
        goto LABEL_49;
      }
      uint64_t v55 = *(void *)a2;
      char v56 = *(void *)(a1 + 8);
      sub_1BFF0084C(v3, v2, v4, *(void *)(a1 + 24), v6, v7, v113, v112);
      sub_1BFF0084C(v55, v16, v15, v17, v13, v12, v14, v114);
      if (v56)
      {
        if (v3)
        {
          if ((v16 & 1) == 0) {
            return 0;
          }
          return v55 != 0;
        }
        else
        {
          if ((v16 & 1) == 0) {
            return 0;
          }
          return v55 == 0;
        }
      }
      return (v16 & 1) == 0 && v3 == v55;
    case 10:
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      if (((2 * v114) | ((v14 & 8) != 0)) != 0xA) {
        goto LABEL_49;
      }
      goto LABEL_45;
    case 11:
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      if (((2 * v114) | ((v14 & 8) != 0)) != 0xB) {
        goto LABEL_49;
      }
      uint64_t v57 = *(void *)a2;
      sub_1BFF0084C(v3, v2, v4, v5, v6, v7, v113, v112);
      sub_1BFF0084C(v57, v16, v15, v17, v13, v12, v14, v114);
      return ((v57 ^ v3) & 1) == 0;
    case 12:
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      if (((2 * v114) | ((v14 & 8) != 0)) != 0xC) {
        goto LABEL_49;
      }
      uint64_t v99 = *(void *)(a2 + 32);
      unsigned int v59 = *(void *)(a2 + 8);
      uint64_t v103 = *(void *)a1;
      uint64_t v60 = *(void *)a2;
      unsigned __int8 v61 = *(void *)(a1 + 8);
      sub_1BFF0084C(*(void *)a1, v2, *(void *)(a1 + 16), v5, v6, v7, v113, v112);
      sub_1BFF0084C(v60, v16, v15, v11, v99, v12, v14, v114);
      if (!(v61 >> 6))
      {
        if (v59 > 0x3F) {
          return 0;
        }
        return v60 == v103;
      }
      if (v61 >> 6 == 1)
      {
        if ((v59 & 0xC0) != 0x40) {
          return 0;
        }
        return v60 == v103;
      }
      return (v59 & 0xC0) == 0x80 && v103 == v60 && ((v16 ^ v61) & 0x3F) == 0;
    case 13:
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      if (((2 * v114) | ((v14 & 8) != 0)) != 0xD) {
        goto LABEL_49;
      }
LABEL_45:
      uint64_t v62 = *(void *)a2;
      sub_1BFF0084C(v3, v2, v4, v5, v6, v7, v113, v112);
      sub_1BFF0084C(v62, v16, v15, v17, v13, v12, v14, v114);
      return v62 == v3;
    default:
      uint64_t v102 = *(void *)a1;
      uint64_t v104 = *(void *)a2;
      uint64_t v98 = *(void *)(a2 + 32);
      char v107 = *(unsigned char *)(a2 + 48);
      if (!((2 * v114) | ((v14 & 8) != 0)))
      {
        uint64_t v122 = *(void *)a1;
        uint64_t v123 = v2;
        unint64_t v124 = v4;
        uint64_t v125 = v5;
        uint64_t v126 = v6;
        uint64_t v127 = v7;
        char v128 = v113;
        uint64_t v115 = v8;
        uint64_t v116 = v9;
        unint64_t v117 = v10;
        uint64_t v118 = v11;
        uint64_t v119 = v13;
        uint64_t v120 = v12;
        unint64_t v79 = v4;
        char v80 = v14;
        char v121 = v14;
        uint64_t v81 = v6;
        uint64_t v82 = v13;
        uint64_t v83 = v12;
        uint64_t v97 = v12;
        uint64_t v84 = v7;
        uint64_t v85 = v5;
        uint64_t v28 = v2;
        sub_1BFF2A99C(v8, v9, v10, v11, v82, v83, v80, v114);
        unint64_t v90 = v4;
        unint64_t v86 = v4;
        uint64_t v92 = v85;
        uint64_t v87 = v81;
        uint64_t v109 = v81;
        uint64_t v100 = v84;
        sub_1BFF2A99C(v3, v28, v86, v85, v81, v84, v113, v112);
        char v31 = v112;
        sub_1BFF2A99C(v3, v28, v79, v85, v87, v84, v113, v112);
        uint64_t v32 = v104;
        uint64_t v33 = v97;
        uint64_t v34 = v98;
        char v35 = v114;
        sub_1BFF2A99C(v104, v9, v10, v11, v98, v97, v107, v114);
        char v36 = _s8NewsFeed21FormatHeadlineBindingV4TextO2eeoiySbAE_AEtFZ_0((uint64_t)&v122, (uint64_t)&v115);
LABEL_54:
        BOOL v58 = v36;
        sub_1BFF0084C(v102, v28, v90, v92, v109, v100, v113, v31);
        sub_1BFF0084C(v32, v9, v10, v11, v34, v33, v107, v35);
        sub_1BFF0084C(v32, v9, v10, v11, v34, v33, v107, v35);
        sub_1BFF0084C(v102, v28, v90, v92, v109, v100, v113, v112);
        return v58;
      }
      unint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      uint64_t v18 = *(void *)(a1 + 32);
      uint64_t v19 = *(void *)(a1 + 40);
      uint64_t v20 = *(void *)(a1 + 8);
      sub_1BFF2B138(v3, v2, v4, v5, v6, v7, v113);
LABEL_48:
      uint64_t v6 = v18;
      uint64_t v7 = v19;
      uint64_t v2 = v20;
      uint64_t v3 = v102;
      uint64_t v8 = v104;
      char v14 = v107;
      uint64_t v13 = v98;
LABEL_49:
      uint64_t v111 = v6;
      uint64_t v106 = v8;
      uint64_t v63 = v16;
      uint64_t v64 = v16;
      uint64_t v65 = v13;
      uint64_t v66 = v13;
      uint64_t v67 = v7;
      char v108 = v14;
      char v68 = v14;
      uint64_t v69 = v2;
      sub_1BFF2A99C(v8, v64, v15, v17, v66, v12, v68, v114);
      sub_1BFF0084C(v3, v69, v4, v5, v111, v67, v113, v112);
      uint64_t v70 = v106;
      uint64_t v71 = v63;
      unint64_t v72 = v15;
      uint64_t v73 = v17;
      uint64_t v74 = v65;
      uint64_t v75 = v12;
      char v76 = v108;
      char v77 = v114;
LABEL_50:
      sub_1BFF0084C(v70, v71, v72, v73, v74, v75, v76, v77);
      return 0;
  }
}

unint64_t sub_1C02A3670(uint64_t a1)
{
  unint64_t result = sub_1C02A3698();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C02A3698()
{
  unint64_t result = qword_1EA198F88;
  if (!qword_1EA198F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198F88);
  }
  return result;
}

unint64_t sub_1C02A36EC(void *a1)
{
  a1[1] = sub_1BFE2F78C();
  a1[2] = sub_1BFE1AB4C();
  unint64_t result = sub_1C02A3724();
  a1[3] = result;
  return result;
}

unint64_t sub_1C02A3724()
{
  unint64_t result = qword_1EA198F90;
  if (!qword_1EA198F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198F90);
  }
  return result;
}

uint64_t destroy for FormatTextNodeBinding(uint64_t a1)
{
  return sub_1BFF0084C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48), *(unsigned char *)(a1 + 49));
}

uint64_t initializeWithCopy for FormatTextNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 49);
  char v10 = *(unsigned char *)(a2 + 48);
  sub_1BFF2A99C(*(void *)a2, v4, v5, v6, v7, v8, v10, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 49) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatTextNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 49);
  char v10 = *(unsigned char *)(a2 + 48);
  sub_1BFF2A99C(*(void *)a2, v4, v5, v6, v7, v8, v10, v9);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  unint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v17 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v10;
  char v18 = *(unsigned char *)(a1 + 49);
  *(unsigned char *)(a1 + 49) = v9;
  sub_1BFF0084C(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FormatTextNodeBinding(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 49);
  char v12 = *(unsigned char *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v3;
  sub_1BFF0084C(v4, v6, v5, v7, v8, v9, v12, v11);
  return a1;
}

uint64_t sub_1C02A3968(uint64_t a1)
{
  return (2 * (*(unsigned char *)(a1 + 49) & 0x7F)) | (*(unsigned __int8 *)(a1 + 48) >> 3) & 1u;
}

uint64_t sub_1C02A397C(uint64_t result)
{
  *(unsigned char *)(result + 48) &= ~8u;
  return result;
}

uint64_t sub_1C02A398C(uint64_t result, unsigned int a2)
{
  *(unsigned char *)(result + 48) = *(unsigned char *)(result + 48) & 0xF7 | (8 * (a2 & 1));
  *(unsigned char *)(result + 49) = a2 >> 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatTextNodeBinding()
{
  return &type metadata for FormatTextNodeBinding;
}

double FormatRemoteFont.size.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for FormatRemoteFont() + 24));
}

uint64_t FormatRemoteFont.scaling.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for FormatRemoteFont();
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  uint64_t v5 = *v4;
  LOWORD(v4) = *((_WORD *)v4 + 4);
  *(void *)a1 = v5;
  *(_WORD *)(a1 + 8) = (_WORD)v4;
  return result;
}

uint64_t FormatRemoteFont.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatRemoteFont.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatRemoteFont();
  return sub_1BFFAF0B8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
}

uint64_t FormatRemoteFont.size.setter(double a1)
{
  uint64_t result = type metadata accessor for FormatRemoteFont();
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*FormatRemoteFont.size.modify())()
{
  return nullsub_1;
}

uint64_t FormatRemoteFont.scaling.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  __int16 v3 = *((_WORD *)a1 + 4);
  uint64_t result = type metadata accessor for FormatRemoteFont();
  uint64_t v5 = v1 + *(int *)(result + 28);
  *(void *)uint64_t v5 = v2;
  *(_WORD *)(v5 + 8) = v3;
  return result;
}

uint64_t (*FormatRemoteFont.scaling.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C02A3BA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatRemoteFont.init(from:)(a1, a2);
}

uint64_t sub_1C02A3BC0(void *a1)
{
  return FormatRemoteFont.encode(to:)(a1);
}

uint64_t sub_1C02A3BD8(unint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1C0017828();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - v8;
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v26 - v14;
  sub_1BFFAF0B8(v2, (uint64_t)&v26 - v14, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
  type metadata accessor for FormatFontResource(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = type metadata accessor for FormatResource(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  sub_1BFFAF0B8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))sub_1C0017828);
  char v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v12, 1, v16) == 1) {
    return sub_1BFFAEE18((uint64_t)v15, (uint64_t (*)(void))sub_1C0017828);
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BFFAF0B8((uint64_t)v15, (uint64_t)v6, (uint64_t (*)(void))sub_1C0017828);
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v6, 1, v16);
    if (result != 1)
    {
      unint64_t v20 = a1[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v20 = sub_1BFED9EFC(0, *(void *)(v20 + 16) + 1, 1, v20);
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v20 = sub_1BFED9EFC(v21 > 1, v22 + 1, 1, v20);
      }
      *(void *)(v20 + 16) = v22 + 1;
      sub_1C02A49C4((uint64_t)v6, v20+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v22);
      a1[1] = v20;
LABEL_15:
      sub_1BFFAEE18((uint64_t)v12, type metadata accessor for FormatResource);
      return sub_1BFFAEE18((uint64_t)v15, (uint64_t (*)(void))sub_1C0017828);
    }
    __break(1u);
  }
  else
  {
    sub_1BFFAF0B8((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))sub_1C0017828);
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v9, 1, v16);
    if (result != 1)
    {
      unint64_t v23 = *a1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v23 = sub_1BFED9EFC(0, *(void *)(v23 + 16) + 1, 1, v23);
      }
      unint64_t v25 = *(void *)(v23 + 16);
      unint64_t v24 = *(void *)(v23 + 24);
      if (v25 >= v24 >> 1) {
        unint64_t v23 = sub_1BFED9EFC(v24 > 1, v25 + 1, 1, v23);
      }
      *(void *)(v23 + 16) = v25 + 1;
      sub_1C02A49C4((uint64_t)v9, v23+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v25);
      *a1 = v23;
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C02A3FA0(unint64_t *a1)
{
  return sub_1C02A3BD8(a1);
}

uint64_t _s8NewsFeed16FormatRemoteFontV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = (int *)type metadata accessor for FormatRemoteFont();
  if ((_s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5[5], (uint64_t)a2 + v5[5]) & 1) == 0
    || *(double *)((char *)a1 + v5[6]) != *(double *)((char *)a2 + v5[6]))
  {
    return 0;
  }
  uint64_t v6 = v5[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = *(void *)((char *)a1 + v6);
  uint64_t v9 = (char *)a2 + v6;
  uint64_t v10 = *(void *)v9;
  __int16 v11 = *((_WORD *)v9 + 4);
  __int16 v12 = *((_WORD *)v7 + 4);
  return sub_1C149693C(v8, v12, v10, v11);
}

uint64_t sub_1C02A407C(uint64_t a1)
{
  uint64_t result = sub_1C02A414C(&qword_1EA198F98);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C02A40C0(void *a1)
{
  a1[1] = sub_1C02A414C(&qword_1EB85D180);
  a1[2] = sub_1C02A414C(&qword_1EB85B8A8);
  uint64_t result = sub_1C02A414C(&qword_1EA198FA0);
  a1[3] = result;
  return result;
}

uint64_t sub_1C02A414C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatRemoteFont();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1C02A4190@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + *(int *)(type metadata accessor for FormatRemoteFont() + 24));
  *a2 = result;
  return result;
}

uint64_t sub_1C02A41C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t result = type metadata accessor for FormatRemoteFont();
  *(void *)(a2 + *(int *)(result + 24)) = v3;
  return result;
}

uint64_t sub_1C02A4204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for FormatRemoteFont();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 28));
  uint64_t v6 = *v5;
  LOWORD(v5) = *((_WORD *)v5 + 4);
  *(void *)a2 = v6;
  *(_WORD *)(a2 + 8) = (_WORD)v5;
  return result;
}

uint64_t sub_1C02A4248(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  __int16 v4 = *((_WORD *)a1 + 4);
  uint64_t result = type metadata accessor for FormatRemoteFont();
  uint64_t v6 = a2 + *(int *)(result + 28);
  *(void *)uint64_t v6 = v3;
  *(_WORD *)(v6 + 8) = v4;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatRemoteFont(uint64_t *a1, uint64_t *a2, int *a3)
{
  __int16 v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    __int16 v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    type metadata accessor for FormatURL();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = *(void *)v10;
      uint64_t v15 = *((void *)v10 + 1);
      uint64_t v16 = *((void *)v10 + 2);
      char v17 = v10[24];
      sub_1BFE86E48(v14, v15, v16, v17);
      *(void *)uint64_t v9 = v14;
      *((void *)v9 + 1) = v15;
      *((void *)v9 + 2) = v16;
      v9[24] = v17;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v12 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v12;
        *((void *)v9 + 2) = *((void *)v10 + 2);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v18 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v9, v10, v18);
        uint64_t v19 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v9[*(int *)(v19 + 20)] = *(void *)&v10[*(int *)(v19 + 20)];
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    unint64_t v21 = (char *)v4 + v20;
    unint64_t v22 = (char *)a2 + v20;
    *(void *)unint64_t v21 = *(void *)v22;
    *((_WORD *)v21 + 4) = *((_WORD *)v22 + 4);
  }
  return v4;
}

void *assignWithCopy for FormatRemoteFont(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1BFFAEE18((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for FormatURL);
    type metadata accessor for FormatURL();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = *(void *)v8;
      uint64_t v11 = *((void *)v8 + 1);
      uint64_t v12 = *((void *)v8 + 2);
      char v13 = v8[24];
      sub_1BFE86E48(v10, v11, v12, v13);
      *(void *)uint64_t v7 = v10;
      *((void *)v7 + 1) = v11;
      *((void *)v7 + 2) = v12;
      v7[24] = v13;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v14 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
        uint64_t v15 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v7[*(int *)(v15 + 20)] = *(void *)&v8[*(int *)(v15 + 20)];
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v16 = a3[7];
  char v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  *((_WORD *)v17 + 4) = *((_WORD *)v18 + 4);
  *(void *)char v17 = v19;
  return a1;
}

_OWORD *initializeWithTake for FormatRemoteFont(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FormatURL();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    uint64_t v11 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v7[*(int *)(v11 + 20)] = *(void *)&v8[*(int *)(v11 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  char v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)char v13 = *(void *)v14;
  *((_WORD *)v13 + 4) = *((_WORD *)v14 + 4);
  return a1;
}

void *assignWithTake for FormatRemoteFont(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1BFFAEE18((uint64_t)a1 + v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
    uint64_t v10 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      uint64_t v12 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v8[*(int *)(v12 + 20)] = *(void *)&v9[*(int *)(v12 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *((_WORD *)v14 + 4) = *((_WORD *)v15 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatRemoteFont(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02A4858);
}

uint64_t sub_1C02A4858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatURL();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatRemoteFont(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02A491C);
}

uint64_t sub_1C02A491C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatURL();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C02A49C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatResource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02A4A28()
{
  if ((*(_WORD *)(v0 + *(int *)(type metadata accessor for FormatRemoteFont() + 28) + 8) & 0xFF00) == 0xC00)
  {
    sub_1BFF63CD0();
    return sub_1C151F89C();
  }
  else
  {
    sub_1BFF63CD0();
    id v2 = sub_1BFF68690();
    uint64_t v3 = sub_1C151F85C();

    return v3;
  }
}

uint64_t sub_1C02A4B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  *(void *)(v4 + 600) = v5;
  *(void *)(v4 + 592) = a2;
  *(void *)(v4 + 584) = a1;
  *(void *)(v4 + 608) = swift_getObjectType();
  *(void *)(v4 + 616) = type metadata accessor for PuzzleDatastoreInfo();
  *(void *)(v4 + 624) = swift_task_alloc();
  *(void *)(v4 + 632) = swift_task_alloc();
  sub_1C02B0BE4(0);
  *(void *)(v4 + 640) = swift_task_alloc();
  uint64_t v7 = sub_1C151631C();
  *(void *)(v4 + 648) = v7;
  *(void *)(v4 + 656) = *(void *)(v7 - 8);
  *(void *)(v4 + 664) = swift_task_alloc();
  *(void *)(v4 + 672) = type metadata accessor for PuzzleResource();
  *(void *)(v4 + 680) = swift_task_alloc();
  *(void *)(v4 + 688) = swift_task_alloc();
  *(void *)(v4 + 696) = swift_task_alloc();
  uint64_t v8 = sub_1C1515FDC();
  *(void *)(v4 + 704) = v8;
  *(void *)(v4 + 712) = *(void *)(v8 - 8);
  *(void *)(v4 + 720) = swift_task_alloc();
  *(void *)(v4 + 728) = swift_task_alloc();
  sub_1BFF00BEC();
  *(void *)(v4 + 736) = swift_task_alloc();
  *(void *)(v4 + 744) = swift_task_alloc();
  *(void *)(v4 + 752) = type metadata accessor for PuzzleResourceSource();
  *(void *)(v4 + 760) = swift_task_alloc();
  *(_OWORD *)(v4 + 768) = *(_OWORD *)a3;
  *(_WORD *)(v4 + 306) = *(_WORD *)(a3 + 16);
  return MEMORY[0x1F4188298](sub_1C02A4DB8, 0, 0);
}

uint64_t sub_1C02A4DB8()
{
  uint64_t v47 = v0;
  sub_1BFDF8C0C(*(void *)(v0 + 592), *(void *)(v0 + 760), (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
  if (qword_1EA194B70 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    if (qword_1EA194B60 != -1) {
      swift_once();
    }
    sub_1C02B0DA8(&qword_1EA199030, v1, (void (*)(uint64_t))type metadata accessor for PuzzleDataManager);
    sub_1C1516FBC();
    if (qword_1EA194B68 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 736);
    uint64_t v3 = *(void *)(v0 + 712);
    uint64_t v4 = *(void *)(v0 + 704);
    sub_1C1516FBC();
    unint64_t v5 = (unint64_t)PuzzleResourceSource.identifier.getter();
    unint64_t v7 = v6;
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4);
    uint64_t v9 = *(void *)(v0 + 736);
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
      sub_1C02B0EA8(v9, (uint64_t (*)(void))sub_1BFF00BEC);
LABEL_31:
      uint64_t v42 = *(void *)(v0 + 760);
      uint64_t v43 = *(void *)(v0 + 744);
      sub_1C02B0C6C();
      swift_allocError();
      swift_willThrow();
      sub_1C02B0EA8(v43, (uint64_t (*)(void))sub_1BFF00BEC);
      sub_1C02B0EA8(v42, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
      return v44();
    }
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v0 + 712) + 32);
    v10(*(char **)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 704));
    uint64_t v11 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (!v11)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 712) + 8))(*(void *)(v0 + 728), *(void *)(v0 + 704));
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    uint64_t v12 = *(unint64_t **)(v0 + 760);
    uint64_t v13 = *(void *)(v0 + 744);
    uint64_t v14 = *(void *)(v0 + 728);
    uint64_t v15 = *(void *)(v0 + 704);
    sub_1C02B0EA8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
    sub_1C023675C();
    char v17 = (char *)v12 + *(int *)(v16 + 48);
    uint64_t v18 = (uint64_t)v12 + *(int *)(v16 + 64);
    *uint64_t v12 = v5;
    v12[1] = v7;
    v10(v17, v14, v15);
    sub_1BFEE9A74(v13, v18, (uint64_t (*)(void))sub_1BFF00BEC);
    swift_storeEnumTagMultiPayload();
  }
  *(CFTimeInterval *)(v0 + 784) = CACurrentMediaTime();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)(v0 + 776);
  uint64_t v20 = *(void *)(v0 + 768);
  uint64_t v21 = sub_1C15198DC();
  *(void *)(v0 + 792) = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93C7A8);
  sub_1BFEF9C98(v20, v19);
  sub_1BFEF9C98(v20, v19);
  unint64_t v22 = sub_1C15198AC();
  os_log_type_t v23 = sub_1C151F38C();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = *(void *)(v0 + 776);
    unint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v46 = v26;
    *(_DWORD *)unint64_t v25 = 136315138;
    unint64_t v27 = 0xD000000000000013;
    unint64_t v28 = 0x80000001C1609E10;
    if (!v24)
    {
      unint64_t v27 = 0xD000000000000011;
      unint64_t v28 = 0x80000001C1609E30;
    }
    if (v24 == 1) {
      uint64_t v29 = 7104878;
    }
    else {
      uint64_t v29 = v27;
    }
    if (v24 == 1) {
      unint64_t v30 = 0xE300000000000000;
    }
    else {
      unint64_t v30 = v28;
    }
    uint64_t v31 = *(void *)(v0 + 776);
    uint64_t v32 = *(void *)(v0 + 768);
    *(void *)(v0 + 560) = sub_1BFDA76EC(v29, v30, &v46);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1BFEF2F40(v32, v31);
    sub_1BFEF2F40(v32, v31);
    _os_log_impl(&dword_1BFC31000, v22, v23, "PuzzleDataManager: Start fetching resources with puzzleLaunchAction=%s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v26, -1, -1);
    MEMORY[0x1C18C9B00](v25, -1, -1);
  }
  else
  {
    uint64_t v33 = *(void *)(v0 + 776);
    uint64_t v34 = *(void *)(v0 + 768);
    sub_1BFEF2F40(v34, v33);
    sub_1BFEF2F40(v34, v33);
  }

  char v35 = (void *)(*(void *)(v0 + 600) + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleService);
  uint64_t v36 = v35[3];
  uint64_t v37 = v35[4];
  __swift_project_boxed_opaque_existential_1(v35, v36);
  uint64_t v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 + 24) + **(int **)(v37 + 24));
  uint64_t v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 800) = v38;
  *uint64_t v38 = v0;
  v38[1] = sub_1C02A5520;
  uint64_t v39 = *(void *)(v0 + 760);
  uint64_t v40 = *(void *)(v0 + 696);
  return v45(v40, v39, v36, v37);
}

uint64_t sub_1C02A5520()
{
  *(void *)(*(void *)v1 + 808) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C02A8128;
  }
  else {
    uint64_t v2 = sub_1C02A5634;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02A5634()
{
  uint64_t v90 = v0;
  uint64_t v1 = (void *)(v0 + 576);
  uint64_t v2 = *(uint64_t **)(v0 + 696);
  uint64_t v3 = *(void *)(v0 + 688);
  uint64_t v4 = *(void *)(v0 + 600);
  uint64_t v5 = *v2;
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle;
  *(void *)(v0 + 816) = OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle;
  *(void *)(v4 + v6) = v5;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_1BFDF8C0C((uint64_t)v2, v3, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
  unint64_t v7 = sub_1C15198AC();
  os_log_type_t v8 = sub_1C151F38C();
  if (os_log_type_enabled(v7, v8))
  {
    double v9 = *(double *)(v0 + 784);
    uint64_t v10 = *(void *)(v0 + 688);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    *(void *)&v87[0] = v83;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v84 = v4;
    unint64_t v12 = PuzzleResource.description.getter();
    *(void *)(v0 + 536) = sub_1BFDA76EC(v12, v13, (uint64_t *)v87);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C02B0EA8(v10, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
    *(_WORD *)(v11 + 12) = 2080;
    CFTimeInterval v14 = (CACurrentMediaTime() - v9) * 1000.0;
    *(void *)(v0 + 360) = 0;
    *(void *)(v0 + 368) = 0xE000000000000000;
    sub_1C151E80C();
    sub_1C151EF6C();
    sub_1C151E80C();
    sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
    uint64_t v16 = MEMORY[0x1E4FBB460];
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v15 + 64) = v16;
    *(CFTimeInterval *)(v15 + 32) = v14 / 1000.0;
    uint64_t v17 = sub_1C151E66C();
    unint64_t v19 = v18;
    uint64_t v1 = (void *)(v0 + 576);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 552) = sub_1BFDA76EC(v17, v19, (uint64_t *)v87);
    sub_1C151FE1C();
    uint64_t v4 = v84;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v7, v8, "PuzzleDataManager: Fetched puzzle resource: %s duration=%s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v83, -1, -1);
    MEMORY[0x1C18C9B00](v11, -1, -1);
  }
  else
  {
    sub_1C02B0EA8(*(void *)(v0 + 688), (uint64_t (*)(void))type metadata accessor for PuzzleResource);
  }

  *uint64_t v1 = 0;
  uint64_t v20 = *(void **)(v4 + v6);
  if (v20)
  {
    uint64_t v21 = *(void *)(v0 + 664);
    uint64_t v22 = *(void *)(v0 + 656);
    uint64_t v86 = *(void *)(v0 + 648);
    uint64_t v23 = *(void *)(v0 + 600);
    id v24 = objc_msgSend(v20, sel_puzzleType);
    *(void *)(v0 + 824) = v24;
    uint64_t v25 = *(void *)(v23 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 24);
    uint64_t v26 = *(void *)(v23 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v23 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService), v25);
    id v27 = objc_msgSend(v24, sel_identifier);
    uint64_t v28 = sub_1C151E62C();
    uint64_t v30 = v29;

    sub_1C15161BC();
    uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v28, v30, v21, v25, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v86);
    *(void *)(v0 + 832) = *(void *)(v31 + 16);
    swift_bridgeObjectRelease();
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 840) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_1C02A6210;
    return sub_1C02AA0D0((uint64_t)v24);
  }
  else
  {
    uint64_t v34 = v0 + 308;
    *(unsigned char *)(v0 + 308) = 0;
    char v35 = sub_1C15198AC();
    os_log_type_t v36 = sub_1C151F38C();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(void *)&v87[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      swift_beginAccess();
      if (*v1)
      {
        uint64_t v39 = type metadata accessor for PuzzleStatistic();
        uint64_t v40 = swift_bridgeObjectRetain();
        uint64_t v41 = MEMORY[0x1C18C67D0](v40, v39);
        unint64_t v43 = v42;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v41 = 7104878;
        unint64_t v43 = 0xE300000000000000;
      }
      double v44 = *(double *)(v0 + 784);
      *(void *)(v0 + 488) = sub_1BFDA76EC(v41, v43, (uint64_t *)v87);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      CFTimeInterval v45 = (CACurrentMediaTime() - v44) * 1000.0;
      *(void *)(v0 + 392) = 0;
      *(void *)(v0 + 400) = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C151EF6C();
      sub_1C151E80C();
      sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1C1529AE0;
      uint64_t v47 = MEMORY[0x1E4FBB460];
      *(void *)(v46 + 56) = MEMORY[0x1E4FBB3D0];
      *(void *)(v46 + 64) = v47;
      *(CFTimeInterval *)(v46 + 32) = v45 / 1000.0;
      uint64_t v48 = sub_1C151E66C();
      unint64_t v50 = v49;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 504) = sub_1BFDA76EC(v48, v50, (uint64_t *)v87);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v35, v36, "PuzzleDataManager: Fetched puzzle statistics: %s duration=%s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v38, -1, -1);
      MEMORY[0x1C18C9B00](v37, -1, -1);

      uint64_t v34 = v0 + 308;
    }
    else
    {
    }
    uint64_t v51 = *(void *)(v0 + 816);
    uint64_t v52 = *(void *)(v0 + 600);
    *(void *)(v0 + 408) = 0;
    *(void *)(v0 + 416) = 0;
    uint64_t v53 = *(void *)(v52 + v51);
    *(void *)(v0 + 864) = v53;
    if (v53)
    {
      __int16 v54 = *(_WORD *)(v0 + 306);
      *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 768);
      *(_WORD *)(v0 + 304) = v54;
      swift_unknownObjectRetain();
      uint64_t v55 = (void *)swift_task_alloc();
      *(void *)(v0 + 872) = v55;
      *uint64_t v55 = v0;
      v55[1] = sub_1C02A6AE8;
      uint64_t v56 = *(void *)(v0 + 696);
      return sub_1C02AA748(v53, v56, v0 + 288);
    }
    else
    {
      uint64_t v57 = sub_1C15198AC();
      uint64_t v58 = sub_1C151F38C();
      if (os_log_type_enabled(v57, (os_log_type_t)v58))
      {
        double v59 = *(double *)(v0 + 784);
        uint64_t v60 = swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v87[0] = v61;
        *(_DWORD *)uint64_t v60 = 136315394;
        *(void *)(v0 + 480) = sub_1BFDA76EC(7104878, 0xE300000000000000, (uint64_t *)v87);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v60 + 12) = 2080;
        CFTimeInterval v62 = (CACurrentMediaTime() - v59) * 1000.0;
        *(void *)(v0 + 376) = 0;
        *(void *)(v0 + 384) = 0xE000000000000000;
        sub_1C151E80C();
        sub_1C151EF6C();
        sub_1C151E80C();
        sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
        uint64_t v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = xmmword_1C1529AE0;
        uint64_t v64 = MEMORY[0x1E4FBB460];
        *(void *)(v63 + 56) = MEMORY[0x1E4FBB3D0];
        *(void *)(v63 + 64) = v64;
        *(CFTimeInterval *)(v63 + 32) = v62 / 1000.0;
        uint64_t v65 = sub_1C151E66C();
        uint64_t v66 = v34;
        unint64_t v68 = v67;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 440) = sub_1BFDA76EC(v65, v68, (uint64_t *)v87);
        sub_1C151FE1C();
        uint64_t v34 = v66;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BFC31000, v57, (os_log_type_t)v58, "PuzzleDataManager: Fetched puzzle small thumbnail url: %s duration=%s", (uint8_t *)v60, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v61, -1, -1);
        MEMORY[0x1C18C9B00](v60, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v69 = (void *)(*(void *)(v0 + 600) + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService);
      uint64_t v70 = v69[4];
      __swift_project_boxed_opaque_existential_1(v69, v69[3]);
      id v71 = PuzzleResourceSource.identifier.getter();
      unint64_t v72 = (void *)(*(uint64_t (**)(id))(*(void *)(v70 + 8) + 48))(v71);
      swift_bridgeObjectRelease();
      if (v72)
      {
        sub_1C02AB008((uint64_t)v87);

        long long v73 = v87[0];
        long long v74 = v87[1];
        long long v75 = v87[2];
        long long v76 = v87[3];
        uint64_t v77 = v88;
        char v78 = v89;
      }
      else
      {
        char v78 = 0;
        long long v73 = 0uLL;
        uint64_t v77 = 1;
        long long v74 = 0uLL;
        long long v75 = 0uLL;
        long long v76 = 0uLL;
      }
      *(unsigned char *)(v0 + 309) = v78;
      *(void *)(v0 + 968) = v77;
      *(_OWORD *)(v34 + 644) = v76;
      *(_OWORD *)(v34 + 628) = v75;
      *(_OWORD *)(v34 + 612) = v74;
      *(_OWORD *)(v34 + 596) = v73;
      uint64_t v79 = *(void *)(v0 + 600);
      sub_1C02AB32C(v79, *(void *)(v0 + 640));
      uint64_t v80 = *(void *)(v79 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleGameCenterService + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v85 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v80 + 32) + **(int **)(v80 + 32));
      uint64_t v82 = (void *)swift_task_alloc();
      *(void *)(v0 + 976) = v82;
      *uint64_t v82 = v0;
      v82[1] = sub_1C02A708C;
      return v85(ObjectType, v80);
    }
  }
}

uint64_t sub_1C02A6210(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 848) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C02A8258;
  }
  else
  {
    *(void *)(v4 + 856) = a1;
    uint64_t v5 = sub_1C02A6338;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C02A6338()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void *)(v0 + 856);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 576) = v1;
  *(unsigned char *)(v0 + 308) = *(void *)(v0 + 832) != 0;
  uint64_t v2 = sub_1C15198AC();
  os_log_type_t v3 = sub_1C151F38C();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(void *)&v51[0] = v5;
    *(_DWORD *)uint64_t v4 = 136315394;
    swift_beginAccess();
    if (*(void *)(v0 + 576))
    {
      uint64_t v6 = type metadata accessor for PuzzleStatistic();
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = MEMORY[0x1C18C67D0](v7, v6);
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = 7104878;
      unint64_t v10 = 0xE300000000000000;
    }
    double v11 = *(double *)(v0 + 784);
    *(void *)(v0 + 488) = sub_1BFDA76EC(v8, v10, (uint64_t *)v51);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    CFTimeInterval v12 = (CACurrentMediaTime() - v11) * 1000.0;
    *(void *)(v0 + 392) = 0;
    *(void *)(v0 + 400) = 0xE000000000000000;
    sub_1C151E80C();
    sub_1C151EF6C();
    sub_1C151E80C();
    sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
    uint64_t v14 = MEMORY[0x1E4FBB460];
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v13 + 64) = v14;
    *(CFTimeInterval *)(v13 + 32) = v12 / 1000.0;
    uint64_t v15 = sub_1C151E66C();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 504) = sub_1BFDA76EC(v15, v17, (uint64_t *)v51);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v2, v3, "PuzzleDataManager: Fetched puzzle statistics: %s duration=%s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v5, -1, -1);
    MEMORY[0x1C18C9B00](v4, -1, -1);
  }

  uint64_t v18 = *(void *)(v0 + 816);
  uint64_t v19 = *(void *)(v0 + 600);
  *(void *)(v0 + 408) = 0;
  *(void *)(v0 + 416) = 0;
  uint64_t v20 = *(void *)(v19 + v18);
  *(void *)(v0 + 864) = v20;
  if (v20)
  {
    __int16 v21 = *(_WORD *)(v0 + 306);
    *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 768);
    *(_WORD *)(v0 + 304) = v21;
    swift_unknownObjectRetain();
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 872) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1C02A6AE8;
    uint64_t v23 = *(void *)(v0 + 696);
    return sub_1C02AA748(v20, v23, v0 + 288);
  }
  else
  {
    uint64_t v25 = sub_1C15198AC();
    uint64_t v26 = sub_1C151F38C();
    if (os_log_type_enabled(v25, (os_log_type_t)v26))
    {
      double v27 = *(double *)(v0 + 784);
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(void *)&v51[0] = v29;
      *(_DWORD *)uint64_t v28 = 136315394;
      *(void *)(v0 + 480) = sub_1BFDA76EC(7104878, 0xE300000000000000, (uint64_t *)v51);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2080;
      CFTimeInterval v30 = (CACurrentMediaTime() - v27) * 1000.0;
      *(void *)(v0 + 376) = 0;
      *(void *)(v0 + 384) = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C151EF6C();
      sub_1C151E80C();
      sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
      uint64_t v32 = MEMORY[0x1E4FBB460];
      *(void *)(v31 + 56) = MEMORY[0x1E4FBB3D0];
      *(void *)(v31 + 64) = v32;
      *(CFTimeInterval *)(v31 + 32) = v30 / 1000.0;
      uint64_t v33 = sub_1C151E66C();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 440) = sub_1BFDA76EC(v33, v35, (uint64_t *)v51);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v25, (os_log_type_t)v26, "PuzzleDataManager: Fetched puzzle small thumbnail url: %s duration=%s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v29, -1, -1);
      MEMORY[0x1C18C9B00](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    os_log_type_t v36 = (void *)(*(void *)(v0 + 600) + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService);
    uint64_t v37 = v36[4];
    __swift_project_boxed_opaque_existential_1(v36, v36[3]);
    id v38 = PuzzleResourceSource.identifier.getter();
    uint64_t v39 = (void *)(*(uint64_t (**)(id))(*(void *)(v37 + 8) + 48))(v38);
    swift_bridgeObjectRelease();
    if (v39)
    {
      sub_1C02AB008((uint64_t)v51);

      long long v40 = v51[0];
      long long v41 = v51[1];
      long long v42 = v51[2];
      long long v43 = v51[3];
      uint64_t v44 = v52;
      char v45 = v53;
    }
    else
    {
      char v45 = 0;
      long long v40 = 0uLL;
      uint64_t v44 = 1;
      long long v41 = 0uLL;
      long long v42 = 0uLL;
      long long v43 = 0uLL;
    }
    *(unsigned char *)(v0 + 309) = v45;
    *(void *)(v0 + 968) = v44;
    *(_OWORD *)(v0 + 952) = v43;
    *(_OWORD *)(v0 + 936) = v42;
    *(_OWORD *)(v0 + 920) = v41;
    *(_OWORD *)(v0 + 904) = v40;
    uint64_t v46 = *(void *)(v0 + 600);
    sub_1C02AB32C(v46, *(void *)(v0 + 640));
    uint64_t v47 = *(void *)(v46 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleGameCenterService + 8);
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v50 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v47 + 32) + **(int **)(v47 + 32));
    unint64_t v49 = (void *)swift_task_alloc();
    *(void *)(v0 + 976) = v49;
    *unint64_t v49 = v0;
    v49[1] = sub_1C02A708C;
    return v50(ObjectType, v47);
  }
}

uint64_t sub_1C02A6AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 880) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1C02A8B94;
  }
  else
  {
    *(void *)(v6 + 888) = a2;
    *(void *)(v6 + 896) = a1;
    uint64_t v7 = sub_1C02A6C20;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1C02A6C20()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 896);
  uint64_t v2 = *(void *)(v0 + 888);
  swift_unknownObjectRelease();
  *(void *)(v0 + 408) = v1;
  *(void *)(v0 + 416) = v2;
  uint64_t v3 = *(void *)(v0 + 896);
  unint64_t v4 = *(void *)(v0 + 888);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F38C();
  if (os_log_type_enabled(v5, v6))
  {
    double v7 = *(double *)(v0 + 784);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v34[0] = v33;
    *(_DWORD *)uint64_t v8 = 136315394;
    if (v4) {
      uint64_t v9 = v3;
    }
    else {
      uint64_t v9 = 7104878;
    }
    if (v4) {
      unint64_t v10 = v4;
    }
    else {
      unint64_t v10 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    *(void *)(v0 + 480) = sub_1BFDA76EC(v9, v10, (uint64_t *)v34);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    CFTimeInterval v11 = (CACurrentMediaTime() - v7) * 1000.0;
    *(void *)(v0 + 376) = 0;
    *(void *)(v0 + 384) = 0xE000000000000000;
    sub_1C151E80C();
    sub_1C151EF6C();
    sub_1C151E80C();
    sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
    uint64_t v13 = MEMORY[0x1E4FBB460];
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v12 + 64) = v13;
    *(CFTimeInterval *)(v12 + 32) = v11 / 1000.0;
    uint64_t v14 = sub_1C151E66C();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 440) = sub_1BFDA76EC(v14, v16, (uint64_t *)v34);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v5, v6, "PuzzleDataManager: Fetched puzzle small thumbnail url: %s duration=%s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v33, -1, -1);
    MEMORY[0x1C18C9B00](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v17 = (void *)(*(void *)(v0 + 600) + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService);
  uint64_t v18 = v17[4];
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  id v19 = PuzzleResourceSource.identifier.getter();
  uint64_t v20 = (void *)(*(uint64_t (**)(id))(*(void *)(v18 + 8) + 48))(v19);
  swift_bridgeObjectRelease();
  if (v20)
  {
    sub_1C02AB008((uint64_t)v34);

    long long v21 = v34[0];
    long long v22 = v34[1];
    long long v23 = v34[2];
    long long v24 = v34[3];
    uint64_t v25 = v35;
    char v26 = v36;
  }
  else
  {
    char v26 = 0;
    long long v21 = 0uLL;
    uint64_t v25 = 1;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
    long long v24 = 0uLL;
  }
  *(unsigned char *)(v0 + 309) = v26;
  *(void *)(v0 + 968) = v25;
  *(_OWORD *)(v0 + 936) = v23;
  *(_OWORD *)(v0 + 952) = v24;
  *(_OWORD *)(v0 + 904) = v21;
  *(_OWORD *)(v0 + 920) = v22;
  uint64_t v27 = *(void *)(v0 + 600);
  sub_1C02AB32C(v27, *(void *)(v0 + 640));
  uint64_t v28 = *(void *)(v27 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleGameCenterService + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v28 + 32) + **(int **)(v28 + 32));
  CFTimeInterval v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 976) = v30;
  *CFTimeInterval v30 = v0;
  v30[1] = sub_1C02A708C;
  return v32(ObjectType, v28);
}

uint64_t sub_1C02A708C(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v5 = *v1;
  *(unsigned char *)(v2 + 310) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 984) = v3;
  *uint64_t v3 = v5;
  v3[1] = sub_1C02A71D8;
  return sub_1C02AB61C();
}

uint64_t sub_1C02A71D8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 992) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C02A9148;
  }
  else
  {
    *(void *)(v4 + 1000) = a1;
    uint64_t v5 = sub_1C02A7300;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C02A7300()
{
  uint64_t v133 = v0;
  uint64_t v1 = v0 + 80;
  uint64_t v128 = *(void *)(v0 + 1000);
  uint64_t v130 = *(void *)(v0 + 992);
  uint64_t v2 = sub_1C15198AC();
  os_log_type_t v3 = sub_1C151F38C();
  if (os_log_type_enabled(v2, v3))
  {
    double v4 = *(double *)(v0 + 784);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v132[0] = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    CFTimeInterval v7 = (CACurrentMediaTime() - v4) * 1000.0;
    *(void *)(v0 + 328) = 0;
    *(void *)(v0 + 336) = 0xE000000000000000;
    sub_1C151E80C();
    sub_1C151EF6C();
    sub_1C151E80C();
    sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    uint64_t v9 = MEMORY[0x1E4FBB460];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v8 + 64) = v9;
    *(CFTimeInterval *)(v8 + 32) = v7 / 1000.0;
    uint64_t v10 = sub_1C151E66C();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 568) = sub_1BFDA76EC(v10, v12, v132);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v2, v3, "PuzzleDataManager: Fetched related puzzles info duration=%s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v6, -1, -1);
    uint64_t v13 = v5;
    uint64_t v1 = v0 + 80;
    MEMORY[0x1C18C9B00](v13, -1, -1);
  }

  uint64_t v14 = *(void *)(v0 + 600);
  sub_1BFDF8C0C(*(void *)(v0 + 696), *(void *)(v0 + 680), (uint64_t (*)(void))type metadata accessor for PuzzleResource);
  unint64_t v15 = (char *)objc_msgSend(*(id *)(v14 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_bundleSubscriptionManager), sel_cachedSubscription);
  if (objc_getAssociatedObject(v15, v15 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
  }
  sub_1BFFBE2FC(v0 + 112, v1);
  if (!*(void *)(v0 + 104))
  {
    sub_1BFEFE4A0(v1);
    goto LABEL_11;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    unint64_t v16 = 0;
    unint64_t v18 = 0;
LABEL_12:
    if (objc_getAssociatedObject(v15, (const void *)~v18))
    {
      sub_1C151FF3C();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    sub_1BFFBE2FC(v0 + 16, v0 + 48);
    char v106 = v18;
    if (*(void *)(v0 + 72))
    {
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
      if (swift_dynamicCast())
      {
        id v19 = *(id *)(v0 + 520);
        unsigned __int8 v20 = objc_msgSend(v19, sel_integerValue);

        char v21 = v20 + 22;
LABEL_20:
        char v101 = v21;
        goto LABEL_21;
      }
    }
    else
    {
      sub_1BFEFE4A0(v0 + 48);
    }

    char v21 = 22;
    goto LABEL_20;
  }
  unint64_t v16 = *(void **)(v0 + 464);
  id v17 = objc_msgSend(v16, sel_integerValue);
  if (v17 != (id)-1)
  {
    unint64_t v18 = (unint64_t)v17;
    goto LABEL_12;
  }

  char v101 = 22;
  char v106 = -1;
LABEL_21:
  uint64_t v108 = *(void *)(v0 + 968);
  uint64_t v122 = *(void *)(v0 + 960);
  uint64_t v116 = *(void *)(v0 + 944);
  uint64_t v119 = *(void *)(v0 + 952);
  unint64_t v113 = *(void *)(v0 + 936);
  uint64_t v22 = *(void *)(v0 + 928);
  uint64_t v23 = *(void *)(v0 + 920);
  uint64_t v24 = *(void *)(v0 + 912);
  uint64_t v25 = *(void *)(v0 + 904);
  uint64_t v26 = *(void *)(v0 + 776);
  uint64_t v27 = *(void *)(v0 + 768);
  uint64_t v28 = *(void *)(v0 + 600);
  uint64_t v29 = **(void ***)(v0 + 696);
  CFTimeInterval v30 = (void *)swift_unknownObjectRetain();
  char v124 = sub_1C02ABC58(v30);
  swift_unknownObjectRelease();
  uint64_t v31 = *(void **)(v28 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleTypeSettings);
  sub_1BFEF9C98(v27, v26);
  sub_1C02B0C18(v25, v24, v23, v22, v113, v116, v119, v122, v108);
  id v32 = objc_msgSend(objc_msgSend(v29, sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  if (!v32)
  {
    sub_1C151E62C();
    id v32 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v33 = objc_msgSend(v31, sel_settingsDataForPuzzleTypeID_, v32);

  if (v33)
  {
    uint64_t v34 = sub_1C151606C();
    unint64_t v95 = v35;
    uint64_t v96 = v34;
  }
  else
  {
    unint64_t v95 = 0xF000000000000000;
    uint64_t v96 = 0;
  }
  char v36 = v106;
  char v37 = v101;
  char v123 = *(unsigned char *)(v0 + 310);
  char v114 = *(unsigned char *)(v0 + 309);
  uint64_t v111 = *(void *)(v0 + 968);
  long long v109 = *(_OWORD *)(v0 + 952);
  long long v104 = *(_OWORD *)(v0 + 936);
  long long v99 = *(_OWORD *)(v0 + 904);
  long long v100 = *(_OWORD *)(v0 + 920);
  char v117 = *(unsigned char *)(v0 + 308);
  __int16 v107 = *(_WORD *)(v0 + 306);
  uint64_t v102 = *(void *)(v0 + 768);
  uint64_t v103 = *(void *)(v0 + 776);
  uint64_t v38 = *(void *)(v0 + 680);
  uint64_t v39 = *(void *)(v0 + 640);
  uint64_t v40 = *(void *)(v0 + 632);
  uint64_t v120 = *(void ***)(v0 + 624);
  long long v41 = *(int **)(v0 + 616);
  char v42 = v37 ^ v36;
  sub_1C02ABEE4();
  uint64_t v97 = v44;
  uint64_t v98 = v43;
  swift_beginAccess();
  type metadata accessor for PuzzleStatsInfo();
  swift_allocObject();
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = PuzzleStatsInfo.init(statistics:)(v45);
  sub_1BFDF8C0C(v39, v40 + v41[12], (uint64_t (*)(void))sub_1C02B0BE4);
  swift_beginAccess();
  uint64_t v47 = *(void *)(v0 + 408);
  uint64_t v48 = *(void *)(v0 + 416);
  uint64_t v49 = sub_1C02AC380();
  uint64_t v51 = v50;
  sub_1BFEE9A74(v38, v40, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
  *(unsigned char *)(v40 + v41[5]) = v42 & 1;
  *(unsigned char *)(v40 + v41[6]) = v124 & 1;
  uint64_t v52 = v40 + v41[7];
  *(_OWORD *)uint64_t v52 = v99;
  *(_OWORD *)(v52 + 16) = v100;
  *(_OWORD *)(v52 + 32) = v104;
  *(_OWORD *)(v52 + 48) = v109;
  *(void *)(v52 + 64) = v111;
  *(unsigned char *)(v52 + 72) = v114;
  uint64_t v53 = v40 + v41[8];
  *(void *)uint64_t v53 = v102;
  *(void *)(v53 + 8) = v103;
  *(_WORD *)(v53 + 16) = v107;
  uint64_t v54 = (uint64_t *)(v40 + v41[9]);
  *uint64_t v54 = v96;
  v54[1] = v95;
  uint64_t v55 = (void *)(v40 + v41[10]);
  *uint64_t v55 = v98;
  v55[1] = v97;
  *(void *)(v40 + v41[11]) = v46;
  *(unsigned char *)(v40 + v41[13]) = v117;
  *(unsigned char *)(v40 + v41[14]) = v123;
  uint64_t v56 = (void *)(v40 + v41[15]);
  *uint64_t v56 = v47;
  v56[1] = v48;
  uint64_t v57 = (uint64_t *)(v40 + v41[16]);
  *uint64_t v57 = v49;
  v57[1] = v51;
  *(void *)(v40 + v41[17]) = v128;
  sub_1BFDF8C0C(v40, (uint64_t)v120, (uint64_t (*)(void))type metadata accessor for PuzzleDatastoreInfo);
  type metadata accessor for PuzzleDatastore();
  swift_allocObject();
  uint64_t v58 = sub_1C09DB31C(v120);
  if (v130)
  {
    uint64_t v59 = *(void *)(v0 + 760);
    uint64_t v60 = *(void *)(v0 + 696);
    uint64_t v61 = *(void *)(v0 + 640);
    uint64_t v62 = *(void *)(v0 + 632);
    sub_1C01DA250(*(void *)(v0 + 904), *(void *)(v0 + 912), *(void *)(v0 + 920), *(void *)(v0 + 928), *(void *)(v0 + 936), *(void *)(v0 + 944), *(void *)(v0 + 952), *(void *)(v0 + 960), *(void *)(v0 + 968));
    sub_1C02B0EA8(v62, (uint64_t (*)(void))type metadata accessor for PuzzleDatastoreInfo);
    sub_1C02B0EA8(v61, (uint64_t (*)(void))sub_1C02B0BE4);
    sub_1C02B0EA8(v60, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
    sub_1C02B0EA8(v59, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v63 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v64 = v58;
    uint64_t v65 = sub_1C15198AC();
    os_log_type_t v66 = sub_1C151F38C();
    BOOL v67 = os_log_type_enabled(v65, v66);
    uint64_t v129 = *(void *)(v0 + 960);
    uint64_t v131 = v64;
    uint64_t v68 = *(void *)(v0 + 952);
    uint64_t v69 = *(void *)(v0 + 944);
    uint64_t v70 = *(void *)(v0 + 928);
    uint64_t v71 = *(void *)(v0 + 912);
    uint64_t v72 = *(void *)(v0 + 904);
    if (v67)
    {
      double v73 = *(double *)(v0 + 784);
      uint64_t v126 = *(void *)(v0 + 640);
      uint64_t v127 = *(void *)(v0 + 760);
      uint64_t v125 = *(void *)(v0 + 632);
      uint64_t v112 = *(void *)(v0 + 920);
      uint64_t v115 = *(void *)(v0 + 912);
      unint64_t v121 = *(void *)(v0 + 936);
      uint64_t v110 = *(void *)(v0 + 968);
      uint64_t v118 = *(void *)(v0 + 944);
      long long v74 = (uint8_t *)swift_slowAlloc();
      uint64_t v105 = v68;
      uint64_t v75 = swift_slowAlloc();
      v132[0] = v75;
      *(_DWORD *)long long v74 = 136315138;
      CFTimeInterval v76 = (CACurrentMediaTime() - v73) * 1000.0;
      *(void *)(v0 + 424) = 0;
      *(void *)(v0 + 432) = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C151EF6C();
      sub_1C151E80C();
      sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = xmmword_1C1529AE0;
      uint64_t v78 = MEMORY[0x1E4FBB460];
      *(void *)(v77 + 56) = MEMORY[0x1E4FBB3D0];
      *(void *)(v77 + 64) = v78;
      *(CFTimeInterval *)(v77 + 32) = v76 / 1000.0;
      uint64_t v79 = sub_1C151E66C();
      unint64_t v81 = v80;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 448) = sub_1BFDA76EC(v79, v81, v132);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v65, v66, "PuzzleDataManager: Finished assembling puzzle data duration=%s", v74, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v75, -1, -1);
      MEMORY[0x1C18C9B00](v74, -1, -1);

      sub_1C01DA250(v72, v115, v112, v70, v121, v118, v105, v129, v110);
    }
    else
    {
      uint64_t v126 = *(void *)(v0 + 640);
      uint64_t v127 = *(void *)(v0 + 760);
      uint64_t v125 = *(void *)(v0 + 632);
      unint64_t v82 = *(void *)(v0 + 936);
      uint64_t v83 = v65;
      uint64_t v84 = *(void *)(v0 + 928);
      uint64_t v85 = *(void *)(v0 + 968);
      uint64_t v86 = *(void *)(v0 + 920);

      sub_1C01DA250(v72, v71, v86, v84, v82, v69, v68, v129, v85);
    }
    sub_1C02B0EA8(v125, (uint64_t (*)(void))type metadata accessor for PuzzleDatastoreInfo);
    sub_1C02B0EA8(v126, (uint64_t (*)(void))sub_1C02B0BE4);
    sub_1C02B0EA8(v127, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
    uint64_t v87 = *(void *)(v0 + 720);
    uint64_t v88 = *(void *)(v0 + 712);
    uint64_t v89 = *(void *)(v0 + 704);
    uint64_t v90 = *(char **)(v0 + 696);
    uint64_t v91 = *(char **)(v0 + 584);
    uint64_t v92 = *(void *)v90;
    (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v87, &v90[*(int *)(*(void *)(v0 + 672) + 20)], v89);
    swift_unknownObjectRetain();
    sub_1C02B0EA8((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
    *(void *)uint64_t v91 = v92;
    uint64_t v93 = type metadata accessor for PuzzleData();
    (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(&v91[*(int *)(v93 + 20)], v87, v89);
    swift_bridgeObjectRelease();
    *(void *)&v91[*(int *)(v93 + 24)] = v131;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v63 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v63();
}

uint64_t sub_1C02A8128()
{
  sub_1C02B0EA8(*(void *)(v0 + 760), (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C02A8258()
{
  uint64_t v66 = v0;
  uint64_t v1 = v0 + 308;
  uint64_t v2 = *(void **)(v0 + 848);
  id v3 = v2;
  id v4 = v2;
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F36C();
  if (os_log_type_enabled(v5, v6))
  {
    CFTimeInterval v7 = *(void **)(v0 + 848);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(void *)&v63[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v1 = v0 + 308;
    swift_getErrorValue();
    uint64_t v10 = sub_1C1520D3C();
    *(void *)(v0 + 528) = sub_1BFDA76EC(v10, v11, (uint64_t *)v63);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v5, v6, "PuzzleDataManager: Failed to get puzzle statistics with error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v9, -1, -1);
    MEMORY[0x1C18C9B00](v8, -1, -1);
    swift_unknownObjectRelease();
  }
  else
  {
    unint64_t v12 = *(void **)(v0 + 848);
    swift_unknownObjectRelease();
  }
  *(unsigned char *)uint64_t v1 = *(void *)(v0 + 832) != 0;
  uint64_t v13 = sub_1C15198AC();
  os_log_type_t v14 = sub_1C151F38C();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(void *)&v63[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_beginAccess();
    if (*(void *)(v0 + 576))
    {
      uint64_t v17 = type metadata accessor for PuzzleStatistic();
      uint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v19 = MEMORY[0x1C18C67D0](v18, v17);
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = 7104878;
      unint64_t v21 = 0xE300000000000000;
    }
    double v22 = *(double *)(v0 + 784);
    *(void *)(v0 + 488) = sub_1BFDA76EC(v19, v21, (uint64_t *)v63);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    CFTimeInterval v23 = (CACurrentMediaTime() - v22) * 1000.0;
    *(void *)(v0 + 392) = 0;
    *(void *)(v0 + 400) = 0xE000000000000000;
    sub_1C151E80C();
    sub_1C151EF6C();
    sub_1C151E80C();
    sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
    uint64_t v25 = MEMORY[0x1E4FBB460];
    *(void *)(v24 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v24 + 64) = v25;
    *(CFTimeInterval *)(v24 + 32) = v23 / 1000.0;
    uint64_t v26 = sub_1C151E66C();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 504) = sub_1BFDA76EC(v26, v28, (uint64_t *)v63);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v13, v14, "PuzzleDataManager: Fetched puzzle statistics: %s duration=%s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v16, -1, -1);
    MEMORY[0x1C18C9B00](v15, -1, -1);

    uint64_t v1 = v0 + 308;
  }
  else
  {
  }
  uint64_t v29 = *(void *)(v0 + 816);
  uint64_t v30 = *(void *)(v0 + 600);
  *(void *)(v0 + 408) = 0;
  *(void *)(v0 + 416) = 0;
  uint64_t v31 = *(void *)(v30 + v29);
  *(void *)(v0 + 864) = v31;
  if (v31)
  {
    __int16 v32 = *(_WORD *)(v0 + 306);
    *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 768);
    *(_WORD *)(v0 + 304) = v32;
    swift_unknownObjectRetain();
    id v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 872) = v33;
    *id v33 = v0;
    v33[1] = sub_1C02A6AE8;
    uint64_t v34 = *(void *)(v0 + 696);
    return sub_1C02AA748(v31, v34, v0 + 288);
  }
  else
  {
    char v36 = sub_1C15198AC();
    uint64_t v37 = sub_1C151F38C();
    if (os_log_type_enabled(v36, (os_log_type_t)v37))
    {
      double v38 = *(double *)(v0 + 784);
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(void *)&v63[0] = v40;
      *(_DWORD *)uint64_t v39 = 136315394;
      *(void *)(v0 + 480) = sub_1BFDA76EC(7104878, 0xE300000000000000, (uint64_t *)v63);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      CFTimeInterval v41 = (CACurrentMediaTime() - v38) * 1000.0;
      *(void *)(v0 + 376) = 0;
      *(void *)(v0 + 384) = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C151EF6C();
      sub_1C151E80C();
      sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1C1529AE0;
      uint64_t v43 = MEMORY[0x1E4FBB460];
      *(void *)(v42 + 56) = MEMORY[0x1E4FBB3D0];
      *(void *)(v42 + 64) = v43;
      *(CFTimeInterval *)(v42 + 32) = v41 / 1000.0;
      uint64_t v44 = sub_1C151E66C();
      uint64_t v45 = v1;
      unint64_t v47 = v46;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 440) = sub_1BFDA76EC(v44, v47, (uint64_t *)v63);
      sub_1C151FE1C();
      uint64_t v1 = v45;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v36, (os_log_type_t)v37, "PuzzleDataManager: Fetched puzzle small thumbnail url: %s duration=%s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v40, -1, -1);
      MEMORY[0x1C18C9B00](v39, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v48 = (void *)(*(void *)(v0 + 600) + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService);
    uint64_t v49 = v48[4];
    __swift_project_boxed_opaque_existential_1(v48, v48[3]);
    id v50 = PuzzleResourceSource.identifier.getter();
    uint64_t v51 = (void *)(*(uint64_t (**)(id))(*(void *)(v49 + 8) + 48))(v50);
    swift_bridgeObjectRelease();
    if (v51)
    {
      sub_1C02AB008((uint64_t)v63);

      long long v52 = v63[0];
      long long v53 = v63[1];
      long long v54 = v63[2];
      long long v55 = v63[3];
      uint64_t v56 = v64;
      char v57 = v65;
    }
    else
    {
      char v57 = 0;
      long long v52 = 0uLL;
      uint64_t v56 = 1;
      long long v53 = 0uLL;
      long long v54 = 0uLL;
      long long v55 = 0uLL;
    }
    *(unsigned char *)(v0 + 309) = v57;
    *(void *)(v0 + 968) = v56;
    *(_OWORD *)(v1 + 644) = v55;
    *(_OWORD *)(v1 + 628) = v54;
    *(_OWORD *)(v1 + 612) = v53;
    *(_OWORD *)(v1 + 596) = v52;
    uint64_t v58 = *(void *)(v0 + 600);
    sub_1C02AB32C(v58, *(void *)(v0 + 640));
    uint64_t v59 = *(void *)(v58 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleGameCenterService + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v59 + 32) + **(int **)(v59 + 32));
    uint64_t v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 976) = v61;
    *uint64_t v61 = v0;
    v61[1] = sub_1C02A708C;
    return v62(ObjectType, v59);
  }
}

uint64_t sub_1C02A8B94()
{
  uint64_t v44 = v0;
  uint64_t v1 = (void *)(v0 + 408);
  uint64_t v2 = *(void **)(v0 + 880);
  swift_unknownObjectRelease();
  id v3 = v2;
  id v4 = v2;
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F36C();
  if (os_log_type_enabled(v5, v6))
  {
    CFTimeInterval v7 = *(void **)(v0 + 880);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(void *)&v41[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_1C1520D3C();
    *(void *)(v0 + 472) = sub_1BFDA76EC(v10, v11, (uint64_t *)v41);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v5, v6, "PuzzleDataManager: Failed to obtain thumbnail small url with error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v9, -1, -1);
    unint64_t v12 = v8;
    uint64_t v1 = (void *)(v0 + 408);
    MEMORY[0x1C18C9B00](v12, -1, -1);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 880);
  }
  *uint64_t v1 = 0;
  v1[1] = 0;
  os_log_type_t v14 = sub_1C15198AC();
  os_log_type_t v15 = sub_1C151F38C();
  if (os_log_type_enabled(v14, v15))
  {
    double v16 = *(double *)(v0 + 784);
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(void *)&v41[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315394;
    *(void *)(v0 + 480) = sub_1BFDA76EC(7104878, 0xE300000000000000, (uint64_t *)v41);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    CFTimeInterval v19 = (CACurrentMediaTime() - v16) * 1000.0;
    *(void *)(v0 + 376) = 0;
    *(void *)(v0 + 384) = 0xE000000000000000;
    sub_1C151E80C();
    sub_1C151EF6C();
    sub_1C151E80C();
    sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
    uint64_t v21 = MEMORY[0x1E4FBB460];
    *(void *)(v20 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v20 + 64) = v21;
    *(CFTimeInterval *)(v20 + 32) = v19 / 1000.0;
    uint64_t v22 = sub_1C151E66C();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 440) = sub_1BFDA76EC(v22, v24, (uint64_t *)v41);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v14, v15, "PuzzleDataManager: Fetched puzzle small thumbnail url: %s duration=%s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v18, -1, -1);
    MEMORY[0x1C18C9B00](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v25 = (void *)(*(void *)(v0 + 600) + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService);
  uint64_t v26 = v25[4];
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  id v27 = PuzzleResourceSource.identifier.getter();
  unint64_t v28 = (void *)(*(uint64_t (**)(id))(*(void *)(v26 + 8) + 48))(v27);
  swift_bridgeObjectRelease();
  if (v28)
  {
    sub_1C02AB008((uint64_t)v41);

    long long v29 = v41[0];
    long long v30 = v41[1];
    long long v31 = v41[2];
    long long v32 = v41[3];
    uint64_t v33 = v42;
    char v34 = v43;
  }
  else
  {
    char v34 = 0;
    long long v29 = 0uLL;
    uint64_t v33 = 1;
    long long v30 = 0uLL;
    long long v31 = 0uLL;
    long long v32 = 0uLL;
  }
  *(unsigned char *)(v0 + 309) = v34;
  *(void *)(v0 + 968) = v33;
  *(_OWORD *)(v0 + 936) = v31;
  *(_OWORD *)(v0 + 952) = v32;
  *(_OWORD *)(v0 + 904) = v29;
  *(_OWORD *)(v0 + 920) = v30;
  uint64_t v35 = *(void *)(v0 + 600);
  sub_1C02AB32C(v35, *(void *)(v0 + 640));
  uint64_t v36 = *(void *)(v35 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleGameCenterService + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v36 + 32) + **(int **)(v36 + 32));
  double v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 976) = v38;
  *double v38 = v0;
  v38[1] = sub_1C02A708C;
  return v40(ObjectType, v36);
}

uint64_t sub_1C02A9148()
{
  uint64_t v135 = v0;
  uint64_t v1 = *(void **)(v0 + 992);
  id v2 = v1;
  id v3 = v1;
  id v4 = sub_1C15198AC();
  os_log_type_t v5 = sub_1C151F36C();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = *(void **)(v0 + 992);
    CFTimeInterval v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v134[0] = v8;
    *(_DWORD *)CFTimeInterval v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_1C1520D3C();
    *(void *)(v0 + 496) = sub_1BFDA76EC(v9, v10, v134);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v4, v5, "PuzzleDataManager: Failed to get related puzzles info with error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v8, -1, -1);
    MEMORY[0x1C18C9B00](v7, -1, -1);
  }
  else
  {
    unint64_t v11 = *(void **)(v0 + 992);
  }
  unint64_t v12 = sub_1C15198AC();
  os_log_type_t v13 = sub_1C151F38C();
  if (os_log_type_enabled(v12, v13))
  {
    double v14 = *(double *)(v0 + 784);
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v134[0] = v16;
    *(_DWORD *)os_log_type_t v15 = 136315138;
    CFTimeInterval v17 = (CACurrentMediaTime() - v14) * 1000.0;
    *(void *)(v0 + 328) = 0;
    *(void *)(v0 + 336) = 0xE000000000000000;
    sub_1C151E80C();
    sub_1C151EF6C();
    sub_1C151E80C();
    sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
    uint64_t v19 = MEMORY[0x1E4FBB460];
    *(void *)(v18 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v18 + 64) = v19;
    *(CFTimeInterval *)(v18 + 32) = v17 / 1000.0;
    uint64_t v20 = sub_1C151E66C();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 568) = sub_1BFDA76EC(v20, v22, v134);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v12, v13, "PuzzleDataManager: Fetched related puzzles info duration=%s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v16, -1, -1);
    MEMORY[0x1C18C9B00](v15, -1, -1);
  }

  uint64_t v23 = *(void *)(v0 + 600);
  sub_1BFDF8C0C(*(void *)(v0 + 696), *(void *)(v0 + 680), (uint64_t (*)(void))type metadata accessor for PuzzleResource);
  unint64_t v24 = (char *)objc_msgSend(*(id *)(v23 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_bundleSubscriptionManager), sel_cachedSubscription);
  if (objc_getAssociatedObject(v24, v24 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
  }
  sub_1BFFBE2FC(v0 + 112, v0 + 80);
  if (!*(void *)(v0 + 104))
  {
    sub_1BFEFE4A0(v0 + 80);
    goto LABEL_14;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    uint64_t v25 = 0;
    unint64_t v27 = 0;
LABEL_15:
    if (objc_getAssociatedObject(v24, (const void *)~v27))
    {
      sub_1C151FF3C();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    sub_1BFFBE2FC(v0 + 16, v0 + 48);
    char v112 = v27;
    if (*(void *)(v0 + 72))
    {
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
      if (swift_dynamicCast())
      {
        id v28 = *(id *)(v0 + 520);
        unsigned __int8 v29 = objc_msgSend(v28, sel_integerValue);

        char v30 = v29 + 22;
LABEL_23:
        char v104 = v30;
        goto LABEL_24;
      }
    }
    else
    {
      sub_1BFEFE4A0(v0 + 48);
    }

    char v30 = 22;
    goto LABEL_23;
  }
  uint64_t v25 = *(void **)(v0 + 464);
  id v26 = objc_msgSend(v25, sel_integerValue);
  if (v26 != (id)-1)
  {
    unint64_t v27 = (unint64_t)v26;
    goto LABEL_15;
  }

  char v104 = 22;
  char v112 = -1;
LABEL_24:
  uint64_t v115 = *(void *)(v0 + 968);
  uint64_t v125 = *(void *)(v0 + 952);
  uint64_t v128 = *(void *)(v0 + 960);
  unint64_t v120 = *(void *)(v0 + 936);
  uint64_t v122 = *(void *)(v0 + 944);
  uint64_t v31 = *(void *)(v0 + 928);
  uint64_t v32 = *(void *)(v0 + 920);
  uint64_t v33 = *(void *)(v0 + 912);
  uint64_t v34 = *(void *)(v0 + 904);
  uint64_t v35 = *(void *)(v0 + 776);
  uint64_t v36 = *(void *)(v0 + 768);
  uint64_t v37 = *(void *)(v0 + 600);
  double v38 = **(void ***)(v0 + 696);
  uint64_t v39 = (void *)swift_unknownObjectRetain();
  char v131 = sub_1C02ABC58(v39);
  swift_unknownObjectRelease();
  uint64_t v40 = *(void **)(v37 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleTypeSettings);
  sub_1BFEF9C98(v36, v35);
  sub_1C02B0C18(v34, v33, v32, v31, v120, v122, v125, v128, v115);
  id v41 = objc_msgSend(objc_msgSend(v38, sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  if (!v41)
  {
    sub_1C151E62C();
    id v41 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v42 = objc_msgSend(v40, sel_settingsDataForPuzzleTypeID_, v41);

  if (v42)
  {
    uint64_t v43 = sub_1C151606C();
    unint64_t v98 = v44;
    uint64_t v99 = v43;
  }
  else
  {
    unint64_t v98 = 0xF000000000000000;
    uint64_t v99 = 0;
  }
  char v45 = v112;
  char v46 = v104;
  char v129 = *(unsigned char *)(v0 + 310);
  char v121 = *(unsigned char *)(v0 + 309);
  uint64_t v118 = *(void *)(v0 + 968);
  long long v116 = *(_OWORD *)(v0 + 952);
  long long v110 = *(_OWORD *)(v0 + 936);
  long long v103 = *(_OWORD *)(v0 + 904);
  long long v105 = *(_OWORD *)(v0 + 920);
  char v123 = *(unsigned char *)(v0 + 308);
  __int16 v113 = *(_WORD *)(v0 + 306);
  uint64_t v107 = *(void *)(v0 + 768);
  uint64_t v108 = *(void *)(v0 + 776);
  uint64_t v100 = *(void *)(v0 + 680);
  uint64_t v47 = *(void *)(v0 + 640);
  uint64_t v48 = *(void *)(v0 + 632);
  uint64_t v126 = *(void ***)(v0 + 624);
  uint64_t v49 = *(int **)(v0 + 616);
  char v50 = v46 ^ v45;
  sub_1C02ABEE4();
  uint64_t v101 = v52;
  uint64_t v102 = v51;
  swift_beginAccess();
  type metadata accessor for PuzzleStatsInfo();
  swift_allocObject();
  uint64_t v53 = swift_bridgeObjectRetain();
  uint64_t v54 = PuzzleStatsInfo.init(statistics:)(v53);
  sub_1BFDF8C0C(v47, v48 + v49[12], (uint64_t (*)(void))sub_1C02B0BE4);
  swift_beginAccess();
  uint64_t v56 = *(void *)(v0 + 408);
  uint64_t v55 = *(void *)(v0 + 416);
  uint64_t v57 = sub_1C02AC380();
  uint64_t v59 = v58;
  sub_1BFEE9A74(v100, v48, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
  *(unsigned char *)(v48 + v49[5]) = v50 & 1;
  *(unsigned char *)(v48 + v49[6]) = v131 & 1;
  uint64_t v60 = v48 + v49[7];
  *(_OWORD *)uint64_t v60 = v103;
  *(_OWORD *)(v60 + 16) = v105;
  *(_OWORD *)(v60 + 32) = v110;
  *(_OWORD *)(v60 + 48) = v116;
  *(void *)(v60 + 64) = v118;
  *(unsigned char *)(v60 + 72) = v121;
  uint64_t v61 = v48 + v49[8];
  *(void *)uint64_t v61 = v107;
  *(void *)(v61 + 8) = v108;
  *(_WORD *)(v61 + 16) = v113;
  uint64_t v62 = (uint64_t *)(v48 + v49[9]);
  uint64_t *v62 = v99;
  v62[1] = v98;
  uint64_t v63 = (void *)(v48 + v49[10]);
  *uint64_t v63 = v102;
  v63[1] = v101;
  *(void *)(v48 + v49[11]) = v54;
  *(unsigned char *)(v48 + v49[13]) = v123;
  *(unsigned char *)(v48 + v49[14]) = v129;
  uint64_t v64 = (void *)(v48 + v49[15]);
  *uint64_t v64 = v56;
  v64[1] = v55;
  char v65 = (uint64_t *)(v48 + v49[16]);
  *char v65 = v57;
  v65[1] = v59;
  *(void *)(v48 + v49[17]) = 0;
  sub_1BFDF8C0C(v48, (uint64_t)v126, (uint64_t (*)(void))type metadata accessor for PuzzleDatastoreInfo);
  type metadata accessor for PuzzleDatastore();
  swift_allocObject();
  uint64_t v66 = sub_1C09DB31C(v126);
  uint64_t v67 = sub_1C15198AC();
  os_log_type_t v68 = sub_1C151F38C();
  BOOL v69 = os_log_type_enabled(v67, v68);
  uint64_t v132 = *(void *)(v0 + 960);
  uint64_t v133 = v66;
  uint64_t v70 = *(void *)(v0 + 952);
  uint64_t v71 = *(void *)(v0 + 944);
  uint64_t v72 = *(void *)(v0 + 928);
  uint64_t v73 = *(void *)(v0 + 912);
  uint64_t v74 = *(void *)(v0 + 904);
  if (v69)
  {
    double v75 = *(double *)(v0 + 784);
    uint64_t v127 = *(void *)(v0 + 640);
    uint64_t v130 = *(void *)(v0 + 760);
    uint64_t v124 = *(void *)(v0 + 632);
    uint64_t v114 = *(void *)(v0 + 912);
    unint64_t v119 = *(void *)(v0 + 936);
    uint64_t v109 = *(void *)(v0 + 968);
    uint64_t v111 = *(void *)(v0 + 920);
    uint64_t v117 = *(void *)(v0 + 944);
    CFTimeInterval v76 = (uint8_t *)swift_slowAlloc();
    uint64_t v106 = v70;
    uint64_t v77 = swift_slowAlloc();
    v134[0] = v77;
    *(_DWORD *)CFTimeInterval v76 = 136315138;
    CFTimeInterval v78 = (CACurrentMediaTime() - v75) * 1000.0;
    *(void *)(v0 + 424) = 0;
    *(void *)(v0 + 432) = 0xE000000000000000;
    sub_1C151E80C();
    sub_1C151EF6C();
    sub_1C151E80C();
    sub_1C02B14CC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = xmmword_1C1529AE0;
    uint64_t v80 = MEMORY[0x1E4FBB460];
    *(void *)(v79 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v79 + 64) = v80;
    *(CFTimeInterval *)(v79 + 32) = v78 / 1000.0;
    uint64_t v81 = sub_1C151E66C();
    unint64_t v83 = v82;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 448) = sub_1BFDA76EC(v81, v83, v134);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v67, v68, "PuzzleDataManager: Finished assembling puzzle data duration=%s", v76, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v77, -1, -1);
    MEMORY[0x1C18C9B00](v76, -1, -1);

    sub_1C01DA250(v74, v114, v111, v72, v119, v117, v106, v132, v109);
  }
  else
  {
    uint64_t v127 = *(void *)(v0 + 640);
    uint64_t v130 = *(void *)(v0 + 760);
    uint64_t v124 = *(void *)(v0 + 632);
    unint64_t v84 = *(void *)(v0 + 936);
    uint64_t v85 = v67;
    uint64_t v86 = *(void *)(v0 + 928);
    uint64_t v87 = *(void *)(v0 + 968);
    uint64_t v88 = *(void *)(v0 + 920);

    sub_1C01DA250(v74, v73, v88, v86, v84, v71, v70, v132, v87);
  }
  sub_1C02B0EA8(v124, (uint64_t (*)(void))type metadata accessor for PuzzleDatastoreInfo);
  sub_1C02B0EA8(v127, (uint64_t (*)(void))sub_1C02B0BE4);
  sub_1C02B0EA8(v130, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
  uint64_t v89 = *(void *)(v0 + 720);
  uint64_t v90 = *(void *)(v0 + 712);
  uint64_t v91 = *(void *)(v0 + 704);
  uint64_t v92 = *(char **)(v0 + 696);
  uint64_t v93 = *(char **)(v0 + 584);
  uint64_t v94 = *(void *)v92;
  (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(v89, &v92[*(int *)(*(void *)(v0 + 672) + 20)], v91);
  swift_unknownObjectRetain();
  sub_1C02B0EA8((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
  *(void *)uint64_t v93 = v94;
  uint64_t v95 = type metadata accessor for PuzzleData();
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(&v93[*(int *)(v95 + 20)], v89, v91);
  swift_bridgeObjectRelease();
  *(void *)&v93[*(int *)(v95 + 24)] = v133;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v96 = *(uint64_t (**)(void))(v0 + 8);
  return v96();
}

uint64_t sub_1C02AA0D0(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_1C152032C();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  sub_1C02B0CC0(0);
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_1C152030C();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C02AA228, 0, 0);
}

uint64_t sub_1C02AA228()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 64);
  int8x16_t v16 = *(int8x16_t *)(v0 + 24);
  sub_1C15202EC();
  MEMORY[0x1C18C7E30](3000000000000000000, 0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v0 + 104) = v6;
  *(void *)(v0 + 112) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v2, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
  sub_1C1520D2C();
  CFTimeInterval v7 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 120) = v7;
  v7[1] = vextq_s8(v16, v16, 8uLL);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v8;
  sub_1C02B14CC(0, (unint64_t *)&unk_1EA1990C8, (uint64_t (*)(uint64_t))sub_1C02B1290, MEMORY[0x1E4FBB718]);
  uint64_t v10 = v9;
  uint64_t v11 = sub_1C02B0DA8(&qword_1EA199070, 255, MEMORY[0x1E4FBD1A8]);
  *uint64_t v8 = v0;
  v8[1] = sub_1C02AA43C;
  uint64_t v13 = *(void *)(v0 + 56);
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v14 = *(void *)(v0 + 40);
  return MEMORY[0x1F415E360](v0 + 16, v12, v13, &unk_1EA1990C0, v7, v14, v10, v11);
}

uint64_t sub_1C02AA43C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  uint64_t v5 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1C02B0EA8(v2, (uint64_t (*)(void))sub_1C02B0CC0);
  if (v0) {
    uint64_t v6 = sub_1C02AA6AC;
  }
  else {
    uint64_t v6 = sub_1C02AA600;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1C02AA600()
{
  (*(void (**)(void, void))(v0 + 104))(*(void *)(v0 + 96), *(void *)(v0 + 72));
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C02AA6AC()
{
  (*(void (**)(void, void))(v0 + 104))(*(void *)(v0 + 96), *(void *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C02AA748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a2;
  v4[6] = v3;
  v4[4] = a1;
  sub_1BFF00BEC();
  v4[7] = swift_task_alloc();
  uint64_t v6 = sub_1C1515FDC();
  v4[8] = v6;
  v4[9] = *(void *)(v6 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *(void *)(a3 + 8);
  v4[12] = v7;
  v4[13] = v8;
  return MEMORY[0x1F4188298](sub_1C02AA890, 0, 0);
}

uint64_t sub_1C02AA890()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  sub_1C02AD360(*(void **)(v0 + 32), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    unint64_t v4 = *(void *)(v0 + 104);
    sub_1C02B0EA8(*(void *)(v0 + 56), (uint64_t (*)(void))sub_1BFF00BEC);
    if (v4 < 2)
    {
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 112) = v5;
      void *v5 = v0;
      v5[1] = sub_1C02AAE28;
      uint64_t v6 = *(void *)(v0 + 32);
      return sub_1C02ACCF0(v6);
    }
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1C15198DC();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EB93C7A8);
    uint64_t v35 = sub_1C15198AC();
    os_log_type_t v36 = sub_1C151F38C();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_1BFC31000, v35, v36, "PuzzleDataManager: Skipping fetch thumbnailSmallUrl as cached data not available in fullScreen modal launchMode", v37, 2u);
      MEMORY[0x1C18C9B00](v37, -1, -1);
    }

    uint64_t v11 = 0;
    uint64_t v33 = 0;
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 64);
  (*(void (**)(void, void, uint64_t))(v9 + 32))(*(void *)(v0 + 96), *(void *)(v0 + 56), v10);
  uint64_t v11 = sub_1C1515E6C();
  uint64_t v13 = v12;
  type metadata accessor for PuzzleResource();
  sub_1C1515EFC();
  sub_1C1515EDC();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v14(v8, v10);
  os_log_type_t v15 = self;
  id v16 = objc_msgSend(v15, sel_defaultManager);
  sub_1C1515F4C();
  uint64_t v17 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  unsigned int v18 = objc_msgSend(v16, sel_fileExistsAtPath_, v17);

  if (v18)
  {
    id v19 = objc_msgSend(v15, sel_defaultManager);
    uint64_t v20 = (void *)sub_1C1515E9C();
    *(void *)(v0 + 24) = 0;
    unsigned int v21 = objc_msgSend(v19, sel_removeItemAtURL_error_, v20, v0 + 24);

    unint64_t v22 = *(void **)(v0 + 24);
    if (!v21)
    {
      uint64_t v43 = *(void *)(v0 + 88);
      uint64_t v42 = *(void *)(v0 + 96);
      uint64_t v44 = *(void *)(v0 + 64);
      id v45 = v22;
      swift_bridgeObjectRelease();
      sub_1C1515D3C();

      swift_willThrow();
      v14(v43, v44);
      uint64_t v40 = v42;
      uint64_t v41 = v44;
      goto LABEL_21;
    }
    id v23 = v22;
  }
  id v24 = objc_msgSend(v15, sel_defaultManager, v13);
  uint64_t v25 = (void *)sub_1C1515E9C();
  id v26 = (void *)sub_1C1515E9C();
  *(void *)(v0 + 16) = 0;
  unsigned int v27 = objc_msgSend(v24, sel_copyItemAtURL_toURL_error_, v25, v26, v0 + 16);

  id v28 = *(void **)(v0 + 16);
  uint64_t v30 = *(void *)(v0 + 88);
  uint64_t v29 = *(void *)(v0 + 96);
  uint64_t v31 = *(void *)(v0 + 64);
  if (v27)
  {
    id v32 = v28;
    v14(v30, v31);
    v14(v29, v31);
    uint64_t v33 = v47;
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v38 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v38(v11, v33);
  }
  id v39 = v28;
  swift_bridgeObjectRelease();
  sub_1C1515D3C();

  swift_willThrow();
  v14(v30, v31);
  uint64_t v40 = v29;
  uint64_t v41 = v31;
LABEL_21:
  v14(v40, v41);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v46 = *(uint64_t (**)(void))(v0 + 8);
  return v46();
}

uint64_t sub_1C02AAE28(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

void sub_1C02AB008(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  *(void *)&double v8 = MEMORY[0x1F4188790](v7 - 8).n128_u64[0];
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = objc_msgSend(v1, sel_progressLevel, v8);
  id v11 = objc_msgSend(v1, sel_score);
  uint64_t v12 = v11;
  if (v11)
  {
    id v33 = objc_msgSend(v11, sel_integerValue);
  }
  else
  {
    id v33 = 0;
  }
  id v13 = objc_msgSend(v1, sel_rankID);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_1C151E62C();
    uint64_t v31 = v16;
    uint64_t v32 = v15;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
  }
  id v17 = objc_msgSend(v1, sel_usedReveal, v31, v32);
  if (v17)
  {
    unsigned int v18 = v17;
    unsigned __int8 v19 = objc_msgSend(v17, sel_BOOLValue);
  }
  else
  {
    unsigned __int8 v19 = 0;
  }
  id v20 = objc_msgSend(v1, sel_playDuration);
  id v21 = objc_msgSend(v1, sel_completedDate);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, 1, 1, v3);
    goto LABEL_14;
  }
  unint64_t v22 = v21;
  sub_1C15162BC();

  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v10, v6, v3);
  uint64_t v23 = 1;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1) {
LABEL_14:
  }
    uint64_t v23 = 0;
  sub_1C02B0EA8((uint64_t)v10, (uint64_t (*)(void))sub_1BFF97C40);
  id v24 = objc_msgSend(v1, sel_progressData);
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = sub_1C151606C();
    unint64_t v28 = v27;
  }
  else
  {
    uint64_t v26 = 0;
    unint64_t v28 = 0xF000000000000000;
  }
  *(void *)a1 = v34;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v23;
  *(void *)(a1 + 24) = v26;
  id v29 = v33;
  *(void *)(a1 + 32) = v28;
  *(void *)(a1 + 40) = v29;
  *(void *)(a1 + 48) = v12 == 0;
  uint64_t v30 = v31;
  *(void *)(a1 + 56) = v32;
  *(void *)(a1 + 64) = v30;
  *(unsigned char *)(a1 + 72) = v19;
}

uint64_t sub_1C02AB32C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 32);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService), *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 24));
  id v8 = PuzzleResourceSource.identifier.getter();
  uint64_t v9 = (void *)(*(uint64_t (**)(id))(*(void *)(v7 + 8) + 48))(v8);
  swift_bridgeObjectRelease();
  if (v9)
  {
    id v10 = objc_msgSend(v9, sel_firstCompletedDate);
    if (v10)
    {
      id v11 = v10;
      sub_1C15162BC();

      uint64_t v12 = sub_1C151631C();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 0, 1, v12);
    }
    else
    {
      uint64_t v16 = sub_1C151631C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
    }
    id v17 = objc_msgSend(v9, sel_firstPlayDuration);
    unsigned int v18 = v17;
    if (v17)
    {
      id v19 = objc_msgSend(v17, sel_integerValue);
    }
    else
    {
      id v19 = 0;
    }
    id v20 = objc_msgSend(v9, sel_bestScore);
    id v21 = v20;
    if (v20)
    {
      id v22 = objc_msgSend(v20, sel_integerValue);
    }
    else
    {
      id v22 = 0;
    }

    sub_1BFEE9A74((uint64_t)v6, a2, (uint64_t (*)(void))sub_1BFF97C40);
    uint64_t v23 = type metadata accessor for PuzzleHistoryInfo();
    uint64_t v24 = a2 + *(int *)(v23 + 20);
    *(void *)uint64_t v24 = v19;
    *(unsigned char *)(v24 + 8) = v18 == 0;
    uint64_t v25 = a2 + *(int *)(v23 + 24);
    *(void *)uint64_t v25 = v22;
    *(unsigned char *)(v25 + 8) = v21 == 0;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a2, 0, 1, v23);
  }
  else
  {
    uint64_t v13 = type metadata accessor for PuzzleHistoryInfo();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a2, 1, 1, v13);
  }
}

uint64_t sub_1C02AB61C()
{
  v1[3] = v0;
  uint64_t v2 = sub_1C152032C();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  sub_1C02B0CC0(0);
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_1C152030C();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C02AB774, 0, 0);
}

uint64_t sub_1C02AB774()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[3];
  sub_1C15202EC();
  MEMORY[0x1C18C7E30](3000000000000000000, 0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[12] = v7;
  v0[13] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v2, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
  sub_1C1520D2C();
  uint64_t v8 = swift_task_alloc();
  v0[14] = v8;
  *(void *)(v8 + 16) = v6;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  sub_1C02B1078();
  uint64_t v11 = v10;
  uint64_t v12 = sub_1C02B0DA8(&qword_1EA199070, 255, MEMORY[0x1E4FBD1A8]);
  *uint64_t v9 = v0;
  v9[1] = sub_1C02AB94C;
  uint64_t v14 = v0[6];
  uint64_t v13 = v0[7];
  uint64_t v15 = v0[4];
  return MEMORY[0x1F415E360](v0 + 2, v13, v14, &unk_1EA199090, v8, v15, v11, v12);
}

uint64_t sub_1C02AB94C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  uint64_t v5 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1C02B0EA8(v2, (uint64_t (*)(void))sub_1C02B0CC0);
  if (v0) {
    uint64_t v6 = sub_1C02ABBBC;
  }
  else {
    uint64_t v6 = sub_1C02ABB10;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1C02ABB10()
{
  (*(void (**)(void, void))(v0 + 96))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C02ABBBC()
{
  (*(void (**)(void, void))(v0 + 96))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C02ABC58(void *a1)
{
  uint64_t v2 = v1;
  if (!objc_msgSend(a1, sel_isPaid)) {
    return 1;
  }
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 24);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService), v4);
  id v6 = objc_msgSend(a1, sel_identifier);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 8) + 8))(v7, v9, v4);
  swift_bridgeObjectRelease();
  if (v6) {
    return 1;
  }
  uint64_t v11 = (char *)objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_bundleSubscriptionManager), sel_cachedSubscription);
  if (objc_getAssociatedObject(v11, v11 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v17, (uint64_t)v19);
  if (v20)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
    if (swift_dynamicCast())
    {
      uint64_t v12 = v16;
      unint64_t v13 = (unint64_t)objc_msgSend(v16, sel_integerValue);
      if (v13 == -1) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)v19);
  }
  uint64_t v12 = 0;
  unint64_t v13 = 0;
LABEL_13:
  if (objc_getAssociatedObject(v11, (const void *)~v13))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v17, (uint64_t)v19);
  if (v20)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
    if (swift_dynamicCast())
    {
      id v14 = v16;
      unsigned int v15 = objc_msgSend(v14, sel_integerValue);

      return ((v15 + 1) ^ (v13 + 1)) & 1;
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)v19);
  }
LABEL_20:

  return v13 & 1;
}

void sub_1C02ABEE4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle);
  if (!v1) {
    return;
  }
  id v2 = objc_msgSend(objc_msgSend(v1, sel_puzzleType), sel_navigationBarThemeByRankID);
  swift_unknownObjectRelease();
  if (!v2) {
    return;
  }
  sub_1C02B0F70();
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  uint64_t v4 = sub_1C151E33C();

  int64_t v5 = 0;
  uint64_t v6 = v4 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v4 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v41 = (void *)MEMORY[0x1E4FBC860];
  int64_t v39 = v10;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_6:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v11 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v5 << 6))
  {
    unint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * i);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    id v16 = *(void **)(*(void *)(v4 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_navigationBarBackgroundColor);
    if (v17)
    {
      id v21 = v17;
      uint64_t v22 = v3;
      id v23 = objc_msgSend(v17, sel_hex);

      uint64_t v24 = sub_1C151E62C();
      uint64_t v40 = v25;

      uint64_t v44 = v22;
      *(void *)&long long v43 = v15;
      *((void *)&v43 + 1) = v14;
      sub_1BFF993A8(&v43, v42);
      uint64_t v26 = MEMORY[0x1E4FBC868];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1BFFB4A24(v42, 0x6E6564496B6E6172, 0xEE00726569666974, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      uint64_t v44 = v22;
      *(void *)&long long v43 = v24;
      *((void *)&v43 + 1) = v40;
      sub_1BFF993A8(&v43, v42);
      char v28 = swift_isUniquelyReferenced_nonNull_native();
      sub_1BFFB4A24(v42, 0xD00000000000001CLL, 0x80000001C1609E50, v28);
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v16, sel_navigationBarBackgroundDarkModeColor);
      if (v29)
      {
        uint64_t v30 = v29;
        id v31 = objc_msgSend(v29, sel_hex);

        uint64_t v32 = sub_1C151E62C();
        uint64_t v34 = v33;

        uint64_t v35 = MEMORY[0x1E4FBB1A0];
        uint64_t v44 = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v43 = v32;
        *((void *)&v43 + 1) = v34;
        sub_1BFF993A8(&v43, v42);
        char v36 = swift_isUniquelyReferenced_nonNull_native();
        sub_1BFFB4A24(v42, 0xD000000000000024, 0x80000001C1609E70, v36);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = MEMORY[0x1E4FBB1A0];
      }
      int64_t v10 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v41 = sub_1C0EE4064(0, v41[2] + 1, 1, v41);
      }
      uint64_t v3 = v35;
      unint64_t v38 = v41[2];
      unint64_t v37 = v41[3];
      if (v38 >= v37 >> 1) {
        uint64_t v41 = sub_1C0EE4064((void *)(v37 > 1), v38 + 1, 1, v41);
      }
      v41[2] = v38 + 1;
      v41[v38 + 4] = v26;
      swift_unknownObjectRelease();
      if (v9) {
        goto LABEL_6;
      }
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_6;
      }
    }
LABEL_9:
    int64_t v18 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v18 >= v10) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v5;
    if (!v19)
    {
      int64_t v5 = v18 + 1;
      if (v18 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v5);
      if (!v19)
      {
        int64_t v5 = v18 + 2;
        if (v18 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v5);
        if (!v19) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v19 - 1) & v19;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v10)
  {
LABEL_32:
    swift_release();
    sub_1BFFB4FA4();
    sub_1C151EC1C();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v5 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v5);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_1C02AC380()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle);
  if (!v1) {
    return 0;
  }
  id v2 = objc_msgSend(v1, sel_puzzleType);
  id v3 = objc_msgSend(objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_appConfigurationManager), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  id v4 = objc_msgSend(v3, sel_puzzleRanksByPuzzleTypeID);

  if (!v4)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  sub_1C02B0F08(0, (unint64_t *)&qword_1EB863370, (unint64_t *)&unk_1EB863390, 0x1E4F7E718, MEMORY[0x1E4FBB320]);
  uint64_t v5 = sub_1C151E33C();

  id v6 = objc_msgSend(v2, sel_identifier);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  if (!*(void *)(v5 + 16) || (unint64_t v10 = sub_1BFEF2D8C(v7, v9), (v11 & 1) == 0))
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v12 = *(void *)(*(void *)(v5 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v12 >> 62))
  {
    uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_7;
    }
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    sub_1BFFB4FA4();
    uint64_t v34 = sub_1C151EC1C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v34;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C15204BC();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_23;
  }
LABEL_7:
  if (v14 >= 1)
  {
    uint64_t v15 = 0;
    unint64_t v35 = v12 & 0xC000000000000001;
    id v16 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v17 = v12;
    do
    {
      if (v35) {
        id v18 = (id)MEMORY[0x1C18C7CB0](v15, v12);
      }
      else {
        id v18 = *(id *)(v12 + 8 * v15 + 32);
      }
      unint64_t v19 = v18;
      id v20 = objc_msgSend(v18, sel_identifier);
      uint64_t v21 = sub_1C151E62C();
      uint64_t v23 = v22;

      uint64_t v24 = MEMORY[0x1E4FBB1A0];
      uint64_t v38 = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v37 = v21;
      *((void *)&v37 + 1) = v23;
      sub_1BFF993A8(&v37, v36);
      uint64_t v25 = MEMORY[0x1E4FBC868];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1BFFB4A24(v36, 0x696669746E656469, 0xEA00000000007265, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      id v27 = objc_msgSend(v19, sel_name);
      uint64_t v28 = sub_1C151E62C();
      uint64_t v30 = v29;

      uint64_t v38 = v24;
      *(void *)&long long v37 = v28;
      *((void *)&v37 + 1) = v30;
      sub_1BFF993A8(&v37, v36);
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      sub_1BFFB4A24(v36, 1701667182, 0xE400000000000000, v31);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v16 = sub_1C0EE4064(0, v16[2] + 1, 1, v16);
      }
      unint64_t v33 = v16[2];
      unint64_t v32 = v16[3];
      if (v33 >= v32 >> 1) {
        id v16 = sub_1C0EE4064((void *)(v32 > 1), v33 + 1, 1, v16);
      }
      ++v15;
      v16[2] = v33 + 1;
      v16[v33 + 4] = v25;

      unint64_t v12 = v17;
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C02AC7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C02AC7D0, 0, 0);
}

uint64_t sub_1C02AC7D0()
{
  id v2 = (void *)v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = v2;
  swift_unknownObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  sub_1C02B14CC(0, (unint64_t *)&unk_1EA1990C8, (uint64_t (*)(uint64_t))sub_1C02B1290, MEMORY[0x1E4FBB718]);
  uint64_t v7 = v6;
  void *v5 = v0;
  v5[1] = sub_1C0128064;
  uint64_t v8 = v0[2];
  return MEMORY[0x1F415E720](v8, &unk_1EA1990E0, v3, v7);
}

uint64_t sub_1C02AC8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C02AC91C, 0, 0);
}

uint64_t sub_1C02AC91C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleStatsService;
  v0[5] = OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleStatsService;
  uint64_t v4 = *(void *)(v1 + v2 + 24);
  uint64_t v3 = *(void *)(v1 + v2 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + v2), v4);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  void *v5 = v0;
  v5[1] = sub_1C02AC9E4;
  return PuzzleStatsServiceType.updateStats()(v4, v3);
}

uint64_t sub_1C02AC9E4()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C02ACAE0, 0, 0);
}

uint64_t sub_1C02ACAE0()
{
  uint64_t v1 = (void *)(v0[3] + v0[5]);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  void *v4 = v0;
  v4[1] = sub_1C02ACBF0;
  uint64_t v5 = v0[4];
  return v7(v5, v2, v3);
}

uint64_t sub_1C02ACBF0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C01161F4, 0, 0);
}

uint64_t sub_1C02ACCF0(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_1C152032C();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_1C02B0CC0(0);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_1C152030C();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C02ACE48, 0, 0);
}

uint64_t sub_1C02ACE48()
{
  uint64_t v1 = v0[6].i64[0];
  uint64_t v2 = v0[6].i64[1];
  uint64_t v3 = v0[5].i64[0];
  uint64_t v4 = v0[5].i64[1];
  uint64_t v5 = v0[4].i64[1];
  int8x16_t v16 = v0[2];
  sub_1C15202EC();
  MEMORY[0x1C18C7E30](3000000000000000000, 0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[7].i64[0] = (uint64_t)v6;
  v0[7].i64[1] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v2, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
  sub_1C1520D2C();
  uint64_t v7 = (int8x16_t *)swift_task_alloc();
  v0[8].i64[0] = (uint64_t)v7;
  v7[1] = vextq_s8(v16, v16, 8uLL);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[8].i64[1] = (uint64_t)v8;
  sub_1BFEFDDA8(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  uint64_t v10 = v9;
  uint64_t v11 = sub_1C02B0DA8(&qword_1EA199070, 255, MEMORY[0x1E4FBD1A8]);
  *uint64_t v8 = v0;
  v8[1] = sub_1C02AD050;
  uint64_t v13 = v0[4].i64[0];
  uint64_t v12 = v0[4].i64[1];
  uint64_t v14 = v0[3].i64[0];
  return MEMORY[0x1F415E360](&v0[1], v12, v13, &unk_1EA199060, v7, v14, v10, v11);
}

uint64_t sub_1C02AD050()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  uint64_t v5 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1C02B0EA8(v2, (uint64_t (*)(void))sub_1C02B0CC0);
  if (v0) {
    uint64_t v6 = sub_1C02AD2C4;
  }
  else {
    uint64_t v6 = sub_1C02AD214;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1C02AD214()
{
  (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_1C02AD2C4()
{
  (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C02AD360@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v3 = sub_1C1515E1C();
  uint64_t v80 = *(void *)(v3 - 8);
  uint64_t v81 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v79 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v89 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v94 = v7;
  uint64_t v95 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v82 = (char *)&v74 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v85 = (char *)&v74 - v14;
  uint64_t v15 = (void *)sub_1C15165FC();
  uint64_t v87 = (void (**)(char *, void, id))*(v15 - 1);
  id v88 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v86 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02B14CC(0, (unint64_t *)&qword_1EB871190, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v19 = (char *)&v74 - v18;
  uint64_t v20 = sub_1C15164BC();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C151661C();
  uint64_t v83 = *(void *)(v24 - 8);
  uint64_t v84 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v92 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1C151631C();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  unint64_t v32 = (char *)&v74 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v91 = (char *)&v74 - v34;
  uint64_t ObjectType = swift_getObjectType();
  id v90 = a1;
  id v35 = objc_msgSend(a1, sel_publishDate);
  if (!v35)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
    goto LABEL_7;
  }
  char v36 = v35;
  CFTimeInterval v76 = v10;
  sub_1C15162BC();

  long long v37 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v37(v28, v32, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v29);
  uint64_t v77 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
LABEL_7:
    sub_1C02B0EA8((uint64_t)v28, (uint64_t (*)(void))sub_1BFF97C40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v93, 1, 1, v94);
  }
  uint64_t v38 = v91;
  uint64_t v75 = v29;
  v37(v91, v28, v29);
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E4F27B20], v20);
  int64_t v39 = v92;
  sub_1C15164CC();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_1C151667C();
  uint64_t v40 = sub_1C15166BC();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v19, 1, v40);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C15165EC();
    long long v43 = v86;
    uint64_t v42 = v87;
    id v44 = v88;
    v87[13](v86, *MEMORY[0x1E4F27C68], v88);
    uint64_t v74 = sub_1C151660C();
    ((void (*)(char *, id))v42[1])(v43, v44);
    id v45 = (char *)objc_msgSend(v90, sel_difficulty);
    id v46 = objc_msgSend(self, sel_defaultManager);
    id v47 = objc_msgSend(v46, sel_URLsForDirectory_inDomains_, 9, 1);
    uint64_t v48 = v94;
    uint64_t v49 = sub_1C151EBCC();

    uint64_t v50 = (uint64_t)v89;
    uint64_t v51 = v95;
    if (*(void *)(v49 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v95 + 16))(v89, v49 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80)), v48);
      uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
      v52(v50, 0, 1, v48);
    }
    else
    {
      uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56);
      v52((uint64_t)v89, 1, 1, v48);
    }
    uint64_t v53 = v77;
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v50, 1, v48) == 1)
    {

      (*(void (**)(char *, uint64_t))(v83 + 8))(v39, v84);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v75);
      sub_1C02B0EA8(v50, (uint64_t (*)(void))sub_1BFF00BEC);
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v52)(v93, 1, 1, v48);
    }
    else
    {
      uint64_t v86 = v45;
      uint64_t v54 = *(void (***)(char *, void, id))(v51 + 32);
      id v88 = v46;
      uint64_t v89 = (char *)(v51 + 32);
      uint64_t v87 = v54;
      ((void (*)(char *, uint64_t, uint64_t))v54)(v85, v50, v48);
      sub_1BFEFDDA8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_1C152C7F0;
      *(void *)(v55 + 32) = 0x7954656C7A7A7570;
      *(void *)(v55 + 40) = 0xEA00000000006570;
      id v56 = objc_msgSend(objc_msgSend(v90, sel_puzzleType), sel_identifier);
      swift_unknownObjectRelease();
      uint64_t v57 = sub_1C151E62C();
      uint64_t v59 = v58;

      *(void *)(v55 + 48) = v57;
      *(void *)(v55 + 56) = v59;
      *(void *)(v55 + 64) = 0x69616E626D756874;
      *(void *)(v55 + 72) = 0xEA0000000000736CLL;
      uint64_t v60 = v79;
      uint64_t v61 = v80;
      uint64_t v62 = v81;
      (*(void (**)(char *, void, uint64_t))(v80 + 104))(v79, *MEMORY[0x1E4F276C0], v81);
      sub_1BFF27ECC();
      uint64_t v63 = v82;
      sub_1C1515F9C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v62);
      if ((FCPuzzleProviding.puzzleTypeTraits.getter() & 0x8000) != 0)
      {
        uint64_t v97 = 115;
        unint64_t v98 = 0xE100000000000000;
        uint64_t v96 = (char *)v74;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v96 = v86;
      }
      else
      {
        uint64_t v97 = 115;
        unint64_t v98 = 0xE100000000000000;
        uint64_t v96 = (char *)v74;
      }
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v64 = v76;
      char v65 = v92;
      uint64_t v66 = v77;
      sub_1C1515ECC();
      swift_bridgeObjectRelease();
      sub_1C1515F4C();
      uint64_t v67 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      id v68 = v88;
      unsigned int v69 = objc_msgSend(v88, sel_fileExistsAtPath_, v67);

      uint64_t v70 = *(void (**)(char *, uint64_t))(v95 + 8);
      v70(v63, v48);
      v70(v85, v48);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v65, v84);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v91, v75);
      if (v69)
      {
        uint64_t v71 = v93;
        ((void (*)(uint64_t, char *, uint64_t))v87)(v93, v64, v48);
        uint64_t v72 = v71;
        uint64_t v73 = 0;
      }
      else
      {
        v70(v64, v48);
        uint64_t v72 = v93;
        uint64_t v73 = 1;
      }
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v52)(v72, v73, 1, v48);
    }
  }
  return result;
}

uint64_t sub_1C02ADF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C02ADF60, 0, 0);
}

uint64_t sub_1C02ADF60()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = v2;
  swift_unknownObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  sub_1BFEFDDA8(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  uint64_t v7 = v6;
  void *v5 = v0;
  v5[1] = sub_1C012869C;
  uint64_t v8 = v0[2];
  return MEMORY[0x1F415E720](v8, &unk_1EA199080, v3, v7);
}

uint64_t sub_1C02AE07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C02AE0A0, 0, 0);
}

uint64_t sub_1C02AE0A0()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleStatsService);
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v4;
  void *v4 = v0;
  v4[1] = sub_1C02AE164;
  return PuzzleStatsServiceType.updateStats()(v3, v2);
}

uint64_t sub_1C02AE164()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C02AE260, 0, 0);
}

uint64_t sub_1C02AE260()
{
  uint64_t v1 = (void *)(v0[3] + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleService);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 144) + **(int **)(v3 + 144));
  id v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  void *v4 = v0;
  v4[1] = sub_1C02AE374;
  uint64_t v5 = v0[4];
  return v7(v5, v2, v3);
}

uint64_t sub_1C02AE374(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 56) = a2;
    *(void *)(v6 + 64) = a1;
    return MEMORY[0x1F4188298](sub_1C02AE4D0, 0, 0);
  }
}

uint64_t sub_1C02AE4D0()
{
  *(int8x16_t *)*(void *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 56), *(int8x16_t *)(v0 + 56), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C02AE4F8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C02AE518, 0, 0);
}

uint64_t sub_1C02AE518()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  id v3 = v1;
  id v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  sub_1C02B1078();
  uint64_t v6 = v5;
  void *v4 = v0;
  v4[1] = sub_1C02AE608;
  uint64_t v7 = v0[2];
  return MEMORY[0x1F415E720](v7, &unk_1EA1990B0, v2, v6);
}

uint64_t sub_1C02AE608()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C02AE744, 0, 0);
  }
  else
  {
    swift_release();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C02AE744()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C02AE7A8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x1F4188298](sub_1C02AE7C8, 0, 0);
}

uint64_t sub_1C02AE7C8()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 32) + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle);
  if (v1 && (id v2 = objc_msgSend(v1, sel_relatedPuzzleIDs)) != 0)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v5 = sub_1C151EBCC();
    *(void *)(v0 + 40) = v5;

    uint64_t v6 = (void *)(v4 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleService);
    uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleService + 24);
    uint64_t v8 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v7);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 48) + **(int **)(v8 + 48));
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1C02AE96C;
    return v12(v5, v7, v8);
  }
  else
  {
    **(void **)(v0 + 24) = 0;
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_1C02AE96C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {

    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1C02AEB6C;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_1C02AEAC4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C02AEAC4()
{
  unint64_t v1 = *(void *)(v0 + 64);
  id v2 = *(id *)(v0 + 32);
  uint64_t v3 = sub_1C02B0198(v1, (uint64_t)v2);

  swift_bridgeObjectRelease();
  **(void **)(v0 + 24) = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C02AEB6C()
{
  **(void **)(v0 + 24) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for PuzzleDataManager()
{
  return self;
}

uint64_t sub_1C02AECAC()
{
  swift_getObjectType();
  return sub_1C1516FBC();
}

uint64_t sub_1C02AED04()
{
  swift_getObjectType();
  return sub_1C1516FCC();
}

uint64_t sub_1C02AED74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F415F238](a1, a2, a3, a4, ObjectType, a8);
}

uint64_t sub_1C02AEDF4(void *a1)
{
  return sub_1C02ABC58(a1) & 1;
}

uint64_t sub_1C02AEE1C()
{
  uint64_t v1 = v0;
  id v2 = (char *)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_bundleSubscriptionManager), sel_cachedSubscription);
  if (objc_getAssociatedObject(v2, v2 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v18, (uint64_t)v20);
  if (!v21)
  {
    sub_1BFEFE4A0((uint64_t)v20);
    goto LABEL_9;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    uint64_t v3 = 0;
    unint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = v17;
  id v4 = objc_msgSend(v17, sel_integerValue);
  if (v4 == (id)-1)
  {

    return 1;
  }
  unint64_t v5 = (unint64_t)v4;
LABEL_10:
  if (objc_getAssociatedObject(v2, (const void *)~v5))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v18, (uint64_t)v20);
  if (!v21)
  {
    sub_1BFEFE4A0((uint64_t)v20);
LABEL_18:

    if (v5) {
      return 1;
    }
    goto LABEL_19;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  id v6 = v17;
  unsigned int v7 = objc_msgSend(v6, sel_integerValue);

  if (((v7 + 1) ^ (v5 + 1))) {
    return 1;
  }
LABEL_19:
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle);
  if (!v8) {
    return 0;
  }
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_isPaid))
  {
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 24);
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService), v9);
    id v11 = objc_msgSend(v8, sel_identifier);
    uint64_t v12 = sub_1C151E62C();
    uint64_t v14 = v13;

    char v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 8) + 8))(v12, v14, v9);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      return 1;
    }
    return *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_configuration);
  }
  else
  {
    swift_unknownObjectRelease();
    return 1;
  }
}

uint64_t sub_1C02AF0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[9] = type metadata accessor for PuzzleResourceSource();
  v5[10] = swift_task_alloc();
  type metadata accessor for PuzzleData();
  v5[11] = swift_task_alloc();
  sub_1C151EE6C();
  v5[12] = sub_1C151EE5C();
  uint64_t v7 = sub_1C151EDBC();
  v5[13] = v7;
  v5[14] = v6;
  return MEMORY[0x1F4188298](sub_1C02AF1E8, v7, v6);
}

uint64_t sub_1C02AF1E8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 80);
  id v2 = objc_msgSend(*(id *)(v0 + 64), sel_identifier);
  uint64_t v3 = sub_1C151E62C();
  uint64_t v5 = v4;

  *uint64_t v1 = v3;
  v1[1] = v5;
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)(v0 + 16) = xmmword_1C152C800;
  *(_WORD *)(v0 + 32) = 0;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C02AF2EC;
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);
  return sub_1C02A4B3C(v7, v8, v0 + 16);
}

uint64_t sub_1C02AF2EC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  sub_1C02B0EA8(v3, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
  uint64_t v4 = *(void *)(v2 + 104);
  uint64_t v5 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v6 = sub_1C02AF4F4;
  }
  else {
    uint64_t v6 = sub_1C02AF438;
  }
  return MEMORY[0x1F4188298](v6, v4, v5);
}

uint64_t sub_1C02AF438()
{
  uint64_t v1 = v0[7];
  swift_release();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_delegate);
  if (v2)
  {
    sub_1C02B08A8(v0[11], v2);
    swift_unknownObjectRelease();
  }
  sub_1C02B0EA8(v0[11], (uint64_t (*)(void))type metadata accessor for PuzzleData);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C02AF4F4()
{
  uint64_t v22 = v0;
  swift_release();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C7A8);
  id v3 = v1;
  swift_unknownObjectRetain();
  id v4 = v1;
  swift_unknownObjectRetain();
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F36C();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[16];
  uint64_t v9 = (void *)v0[8];
  if (v7)
  {
    uint64_t v10 = swift_slowAlloc();
    long long v19 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = v20;
    *(_DWORD *)uint64_t v10 = 136315394;
    id v11 = objc_msgSend(v9, sel_identifier);
    uint64_t v12 = sub_1C151E62C();
    unint64_t v14 = v13;

    v0[5] = sub_1BFDA76EC(v12, v14, &v21);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2112;
    id v15 = v8;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[6] = v16;
    sub_1C151FE1C();
    *long long v19 = v16;

    _os_log_impl(&dword_1BFC31000, v5, v6, "PuzzleDataManager: Error fetching puzzle data for puzzleID=%s error=%@", (uint8_t *)v10, 0x16u);
    sub_1C02B0F08(0, (unint64_t *)&qword_1EB861470, (unint64_t *)&qword_1EB87A330, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v20, -1, -1);
    MEMORY[0x1C18C9B00](v10, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

ValueMetadata *type metadata accessor for PuzzleDataManager.Configuration()
{
  return &type metadata for PuzzleDataManager.Configuration;
}

uint64_t *sub_1C02AF884(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    BOOL v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    BOOL v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_unknownObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return v7;
}

uint64_t sub_1C02AF984(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

void *sub_1C02AFA10(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  BOOL v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_unknownObjectRetain();
  v10(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

void *sub_1C02AFAC8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  BOOL v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1C02AFB80(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  BOOL v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1C02AFC18(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  BOOL v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1C02AFCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02AFCD4);
}

uint64_t sub_1C02AFCD4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C02AFD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02AFD98);
}

void *sub_1C02AFD98(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void *sub_1C02AFE40()
{
  uint64_t result = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle);
  if (result)
  {
    id v2 = objc_msgSend(result, sel_identifier);
    uint64_t v3 = sub_1C151E62C();
    uint64_t v5 = v4;

    swift_bridgeObjectRetain();
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C02B03F8(v6, v3, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v7 + 16) && MEMORY[0x1C18C9C60](v0 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_delegate))
    {
      sub_1C0C89E90(v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

id sub_1C02AFF80(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void (*v24)(void *__return_ptr);
  id v25;
  objc_class *ObjectType;
  void v31[5];
  objc_super v32;

  uint64_t v11 = v10;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v19 = OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_configuration;
  v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_configuration] = 1;
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle] = 0;
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_appConfigurationManager] = a1;
  sub_1BFC66384(a2, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleService]);
  sub_1BFC66384((uint64_t)a3, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService]);
  sub_1BFC66384(a4, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleNotificationAutoEnableManager]);
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleTypeSettings] = a5;
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_bundleSubscriptionManager] = a6;
  v11[v19] = a7 & 1;
  sub_1BFC66384(a8, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleStatsService]);
  uint64_t v20 = &v11[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleGameCenterService];
  *uint64_t v20 = a9;
  v20[1] = a10;
  v32.receiver = v11;
  v32.super_class = ObjectType;
  swift_unknownObjectRetain();
  id v21 = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v22 = objc_msgSendSuper2(&v32, sel_init);
  objc_msgSend(a6, sel_addObserver_, v22);
  uint64_t v23 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  uint64_t v24 = *(void (**)(void *__return_ptr))(v23 + 80);
  uint64_t v25 = v22;
  v24(v31);

  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v25;
}

uint64_t sub_1C02B0198(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    if (!v4) {
      return v5;
    }
    uint64_t v35 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F6F28(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    uint64_t v7 = 0;
    uint64_t v5 = v35;
    unint64_t v29 = v3 & 0xC000000000000001;
    uint64_t v30 = v4;
    uint64_t v28 = (void *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService);
    unint64_t v31 = v3;
    while (v4 != v7)
    {
      if (v29)
      {
        uint64_t v8 = MEMORY[0x1C18C7CB0](v7, v3);
      }
      else
      {
        uint64_t v8 = *(void *)(v3 + 8 * v7 + 32);
        swift_unknownObjectRetain();
      }
      uint64_t v9 = v28[3];
      a2 = v28[4];
      __swift_project_boxed_opaque_existential_1(v28, v9);
      id v10 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v11 = sub_1C151E62C();
      uint64_t v13 = v12;

      unint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 + 8) + 48))(v11, v13, v9);
      swift_bridgeObjectRelease();
      if (v14)
      {
        sub_1C02AB008((uint64_t)v32);
        swift_unknownObjectRelease();

        long long v15 = v32[0];
        long long v16 = v32[1];
        long long v17 = v32[2];
        long long v18 = v32[3];
        uint64_t v19 = v33;
        char v20 = v34;
      }
      else
      {
        swift_unknownObjectRelease();
        char v20 = 0;
        long long v15 = 0uLL;
        uint64_t v19 = 1;
        long long v16 = 0uLL;
        long long v17 = 0uLL;
        long long v18 = 0uLL;
      }
      uint64_t v35 = v5;
      unint64_t v22 = *(void *)(v5 + 16);
      unint64_t v21 = *(void *)(v5 + 24);
      if (v22 >= v21 >> 1)
      {
        long long v26 = v16;
        long long v27 = v15;
        long long v24 = v18;
        long long v25 = v17;
        sub_1C05F6F28(v21 > 1, v22 + 1, 1);
        long long v18 = v24;
        long long v17 = v25;
        long long v16 = v26;
        long long v15 = v27;
        uint64_t v5 = v35;
      }
      *(void *)(v5 + 16) = v22 + 1;
      uint64_t v23 = v5 + 88 * v22;
      *(void *)(v23 + 32) = v8;
      ++v7;
      *(_OWORD *)(v23 + 40) = v15;
      *(_OWORD *)(v23 + 56) = v16;
      *(_OWORD *)(v23 + 72) = v17;
      *(_OWORD *)(v23 + 88) = v18;
      *(void *)(v23 + 104) = v19;
      *(unsigned char *)(v23 + 112) = v20;
      uint64_t v4 = v30;
      unint64_t v3 = v31;
      if (v30 == v7) {
        return v5;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C02B03F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 48;
  uint64_t v43 = -(uint64_t)v3;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v40 = result + 48;
  unint64_t v41 = *(void *)(result + 16);
  do
  {
    uint64_t v42 = v7;
    if (v5 <= v3) {
      unint64_t v8 = v3;
    }
    else {
      unint64_t v8 = v5;
    }
    uint64_t v45 = -(uint64_t)v8;
    for (unint64_t i = (unsigned char *)(v6 + 24 * v5++); ; i += 24)
    {
      if (v45 + v5 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v11 = (void *)*((void *)i - 2);
      id v10 = (void *)*((void *)i - 1);
      int v12 = *i;
      if (!*i) {
        break;
      }
      if (v12 == 1)
      {
        id v13 = v11;
        swift_unknownObjectRetain_n();
        id v14 = v13;
        id v15 = objc_msgSend(v10, sel_identifier);
        uint64_t v16 = sub_1C151E62C();
        uint64_t v18 = v17;

        if (v16 == a2 && v18 == a3) {
          goto LABEL_29;
        }
        char v20 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        sub_1C02B137C(v11, (uint64_t)v10, 1u);
        if (v20) {
          goto LABEL_30;
        }
      }
      else
      {
        id v29 = v11;
        swift_unknownObjectRetain_n();
        id v30 = v29;
        id v31 = objc_msgSend(v10, sel_identifier);
        uint64_t v32 = sub_1C151E62C();
        uint64_t v34 = v33;

        if (v32 == a2 && v34 == a3) {
          goto LABEL_29;
        }
        char v36 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        sub_1C02B137C(v11, (uint64_t)v10, 2u);
        if (v36) {
          goto LABEL_30;
        }
      }
LABEL_27:
      uint64_t result = (uint64_t)sub_1C02B137C(v11, (uint64_t)v10, v12);
      ++v5;
      if (v43 + v5 == 1) {
        return v42;
      }
    }
    id v21 = v11;
    swift_unknownObjectRetain_n();
    id v22 = v21;
    id v23 = objc_msgSend(v10, sel_identifier);
    uint64_t v24 = sub_1C151E62C();
    uint64_t v26 = v25;

    if (v24 != a2 || v26 != a3)
    {
      char v28 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      sub_1C02B137C(v11, (uint64_t)v10, 0);
      if (v28) {
        goto LABEL_30;
      }
      goto LABEL_27;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    sub_1C02B137C(v11, (uint64_t)v10, v12);
LABEL_30:
    uint64_t v7 = v42;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C05F6F48(0, *(void *)(v42 + 16) + 1, 1);
      uint64_t v7 = v42;
    }
    uint64_t v6 = v40;
    unint64_t v3 = v41;
    unint64_t v38 = *(void *)(v7 + 16);
    unint64_t v37 = *(void *)(v7 + 24);
    if (v38 >= v37 >> 1)
    {
      uint64_t result = sub_1C05F6F48(v37 > 1, v38 + 1, 1);
      uint64_t v6 = v40;
      unint64_t v3 = v41;
      uint64_t v7 = v42;
    }
    *(void *)(v7 + 16) = v38 + 1;
    uint64_t v39 = v7 + 24 * v38;
    *(void *)(v39 + 32) = v11;
    *(void *)(v39 + 40) = v10;
    *(unsigned char *)(v39 + 48) = v12;
  }
  while (v43 + v5);
  return v7;
}

void sub_1C02B073C()
{
  sub_1C02B14CC(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)&v10 - v2;
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle];
  if (v4)
  {
    uint64_t v5 = sub_1C151EE9C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
    sub_1C151EE6C();
    swift_unknownObjectRetain_n();
    uint64_t v6 = v0;
    uint64_t v7 = sub_1C151EE5C();
    unint64_t v8 = (void *)swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBCFD8];
    v8[2] = v7;
    v8[3] = v9;
    v8[4] = v6;
    v8[5] = v4;
    sub_1C0C833AC((uint64_t)v3, (uint64_t)&unk_1EA1990F8, (uint64_t)v8);
    swift_release();
    swift_unknownObjectRelease();
  }
}

void sub_1C02B08A8(uint64_t a1, uint64_t a2)
{
  sub_1C02B14CC(0, qword_1EB896E10, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - v5;
  sub_1BFDF8C0C(a1, (uint64_t)&v16 - v5, (uint64_t (*)(void))type metadata accessor for PuzzleData);
  uint64_t v7 = type metadata accessor for PuzzleData();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  uint64_t v8 = a2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData;
  swift_beginAccess();
  sub_1C02B1530((uint64_t)v6, v8);
  swift_endAccess();
  uint64_t v9 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController);
  objc_msgSend(v9, sel_loadLocalDatastore_forceUpdate_completion_, *(void *)(*(void *)(a1 + *(int *)(v7 + 24)) + 16), 0, 0);
  uint64_t v10 = (char *)objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_bundleSubscriptionManager), sel_cachedSubscription);
  if (objc_getAssociatedObject(v10, v10 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v18, (uint64_t)v20);
  if (!v21)
  {
    sub_1BFEFE4A0((uint64_t)v20);
    goto LABEL_9;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    id v11 = 0;
    unint64_t v13 = 0;
    goto LABEL_10;
  }
  id v11 = v17;
  id v12 = objc_msgSend(v17, sel_integerValue);
  if (v12 == (id)-1)
  {

    goto LABEL_21;
  }
  unint64_t v13 = (unint64_t)v12;
LABEL_10:
  if (objc_getAssociatedObject(v10, (const void *)~v13))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v18, (uint64_t)v20);
  if (v21)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
    if (swift_dynamicCast())
    {
      id v14 = v17;
      unsigned int v15 = objc_msgSend(v14, sel_integerValue);

      if (((v15 ^ v13) & 1) == 0) {
        return;
      }
LABEL_21:
      objc_msgSend(v9, sel_setFocusShouldStartInputSession_, 1);
      return;
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)v20);
  }

  if (v13) {
    goto LABEL_21;
  }
}

void sub_1C02B0BE4(uint64_t a1)
{
}

uint64_t sub_1C02B0C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a9 != 1)
  {
    sub_1C00C2AC0(a4, a5);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1C02B0C6C()
{
  unint64_t result = qword_1EA199038;
  if (!qword_1EA199038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199038);
  }
  return result;
}

void sub_1C02B0CC0(uint64_t a1)
{
}

uint64_t sub_1C02B0CF4(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1C005E7F4;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C02ADF60, 0, 0);
}

uint64_t sub_1C02B0DA8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C02B0DF4(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1C005E7F4;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C02AE0A0, 0, 0);
}

uint64_t sub_1C02B0EA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C02B0F08(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC39268(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C02B0F70()
{
  unint64_t result = qword_1EB861460;
  if (!qword_1EB861460)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB861460);
  }
  return result;
}

uint64_t sub_1C02B0FC8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1C005E7F4;
  return MEMORY[0x1F4188298](sub_1C02AE518, 0, 0);
}

void sub_1C02B1078()
{
  if (!qword_1EA199098)
  {
    sub_1BFEFDDA8(255, &qword_1EA1990A0, (uint64_t)&type metadata for PuzzleDatastoreRelatedPuzzleInfo, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA199098);
    }
  }
}

uint64_t sub_1C02B10F4()
{
  return swift_deallocObject();
}

uint64_t sub_1C02B112C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1C005E7F4;
  v5[3] = a1;
  v5[4] = v4;
  return MEMORY[0x1F4188298](sub_1C02AE7C8, 0, 0);
}

uint64_t sub_1C02B11DC(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1C005E7F4;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C02AC7D0, 0, 0);
}

void sub_1C02B1290(uint64_t a1)
{
}

uint64_t sub_1C02B12C8(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1BFC542F4;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C02AC91C, 0, 0);
}

void *sub_1C02B137C(void *result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u)
  {

    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C02B13C4()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C02B140C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1BFC542F4;
  return sub_1C02AF0F4(a1, v4, v5, v7, v6);
}

void sub_1C02B14CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C02B1530(uint64_t a1, uint64_t a2)
{
  sub_1C02B14CC(0, qword_1EB896E10, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for PuzzleDataManager.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C02B1660);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleDataManager.Errors()
{
  return &type metadata for PuzzleDataManager.Errors;
}

unsigned char *_s8NewsFeed17PuzzleDataManagerC22PuzzlePresentationModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02B1764);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleDataManager.PuzzlePresentationMode()
{
  return &type metadata for PuzzleDataManager.PuzzlePresentationMode;
}

unint64_t sub_1C02B17A0()
{
  unint64_t result = qword_1EA199108;
  if (!qword_1EA199108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199108);
  }
  return result;
}

unint64_t sub_1C02B17F8()
{
  unint64_t result = qword_1EA199110;
  if (!qword_1EA199110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199110);
  }
  return result;
}

CGSize_optional __swiftcall FormatLayoutSizeSnapshot.size(for:)(Swift::String a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (*(void *)(v2 + 16))
  {
    object = a1._object;
    uint64_t countAndFlagsBits = a1._countAndFlagsBits;
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1BFEF2D8C(countAndFlagsBits, (uint64_t)object);
    if (v6) {
      uint64_t v7 = *(void *)(*(void *)(v2 + 56) + 16 * v5);
    }
    else {
      LOBYTE(v7) = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v7) = 0;
  }
  Swift::Bool v10 = v7;
  result.value.CGFloat height = v9;
  result.value.CGFloat width = v8;
  result.is_nil = v10;
  return result;
}

uint64_t static FormatLayoutSizeSnapshot.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1BFE9E954(*(void *)(a1 + 16), *(void *)(a2 + 16));
}

uint64_t sub_1C02B18E8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    unsigned int v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    long long v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1BFEF2D8C(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      CGSize_optional result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_1C1520A9C();
      CGSize_optional result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C02B1AF0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_22:
    unsigned int v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v19 = sub_1BFEF2D8C(v16, v17);
    char v21 = v20;
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0
      || (uint64_t v22 = *(void *)(*(void *)(a2 + 56) + 8 * v19),
          *(unsigned __int8 *)(v22 + 16) != *(unsigned __int8 *)(v18 + 16)))
    {
      swift_release();
      return 0;
    }
    uint64_t v23 = *(void *)(v22 + 24);
    uint64_t v24 = *(void *)(v18 + 24);
    swift_retain();
    LOBYTE(v23) = sub_1C00F369C(v23, v24);
    swift_release();
    CGSize_optional result = swift_release();
    if ((v23 & 1) == 0) {
      return 0;
    }
  }
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v12 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_22;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C02B1CD8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    unsigned int v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    double v18 = *(double *)(*(void *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1BFEF2D8C(v16, v17);
    char v21 = v20;
    CGSize_optional result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(double *)(*(void *)(a2 + 56) + 8 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t FormatLayoutSizeSnapshot.hash(into:)(uint64_t a1)
{
  return sub_1BFE9D2B0(a1, *(void *)(v1 + 16));
}

uint64_t FormatLayoutSizeSnapshot.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLayoutSizeSnapshot.hashValue.getter()
{
  sub_1C1520DBC();
  sub_1BFE9D2B0((uint64_t)v2, *(void *)(v0 + 16));
  return sub_1C1520E0C();
}

uint64_t sub_1C02B1EE4()
{
  uint64_t v1 = *v0;
  sub_1C1520DBC();
  sub_1BFE9D2B0((uint64_t)v3, *(void *)(v1 + 16));
  return sub_1C1520E0C();
}

uint64_t sub_1C02B1F2C(uint64_t a1)
{
  return sub_1BFE9D2B0(a1, *(void *)(*(void *)v1 + 16));
}

uint64_t sub_1C02B1F38()
{
  uint64_t v1 = *v0;
  sub_1C1520DBC();
  sub_1BFE9D2B0((uint64_t)v3, *(void *)(v1 + 16));
  return sub_1C1520E0C();
}

uint64_t sub_1C02B1F7C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE9E954(*(void *)(*(void *)a1 + 16), *(void *)(*(void *)a2 + 16));
}

void *FormatLayoutResizingProvider.__allocating_init()()
{
  uint64_t v0 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = (void *)swift_allocObject();
  sub_1C02B250C((unint64_t *)&qword_1EB87C6F0, 255, MEMORY[0x1E4FAA868]);
  sub_1C02318AC(0);
  sub_1C02B250C((unint64_t *)&qword_1EB880C70, 255, sub_1C02318AC);
  sub_1C151FFBC();
  sub_1C1517ECC();
  swift_allocObject();
  uint64_t v2 = sub_1C1517EBC();
  uint64_t v3 = MEMORY[0x1E4FBC868];
  v1[2] = v2;
  v1[3] = v3;
  v1[4] = 0;
  v1[5] = 0;
  return v1;
}

void *FormatLayoutResizingProvider.init()()
{
  uint64_t v1 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v1);
  sub_1C02B250C((unint64_t *)&qword_1EB87C6F0, 255, MEMORY[0x1E4FAA868]);
  sub_1C02318AC(0);
  sub_1C02B250C((unint64_t *)&qword_1EB880C70, 255, sub_1C02318AC);
  sub_1C151FFBC();
  sub_1C1517ECC();
  swift_allocObject();
  uint64_t v2 = sub_1C1517EBC();
  uint64_t v3 = MEMORY[0x1E4FBC868];
  v0[2] = v2;
  v0[3] = v3;
  v0[4] = 0;
  v0[5] = 0;
  return v0;
}

uint64_t sub_1C02B2264(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v7 = v6;
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v14 = *(void *)(v6 + 24);
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_1C1052424(a5, a6), (v16 & 1) != 0))
  {
    unint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    unint64_t v17 = sub_1BFE9C5F8(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C1066EB4(a1, a2, isUniquelyReferenced_nonNull_native, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *(void *)(v7 + 24);
  *(void *)(v7 + 24) = 0x8000000000000000;
  sub_1C1066D74(v17, v19, a5, a6);
  *(void *)(v7 + 24) = v23;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t result = sub_1C1517E8C();
  char v21 = *(void (**)(uint64_t))(v7 + 32);
  if (v21)
  {
    uint64_t v22 = swift_retain();
    v21(v22);
    return sub_1BFC3E5C0((uint64_t)v21);
  }
  return result;
}

uint64_t FormatLayoutResizingProvider.onChange(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 32);
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  sub_1BFC3E5C0(v3);
  return swift_retain();
}

uint64_t FormatLayoutResizingProvider.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFC3E5C0(*(void *)(v0 + 32));
  return v0;
}

uint64_t FormatLayoutResizingProvider.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFC3E5C0(*(void *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_1C02B24C4(uint64_t a1, uint64_t a2)
{
  return sub_1C02B250C(&qword_1EA199120, a2, (void (*)(uint64_t))type metadata accessor for FormatLayoutSizeSnapshot);
}

uint64_t sub_1C02B250C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for FormatLayoutSizeSnapshot(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatLayoutSizeSnapshot);
}

uint64_t method lookup function for FormatLayoutResizingProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatLayoutResizingProvider);
}

uint64_t dispatch thunk of FormatLayoutResizingProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C02B2598()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C02B25E0()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C02B2600, 0, 0);
}

uint64_t sub_1C02B2600()
{
  uint64_t v1 = MEMORY[0x1C18C0720]();
  *(void *)(v0 + 24) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 32) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1C02B26AC;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F415EBE0]();
}

uint64_t sub_1C02B26AC()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C02B27C8;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C02B3268;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02B27C8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C02B282C()
{
  uint64_t v0 = sub_1C151F55C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151F52C();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1BFE4597C();
  sub_1C151E1AC();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1BFCBD184((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  sub_1C006480C(0);
  sub_1BFCBD184((unint64_t *)&qword_1EB879FC0, sub_1C006480C);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1C151F5AC();
  qword_1EA199128 = result;
  return result;
}

uint64_t sub_1C02B2A88(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1C02B2AD8(a1);
  return v2;
}

uint64_t *sub_1C02B2AD8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *v1;

  swift_bridgeObjectRelease();
  sub_1C02B3180();
  swift_allocObject();
  v1[2] = sub_1C1518C0C();
  swift_retain();
  sub_1C15184CC();
  swift_release();
  if (LOBYTE(v12[0]) == 1)
  {
    sub_1C1518BFC();
    swift_release();
  }
  else
  {
    uint64_t v4 = qword_1EA194420;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    uint64_t v6 = (void *)swift_allocObject();
    uint64_t v11 = *(void *)(v3 + 80);
    _OWORD v6[2] = v11;
    uint64_t v7 = *(void *)(v3 + 88);
    void v6[3] = v7;
    v6[4] = v5;
    sub_1C15184EC();
    swift_release();
    swift_release();
    __swift_project_boxed_opaque_existential_1(v12, v13);
    swift_retain();
    sub_1C1517E3C();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    int64_t v9 = (void *)swift_allocObject();
    v9[2] = v11;
    v9[3] = v7;
    v9[4] = v8;
    swift_retain();
    sub_1C15184EC();
    swift_release();
    swift_release();
    __swift_project_boxed_opaque_existential_1(v12, v13);
    swift_retain();
    sub_1C1517E3C();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return v1;
}

uint64_t sub_1C02B2DBC(unsigned __int8 *a1)
{
  int v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v1) {
      sub_1C1518BFC();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C02B2E20()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for FeedServiceError();
    swift_getWitnessTable();
    int v1 = (void *)swift_allocError();
    *(void *)uint64_t v2 = 12;
    *(void *)(v2 + 8) = 0;
    *(void *)(v2 + 16) = 0;
    *(void *)(v2 + 24) = 0;
    *(unsigned char *)(v2 + 32) = 6;
    swift_retain();
    sub_1C1518BDC();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C02B2F08()
{
  uint64_t v0 = swift_allocObject();
  sub_1C02B2F40();
  return v0;
}

uint64_t sub_1C02B2F40()
{
  sub_1C02B3180();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1C1518C0C();
  return v0;
}

uint64_t sub_1C02B2F84()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C02B2FA4, 0, 0);
}

uint64_t sub_1C02B2FA4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C02B303C;
  return MEMORY[0x1F415E810]();
}

uint64_t sub_1C02B303C()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C02B3150;
  }
  else {
    uint64_t v2 = sub_1C02431F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02B3150()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for FeedGroupEmitTaskGap()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C02B3180()
{
  if (!qword_1EB884FC8)
  {
    unint64_t v0 = sub_1C1518C1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884FC8);
    }
  }
}

uint64_t sub_1C02B31DC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C02B3214()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C02B324C(unsigned __int8 *a1)
{
  return sub_1C02B2DBC(a1);
}

uint64_t sub_1C02B3258()
{
  return sub_1C02B2E20();
}

char *FormatPuzzleEmbedViewController.__allocating_init(puzzleEmbedViewController:componentProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  uint64_t v8 = sub_1C02CD16C(a1, a2, a3);

  swift_unknownObjectRelease();
  return v8;
}

id FormatPuzzleEmbedViewController.puzzleEmbedViewController.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController);
}

id FormatPuzzleEmbedViewController.onReuse.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onReuse);
}

uint64_t FormatPuzzleEmbedViewController.layoutIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_layoutIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatPuzzleEmbedViewController.layoutIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_layoutIdentifier);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleEmbedViewController.layoutIdentifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedViewController.resizingProvider.getter()
{
  return swift_weakLoadStrong();
}

uint64_t FormatPuzzleEmbedViewController.resizingProvider.setter()
{
  return swift_release();
}

void (*FormatPuzzleEmbedViewController.resizingProvider.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_resizingProvider;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_1C02B352C;
}

void sub_1C02B352C(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  free(v3);
}

uint64_t sub_1C02B35AC@<X0>(void *a1@<X0>, uint64_t (**a2)(double *, double *)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillShow);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    id v7 = sub_1C02CE0C0;
  }
  else
  {
    id v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(double *, double *))v6;
  return sub_1BFC648F8(v4);
}

uint64_t sub_1C02B364C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C02CE0BC;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  id v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillShow);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *id v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1BFC648F8(v3);
  return sub_1BFC3E5C0(v8);
}

uint64_t FormatPuzzleEmbedViewController.onKeyboardWillShow.getter()
{
  return sub_1C02B38FC(&OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillShow);
}

uint64_t FormatPuzzleEmbedViewController.onKeyboardWillShow.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C02B3960(a1, a2, &OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillShow);
}

uint64_t (*FormatPuzzleEmbedViewController.onKeyboardWillShow.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C02B3788@<X0>(void *a1@<X0>, uint64_t (**a2)(double *, double *)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillHide);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    id v7 = sub_1C02CE0C0;
  }
  else
  {
    id v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(double *, double *))v6;
  return sub_1BFC648F8(v4);
}

uint64_t sub_1C02B3828(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C02CE0BC;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  id v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillHide);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *id v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1BFC648F8(v3);
  return sub_1BFC3E5C0(v8);
}

uint64_t FormatPuzzleEmbedViewController.onKeyboardWillHide.getter()
{
  return sub_1C02B38FC(&OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillHide);
}

uint64_t sub_1C02B38FC(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  sub_1BFC648F8(*v2);
  return v3;
}

uint64_t FormatPuzzleEmbedViewController.onKeyboardWillHide.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C02B3960(a1, a2, &OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillHide);
}

uint64_t sub_1C02B3960(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (uint64_t *)(v3 + *a3);
  swift_beginAccess();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  v6[1] = a2;
  return sub_1BFC3E5C0(v7);
}

uint64_t (*FormatPuzzleEmbedViewController.onKeyboardWillHide.modify())()
{
  return j_j__swift_endAccess;
}

char *FormatPuzzleEmbedViewController.init(puzzleEmbedViewController:componentProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1C02CD16C(a1, a2, a3);

  swift_unknownObjectRelease();
  return v4;
}

id FormatPuzzleEmbedViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void FormatPuzzleEmbedViewController.init(nibName:bundle:)()
{
}

id FormatPuzzleEmbedViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall FormatPuzzleEmbedViewController.viewDidLoad()()
{
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  objc_super v2 = v1;
  objc_msgSend(v1, sel_setClipsToBounds_, 1);

  objc_msgSend(v0, sel_setEdgesForExtendedLayout_, 0);
  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = v3;
  objc_msgSend(v3, sel_setAutoresizingMask_, 0);

  uint64_t v5 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController];
  objc_msgSend(v0, sel_addChildViewController_, v5);
  id v6 = objc_msgSend(v0, sel_view);
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v7 = v6;
  id v8 = objc_msgSend(v5, sel_view);
  if (v8)
  {
    int64_t v9 = v8;
    objc_msgSend(v7, sel_addSubview_, v8);

    objc_msgSend(v5, sel_didMoveToParentViewController_, v0);
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController], sel_prewarm);
    unint64_t v10 = &v5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate];
    swift_beginAccess();
    *((void *)v10 + 1) = &protocol witness table for FormatPuzzleEmbedViewController;
    swift_unknownObjectWeakAssign();
    return;
  }
LABEL_9:
  __break(1u);
}

Swift::Void __swiftcall FormatPuzzleEmbedViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  objc_super v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_viewWillAppear_, a1);
  if (!*(void *)&v2[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_currentAccessoryView])
  {
    id v4 = objc_msgSend(self, sel_currentDevice);
    id v5 = objc_msgSend(v4, sel_userInterfaceIdiom);

    if (!v5)
    {
      sub_1C15180CC();
      if ((sub_1C15180BC() & 1) == 0) {
        sub_1C02B3FC0();
      }
    }
  }
  id v6 = self;
  id v7 = objc_msgSend(v6, sel_defaultCenter);
  objc_msgSend(v7, sel_addObserver_selector_name_object_, v2, sel_keyboardWillShowWithNotification_, *MEMORY[0x1E4FB2C58], 0);

  id v8 = objc_msgSend(v6, sel_defaultCenter);
  objc_msgSend(v8, sel_addObserver_selector_name_object_, v2, sel_keyboardWillHideWithNotification_, *MEMORY[0x1E4FB2C50], 0);
}

void sub_1C02B3FC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = qword_1F1B6DB60;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_componentProvider + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v28 = 0xD000000000000013;
  uint64_t v29 = 0x80000001C160A280;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 2;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  unint64_t v35 = 0;
  uint64_t v36 = v2;
  v27[0] = 0;
  v27[1] = 0;
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v6 = *(uint64_t (**)(uint64_t *, void *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v3 + 32);
  swift_retain();
  id v7 = (void *)v6(&v28, v27, sub_1C02CE268, v5, ObjectType, v3);
  objc_super v9 = v8;
  swift_release();
  uint64_t v25 = v36;
  sub_1C019BA1C(v28, v29, v30, v31, v32, v33, v34, v35);
  swift_release();
  unint64_t v10 = (void **)(v1 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_currentAccessoryView);
  objc_super v11 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_currentAccessoryView);
  *unint64_t v10 = v7;
  v10[1] = v9;
  id v12 = v7;

  uint64_t v13 = *v10;
  if (*v10)
  {
    uint64_t v14 = v10[1];
    uint64_t v15 = swift_getObjectType();
    uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_identifier);
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_identifier + 8);
    double v18 = (void (*)(uint64_t, uint64_t, uint64_t, void *))v14[2];
    id v19 = v13;
    swift_bridgeObjectRetain();
    v18(v16, v17, v15, v14);
  }
  char v20 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController)
                 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController);
  sub_1BFC39268(0, &qword_1EA1A5530);
  id v21 = v12;
  uint64_t v22 = (void *)sub_1C151EBAC();
  uint64_t v23 = (void *)sub_1C151EBAC();
  objc_msgSend(v20, sel_setShortcutsBarWithLeadingGroups_trailingGroups_, v22, v23, v25);

  objc_msgSend(v20, sel_setInputAccessoryView_, v21);
  id v24 = objc_msgSend(self, sel_current);
  if (v24)
  {
    id v26 = v24;
    objc_msgSend(v24, sel_setPencilInputExpected_, 0);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall FormatPuzzleEmbedViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_viewWillDisappear_, a1);
  uint64_t v3 = &v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_currentAccessoryView];
  id v4 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_currentAccessoryView];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;

  uint64_t v5 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController]
                + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController);
  sub_1BFC39268(0, &qword_1EA1A5530);
  id v6 = (void *)sub_1C151EBAC();
  id v7 = (void *)sub_1C151EBAC();
  objc_msgSend(v5, sel_setShortcutsBarWithLeadingGroups_trailingGroups_, v6, v7);

  objc_msgSend(v5, sel_setInputAccessoryView_, 0);
  id v8 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v8, sel_removeObserver_, v1);
}

Swift::Void __swiftcall FormatPuzzleEmbedViewController.viewWillLayoutSubviews()()
{
  v45.receiver = v0;
  v45.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v45, sel_viewWillLayoutSubviews);
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController];
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, sel_bounds);
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  id v12 = objc_msgSend(v0, sel_view);
  if (!v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v13 = v12;
  objc_msgSend(v12, sel_layoutMargins);
  double v15 = v14;
  double v17 = v16;

  double v18 = UIEdgeInsetsInsetRect(v5, v7, v9, v11, v15, v17);
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v25 = (double *)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  swift_beginAccess();
  *uint64_t v25 = v18;
  *((void *)v25 + 1) = v20;
  *((void *)v25 + 2) = v22;
  *((void *)v25 + 3) = v24;
  id v26 = objc_msgSend(v0, sel_view);
  if (!v26)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  int64_t v27 = v26;
  objc_msgSend(v26, sel_bounds);
  uint64_t v29 = v28;
  uint64_t v31 = v30;

  uint64_t v32 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize];
  swift_beginAccess();
  *(void *)uint64_t v32 = v29;
  *((void *)v32 + 1) = v31;
  id v33 = objc_msgSend(v1, sel_view);
  if (!v33)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v34 = v33;
  id v35 = objc_msgSend(v0, sel_view);
  if (v35)
  {
    uint64_t v36 = v35;
    objc_msgSend(v35, sel_bounds);
    double v38 = v37;
    double v40 = v39;
    double v42 = v41;
    double v44 = v43;

    objc_msgSend(v34, sel_setFrame_, v38, v40, v42, v44);
    return;
  }
LABEL_11:
  __break(1u);
}

void FormatPuzzleEmbedViewController.keyboardWillShow(notification:)(uint64_t a1)
{
}

void FormatPuzzleEmbedViewController.keyboardWillHide(notification:)(uint64_t a1)
{
}

void sub_1C02B4710(uint64_t a1, SEL *a2, void *a3)
{
  double v6 = v3;
  uint64_t v7 = sub_1C151558C();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v41 = sub_1C151E62C();
    double v42 = v9;
    sub_1C152006C();
    if (*(void *)(v8 + 16) && (unint64_t v10 = sub_1C105216C((uint64_t)v43), (v11 & 1) != 0))
    {
      sub_1BFF6A008(*(void *)(v8 + 56) + 32 * v10, (uint64_t)&v44);
    }
    else
    {
      long long v44 = 0u;
      long long v45 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1C02CD3DC((uint64_t)v43);
    if (!*((void *)&v45 + 1))
    {
      sub_1BFEFE4A0((uint64_t)&v44);
      return;
    }
    type metadata accessor for CGRect(0);
    if (swift_dynamicCast())
    {
      if (objc_msgSend(v6, sel_isViewLoaded))
      {
        id v12 = objc_msgSend(v6, sel_view);
        if (v12)
        {
          uint64_t v13 = v12;
          id v14 = objc_msgSend(v12, sel_window);

          if (!v14) {
            return;
          }
          id v15 = objc_msgSend(v6, sel_view);
          if (v15)
          {
            double v16 = v15;
            id v17 = objc_msgSend(v6, sel_view);
            if (v17)
            {
              double v18 = v17;
              [v17 *a2];
              double v20 = v19;
              double v22 = v21;
              double v24 = v23;
              double v26 = v25;

              id v27 = objc_msgSend(v6, sel_view);
              if (v27)
              {
                uint64_t v28 = v27;
                uint64_t v29 = (void *)sub_1C151F8DC();

                objc_msgSend(v16, sel_convertRect_toCoordinateSpace_, v29, v20, v22, v24, v26);
                double v31 = v30;
                double v33 = v32;
                double v35 = v34;
                double v37 = v36;

                double v38 = &v6[*a3];
                swift_beginAccess();
                double v39 = *(void (**)(uint64_t, double, double, double, double, double, double))v38;
                if (*(void *)v38)
                {
                  uint64_t v40 = swift_retain();
                  v39(v40, v31, v33, v35, v37, *(double *)&v41, v42);
                  sub_1BFC3E5C0((uint64_t)v39);
                }
                return;
              }
LABEL_21:
              __break(1u);
              return;
            }
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_20;
      }
    }
  }
}

uint64_t sub_1C02B49D4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = sub_1C151559C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151556C();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1C02B4AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    double v4 = (void *)v3;
    id v5 = objc_msgSend(self, sel_sharedApplication);
    objc_msgSend(v5, sel_sendAction_to_from_forEvent_, sel_resignFirstResponder, 0, 0, 0);
  }
}

Swift::Void __swiftcall FormatPuzzleEmbedViewController.puzzleEmbedDidReceiveInteractionMessage()()
{
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C15198DC();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB93C7A8);
  uint64_t v1 = sub_1C15198AC();
  os_log_type_t v2 = sub_1C151F38C();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1BFC31000, v1, v2, "FormatPuzzleEmbedViewController: puzzleEmbedDidReceiveInteractionMessage", v3, 2u);
    MEMORY[0x1C18C9B00](v3, -1, -1);
  }

  swift_beginAccess();
  sub_1C02B5EA8(&v4, 1);
  swift_endAccess();
}

uint64_t FormatPuzzleEmbedViewController.puzzleEmbedDidReceiveProgress(_:)()
{
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C15198DC();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB93C7A8);
  uint64_t v1 = sub_1C15198AC();
  os_log_type_t v2 = sub_1C151F38C();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1BFC31000, v1, v2, "FormatPuzzleEmbedViewController: puzzleEmbedDidReceiveProgress", v3, 2u);
    MEMORY[0x1C18C9B00](v3, -1, -1);
  }

  swift_beginAccess();
  sub_1C02B5EA8(&v5, 0);
  return swift_endAccess();
}

Swift::Void __swiftcall FormatPuzzleEmbedViewController.puzzleEmbedDidFinishLoading()()
{
}

Swift::Void __swiftcall FormatPuzzleEmbedViewController.puzzleEmbedProcessTerminated()()
{
}

void sub_1C02B4DA8(const char *a1)
{
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C7A8);
  oslog = sub_1C15198AC();
  os_log_type_t v3 = sub_1C151F38C();
  if (os_log_type_enabled(oslog, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v4 = 0;
    _os_log_impl(&dword_1BFC31000, oslog, v3, a1, v4, 2u);
    MEMORY[0x1C18C9B00](v4, -1, -1);
  }
}

void sub_1C02B4E98(uint64_t a1, uint64_t a2)
{
}

void sub_1C02B4EA4(uint64_t a1, uint64_t a2)
{
}

void sub_1C02B4EB0(uint64_t a1, uint64_t a2, const char *a3)
{
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C15198DC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB93C7A8);
  oslog = sub_1C15198AC();
  os_log_type_t v5 = sub_1C151F38C();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1BFC31000, oslog, v5, a3, v6, 2u);
    MEMORY[0x1C18C9B00](v6, -1, -1);
  }
}

uint64_t FormatPuzzleEmbedViewController.reuseIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController)
                 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C02B5014@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  os_log_type_t v3 = (void *)(*(void *)(*a1 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController)
                + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02B507C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*(void *)(*a2 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController)
                + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  void *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatPuzzleEmbedViewController.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  os_log_type_t v5 = (void *)(*(void *)(v2 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController)
                + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*FormatPuzzleEmbedViewController.reuseIdentifier.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier;
  v3[5] = v4;
  v3[6] = v5;
  uint64_t v6 = (void *)(v4 + v5);
  swift_beginAccess();
  uint64_t v7 = v6[1];
  v3[3] = *v6;
  v3[4] = v7;
  swift_bridgeObjectRetain();
  return sub_1C02B5200;
}

void sub_1C02B5200(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v7 = (void *)(v5 + v4);
  *uint64_t v7 = v3;
  v7[1] = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t sub_1C02B526C()
{
  uint64_t v1 = (uint64_t *)(*(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController)
                 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C02B52D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*(void *)(*v2 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController)
                + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*sub_1C02B534C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = FormatPuzzleEmbedViewController.reuseIdentifier.modify(v2);
  return sub_1C02B53A8;
}

void sub_1C02B53A8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

Swift::Void __swiftcall FormatPuzzleEmbedViewController.refresh()()
{
  objc_msgSend(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController)+ OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager), sel_refresh);
}

id sub_1C02B5414()
{
  return objc_msgSend(*(id *)(*(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController)+ OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager), sel_refresh);
}

Swift::Void __swiftcall FormatPuzzleEmbedViewController.prepareForReuse()()
{
  MEMORY[0x1C18C4390]();

  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController);
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v3 = *v2;
  *uint64_t v2 = 0;
  v2[1] = 0;
  sub_1BFC3E5C0(v3);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted) = 0;
}

uint64_t sub_1C02B54C4()
{
  uint64_t v1 = *v0;
  MEMORY[0x1C18C4390]();

  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController);
  uint64_t v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t result = sub_1BFC3E5C0(v4);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted) = 0;
  return result;
}

id sub_1C02B554C(char a1, char a2)
{
  return objc_msgSend(*v2, sel_setEditing_animated_, a1 & 1, a2 & 1);
}

void sub_1C02B556C(uint64_t a1, uint64_t a2)
{
  sub_1C02CDA54(&qword_1EA199200, a2, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedViewController);
  JUMPOUT(0x1C18C4650);
}

uint64_t FormatPuzzleEmbedViewController.skipUpdatesOnUnchangedConfig(for:)()
{
  return 1;
}

Swift::Bool __swiftcall FormatPuzzleEmbedViewController.shouldProcessAccessoryConfigEvent()()
{
  return 0;
}

void FormatPuzzleEmbedViewController.puzzleColorTheme.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_1C02B55F0(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1C02B5634(uint64_t *a1, unint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C1520DBC();
  unint64_t v6 = a2 >> 62;
  double v23 = v2;
  double v24 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      swift_bridgeObjectRetain();
      sub_1C1520DDC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      swift_bridgeObjectRelease_n();
      break;
    default:
      sub_1C1520DDC();
      swift_bridgeObjectRetain();
      break;
  }
  uint64_t v7 = sub_1C1520E0C();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v22 = a2;
  if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v23;
    *double v23 = 0x8000000000000000;
    swift_retain();
    sub_1C02C0AE8(v22, v9, isUniquelyReferenced_nonNull_native);
    *double v23 = v25;
    swift_bridgeObjectRelease();
    *double v24 = v22;
    return 1;
  }
  uint64_t v11 = ~v8;
  while (1)
  {
    unint64_t v13 = *(void *)(*(void *)(v5 + 48) + 8 * v9);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    switch(v13 >> 62)
    {
      case 1uLL:
      case 2uLL:
        uint64_t v16 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v14 = *(void *)(v16 + 16);
        uint64_t v15 = *(void *)(v16 + 24);
        swift_bridgeObjectRetain();
        break;
      default:
        break;
    }
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    switch((int)v6)
    {
      case 1:
      case 2:
        uint64_t v19 = *(void *)(v10 + 16);
        uint64_t v17 = *(void *)(v19 + 16);
        uint64_t v18 = *(void *)(v19 + 24);
        swift_bridgeObjectRetain();
        break;
      default:
        break;
    }
    if (!v15)
    {
      if (!v18) {
        goto LABEL_20;
      }
LABEL_18:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    if (!v18) {
      goto LABEL_18;
    }
    if (v14 == v17 && v15 == v18) {
      break;
    }
    char v12 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_20;
    }
LABEL_7:
    unint64_t v9 = (v9 + 1) & v11;
    if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_20:
  swift_release();
  swift_bridgeObjectRelease();
  *double v24 = *(void *)(*(void *)(*v23 + 48) + 8 * v9);
  swift_retain();
  return 0;
}

uint64_t sub_1C02B59B4(void *a1, void *a2)
{
  return sub_1C02BAA2C(a1, a2, (unint64_t *)&qword_1EB87A140, 0x1E4F7E538, (unint64_t *)&qword_1EB85E028, (unint64_t *)&qword_1EB87A150);
}

uint64_t sub_1C02B59D8(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C1520DBC();
  double v20 = v2;
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v20;
    *double v20 = 0x8000000000000000;
    sub_1C02C0E48(a2, v8, isUniquelyReferenced_nonNull_native);
    *double v20 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_30;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    int v10 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v8);
    unint64_t v11 = 0xD000000000000021;
    if (v10 != 1) {
      unint64_t v11 = 0x7461636572706564;
    }
    unint64_t v12 = 0xEA00000000006465;
    if (v10 == 1) {
      unint64_t v12 = 0x80000001C15FF850;
    }
    unint64_t v13 = *(unsigned char *)(*(void *)(v5 + 48) + v8) ? v11 : 0xD000000000000014;
    unint64_t v14 = *(unsigned char *)(*(void *)(v5 + 48) + v8) ? v12 : 0x80000001C15FF830;
    if ((_BYTE)a2)
    {
      if (a2 == 1) {
        unint64_t v15 = 0xD000000000000021;
      }
      else {
        unint64_t v15 = 0x7461636572706564;
      }
      if (a2 == 1) {
        unint64_t v16 = 0x80000001C15FF850;
      }
      else {
        unint64_t v16 = 0xEA00000000006465;
      }
      if (v13 != v15) {
        goto LABEL_24;
      }
    }
    else
    {
      unint64_t v16 = 0x80000001C15FF830;
      if (v13 != 0xD000000000000014) {
        goto LABEL_24;
      }
    }
    if (v14 == v16)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_29;
    }
LABEL_24:
    char v17 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v17) {
      break;
    }
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
LABEL_29:
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v20 + 48) + v8);
LABEL_30:
  *a1 = a2;
  return result;
}

uint64_t sub_1C02B5CE4(unsigned char *a1, uint64_t a2)
{
  return sub_1C02B9C7C(a1, a2, &qword_1EB880DE8, (void (*)(void))sub_1C00BC5FC);
}

uint64_t sub_1C02B5D54(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C1520DBC();
  sub_1C1520DCC();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C02C11BC(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1C02B5EA8(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C1520DBC();
  uint64_t v18 = v2;
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v18;
    *uint64_t v18 = 0x8000000000000000;
    sub_1C02C1340(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v18 = v19;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_25;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    if (*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      if (*(unsigned char *)(*(void *)(v5 + 48) + v8) == 1)
      {
        unint64_t v10 = 0x80000001C1601770;
        unint64_t v11 = 0xD000000000000010;
        int v12 = a2;
        if ((_BYTE)a2) {
          goto LABEL_8;
        }
      }
      else
      {
        unint64_t v10 = 0xE400000000000000;
        unint64_t v11 = 1752461154;
        int v12 = a2;
        if ((_BYTE)a2)
        {
LABEL_8:
          if (v12 == 1) {
            unint64_t v13 = 0xD000000000000010;
          }
          else {
            unint64_t v13 = 1752461154;
          }
          if (v12 == 1) {
            unint64_t v14 = 0x80000001C1601770;
          }
          else {
            unint64_t v14 = 0xE400000000000000;
          }
          if (v11 != v13) {
            goto LABEL_19;
          }
          goto LABEL_18;
        }
      }
    }
    else
    {
      unint64_t v11 = 0x6E4572657474656CLL;
      unint64_t v10 = 0xEB00000000797274;
      int v12 = a2;
      if ((_BYTE)a2) {
        goto LABEL_8;
      }
    }
    unint64_t v14 = 0xEB00000000797274;
    if (v11 != 0x6E4572657474656CLL) {
      goto LABEL_19;
    }
LABEL_18:
    if (v10 == v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_24;
    }
LABEL_19:
    char v15 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      break;
    }
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
LABEL_24:
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v18 + 48) + v8);
LABEL_25:
  *a1 = a2;
  return result;
}

uint64_t sub_1C02B6148(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  FeedItem.Kind.hash(into:)();
  uint64_t v8 = sub_1C1520E0C();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v4;
    void *v4 = 0x8000000000000000;
    sub_1BFF7FF04(a2, a3);
    sub_1C02C1604(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    void *v4 = v25;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v11 = ~v9;
  while (2)
  {
    int v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v10);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    switch(v14)
    {
      case 0uLL:
        if (a3) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 0);
        uint64_t v19 = a2;
        unint64_t v20 = 0;
        goto LABEL_48;
      case 1uLL:
        if (a3 != 1) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 1uLL);
        uint64_t v19 = a2;
        unint64_t v20 = 1;
        goto LABEL_48;
      case 2uLL:
        if (a3 != 2) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 2uLL);
        uint64_t v19 = a2;
        unint64_t v20 = 2;
        goto LABEL_48;
      case 3uLL:
        if (a3 != 3) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 3uLL);
        uint64_t v19 = a2;
        unint64_t v20 = 3;
        goto LABEL_48;
      case 4uLL:
        if (a3 != 4) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 4uLL);
        uint64_t v19 = a2;
        unint64_t v20 = 4;
        goto LABEL_48;
      case 5uLL:
        if (a3 != 5) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 5uLL);
        uint64_t v19 = a2;
        unint64_t v20 = 5;
        goto LABEL_48;
      case 6uLL:
        if (a3 != 6) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 6uLL);
        uint64_t v19 = a2;
        unint64_t v20 = 6;
        goto LABEL_48;
      case 7uLL:
        if (a3 != 7) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 7uLL);
        uint64_t v19 = a2;
        unint64_t v20 = 7;
        goto LABEL_48;
      case 8uLL:
        if (a3 != 8) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 8uLL);
        uint64_t v19 = a2;
        unint64_t v20 = 8;
        goto LABEL_48;
      case 9uLL:
        if (a3 != 9) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 9uLL);
        uint64_t v19 = a2;
        unint64_t v20 = 9;
        goto LABEL_48;
      case 0xAuLL:
        if (a3 != 10) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 0xAuLL);
        uint64_t v19 = a2;
        unint64_t v20 = 10;
        goto LABEL_48;
      case 0xBuLL:
        if (a3 != 11) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 0xBuLL);
        uint64_t v19 = a2;
        unint64_t v20 = 11;
        goto LABEL_48;
      case 0xCuLL:
        if (a3 != 12) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 0xCuLL);
        uint64_t v19 = a2;
        unint64_t v20 = 12;
        goto LABEL_48;
      case 0xDuLL:
        if (a3 != 13) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 0xDuLL);
        uint64_t v19 = a2;
        unint64_t v20 = 13;
        goto LABEL_48;
      case 0xEuLL:
        if (a3 != 14) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 0xEuLL);
        uint64_t v19 = a2;
        unint64_t v20 = 14;
        goto LABEL_48;
      case 0xFuLL:
        if (a3 != 15) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 0xFuLL);
        uint64_t v19 = a2;
        unint64_t v20 = 15;
        goto LABEL_48;
      case 0x10uLL:
        if (a3 != 16) {
          goto LABEL_44;
        }
        sub_1BFEEFC20(*v12, 0x10uLL);
        uint64_t v19 = a2;
        unint64_t v20 = 16;
LABEL_48:
        sub_1BFEEFC20(v19, v20);
        swift_bridgeObjectRelease();
        goto LABEL_49;
      default:
        if (a3 < 0x11)
        {
LABEL_44:
          sub_1BFF7FF04(a2, a3);
          sub_1BFF7FF04(v13, v14);
          sub_1BFEEFC20(v13, v14);
          sub_1BFEEFC20(a2, a3);
LABEL_45:
          unint64_t v10 = (v10 + 1) & v11;
          if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
            goto LABEL_46;
          }
          continue;
        }
        if (v13 != a2 || v14 != a3)
        {
          char v16 = sub_1C1520A9C();
          sub_1BFF7FF04(a2, a3);
          sub_1BFF7FF04(v13, v14);
          sub_1BFEEFC20(v13, v14);
          sub_1BFEEFC20(a2, a3);
          if (v16) {
            goto LABEL_52;
          }
          goto LABEL_45;
        }
        sub_1BFF7FF04(a2, a3);
        sub_1BFF7FF04(a2, a3);
        sub_1BFEEFC20(a2, a3);
        sub_1BFEEFC20(a2, a3);
LABEL_52:
        swift_bridgeObjectRelease();
        sub_1BFEEFC20(a2, a3);
LABEL_49:
        uint64_t v21 = (uint64_t *)(*(void *)(*v4 + 48) + 16 * v10);
        uint64_t v22 = *v21;
        unint64_t v23 = v21[1];
        *a1 = *v21;
        a1[1] = v23;
        sub_1BFF7FF04(v22, v23);
        return 0;
    }
  }
}

uint64_t sub_1C02B665C(unsigned char *a1, uint64_t a2)
{
  uint64_t v19 = *v2;
  sub_1C1520DBC();
  char v17 = v2;
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C1520E0C();
  uint64_t v6 = -1 << *(unsigned char *)(v19 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v19 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v17;
    void *v17 = 0x8000000000000000;
    sub_1C02C19A8(a2, v7, isUniquelyReferenced_nonNull_native);
    void *v17 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_29;
  }
  uint64_t v18 = ~v6;
  while (1)
  {
    unint64_t v8 = 0xD00000000000001CLL;
    if (*(unsigned char *)(*(void *)(v19 + 48) + v7) == 1)
    {
      unint64_t v9 = 0x80000001C15FCF90;
    }
    else
    {
      unint64_t v8 = 0xD000000000000028;
      unint64_t v9 = 0x80000001C15FCFB0;
    }
    unint64_t v10 = *(unsigned char *)(*(void *)(v19 + 48) + v7) ? v8 : 0xD000000000000010;
    unint64_t v11 = *(unsigned char *)(*(void *)(v19 + 48) + v7) ? v9 : 0x80000001C15FCF70;
    if ((_BYTE)a2)
    {
      if (a2 == 1) {
        unint64_t v12 = 0xD00000000000001CLL;
      }
      else {
        unint64_t v12 = 0xD000000000000028;
      }
      if (a2 == 1) {
        unint64_t v13 = 0x80000001C15FCF90;
      }
      else {
        unint64_t v13 = 0x80000001C15FCFB0;
      }
      if (v10 != v12) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v13 = 0x80000001C15FCF70;
      if (v10 != 0xD000000000000010) {
        goto LABEL_23;
      }
    }
    if (v11 == v13)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_28;
    }
LABEL_23:
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      break;
    }
    unint64_t v7 = (v7 + 1) & v18;
    if (((*(void *)(v19 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v17 + 48) + v7);
LABEL_29:
  *a1 = a2;
  return result;
}

uint64_t sub_1C02B6908(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  FormatItemKind.hash(into:)();
  uint64_t v8 = sub_1C1520E0C();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v4;
    void *v4 = 0x8000000000000000;
    sub_1BFE74E64(a2, a3);
    sub_1C02C1C78(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    void *v4 = v25;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v11 = ~v9;
  while (2)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v10);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    switch(v14)
    {
      case 0uLL:
        if (a3) {
          goto LABEL_40;
        }
        sub_1BFF8F648(*v12, 0);
        unint64_t v19 = 0;
        goto LABEL_45;
      case 1uLL:
        if (a3 != 1) {
          goto LABEL_40;
        }
        unint64_t v19 = 1;
        sub_1BFF8F648(*v12, 1uLL);
        goto LABEL_45;
      case 2uLL:
        if (a3 != 2) {
          goto LABEL_40;
        }
        unint64_t v19 = 2;
        sub_1BFF8F648(*v12, 2uLL);
        goto LABEL_45;
      case 3uLL:
        if (a3 != 3) {
          goto LABEL_40;
        }
        unint64_t v19 = 3;
        sub_1BFF8F648(*v12, 3uLL);
        goto LABEL_45;
      case 4uLL:
        if (a3 != 4) {
          goto LABEL_40;
        }
        unint64_t v19 = 4;
        sub_1BFF8F648(*v12, 4uLL);
        goto LABEL_45;
      case 5uLL:
        if (a3 != 5) {
          goto LABEL_40;
        }
        unint64_t v19 = 5;
        sub_1BFF8F648(*v12, 5uLL);
        goto LABEL_45;
      case 6uLL:
        if (a3 != 6) {
          goto LABEL_40;
        }
        unint64_t v19 = 6;
        sub_1BFF8F648(*v12, 6uLL);
        goto LABEL_45;
      case 7uLL:
        if (a3 != 7) {
          goto LABEL_40;
        }
        unint64_t v19 = 7;
        sub_1BFF8F648(*v12, 7uLL);
        goto LABEL_45;
      case 8uLL:
        if (a3 != 8) {
          goto LABEL_40;
        }
        unint64_t v19 = 8;
        sub_1BFF8F648(*v12, 8uLL);
        goto LABEL_45;
      case 9uLL:
        if (a3 != 9) {
          goto LABEL_40;
        }
        unint64_t v19 = 9;
        sub_1BFF8F648(*v12, 9uLL);
        goto LABEL_45;
      case 0xAuLL:
        if (a3 != 10) {
          goto LABEL_40;
        }
        unint64_t v19 = 10;
        sub_1BFF8F648(*v12, 0xAuLL);
        goto LABEL_45;
      case 0xBuLL:
        if (a3 != 11) {
          goto LABEL_40;
        }
        unint64_t v19 = 11;
        sub_1BFF8F648(*v12, 0xBuLL);
        goto LABEL_45;
      case 0xCuLL:
        if (a3 != 12) {
          goto LABEL_40;
        }
        unint64_t v19 = 12;
        sub_1BFF8F648(*v12, 0xCuLL);
        goto LABEL_45;
      case 0xDuLL:
        if (a3 != 13) {
          goto LABEL_40;
        }
        unint64_t v19 = 13;
        sub_1BFF8F648(*v12, 0xDuLL);
        goto LABEL_45;
      case 0xEuLL:
        if (a3 != 14) {
          goto LABEL_40;
        }
        unint64_t v19 = 14;
        sub_1BFF8F648(*v12, 0xEuLL);
        goto LABEL_45;
      default:
        if (a3 < 0xF)
        {
LABEL_40:
          sub_1BFE74E64(a2, a3);
          sub_1BFE74E64(v13, v14);
          sub_1BFF8F648(v13, v14);
          sub_1BFF8F648(a2, a3);
          goto LABEL_41;
        }
        if (v13 != a2 || v14 != a3)
        {
          char v16 = sub_1C1520A9C();
          sub_1BFE74E64(a2, a3);
          sub_1BFE74E64(v13, v14);
          sub_1BFF8F648(v13, v14);
          sub_1BFF8F648(a2, a3);
          if (v16)
          {
            unint64_t v23 = a1;
            goto LABEL_46;
          }
LABEL_41:
          unint64_t v10 = (v10 + 1) & v11;
          if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
            goto LABEL_42;
          }
          continue;
        }
        sub_1BFE74E64(a2, a3);
        sub_1BFE74E64(a2, a3);
        sub_1BFF8F648(a2, a3);
        unint64_t v19 = a3;
LABEL_45:
        unint64_t v23 = a1;
        sub_1BFF8F648(a2, v19);
LABEL_46:
        swift_bridgeObjectRelease();
        sub_1BFF8F648(a2, a3);
        uint64_t v20 = (uint64_t *)(*(void *)(*v4 + 48) + 16 * v10);
        uint64_t v21 = *v20;
        unint64_t v22 = v20[1];
        *unint64_t v23 = *v20;
        v23[1] = v22;
        sub_1BFE74E64(v21, v22);
        return 0;
    }
  }
}

uint64_t sub_1C02B6D90(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = *v4;
  sub_1C1520DBC();
  sub_1C1520DCC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  uint64_t v10 = sub_1C1520E0C();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  double v24 = v4;
  uint64_t v25 = a1;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v9 + 48);
    do
    {
      uint64_t v15 = v14 + 24 * v12;
      int v16 = *(unsigned __int8 *)(v15 + 16);
      if (*(unsigned char *)(v15 + 16))
      {
        if (v16 == 1)
        {
          if (a4 != 1) {
            goto LABEL_4;
          }
        }
        else if (a4 != 2)
        {
          goto LABEL_4;
        }
      }
      else if (a4)
      {
        goto LABEL_4;
      }
      BOOL v17 = *(void *)v15 == a2 && *(void *)(v15 + 8) == a3;
      if (v17 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1C015FB90(a2, a3, v16);
        uint64_t v18 = *(void *)(*v24 + 48) + 24 * v12;
        uint64_t v19 = *(void *)v18;
        uint64_t v20 = *(void *)(v18 + 8);
        *(void *)uint64_t v25 = *(void *)v18;
        *(void *)(v25 + 8) = v20;
        unsigned __int8 v21 = *(unsigned char *)(v18 + 16);
        *(unsigned char *)(v25 + 16) = v21;
        sub_1C015F808(v19, v20, v21);
        return 0;
      }
LABEL_4:
      unint64_t v12 = (v12 + 1) & v13;
    }
    while (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = *v24;
  *double v24 = 0x8000000000000000;
  sub_1C015F808(a2, a3, a4);
  sub_1C02C1FFC(a2, a3, a4, v12, isUniquelyReferenced_nonNull_native);
  *double v24 = v26;
  swift_bridgeObjectRelease();
  *(void *)uint64_t v25 = a2;
  *(void *)(v25 + 8) = a3;
  uint64_t result = 1;
  *(unsigned char *)(v25 + 16) = a4;
  return result;
}

uint64_t sub_1C02B6F90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v111 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02CDDB8(0, (unint64_t *)&qword_1EA196BD8, (void (*)(uint64_t))sub_1C0178190);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v88 - v11;
  sub_1C0178190();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v94 = (uint64_t)&v88 - v17;
  uint64_t v18 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v97 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02CDDB8(0, (unint64_t *)&qword_1EA197250, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  uint64_t v99 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v100 = (uint64_t)&v88 - v21;
  uint64_t v98 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  uint64_t v22 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v107 = (uint64_t)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v101 = (uint64_t)&v88 - v25;
  uint64_t v26 = *v3;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  uint64_t v108 = (uint64_t *)a2;
  sub_1C0163BB8((uint64_t)v112);
  uint64_t v27 = sub_1C1520E0C();
  uint64_t v28 = -1 << *(unsigned char *)(v26 + 32);
  unint64_t v29 = v27 & ~v28;
  uint64_t v30 = v26;
  uint64_t v106 = v26 + 56;
  if ((*(void *)(v26 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29))
  {
    id v90 = v15;
    uint64_t v91 = v12;
    uint64_t v92 = v10;
    id v88 = v8;
    uint64_t v93 = v6;
    uint64_t v95 = v3;
    uint64_t v96 = a1;
    uint64_t v103 = ~v28;
    uint64_t v105 = *(void *)(v22 + 72);
    uint64_t v89 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v111 + 48);
    uint64_t v31 = v107;
    uint64_t v104 = v30;
    while (1)
    {
      uint64_t v32 = *(void *)(v30 + 48);
      unint64_t v109 = v29;
      unint64_t v102 = v105 * v29;
      sub_1C02CDE74(v32 + v105 * v29, v31, type metadata accessor for FormatDerivedDataResultOptionReference);
      uint64_t v33 = *(void *)v31;
      uint64_t v34 = *v108;
      uint64_t v110 = *(void *)(*(void *)v31 + 16);
      uint64_t v111 = v34;
      if (v110 != *(void *)(v34 + 16)) {
        goto LABEL_5;
      }
      if (v110) {
        BOOL v35 = v33 == v111;
      }
      else {
        BOOL v35 = 1;
      }
      if (v35)
      {
LABEL_12:
        uint64_t v36 = *(void *)(v107 + 24);
        uint64_t v37 = *(void *)(v107 + 32);
        uint64_t v38 = v108[3];
        uint64_t v39 = v108[4];
        if ((*(void *)(v107 + 8) != v108[1] || *(void *)(v107 + 16) != v108[2]) && (sub_1C1520A9C() & 1) == 0
          || (sub_1C00ABAD8(v36, v38) & 1) == 0
          || v37 != v39)
        {
          goto LABEL_5;
        }
        uint64_t v41 = *(void *)(v107 + 40);
        uint64_t v40 = *(void *)(v107 + 48);
        int v42 = *(unsigned __int8 *)(v107 + 56);
        uint64_t v44 = v108[5];
        uint64_t v43 = v108[6];
        uint64_t v10 = *((unsigned __int8 *)v108 + 56);
        if (*(unsigned char *)(v107 + 56))
        {
          if (v42 == 1)
          {
            if (v10 == 1)
            {
              if (v41 != v44 || v40 != v43)
              {
                char v45 = sub_1C1520A9C();
                sub_1C015F808(v44, v43, 1u);
                sub_1C015F808(v41, v40, 1u);
                sub_1C015FB90(v41, v40, 1u);
                sub_1C015FB90(v44, v43, 1u);
                if ((v45 & 1) == 0) {
                  goto LABEL_5;
                }
                goto LABEL_142;
              }
LABEL_141:
              sub_1C015F808(v41, v40, v42);
              sub_1C015F808(v41, v40, v42);
              sub_1C015FB90(v41, v40, v42);
              sub_1C015FB90(v41, v40, v42);
              goto LABEL_142;
            }
LABEL_4:
            sub_1C015F808(v108[5], v108[6], *((unsigned char *)v108 + 56));
            sub_1C015F808(v41, v40, v42);
            sub_1C015FB90(v41, v40, v42);
            sub_1C015FB90(v44, v43, v10);
            goto LABEL_5;
          }
          if (v10 != 2) {
            goto LABEL_4;
          }
          if (v41 == v44 && v40 == v43) {
            goto LABEL_141;
          }
          char v60 = sub_1C1520A9C();
          sub_1C015F808(v44, v43, 2u);
          sub_1C015F808(v41, v40, 2u);
          sub_1C015FB90(v41, v40, 2u);
          sub_1C015FB90(v44, v43, 2u);
          if ((v60 & 1) == 0) {
            goto LABEL_5;
          }
        }
        else
        {
          if (*((unsigned char *)v108 + 56)) {
            goto LABEL_4;
          }
          if (v41 == v44 && v40 == v43) {
            goto LABEL_141;
          }
          char v80 = sub_1C1520A9C();
          sub_1C015F808(v44, v43, 0);
          sub_1C015F808(v41, v40, 0);
          sub_1C015FB90(v41, v40, 0);
          sub_1C015FB90(v44, v43, 0);
          if ((v80 & 1) == 0) {
            goto LABEL_5;
          }
        }
LABEL_142:
        uint64_t v67 = *(int *)(v98 + 28);
        id v47 = (unsigned __int8 *)v107;
        uint64_t v68 = (uint64_t)v108 + v67;
        uint64_t v10 = v100;
        uint64_t v69 = v100 + *(int *)(v99 + 48);
        sub_1C02CDE74(v107 + v67, v100, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
        sub_1C02CDE74(v68, v69, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
        sub_1C015F820();
        uint64_t v71 = v70;
        uint64_t v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 48);
        if (v72(v10, 1, v70) == 1)
        {
          if (v72(v69, 1, v71) == 1)
          {
LABEL_172:
            sub_1BFEFE988(v10, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
            sub_1BFEFE988((uint64_t)v47, type metadata accessor for FormatDerivedDataResultOptionReference);
            swift_bridgeObjectRelease();
            sub_1BFEFE988((uint64_t)v108, type metadata accessor for FormatDerivedDataResultOptionReference);
            sub_1C02CDE74(*(void *)(*v95 + 48) + v102, v96, type metadata accessor for FormatDerivedDataResultOptionReference);
            return 0;
          }
LABEL_147:
          sub_1C02CDE18(v10, (unint64_t *)&qword_1EA197250, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOptionReferenceResolution);
          goto LABEL_5;
        }
        uint64_t v73 = v97;
        sub_1C02CDE74(v10, v97, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
        if (v72(v69, 1, v71) == 1)
        {
          sub_1BFEFE988(v73, (uint64_t (*)(void))sub_1C0178190);
          goto LABEL_147;
        }
        uint64_t v74 = v94;
        sub_1C02CDEDC(v69, v94, (uint64_t (*)(void))sub_1C0178190);
        unint64_t v46 = (unint64_t)v91;
        uint64_t v75 = (uint64_t)&v91[*(int *)(v92 + 48)];
        sub_1C02CDEDC(v73, (uint64_t)v91, (uint64_t (*)(void))sub_1C0178190);
        sub_1C02CDE74(v74, v75, (uint64_t (*)(void))sub_1C0178190);
        CFTimeInterval v76 = *v89;
        uint64_t v77 = v93;
        unsigned int v78 = (*v89)(v46, 1, v93);
        uint64_t v79 = (uint64_t)v90;
        if (v78 == 1)
        {
          sub_1BFEFE988(v74, (uint64_t (*)(void))sub_1C0178190);
          if (v76(v75, 1, v77) == 1)
          {
LABEL_171:
            sub_1BFEFE988(v46, (uint64_t (*)(void))sub_1C0178190);
            goto LABEL_172;
          }
LABEL_156:
          sub_1C02CDE18(v46, (unint64_t *)&qword_1EA196BD8, (void (*)(uint64_t))sub_1C0178190);
        }
        else
        {
          sub_1C02CDE74(v46, (uint64_t)v90, (uint64_t (*)(void))sub_1C0178190);
          if (v76(v75, 1, v77) == 1)
          {
            sub_1BFEFE988(v74, (uint64_t (*)(void))sub_1C0178190);
            sub_1BFEFE988(v79, type metadata accessor for FormatVersionRequirement);
            goto LABEL_156;
          }
          uint64_t v81 = (uint64_t)v88;
          sub_1C02CDEDC(v75, (uint64_t)v88, type metadata accessor for FormatVersionRequirement);
          char v82 = sub_1C02F0BB4(v79, v81);
          sub_1BFEFE988(v81, type metadata accessor for FormatVersionRequirement);
          sub_1BFEFE988(v74, (uint64_t (*)(void))sub_1C0178190);
          sub_1BFEFE988(v79, type metadata accessor for FormatVersionRequirement);
          sub_1BFEFE988(v46, (uint64_t (*)(void))sub_1C0178190);
          if (v82) {
            goto LABEL_172;
          }
        }
        sub_1BFEFE988(v10, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
        goto LABEL_5;
      }
      unint64_t v46 = 0;
      id v47 = (unsigned __int8 *)(v111 + 48);
      uint64_t v48 = (unsigned __int8 *)(v33 + 48);
      while (1)
      {
        if (v46 >= *(void *)(v111 + 16))
        {
          __break(1u);
          goto LABEL_171;
        }
        uint64_t v51 = *((void *)v48 - 2);
        unint64_t v50 = *((void *)v48 - 1);
        uint64_t v10 = *v48;
        uint64_t v52 = *((void *)v47 - 2);
        unint64_t v53 = *((void *)v47 - 1);
        unsigned int v54 = *v47;
        if (!(v10 >> 6))
        {
          if (v54 >= 0x40)
          {
LABEL_136:
            sub_1C00F5ACC(*((void *)v47 - 2), *((void *)v47 - 1), *v47);
            sub_1C00F5ACC(v51, v50, v10);
            uint64_t v61 = v51;
            unint64_t v62 = v50;
            unsigned __int8 v63 = v10;
            goto LABEL_165;
          }
          if (v51 == v52 && v50 == v53)
          {
            sub_1C00F5ACC(*((void *)v48 - 2), *((void *)v48 - 1), *v47);
            sub_1C00F5ACC(v51, v50, v10);
            sub_1C00F5AEC(v51, v50, v10);
            sub_1C00F5AEC(v51, v50, v54);
          }
          else
          {
            char v58 = sub_1C1520A9C();
            sub_1C00F5ACC(v52, v53, v54);
            sub_1C00F5ACC(v51, v50, v10);
            sub_1C00F5AEC(v51, v50, v10);
            sub_1C00F5AEC(v52, v53, v54);
            if ((v58 & 1) == 0) {
              goto LABEL_5;
            }
          }
          if ((v10 ^ v54)) {
            goto LABEL_5;
          }
          goto LABEL_26;
        }
        if (v10 >> 6 != 1) {
          break;
        }
        if ((v54 & 0xC0) != 0x40) {
          goto LABEL_136;
        }
        switch(v50)
        {
          case 0uLL:
            if (v53) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 0, *v47);
            sub_1C00F5ACC(v52, 0, v54);
            sub_1C00F5ACC(v52, 0, v54);
            sub_1C00F5ACC(v51, 0, v10);
            sub_1BFF8F648(v51, 0);
            sub_1BFF8F648(v52, 0);
            sub_1C00F5AEC(v51, 0, v10);
            sub_1C00F5AEC(v52, 0, v54);
            sub_1C00F5AEC(v52, 0, v54);
            sub_1C00F5AEC(v51, 0, v10);
            sub_1C00F5AEC(v52, 0, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 0;
            goto LABEL_24;
          case 1uLL:
            if (v53 != 1) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 1uLL, *v47);
            sub_1C00F5ACC(v52, 1uLL, v54);
            sub_1C00F5ACC(v52, 1uLL, v54);
            sub_1C00F5ACC(v51, 1uLL, v10);
            sub_1BFF8F648(v51, 1uLL);
            sub_1BFF8F648(v52, 1uLL);
            sub_1C00F5AEC(v51, 1uLL, v10);
            sub_1C00F5AEC(v52, 1uLL, v54);
            sub_1C00F5AEC(v52, 1uLL, v54);
            sub_1C00F5AEC(v51, 1uLL, v10);
            sub_1C00F5AEC(v52, 1uLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 1;
            goto LABEL_24;
          case 2uLL:
            if (v53 != 2) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 2uLL, *v47);
            sub_1C00F5ACC(v52, 2uLL, v54);
            sub_1C00F5ACC(v52, 2uLL, v54);
            sub_1C00F5ACC(v51, 2uLL, v10);
            sub_1BFF8F648(v51, 2uLL);
            sub_1BFF8F648(v52, 2uLL);
            sub_1C00F5AEC(v51, 2uLL, v10);
            sub_1C00F5AEC(v52, 2uLL, v54);
            sub_1C00F5AEC(v52, 2uLL, v54);
            sub_1C00F5AEC(v51, 2uLL, v10);
            sub_1C00F5AEC(v52, 2uLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 2;
            goto LABEL_24;
          case 3uLL:
            if (v53 != 3) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 3uLL, *v47);
            sub_1C00F5ACC(v52, 3uLL, v54);
            sub_1C00F5ACC(v52, 3uLL, v54);
            sub_1C00F5ACC(v51, 3uLL, v10);
            sub_1BFF8F648(v51, 3uLL);
            sub_1BFF8F648(v52, 3uLL);
            sub_1C00F5AEC(v51, 3uLL, v10);
            sub_1C00F5AEC(v52, 3uLL, v54);
            sub_1C00F5AEC(v52, 3uLL, v54);
            sub_1C00F5AEC(v51, 3uLL, v10);
            sub_1C00F5AEC(v52, 3uLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 3;
            goto LABEL_24;
          case 4uLL:
            if (v53 != 4) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 4uLL, *v47);
            sub_1C00F5ACC(v52, 4uLL, v54);
            sub_1C00F5ACC(v52, 4uLL, v54);
            sub_1C00F5ACC(v51, 4uLL, v10);
            sub_1BFF8F648(v51, 4uLL);
            sub_1BFF8F648(v52, 4uLL);
            sub_1C00F5AEC(v51, 4uLL, v10);
            sub_1C00F5AEC(v52, 4uLL, v54);
            sub_1C00F5AEC(v52, 4uLL, v54);
            sub_1C00F5AEC(v51, 4uLL, v10);
            sub_1C00F5AEC(v52, 4uLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 4;
            goto LABEL_24;
          case 5uLL:
            if (v53 != 5) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 5uLL, *v47);
            sub_1C00F5ACC(v52, 5uLL, v54);
            sub_1C00F5ACC(v52, 5uLL, v54);
            sub_1C00F5ACC(v51, 5uLL, v10);
            sub_1BFF8F648(v51, 5uLL);
            sub_1BFF8F648(v52, 5uLL);
            sub_1C00F5AEC(v51, 5uLL, v10);
            sub_1C00F5AEC(v52, 5uLL, v54);
            sub_1C00F5AEC(v52, 5uLL, v54);
            sub_1C00F5AEC(v51, 5uLL, v10);
            sub_1C00F5AEC(v52, 5uLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 5;
            goto LABEL_24;
          case 6uLL:
            if (v53 != 6) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 6uLL, *v47);
            sub_1C00F5ACC(v52, 6uLL, v54);
            sub_1C00F5ACC(v52, 6uLL, v54);
            sub_1C00F5ACC(v51, 6uLL, v10);
            sub_1BFF8F648(v51, 6uLL);
            sub_1BFF8F648(v52, 6uLL);
            sub_1C00F5AEC(v51, 6uLL, v10);
            sub_1C00F5AEC(v52, 6uLL, v54);
            sub_1C00F5AEC(v52, 6uLL, v54);
            sub_1C00F5AEC(v51, 6uLL, v10);
            sub_1C00F5AEC(v52, 6uLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 6;
            goto LABEL_24;
          case 7uLL:
            if (v53 != 7) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 7uLL, *v47);
            sub_1C00F5ACC(v52, 7uLL, v54);
            sub_1C00F5ACC(v52, 7uLL, v54);
            sub_1C00F5ACC(v51, 7uLL, v10);
            sub_1BFF8F648(v51, 7uLL);
            sub_1BFF8F648(v52, 7uLL);
            sub_1C00F5AEC(v51, 7uLL, v10);
            sub_1C00F5AEC(v52, 7uLL, v54);
            sub_1C00F5AEC(v52, 7uLL, v54);
            sub_1C00F5AEC(v51, 7uLL, v10);
            sub_1C00F5AEC(v52, 7uLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 7;
            goto LABEL_24;
          case 8uLL:
            if (v53 != 8) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 8uLL, *v47);
            sub_1C00F5ACC(v52, 8uLL, v54);
            sub_1C00F5ACC(v52, 8uLL, v54);
            sub_1C00F5ACC(v51, 8uLL, v10);
            sub_1BFF8F648(v51, 8uLL);
            sub_1BFF8F648(v52, 8uLL);
            sub_1C00F5AEC(v51, 8uLL, v10);
            sub_1C00F5AEC(v52, 8uLL, v54);
            sub_1C00F5AEC(v52, 8uLL, v54);
            sub_1C00F5AEC(v51, 8uLL, v10);
            sub_1C00F5AEC(v52, 8uLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 8;
            goto LABEL_24;
          case 9uLL:
            if (v53 != 9) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 9uLL, *v47);
            sub_1C00F5ACC(v52, 9uLL, v54);
            sub_1C00F5ACC(v52, 9uLL, v54);
            sub_1C00F5ACC(v51, 9uLL, v10);
            sub_1BFF8F648(v51, 9uLL);
            sub_1BFF8F648(v52, 9uLL);
            sub_1C00F5AEC(v51, 9uLL, v10);
            sub_1C00F5AEC(v52, 9uLL, v54);
            sub_1C00F5AEC(v52, 9uLL, v54);
            sub_1C00F5AEC(v51, 9uLL, v10);
            sub_1C00F5AEC(v52, 9uLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 9;
            goto LABEL_24;
          case 0xAuLL:
            if (v53 != 10) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 0xAuLL, *v47);
            sub_1C00F5ACC(v52, 0xAuLL, v54);
            sub_1C00F5ACC(v52, 0xAuLL, v54);
            sub_1C00F5ACC(v51, 0xAuLL, v10);
            sub_1BFF8F648(v51, 0xAuLL);
            sub_1BFF8F648(v52, 0xAuLL);
            sub_1C00F5AEC(v51, 0xAuLL, v10);
            sub_1C00F5AEC(v52, 0xAuLL, v54);
            sub_1C00F5AEC(v52, 0xAuLL, v54);
            sub_1C00F5AEC(v51, 0xAuLL, v10);
            sub_1C00F5AEC(v52, 0xAuLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 10;
            goto LABEL_24;
          case 0xBuLL:
            if (v53 != 11) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 0xBuLL, *v47);
            sub_1C00F5ACC(v52, 0xBuLL, v54);
            sub_1C00F5ACC(v52, 0xBuLL, v54);
            sub_1C00F5ACC(v51, 0xBuLL, v10);
            sub_1BFF8F648(v51, 0xBuLL);
            sub_1BFF8F648(v52, 0xBuLL);
            sub_1C00F5AEC(v51, 0xBuLL, v10);
            sub_1C00F5AEC(v52, 0xBuLL, v54);
            sub_1C00F5AEC(v52, 0xBuLL, v54);
            sub_1C00F5AEC(v51, 0xBuLL, v10);
            sub_1C00F5AEC(v52, 0xBuLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 11;
            goto LABEL_24;
          case 0xCuLL:
            if (v53 != 12) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 0xCuLL, *v47);
            sub_1C00F5ACC(v52, 0xCuLL, v54);
            sub_1C00F5ACC(v52, 0xCuLL, v54);
            sub_1C00F5ACC(v51, 0xCuLL, v10);
            sub_1BFF8F648(v51, 0xCuLL);
            sub_1BFF8F648(v52, 0xCuLL);
            sub_1C00F5AEC(v51, 0xCuLL, v10);
            sub_1C00F5AEC(v52, 0xCuLL, v54);
            sub_1C00F5AEC(v52, 0xCuLL, v54);
            sub_1C00F5AEC(v51, 0xCuLL, v10);
            sub_1C00F5AEC(v52, 0xCuLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 12;
            goto LABEL_24;
          case 0xDuLL:
            if (v53 != 13) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 0xDuLL, *v47);
            sub_1C00F5ACC(v52, 0xDuLL, v54);
            sub_1C00F5ACC(v52, 0xDuLL, v54);
            sub_1C00F5ACC(v51, 0xDuLL, v10);
            sub_1BFF8F648(v51, 0xDuLL);
            sub_1BFF8F648(v52, 0xDuLL);
            sub_1C00F5AEC(v51, 0xDuLL, v10);
            sub_1C00F5AEC(v52, 0xDuLL, v54);
            sub_1C00F5AEC(v52, 0xDuLL, v54);
            sub_1C00F5AEC(v51, 0xDuLL, v10);
            sub_1C00F5AEC(v52, 0xDuLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 13;
            goto LABEL_24;
          case 0xEuLL:
            if (v53 != 14) {
              goto LABEL_138;
            }
            sub_1C00F5ACC(*((void *)v47 - 2), 0xEuLL, *v47);
            sub_1C00F5ACC(v52, 0xEuLL, v54);
            sub_1C00F5ACC(v52, 0xEuLL, v54);
            sub_1C00F5ACC(v51, 0xEuLL, v10);
            sub_1BFF8F648(v51, 0xEuLL);
            sub_1BFF8F648(v52, 0xEuLL);
            sub_1C00F5AEC(v51, 0xEuLL, v10);
            sub_1C00F5AEC(v52, 0xEuLL, v54);
            sub_1C00F5AEC(v52, 0xEuLL, v54);
            sub_1C00F5AEC(v51, 0xEuLL, v10);
            sub_1C00F5AEC(v52, 0xEuLL, v54);
            uint64_t v55 = v51;
            unint64_t v56 = 14;
LABEL_24:
            unsigned __int8 v49 = v10;
            goto LABEL_25;
          default:
            if (v53 < 0xF)
            {
LABEL_138:
              sub_1C00F5ACC(*((void *)v47 - 2), *((void *)v47 - 1), *v47);
              sub_1C00F5ACC(v51, v50, v10);
              sub_1C00F5ACC(v52, v53, v54);
              sub_1C00F5ACC(v51, v50, v10);
              sub_1C00F5ACC(v52, v53, v54);
              sub_1C00F5ACC(v51, v50, v10);
              sub_1C00F5ACC(v52, v53, v54);
              sub_1C00F5ACC(v51, v50, v10);
              sub_1BFF8F648(v51, v50);
              sub_1BFF8F648(v52, v53);
              sub_1C00F5AEC(v51, v50, v10);
              sub_1C00F5AEC(v52, v53, v54);
              sub_1C00F5AEC(v52, v53, v54);
              sub_1C00F5AEC(v51, v50, v10);
              sub_1C00F5AEC(v52, v53, v54);
              uint64_t v64 = v51;
              unint64_t v65 = v50;
              unsigned __int8 v66 = v10;
              goto LABEL_166;
            }
            if (v51 == v52 && v50 == v53) {
              char v59 = 1;
            }
            else {
              char v59 = sub_1C1520A9C();
            }
            sub_1C00F5ACC(v52, v53, v54);
            sub_1C00F5ACC(v51, v50, v10);
            sub_1C00F5ACC(v52, v53, v54);
            sub_1C00F5ACC(v51, v50, v10);
            sub_1C00F5ACC(v52, v53, v54);
            sub_1C00F5ACC(v51, v50, v10);
            sub_1C00F5ACC(v52, v53, v54);
            sub_1C00F5ACC(v51, v50, v10);
            sub_1BFF8F648(v51, v50);
            sub_1BFF8F648(v52, v53);
            sub_1C00F5AEC(v51, v50, v10);
            sub_1C00F5AEC(v52, v53, v54);
            sub_1C00F5AEC(v52, v53, v54);
            sub_1C00F5AEC(v51, v50, v10);
            sub_1C00F5AEC(v52, v53, v54);
            sub_1C00F5AEC(v51, v50, v10);
            if ((v59 & 1) == 0) {
              goto LABEL_5;
            }
            break;
        }
LABEL_26:
        ++v46;
        v48 += 24;
        v47 += 24;
        if (v110 == v46) {
          goto LABEL_12;
        }
      }
      if (!(v50 | v51) && v10 == 128)
      {
        if ((v54 & 0xC0) != 0x80 || v53 | v52 || v54 != 128)
        {
          sub_1C00F5ACC(*((void *)v47 - 2), *((void *)v47 - 1), *v47);
          uint64_t v61 = 0;
          goto LABEL_164;
        }
        sub_1C00F5AEC(0, 0, 0x80u);
        uint64_t v55 = 0;
        goto LABEL_130;
      }
      if (v51 == 1 && !v50 && v10 == 128)
      {
        if ((v54 & 0xC0) != 0x80 || v52 != 1 || v53 || v54 != 128)
        {
          sub_1C00F5ACC(*((void *)v47 - 2), *((void *)v47 - 1), *v47);
          uint64_t v61 = 1;
          goto LABEL_164;
        }
        sub_1C00F5AEC(1, 0, 0x80u);
        uint64_t v55 = 1;
        goto LABEL_130;
      }
      if (v51 == 2 && !v50 && v10 == 128)
      {
        if ((v54 & 0xC0) != 0x80 || v52 != 2 || v53 || v54 != 128)
        {
          sub_1C00F5ACC(*((void *)v47 - 2), *((void *)v47 - 1), *v47);
          uint64_t v61 = 2;
          goto LABEL_164;
        }
        sub_1C00F5AEC(2, 0, 0x80u);
        uint64_t v55 = 2;
        goto LABEL_130;
      }
      if (v51 == 3 && !v50 && v10 == 128)
      {
        if ((v54 & 0xC0) != 0x80 || v52 != 3 || v53 || v54 != 128)
        {
          sub_1C00F5ACC(*((void *)v47 - 2), *((void *)v47 - 1), *v47);
          uint64_t v61 = 3;
          goto LABEL_164;
        }
        sub_1C00F5AEC(3, 0, 0x80u);
        uint64_t v55 = 3;
        goto LABEL_130;
      }
      if (v51 == 4 && !v50 && v10 == 128)
      {
        if ((v54 & 0xC0) != 0x80 || v52 != 4 || v53 || v54 != 128)
        {
          sub_1C00F5ACC(*((void *)v47 - 2), *((void *)v47 - 1), *v47);
          uint64_t v61 = 4;
          goto LABEL_164;
        }
        sub_1C00F5AEC(4, 0, 0x80u);
        uint64_t v55 = 4;
        goto LABEL_130;
      }
      if (v51 == 5 && !v50 && v10 == 128)
      {
        if ((v54 & 0xC0) != 0x80 || v52 != 5 || v53 || v54 != 128)
        {
          sub_1C00F5ACC(*((void *)v47 - 2), *((void *)v47 - 1), *v47);
          uint64_t v61 = 5;
          goto LABEL_164;
        }
        sub_1C00F5AEC(5, 0, 0x80u);
        uint64_t v55 = 5;
        goto LABEL_130;
      }
      if ((v54 & 0xC0) == 0x80 && v52 == 6 && !v53 && v54 == 128)
      {
        sub_1C00F5AEC(6, 0, 0x80u);
        uint64_t v55 = 6;
LABEL_130:
        unint64_t v56 = 0;
        unsigned __int8 v49 = 0x80;
LABEL_25:
        sub_1C00F5AEC(v55, v56, v49);
        goto LABEL_26;
      }
      sub_1C00F5ACC(*((void *)v47 - 2), *((void *)v47 - 1), *v47);
      uint64_t v61 = 6;
LABEL_164:
      unint64_t v62 = 0;
      unsigned __int8 v63 = 0x80;
LABEL_165:
      sub_1C00F5AEC(v61, v62, v63);
      uint64_t v64 = v52;
      unint64_t v65 = v53;
      unsigned __int8 v66 = v54;
LABEL_166:
      sub_1C00F5AEC(v64, v65, v66);
LABEL_5:
      uint64_t v31 = v107;
      sub_1BFEFE988(v107, type metadata accessor for FormatDerivedDataResultOptionReference);
      uint64_t v30 = v104;
      unint64_t v29 = (v109 + 1) & v103;
      if (((*(void *)(v106 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        unint64_t v83 = (v109 + 1) & v103;
        swift_bridgeObjectRelease();
        a1 = v96;
        uint64_t v3 = v95;
        goto LABEL_169;
      }
    }
  }
  unint64_t v83 = v29;
  swift_bridgeObjectRelease();
LABEL_169:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v85 = (uint64_t)v108;
  uint64_t v86 = v101;
  sub_1C02CDE74((uint64_t)v108, v101, type metadata accessor for FormatDerivedDataResultOptionReference);
  v112[0] = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1C02C2254(v86, v83, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v112[0];
  swift_bridgeObjectRelease();
  sub_1C02CDEDC(v85, a1, type metadata accessor for FormatDerivedDataResultOptionReference);
  return 1;
}

uint64_t sub_1C02B8D08(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = *v4;
  sub_1C1520DBC();
  switch(a4)
  {
    case 5:
      sub_1C1520DCC();
      swift_bridgeObjectRetain();
      break;
    default:
      sub_1C1520DCC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      break;
  }
  uint64_t v10 = sub_1C1520E0C();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v34 = a1;
  if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1C02CDD4C(a2, a3, a4);
    sub_1C02C3FD8(a2, a3, a4, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v35;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v34 = a2;
    *(void *)(v34 + 8) = a3;
    uint64_t result = 1;
    *(unsigned char *)(v34 + 16) = a4;
    return result;
  }
  uint64_t v13 = ~v11;
  uint64_t v14 = *(void *)(v9 + 48);
  BOOL v16 = a4 == 5 && (a3 | a2) == 0;
  while (2)
  {
    uint64_t v17 = (uint64_t *)(v14 + 24 * v12);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    switch(*((unsigned char *)v17 + 16))
    {
      case 1:
        if (a4 != 1) {
          goto LABEL_11;
        }
        BOOL v21 = v18 == a2 && v19 == a3;
        if (!v21 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        uint64_t v25 = a2;
        uint64_t v26 = a3;
        unsigned __int8 v27 = 1;
        goto LABEL_55;
      case 2:
        if (a4 != 2) {
          goto LABEL_11;
        }
        BOOL v22 = v18 == a2 && v19 == a3;
        if (!v22 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        uint64_t v25 = a2;
        uint64_t v26 = a3;
        unsigned __int8 v27 = 2;
        goto LABEL_55;
      case 3:
        if (a4 != 3) {
          goto LABEL_11;
        }
        BOOL v23 = v18 == a2 && v19 == a3;
        if (!v23 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        uint64_t v25 = a2;
        uint64_t v26 = a3;
        unsigned __int8 v27 = 3;
        goto LABEL_55;
      case 4:
        if (a4 != 4) {
          goto LABEL_11;
        }
        BOOL v24 = v18 == a2 && v19 == a3;
        if (!v24 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        uint64_t v25 = a2;
        uint64_t v26 = a3;
        unsigned __int8 v27 = 4;
        goto LABEL_55;
      case 5:
        if (!v16) {
          goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        goto LABEL_56;
      default:
        if (a4 || (v18 == a2 ? (BOOL v20 = v19 == a3) : (BOOL v20 = 0), !v20 && (sub_1C1520A9C() & 1) == 0))
        {
LABEL_11:
          unint64_t v12 = (v12 + 1) & v13;
          if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
            goto LABEL_48;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        uint64_t v25 = a2;
        uint64_t v26 = a3;
        unsigned __int8 v27 = 0;
LABEL_55:
        sub_1C00BB39C(v25, v26, v27);
LABEL_56:
        uint64_t v30 = *(void *)(*v4 + 48) + 24 * v12;
        uint64_t v31 = *(void *)v30;
        uint64_t v32 = *(void *)(v30 + 8);
        *(void *)uint64_t v34 = *(void *)v30;
        *(void *)(v34 + 8) = v32;
        unsigned __int8 v33 = *(unsigned char *)(v30 + 16);
        *(unsigned char *)(v34 + 16) = v33;
        sub_1C02CDD4C(v31, v32, v33);
        return 0;
    }
  }
}

uint64_t sub_1C02B90E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v51 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v42 - v12);
  MEMORY[0x1F4188790](v14);
  BOOL v16 = (char *)&v42 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v42 - v18;
  MEMORY[0x1F4188790](v20);
  BOOL v22 = (uint64_t *)((char *)&v42 - v21);
  uint64_t v23 = *v3;
  sub_1C1520DBC();
  uint64_t v52 = a2;
  sub_1C02CDE74(a2, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v45 = a1;
  uint64_t v43 = v19;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C02CDEDC((uint64_t)v22, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    uint64_t v53 = *v22;
    swift_bridgeObjectRetain();
    SportsDataVisualization.identifier.getter();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v25 = sub_1C1520E0C();
  uint64_t v26 = -1 << *(unsigned char *)(v23 + 32);
  unint64_t v27 = v25 & ~v26;
  uint64_t v48 = v23 + 56;
  uint64_t v28 = *(void *)(v23 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27;
  uint64_t v44 = v3;
  if ((v28 & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v37 = v44;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = v52;
    uint64_t v40 = (uint64_t)v43;
    sub_1C02CDE74(v52, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v54 = *v37;
    *uint64_t v37 = 0x8000000000000000;
    sub_1C02C42CC(v40, v27, isUniquelyReferenced_nonNull_native);
    *uint64_t v37 = v54;
    swift_bridgeObjectRelease();
    sub_1C02CDEDC(v39, v45, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    return 1;
  }
  uint64_t v46 = ~v26;
  uint64_t v29 = *(void *)(v50 + 72);
  uint64_t v49 = v23;
  uint64_t v50 = v29;
  while (1)
  {
    uint64_t v30 = *(void *)(v23 + 48);
    unint64_t v47 = v50 * v27;
    sub_1C02CDE74(v30 + v50 * v27, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    sub_1C02CDE74((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1C02CDEDC((uint64_t)v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
      uint64_t v54 = 0x3A636972656E6567;
      unint64_t v55 = 0xE90000000000003ALL;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v31 = v54;
      unint64_t v32 = v55;
      sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    }
    else
    {
      uint64_t v53 = *v13;
      uint64_t v54 = 0x3A3A7374726F7073;
      unint64_t v55 = 0xE800000000000000;
      SportsDataVisualization.identifier.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v31 = v54;
      unint64_t v32 = v55;
    }
    unsigned __int8 v33 = v51;
    sub_1C02CDE74(v52, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_1C02CDEDC((uint64_t)v33, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    uint64_t v54 = 0x3A636972656E6567;
    unint64_t v55 = 0xE90000000000003ALL;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v34 = v54;
    unint64_t v35 = v55;
    sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    if (v31 == v34) {
      goto LABEL_13;
    }
LABEL_14:
    char v36 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFEFE988((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (v36) {
      goto LABEL_18;
    }
    unint64_t v27 = (v27 + 1) & v46;
    uint64_t v23 = v49;
    if (((*(void *)(v48 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v53 = *v33;
  uint64_t v54 = 0x3A3A7374726F7073;
  unint64_t v55 = 0xE800000000000000;
  SportsDataVisualization.identifier.getter();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v35 = v55;
  if (v31 != v54) {
    goto LABEL_14;
  }
LABEL_13:
  if (v32 != v35) {
    goto LABEL_14;
  }
  swift_bridgeObjectRelease_n();
  sub_1BFEFE988((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_18:
  swift_bridgeObjectRelease();
  sub_1BFEFE988(v52, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1C02CDE74(*(void *)(*v44 + 48) + v47, v45, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  return 0;
}

uint64_t sub_1C02B9780(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for WebEmbedDatastoreCacheKey();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  sub_1C0F9A008((uint64_t)v20);
  uint64_t v11 = sub_1C1520E0C();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1C02CDE74(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
      char v16 = sub_1C0F9C380((uint64_t)v9, a2);
      sub_1BFEFE988((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1BFEFE988(a2, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1C02CDE74(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C02CDE74(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C02C4930((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20[0];
    swift_bridgeObjectRelease();
    sub_1C02CDEDC(a2, a1, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    return 1;
  }
}

uint64_t sub_1C02B9A04(unsigned char *a1, char a2)
{
  uint64_t v4 = *v2;
  sub_1C1520DBC();
  unsigned int v18 = a2 & 1;
  if (a2) {
    uint64_t v5 = 0x746C7561666564;
  }
  else {
    uint64_t v5 = 1685217635;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1C1520E0C();
  uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      uint64_t v11 = *(unsigned char *)(*(void *)(v4 + 48) + v9) ? 0x746C7561666564 : 1685217635;
      unint64_t v12 = *(unsigned char *)(*(void *)(v4 + 48) + v9) ? 0xE700000000000000 : 0xE400000000000000;
      if (v11 == v5 && v12 == v6) {
        break;
      }
      char v14 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_23;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    char v16 = *(unsigned char *)(*(void *)(*v19 + 48) + v9);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v19;
    *uint64_t v19 = 0x8000000000000000;
    char v16 = v18;
    sub_1C02C4C20(v18, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v19 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v16;
  return result;
}

uint64_t sub_1C02B9C54(unsigned char *a1, uint64_t a2)
{
  return sub_1C02B9C7C(a1, a2, &qword_1EA1991B8, (void (*)(void))sub_1C02CDC74);
}

uint64_t sub_1C02B9C7C(unsigned char *a1, uint64_t a2, unint64_t *a3, void (*a4)(void))
{
  uint64_t v9 = *v4;
  sub_1C1520DBC();
  sub_1C1520DCC();
  uint64_t v10 = sub_1C1520E0C();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1C02C52D4(a2, v12, isUniquelyReferenced_nonNull_native, a3, a4);
    uint64_t *v4 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v13 = *(void *)(v9 + 48);
  if (*(unsigned __int8 *)(v13 + v12) != a2)
  {
    uint64_t v14 = ~v11;
    do
    {
      unint64_t v12 = (v12 + 1) & v14;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v13 + v12) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v4 + 48) + v12);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1C02B9DC4(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C044FF80();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C02C5448(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_30;
  }
  uint64_t v9 = ~v7;
  while (2)
  {
    unint64_t v10 = 0xE600000000000000;
    uint64_t v11 = 0x74756F79616CLL;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 1:
        uint64_t v11 = 0x726564616568;
        break;
      case 2:
        uint64_t v11 = 0x7265746F6F66;
        break;
      case 3:
        unint64_t v10 = 0xE700000000000000;
        uint64_t v11 = 0x6C6C6177796170;
        break;
      case 4:
        unint64_t v10 = 0xE500000000000000;
        uint64_t v11 = 0x656D656874;
        break;
      case 5:
        unint64_t v10 = 0xE700000000000000;
        uint64_t v11 = 0x7972617262696CLL;
        break;
      case 6:
        uint64_t v11 = 0x756F72676B636162;
        unint64_t v10 = 0xEA0000000000646ELL;
        break;
      default:
        break;
    }
    unint64_t v12 = 0xE600000000000000;
    uint64_t v13 = 0x74756F79616CLL;
    switch((char)a2)
    {
      case 1:
        uint64_t v14 = 1684104552;
        goto LABEL_13;
      case 2:
        uint64_t v14 = 1953460070;
LABEL_13:
        if (v11 != (v14 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
          goto LABEL_22;
        }
        goto LABEL_21;
      case 3:
        unint64_t v12 = 0xE700000000000000;
        if (v11 != 0x6C6C6177796170) {
          goto LABEL_22;
        }
        goto LABEL_21;
      case 4:
        unint64_t v12 = 0xE500000000000000;
        if (v11 != 0x656D656874) {
          goto LABEL_22;
        }
        goto LABEL_21;
      case 5:
        unint64_t v12 = 0xE700000000000000;
        uint64_t v13 = 0x7972617262696CLL;
        goto LABEL_20;
      case 6:
        unint64_t v12 = 0xEA0000000000646ELL;
        if (v11 != 0x756F72676B636162) {
          goto LABEL_22;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (v11 != v13) {
          goto LABEL_22;
        }
LABEL_21:
        if (v10 != v12)
        {
LABEL_22:
          char v15 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v15) {
            goto LABEL_29;
          }
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_27;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_29:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v8);
LABEL_30:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1C02BA0F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = *v4;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  sub_1C0EB9574();
  uint64_t v9 = sub_1C1520E0C();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_73:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1C02CDCC8(a2, a3, a4);
    sub_1C02C5790(a2, a3, a4, v11, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v33;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(void *)(a1 + 8) = a3;
    uint64_t result = 1;
    *(unsigned char *)(a1 + 16) = a4;
    return result;
  }
  uint64_t v12 = ~v10;
  uint64_t v13 = *(void *)(v8 + 48);
  while (2)
  {
    uint64_t v14 = (uint64_t *)(v13 + 24 * v11);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    switch(*((unsigned char *)v14 + 16))
    {
      case 1:
        if (a4 != 1) {
          goto LABEL_4;
        }
        goto LABEL_11;
      case 2:
        if (a4 == 2) {
          goto LABEL_11;
        }
        goto LABEL_4;
      case 3:
        if (a4 == 3) {
          goto LABEL_11;
        }
        goto LABEL_4;
      case 4:
        if (a4 != 4) {
          goto LABEL_4;
        }
        BOOL v18 = v15 == a2 && v16 == a3;
        if (!v18 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_4;
        }
        a4 = 4;
        goto LABEL_81;
      case 5:
        if (a4 != 5) {
          goto LABEL_4;
        }
        BOOL v19 = v15 == a2 && v16 == a3;
        if (!v19 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_4;
        }
        a4 = 5;
        goto LABEL_81;
      case 6:
        if (a4 != 6) {
          goto LABEL_4;
        }
        BOOL v20 = v15 == a2 && v16 == a3;
        if (!v20 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_4;
        }
        a4 = 6;
        goto LABEL_81;
      case 7:
        if (a4 != 7) {
          goto LABEL_4;
        }
        BOOL v21 = v15 == a2 && v16 == a3;
        if (!v21 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_4;
        }
        a4 = 7;
        goto LABEL_81;
      case 8:
        if (a4 != 8) {
          goto LABEL_4;
        }
        BOOL v22 = v15 == a2 && v16 == a3;
        if (!v22 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_4;
        }
        a4 = 8;
        goto LABEL_81;
      case 9:
        if (a4 != 9) {
          goto LABEL_4;
        }
        BOOL v23 = v15 == a2 && v16 == a3;
        if (!v23 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_4;
        }
        a4 = 9;
        goto LABEL_81;
      case 0xA:
        if (a4 != 10) {
          goto LABEL_4;
        }
        BOOL v24 = v15 == a2 && v16 == a3;
        if (!v24 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_4;
        }
        a4 = 10;
        goto LABEL_81;
      case 0xB:
        if (a4 != 11) {
          goto LABEL_4;
        }
        BOOL v25 = v15 == a2 && v16 == a3;
        if (!v25 && (sub_1C1520A9C() & 1) == 0) {
          goto LABEL_4;
        }
        a4 = 11;
        goto LABEL_81;
      default:
        if (a4) {
          goto LABEL_4;
        }
LABEL_11:
        BOOL v17 = v15 == a2 && v16 == a3;
        if (!v17 && (sub_1C1520A9C() & 1) == 0)
        {
LABEL_4:
          unint64_t v11 = (v11 + 1) & v12;
          if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            goto LABEL_73;
          }
          continue;
        }
LABEL_81:
        swift_bridgeObjectRelease();
        sub_1C02CDCE0(a2, a3, a4);
        uint64_t v28 = *(void *)(*v4 + 48) + 24 * v11;
        uint64_t v29 = *(void *)v28;
        uint64_t v30 = *(void *)(v28 + 8);
        *(void *)a1 = *(void *)v28;
        *(void *)(a1 + 8) = v30;
        unsigned __int8 v31 = *(unsigned char *)(v28 + 16);
        *(unsigned char *)(a1 + 16) = v31;
        sub_1C02CDCC8(v29, v30, v31);
        return 0;
    }
  }
}

uint64_t sub_1C02BA4F8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C151D77C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C02CDA54((unint64_t *)&unk_1EA19C960, 255, MEMORY[0x1E4F7ADE8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1C151E47C();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    BOOL v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      BOOL v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1C02CDA54(&qword_1EA1968D0, 255, MEMORY[0x1E4F7ADE8]);
      char v21 = sub_1C151E5CC();
      BOOL v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    BOOL v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C02C5AB4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1C02BA824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  sub_1C1520DCC();
  sub_1C1520DCC();
  uint64_t v13 = sub_1C1520E0C();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v16 = v12 + 56;
  uint64_t v28 = v6;
  uint64_t v29 = a1;
  if ((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v17 = ~v14;
    uint64_t v18 = *(void *)(v12 + 48);
    while (1)
    {
      BOOL v20 = (void *)(v18 + 32 * v15);
      uint64_t v22 = v20[2];
      uint64_t v21 = v20[3];
      BOOL v23 = *v20 == a2 && v20[1] == a3;
      if (v23 || (sub_1C1520A9C()) && v22 == a4 && v21 == a5) {
        break;
      }
      unint64_t v15 = (v15 + 1) & v17;
      if (((*(void *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(*v28 + 48) + 32 * v15;
    uint64_t v27 = *(void *)(v26 + 8);
    *(void *)uint64_t v29 = *(void *)v26;
    *(void *)(v29 + 8) = v27;
    *(_OWORD *)(v29 + 16) = *(_OWORD *)(v26 + 16);
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v28;
    *uint64_t v28 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1C02C5D84(a2, a3, a4, a5, v15, isUniquelyReferenced_nonNull_native);
    *uint64_t v28 = v30;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v29 = a2;
    *(void *)(v29 + 8) = a3;
    uint64_t result = 1;
    *(void *)(v29 + 16) = a4;
    *(void *)(v29 + 24) = a5;
  }
  return result;
}

uint64_t sub_1C02BAA08(void *a1, void *a2)
{
  return sub_1C02BAA2C(a1, a2, (unint64_t *)&qword_1EB87A2C0, 0x1E4FB1EB0, (unint64_t *)&unk_1EA1968A8, &qword_1EA1968B8);
}

uint64_t sub_1C02BAA2C(void *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t v11 = v6;
  uint64_t v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0) {
      uint64_t v15 = *v6;
    }
    else {
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v16 = a2;
    uint64_t v17 = sub_1C152000C();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_1BFC39268(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C151FFFC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = sub_1C02BB3C0(v15, result + 1, a5, a3, a4, a6);
    uint64_t v43 = v29;
    unint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v30)
    {
      unint64_t v35 = a5;
      uint64_t v36 = v30 + 1;
      id v37 = v16;
      sub_1C02BFCC4(v36, v35, a3, a4, a6);
      uint64_t v31 = v43;
    }
    else
    {
      uint64_t v31 = v29;
      id v32 = v16;
    }
    sub_1C02C0A28((uint64_t)v16, v31);
    *uint64_t v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C151FB5C();
    uint64_t v20 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v40 = a4;
    if ((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      sub_1BFC39268(0, a3);
      id v22 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
      char v23 = sub_1C151FB6C();

      if (v23)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v27 = *(void **)(*(void *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        id v28 = v27;
        return 0;
      }
      uint64_t v24 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v24;
        if (((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        id v25 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
        char v26 = sub_1C151FB6C();

        if (v26) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    id v34 = a2;
    sub_1C02C5F3C((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    *uint64_t v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_1C02BAD18(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C151677C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C02CDA54(&qword_1EB85C780, 255, MEMORY[0x1E4F27DE8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1C151E47C();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    id v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1C02CDA54(&qword_1EB8711A0, 255, MEMORY[0x1E4F27DE8]);
      char v21 = sub_1C151E5CC();
      id v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C02C60F4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1C02BB044(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C1520E0C();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C02C63C4(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_20;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE800000000000000;
    uint64_t v10 = 0x64656C6261736964;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x64657375636F66;
        break;
      case 2:
        uint64_t v10 = 0x6867696C68676968;
        unint64_t v9 = 0xEB00000000646574;
        break;
      case 3:
        uint64_t v10 = 0x64657463656C6573;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE800000000000000;
    uint64_t v12 = 0x64656C6261736964;
    switch((char)a2)
    {
      case 1:
        unint64_t v11 = 0xE700000000000000;
        if (v10 == 0x64657375636F66) {
          goto LABEL_14;
        }
        goto LABEL_15;
      case 2:
        uint64_t v12 = 0x6867696C68676968;
        unint64_t v11 = 0xEB00000000646574;
        goto LABEL_11;
      case 3:
        if (v10 == 0x64657463656C6573) {
          goto LABEL_14;
        }
        goto LABEL_15;
      default:
LABEL_11:
        if (v10 != v12) {
          goto LABEL_15;
        }
LABEL_14:
        if (v9 != v11)
        {
LABEL_15:
          char v13 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_19;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_17;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_20:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1C02BB39C(uint64_t a1, uint64_t a2)
{
  return sub_1C02BB3C0(a1, a2, (unint64_t *)&qword_1EB85E028, (unint64_t *)&qword_1EB87A140, 0x1E4F7E538, (unint64_t *)&qword_1EB87A150);
}

uint64_t sub_1C02BB3C0(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_1C00BBFA8(0, a3, a4, a5, a6);
    uint64_t v10 = sub_1C152009C();
    uint64_t v23 = v10;
    sub_1C151FFEC();
    if (sub_1C152001C())
    {
      sub_1BFC39268(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_1C02BFCC4(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_1C151FB5C();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_1C152001C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v10;
}

uint64_t sub_1C02BB5E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EB87A350, (void (*)(void))sub_1BFDFD140);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1C02BB948);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1C02BB95C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EB86B460, (void (*)(void))sub_1C02CE2D0);
  uint64_t v3 = sub_1C152008C();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v13 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v10 = v13 + 2;
            if (v13 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v14 = v5[v10];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
                if (v16 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v5 = -1 << v16;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v14 = v5[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v10 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_28;
                  }
                  if (v10 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v14 = v5[v10];
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v10 = v15;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      unint64_t result = sub_1C02C06C4(*(void *)(*(void *)(v2 + 48) + 8 * v12), v3);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_1C02BBB48()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1BFEFFF68(0, (unint64_t *)&unk_1EB86B470);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  int64_t v5 = 0;
  uint64_t v6 = (uint64_t *)(v2 + 56);
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v28 = -1 << v7;
  uint64_t v29 = v1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_38;
    }
    if (v15 >= v10) {
      break;
    }
    unint64_t v16 = v6[v15];
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        break;
      }
      unint64_t v16 = v6[v5];
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          break;
        }
        unint64_t v16 = v6[v5];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v10) {
            break;
          }
          unint64_t v16 = v6[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v5 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v5 >= v10) {
                goto LABEL_33;
              }
              unint64_t v16 = v6[v5];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v5 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    uint64_t v19 = MEMORY[0x1C18C88D0](*(void *)(v4 + 40), v18, 4);
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C02BBDE4);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v11 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  if (v30 >= 64) {
    bzero((void *)(v2 + 56), 8 * v10);
  }
  else {
    *uint64_t v6 = v28;
  }
  uint64_t v1 = v29;
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BBE14()
{
  uint64_t v1 = *v0;
  sub_1C02CE270(0, &qword_1EA199210, (void (*)(void))sub_1C007C210);
  uint64_t v2 = sub_1C152008C();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v26 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v25 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v7 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v9 = 0;
    while (1)
    {
      if (v6)
      {
        unint64_t v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v12 = v11 | (v9 << 6);
      }
      else
      {
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v25) {
          goto LABEL_33;
        }
        unint64_t v14 = v26[v13];
        ++v9;
        if (!v14)
        {
          int64_t v9 = v13 + 1;
          if (v13 + 1 >= v25) {
            goto LABEL_33;
          }
          unint64_t v14 = v26[v9];
          if (!v14)
          {
            int64_t v9 = v13 + 2;
            if (v13 + 2 >= v25) {
              goto LABEL_33;
            }
            unint64_t v14 = v26[v9];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v25)
              {
LABEL_33:
                swift_release();
                uint64_t v24 = 1 << *(unsigned char *)(v1 + 32);
                if (v24 > 63) {
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v26 = -1 << v24;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v14 = v26[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v9 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_39;
                  }
                  if (v9 >= v25) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = v26[v9];
                  ++v15;
                  if (v14) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v9 = v15;
            }
          }
        }
LABEL_23:
        unint64_t v6 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
      }
      char v16 = *(unsigned char *)(*(void *)(v1 + 48) + v12);
      sub_1C1520DBC();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C1520E0C();
      uint64_t v17 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v18 = result & ~v17;
      unint64_t v19 = v18 >> 6;
      if (((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6))) != 0)
      {
        unint64_t v10 = __clz(__rbit64((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v20 = 0;
        unint64_t v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v22 = v19 == v21;
          if (v19 == v21) {
            unint64_t v19 = 0;
          }
          v20 |= v22;
          uint64_t v23 = *(void *)(v7 + 8 * v19);
        }
        while (v23 == -1);
        unint64_t v10 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      *(unsigned char *)(*(void *)(v3 + 48) + v10) = v16;
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_1C02BC184()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EB87A358, (void (*)(void))sub_1C007E638);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  unint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1C02BC574);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BC5A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, (unint64_t *)&unk_1EB87A360, (void (*)(void))sub_1C006A604);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  unint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1C02BC940);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BC958()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CDBDC();
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  int64_t v5 = 0;
  unint64_t v6 = (void *)(v2 + 56);
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_38;
    }
    if (v15 >= v10) {
      break;
    }
    unint64_t v16 = v6[v15];
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        break;
      }
      unint64_t v16 = v6[v5];
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          break;
        }
        unint64_t v16 = v6[v5];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v10) {
            break;
          }
          unint64_t v16 = v6[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v5 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v5 >= v10) {
                goto LABEL_33;
              }
              unint64_t v16 = v6[v5];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v5 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1C1520DBC();
    sub_1C1520DCC();
    uint64_t v19 = sub_1C1520E0C();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C02BCC00);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v11 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v6 = -1 << v27;
  }
  uint64_t v1 = v0;
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BCC34()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA199218, (void (*)(void))sub_1C02CE1DC);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_1C1520DBC();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C1520E0C();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BCF74()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, (unint64_t *)&unk_1EB8704B8, (void (*)(void))sub_1C02CDB88);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_40;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v31 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_41;
    }
    if (v15 >= v8) {
      break;
    }
    unint64_t v16 = v31[v15];
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v8) {
        break;
      }
      unint64_t v16 = v31[v10];
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v8) {
          break;
        }
        unint64_t v16 = v31[v10];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v8) {
            break;
          }
          unint64_t v16 = v31[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v10 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v10 >= v8) {
                goto LABEL_36;
              }
              unint64_t v16 = v31[v10];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v10 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    int64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_1C1520DBC();
    switch(v19)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
        sub_1C1520DCC();
        break;
      default:
        sub_1C1520DCC();
        sub_1C151E77C();
        break;
    }
    uint64_t v21 = sub_1C1520E0C();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x1C02BD37CLL);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v9 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    int64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *int64_t v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
  }
LABEL_36:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
  if (v29 > 63) {
    bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v31 = -1 << v29;
  }
  *(void *)(v2 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BD3C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA199198, (void (*)(void))sub_1C02CDB34);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v28 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v27 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v27) {
          goto LABEL_33;
        }
        unint64_t v15 = v28[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v27) {
            goto LABEL_33;
          }
          unint64_t v15 = v28[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v27) {
              goto LABEL_33;
            }
            unint64_t v15 = v28[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v27)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v28 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v28[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v27) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v28[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = v2;
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_1C1520DBC();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C1520E0C();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(unsigned char *)(*(void *)(v4 + 48) + v11) = v18;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v17;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BD740()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, (unint64_t *)&unk_1EB8902A8, (void (*)(void))sub_1C0081EF8);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_40;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v31 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_41;
    }
    if (v15 >= v8) {
      break;
    }
    unint64_t v16 = v31[v15];
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v8) {
        break;
      }
      unint64_t v16 = v31[v10];
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v8) {
          break;
        }
        unint64_t v16 = v31[v10];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v8) {
            break;
          }
          unint64_t v16 = v31[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v10 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v10 >= v8) {
                goto LABEL_36;
              }
              unint64_t v16 = v31[v10];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v10 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    char v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_1C1520DBC();
    switch(v19)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
        sub_1C1520DCC();
        break;
      default:
        sub_1C1520DCC();
        sub_1C151E77C();
        break;
    }
    uint64_t v21 = sub_1C1520E0C();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x1C02BDB30);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v9 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
  }
LABEL_36:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
  if (v29 > 63) {
    bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v31 = -1 << v29;
  }
  *(void *)(v2 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BDB6C(uint64_t a1)
{
  return sub_1C02BF278(a1, &qword_1EA1991C8, (void (*)(void))sub_1C02CDD64);
}

uint64_t sub_1C02BDB94()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA1967D0, (void (*)(void))sub_1C00BB348);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_40;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v32 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_41;
    }
    if (v14 >= v31) {
      break;
    }
    unint64_t v15 = v32[v14];
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v31) {
        break;
      }
      unint64_t v15 = v32[v9];
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v31) {
          break;
        }
        unint64_t v15 = v32[v9];
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v31) {
            break;
          }
          unint64_t v15 = v32[v16];
          if (!v15)
          {
            while (1)
            {
              int64_t v9 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_42;
              }
              if (v9 >= v31) {
                goto LABEL_36;
              }
              unint64_t v15 = v32[v9];
              ++v16;
              if (v15) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v16;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(unsigned __int8 *)(v17 + 16);
    sub_1C1520DBC();
    switch(v20)
    {
      case 5:
        sub_1C1520DCC();
        break;
      default:
        sub_1C1520DCC();
        sub_1C151E77C();
        break;
    }
    uint64_t v21 = sub_1C1520E0C();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x1C02BDF2CLL);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v8 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v10 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 24 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    *(unsigned char *)(v11 + 16) = v20;
    ++*(void *)(v4 + 16);
  }
LABEL_36:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
  if (v29 > 63) {
    bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v32 = -1 << v29;
  }
  *(void *)(v2 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BDF44(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void, __n128), uint64_t (*a4)(void), void (*a5)(char *))
{
  uint64_t v36 = a5;
  uint64_t v8 = v5;
  uint64_t v9 = a2(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9 - 8);
  unint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = *v5;
  a3(0, v11);
  uint64_t v15 = sub_1C152008C();
  uint64_t v16 = v15;
  if (*(void *)(v14 + 16))
  {
    uint64_t v17 = 1 << *(unsigned char *)(v14 + 32);
    uint64_t v18 = *(void *)(v14 + 56);
    uint64_t v33 = v5;
    uint64_t v34 = (void *)(v14 + 56);
    if (v17 < 64) {
      uint64_t v19 = ~(-1 << v17);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v20 = v19 & v18;
    int64_t v35 = (unint64_t)(v17 + 63) >> 6;
    uint64_t v21 = v15 + 56;
    uint64_t result = swift_retain();
    int64_t v23 = 0;
    while (1)
    {
      if (v20)
      {
        unint64_t v24 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        unint64_t v25 = v24 | (v23 << 6);
      }
      else
      {
        int64_t v28 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v28 >= v35) {
          goto LABEL_23;
        }
        unint64_t v29 = v34[v28];
        ++v23;
        if (!v29)
        {
          int64_t v23 = v28 + 1;
          if (v28 + 1 >= v35) {
            goto LABEL_23;
          }
          unint64_t v29 = v34[v23];
          if (!v29)
          {
            int64_t v23 = v28 + 2;
            if (v28 + 2 >= v35) {
              goto LABEL_23;
            }
            unint64_t v29 = v34[v23];
            if (!v29)
            {
              int64_t v30 = v28 + 3;
              if (v30 >= v35)
              {
LABEL_23:
                swift_release();
                uint64_t v31 = 1 << *(unsigned char *)(v14 + 32);
                if (v31 > 63) {
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v31;
                }
                uint64_t v8 = v33;
                *(void *)(v14 + 16) = 0;
                break;
              }
              unint64_t v29 = v34[v30];
              if (!v29)
              {
                while (1)
                {
                  int64_t v23 = v30 + 1;
                  if (__OFADD__(v30, 1)) {
                    goto LABEL_29;
                  }
                  if (v23 >= v35) {
                    goto LABEL_23;
                  }
                  unint64_t v29 = v34[v23];
                  ++v30;
                  if (v29) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v23 = v30;
            }
          }
        }
LABEL_22:
        unint64_t v20 = (v29 - 1) & v29;
        unint64_t v25 = __clz(__rbit64(v29)) + (v23 << 6);
      }
      uint64_t v26 = *(void *)(v10 + 72);
      sub_1C02CDEDC(*(void *)(v14 + 48) + v26 * v25, (uint64_t)v13, a4);
      sub_1C1520DBC();
      v36(v37);
      sub_1C1520E0C();
      unint64_t v27 = sub_1C151FFDC();
      *(void *)(v21 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      uint64_t result = sub_1C02CDEDC((uint64_t)v13, *(void *)(v16 + 48) + v27 * v26, a4);
      ++*(void *)(v16 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v8 = v16;
  return result;
}

uint64_t sub_1C02BE264()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C02CDA9C();
  uint64_t v7 = sub_1C152008C();
  if (*(void *)(v6 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v9 = (void *)(v6 + 56);
    uint64_t v10 = -1;
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    unint64_t v11 = v10 & *(void *)(v6 + 56);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v14 << 6);
      }
      else
      {
        int64_t v17 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_22;
        }
        unint64_t v18 = v9[v17];
        ++v14;
        if (!v18)
        {
          int64_t v14 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_22;
          }
          unint64_t v18 = v9[v14];
          if (!v18)
          {
            int64_t v14 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_22;
            }
            unint64_t v18 = v9[v14];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_22:
                swift_release();
                uint64_t v20 = 1 << *(unsigned char *)(v6 + 32);
                if (v20 > 63) {
                  bzero((void *)(v6 + 56), ((unint64_t)(v20 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v9 = -1 << v20;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v18 = v9[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v14 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_28;
                  }
                  if (v14 >= v12) {
                    goto LABEL_22;
                  }
                  unint64_t v18 = v9[v14];
                  ++v19;
                  if (v18) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v14 = v19;
            }
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
      }
      sub_1C02CDEDC(*(void *)(v6 + 48) + *(void *)(v3 + 72) * v16, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      uint64_t result = sub_1C02C07F4((uint64_t)v5, v7);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_1C02BE4D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA1991A8, (void (*)(void))sub_1C00FEF2C);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_1C1520DBC();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C1520E0C();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BE7E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EB8902C8, (void (*)(void))sub_1C00699E0);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_39;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_40;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = v6[v15];
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = v6[v11];
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = v6[v11];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = v6[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_41;
              }
              if (v11 >= v9) {
                goto LABEL_35;
              }
              unint64_t v16 = v6[v11];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    int v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    sub_1C1520DBC();
    sub_1C1520DCC();
    if (v18 != 12)
    {
      sub_1C151E77C();
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = sub_1C1520E0C();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x1C02BEBF0);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_35:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BEC20(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v5 = *v3;
  sub_1C02CE270(0, a2, a3);
  uint64_t result = sub_1C152008C();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v9 = (void *)(v5 + 56);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 56);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 56;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_33;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v8 = v18 + 2;
            if (v18 + 2 >= v13) {
              goto LABEL_33;
            }
            unint64_t v19 = v9[v8];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v13)
              {
LABEL_33:
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero((void *)(v5 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v9 = -1 << v29;
                }
                uint64_t v4 = v3;
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v9[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v8 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v8 >= v13) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v9[v8];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v8 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
      sub_1C1520DBC();
      sub_1C1520DCC();
      uint64_t result = sub_1C1520E0C();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(unsigned char *)(*(void *)(v7 + 48) + v15) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v4 = v7;
  return result;
}

uint64_t sub_1C02BEEC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA1991F0, (void (*)(void))sub_1C02CE030);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1C02BF25CLL);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BF278(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v5 = *v3;
  sub_1C02CE270(0, a2, a3);
  uint64_t v6 = sub_1C152008C();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v35 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 56);
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34) {
          goto LABEL_33;
        }
        unint64_t v19 = v35[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v19 = v35[v13];
          if (!v19)
          {
            int64_t v13 = v18 + 2;
            if (v18 + 2 >= v34) {
              goto LABEL_33;
            }
            unint64_t v19 = v35[v13];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                uint64_t v4 = v3;
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 > 63) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v13 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v13 >= v34) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v35[v13];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v13 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = v5;
      uint64_t v22 = *(void *)(v5 + 48) + 24 * v17;
      uint64_t v23 = *(void *)v22;
      uint64_t v24 = *(void *)(v22 + 8);
      char v25 = *(unsigned char *)(v22 + 16);
      sub_1C1520DBC();
      sub_1C1520DCC();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v11 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = *(void *)(v7 + 48) + 24 * v14;
      *(void *)uint64_t v15 = v23;
      *(void *)(v15 + 8) = v24;
      *(unsigned char *)(v15 + 16) = v25;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v21;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v4 = v7;
  return result;
}

uint64_t sub_1C02BF590()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C151D77C();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1C00BC108();
  uint64_t v5 = sub_1C152008C();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    uint64_t v39 = v2;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v37) {
          goto LABEL_33;
        }
        unint64_t v20 = v38[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v38[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v38[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      sub_1C02CDA54((unint64_t *)&unk_1EA19C960, 255, MEMORY[0x1E4F7ADE8]);
      uint64_t result = sub_1C151E47C();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1C02BF980()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA1991E8, (void (*)(void))sub_1C02CDFDC);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32) {
          goto LABEL_33;
        }
        unint64_t v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v16 = v33[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v16 = v33[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v31;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v33[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = v19[3];
      sub_1C1520DBC();
      sub_1C151E77C();
      sub_1C1520DCC();
      sub_1C1520DCC();
      uint64_t result = sub_1C1520E0C();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
      *uint64_t v12 = v20;
      v12[1] = v21;
      void v12[2] = v22;
      void v12[3] = v23;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02BFCC4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C00BBFA8(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C152008C();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    unint64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_1C151FB5C();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v9;
  return result;
}

uint64_t sub_1C02BFF60()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C151677C();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1C02CE144();
  uint64_t v5 = sub_1C152008C();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    uint64_t v39 = v2;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v37) {
          goto LABEL_33;
        }
        unint64_t v20 = v38[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v38[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v38[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      sub_1C02CDA54(&qword_1EB85C780, 255, MEMORY[0x1E4F27DE8]);
      uint64_t result = sub_1C151E47C();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1C02C0350()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA199208, (void (*)(void))sub_1C00762BC);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = v6[v15];
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = v6[v11];
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = v6[v11];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = v6[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = v6[v11];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1C1520E0C();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C02C06B4);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1C02C06C4(unint64_t a1, uint64_t a2)
{
  sub_1C1520DBC();
  switch(a1 >> 62)
  {
    case 1uLL:
    case 2uLL:
      swift_bridgeObjectRetain();
      sub_1C1520DDC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      swift_bridgeObjectRelease_n();
      break;
    default:
      sub_1C1520DDC();
      break;
  }
  sub_1C1520E0C();
  unint64_t result = sub_1C151FFDC();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1C02C07F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1520DBC();
  sub_1C02CDE74(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C02CDEDC((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    sub_1C151E77C();
    sub_1BFEFE988((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    uint64_t v13 = *v10;
    SportsDataVisualization.identifier.getter();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_1C1520E0C();
  unint64_t v11 = sub_1C151FFDC();
  *(void *)(a2 + 56 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
  uint64_t result = sub_1C02CDEDC(a1, *(void *)(a2 + 48) + *(void *)(v8 + 72) * v11, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1C02C0A28(uint64_t a1, uint64_t a2)
{
  sub_1C151FB5C();
  unint64_t result = sub_1C151FFDC();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1C02C0AE8(uint64_t result, unint64_t a2, char a3)
{
  unint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  uint64_t v27 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BB95C();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = (uint64_t)sub_1C02C6900();
        goto LABEL_26;
      }
      sub_1C02C8780();
    }
    uint64_t v8 = *v3;
    sub_1C1520DBC();
    unint64_t v9 = v5 >> 62;
    switch(v5 >> 62)
    {
      case 1uLL:
      case 2uLL:
        swift_bridgeObjectRetain();
        sub_1C1520DDC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        swift_bridgeObjectRelease_n();
        break;
      default:
        sub_1C1520DDC();
        break;
    }
    unint64_t result = sub_1C1520E0C();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      uint64_t v12 = v5 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v13 = v9;
      while (1)
      {
        unint64_t v15 = *(void *)(*(void *)(v8 + 48) + 8 * a2);
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        switch(v15 >> 62)
        {
          case 1uLL:
          case 2uLL:
            uint64_t v18 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v16 = *(void *)(v18 + 16);
            uint64_t v17 = *(void *)(v18 + 24);
            swift_bridgeObjectRetain();
            break;
          default:
            break;
        }
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        switch(v13)
        {
          case 1:
          case 2:
            uint64_t v21 = *(void *)(v12 + 16);
            uint64_t v19 = *(void *)(v21 + 16);
            uint64_t v20 = *(void *)(v21 + 24);
            swift_bridgeObjectRetain();
            break;
          default:
            break;
        }
        if (!v17) {
          break;
        }
        if (!v20) {
          goto LABEL_25;
        }
        if (v16 == v19 && v17 == v20) {
          goto LABEL_29;
        }
        char v14 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_30;
        }
LABEL_14:
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_26;
        }
      }
      if (!v20) {
        goto LABEL_30;
      }
LABEL_25:
      unint64_t result = swift_bridgeObjectRelease();
      goto LABEL_14;
    }
  }
LABEL_26:
  uint64_t v22 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = v27;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
    __break(1u);
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_30:
    sub_1C1520CEC();
    __break(1u);
    JUMPOUT(0x1C02C0DB8);
  }
  *(void *)(v22 + 16) = v25;
  return result;
}

uint64_t sub_1C02C0E48(uint64_t result, unint64_t a2, char a3)
{
  char v22 = result;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 <= v5 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BBE14();
    }
    else
    {
      if (v6 > v5)
      {
        unint64_t result = (uint64_t)sub_1C02C6E30(&qword_1EA199210, (void (*)(void))sub_1C007C210);
        goto LABEL_32;
      }
      sub_1C02C8BE8();
    }
    uint64_t v21 = *v3;
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    unint64_t result = sub_1C1520E0C();
    uint64_t v7 = -1 << *(unsigned char *)(v21 + 32);
    a2 = result & ~v7;
    if ((*(void *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v8 = ~v7;
      do
      {
        unint64_t v9 = 0xD000000000000021;
        if (*(unsigned char *)(*(void *)(v21 + 48) + a2) == 1)
        {
          unint64_t v10 = 0x80000001C15FF850;
        }
        else
        {
          unint64_t v9 = 0x7461636572706564;
          unint64_t v10 = 0xEA00000000006465;
        }
        if (*(unsigned char *)(*(void *)(v21 + 48) + a2)) {
          unint64_t v11 = v9;
        }
        else {
          unint64_t v11 = 0xD000000000000014;
        }
        if (*(unsigned char *)(*(void *)(v21 + 48) + a2)) {
          unint64_t v12 = v10;
        }
        else {
          unint64_t v12 = 0x80000001C15FF830;
        }
        if (v22)
        {
          if (v22 == 1) {
            unint64_t v13 = 0xD000000000000021;
          }
          else {
            unint64_t v13 = 0x7461636572706564;
          }
          if (v22 == 1) {
            unint64_t v14 = 0x80000001C15FF850;
          }
          else {
            unint64_t v14 = 0xEA00000000006465;
          }
          if (v11 == v13)
          {
LABEL_29:
            if (v12 == v14) {
              goto LABEL_35;
            }
          }
        }
        else
        {
          unint64_t v14 = 0x80000001C15FF830;
          if (v11 == 0xD000000000000014) {
            goto LABEL_29;
          }
        }
        char v15 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_36;
        }
        a2 = (a2 + 1) & v8;
      }
      while (((*(void *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_32:
  uint64_t v16 = *v20;
  *(void *)(*v20 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v22;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_35:
    swift_bridgeObjectRelease_n();
LABEL_36:
    sub_1C1520CEC();
    __break(1u);
    JUMPOUT(0x1C02C1114);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

uint64_t sub_1C02C11BC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BC958();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = (uint64_t)sub_1C02C6FCC();
        goto LABEL_14;
      }
      sub_1C02C9324();
    }
    uint64_t v8 = *v3;
    sub_1C1520DBC();
    sub_1C1520DCC();
    unint64_t result = sub_1C1520E0C();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = *(void *)(v8 + 48);
      if (*(void *)(v10 + 8 * a2) == v5)
      {
LABEL_13:
        type metadata accessor for UIUserInterfaceIdiom(0);
        unint64_t result = sub_1C1520CEC();
        __break(1u);
      }
      else
      {
        uint64_t v11 = ~v9;
        while (1)
        {
          a2 = (a2 + 1) & v11;
          if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
            break;
          }
          if (*(void *)(v10 + 8 * a2) == v5) {
            goto LABEL_13;
          }
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x1C02C130CLL);
  }
  *(void *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1C02C1340(uint64_t result, unint64_t a2, char a3)
{
  unsigned __int8 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BCC34();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = (uint64_t)sub_1C02C6E30(&qword_1EA199218, (void (*)(void))sub_1C02CE1DC);
        goto LABEL_28;
      }
      sub_1C02C95D0();
    }
    uint64_t v8 = *v3;
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    unint64_t result = sub_1C1520E0C();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      do
      {
        if (*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          if (*(unsigned char *)(*(void *)(v8 + 48) + a2) == 1)
          {
            unint64_t v11 = 0x80000001C1601770;
            unint64_t v12 = 0xD000000000000010;
            int v13 = v5;
            if (!v5) {
              goto LABEL_24;
            }
          }
          else
          {
            unint64_t v11 = 0xE400000000000000;
            unint64_t v12 = 1752461154;
            int v13 = v5;
            if (!v5)
            {
LABEL_24:
              unint64_t v15 = 0xEB00000000797274;
              if (v12 == 0x6E4572657474656CLL) {
                goto LABEL_25;
              }
              goto LABEL_26;
            }
          }
        }
        else
        {
          unint64_t v12 = 0x6E4572657474656CLL;
          unint64_t v11 = 0xEB00000000797274;
          int v13 = v5;
          if (!v5) {
            goto LABEL_24;
          }
        }
        if (v13 == 1) {
          unint64_t v14 = 0xD000000000000010;
        }
        else {
          unint64_t v14 = 1752461154;
        }
        if (v13 == 1) {
          unint64_t v15 = 0x80000001C1601770;
        }
        else {
          unint64_t v15 = 0xE400000000000000;
        }
        if (v12 == v14)
        {
LABEL_25:
          if (v11 == v15) {
            goto LABEL_31;
          }
        }
LABEL_26:
        char v16 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_32;
        }
        a2 = (a2 + 1) & v10;
      }
      while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_28:
  uint64_t v17 = *v21;
  *(void *)(*v21 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v5;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    unint64_t result = sub_1C1520CEC();
    __break(1u);
  }
  else
  {
    *(void *)(v17 + 16) = v20;
  }
  return result;
}

uint64_t sub_1C02C1604(uint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  unint64_t v6 = (uint64_t *)v4;
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*(void *)v4 + 16);
  unint64_t v11 = *(void *)(*(void *)v4 + 24);
  if (v11 <= v10 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1C02BCF74();
    }
    else
    {
      if (v11 > v10)
      {
        unint64_t result = (uint64_t)sub_1C02C7160((unint64_t *)&unk_1EB8704B8, (void (*)(void))sub_1C02CDB88, (uint64_t)&type metadata for FeedItem.Kind, sub_1BFF7FF04);
        goto LABEL_53;
      }
      sub_1C02C98DC();
    }
    uint64_t v12 = *(void *)v4;
    uint64_t v24 = v9;
    unint64_t v25 = a2;
    sub_1C1520DBC();
    FeedItem.Kind.hash(into:)();
    uint64_t v4 = &v23;
    unint64_t result = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v12 + 32);
    a3 = result & ~v13;
    if ((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v14 = ~v13;
      while (2)
      {
        uint64_t v15 = *(void *)(v12 + 48) + 16 * a3;
        uint64_t v4 = *(char **)v15;
        unint64_t v5 = *(void *)(v15 + 8);
        switch(v5)
        {
          case 0uLL:
            if (!a2) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 1uLL:
            if (a2 == 1) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 2uLL:
            if (a2 == 2) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 3uLL:
            if (a2 == 3) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 4uLL:
            if (a2 == 4) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 5uLL:
            if (a2 == 5) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 6uLL:
            if (a2 == 6) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 7uLL:
            if (a2 == 7) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 8uLL:
            if (a2 == 8) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 9uLL:
            if (a2 == 9) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 0xAuLL:
            if (a2 != 10) {
              goto LABEL_51;
            }
            goto LABEL_56;
          case 0xBuLL:
            if (a2 == 11) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 0xCuLL:
            if (a2 == 12) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 0xDuLL:
            if (a2 == 13) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 0xEuLL:
            if (a2 == 14) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 0xFuLL:
            if (a2 == 15) {
              goto LABEL_56;
            }
            goto LABEL_51;
          case 0x10uLL:
            if (a2 == 16) {
              goto LABEL_56;
            }
            goto LABEL_51;
          default:
            if (a2 < 0x11)
            {
LABEL_51:
              sub_1BFF7FF04(*(void *)v15, *(void *)(v15 + 8));
              sub_1BFF7FF04(v9, a2);
              sub_1BFEEFC20((uint64_t)v4, v5);
              unint64_t result = sub_1BFEEFC20(v9, a2);
            }
            else
            {
              if (v4 == (char *)v9 && v5 == a2) {
                goto LABEL_59;
              }
              char v17 = sub_1C1520A9C();
              sub_1BFF7FF04((uint64_t)v4, v5);
              sub_1BFF7FF04(v9, a2);
              sub_1BFEEFC20((uint64_t)v4, v5);
              unint64_t result = sub_1BFEEFC20(v9, a2);
              if (v17)
              {
                while (1)
                {
                  sub_1C1520CEC();
                  __break(1u);
LABEL_59:
                  sub_1BFF7FF04(v9, a2);
                  sub_1BFF7FF04(v9, a2);
                  uint64_t v4 = (char *)v9;
LABEL_57:
                  sub_1BFEEFC20((uint64_t)v4, a2);
                  sub_1BFEEFC20(v9, a2);
                }
              }
            }
            a3 = (a3 + 1) & v14;
            if (((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_53:
  uint64_t v18 = *v6;
  *(void *)(*v6 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  BOOL v19 = (uint64_t *)(*(void *)(v18 + 48) + 16 * a3);
  *BOOL v19 = v9;
  v19[1] = a2;
  uint64_t v20 = *(void *)(v18 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
LABEL_56:
    a2 = v5;
    goto LABEL_57;
  }
  *(void *)(v18 + 16) = v22;
  return result;
}

uint64_t sub_1C02C19A8(uint64_t result, unint64_t a2, char a3)
{
  char v22 = result;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 <= v5 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BD3C0();
    }
    else
    {
      if (v6 > v5)
      {
        unint64_t result = (uint64_t)sub_1C02C6E30(&qword_1EA199198, (void (*)(void))sub_1C02CDB34);
        goto LABEL_32;
      }
      sub_1C02C9CF8();
    }
    uint64_t v21 = *v3;
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    unint64_t result = sub_1C1520E0C();
    uint64_t v7 = -1 << *(unsigned char *)(v21 + 32);
    a2 = result & ~v7;
    if ((*(void *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v8 = ~v7;
      do
      {
        unint64_t v9 = 0xD00000000000001CLL;
        if (*(unsigned char *)(*(void *)(v21 + 48) + a2) == 1)
        {
          unint64_t v10 = 0x80000001C15FCF90;
        }
        else
        {
          unint64_t v9 = 0xD000000000000028;
          unint64_t v10 = 0x80000001C15FCFB0;
        }
        if (*(unsigned char *)(*(void *)(v21 + 48) + a2)) {
          unint64_t v11 = v9;
        }
        else {
          unint64_t v11 = 0xD000000000000010;
        }
        if (*(unsigned char *)(*(void *)(v21 + 48) + a2)) {
          unint64_t v12 = v10;
        }
        else {
          unint64_t v12 = 0x80000001C15FCF70;
        }
        if (v22)
        {
          if (v22 == 1) {
            unint64_t v13 = 0xD00000000000001CLL;
          }
          else {
            unint64_t v13 = 0xD000000000000028;
          }
          if (v22 == 1) {
            unint64_t v14 = 0x80000001C15FCF90;
          }
          else {
            unint64_t v14 = 0x80000001C15FCFB0;
          }
          if (v11 == v13)
          {
LABEL_29:
            if (v12 == v14) {
              goto LABEL_35;
            }
          }
        }
        else
        {
          unint64_t v14 = 0x80000001C15FCF70;
          if (v11 == 0xD000000000000010) {
            goto LABEL_29;
          }
        }
        char v15 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_36;
        }
        a2 = (a2 + 1) & v8;
      }
      while (((*(void *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_32:
  uint64_t v16 = *v20;
  *(void *)(*v20 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v22;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_35:
    swift_bridgeObjectRelease_n();
LABEL_36:
    unint64_t result = sub_1C1520CEC();
    __break(1u);
  }
  else
  {
    *(void *)(v16 + 16) = v19;
  }
  return result;
}

uint64_t sub_1C02C1C78(uint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  unint64_t v6 = (uint64_t *)v4;
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*(void *)v4 + 16);
  unint64_t v11 = *(void *)(*(void *)v4 + 24);
  if (v11 <= v10 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1C02BD740();
    }
    else
    {
      if (v11 > v10)
      {
        unint64_t result = (uint64_t)sub_1C02C7160((unint64_t *)&unk_1EB8902A8, (void (*)(void))sub_1C0081EF8, (uint64_t)&type metadata for FormatItemKind, sub_1BFE74E64);
        goto LABEL_49;
      }
      sub_1C02CA040();
    }
    uint64_t v12 = *(void *)v4;
    uint64_t v24 = v9;
    unint64_t v25 = a2;
    sub_1C1520DBC();
    FormatItemKind.hash(into:)();
    uint64_t v4 = &v23;
    unint64_t result = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v12 + 32);
    a3 = result & ~v13;
    if ((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v14 = ~v13;
      while (2)
      {
        uint64_t v15 = *(void *)(v12 + 48) + 16 * a3;
        uint64_t v4 = *(char **)v15;
        unint64_t v5 = *(void *)(v15 + 8);
        switch(v5)
        {
          case 0uLL:
            if (!a2) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 1uLL:
            if (a2 == 1) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 2uLL:
            if (a2 == 2) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 3uLL:
            if (a2 == 3) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 4uLL:
            if (a2 == 4) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 5uLL:
            if (a2 == 5) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 6uLL:
            if (a2 == 6) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 7uLL:
            if (a2 == 7) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 8uLL:
            if (a2 != 8) {
              goto LABEL_47;
            }
            goto LABEL_52;
          case 9uLL:
            if (a2 == 9) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 0xAuLL:
            if (a2 == 10) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 0xBuLL:
            if (a2 == 11) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 0xCuLL:
            if (a2 == 12) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 0xDuLL:
            if (a2 == 13) {
              goto LABEL_52;
            }
            goto LABEL_47;
          case 0xEuLL:
            if (a2 == 14) {
              goto LABEL_52;
            }
            goto LABEL_47;
          default:
            if (a2 < 0xF)
            {
LABEL_47:
              sub_1BFE74E64(*(void *)v15, *(void *)(v15 + 8));
              sub_1BFE74E64(v9, a2);
              sub_1BFF8F648((uint64_t)v4, v5);
              unint64_t result = sub_1BFF8F648(v9, a2);
            }
            else
            {
              if (v4 == (char *)v9 && v5 == a2) {
                goto LABEL_55;
              }
              char v17 = sub_1C1520A9C();
              sub_1BFE74E64((uint64_t)v4, v5);
              sub_1BFE74E64(v9, a2);
              sub_1BFF8F648((uint64_t)v4, v5);
              unint64_t result = sub_1BFF8F648(v9, a2);
              if (v17)
              {
                while (1)
                {
                  sub_1C1520CEC();
                  __break(1u);
LABEL_55:
                  sub_1BFE74E64(v9, a2);
                  sub_1BFE74E64(v9, a2);
                  uint64_t v4 = (char *)v9;
LABEL_53:
                  sub_1BFF8F648((uint64_t)v4, a2);
                  sub_1BFF8F648(v9, a2);
                }
              }
            }
            a3 = (a3 + 1) & v14;
            if (((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_49:
  uint64_t v18 = *v6;
  *(void *)(*v6 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v19 = (uint64_t *)(*(void *)(v18 + 48) + 16 * a3);
  *uint64_t v19 = v9;
  v19[1] = a2;
  uint64_t v20 = *(void *)(v18 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
LABEL_52:
    a2 = v5;
    goto LABEL_53;
  }
  *(void *)(v18 + 16) = v22;
  return result;
}

uint64_t sub_1C02C1FFC(uint64_t result, uint64_t a2, char a3, unint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v10 = result;
  unint64_t v11 = *(void *)(*v5 + 16);
  unint64_t v12 = *(void *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0) {
    goto LABEL_23;
  }
  uint64_t v13 = v11 + 1;
  if (a5)
  {
    sub_1C02BF278(v13, &qword_1EA1991C8, (void (*)(void))sub_1C02CDD64);
  }
  else
  {
    if (v12 > v11)
    {
      unint64_t result = (uint64_t)sub_1C02C739C(&qword_1EA1991C8, (void (*)(void))sub_1C02CDD64, (uint64_t)&type metadata for FormatDerivedDataFileReference, (uint64_t (*)(void))sub_1C02CE324);
      goto LABEL_23;
    }
    sub_1C02CBCA8(v13, &qword_1EA1991C8, (void (*)(void))sub_1C02CDD64);
  }
  uint64_t v14 = *v5;
  sub_1C1520DBC();
  sub_1C1520DCC();
  sub_1C151E77C();
  unint64_t result = sub_1C1520E0C();
  uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
  a4 = result & ~v15;
  uint64_t v16 = v14 + 56;
  if ((*(void *)(v14 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v14 + 48);
    do
    {
      uint64_t v19 = v18 + 24 * a4;
      unint64_t result = *(void *)v19;
      uint64_t v20 = *(void *)(v19 + 8);
      int v21 = *(unsigned __int8 *)(v19 + 16);
      if (v21)
      {
        if (v21 == 1)
        {
          if (a3 != 1) {
            goto LABEL_11;
          }
        }
        else if (a3 != 2)
        {
          goto LABEL_11;
        }
      }
      else if (a3)
      {
        goto LABEL_11;
      }
      BOOL v22 = result == v10 && v20 == a2;
      if (v22 || (unint64_t result = sub_1C1520A9C(), (result & 1) != 0))
      {
        unint64_t result = sub_1C1520CEC();
        __break(1u);
        break;
      }
LABEL_11:
      a4 = (a4 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_23:
  uint64_t v23 = *v6;
  *(void *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v24 = *(void *)(v23 + 48) + 24 * a4;
  *(void *)uint64_t v24 = v10;
  *(void *)(v24 + 8) = a2;
  *(unsigned char *)(v24 + 16) = a3;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26) {
    __break(1u);
  }
  else {
    *(void *)(v23 + 16) = v27;
  }
  return result;
}

uint64_t sub_1C02C2254(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v106 = (uint64_t *)a1;
  uint64_t v6 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02CDDB8(0, (unint64_t *)&qword_1EA196BD8, (void (*)(uint64_t))sub_1C0178190);
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t)&v88 - v12;
  sub_1C0178190();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v88 - v18;
  uint64_t v20 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v96 = (uint64_t)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02CDDB8(0, (unint64_t *)&qword_1EA197250, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  uint64_t v97 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v98 = (uint64_t)&v88 - v23;
  uint64_t v24 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  uint64_t v100 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v105 = (uint64_t)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v27 = *(void *)(*v3 + 16);
  unint64_t v28 = *(void *)(*v3 + 24);
  uint64_t v99 = v3;
  if (v28 <= v27 || (a3 & 1) == 0)
  {
    if (a3)
    {
      uint64_t v95 = v25;
      sub_1C02BDF44(v27 + 1, type metadata accessor for FormatDerivedDataResultOptionReference, (void (*)(void, __n128))sub_1C02CDF44, type metadata accessor for FormatDerivedDataResultOptionReference, (void (*)(char *))sub_1C0163BB8);
    }
    else
    {
      if (v28 > v27)
      {
        sub_1C02C7614(type metadata accessor for FormatDerivedDataResultOptionReference, (void (*)(void, __n128))sub_1C02CDF44, type metadata accessor for FormatDerivedDataResultOptionReference, type metadata accessor for FormatDerivedDataResultOptionReference);
        goto LABEL_174;
      }
      uint64_t v95 = v25;
      sub_1C02CA464();
    }
    uint64_t v29 = *v3;
    sub_1C1520DBC();
    sub_1C0163BB8((uint64_t)v110);
    uint64_t v30 = sub_1C1520E0C();
    uint64_t v31 = -1 << *(unsigned char *)(v29 + 32);
    a2 = v30 & ~v31;
    uint64_t v103 = v29 + 56;
    uint64_t v104 = v29;
    if ((*(void *)(v29 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      id v90 = v19;
      uint64_t v91 = v16;
      uint64_t v92 = v13;
      uint64_t v93 = v11;
      id v88 = v9;
      uint64_t v94 = v6;
      uint64_t v101 = ~v31;
      uint64_t v102 = *(void *)(v100 + 72);
      uint64_t v89 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
      uint64_t v32 = v105;
      do
      {
        uint64_t v33 = *(void *)(v104 + 48);
        unint64_t v107 = a2;
        sub_1C02CDE74(v33 + v102 * a2, v32, type metadata accessor for FormatDerivedDataResultOptionReference);
        uint64_t v34 = *(void *)v32;
        uint64_t v35 = *v106;
        uint64_t v108 = *(void *)(*(void *)v32 + 16);
        uint64_t v109 = v35;
        if (v108 != *(void *)(v35 + 16)) {
          goto LABEL_12;
        }
        if (v108) {
          BOOL v36 = v34 == v109;
        }
        else {
          BOOL v36 = 1;
        }
        if (v36)
        {
LABEL_19:
          uint64_t v38 = *(void *)(v105 + 24);
          uint64_t v37 = *(void *)(v105 + 32);
          uint64_t v39 = v106[3];
          uint64_t v40 = v106[4];
          if ((*(void *)(v105 + 8) != v106[1] || *(void *)(v105 + 16) != v106[2]) && (sub_1C1520A9C() & 1) == 0
            || (sub_1C00ABAD8(v38, v39) & 1) == 0
            || v37 != v40)
          {
            goto LABEL_12;
          }
          uint64_t v42 = *(void *)(v105 + 40);
          uint64_t v41 = *(void *)(v105 + 48);
          int v43 = *(unsigned __int8 *)(v105 + 56);
          uint64_t v45 = v106[5];
          uint64_t v44 = v106[6];
          uint64_t v13 = *((unsigned __int8 *)v106 + 56);
          if (*(unsigned char *)(v105 + 56))
          {
            if (v43 == 1)
            {
              if (v13 == 1)
              {
                if (v42 != v45 || v41 != v44)
                {
                  char v46 = sub_1C1520A9C();
                  sub_1C015F808(v45, v44, 1u);
                  sub_1C015F808(v42, v41, 1u);
                  sub_1C015FB90(v42, v41, 1u);
                  sub_1C015FB90(v45, v44, 1u);
                  if ((v46 & 1) == 0) {
                    goto LABEL_12;
                  }
                  goto LABEL_149;
                }
LABEL_148:
                sub_1C015F808(v42, v41, v43);
                sub_1C015F808(v42, v41, v43);
                sub_1C015FB90(v42, v41, v43);
                sub_1C015FB90(v42, v41, v43);
                goto LABEL_149;
              }
LABEL_11:
              sub_1C015F808(v106[5], v106[6], *((unsigned char *)v106 + 56));
              sub_1C015F808(v42, v41, v43);
              sub_1C015FB90(v42, v41, v43);
              sub_1C015FB90(v45, v44, v13);
              goto LABEL_12;
            }
            if (v13 != 2) {
              goto LABEL_11;
            }
            if (v42 == v45 && v41 == v44) {
              goto LABEL_148;
            }
            char v49 = sub_1C1520A9C();
            sub_1C015F808(v45, v44, 2u);
            sub_1C015F808(v42, v41, 2u);
            sub_1C015FB90(v42, v41, 2u);
            sub_1C015FB90(v45, v44, 2u);
            if ((v49 & 1) == 0) {
              goto LABEL_12;
            }
          }
          else
          {
            if (*((unsigned char *)v106 + 56)) {
              goto LABEL_11;
            }
            if (v42 == v45 && v41 == v44) {
              goto LABEL_148;
            }
            char v80 = sub_1C1520A9C();
            sub_1C015F808(v45, v44, 0);
            sub_1C015F808(v42, v41, 0);
            sub_1C015FB90(v42, v41, 0);
            sub_1C015FB90(v45, v44, 0);
            if ((v80 & 1) == 0) {
              goto LABEL_12;
            }
          }
LABEL_149:
          uint64_t v67 = *(int *)(v95 + 28);
          uint64_t v68 = (uint64_t)v106 + v67;
          uint64_t v13 = v98;
          uint64_t v69 = v98 + *(int *)(v97 + 48);
          sub_1C02CDE74(v105 + v67, v98, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
          sub_1C02CDE74(v68, v69, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
          sub_1C015F820();
          uint64_t v71 = v70;
          uint64_t v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 48);
          if (v72(v13, 1, v70) == 1)
          {
            if (v72(v69, 1, v71) == 1) {
              goto LABEL_179;
            }
LABEL_154:
            sub_1C02CDE18(v13, (unint64_t *)&qword_1EA197250, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOptionReferenceResolution);
            goto LABEL_12;
          }
          uint64_t v73 = v96;
          sub_1C02CDE74(v13, v96, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
          if (v72(v69, 1, v71) == 1)
          {
            sub_1BFEFE988(v73, (uint64_t (*)(void))sub_1C0178190);
            goto LABEL_154;
          }
          uint64_t v74 = (uint64_t)v90;
          sub_1C02CDEDC(v69, (uint64_t)v90, (uint64_t (*)(void))sub_1C0178190);
          a2 = v92;
          uint64_t v75 = v92 + *(int *)(v93 + 48);
          sub_1C02CDEDC(v73, v92, (uint64_t (*)(void))sub_1C0178190);
          sub_1C02CDE74(v74, v75, (uint64_t (*)(void))sub_1C0178190);
          CFTimeInterval v76 = *v89;
          uint64_t v77 = v94;
          unsigned int v78 = (*v89)(a2, 1, v94);
          uint64_t v79 = (uint64_t)v91;
          if (v78 == 1)
          {
            sub_1BFEFE988(v74, (uint64_t (*)(void))sub_1C0178190);
            if (v76(v75, 1, v77) == 1) {
              goto LABEL_178;
            }
LABEL_163:
            sub_1C02CDE18(a2, (unint64_t *)&qword_1EA196BD8, (void (*)(uint64_t))sub_1C0178190);
          }
          else
          {
            sub_1C02CDE74(a2, (uint64_t)v91, (uint64_t (*)(void))sub_1C0178190);
            if (v76(v75, 1, v77) == 1)
            {
              sub_1BFEFE988(v74, (uint64_t (*)(void))sub_1C0178190);
              sub_1BFEFE988(v79, type metadata accessor for FormatVersionRequirement);
              goto LABEL_163;
            }
            uint64_t v81 = (uint64_t)v88;
            sub_1C02CDEDC(v75, (uint64_t)v88, type metadata accessor for FormatVersionRequirement);
            char v82 = sub_1C02F0BB4(v79, v81);
            sub_1BFEFE988(v81, type metadata accessor for FormatVersionRequirement);
            sub_1BFEFE988(v74, (uint64_t (*)(void))sub_1C0178190);
            sub_1BFEFE988(v79, type metadata accessor for FormatVersionRequirement);
            sub_1BFEFE988(a2, (uint64_t (*)(void))sub_1C0178190);
            if (v82) {
              goto LABEL_179;
            }
          }
          sub_1BFEFE988(v13, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
          goto LABEL_12;
        }
        unint64_t v47 = 0;
        a2 = v109 + 48;
        uint64_t v48 = (unsigned __int8 *)(v34 + 48);
        while (1)
        {
          if (v47 >= *(void *)(v109 + 16))
          {
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            sub_1BFEFE988(a2, (uint64_t (*)(void))sub_1C0178190);
LABEL_179:
            sub_1BFEFE988(v13, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
            sub_1BFEFE988(v105, type metadata accessor for FormatDerivedDataResultOptionReference);
            sub_1C1520CEC();
            __break(1u);
            JUMPOUT(0x1C02C3F9CLL);
          }
          uint64_t v54 = *((void *)v48 - 2);
          unint64_t v53 = *((void *)v48 - 1);
          uint64_t v13 = *v48;
          uint64_t v56 = *(void *)(a2 - 16);
          unint64_t v55 = *(void *)(a2 - 8);
          unsigned int v57 = *(unsigned __int8 *)a2;
          if (!(v13 >> 6))
          {
            if (v57 >= 0x40)
            {
LABEL_143:
              sub_1C00F5ACC(*(void *)(a2 - 16), *(void *)(a2 - 8), *(unsigned char *)a2);
              sub_1C00F5ACC(v54, v53, v13);
              uint64_t v61 = v54;
              unint64_t v62 = v53;
              unsigned __int8 v63 = v13;
              goto LABEL_172;
            }
            if (v54 == v56 && v53 == v55)
            {
              sub_1C00F5ACC(*((void *)v48 - 2), *((void *)v48 - 1), *(unsigned char *)a2);
              sub_1C00F5ACC(v54, v53, v13);
              sub_1C00F5AEC(v54, v53, v13);
              sub_1C00F5AEC(v54, v53, v57);
            }
            else
            {
              char v59 = sub_1C1520A9C();
              sub_1C00F5ACC(v56, v55, v57);
              sub_1C00F5ACC(v54, v53, v13);
              sub_1C00F5AEC(v54, v53, v13);
              sub_1C00F5AEC(v56, v55, v57);
              if ((v59 & 1) == 0) {
                goto LABEL_12;
              }
            }
            if ((v13 ^ v57)) {
              goto LABEL_12;
            }
            goto LABEL_40;
          }
          if (v13 >> 6 != 1) {
            break;
          }
          if ((v57 & 0xC0) != 0x40) {
            goto LABEL_143;
          }
          switch(v53)
          {
            case 0uLL:
              if (v55) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 0, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 0, v57);
              sub_1C00F5ACC(v56, 0, v57);
              sub_1C00F5ACC(v54, 0, v13);
              sub_1BFF8F648(v54, 0);
              sub_1BFF8F648(v56, 0);
              sub_1C00F5AEC(v54, 0, v13);
              sub_1C00F5AEC(v56, 0, v57);
              sub_1C00F5AEC(v56, 0, v57);
              sub_1C00F5AEC(v54, 0, v13);
              sub_1C00F5AEC(v56, 0, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 0;
              goto LABEL_38;
            case 1uLL:
              if (v55 != 1) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 1uLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 1uLL, v57);
              sub_1C00F5ACC(v56, 1uLL, v57);
              sub_1C00F5ACC(v54, 1uLL, v13);
              sub_1BFF8F648(v54, 1uLL);
              sub_1BFF8F648(v56, 1uLL);
              sub_1C00F5AEC(v54, 1uLL, v13);
              sub_1C00F5AEC(v56, 1uLL, v57);
              sub_1C00F5AEC(v56, 1uLL, v57);
              sub_1C00F5AEC(v54, 1uLL, v13);
              sub_1C00F5AEC(v56, 1uLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 1;
              goto LABEL_38;
            case 2uLL:
              if (v55 != 2) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 2uLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 2uLL, v57);
              sub_1C00F5ACC(v56, 2uLL, v57);
              sub_1C00F5ACC(v54, 2uLL, v13);
              sub_1BFF8F648(v54, 2uLL);
              sub_1BFF8F648(v56, 2uLL);
              sub_1C00F5AEC(v54, 2uLL, v13);
              sub_1C00F5AEC(v56, 2uLL, v57);
              sub_1C00F5AEC(v56, 2uLL, v57);
              sub_1C00F5AEC(v54, 2uLL, v13);
              sub_1C00F5AEC(v56, 2uLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 2;
              goto LABEL_38;
            case 3uLL:
              if (v55 != 3) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 3uLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 3uLL, v57);
              sub_1C00F5ACC(v56, 3uLL, v57);
              sub_1C00F5ACC(v54, 3uLL, v13);
              sub_1BFF8F648(v54, 3uLL);
              sub_1BFF8F648(v56, 3uLL);
              sub_1C00F5AEC(v54, 3uLL, v13);
              sub_1C00F5AEC(v56, 3uLL, v57);
              sub_1C00F5AEC(v56, 3uLL, v57);
              sub_1C00F5AEC(v54, 3uLL, v13);
              sub_1C00F5AEC(v56, 3uLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 3;
              goto LABEL_38;
            case 4uLL:
              if (v55 != 4) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 4uLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 4uLL, v57);
              sub_1C00F5ACC(v56, 4uLL, v57);
              sub_1C00F5ACC(v54, 4uLL, v13);
              sub_1BFF8F648(v54, 4uLL);
              sub_1BFF8F648(v56, 4uLL);
              sub_1C00F5AEC(v54, 4uLL, v13);
              sub_1C00F5AEC(v56, 4uLL, v57);
              sub_1C00F5AEC(v56, 4uLL, v57);
              sub_1C00F5AEC(v54, 4uLL, v13);
              sub_1C00F5AEC(v56, 4uLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 4;
              goto LABEL_38;
            case 5uLL:
              if (v55 != 5) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 5uLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 5uLL, v57);
              sub_1C00F5ACC(v56, 5uLL, v57);
              sub_1C00F5ACC(v54, 5uLL, v13);
              sub_1BFF8F648(v54, 5uLL);
              sub_1BFF8F648(v56, 5uLL);
              sub_1C00F5AEC(v54, 5uLL, v13);
              sub_1C00F5AEC(v56, 5uLL, v57);
              sub_1C00F5AEC(v56, 5uLL, v57);
              sub_1C00F5AEC(v54, 5uLL, v13);
              sub_1C00F5AEC(v56, 5uLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 5;
              goto LABEL_38;
            case 6uLL:
              if (v55 != 6) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 6uLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 6uLL, v57);
              sub_1C00F5ACC(v56, 6uLL, v57);
              sub_1C00F5ACC(v54, 6uLL, v13);
              sub_1BFF8F648(v54, 6uLL);
              sub_1BFF8F648(v56, 6uLL);
              sub_1C00F5AEC(v54, 6uLL, v13);
              sub_1C00F5AEC(v56, 6uLL, v57);
              sub_1C00F5AEC(v56, 6uLL, v57);
              sub_1C00F5AEC(v54, 6uLL, v13);
              sub_1C00F5AEC(v56, 6uLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 6;
              goto LABEL_38;
            case 7uLL:
              if (v55 != 7) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 7uLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 7uLL, v57);
              sub_1C00F5ACC(v56, 7uLL, v57);
              sub_1C00F5ACC(v54, 7uLL, v13);
              sub_1BFF8F648(v54, 7uLL);
              sub_1BFF8F648(v56, 7uLL);
              sub_1C00F5AEC(v54, 7uLL, v13);
              sub_1C00F5AEC(v56, 7uLL, v57);
              sub_1C00F5AEC(v56, 7uLL, v57);
              sub_1C00F5AEC(v54, 7uLL, v13);
              sub_1C00F5AEC(v56, 7uLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 7;
              goto LABEL_38;
            case 8uLL:
              if (v55 != 8) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 8uLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 8uLL, v57);
              sub_1C00F5ACC(v56, 8uLL, v57);
              sub_1C00F5ACC(v54, 8uLL, v13);
              sub_1BFF8F648(v54, 8uLL);
              sub_1BFF8F648(v56, 8uLL);
              sub_1C00F5AEC(v54, 8uLL, v13);
              sub_1C00F5AEC(v56, 8uLL, v57);
              sub_1C00F5AEC(v56, 8uLL, v57);
              sub_1C00F5AEC(v54, 8uLL, v13);
              sub_1C00F5AEC(v56, 8uLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 8;
              goto LABEL_38;
            case 9uLL:
              if (v55 != 9) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 9uLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 9uLL, v57);
              sub_1C00F5ACC(v56, 9uLL, v57);
              sub_1C00F5ACC(v54, 9uLL, v13);
              sub_1BFF8F648(v54, 9uLL);
              sub_1BFF8F648(v56, 9uLL);
              sub_1C00F5AEC(v54, 9uLL, v13);
              sub_1C00F5AEC(v56, 9uLL, v57);
              sub_1C00F5AEC(v56, 9uLL, v57);
              sub_1C00F5AEC(v54, 9uLL, v13);
              sub_1C00F5AEC(v56, 9uLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 9;
              goto LABEL_38;
            case 0xAuLL:
              if (v55 != 10) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 0xAuLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 0xAuLL, v57);
              sub_1C00F5ACC(v56, 0xAuLL, v57);
              sub_1C00F5ACC(v54, 0xAuLL, v13);
              sub_1BFF8F648(v54, 0xAuLL);
              sub_1BFF8F648(v56, 0xAuLL);
              sub_1C00F5AEC(v54, 0xAuLL, v13);
              sub_1C00F5AEC(v56, 0xAuLL, v57);
              sub_1C00F5AEC(v56, 0xAuLL, v57);
              sub_1C00F5AEC(v54, 0xAuLL, v13);
              sub_1C00F5AEC(v56, 0xAuLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 10;
              goto LABEL_38;
            case 0xBuLL:
              if (v55 != 11) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 0xBuLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 0xBuLL, v57);
              sub_1C00F5ACC(v56, 0xBuLL, v57);
              sub_1C00F5ACC(v54, 0xBuLL, v13);
              sub_1BFF8F648(v54, 0xBuLL);
              sub_1BFF8F648(v56, 0xBuLL);
              sub_1C00F5AEC(v54, 0xBuLL, v13);
              sub_1C00F5AEC(v56, 0xBuLL, v57);
              sub_1C00F5AEC(v56, 0xBuLL, v57);
              sub_1C00F5AEC(v54, 0xBuLL, v13);
              sub_1C00F5AEC(v56, 0xBuLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 11;
              goto LABEL_38;
            case 0xCuLL:
              if (v55 != 12) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 0xCuLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 0xCuLL, v57);
              sub_1C00F5ACC(v56, 0xCuLL, v57);
              sub_1C00F5ACC(v54, 0xCuLL, v13);
              sub_1BFF8F648(v54, 0xCuLL);
              sub_1BFF8F648(v56, 0xCuLL);
              sub_1C00F5AEC(v54, 0xCuLL, v13);
              sub_1C00F5AEC(v56, 0xCuLL, v57);
              sub_1C00F5AEC(v56, 0xCuLL, v57);
              sub_1C00F5AEC(v54, 0xCuLL, v13);
              sub_1C00F5AEC(v56, 0xCuLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 12;
              goto LABEL_38;
            case 0xDuLL:
              if (v55 != 13) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 0xDuLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 0xDuLL, v57);
              sub_1C00F5ACC(v56, 0xDuLL, v57);
              sub_1C00F5ACC(v54, 0xDuLL, v13);
              sub_1BFF8F648(v54, 0xDuLL);
              sub_1BFF8F648(v56, 0xDuLL);
              sub_1C00F5AEC(v54, 0xDuLL, v13);
              sub_1C00F5AEC(v56, 0xDuLL, v57);
              sub_1C00F5AEC(v56, 0xDuLL, v57);
              sub_1C00F5AEC(v54, 0xDuLL, v13);
              sub_1C00F5AEC(v56, 0xDuLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 13;
              goto LABEL_38;
            case 0xEuLL:
              if (v55 != 14) {
                goto LABEL_145;
              }
              sub_1C00F5ACC(*(void *)(a2 - 16), 0xEuLL, *(unsigned char *)a2);
              sub_1C00F5ACC(v56, 0xEuLL, v57);
              sub_1C00F5ACC(v56, 0xEuLL, v57);
              sub_1C00F5ACC(v54, 0xEuLL, v13);
              sub_1BFF8F648(v54, 0xEuLL);
              sub_1BFF8F648(v56, 0xEuLL);
              sub_1C00F5AEC(v54, 0xEuLL, v13);
              sub_1C00F5AEC(v56, 0xEuLL, v57);
              sub_1C00F5AEC(v56, 0xEuLL, v57);
              sub_1C00F5AEC(v54, 0xEuLL, v13);
              sub_1C00F5AEC(v56, 0xEuLL, v57);
              uint64_t v50 = v54;
              unint64_t v51 = 14;
LABEL_38:
              unsigned __int8 v52 = v13;
              goto LABEL_39;
            default:
              if (v55 < 0xF)
              {
LABEL_145:
                sub_1C00F5ACC(*(void *)(a2 - 16), *(void *)(a2 - 8), *(unsigned char *)a2);
                sub_1C00F5ACC(v54, v53, v13);
                sub_1C00F5ACC(v56, v55, v57);
                sub_1C00F5ACC(v54, v53, v13);
                sub_1C00F5ACC(v56, v55, v57);
                sub_1C00F5ACC(v54, v53, v13);
                sub_1C00F5ACC(v56, v55, v57);
                sub_1C00F5ACC(v54, v53, v13);
                sub_1BFF8F648(v54, v53);
                sub_1BFF8F648(v56, v55);
                sub_1C00F5AEC(v54, v53, v13);
                sub_1C00F5AEC(v56, v55, v57);
                sub_1C00F5AEC(v56, v55, v57);
                sub_1C00F5AEC(v54, v53, v13);
                sub_1C00F5AEC(v56, v55, v57);
                uint64_t v64 = v54;
                unint64_t v65 = v53;
                unsigned __int8 v66 = v13;
                goto LABEL_173;
              }
              if (v54 == v56 && v53 == v55) {
                char v60 = 1;
              }
              else {
                char v60 = sub_1C1520A9C();
              }
              sub_1C00F5ACC(v56, v55, v57);
              sub_1C00F5ACC(v54, v53, v13);
              sub_1C00F5ACC(v56, v55, v57);
              sub_1C00F5ACC(v54, v53, v13);
              sub_1C00F5ACC(v56, v55, v57);
              sub_1C00F5ACC(v54, v53, v13);
              sub_1C00F5ACC(v56, v55, v57);
              sub_1C00F5ACC(v54, v53, v13);
              sub_1BFF8F648(v54, v53);
              sub_1BFF8F648(v56, v55);
              sub_1C00F5AEC(v54, v53, v13);
              sub_1C00F5AEC(v56, v55, v57);
              sub_1C00F5AEC(v56, v55, v57);
              sub_1C00F5AEC(v54, v53, v13);
              sub_1C00F5AEC(v56, v55, v57);
              sub_1C00F5AEC(v54, v53, v13);
              if ((v60 & 1) == 0) {
                goto LABEL_12;
              }
              break;
          }
LABEL_40:
          ++v47;
          v48 += 24;
          a2 += 24;
          if (v108 == v47) {
            goto LABEL_19;
          }
        }
        if (!(v53 | v54) && v13 == 128)
        {
          if ((v57 & 0xC0) != 0x80 || v55 | v56 || v57 != 128)
          {
            sub_1C00F5ACC(*(void *)(a2 - 16), *(void *)(a2 - 8), *(unsigned char *)a2);
            uint64_t v61 = 0;
            goto LABEL_171;
          }
          sub_1C00F5AEC(0, 0, 0x80u);
          uint64_t v50 = 0;
          goto LABEL_142;
        }
        if (v54 == 1 && !v53 && v13 == 128)
        {
          if ((v57 & 0xC0) != 0x80 || v56 != 1 || v55 || v57 != 128)
          {
            sub_1C00F5ACC(*(void *)(a2 - 16), *(void *)(a2 - 8), *(unsigned char *)a2);
            uint64_t v61 = 1;
            goto LABEL_171;
          }
          sub_1C00F5AEC(1, 0, 0x80u);
          uint64_t v50 = 1;
          goto LABEL_142;
        }
        if (v54 == 2 && !v53 && v13 == 128)
        {
          if ((v57 & 0xC0) != 0x80 || v56 != 2 || v55 || v57 != 128)
          {
            sub_1C00F5ACC(*(void *)(a2 - 16), *(void *)(a2 - 8), *(unsigned char *)a2);
            uint64_t v61 = 2;
            goto LABEL_171;
          }
          sub_1C00F5AEC(2, 0, 0x80u);
          uint64_t v50 = 2;
          goto LABEL_142;
        }
        if (v54 == 3 && !v53 && v13 == 128)
        {
          if ((v57 & 0xC0) != 0x80 || v56 != 3 || v55 || v57 != 128)
          {
            sub_1C00F5ACC(*(void *)(a2 - 16), *(void *)(a2 - 8), *(unsigned char *)a2);
            uint64_t v61 = 3;
            goto LABEL_171;
          }
          sub_1C00F5AEC(3, 0, 0x80u);
          uint64_t v50 = 3;
          goto LABEL_142;
        }
        if (v54 == 4 && !v53 && v13 == 128)
        {
          if ((v57 & 0xC0) != 0x80 || v56 != 4 || v55 || v57 != 128)
          {
            sub_1C00F5ACC(*(void *)(a2 - 16), *(void *)(a2 - 8), *(unsigned char *)a2);
            uint64_t v61 = 4;
            goto LABEL_171;
          }
          sub_1C00F5AEC(4, 0, 0x80u);
          uint64_t v50 = 4;
          goto LABEL_142;
        }
        if (v54 == 5 && !v53 && v13 == 128)
        {
          if ((v57 & 0xC0) != 0x80 || v56 != 5 || v55 || v57 != 128)
          {
            sub_1C00F5ACC(*(void *)(a2 - 16), *(void *)(a2 - 8), *(unsigned char *)a2);
            uint64_t v61 = 5;
            goto LABEL_171;
          }
          sub_1C00F5AEC(5, 0, 0x80u);
          uint64_t v50 = 5;
          goto LABEL_142;
        }
        if ((v57 & 0xC0) == 0x80 && v56 == 6 && !v55 && v57 == 128)
        {
          sub_1C00F5AEC(6, 0, 0x80u);
          uint64_t v50 = 6;
LABEL_142:
          unint64_t v51 = 0;
          unsigned __int8 v52 = 0x80;
LABEL_39:
          sub_1C00F5AEC(v50, v51, v52);
          goto LABEL_40;
        }
        sub_1C00F5ACC(*(void *)(a2 - 16), *(void *)(a2 - 8), *(unsigned char *)a2);
        uint64_t v61 = 6;
LABEL_171:
        unint64_t v62 = 0;
        unsigned __int8 v63 = 0x80;
LABEL_172:
        sub_1C00F5AEC(v61, v62, v63);
        uint64_t v64 = v56;
        unint64_t v65 = v55;
        unsigned __int8 v66 = v57;
LABEL_173:
        sub_1C00F5AEC(v64, v65, v66);
LABEL_12:
        uint64_t v32 = v105;
        sub_1BFEFE988(v105, type metadata accessor for FormatDerivedDataResultOptionReference);
        a2 = (v107 + 1) & v101;
      }
      while (((*(void *)(v103 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_174:
  uint64_t v83 = *v99;
  *(void *)(*v99 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1C02CDEDC((uint64_t)v106, *(void *)(v83 + 48) + *(void *)(v100 + 72) * a2, type metadata accessor for FormatDerivedDataResultOptionReference);
  uint64_t v85 = *(void *)(v83 + 16);
  BOOL v86 = __OFADD__(v85, 1);
  uint64_t v87 = v85 + 1;
  if (v86) {
    goto LABEL_177;
  }
  *(void *)(v83 + 16) = v87;
  return result;
}

uint64_t sub_1C02C3FD8(uint64_t result, uint64_t a2, char a3, unint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = result;
  unint64_t v11 = *(void *)(*v5 + 16);
  unint64_t v12 = *(void *)(*v5 + 24);
  if (v12 <= v11 || (a5 & 1) == 0)
  {
    if (a5)
    {
      sub_1C02BDB94();
    }
    else
    {
      if (v12 > v11)
      {
        uint64_t result = (uint64_t)sub_1C02C739C(&qword_1EA1967D0, (void (*)(void))sub_1C00BB348, (uint64_t)&type metadata for FormatDerivedDataOptionScope, (uint64_t (*)(void))sub_1C02CDD4C);
        goto LABEL_35;
      }
      sub_1C02CA73C();
    }
    uint64_t v13 = *v5;
    sub_1C1520DBC();
    switch(a3)
    {
      case 5:
        sub_1C1520DCC();
        break;
      default:
        sub_1C1520DCC();
        sub_1C151E77C();
        break;
    }
    uint64_t result = sub_1C1520E0C();
    uint64_t v14 = -1 << *(unsigned char *)(v13 + 32);
    a4 = result & ~v14;
    uint64_t v15 = v13 + 56;
    if ((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
    {
      uint64_t v16 = ~v14;
      uint64_t v17 = *(void *)(v13 + 48);
      BOOL v19 = a3 == 5 && (a2 | v10) == 0;
      while (1)
      {
        uint64_t v20 = v17 + 24 * a4;
        uint64_t result = *(void *)v20;
        switch(*(unsigned char *)(v20 + 16))
        {
          case 1:
            if (a3 != 1) {
              goto LABEL_18;
            }
            goto LABEL_29;
          case 2:
            if (a3 == 2) {
              goto LABEL_29;
            }
            goto LABEL_18;
          case 3:
            if (a3 == 3) {
              goto LABEL_29;
            }
            goto LABEL_18;
          case 4:
            if (a3 == 4) {
              goto LABEL_29;
            }
            goto LABEL_18;
          case 5:
            if (!v19) {
              goto LABEL_18;
            }
            goto LABEL_34;
          default:
            if (a3) {
              goto LABEL_18;
            }
LABEL_29:
            BOOL v21 = result == v10 && *(void *)(v20 + 8) == a2;
            if (v21 || (uint64_t result = sub_1C1520A9C(), (result & 1) != 0))
            {
LABEL_34:
              uint64_t result = sub_1C1520CEC();
              __break(1u);
              goto LABEL_35;
            }
LABEL_18:
            a4 = (a4 + 1) & v16;
            if (((*(void *)(v15 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) == 0) {
              goto LABEL_35;
            }
            break;
        }
      }
    }
  }
LABEL_35:
  uint64_t v22 = *v6;
  *(void *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v23 = *(void *)(v22 + 48) + 24 * a4;
  *(void *)uint64_t v23 = v10;
  *(void *)(v23 + 8) = a2;
  *(unsigned char *)(v23 + 16) = a3;
  uint64_t v24 = *(void *)(v22 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
    JUMPOUT(0x1C02C429CLL);
  }
  *(void *)(v22 + 16) = v26;
  return result;
}

uint64_t sub_1C02C42CC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v42 = a1;
  uint64_t v6 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v35 - v12);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v35 - v15;
  MEMORY[0x1F4188790](v17);
  BOOL v19 = (uint64_t *)((char *)&v35 - v18);
  unint64_t v20 = *(void *)(*v3 + 16);
  unint64_t v21 = *(void *)(*v3 + 24);
  uint64_t v35 = v3;
  if (v21 <= v20 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BE264();
    }
    else
    {
      if (v21 > v20)
      {
        sub_1C02C7614((uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization, (void (*)(void, __n128))sub_1C02CDA9C, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_23;
      }
      sub_1C02CAD94();
    }
    uint64_t v40 = *v3;
    sub_1C1520DBC();
    sub_1C02CDE74(v42, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1C02CDEDC((uint64_t)v19, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
      sub_1C151E77C();
      sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    }
    else
    {
      uint64_t v43 = *v19;
      SportsDataVisualization.identifier.getter();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      swift_release();
    }
    uint64_t v22 = sub_1C1520E0C();
    uint64_t v23 = -1 << *(unsigned char *)(v40 + 32);
    a2 = v22 & ~v23;
    uint64_t v39 = v40 + 56;
    if ((*(void *)(v40 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v38 = ~v23;
      uint64_t v37 = *(void *)(v36 + 72);
      do
      {
        sub_1C02CDE74(*(void *)(v40 + 48) + v37 * a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1C02CDE74((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C02CDEDC((uint64_t)v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
          uint64_t v44 = 0x3A636972656E6567;
          unint64_t v45 = 0xE90000000000003ALL;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          uint64_t v24 = v44;
          unint64_t v25 = v45;
          sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
        }
        else
        {
          uint64_t v43 = *v13;
          uint64_t v44 = 0x3A3A7374726F7073;
          unint64_t v45 = 0xE800000000000000;
          SportsDataVisualization.identifier.getter();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v24 = v44;
          unint64_t v25 = v45;
        }
        uint64_t v26 = v41;
        sub_1C02CDE74(v42, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C02CDEDC((uint64_t)v26, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
          uint64_t v44 = 0x3A636972656E6567;
          unint64_t v45 = 0xE90000000000003ALL;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          uint64_t v27 = v44;
          unint64_t v28 = v45;
          sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
          if (v24 == v27) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v43 = *v26;
          uint64_t v44 = 0x3A3A7374726F7073;
          unint64_t v45 = 0xE800000000000000;
          SportsDataVisualization.identifier.getter();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_release();
          unint64_t v28 = v45;
          if (v24 == v44)
          {
LABEL_20:
            if (v25 == v28) {
              goto LABEL_26;
            }
          }
        }
        char v29 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEFE988((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (v29) {
          goto LABEL_27;
        }
        a2 = (a2 + 1) & v38;
      }
      while (((*(void *)(v39 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_23:
  uint64_t v30 = *v35;
  *(void *)(*v35 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1C02CDEDC(v42, *(void *)(v30 + 48) + *(void *)(v36 + 72) * a2, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v32 = *(void *)(v30 + 16);
  BOOL v33 = __OFADD__(v32, 1);
  uint64_t v34 = v32 + 1;
  if (v33)
  {
    __break(1u);
LABEL_26:
    swift_bridgeObjectRelease_n();
    sub_1BFEFE988((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_27:
    uint64_t result = sub_1C1520CEC();
    __break(1u);
  }
  else
  {
    *(void *)(v30 + 16) = v34;
  }
  return result;
}

uint64_t sub_1C02C4930(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for WebEmbedDatastoreCacheKey();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C02BDF44(v12 + 1, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey, (void (*)(void, __n128))sub_1C02CD9BC, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey, (void (*)(char *))sub_1C0F9A008);
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1C02CAABC();
LABEL_8:
    uint64_t v15 = *v4;
    sub_1C1520DBC();
    sub_1C0F9A008((uint64_t)v27);
    uint64_t v16 = sub_1C1520E0C();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1C02CDE74(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
        char v20 = sub_1C0F9C380((uint64_t)v11, a1);
        sub_1BFEFE988((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1C02C7614((uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey, (void (*)(void, __n128))sub_1C02CD9BC, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1C02CDEDC(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C1520CEC();
  __break(1u);
  return result;
}

uint64_t sub_1C02C4C20(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result & 1;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  char v22 = result & 1;
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_28;
  }
  if (a3)
  {
    sub_1C02BE4D0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1C02C7890();
      goto LABEL_28;
    }
    sub_1C02CAFCC();
  }
  uint64_t v8 = *v3;
  sub_1C1520DBC();
  if (v5) {
    uint64_t v9 = 0x746C7561666564;
  }
  else {
    uint64_t v9 = 1685217635;
  }
  if (v5) {
    unint64_t v10 = 0xE700000000000000;
  }
  else {
    unint64_t v10 = 0xE400000000000000;
  }
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C1520E0C();
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = *(unsigned char *)(*(void *)(v8 + 48) + a2) ? 0x746C7561666564 : 1685217635;
      unint64_t v14 = *(unsigned char *)(*(void *)(v8 + 48) + a2) ? 0xE700000000000000 : 0xE400000000000000;
      if (v13 == v9 && v14 == v10) {
        goto LABEL_31;
      }
      char v16 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_32;
      }
      a2 = (a2 + 1) & v12;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_28:
  uint64_t v17 = *v21;
  *(void *)(*v21 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v22;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (!v19)
  {
    *(void *)(v17 + 16) = v20;
    return result;
  }
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease_n();
LABEL_32:
  uint64_t result = sub_1C1520CEC();
  __break(1u);
  return result;
}

uint64_t sub_1C02C4E14(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BE7E0();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1C02C7A44();
        goto LABEL_52;
      }
      sub_1C02CB2A8();
    }
    uint64_t v8 = *v3;
    sub_1C1520DBC();
    sub_1C1520DCC();
    if (v5 != 12)
    {
      FormatOptionType.rawValue.getter();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1C1520E0C();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE700000000000000;
        uint64_t result = 0x6E61656C6F6F62;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 0:
            goto LABEL_26;
          case 1:
            unint64_t v11 = 0xE400000000000000;
            uint64_t result = 1702125924;
            goto LABEL_26;
          case 2:
            unint64_t v11 = 0xE400000000000000;
            uint64_t result = 1836412517;
            goto LABEL_26;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            uint64_t result = 0x74616F6C66;
            goto LABEL_26;
          case 4:
            uint64_t result = 0x72656765746E69;
            goto LABEL_26;
          case 5:
            unint64_t v11 = 0xE600000000000000;
            uint64_t result = 0x676E69727473;
            goto LABEL_26;
          case 6:
            unint64_t v11 = 0xE300000000000000;
            uint64_t result = 7107189;
            goto LABEL_26;
          case 7:
            unint64_t v11 = 0xE500000000000000;
            uint64_t result = 0x726F6C6F63;
            goto LABEL_26;
          case 8:
            unint64_t v11 = 0xE500000000000000;
            uint64_t result = 0x6567616D69;
            goto LABEL_26;
          case 9:
            unint64_t v11 = 0xE500000000000000;
            uint64_t result = 0x6F65646976;
            goto LABEL_26;
          case 0xA:
            unint64_t v11 = 0xE400000000000000;
            uint64_t result = 1953394534;
            goto LABEL_26;
          case 0xB:
            uint64_t result = 0x616C506F65646976;
            unint64_t v11 = 0xEB00000000726579;
LABEL_26:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v13 = 0x6E61656C6F6F62;
            switch(v5)
            {
              case 0:
                goto LABEL_46;
              case 1:
                unint64_t v12 = 0xE400000000000000;
                if (result != 1702125924) {
                  goto LABEL_48;
                }
                goto LABEL_47;
              case 2:
                unint64_t v12 = 0xE400000000000000;
                if (result != 1836412517) {
                  goto LABEL_48;
                }
                goto LABEL_47;
              case 3:
                unint64_t v12 = 0xE500000000000000;
                if (result != 0x74616F6C66) {
                  goto LABEL_48;
                }
                goto LABEL_47;
              case 4:
                if (result != 0x72656765746E69) {
                  goto LABEL_48;
                }
                goto LABEL_47;
              case 5:
                unint64_t v12 = 0xE600000000000000;
                if (result != 0x676E69727473) {
                  goto LABEL_48;
                }
                goto LABEL_47;
              case 6:
                unint64_t v12 = 0xE300000000000000;
                if (result != 7107189) {
                  goto LABEL_48;
                }
                goto LABEL_47;
              case 7:
                unint64_t v12 = 0xE500000000000000;
                if (result != 0x726F6C6F63) {
                  goto LABEL_48;
                }
                goto LABEL_47;
              case 8:
                unint64_t v12 = 0xE500000000000000;
                uint64_t v13 = 0x6567616D69;
LABEL_46:
                if (result == v13) {
                  goto LABEL_47;
                }
                goto LABEL_48;
              case 9:
                unint64_t v12 = 0xE500000000000000;
                if (result != 0x6F65646976) {
                  goto LABEL_48;
                }
                goto LABEL_47;
              case 10:
                unint64_t v12 = 0xE400000000000000;
                if (result != 1953394534) {
                  goto LABEL_48;
                }
                goto LABEL_47;
              case 11:
                unint64_t v12 = 0xEB00000000726579;
                if (result != 0x616C506F65646976) {
                  goto LABEL_48;
                }
LABEL_47:
                if (v11 == v12) {
                  goto LABEL_55;
                }
LABEL_48:
                char v14 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                uint64_t result = swift_bridgeObjectRelease();
                if (v14) {
                  goto LABEL_56;
                }
                goto LABEL_13;
              default:
                goto LABEL_13;
            }
          default:
            if (v5 == 12) {
              goto LABEL_56;
            }
LABEL_13:
            a2 = (a2 + 1) & v10;
            if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2)) {
              continue;
            }
            goto LABEL_52;
        }
      }
    }
  }
LABEL_52:
  uint64_t v15 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v15 + 48) + a2) = v5;
  uint64_t v16 = *(void *)(v15 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
LABEL_55:
    swift_bridgeObjectRelease_n();
LABEL_56:
    sub_1C1520CEC();
    __break(1u);
    JUMPOUT(0x1C02C5274);
  }
  *(void *)(v15 + 16) = v18;
  return result;
}

uint64_t sub_1C02C52D4(uint64_t result, unint64_t a2, char a3, unint64_t *a4, void (*a5)(void))
{
  int v7 = result;
  unint64_t v8 = *(void *)(*v5 + 16);
  unint64_t v9 = *(void *)(*v5 + 24);
  if (v9 > v8 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v10 = v8 + 1;
  if (a3)
  {
    sub_1C02BEC20(v10, a4, a5);
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (uint64_t)sub_1C02C6E30(a4, a5);
      goto LABEL_14;
    }
    sub_1C02CB6B4(v10, a4, a5);
  }
  uint64_t v11 = *v5;
  sub_1C1520DBC();
  sub_1C1520DCC();
  uint64_t result = sub_1C1520E0C();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a2 = result & ~v12;
  if ((*(void *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v13 = *(void *)(v11 + 48);
    if (*(unsigned __int8 *)(v13 + a2) == v7)
    {
LABEL_13:
      uint64_t result = sub_1C1520CEC();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v13 + a2) == v7) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v15 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v15 + 48) + a2) = v7;
  uint64_t v16 = *(void *)(v15 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    *(void *)(v15 + 16) = v18;
  }
  return result;
}

uint64_t sub_1C02C5448(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BEEC8();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1C02C6E30(&qword_1EA1991F0, (void (*)(void))sub_1C02CE030);
        goto LABEL_34;
      }
      sub_1C02CB92C();
    }
    uint64_t v8 = *v3;
    uint64_t result = sub_1C044FF80();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE600000000000000;
        uint64_t v12 = 0x74756F79616CLL;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v12 = 0x726564616568;
            break;
          case 2:
            uint64_t v12 = 0x7265746F6F66;
            break;
          case 3:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x6C6C6177796170;
            break;
          case 4:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x656D656874;
            break;
          case 5:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x7972617262696CLL;
            break;
          case 6:
            uint64_t v12 = 0x756F72676B636162;
            unint64_t v11 = 0xEA0000000000646ELL;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE600000000000000;
        uint64_t v14 = 0x74756F79616CLL;
        switch(v5)
        {
          case 1:
            uint64_t v15 = 1684104552;
            goto LABEL_22;
          case 2:
            uint64_t v15 = 1953460070;
LABEL_22:
            if (v12 != (v15 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
              goto LABEL_29;
            }
            goto LABEL_28;
          case 3:
            unint64_t v13 = 0xE700000000000000;
            if (v12 != 0x6C6C6177796170) {
              goto LABEL_29;
            }
            goto LABEL_28;
          case 4:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x656D656874) {
              goto LABEL_29;
            }
            goto LABEL_28;
          case 5:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x7972617262696CLL;
            goto LABEL_27;
          case 6:
            unint64_t v13 = 0xEA0000000000646ELL;
            if (v12 != 0x756F72676B636162) {
              goto LABEL_29;
            }
            goto LABEL_28;
          default:
LABEL_27:
            if (v12 != v14) {
              goto LABEL_29;
            }
LABEL_28:
            if (v11 == v13) {
              goto LABEL_37;
            }
LABEL_29:
            char v16 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v16) {
              goto LABEL_38;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_34:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v5;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
LABEL_37:
    swift_bridgeObjectRelease_n();
LABEL_38:
    sub_1C1520CEC();
    __break(1u);
    JUMPOUT(0x1C02C5758);
  }
  *(void *)(v17 + 16) = v20;
  return result;
}

uint64_t sub_1C02C5790(uint64_t result, uint64_t a2, char a3, unint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v10 = result;
  unint64_t v11 = *(void *)(*v5 + 16);
  unint64_t v12 = *(void *)(*v5 + 24);
  if (v12 <= v11 || (a5 & 1) == 0)
  {
    uint64_t v13 = v11 + 1;
    if (a5)
    {
      sub_1C02BF278(v13, &qword_1EA1991C0, (void (*)(void))sub_1C02CDCF8);
    }
    else
    {
      if (v12 > v11)
      {
        uint64_t result = (uint64_t)sub_1C02C739C(&qword_1EA1991C0, (void (*)(void))sub_1C02CDCF8, (uint64_t)&type metadata for FormatFileKey, (uint64_t (*)(void))sub_1C02CDCC8);
        goto LABEL_40;
      }
      sub_1C02CBCA8(v13, &qword_1EA1991C0, (void (*)(void))sub_1C02CDCF8);
    }
    uint64_t v14 = *v5;
    sub_1C1520DBC();
    sub_1C0EB9574();
    uint64_t result = sub_1C1520E0C();
    uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
    a4 = result & ~v15;
    uint64_t v16 = v14 + 56;
    if ((*(void *)(v14 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
    {
      uint64_t v17 = ~v15;
      uint64_t v18 = *(void *)(v14 + 48);
      while (1)
      {
        uint64_t v19 = v18 + 24 * a4;
        uint64_t result = *(void *)v19;
        switch(*(unsigned char *)(v19 + 16))
        {
          case 1:
            if (a3 != 1) {
              goto LABEL_11;
            }
            goto LABEL_34;
          case 2:
            if (a3 == 2) {
              goto LABEL_34;
            }
            goto LABEL_11;
          case 3:
            if (a3 == 3) {
              goto LABEL_34;
            }
            goto LABEL_11;
          case 4:
            if (a3 == 4) {
              goto LABEL_34;
            }
            goto LABEL_11;
          case 5:
            if (a3 == 5) {
              goto LABEL_34;
            }
            goto LABEL_11;
          case 6:
            if (a3 == 6) {
              goto LABEL_34;
            }
            goto LABEL_11;
          case 7:
            if (a3 == 7) {
              goto LABEL_34;
            }
            goto LABEL_11;
          case 8:
            if (a3 == 8) {
              goto LABEL_34;
            }
            goto LABEL_11;
          case 9:
            if (a3 == 9) {
              goto LABEL_34;
            }
            goto LABEL_11;
          case 0xA:
            if (a3 == 10) {
              goto LABEL_34;
            }
            goto LABEL_11;
          case 0xB:
            if (a3 == 11) {
              goto LABEL_34;
            }
            goto LABEL_11;
          default:
            if (a3) {
              goto LABEL_11;
            }
LABEL_34:
            BOOL v20 = result == v10 && *(void *)(v19 + 8) == a2;
            if (v20 || (uint64_t result = sub_1C1520A9C(), (result & 1) != 0))
            {
              uint64_t result = sub_1C1520CEC();
              __break(1u);
              goto LABEL_40;
            }
LABEL_11:
            a4 = (a4 + 1) & v17;
            if (((*(void *)(v16 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) == 0) {
              goto LABEL_40;
            }
            break;
        }
      }
    }
  }
LABEL_40:
  uint64_t v21 = *v6;
  *(void *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v22 = *(void *)(v21 + 48) + 24 * a4;
  *(void *)uint64_t v22 = v10;
  *(void *)(v22 + 8) = a2;
  *(unsigned char *)(v22 + 16) = a3;
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
    __break(1u);
    JUMPOUT(0x1C02C5A84);
  }
  *(void *)(v21 + 16) = v25;
  return result;
}

uint64_t sub_1C02C5AB4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_1C151D77C();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  char v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C02BF590();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C02C818C(MEMORY[0x1E4F7ADE8], (void (*)(void))sub_1C00BC108);
      goto LABEL_12;
    }
    sub_1C02CBF88();
  }
  uint64_t v13 = *v3;
  sub_1C02CDA54((unint64_t *)&unk_1EA19C960, 255, MEMORY[0x1E4F7ADE8]);
  uint64_t v14 = sub_1C151E47C();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    BOOL v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1C02CDA54(&qword_1EA1968D0, 255, MEMORY[0x1E4F7ADE8]);
      char v22 = sub_1C151E5CC();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C1520CEC();
  __break(1u);
  return result;
}

uint64_t sub_1C02C5D84(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v11 = result;
  unint64_t v12 = *(void *)(*v6 + 16);
  unint64_t v13 = *(void *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0) {
    goto LABEL_21;
  }
  if (a6)
  {
    sub_1C02BF980();
  }
  else
  {
    if (v13 > v12)
    {
      uint64_t result = (uint64_t)sub_1C02C7C20();
      goto LABEL_21;
    }
    sub_1C02CC338();
  }
  uint64_t v14 = *v6;
  sub_1C1520DBC();
  sub_1C151E77C();
  sub_1C1520DCC();
  sub_1C1520DCC();
  uint64_t result = sub_1C1520E0C();
  uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
  a5 = result & ~v15;
  uint64_t v16 = v14 + 56;
  if ((*(void *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
  {
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v14 + 48);
    do
    {
      BOOL v20 = (uint64_t *)(v18 + 32 * a5);
      uint64_t result = *v20;
      uint64_t v21 = v20[2];
      uint64_t v22 = v20[3];
      BOOL v23 = *v20 == v11 && v20[1] == a2;
      if (v23 || (uint64_t result = sub_1C1520A9C(), (result & 1) != 0))
      {
        if (v21 == a3 && v22 == a4) {
          goto LABEL_24;
        }
      }
      a5 = (a5 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
  }
LABEL_21:
  uint64_t v24 = *v29;
  *(void *)(*v29 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v25 = (uint64_t *)(*(void *)(v24 + 48) + 32 * a5);
  *uint64_t v25 = v11;
  v25[1] = a2;
  _OWORD v25[2] = a3;
  v25[3] = a4;
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C1520CEC();
  __break(1u);
  return result;
}

void sub_1C02C5F3C(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_1C02BFCC4(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C02C7FD4(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_1C02CC644(v13, a4, a5, a6, a7);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_1C151FB5C();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1BFC39268(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_1C151FB6C();

    if (v18)
    {
LABEL_13:
      sub_1C1520CEC();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_1C151FB6C();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

uint64_t sub_1C02C60F4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1C151677C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C02BFF60();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C02C818C(MEMORY[0x1E4F27DE8], (void (*)(void))sub_1C02CE144);
      goto LABEL_12;
    }
    sub_1C02CC8BC();
  }
  uint64_t v12 = *v3;
  sub_1C02CDA54(&qword_1EB85C780, 255, MEMORY[0x1E4F27DE8]);
  uint64_t v13 = sub_1C151E47C();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    id v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1C02CDA54(&qword_1EB8711A0, 255, MEMORY[0x1E4F27DE8]);
      char v21 = sub_1C151E5CC();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C1520CEC();
  __break(1u);
  return result;
}

uint64_t sub_1C02C63C4(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02C0350();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1C02C6E30(&qword_1EA199208, (void (*)(void))sub_1C00762BC);
        goto LABEL_25;
      }
      sub_1C02CCC6C();
    }
    uint64_t v8 = *v3;
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1520E0C();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE800000000000000;
        uint64_t v12 = 0x64656C6261736964;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x64657375636F66;
            break;
          case 2:
            uint64_t v12 = 0x6867696C68676968;
            unint64_t v11 = 0xEB00000000646574;
            break;
          case 3:
            uint64_t v12 = 0x64657463656C6573;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE800000000000000;
        uint64_t v14 = 0x64656C6261736964;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xE700000000000000;
            if (v12 != 0x64657375636F66) {
              goto LABEL_20;
            }
            goto LABEL_19;
          case 2:
            uint64_t v14 = 0x6867696C68676968;
            unint64_t v13 = 0xEB00000000646574;
            goto LABEL_18;
          case 3:
            if (v12 != 0x64657463656C6573) {
              goto LABEL_20;
            }
            goto LABEL_19;
          default:
LABEL_18:
            if (v12 != v14) {
              goto LABEL_20;
            }
LABEL_19:
            if (v11 == v13) {
              goto LABEL_28;
            }
LABEL_20:
            char v15 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_29;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_25:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_28:
    swift_bridgeObjectRelease_n();
LABEL_29:
    sub_1C1520CEC();
    __break(1u);
    JUMPOUT(0x1C02C6724);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

void *sub_1C02C6754()
{
  uint64_t v1 = v0;
  sub_1BFEFFF68(0, &qword_1EB87A378);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C152007C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C6900()
{
  uint64_t v1 = v0;
  sub_1C02CE270(0, &qword_1EB86B460, (void (*)(void))sub_1C02CE2D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C152007C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C6AD0()
{
  uint64_t v1 = v0;
  sub_1BFEFFF68(0, (unint64_t *)&unk_1EB86B470);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C152007C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C6C7C()
{
  uint64_t v1 = v0;
  sub_1C02CE270(0, (unint64_t *)&unk_1EB884C30, (void (*)(void))sub_1C007646C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C152007C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C6E30(unint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  sub_1C02CE270(0, a1, a2);
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1C152007C();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t result = (void *)(v5 + 56);
  uint64_t v8 = v4 + 56;
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 56 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v4 + 56), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 56);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v15) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v15) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v15) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v6 + 48) + v17) = *(unsigned char *)(*(void *)(v4 + 48) + v17);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v15) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C6FCC()
{
  uint64_t v1 = v0;
  sub_1C02CDBDC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C152007C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C7160(unint64_t *a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(void, void))
{
  uint64_t v6 = v4;
  sub_1C02CE270(0, a1, a2);
  uint64_t v7 = *v4;
  uint64_t v8 = sub_1C152007C();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v6 = v9;
    return result;
  }
  uint64_t result = (void *)(v8 + 56);
  uint64_t v11 = v7 + 56;
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  }
  int64_t v14 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v18) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v11 + 8 * v23);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v18) {
        goto LABEL_28;
      }
      unint64_t v24 = *(void *)(v11 + 8 * v14);
      if (!v24)
      {
        int64_t v14 = v23 + 2;
        if (v23 + 2 >= v18) {
          goto LABEL_28;
        }
        unint64_t v24 = *(void *)(v11 + 8 * v14);
        if (!v24) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    uint64_t v21 = 16 * v20;
    long long v22 = *(_OWORD *)(*(void *)(v7 + 48) + v21);
    *(_OWORD *)(*(void *)(v9 + 48) + v21) = v22;
    uint64_t result = (void *)a4(v22, *((void *)&v22 + 1));
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v18) {
    goto LABEL_28;
  }
  unint64_t v24 = *(void *)(v11 + 8 * v25);
  if (v24)
  {
    int64_t v14 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v14 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v11 + 8 * v14);
    ++v25;
    if (v24) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C7324()
{
  return sub_1C02C739C(&qword_1EA1991C8, (void (*)(void))sub_1C02CDD64, (uint64_t)&type metadata for FormatDerivedDataFileReference, (uint64_t (*)(void))sub_1C02CE324);
}

void *sub_1C02C7360()
{
  return sub_1C02C739C(&qword_1EA1967D0, (void (*)(void))sub_1C00BB348, (uint64_t)&type metadata for FormatDerivedDataOptionScope, (uint64_t (*)(void))sub_1C02CDD4C);
}

void *sub_1C02C739C(unint64_t *a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = v4;
  sub_1C02CE270(0, a1, a2);
  uint64_t v7 = *v4;
  uint64_t v8 = sub_1C152007C();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v6 = v9;
    return result;
  }
  uint64_t result = (void *)(v8 + 56);
  uint64_t v11 = v7 + 56;
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  }
  int64_t v14 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v18) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v11 + 8 * v26);
    ++v14;
    if (!v27)
    {
      int64_t v14 = v26 + 1;
      if (v26 + 1 >= v18) {
        goto LABEL_28;
      }
      unint64_t v27 = *(void *)(v11 + 8 * v14);
      if (!v27)
      {
        int64_t v14 = v26 + 2;
        if (v26 + 2 >= v18) {
          goto LABEL_28;
        }
        unint64_t v27 = *(void *)(v11 + 8 * v14);
        if (!v27) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    uint64_t v21 = 24 * v20;
    uint64_t v22 = *(void *)(v7 + 48) + v21;
    uint64_t v23 = *(void *)(v22 + 8);
    uint64_t v24 = *(void *)(v9 + 48) + v21;
    char v25 = *(unsigned char *)(v22 + 16);
    *(void *)uint64_t v24 = *(void *)v22;
    *(void *)(v24 + 8) = v23;
    *(unsigned char *)(v24 + 16) = v25;
    uint64_t result = (void *)a4();
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v18) {
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v11 + 8 * v28);
  if (v27)
  {
    int64_t v14 = v28;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v14 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v11 + 8 * v14);
    ++v28;
    if (v27) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C756C()
{
  return sub_1C02C7614((uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey, (void (*)(void, __n128))sub_1C02CD9BC, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
}

void *sub_1C02C75C0()
{
  return sub_1C02C7614((uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization, (void (*)(void, __n128))sub_1C02CDA9C, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
}

void *sub_1C02C7614(uint64_t (*a1)(void), void (*a2)(void, __n128), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v8 = v4;
  uint64_t v9 = a1(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9 - 8);
  int64_t v13 = (char *)&v31 - v12;
  a2(0, v11);
  uint64_t v14 = *v4;
  uint64_t v15 = sub_1C152007C();
  uint64_t v16 = v15;
  if (!*(void *)(v14 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v8 = v16;
    return result;
  }
  uint64_t result = (void *)(v15 + 56);
  unint64_t v18 = (unint64_t)((1 << *(unsigned char *)(v16 + 32)) + 63) >> 6;
  uint64_t v31 = v8;
  uint64_t v32 = (const void *)(v14 + 56);
  if (v16 != v14 || (unint64_t)result >= v14 + 56 + 8 * v18) {
    uint64_t result = memmove(result, v32, 8 * v18);
  }
  int64_t v20 = 0;
  *(void *)(v16 + 16) = *(void *)(v14 + 16);
  uint64_t v21 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & *(void *)(v14 + 56);
  int64_t v24 = (unint64_t)(v21 + 63) >> 6;
  while (1)
  {
    if (v23)
    {
      unint64_t v25 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      unint64_t v26 = v25 | (v20 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v28 >= v24) {
      goto LABEL_28;
    }
    unint64_t v29 = *((void *)v32 + v28);
    ++v20;
    if (!v29)
    {
      int64_t v20 = v28 + 1;
      if (v28 + 1 >= v24) {
        goto LABEL_28;
      }
      unint64_t v29 = *((void *)v32 + v20);
      if (!v29)
      {
        int64_t v20 = v28 + 2;
        if (v28 + 2 >= v24) {
          goto LABEL_28;
        }
        unint64_t v29 = *((void *)v32 + v20);
        if (!v29) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v23 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v20 << 6);
LABEL_12:
    unint64_t v27 = *(void *)(v10 + 72) * v26;
    sub_1C02CDE74(*(void *)(v14 + 48) + v27, (uint64_t)v13, a3);
    uint64_t result = (void *)sub_1C02CDEDC((uint64_t)v13, *(void *)(v16 + 48) + v27, a4);
  }
  int64_t v30 = v28 + 3;
  if (v30 >= v24)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v8 = v31;
    goto LABEL_30;
  }
  unint64_t v29 = *((void *)v32 + v30);
  if (v29)
  {
    int64_t v20 = v30;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v20 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v20 >= v24) {
      goto LABEL_28;
    }
    unint64_t v29 = *((void *)v32 + v20);
    ++v30;
    if (v29) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1C02C7890()
{
  uint64_t v1 = v0;
  sub_1C02CE270(0, &qword_1EA1991A8, (void (*)(void))sub_1C00FEF2C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C152007C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C7A44()
{
  uint64_t v1 = v0;
  sub_1C02CE270(0, &qword_1EB8902C8, (void (*)(void))sub_1C00699E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C152007C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C7BF8()
{
  return sub_1C02C6E30(&qword_1EA1991F0, (void (*)(void))sub_1C02CE030);
}

void *sub_1C02C7C20()
{
  uint64_t v1 = v0;
  sub_1C02CE270(0, &qword_1EA1991E8, (void (*)(void))sub_1C02CDFDC);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C152007C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22)
      {
        int64_t v9 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v9);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    long long v20 = *(_OWORD *)(v17 + 16);
    *(void *)uint64_t v19 = *(void *)v17;
    *(void *)(v19 + 8) = v18;
    *(_OWORD *)(v19 + 16) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C02C7DFC()
{
  uint64_t v1 = v0;
  sub_1C02CE270(0, &qword_1EB85E020, (void (*)(void))sub_1C00846FC);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C152007C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v19 = *(void **)v17;
    uint64_t v18 = *(void **)(v17 + 8);
    long long v20 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v20 = v19;
    v20[1] = v18;
    id v21 = v18;
    id result = v19;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C02C7FD4(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_1C00BBFA8(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1C152007C();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    id v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02C818C(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)&v25 - v7;
  a2(0);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_1C152007C();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    uint64_t *v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  unint64_t v26 = v4;
  unint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C02C8440()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EB87A350, (void (*)(void))sub_1BFDFD140);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1C02C876CLL);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1C02C8780()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EB86B460, (void (*)(void))sub_1C02CE2D0);
  uint64_t v3 = sub_1C152008C();
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    unint64_t result = swift_release();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_22;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_6:
    unint64_t v13 = *(void *)(*(void *)(v2 + 48) + 8 * v12);
    swift_retain();
    unint64_t result = sub_1C02C06C4(v13, v3);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C02C893C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1BFEFFF68(0, (unint64_t *)&unk_1EB86B470);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  int64_t v28 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v10) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v10) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v5 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_37;
              }
              if (v5 >= v10) {
                goto LABEL_33;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v5);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v5 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    uint64_t v19 = MEMORY[0x1C18C88D0](*(void *)(v4 + 40), v18, 4);
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x1C02C8BB8);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v11 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  uint64_t result = swift_release();
  uint64_t v1 = v28;
LABEL_35:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02C8BE8()
{
  uint64_t v1 = *v0;
  sub_1C02CE270(0, &qword_1EA199210, (void (*)(void))sub_1C007C210);
  uint64_t v2 = sub_1C152008C();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v24 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v25) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v25) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v24 + 8 * v9);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = *(unsigned char *)(*(void *)(v1 + 48) + v12);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1520E0C();
    uint64_t v17 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v20 = 0;
      unint64_t v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v22 = v19 == v21;
        if (v19 == v21) {
          unint64_t v19 = 0;
        }
        v20 |= v22;
        uint64_t v23 = *(void *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      unint64_t v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(unsigned char *)(*(void *)(v3 + 48) + v10) = v16;
    ++*(void *)(v3 + 16);
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v25) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C02C8F20()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EB87A358, (void (*)(void))sub_1C007E638);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1C02C92DCLL);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02C9324()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CDBDC();
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v10) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v10) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v5 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_37;
              }
              if (v5 >= v10) {
                goto LABEL_33;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v5);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v5 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1C1520DBC();
    sub_1C1520DCC();
    uint64_t v19 = sub_1C1520E0C();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x1C02C959CLL);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v11 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  uint64_t result = swift_release();
  uint64_t v1 = v0;
LABEL_35:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02C95D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA199218, (void (*)(void))sub_1C02CE1DC);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1520E0C();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C02C98DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, (unint64_t *)&unk_1EB8704B8, (void (*)(void))sub_1C02CDB88);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v30) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v30) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v30) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v10);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v30) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v10 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_40;
              }
              if (v10 >= v30) {
                goto LABEL_36;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v10);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v10 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    int64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_1C1520DBC();
    switch(v19)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
        sub_1C1520DCC();
        break;
      default:
        sub_1C1520DCC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        break;
    }
    uint64_t v21 = sub_1C1520E0C();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1C02C9CB4);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v9 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    int64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *int64_t v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
  }
LABEL_36:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_38:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02C9CF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA199198, (void (*)(void))sub_1C02CDB34);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v26 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v27) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v27) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = v2;
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1520E0C();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v8 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(unsigned char *)(*(void *)(v4 + 48) + v11) = v18;
    ++*(void *)(v4 + 16);
    uint64_t v2 = v17;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C02CA040()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, (unint64_t *)&unk_1EB8902A8, (void (*)(void))sub_1C0081EF8);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v30) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v30) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v30) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v10);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v30) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v10 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_40;
              }
              if (v10 >= v30) {
                goto LABEL_36;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v10);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v10 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    char v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_1C1520DBC();
    switch(v19)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
        sub_1C1520DCC();
        break;
      default:
        sub_1C1520DCC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        break;
    }
    uint64_t v21 = sub_1C1520E0C();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1C02CA400);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v9 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
  }
LABEL_36:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_38:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02CA43C(uint64_t a1)
{
  return sub_1C02CBCA8(a1, &qword_1EA1991C8, (void (*)(void))sub_1C02CDD64);
}

uint64_t sub_1C02CA464()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C02CDF44();
  uint64_t v7 = sub_1C152008C();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  char v25 = v0;
  uint64_t v26 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v14 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v16;
    if (!v22)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v16);
      if (!v22)
      {
        int64_t v16 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v16);
        if (!v22) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_7:
    uint64_t v19 = *(void *)(v3 + 72);
    sub_1C02CDE74(*(void *)(v6 + 48) + v19 * v18, (uint64_t)v5, type metadata accessor for FormatDerivedDataResultOptionReference);
    sub_1C1520DBC();
    sub_1C0163BB8((uint64_t)v27);
    sub_1C1520E0C();
    unint64_t v20 = sub_1C151FFDC();
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = sub_1C02CDEDC((uint64_t)v5, *(void *)(v8 + 48) + v20 * v19, type metadata accessor for FormatDerivedDataResultOptionReference);
    ++*(void *)(v8 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13)
  {
LABEL_23:
    uint64_t result = swift_release_n();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v16 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v16);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C02CA73C()
{
  uint64_t v1 = *v0;
  sub_1C02CE270(0, &qword_1EA1967D0, (void (*)(void))sub_1C00BB348);
  uint64_t v2 = sub_1C152008C();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_38;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v29 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_39;
    }
    if (v13 >= v30) {
      break;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v30) {
        break;
      }
      unint64_t v14 = *(void *)(v29 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v30) {
          break;
        }
        unint64_t v14 = *(void *)(v29 + 8 * v8);
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v30) {
            break;
          }
          unint64_t v14 = *(void *)(v29 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              int64_t v8 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_40;
              }
              if (v8 >= v30) {
                goto LABEL_36;
              }
              unint64_t v14 = *(void *)(v29 + 8 * v8);
              ++v15;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v8 = v15;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_24:
    uint64_t v16 = *(void *)(v1 + 48) + 24 * v12;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(unsigned __int8 *)(v16 + 16);
    sub_1C1520DBC();
    switch(v19)
    {
      case 5:
        sub_1C1520DCC();
        break;
      default:
        sub_1C1520DCC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        break;
    }
    uint64_t v20 = sub_1C1520E0C();
    uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v24 = 0;
    unint64_t v25 = (unint64_t)(63 - v21) >> 6;
    do
    {
      if (++v23 == v25 && (v24 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1C02CAAA4);
      }
      BOOL v26 = v23 == v25;
      if (v23 == v25) {
        unint64_t v23 = 0;
      }
      v24 |= v26;
      uint64_t v27 = *(void *)(v7 + 8 * v23);
    }
    while (v27 == -1);
    unint64_t v9 = __clz(__rbit64(~v27)) + (v23 << 6);
LABEL_7:
    *(void *)(v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v3 + 48) + 24 * v9;
    *(void *)uint64_t v10 = v17;
    *(void *)(v10 + 8) = v18;
    *(unsigned char *)(v10 + 16) = v19;
    ++*(void *)(v3 + 16);
  }
LABEL_36:
  uint64_t result = swift_release_n();
LABEL_38:
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_1C02CAABC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WebEmbedDatastoreCacheKey();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C02CD9BC();
  uint64_t v7 = sub_1C152008C();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v25 = v0;
  uint64_t v26 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v14 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v16;
    if (!v22)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v16);
      if (!v22)
      {
        int64_t v16 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v16);
        if (!v22) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_7:
    uint64_t v19 = *(void *)(v3 + 72);
    sub_1C02CDE74(*(void *)(v6 + 48) + v19 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1C1520DBC();
    sub_1C0F9A008((uint64_t)v27);
    sub_1C1520E0C();
    unint64_t v20 = sub_1C151FFDC();
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = sub_1C02CDEDC((uint64_t)v5, *(void *)(v8 + 48) + v20 * v19, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreCacheKey);
    ++*(void *)(v8 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13)
  {
LABEL_23:
    uint64_t result = swift_release_n();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v16 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v16);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C02CAD94()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C02CDA9C();
  uint64_t v7 = sub_1C152008C();
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_24:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = v6 + 56;
  uint64_t v10 = -1;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  unint64_t v11 = v10 & *(void *)(v6 + 56);
  int64_t v12 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_6;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v12) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_22;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_6:
    sub_1C02CDE74(*(void *)(v6 + 48) + *(void *)(v3 + 72) * v16, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t result = sub_1C02C07F4((uint64_t)v5, v7);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_22:
    uint64_t result = swift_release_n();
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v12) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C02CAFCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA1991A8, (void (*)(void))sub_1C00FEF2C);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1520E0C();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C02CB2A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EB8902C8, (void (*)(void))sub_1C00699E0);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v11 >= v9) {
                goto LABEL_35;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v11);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    int v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    sub_1C1520DBC();
    sub_1C1520DCC();
    if (v18 != 12)
    {
      sub_1C151E77C();
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = sub_1C1520E0C();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C02CB684);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_35:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_37:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02CB6B4(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v5 = *v3;
  sub_1C02CE270(0, a2, a3);
  uint64_t result = sub_1C152008C();
  uint64_t v7 = result;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v4 = v7;
    return result;
  }
  int64_t v8 = 0;
  uint64_t v9 = v5 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = result + 56;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v13) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v18);
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v9 + 8 * v8);
      if (!v19)
      {
        int64_t v8 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v8);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_24:
    char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    sub_1C1520DBC();
    sub_1C1520DCC();
    uint64_t result = sub_1C1520E0C();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v14 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v21;
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v4 = v3;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19)
  {
    int64_t v8 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v8 >= v13) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v8);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C02CB92C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA1991F0, (void (*)(void))sub_1C02CE030);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1C02CBC8CLL);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C02CBCA8(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  uint64_t v4 = *v3;
  sub_1C02CE270(0, a2, a3);
  uint64_t v5 = sub_1C152008C();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v31 = v4 + 56;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v4 + 56);
  int64_t v32 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v15 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v16 = v15 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v32) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v31 + 8 * v17);
    ++v12;
    if (!v18)
    {
      int64_t v12 = v17 + 1;
      if (v17 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v31 + 8 * v12);
      if (!v18)
      {
        int64_t v12 = v17 + 2;
        if (v17 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v31 + 8 * v12);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_24:
    uint64_t v20 = *(void *)(v4 + 48) + 24 * v16;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    char v23 = *(unsigned char *)(v20 + 16);
    sub_1C1520DBC();
    sub_1C1520DCC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v24 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v10 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v25) & ~*(void *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v10 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = *(void *)(v6 + 48) + 24 * v13;
    *(void *)uint64_t v14 = v21;
    *(void *)(v14 + 8) = v22;
    *(unsigned char *)(v14 + 16) = v23;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v31 + 8 * v19);
  if (v18)
  {
    int64_t v12 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v31 + 8 * v12);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C02CBF88()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151D77C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C00BC108();
  uint64_t v7 = sub_1C152008C();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1C02CDA54((unint64_t *)&unk_1EA19C960, 255, MEMORY[0x1E4F7ADE8]);
    uint64_t result = sub_1C151E47C();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C02CC338()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA1991E8, (void (*)(void))sub_1C02CDFDC);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    unint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    sub_1C1520DCC();
    sub_1C1520DCC();
    uint64_t result = sub_1C1520E0C();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
    *unint64_t v12 = v19;
    v12[1] = v20;
    void v12[2] = v21;
    void v12[3] = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C02CC644(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C00BBFA8(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C152008C();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v9;
    return result;
  }
  uint64_t v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_1C151FB5C();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C02CC8BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151677C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C02CE144();
  uint64_t v7 = sub_1C152008C();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1C02CDA54(&qword_1EB85C780, 255, MEMORY[0x1E4F27DE8]);
    uint64_t result = sub_1C151E47C();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C02CCC6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, &qword_1EA199208, (void (*)(void))sub_1C00762BC);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_37;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v11);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1C1520E0C();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x1C02CCF9CLL);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_35:
  *uint64_t v1 = v4;
  return result;
}

void sub_1C02CCFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_msgSend(*(id *)(*(void *)(a3 + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController)+ OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController), sel_messageHandlerManager);
  id v5 = (id)sub_1C151E5EC();
  objc_msgSend(v4, sel_addMessageHandler_name_, a1, v5);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

char *sub_1C02CD16C(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = sub_1C151635C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int64_t v11 = (char *)&ObjectType - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onReuse;
  sub_1BFEFDDF4(0, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  id v14 = objc_allocWithZone(v13);
  int64_t v15 = v4;
  *(void *)&v4[v12] = objc_msgSend(v14, sel_init);
  unint64_t v16 = &v15[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_layoutIdentifier];
  *(void *)unint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  swift_weakInit();
  int64_t v17 = &v15[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillShow];
  *(void *)int64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  char v18 = &v15[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillHide];
  *(void *)char v18 = 0;
  *((void *)v18 + 1) = 0;
  *(void *)&v15[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_teaserInteractionEvents] = MEMORY[0x1E4FBC870];
  uint64_t v19 = &v15[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_currentAccessoryView];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v20 = (uint64_t *)&v15[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_identifier];
  sub_1C151634C();
  uint64_t v21 = sub_1C151633C();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *uint64_t v20 = v21;
  v20[1] = v23;
  *(void *)&v15[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController] = a1;
  unint64_t v24 = &v15[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_componentProvider];
  *(void *)unint64_t v24 = a2;
  *((void *)v24 + 1) = a3;
  id v25 = a1;
  swift_unknownObjectRetain();

  v30.receiver = v15;
  v30.super_class = ObjectType;
  uint64_t v26 = (char *)objc_msgSendSuper2(&v30, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v27 = *(void *)&v26[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController]
      + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  swift_beginAccess();
  *(void *)(v27 + 8) = &protocol witness table for FormatPuzzleEmbedViewController;
  swift_unknownObjectWeakAssign();
  return v26;
}

uint64_t sub_1C02CD3DC(uint64_t a1)
{
  return a1;
}

void sub_1C02CD430()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151635C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onReuse;
  sub_1BFEFDDF4(0, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  *(void *)&v1[v6] = objc_msgSend(objc_allocWithZone(v7), sel_init);
  uint64_t v8 = &v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_layoutIdentifier];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  swift_weakInit();
  uint64_t v9 = &v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillShow];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = &v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_onKeyboardWillHide];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_teaserInteractionEvents] = MEMORY[0x1E4FBC870];
  int64_t v11 = &v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_currentAccessoryView];
  *(void *)int64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  uint64_t v12 = (uint64_t *)&v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_identifier];
  sub_1C151634C();
  uint64_t v13 = sub_1C151633C();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *uint64_t v12 = v13;
  v12[1] = v15;

  sub_1C152040C();
  __break(1u);
}

id _s8NewsFeed31FormatPuzzleEmbedViewControllerC06puzzleE16DidReceiveAction6actionySo07SWEmbedK0_p_tF_0(void *a1)
{
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C7A8);
  swift_unknownObjectRetain_n();
  uint64_t v3 = sub_1C15198AC();
  os_log_type_t v4 = sub_1C151F38C();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = v6;
    *(_DWORD *)id v5 = 136315138;
    id v7 = objc_msgSend(a1, sel_description);
    uint64_t v8 = sub_1C151E62C();
    unint64_t v10 = v9;

    sub_1BFDA76EC(v8, v10, &v15);
    sub_1C151FE1C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v3, v4, "FormatPuzzleEmbedViewController: Received embed action: type= %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v6, -1, -1);
    MEMORY[0x1C18C9B00](v5, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  id result = objc_msgSend(a1, sel_canHandle);
  if (result)
  {
    uint64_t v12 = sub_1C15198AC();
    os_log_type_t v13 = sub_1C151F38C();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1BFC31000, v12, v13, "FormatPuzzleEmbedViewController: Action is handled internally...", v14, 2u);
      MEMORY[0x1C18C9B00](v14, -1, -1);
    }

    return objc_msgSend(a1, sel_perform);
  }
  return result;
}

uint64_t sub_1C02CD880(uint64_t a1, uint64_t a2)
{
  return sub_1C02CDA54(&qword_1EA199180, a2, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedViewController);
}

uint64_t sub_1C02CD8C8@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1C02CD920()
{
  return swift_weakAssign();
}

uint64_t method lookup function for FormatPuzzleEmbedViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPuzzleEmbedViewController);
}

uint64_t dispatch thunk of FormatPuzzleEmbedViewController.__allocating_init(puzzleEmbedViewController:componentProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

void sub_1C02CD9BC()
{
  if (!qword_1EB86B468)
  {
    type metadata accessor for WebEmbedDatastoreCacheKey();
    sub_1C02CDA54(&qword_1EB88BFB8, 255, (void (*)(uint64_t))type metadata accessor for WebEmbedDatastoreCacheKey);
    unint64_t v0 = sub_1C15200BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B468);
    }
  }
}

uint64_t sub_1C02CDA54(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C02CDA9C()
{
  if (!qword_1EB863400)
  {
    type metadata accessor for WebEmbedDataVisualization();
    sub_1C02CDA54(&qword_1EB867CA0, 255, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    unint64_t v0 = sub_1C15200BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863400);
    }
  }
}

unint64_t sub_1C02CDB34()
{
  unint64_t result = qword_1EA1991A0;
  if (!qword_1EA1991A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1991A0);
  }
  return result;
}

unint64_t sub_1C02CDB88()
{
  unint64_t result = qword_1EB870448;
  if (!qword_1EB870448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870448);
  }
  return result;
}

void sub_1C02CDBDC()
{
  if (!qword_1EA1991B0)
  {
    type metadata accessor for UIUserInterfaceIdiom(255);
    sub_1C02CDA54((unint64_t *)&qword_1EA19C6D0, 255, type metadata accessor for UIUserInterfaceIdiom);
    unint64_t v0 = sub_1C15200BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1991B0);
    }
  }
}

unint64_t sub_1C02CDC74()
{
  unint64_t result = qword_1EA19C6E0;
  if (!qword_1EA19C6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19C6E0);
  }
  return result;
}

uint64_t sub_1C02CDCC8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xBu) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C02CDCE0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xBu) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1C02CDCF8()
{
  unint64_t result = qword_1EA1AA960;
  if (!qword_1EA1AA960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AA960);
  }
  return result;
}

uint64_t sub_1C02CDD4C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 4u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1C02CDD64()
{
  unint64_t result = qword_1EA1991D0;
  if (!qword_1EA1991D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1991D0);
  }
  return result;
}

void sub_1C02CDDB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C02CDE18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C02CDDB8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C02CDE74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C02CDEDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C02CDF44()
{
  if (!qword_1EA1991D8)
  {
    type metadata accessor for FormatDerivedDataResultOptionReference(255);
    sub_1C02CDA54(&qword_1EA1991E0, 255, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataResultOptionReference);
    unint64_t v0 = sub_1C15200BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1991D8);
    }
  }
}

unint64_t sub_1C02CDFDC()
{
  unint64_t result = qword_1EA1AA760;
  if (!qword_1EA1AA760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AA760);
  }
  return result;
}

unint64_t sub_1C02CE030()
{
  unint64_t result = qword_1EA1991F8;
  if (!qword_1EA1991F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1991F8);
  }
  return result;
}

uint64_t sub_1C02CE084()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C02CE0C4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  unint64_t v9 = *(uint64_t (**)(void *, void *))(v8 + 16);
  *(double *)uint64_t v12 = a1;
  *(double *)&v12[1] = a2;
  *(double *)&void v12[2] = a3;
  *(double *)&void v12[3] = a4;
  *(double *)int64_t v11 = a5;
  *(double *)&v11[1] = a6;
  *(double *)&v11[2] = a7;
  *(double *)&v11[3] = a8;
  return v9(v12, v11);
}

uint64_t sub_1C02CE10C(double *a1, double *a2)
{
  return (*(uint64_t (**)(double, double, double, double, double, double, double, double))(v2 + 16))(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

void sub_1C02CE144()
{
  if (!qword_1EB85E000)
  {
    sub_1C151677C();
    sub_1C02CDA54(&qword_1EB85C780, 255, MEMORY[0x1E4F27DE8]);
    unint64_t v0 = sub_1C15200BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85E000);
    }
  }
}

unint64_t sub_1C02CE1DC()
{
  unint64_t result = qword_1EA199220;
  if (!qword_1EA199220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199220);
  }
  return result;
}

uint64_t sub_1C02CE230()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C02CE268(uint64_t a1)
{
  sub_1C02B4AC4(a1, v1);
}

void sub_1C02CE270(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C15200BC();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C02CE2D0()
{
  unint64_t result = qword_1EB866980;
  if (!qword_1EB866980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866980);
  }
  return result;
}

uint64_t FormatGroupNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatGroupNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatGroupNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatGroupNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatGroupNodeStyle.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatGroupNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 128);
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v8 = *(void *)(v1 + 144);
  uint64_t v9 = *(void *)(v1 + 152);
  uint64_t v10 = *(void *)(v1 + 160);
  uint64_t v11 = *(void *)(v1 + 168);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 176);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatGroupNodeStyle.clipsToBounds.getter()
{
  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t FormatGroupNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 178);
}

uint64_t FormatGroupNodeStyle.__allocating_init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:clipsToBounds:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, long long *a9, __int16 a10)
{
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = *a6;
  uint64_t v16 = *a8;
  uint64_t v17 = a8[1];
  LOBYTE(a8) = *((unsigned char *)a8 + 16);
  long long v24 = a9[1];
  long long v25 = *a9;
  long long v22 = a9[3];
  long long v23 = a9[2];
  uint64_t v18 = *((void *)a9 + 8);
  uint64_t v19 = *((void *)a9 + 9);
  char v20 = *((unsigned char *)a9 + 80);
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_beginAccess();
  *(void *)(v14 + 48) = a5;
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 64) = a7;
  *(void *)(v14 + 72) = v16;
  *(void *)(v14 + 80) = v17;
  *(unsigned char *)(v14 + 88) = (_BYTE)a8;
  *(_OWORD *)(v14 + 96) = v25;
  *(_OWORD *)(v14 + 112) = v24;
  *(_OWORD *)(v14 + 128) = v23;
  *(_OWORD *)(v14 + 144) = v22;
  *(void *)(v14 + 160) = v18;
  *(void *)(v14 + 168) = v19;
  *(unsigned char *)(v14 + 176) = v20;
  *(_WORD *)(v14 + 177) = a10;
  return v14;
}

uint64_t FormatGroupNodeStyle.init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:clipsToBounds:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, long long *a9, __int16 a10)
{
  uint64_t v15 = *a6;
  uint64_t v17 = *a8;
  uint64_t v16 = a8[1];
  char v26 = *((unsigned char *)a8 + 16);
  long long v24 = a9[1];
  long long v25 = *a9;
  long long v22 = a9[3];
  long long v23 = a9[2];
  uint64_t v18 = *((void *)a9 + 8);
  uint64_t v21 = *((void *)a9 + 9);
  char v19 = *((unsigned char *)a9 + 80);
  swift_beginAccess();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  swift_beginAccess();
  *(void *)(v10 + 48) = a5;
  *(void *)(v10 + 56) = v15;
  *(void *)(v10 + 64) = a7;
  *(void *)(v10 + 72) = v17;
  *(void *)(v10 + 80) = v16;
  *(unsigned char *)(v10 + 88) = v26;
  *(_OWORD *)(v10 + 96) = v25;
  *(_OWORD *)(v10 + 112) = v24;
  *(_OWORD *)(v10 + 128) = v23;
  *(_OWORD *)(v10 + 144) = v22;
  *(void *)(v10 + 160) = v18;
  *(void *)(v10 + 168) = v21;
  *(unsigned char *)(v10 + 176) = v19;
  *(_WORD *)(v10 + 177) = a10;
  return v10;
}

uint64_t sub_1C02CE7F4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  swift_beginAccess();
  v224 = v1;
  uint64_t v7 = v1[6];
  swift_beginAccess();
  uint64_t v225 = a1;
  uint64_t v8 = *(void *)(a1 + 48);
  unint64_t v303 = MEMORY[0x1E4FBC868];
  int64_t v9 = *(void *)(v7 + 16);
  int64_t v10 = *(void *)(v8 + 16);
  if (__OFADD__(v9, v10)) {
    goto LABEL_99;
  }
  uint64_t v221 = v5;
  uint64_t v223 = v4;
  sub_1C02D1268();
  uint64_t v222 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = v7;
  sub_1C151E3AC();
  v278 = sub_1BFEF692C(0, v9, 0, MEMORY[0x1E4FBC860]);
  uint64_t v12 = *(void *)(v7 + 16);
  uint64_t v220 = v6;
  uint64_t v226 = v8;
  if (!v12) {
    goto LABEL_20;
  }
  int64_t v275 = v10;
  swift_bridgeObjectRetain();
  long long v13 = *(_OWORD *)(v11 + 144);
  long long v299 = *(_OWORD *)(v11 + 128);
  long long v300 = v13;
  long long v301 = *(_OWORD *)(v11 + 160);
  __int16 v302 = *(_WORD *)(v11 + 176);
  long long v14 = *(_OWORD *)(v11 + 80);
  long long v295 = *(_OWORD *)(v11 + 64);
  long long v296 = v14;
  long long v15 = *(_OWORD *)(v11 + 112);
  long long v297 = *(_OWORD *)(v11 + 96);
  long long v298 = v15;
  long long v16 = *(_OWORD *)(v11 + 48);
  long long v293 = *(_OWORD *)(v11 + 32);
  long long v294 = v16;
  uint64_t v17 = *((void *)&v293 + 1);
  uint64_t v18 = v12 - 1;
  for (uint64_t i = 184; ; i += 152)
  {
    uint64_t v20 = v293;
    sub_1C02D1450((uint64_t)&v293);
    sub_1C02D1450((uint64_t)&v293);
    swift_bridgeObjectRetain();
    unint64_t v21 = v303;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v280[0] = v21;
    unint64_t v24 = sub_1BFEF2D8C(v20, v17);
    uint64_t v25 = *(void *)(v21 + 16);
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    char v28 = v23;
    if (*(void *)(v21 + 24) >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v23) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1C106DCFC();
        if (v28) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_1C105907C(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_1BFEF2D8C(v20, v17);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_100;
      }
      unint64_t v24 = v29;
      if (v28)
      {
LABEL_11:
        BOOL v31 = *(void **)&v280[0];
        uint64_t v32 = *(void *)(*(void *)&v280[0] + 56) + 152 * v24;
        long long v33 = *(_OWORD *)(v32 + 16);
        long long v283 = *(_OWORD *)v32;
        long long v284 = v33;
        long long v34 = *(_OWORD *)(v32 + 80);
        long long v36 = *(_OWORD *)(v32 + 32);
        long long v35 = *(_OWORD *)(v32 + 48);
        long long v287 = *(_OWORD *)(v32 + 64);
        long long v288 = v34;
        long long v285 = v36;
        long long v286 = v35;
        long long v38 = *(_OWORD *)(v32 + 112);
        long long v37 = *(_OWORD *)(v32 + 128);
        long long v39 = *(_OWORD *)(v32 + 96);
        __int16 v292 = *(_WORD *)(v32 + 144);
        long long v290 = v38;
        long long v291 = v37;
        long long v289 = v39;
        sub_1C02D12CC((uint64_t)&v283);
        long long v40 = v294;
        *(_OWORD *)uint64_t v32 = v293;
        *(_OWORD *)(v32 + 16) = v40;
        long long v41 = v298;
        long long v43 = v295;
        long long v42 = v296;
        *(_OWORD *)(v32 + 64) = v297;
        *(_OWORD *)(v32 + 80) = v41;
        *(_OWORD *)(v32 + 32) = v43;
        *(_OWORD *)(v32 + 48) = v42;
        long long v45 = v300;
        long long v44 = v301;
        long long v46 = v299;
        *(_WORD *)(v32 + 144) = v302;
        *(_OWORD *)(v32 + 112) = v45;
        *(_OWORD *)(v32 + 128) = v44;
        *(_OWORD *)(v32 + 96) = v46;
        goto LABEL_15;
      }
    }
    BOOL v31 = *(void **)&v280[0];
    *(void *)(*(void *)&v280[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
    unint64_t v47 = (uint64_t *)(v31[6] + 16 * v24);
    *unint64_t v47 = v20;
    v47[1] = v17;
    uint64_t v48 = v31[7] + 152 * v24;
    __int16 v49 = v302;
    long long v51 = v300;
    long long v50 = v301;
    *(_OWORD *)(v48 + 96) = v299;
    *(_OWORD *)(v48 + 112) = v51;
    *(_OWORD *)(v48 + 128) = v50;
    *(_WORD *)(v48 + 144) = v49;
    long long v53 = v297;
    long long v52 = v298;
    long long v54 = v296;
    *(_OWORD *)(v48 + 32) = v295;
    *(_OWORD *)(v48 + 48) = v54;
    *(_OWORD *)(v48 + 64) = v53;
    *(_OWORD *)(v48 + 80) = v52;
    long long v55 = v294;
    *(_OWORD *)uint64_t v48 = v293;
    *(_OWORD *)(v48 + 16) = v55;
    uint64_t v56 = v31[2];
    BOOL v57 = __OFADD__(v56, 1);
    uint64_t v58 = v56 + 1;
    if (v57) {
      goto LABEL_95;
    }
    v31[2] = v58;
    swift_bridgeObjectRetain();
LABEL_15:
    unint64_t v303 = (unint64_t)v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v59 = v278[2];
    unint64_t v60 = v278[3];
    swift_bridgeObjectRetain();
    if (v59 >= v60 >> 1) {
      v278 = sub_1BFEF692C((void *)(v60 > 1), v59 + 1, 1, v278);
    }
    v278[2] = v59 + 1;
    uint64_t v61 = &v278[2 * v59];
    v61[4] = v20;
    v61[5] = v17;
    sub_1C02D12CC((uint64_t)&v293);
    if (!v18) {
      break;
    }
    long long v62 = *(_OWORD *)(v11 + i + 16);
    long long v293 = *(_OWORD *)(v11 + i);
    long long v294 = v62;
    long long v63 = *(_OWORD *)(v11 + i + 32);
    long long v64 = *(_OWORD *)(v11 + i + 48);
    long long v65 = *(_OWORD *)(v11 + i + 80);
    long long v297 = *(_OWORD *)(v11 + i + 64);
    long long v298 = v65;
    long long v295 = v63;
    long long v296 = v64;
    long long v66 = *(_OWORD *)(v11 + i + 96);
    long long v67 = *(_OWORD *)(v11 + i + 112);
    long long v68 = *(_OWORD *)(v11 + i + 128);
    __int16 v302 = *(_WORD *)(v11 + i + 144);
    long long v300 = v67;
    long long v301 = v68;
    long long v299 = v66;
    uint64_t v17 = *((void *)&v293 + 1);
    --v18;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v226;
  int64_t v10 = v275;
LABEL_20:
  uint64_t v69 = sub_1BFEF692C(0, v10, 0, MEMORY[0x1E4FBC860]);
  uint64_t v70 = *(void *)(v8 + 16);
  if (!v70) {
    goto LABEL_67;
  }
  swift_bridgeObjectRetain();
  long long v71 = *(_OWORD *)(v8 + 144);
  long long v299 = *(_OWORD *)(v8 + 128);
  long long v300 = v71;
  long long v301 = *(_OWORD *)(v8 + 160);
  __int16 v302 = *(_WORD *)(v8 + 176);
  long long v72 = *(_OWORD *)(v8 + 80);
  long long v295 = *(_OWORD *)(v8 + 64);
  long long v296 = v72;
  long long v73 = *(_OWORD *)(v8 + 112);
  long long v297 = *(_OWORD *)(v8 + 96);
  long long v298 = v73;
  long long v74 = *(_OWORD *)(v8 + 48);
  long long v293 = *(_OWORD *)(v8 + 32);
  long long v294 = v74;
  uint64_t v75 = v70 - 1;
  uint64_t v76 = *((void *)&v293 + 1);
  uint64_t v77 = 184;
  while (2)
  {
    uint64_t v78 = v293;
    uint64_t v79 = (void *)v303;
    uint64_t v80 = *(void *)(v303 + 16);
    sub_1C02D1450((uint64_t)&v293);
    if (v80)
    {
      swift_bridgeObjectRetain();
      unint64_t v81 = sub_1BFEF2D8C(v78, v76);
      if (v82)
      {
        uint64_t v83 = v79[7] + 152 * v81;
        long long v84 = *(_OWORD *)(v83 + 16);
        long long v283 = *(_OWORD *)v83;
        long long v284 = v84;
        long long v85 = *(_OWORD *)(v83 + 80);
        long long v87 = *(_OWORD *)(v83 + 32);
        long long v86 = *(_OWORD *)(v83 + 48);
        long long v287 = *(_OWORD *)(v83 + 64);
        long long v288 = v85;
        long long v285 = v87;
        long long v286 = v86;
        long long v88 = *(_OWORD *)(v83 + 96);
        long long v89 = *(_OWORD *)(v83 + 112);
        long long v90 = *(_OWORD *)(v83 + 128);
        __int16 v292 = *(_WORD *)(v83 + 144);
        long long v290 = v89;
        long long v291 = v90;
        long long v289 = v88;
        sub_1C02D1450((uint64_t)&v283);
        swift_bridgeObjectRelease();
        uint64_t v91 = v284;
        if (!(void)v284) {
          uint64_t v91 = swift_bridgeObjectRetain();
        }
        uint64_t v227 = v91;
        v241 = v69;
        uint64_t v92 = *((void *)&v284 + 1);
        uint64_t v93 = v285;
        char v94 = BYTE8(v285);
        uint64_t v257 = v285;
        uint64_t v259 = *((void *)&v284 + 1);
        char v95 = BYTE8(v285);
        if (BYTE8(v285) >= 0xFEu)
        {
          uint64_t v92 = *((void *)&v294 + 1);
          uint64_t v93 = v295;
          char v95 = BYTE8(v295);
          sub_1BFEF6828(*((uint64_t *)&v294 + 1), v295, SBYTE8(v295));
        }
        char v233 = v95;
        uint64_t v235 = v93;
        uint64_t v239 = v75;
        uint64_t v97 = *((void *)&v286 + 1);
        uint64_t v96 = v286;
        uint64_t v98 = *((void *)&v289 + 1);
        long long v99 = v290;
        uint64_t v253 = *((void *)&v286 + 1);
        uint64_t v255 = v286;
        uint64_t v249 = *((void *)&v287 + 1);
        uint64_t v273 = *((void *)&v287 + 1);
        uint64_t v251 = v287;
        uint64_t v276 = v287;
        uint64_t v245 = *((void *)&v288 + 1);
        uint64_t v270 = *((void *)&v288 + 1);
        uint64_t v247 = v288;
        uint64_t v271 = v288;
        uint64_t v267 = *((void *)&v289 + 1);
        uint64_t v243 = v289;
        uint64_t v269 = v289;
        uint64_t v263 = *((void *)&v290 + 1);
        uint64_t v265 = v290;
        unsigned __int8 v100 = v291;
        char v261 = v291;
        if (v291 == 254)
        {
          uint64_t v97 = *((void *)&v296 + 1);
          uint64_t v96 = v296;
          char v261 = v301;
          uint64_t v263 = *((void *)&v300 + 1);
          uint64_t v265 = v300;
          uint64_t v273 = *((void *)&v297 + 1);
          uint64_t v276 = v297;
          uint64_t v270 = *((void *)&v298 + 1);
          uint64_t v271 = v298;
          uint64_t v267 = *((void *)&v299 + 1);
          uint64_t v269 = v299;
          sub_1BFEF8708(v296, *((uint64_t *)&v296 + 1), v297, *((uint64_t *)&v297 + 1), v298, *((uint64_t *)&v298 + 1), v299, *((uint64_t *)&v299 + 1), v300, *((uint64_t *)&v300 + 1), v301);
        }
        uint64_t v231 = v96;
        uint64_t v101 = *((void *)&v291 + 1);
        if (!*((void *)&v291 + 1)) {
          uint64_t v101 = swift_bridgeObjectRetain();
        }
        uint64_t v230 = v101;
        if (v292 == 2) {
          char v102 = v302;
        }
        else {
          char v102 = v292;
        }
        char v103 = HIBYTE(v292);
        if (HIBYTE(v292) == 2) {
          char v103 = HIBYTE(v302);
        }
        char v228 = v103;
        char v229 = v102;
        long long v104 = v283;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_1BFEF6828(v259, v257, v94);
        sub_1BFEF8708(v255, v253, v251, v249, v247, v245, v243, v98, v99, *((uint64_t *)&v99 + 1), v100);
        swift_bridgeObjectRetain();
        char v105 = swift_isUniquelyReferenced_nonNull_native();
        v282 = v79;
        unint64_t v303 = 0x8000000000000000;
        unint64_t v107 = sub_1BFEF2D8C(v104, *((uint64_t *)&v104 + 1));
        uint64_t v108 = v79[2];
        BOOL v109 = (v106 & 1) == 0;
        uint64_t v110 = v108 + v109;
        if (__OFADD__(v108, v109)) {
          goto LABEL_97;
        }
        char v111 = v106;
        if (v79[3] >= v110)
        {
          uint64_t v75 = v239;
          uint64_t v69 = v241;
          if (v105)
          {
            uint64_t v114 = v227;
            if ((v106 & 1) == 0) {
              goto LABEL_62;
            }
          }
          else
          {
            sub_1C106DCFC();
            uint64_t v114 = v227;
            if ((v111 & 1) == 0) {
              goto LABEL_62;
            }
          }
        }
        else
        {
          sub_1C105907C(v110, v105);
          unint64_t v112 = sub_1BFEF2D8C(v104, *((uint64_t *)&v104 + 1));
          uint64_t v75 = v239;
          uint64_t v69 = v241;
          if ((v111 & 1) != (v113 & 1)) {
            goto LABEL_100;
          }
          unint64_t v107 = v112;
          uint64_t v114 = v227;
          if ((v111 & 1) == 0)
          {
LABEL_62:
            uint64_t v140 = v282;
            v282[(v107 >> 6) + 8] |= 1 << v107;
            *(_OWORD *)(v140[6] + 16 * v107) = v104;
            uint64_t v163 = v140[7] + 152 * v107;
            *(_OWORD *)uint64_t v163 = v104;
            *(void *)(v163 + 16) = v114;
            *(void *)(v163 + 24) = v92;
            *(void *)(v163 + 32) = v235;
            *(unsigned char *)(v163 + 40) = v233;
            *(void *)(v163 + 48) = v231;
            *(void *)(v163 + 56) = v97;
            *(void *)(v163 + 64) = v276;
            *(void *)(v163 + 72) = v273;
            *(void *)(v163 + 80) = v271;
            *(void *)(v163 + 88) = v270;
            *(void *)(v163 + 96) = v269;
            *(void *)(v163 + 104) = v267;
            *(void *)(v163 + 112) = v265;
            *(void *)(v163 + 120) = v263;
            *(unsigned char *)(v163 + 128) = v261;
            *(void *)(v163 + 136) = v230;
            *(unsigned char *)(v163 + 144) = v229;
            *(unsigned char *)(v163 + 145) = v228;
            uint64_t v164 = v140[2];
            BOOL v57 = __OFADD__(v164, 1);
            uint64_t v165 = v164 + 1;
            if (v57) {
              goto LABEL_98;
            }
            v140[2] = v165;
            swift_bridgeObjectRetain();
            goto LABEL_64;
          }
        }
        uint64_t v140 = v282;
        uint64_t v141 = v282[7] + 152 * v107;
        long long v142 = *(_OWORD *)(v141 + 16);
        v280[0] = *(_OWORD *)v141;
        v280[1] = v142;
        long long v143 = *(_OWORD *)(v141 + 80);
        long long v145 = *(_OWORD *)(v141 + 32);
        long long v144 = *(_OWORD *)(v141 + 48);
        v280[4] = *(_OWORD *)(v141 + 64);
        v280[5] = v143;
        v280[2] = v145;
        v280[3] = v144;
        long long v147 = *(_OWORD *)(v141 + 112);
        long long v146 = *(_OWORD *)(v141 + 128);
        long long v148 = *(_OWORD *)(v141 + 96);
        __int16 v281 = *(_WORD *)(v141 + 144);
        v280[7] = v147;
        v280[8] = v146;
        v280[6] = v148;
        sub_1C02D12CC((uint64_t)v280);
        *(_OWORD *)uint64_t v141 = v104;
        *(void *)(v141 + 16) = v114;
        *(void *)(v141 + 24) = v92;
        *(void *)(v141 + 32) = v235;
        *(unsigned char *)(v141 + 40) = v233;
        *(void *)(v141 + 48) = v231;
        *(void *)(v141 + 56) = v97;
        *(void *)(v141 + 64) = v276;
        *(void *)(v141 + 72) = v273;
        *(void *)(v141 + 80) = v271;
        *(void *)(v141 + 88) = v270;
        *(void *)(v141 + 96) = v269;
        *(void *)(v141 + 104) = v267;
        *(void *)(v141 + 112) = v265;
        *(void *)(v141 + 120) = v263;
        *(unsigned char *)(v141 + 128) = v261;
        *(void *)(v141 + 136) = v230;
        *(unsigned char *)(v141 + 144) = v229;
        *(unsigned char *)(v141 + 145) = v228;
LABEL_64:
        unint64_t v303 = (unint64_t)v140;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C02D12CC((uint64_t)&v283);
        sub_1C02D12CC((uint64_t)&v293);
        uint64_t v8 = v226;
        if (!v75) {
          goto LABEL_66;
        }
LABEL_65:
        long long v166 = *(_OWORD *)(v8 + v77 + 16);
        long long v293 = *(_OWORD *)(v8 + v77);
        long long v294 = v166;
        long long v167 = *(_OWORD *)(v8 + v77 + 32);
        long long v168 = *(_OWORD *)(v8 + v77 + 48);
        long long v169 = *(_OWORD *)(v8 + v77 + 80);
        long long v297 = *(_OWORD *)(v8 + v77 + 64);
        long long v298 = v169;
        long long v295 = v167;
        long long v296 = v168;
        long long v170 = *(_OWORD *)(v8 + v77 + 96);
        long long v171 = *(_OWORD *)(v8 + v77 + 112);
        long long v172 = *(_OWORD *)(v8 + v77 + 128);
        __int16 v302 = *(_WORD *)(v8 + v77 + 144);
        long long v300 = v171;
        long long v301 = v172;
        long long v299 = v170;
        uint64_t v76 = *((void *)&v293 + 1);
        v77 += 152;
        --v75;
        continue;
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  sub_1C02D1450((uint64_t)&v293);
  swift_bridgeObjectRetain();
  char v115 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v280[0] = v79;
  unint64_t v117 = sub_1BFEF2D8C(v78, v76);
  uint64_t v118 = v79[2];
  BOOL v119 = (v116 & 1) == 0;
  uint64_t v120 = v118 + v119;
  if (__OFADD__(v118, v119)) {
    goto LABEL_94;
  }
  char v121 = v116;
  if (v79[3] >= v120)
  {
    if (v115)
    {
      if ((v116 & 1) == 0) {
        goto LABEL_55;
      }
    }
    else
    {
      sub_1C106DCFC();
      if ((v121 & 1) == 0) {
        goto LABEL_55;
      }
    }
    goto LABEL_50;
  }
  sub_1C105907C(v120, v115);
  unint64_t v122 = sub_1BFEF2D8C(v78, v76);
  if ((v121 & 1) != (v123 & 1)) {
    goto LABEL_100;
  }
  unint64_t v117 = v122;
  if (v121)
  {
LABEL_50:
    uint64_t v124 = *(void **)&v280[0];
    uint64_t v125 = *(void *)(*(void *)&v280[0] + 56) + 152 * v117;
    long long v126 = *(_OWORD *)(v125 + 16);
    long long v283 = *(_OWORD *)v125;
    long long v284 = v126;
    long long v127 = *(_OWORD *)(v125 + 80);
    long long v129 = *(_OWORD *)(v125 + 32);
    long long v128 = *(_OWORD *)(v125 + 48);
    long long v287 = *(_OWORD *)(v125 + 64);
    long long v288 = v127;
    long long v285 = v129;
    long long v286 = v128;
    long long v131 = *(_OWORD *)(v125 + 112);
    long long v130 = *(_OWORD *)(v125 + 128);
    long long v132 = *(_OWORD *)(v125 + 96);
    __int16 v292 = *(_WORD *)(v125 + 144);
    long long v290 = v131;
    long long v291 = v130;
    long long v289 = v132;
    sub_1C02D12CC((uint64_t)&v283);
    long long v133 = v294;
    *(_OWORD *)uint64_t v125 = v293;
    *(_OWORD *)(v125 + 16) = v133;
    long long v134 = v298;
    long long v136 = v295;
    long long v135 = v296;
    *(_OWORD *)(v125 + 64) = v297;
    *(_OWORD *)(v125 + 80) = v134;
    *(_OWORD *)(v125 + 32) = v136;
    *(_OWORD *)(v125 + 48) = v135;
    long long v138 = v300;
    long long v137 = v301;
    long long v139 = v299;
    *(_WORD *)(v125 + 144) = v302;
    *(_OWORD *)(v125 + 112) = v138;
    *(_OWORD *)(v125 + 128) = v137;
    *(_OWORD *)(v125 + 96) = v139;
    goto LABEL_57;
  }
LABEL_55:
  uint64_t v124 = *(void **)&v280[0];
  *(void *)(*(void *)&v280[0] + 8 * (v117 >> 6) + 64) |= 1 << v117;
  uint64_t v149 = (uint64_t *)(v124[6] + 16 * v117);
  *uint64_t v149 = v78;
  v149[1] = v76;
  uint64_t v150 = v124[7] + 152 * v117;
  __int16 v151 = v302;
  long long v153 = v300;
  long long v152 = v301;
  *(_OWORD *)(v150 + 96) = v299;
  *(_OWORD *)(v150 + 112) = v153;
  *(_OWORD *)(v150 + 128) = v152;
  *(_WORD *)(v150 + 144) = v151;
  long long v155 = v297;
  long long v154 = v298;
  long long v156 = v296;
  *(_OWORD *)(v150 + 32) = v295;
  *(_OWORD *)(v150 + 48) = v156;
  *(_OWORD *)(v150 + 64) = v155;
  *(_OWORD *)(v150 + 80) = v154;
  long long v157 = v294;
  *(_OWORD *)uint64_t v150 = v293;
  *(_OWORD *)(v150 + 16) = v157;
  uint64_t v158 = v124[2];
  BOOL v57 = __OFADD__(v158, 1);
  uint64_t v159 = v158 + 1;
  if (v57) {
    goto LABEL_96;
  }
  v124[2] = v159;
  swift_bridgeObjectRetain();
LABEL_57:
  unint64_t v303 = (unint64_t)v124;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v160 = v69[2];
  unint64_t v161 = v69[3];
  swift_bridgeObjectRetain();
  if (v160 >= v161 >> 1) {
    uint64_t v69 = sub_1BFEF692C((void *)(v161 > 1), v160 + 1, 1, v69);
  }
  v69[2] = v160 + 1;
  uint64_t v162 = &v69[2 * v160];
  v162[4] = v78;
  v162[5] = v76;
  sub_1C02D12CC((uint64_t)&v293);
  if (v75) {
    goto LABEL_65;
  }
LABEL_66:
  swift_bridgeObjectRelease();
LABEL_67:
  *(void *)&long long v293 = v69;
  swift_bridgeObjectRetain();
  uint64_t v173 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v173);
  uint64_t v174 = v293;
  uint64_t v175 = *(void *)(v293 + 16);
  if (v175)
  {
    swift_bridgeObjectRetain();
    long long v176 = (uint64_t *)(v174 + 40);
    long long v177 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      unint64_t v178 = v303;
      if (*(void *)(v303 + 16))
      {
        uint64_t v180 = *(v176 - 1);
        uint64_t v179 = *v176;
        swift_bridgeObjectRetain_n();
        unint64_t v181 = sub_1BFEF2D8C(v180, v179);
        if (v182)
        {
          uint64_t v183 = *(void *)(v178 + 56) + 152 * v181;
          long long v184 = *(_OWORD *)(v183 + 16);
          long long v293 = *(_OWORD *)v183;
          long long v294 = v184;
          long long v185 = *(_OWORD *)(v183 + 80);
          long long v187 = *(_OWORD *)(v183 + 32);
          long long v186 = *(_OWORD *)(v183 + 48);
          long long v297 = *(_OWORD *)(v183 + 64);
          long long v298 = v185;
          long long v295 = v187;
          long long v296 = v186;
          long long v188 = *(_OWORD *)(v183 + 96);
          long long v189 = *(_OWORD *)(v183 + 112);
          long long v190 = *(_OWORD *)(v183 + 128);
          __int16 v302 = *(_WORD *)(v183 + 144);
          long long v300 = v189;
          long long v301 = v190;
          long long v299 = v188;
          sub_1C02D1450((uint64_t)&v293);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v177 = sub_1C0EE14E4(0, v177[2] + 1, 1, v177);
          }
          unint64_t v192 = v177[2];
          unint64_t v191 = v177[3];
          if (v192 >= v191 >> 1) {
            long long v177 = sub_1C0EE14E4((void *)(v191 > 1), v192 + 1, 1, v177);
          }
          v177[2] = v192 + 1;
          v193 = &v177[19 * v192];
          long long v194 = v294;
          *((_OWORD *)v193 + 2) = v293;
          *((_OWORD *)v193 + 3) = v194;
          long long v195 = v295;
          long long v196 = v296;
          long long v197 = v298;
          *((_OWORD *)v193 + 6) = v297;
          *((_OWORD *)v193 + 7) = v197;
          *((_OWORD *)v193 + 4) = v195;
          *((_OWORD *)v193 + 5) = v196;
          long long v198 = v299;
          long long v199 = v300;
          long long v200 = v301;
          *((_WORD *)v193 + 88) = v302;
          *((_OWORD *)v193 + 9) = v199;
          *((_OWORD *)v193 + 10) = v200;
          *((_OWORD *)v193 + 8) = v198;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v176 += 2;
      --v175;
    }
    while (v175);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v177 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v201 = v224;
  uint64_t v202 = v224[7];
  if (!v202)
  {
    uint64_t v202 = *(void *)(v225 + 56);
    swift_bridgeObjectRetain();
    v201 = v224;
  }
  uint64_t v203 = v201[8];
  if (!v203)
  {
    uint64_t v203 = swift_bridgeObjectRetain();
    v201 = v224;
  }
  uint64_t v260 = v203;
  uint64_t v266 = v202;
  uint64_t v204 = v201[9];
  uint64_t v205 = v201[10];
  uint64_t v268 = v204;
  uint64_t v264 = v205;
  unsigned int v206 = *((unsigned __int8 *)v201 + 88);
  char v262 = *((unsigned char *)v201 + 88);
  if (v206 >= 0xFE)
  {
    uint64_t v204 = *(void *)(v225 + 72);
    uint64_t v205 = *(void *)(v225 + 80);
    LOBYTE(v206) = *(unsigned char *)(v225 + 88);
    sub_1BFEF6828(v204, v205, v206);
    v201 = v224;
  }
  uint64_t v240 = v205;
  uint64_t v242 = v204;
  uint64_t v207 = v201[12];
  uint64_t v208 = v201[13];
  uint64_t v209 = v201[18];
  uint64_t v210 = v201[19];
  uint64_t v211 = v201[20];
  uint64_t v212 = v201[21];
  uint64_t v256 = v208;
  uint64_t v258 = v207;
  uint64_t v252 = v201[15];
  uint64_t v254 = v201[14];
  uint64_t v277 = v252;
  uint64_t v279 = v254;
  uint64_t v248 = v201[17];
  uint64_t v250 = v201[16];
  uint64_t v272 = v248;
  uint64_t v274 = v250;
  uint64_t v244 = v210;
  uint64_t v246 = v209;
  uint64_t v236 = v212;
  uint64_t v237 = v211;
  int v213 = *((unsigned __int8 *)v201 + 176);
  unsigned __int8 v214 = *((unsigned char *)v201 + 176);
  if (v213 == 254)
  {
    uint64_t v207 = *(void *)(v225 + 96);
    uint64_t v208 = *(void *)(v225 + 104);
    uint64_t v209 = *(void *)(v225 + 144);
    uint64_t v210 = *(void *)(v225 + 152);
    uint64_t v211 = *(void *)(v225 + 160);
    uint64_t v212 = *(void *)(v225 + 168);
    unsigned __int8 v214 = *(unsigned char *)(v225 + 176);
    uint64_t v277 = *(void *)(v225 + 120);
    uint64_t v279 = *(void *)(v225 + 112);
    uint64_t v272 = *(void *)(v225 + 136);
    uint64_t v274 = *(void *)(v225 + 128);
    sub_1BFEF8708(v207, v208, v279, v277, v274, v272, v209, v210, v211, v212, v214);
    v201 = v224;
  }
  uint64_t v232 = v209;
  uint64_t v234 = v208;
  char v238 = v206;
  int v215 = *((unsigned __int8 *)v201 + 177);
  if (v215 == 2) {
    LOBYTE(v215) = *(unsigned char *)(v225 + 177);
  }
  uint64_t v216 = v207;
  int v217 = *((unsigned __int8 *)v201 + 178);
  if (v217 == 2) {
    LOBYTE(v217) = *(unsigned char *)(v225 + 178);
  }
  uint64_t v218 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v218 + 16) = v223;
  *(void *)(v218 + 24) = v222;
  *(void *)(v218 + 32) = v221;
  *(void *)(v218 + 40) = v220;
  swift_beginAccess();
  *(void *)(v218 + 48) = v177;
  *(void *)(v218 + 56) = v266;
  *(void *)(v218 + 64) = v260;
  *(void *)(v218 + 72) = v242;
  *(void *)(v218 + 80) = v240;
  *(unsigned char *)(v218 + 88) = v238;
  *(void *)(v218 + 96) = v216;
  *(void *)(v218 + 104) = v234;
  *(void *)(v218 + 112) = v279;
  *(void *)(v218 + 120) = v277;
  *(void *)(v218 + 128) = v274;
  *(void *)(v218 + 136) = v272;
  *(void *)(v218 + 144) = v232;
  *(void *)(v218 + 152) = v210;
  *(void *)(v218 + 160) = v211;
  *(void *)(v218 + 168) = v212;
  *(unsigned char *)(v218 + 176) = v214;
  *(unsigned char *)(v218 + 177) = v215;
  *(unsigned char *)(v218 + 178) = v217;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v268, v264, v262);
  sub_1BFEF8708(v258, v256, v254, v252, v250, v248, v246, v244, v237, v236, v213);
  return v218;
}

uint64_t sub_1C02CF77C(uint64_t a1)
{
  uint64_t v100 = a1;
  uint64_t v101 = 0;
  uint64_t v122 = *MEMORY[0x1E4F143B8];
  uint64_t v94 = *v1;
  swift_beginAccess();
  long long v89 = v1;
  uint64_t v2 = v1[6];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1C0EE14E4(0, v3, 0, MEMORY[0x1E4FBC860]);
  long long v90 = sub_1C0EE13C4(0, v3, 0, v4);
  uint64_t v92 = *(void *)(v2 + 16);
  uint64_t v93 = v2;
  if (!v92)
  {
LABEL_31:
    sub_1C02D13A0();
    uint64_t v55 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void *)(v55 + 16);
    if (v56)
    {
      uint64_t v57 = v56 - 1;
      for (uint64_t i = 32; ; i += 160)
      {
        long long v59 = *(_OWORD *)(v55 + i + 16);
        long long v102 = *(_OWORD *)(v55 + i);
        long long v103 = v59;
        long long v60 = *(_OWORD *)(v55 + i + 32);
        long long v61 = *(_OWORD *)(v55 + i + 48);
        long long v62 = *(_OWORD *)(v55 + i + 80);
        long long v106 = *(_OWORD *)(v55 + i + 64);
        long long v107 = v62;
        long long v104 = v60;
        long long v105 = v61;
        long long v63 = *(_OWORD *)(v55 + i + 96);
        long long v64 = *(_OWORD *)(v55 + i + 112);
        long long v65 = *(_OWORD *)(v55 + i + 144);
        long long v110 = *(_OWORD *)(v55 + i + 128);
        long long v111 = v65;
        long long v108 = v63;
        long long v109 = v64;
        sub_1C02D1450((uint64_t)&v102);
        unint64_t v67 = v5[2];
        unint64_t v66 = v5[3];
        if (v67 >= v66 >> 1) {
          uint64_t v5 = sub_1C0EE14E4((void *)(v66 > 1), v67 + 1, 1, v5);
        }
        v5[2] = v67 + 1;
        long long v68 = &v5[19 * v67];
        long long v69 = v103;
        *((_OWORD *)v68 + 2) = v102;
        *((_OWORD *)v68 + 3) = v69;
        long long v70 = v104;
        long long v71 = v105;
        long long v72 = v107;
        *((_OWORD *)v68 + 6) = v106;
        *((_OWORD *)v68 + 7) = v72;
        *((_OWORD *)v68 + 4) = v70;
        *((_OWORD *)v68 + 5) = v71;
        long long v73 = v108;
        long long v74 = v109;
        long long v75 = v110;
        *((_WORD *)v68 + 88) = v111;
        *((_OWORD *)v68 + 9) = v74;
        *((_OWORD *)v68 + 10) = v75;
        *((_OWORD *)v68 + 8) = v73;
        if (!v57) {
          break;
        }
        --v57;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v76 = v5[2];
    if (v76)
    {
      uint64_t v77 = (uint64_t)v89;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v78 = v76 - 1;
      uint64_t v79 = v77;
      for (uint64_t j = 4; ; j += 19)
      {
        long long v81 = *(_OWORD *)&v5[j + 2];
        long long v102 = *(_OWORD *)&v5[j];
        long long v103 = v81;
        long long v82 = *(_OWORD *)&v5[j + 4];
        long long v83 = *(_OWORD *)&v5[j + 6];
        long long v84 = *(_OWORD *)&v5[j + 10];
        long long v106 = *(_OWORD *)&v5[j + 8];
        long long v107 = v84;
        long long v104 = v82;
        long long v105 = v83;
        long long v85 = *(_OWORD *)&v5[j + 12];
        long long v86 = *(_OWORD *)&v5[j + 14];
        long long v87 = *(_OWORD *)&v5[j + 16];
        LOWORD(v111) = v5[j + 18];
        long long v110 = v87;
        long long v108 = v85;
        long long v109 = v86;
        long long v118 = v85;
        long long v119 = v86;
        long long v120 = v87;
        __int16 v121 = v111;
        long long v114 = v104;
        long long v115 = v105;
        long long v116 = v106;
        long long v117 = v84;
        long long v112 = v102;
        long long v113 = v103;
        swift_allocObject();
        sub_1C02D1450((uint64_t)&v102);
        uint64_t v79 = sub_1C02D1520(v79, &v112);
        swift_release();
        if (!v78) {
          break;
        }
        --v78;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v79 = (uint64_t)v89;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v79;
  }
  uint64_t v91 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
LABEL_3:
  unint64_t v96 = v6;
  uint64_t v7 = v91 + 152 * v6;
  long long v8 = *(_OWORD *)(v7 + 16);
  long long v112 = *(_OWORD *)v7;
  long long v113 = v8;
  long long v9 = *(_OWORD *)(v7 + 32);
  long long v10 = *(_OWORD *)(v7 + 48);
  long long v11 = *(_OWORD *)(v7 + 80);
  long long v116 = *(_OWORD *)(v7 + 64);
  long long v117 = v11;
  long long v114 = v9;
  long long v115 = v10;
  long long v12 = *(_OWORD *)(v7 + 96);
  long long v13 = *(_OWORD *)(v7 + 112);
  long long v14 = *(_OWORD *)(v7 + 128);
  __int16 v121 = *(_WORD *)(v7 + 144);
  long long v119 = v13;
  long long v120 = v14;
  long long v118 = v12;
  long long v15 = v112;
  sub_1C02D1450((uint64_t)&v112);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  long long v102 = v15;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1BFEF53C0((uint64_t *)&v102);
  swift_bridgeObjectRelease();
  uint64_t v98 = *(void *)(v16 + 16);
  if (!v98)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  char v95 = v5;
  unint64_t v17 = 0;
  uint64_t v18 = (uint64_t *)(v16 + 64);
  uint64_t v19 = v16;
  while (1)
  {
    if (v17 >= *(void *)(v19 + 16))
    {
      __break(1u);
      goto LABEL_45;
    }
    uint64_t v97 = *(v18 - 2);
    uint64_t v20 = *(v18 - 1);
    uint64_t v21 = *v18;
    char v22 = *(unsigned char *)(v20 + 32);
    unsigned int v23 = v22 & 0x3F;
    unint64_t v24 = (unint64_t)((1 << v22) + 63) >> 6;
    size_t v25 = 8 * v24;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v27 = (char *)swift_slowAlloc();
    bzero(v27, v25);
    uint64_t v31 = v24;
    unint64_t v29 = v101;
    uint64_t v30 = sub_1BFEFB09C((uint64_t)v27, v31, v20, v100);
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_47;
    }
    uint64_t v101 = 0;
    MEMORY[0x1C18C9B00](v27, -1, -1);
LABEL_15:
    char v32 = sub_1BFEFAE14(v30, v20);
    swift_release();
    if (v32 & 1) != 0 && (sub_1BFEFB810(v100, v21))
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = v97;
      if (v97 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C02D1450((uint64_t)&v112);
        uint64_t v5 = v95;
        unint64_t v46 = v95[2];
        unint64_t v45 = v95[3];
        if (v46 >= v45 >> 1) {
          uint64_t v5 = sub_1C0EE14E4((void *)(v45 > 1), v46 + 1, 1, v95);
        }
        v5[2] = v46 + 1;
        unint64_t v47 = &v5[19 * v46];
        long long v48 = v113;
        *((_OWORD *)v47 + 2) = v112;
        *((_OWORD *)v47 + 3) = v48;
        long long v49 = v114;
        long long v50 = v115;
        long long v51 = v117;
        *((_OWORD *)v47 + 6) = v116;
        *((_OWORD *)v47 + 7) = v51;
        *((_OWORD *)v47 + 4) = v49;
        *((_OWORD *)v47 + 5) = v50;
        long long v52 = v118;
        long long v53 = v119;
        long long v54 = v120;
        *((_WORD *)v47 + 88) = v121;
        *((_OWORD *)v47 + 9) = v53;
        *((_OWORD *)v47 + 10) = v54;
        *((_OWORD *)v47 + 8) = v52;
      }
      else
      {
        sub_1C02D1450((uint64_t)&v112);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v34 = v90;
        unint64_t v36 = v90[2];
        unint64_t v35 = v90[3];
        uint64_t v5 = v95;
        if (v36 >= v35 >> 1) {
          long long v34 = sub_1C0EE13C4((void *)(v35 > 1), v36 + 1, 1, v90);
        }
        long long v106 = v116;
        long long v107 = v117;
        long long v104 = v114;
        long long v105 = v115;
        LOWORD(v111) = v121;
        long long v110 = v120;
        long long v108 = v118;
        long long v109 = v119;
        long long v102 = v112;
        long long v103 = v113;
        void v34[2] = v36 + 1;
        long long v90 = v34;
        long long v37 = &v34[20 * v36];
        long long v38 = v103;
        *((_OWORD *)v37 + 2) = v102;
        *((_OWORD *)v37 + 3) = v38;
        long long v39 = v104;
        long long v40 = v105;
        long long v41 = v107;
        *((_OWORD *)v37 + 6) = v106;
        *((_OWORD *)v37 + 7) = v41;
        *((_OWORD *)v37 + 4) = v39;
        *((_OWORD *)v37 + 5) = v40;
        long long v42 = v108;
        long long v43 = v110;
        uint64_t v44 = v111;
        *((_OWORD *)v37 + 9) = v109;
        *((_OWORD *)v37 + 10) = v43;
        *((_OWORD *)v37 + 8) = v42;
        v37[22] = v44;
        v37[23] = v33;
      }
LABEL_26:
      sub_1C02D12CC((uint64_t)&v112);
LABEL_27:
      unint64_t v6 = v96 + 1;
      if (v96 + 1 == v92)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v6 >= *(void *)(v93 + 16)) {
LABEL_45:
      }
        __break(1u);
      goto LABEL_3;
    }
    ++v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 += 5;
    if (v98 == v17)
    {
      swift_bridgeObjectRelease();
      sub_1C02D12CC((uint64_t)&v112);
      uint64_t v5 = v95;
      goto LABEL_27;
    }
  }
  long long v99 = &v89;
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v27 = (char *)&v89 - ((v25 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v27, v25);
  uint64_t v28 = v24;
  unint64_t v29 = v101;
  uint64_t v30 = sub_1BFEFB09C((uint64_t)v27, v28, v20, v100);
  swift_bridgeObjectRelease();
  if (!v29)
  {
    uint64_t v101 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_47:

  uint64_t result = MEMORY[0x1C18C9B00](v27, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C02CFF00()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = v0[3];
  uint64_t v29 = v0[2];
  uint64_t v3 = v0[5];
  uint64_t v27 = v0[4];
  swift_beginAccess();
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v28 = v2;
  uint64_t v26 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6) {
    uint64_t v7 = sub_1C096BB70(v6);
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = v1[9];
  uint64_t v9 = v1[10];
  char v10 = *((unsigned char *)v1 + 88);
  uint64_t v11 = v1[13];
  uint64_t v12 = v1[16];
  int v13 = *((unsigned __int8 *)v1 + 176);
  uint64_t v24 = v1[12];
  uint64_t v25 = v7;
  uint64_t v22 = v1[15];
  uint64_t v23 = v1[14];
  uint64_t v20 = v1[18];
  uint64_t v21 = v1[17];
  uint64_t v18 = v1[20];
  uint64_t v19 = v1[19];
  uint64_t v17 = v1[21];
  sub_1BFEF6828(v8, v9, v10);
  if (v13 != 254)
  {
    sub_1C10E55EC(v30);
    uint64_t v12 = v30[0];
    uint64_t v11 = v11;
  }
  __int16 v14 = *(_WORD *)((char *)v1 + 177);
  uint64_t v15 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v15 + 16) = v29;
  *(void *)(v15 + 24) = v28;
  *(void *)(v15 + 32) = v27;
  *(void *)(v15 + 40) = v26;
  swift_beginAccess();
  *(void *)(v15 + 48) = v4;
  *(void *)(v15 + 56) = v5;
  *(void *)(v15 + 64) = v25;
  *(void *)(v15 + 72) = v8;
  *(void *)(v15 + 80) = v9;
  *(unsigned char *)(v15 + 88) = v10;
  *(void *)(v15 + 96) = v24;
  *(void *)(v15 + 104) = v11;
  *(void *)(v15 + 112) = v23;
  *(void *)(v15 + 120) = v22;
  *(void *)(v15 + 128) = v12;
  *(void *)(v15 + 136) = v21;
  *(void *)(v15 + 144) = v20;
  *(void *)(v15 + 152) = v19;
  *(void *)(v15 + 160) = v18;
  *(void *)(v15 + 168) = v17;
  *(unsigned char *)(v15 + 176) = v13;
  *(_WORD *)(v15 + 177) = v14;
  return v15;
}

uint64_t FormatGroupNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(*(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  sub_1BFEF8738(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(unsigned char *)(v0 + 176));
  return v0;
}

uint64_t FormatGroupNodeStyle.__deallocating_deinit()
{
  FormatGroupNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C02D01D8(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed20FormatGroupNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatGroupNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatGroupNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  uint64_t v7 = *(void *)(v1 + 88);
  uint64_t v8 = *(void *)(v1 + 96);
  uint64_t v9 = *(void *)(v1 + 104);
  uint64_t v10 = *(void *)(v1 + 112);
  uint64_t v11 = *(void *)(v1 + 120);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 128);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatGroupNodeStyle.Selector.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 136);
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeStyle.Selector.clipsToBounds.getter()
{
  return *(unsigned __int8 *)(v0 + 144);
}

uint64_t FormatGroupNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 145);
}

uint64_t sub_1C02D0284@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1C02D029C(void *a1)
{
  return FormatGroupNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatGroupNodeStyle.auxViewRequirements.getter()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C02D02C4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 152);
  return result;
}

uint64_t sub_1C02D02D0()
{
  return sub_1C151533C();
}

uint64_t _s8NewsFeed20FormatGroupNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v50 = *(void *)(a1 + 48);
  uint64_t v51 = *(void *)(a1 + 56);
  uint64_t v52 = *(void *)(a1 + 64);
  uint64_t v53 = *(void *)(a1 + 72);
  uint64_t v54 = *(void *)(a1 + 80);
  uint64_t v55 = *(void *)(a1 + 88);
  uint64_t v56 = *(void *)(a1 + 96);
  uint64_t v57 = *(void *)(a1 + 104);
  uint64_t v48 = *(void *)(a1 + 120);
  uint64_t v49 = *(void *)(a1 + 112);
  int v58 = *(unsigned __int8 *)(a1 + 128);
  uint64_t v37 = *(void *)(a1 + 136);
  int v35 = *(unsigned __int8 *)(a1 + 144);
  int v6 = *(unsigned __int8 *)(a1 + 145);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  unsigned int v10 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v40 = *(void *)(a2 + 48);
  uint64_t v41 = *(void *)(a2 + 56);
  uint64_t v42 = *(void *)(a2 + 64);
  uint64_t v43 = *(void *)(a2 + 72);
  uint64_t v44 = *(void *)(a2 + 80);
  uint64_t v45 = *(void *)(a2 + 88);
  uint64_t v46 = *(void *)(a2 + 96);
  uint64_t v47 = *(void *)(a2 + 104);
  uint64_t v38 = *(void *)(a2 + 120);
  uint64_t v39 = *(void *)(a2 + 112);
  int v11 = *(unsigned __int8 *)(a2 + 128);
  uint64_t v36 = *(void *)(a2 + 136);
  int v33 = *(unsigned __int8 *)(a2 + 145);
  int v34 = *(unsigned __int8 *)(a2 + 144);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v12 = sub_1C1520A9C();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  if (v2)
  {
    if (!v8) {
      return 0;
    }
    int v32 = v6;
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    BOOL v15 = sub_1C00DFB58(v14, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v15) {
      return 0;
    }
  }
  else
  {
    int v32 = v6;
    if (v8) {
      return 0;
    }
  }
  if (v5 > 0xFD)
  {
    if (v10 > 0xFD) {
      goto LABEL_16;
    }
LABEL_14:
    sub_1BFEF6828(v7, v9, v10);
    sub_1BFEF68AC(v3, v4, v5);
    sub_1BFEF68AC(v7, v9, v10);
    return 0;
  }
  uint64_t v70 = v3;
  uint64_t v71 = v4;
  LOBYTE(v72) = v5;
  if (v10 > 0xFD)
  {
    sub_1BFF046A0(v3, v4, v5);
    sub_1BFF046A0(v3, v4, v5);
    sub_1BFF04738(v3, v4, v5);
    goto LABEL_14;
  }
  uint64_t v59 = v7;
  uint64_t v60 = v9;
  LOBYTE(v61) = v10;
  sub_1BFEF6828(v3, v4, v5);
  sub_1BFF046A0(v3, v4, v5);
  char v16 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v70, (uint64_t)&v59);
  sub_1BFF04738(v70, v71, v72);
  sub_1BFEF68AC(v3, v4, v5);
  if ((v16 & 1) == 0) {
    return 0;
  }
LABEL_16:
  char v17 = v58;
  if (v58 == 254)
  {
    int v18 = v32;
    uint64_t v20 = v56;
    uint64_t v19 = v57;
    uint64_t v22 = v54;
    uint64_t v21 = v55;
    uint64_t v24 = v52;
    uint64_t v23 = v53;
    uint64_t v25 = v50;
    uint64_t v26 = v51;
    uint64_t v27 = v48;
    uint64_t v28 = v49;
    if (v11 == 254) {
      goto LABEL_23;
    }
LABEL_21:
    uint64_t v70 = v25;
    uint64_t v71 = v26;
    uint64_t v72 = v24;
    uint64_t v73 = v23;
    uint64_t v74 = v22;
    uint64_t v75 = v21;
    uint64_t v76 = v20;
    uint64_t v77 = v19;
    uint64_t v78 = v28;
    uint64_t v79 = v27;
    char v80 = v17;
    uint64_t v81 = v40;
    uint64_t v82 = v41;
    uint64_t v83 = v42;
    uint64_t v84 = v43;
    uint64_t v85 = v44;
    uint64_t v86 = v45;
    uint64_t v87 = v46;
    uint64_t v88 = v47;
    uint64_t v89 = v39;
    uint64_t v90 = v38;
    char v91 = v11;
    sub_1BFEF8708(v40, v41, v42, v43, v44, v45, v46, v47, v39, v38, v11);
    sub_1C02D2004((uint64_t)&v70);
    return 0;
  }
  uint64_t v25 = v50;
  uint64_t v26 = v51;
  uint64_t v70 = v50;
  uint64_t v71 = v51;
  uint64_t v24 = v52;
  uint64_t v23 = v53;
  uint64_t v72 = v52;
  uint64_t v73 = v53;
  uint64_t v22 = v54;
  uint64_t v21 = v55;
  uint64_t v74 = v54;
  uint64_t v75 = v55;
  uint64_t v20 = v56;
  uint64_t v76 = v56;
  uint64_t v77 = v57;
  uint64_t v27 = v48;
  uint64_t v28 = v49;
  uint64_t v78 = v49;
  uint64_t v79 = v48;
  char v80 = v58;
  if (v11 == 254)
  {
    swift_retain();
    uint64_t v19 = v57;
    char v17 = v58;
    goto LABEL_21;
  }
  uint64_t v59 = v40;
  LODWORD(v60) = v41;
  uint64_t v61 = v42;
  uint64_t v62 = v43;
  uint64_t v63 = v44;
  uint64_t v64 = v45;
  uint64_t v65 = v46;
  uint64_t v66 = v47;
  uint64_t v67 = v39;
  uint64_t v68 = v38;
  char v69 = v11;
  sub_1BFEF8708(v50, v51, v52, v53, v54, v55, v56, v57, v49, v48, v58);
  swift_retain();
  char v29 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v70, (uint64_t)&v59);
  swift_release();
  sub_1BFEF8738(v50, v51, v52, v53, v54, v55, v56, v57, v49, v48, v58);
  int v18 = v32;
  if ((v29 & 1) == 0) {
    return 0;
  }
LABEL_23:
  if (v37)
  {
    if (!v36) {
      return 0;
    }
    int v30 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v31 = sub_1C00DE998(v37, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v18 = v30;
    if ((v31 & 1) == 0) {
      return 0;
    }
    goto LABEL_28;
  }
  if (v36) {
    return 0;
  }
LABEL_28:
  if (v35 == 2)
  {
    if (v34 != 2) {
      return 0;
    }
LABEL_33:
    if (v18 == 2)
    {
      if (v33 != 2) {
        return 0;
      }
    }
    else if (v33 == 2 || ((((v18 & 1) == 0) ^ v33) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  uint64_t result = 0;
  if (v34 != 2 && ((((v35 & 1) == 0) ^ v34) & 1) != 0) {
    goto LABEL_33;
  }
  return result;
}

uint64_t sub_1C02D0818(uint64_t a1)
{
  uint64_t result = sub_1C02D0950(&qword_1EA199228);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C02D085C(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C02D0950(&qword_1EB8896C0);
  uint64_t result = sub_1C02D0950(&qword_1EB866A88);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C02D08C4(void *a1)
{
  a1[1] = sub_1C02D0950(&qword_1EB8896C0);
  a1[2] = sub_1C02D0950(&qword_1EB866A88);
  uint64_t result = sub_1C02D0950(&qword_1EA199230);
  a1[3] = result;
  return result;
}

uint64_t sub_1C02D0950(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatGroupNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C02D0990(uint64_t a1)
{
  unint64_t result = sub_1C02D09B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C02D09B8()
{
  unint64_t result = qword_1EA199238;
  if (!qword_1EA199238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199238);
  }
  return result;
}

unint64_t sub_1C02D0A0C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C00780EC();
  unint64_t result = sub_1C0078140();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C02D0A3C(void *a1)
{
  a1[1] = sub_1C00780EC();
  a1[2] = sub_1C0078140();
  unint64_t result = sub_1C02D0A74();
  a1[3] = result;
  return result;
}

unint64_t sub_1C02D0A74()
{
  unint64_t result = qword_1EA199240;
  if (!qword_1EA199240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199240);
  }
  return result;
}

uint64_t sub_1C02D0AC8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02D0B18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatGroupNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatGroupNodeStyle);
}

uint64_t dispatch thunk of FormatGroupNodeStyle.__allocating_init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:clipsToBounds:ignoresSmartInvertColors:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t destroy for FormatGroupNodeStyle.Selector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD) {
    sub_1BFF04738(*(void *)(a1 + 24), *(void *)(a1 + 32), v2);
  }
  if (*(unsigned __int8 *)(a1 + 128) != 254) {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatGroupNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 32);
    sub_1BFF046A0(v6, v7, v5);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    *(unsigned char *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  if (*(unsigned __int8 *)(a2 + 128) == 254)
  {
    long long v8 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v8;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
  }
  else
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
    swift_retain();
  }
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatGroupNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 24);
  unsigned int v5 = (_OWORD *)(a2 + 24);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      uint64_t v11 = *(void *)(a2 + 24);
      uint64_t v12 = *(void *)(a2 + 32);
      sub_1BFF046A0(v11, v12, *(unsigned char *)(a2 + 40));
      uint64_t v13 = *(void *)(a1 + 24);
      uint64_t v14 = *(void *)(a1 + 32);
      *(void *)(a1 + 24) = v11;
      *(void *)(a1 + 32) = v12;
      char v15 = *(unsigned char *)(a1 + 40);
      *(unsigned char *)(a1 + 40) = v6;
      sub_1BFF04738(v13, v14, v15);
    }
    else
    {
      sub_1C02D0F84(a1 + 24);
      char v8 = *(unsigned char *)(a2 + 40);
      _OWORD *v4 = *v5;
      *(unsigned char *)(a1 + 40) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    sub_1BFF046A0(v9, v10, *(unsigned char *)(a2 + 40));
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(unsigned char *)(a1 + 40) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    _OWORD *v4 = v7;
  }
  char v16 = (_OWORD *)(a1 + 48);
  char v17 = (_OWORD *)(a2 + 48);
  int v18 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 254)
  {
    if (v18 == 254)
    {
      long long v19 = *(_OWORD *)(a2 + 64);
      *char v16 = *v17;
      *(_OWORD *)(a1 + 64) = v19;
      long long v20 = *(_OWORD *)(a2 + 80);
      long long v21 = *(_OWORD *)(a2 + 96);
      long long v22 = *(_OWORD *)(a2 + 112);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v21;
      *(_OWORD *)(a1 + 112) = v22;
      *(_OWORD *)(a1 + 80) = v20;
    }
    else
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      long long v27 = *(_OWORD *)(a2 + 88);
      long long v28 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
      *(_OWORD *)(a1 + 104) = v28;
      *(_OWORD *)(a1 + 88) = v27;
      swift_retain();
    }
  }
  else if (v18 == 254)
  {
    sub_1C02D0FD8(a1 + 48);
    long long v23 = *(_OWORD *)(a2 + 64);
    *char v16 = *v17;
    *(_OWORD *)(a1 + 64) = v23;
    long long v25 = *(_OWORD *)(a2 + 96);
    long long v24 = *(_OWORD *)(a2 + 112);
    long long v26 = *(_OWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v25;
    *(_OWORD *)(a1 + 112) = v24;
    *(_OWORD *)(a1 + 80) = v26;
  }
  else
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_retain();
    swift_release();
    long long v29 = *(_OWORD *)(a2 + 88);
    long long v30 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
    *(_OWORD *)(a1 + 104) = v30;
    *(_OWORD *)(a1 + 88) = v29;
  }
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  return a1;
}

uint64_t sub_1C02D0F84(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C02D0FD8(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy146_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for FormatGroupNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  long long v5 = (_OWORD *)(a2 + 24);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 40);
  if (v6 > 0xFD) {
    goto LABEL_4;
  }
  unsigned int v7 = *(unsigned __int8 *)(a2 + 40);
  if (v7 > 0xFD)
  {
    sub_1C02D0F84(a1 + 24);
LABEL_4:
    *(_OWORD *)(a1 + 24) = *v5;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *v5;
  *(unsigned char *)(a1 + 40) = v7;
  sub_1BFF04738(v8, v9, v6);
LABEL_6:
  if (*(unsigned __int8 *)(a1 + 128) != 254)
  {
    if (*(unsigned __int8 *)(a2 + 128) != 254)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_release();
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
      goto LABEL_11;
    }
    sub_1C02D0FD8(a1 + 48);
  }
  long long v10 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
LABEL_11:
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatGroupNodeStyle.Selector(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 146)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatGroupNodeStyle.Selector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 144) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 146) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 146) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupNodeStyle.Selector()
{
  return &type metadata for FormatGroupNodeStyle.Selector;
}

void sub_1C02D1268()
{
  if (!qword_1EB86AE68)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86AE68);
    }
  }
}

uint64_t sub_1C02D12CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 112);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 120);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 128);
  char v9 = *(unsigned char *)(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v2, v3, v9);
  sub_1BFEF8738(v16, v15, v14, v13, v4, v5, v12, v11, v6, v7, v8);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C02D13A0()
{
  if (!qword_1EB868670)
  {
    sub_1C02D13FC();
    unint64_t v0 = type metadata accessor for FormatNodeStyleSelectorOrder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB868670);
    }
  }
}

unint64_t sub_1C02D13FC()
{
  unint64_t result = qword_1EB866A80;
  if (!qword_1EB866A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866A80);
  }
  return result;
}

uint64_t sub_1C02D1450(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 112);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 120);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 128);
  char v9 = *(unsigned char *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v2, v3, v9);
  sub_1BFEF8708(v16, v15, v14, v13, v4, v5, v12, v11, v6, v7, v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C02D1520(uint64_t a1, long long *a2)
{
  long long v4 = a2[7];
  long long v55 = a2[6];
  long long v56 = v4;
  long long v57 = a2[8];
  __int16 v58 = *((_WORD *)a2 + 72);
  long long v5 = a2[3];
  long long v51 = a2[2];
  long long v52 = v5;
  long long v6 = a2[5];
  long long v53 = a2[4];
  long long v54 = v6;
  long long v7 = a2[1];
  long long v49 = *a2;
  long long v50 = v7;
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v2 + 16) = v8;
  *(void *)(v2 + 24) = v9;
  uint64_t v10 = *(void *)(a1 + 40);
  *(void *)(v2 + 32) = *(void *)(a1 + 32);
  *(void *)(v2 + 40) = v10;
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 48);
  swift_beginAccess();
  *(void *)(v2 + 48) = v11;
  uint64_t v12 = *((void *)&v57 + 1);
  if (!*((void *)&v57 + 1)) {
    uint64_t v12 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 56) = v12;
  uint64_t v13 = v50;
  if (!(void)v50) {
    uint64_t v13 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 64) = v13;
  uint64_t v14 = *((void *)&v50 + 1);
  uint64_t v15 = v51;
  uint64_t v47 = v51;
  uint64_t v48 = *((void *)&v50 + 1);
  char v16 = BYTE8(v51);
  char v46 = BYTE8(v51);
  if (BYTE8(v51) >= 0xFEu)
  {
    uint64_t v14 = *(void *)(a1 + 72);
    uint64_t v15 = *(void *)(a1 + 80);
    char v16 = *(unsigned char *)(a1 + 88);
    sub_1BFEF6828(v14, v15, v16);
  }
  *(void *)(v2 + 72) = v14;
  *(void *)(v2 + 80) = v15;
  uint64_t v17 = *((void *)&v52 + 1);
  uint64_t v19 = *((void *)&v53 + 1);
  uint64_t v18 = v53;
  uint64_t v21 = *((void *)&v54 + 1);
  uint64_t v20 = v54;
  uint64_t v23 = *((void *)&v55 + 1);
  uint64_t v22 = v55;
  uint64_t v44 = *((void *)&v52 + 1);
  uint64_t v45 = v52;
  uint64_t v24 = v52;
  uint64_t v42 = *((void *)&v53 + 1);
  uint64_t v43 = v53;
  uint64_t v40 = *((void *)&v54 + 1);
  uint64_t v41 = v54;
  uint64_t v38 = *((void *)&v55 + 1);
  uint64_t v39 = v55;
  uint64_t v25 = *((void *)&v56 + 1);
  unsigned long long v27 = v56;
  uint64_t v36 = v27 >> 64;
  uint64_t v26 = v27;
  uint64_t v37 = v56;
  *(unsigned char *)(v2 + 88) = v16;
  unsigned __int8 v28 = v57;
  unsigned __int8 v35 = v57;
  if (v57 == 254)
  {
    uint64_t v33 = *(void *)(a1 + 104);
    uint64_t v34 = *(void *)(a1 + 96);
    uint64_t v19 = *(void *)(a1 + 120);
    uint64_t v32 = *(void *)(a1 + 112);
    uint64_t v20 = *(void *)(a1 + 128);
    uint64_t v21 = *(void *)(a1 + 136);
    uint64_t v22 = *(void *)(a1 + 144);
    uint64_t v23 = *(void *)(a1 + 152);
    uint64_t v26 = *(void *)(a1 + 160);
    uint64_t v25 = *(void *)(a1 + 168);
    unsigned __int8 v28 = *(unsigned char *)(a1 + 176);
    sub_1BFEF8708(v34, v33, v32, v19, v20, v21, v22, v23, v26, v25, v28);
    uint64_t v18 = v32;
    uint64_t v17 = v33;
    uint64_t v24 = v34;
  }
  *(void *)(v2 + 96) = v24;
  *(void *)(v2 + 104) = v17;
  *(void *)(v2 + 112) = v18;
  *(void *)(v2 + 120) = v19;
  *(void *)(v2 + 128) = v20;
  *(void *)(v2 + 136) = v21;
  *(void *)(v2 + 144) = v22;
  *(void *)(v2 + 152) = v23;
  *(void *)(v2 + 160) = v26;
  *(void *)(v2 + 168) = v25;
  *(unsigned char *)(v2 + 176) = v28;
  char v29 = v58;
  if (v58 == 2) {
    char v29 = *(unsigned char *)(a1 + 177);
  }
  *(unsigned char *)(v2 + 177) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v48, v47, v46);
  sub_1BFEF8708(v45, v44, v43, v42, v41, v40, v39, v38, v37, v36, v35);
  sub_1C02D12CC((uint64_t)&v49);
  char v30 = HIBYTE(v58);
  if (HIBYTE(v58) == 2) {
    char v30 = *(unsigned char *)(a1 + 178);
  }
  *(unsigned char *)(v2 + 178) = v30;
  return v2;
}

void *sub_1C02D17A8(double *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v3);
  sub_1C0181BEC(0);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v48 = *(void *)(*(void *)(v5 - 8) + 72);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  uint64_t v43 = v7;
  uint64_t v9 = (void *)(v8 + v7);
  if (a2)
  {
    uint64_t v11 = *(void *)(a2 + 32);
    unint64_t v10 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1C02CFF00();
    long long v51 = 0u;
    long long v52 = 0u;
    uint64_t v53 = 0;
    long long v54 = xmmword_1C153A4E0;
    uint64_t v12 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)&v50, v12 + 16);
    uint64_t v13 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v13 = sub_1C139486C;
    uint64_t v12 = 0;
    uint64_t v11 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v15 = (uint64_t (**)())((char *)v9 + *(int *)(v14 + 24));
  *uint64_t v15 = v13;
  v15[1] = (uint64_t (*)())v12;
  uint64_t v16 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  *(void *)(v8 + v43) = v11;
  v9[2] = 0;
  v9[3] = 0;
  v9[1] = v10;
  uint64_t v17 = (char *)v9 + *(int *)(v14 + 28);
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  v17[16] = -1;
  uint64_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v18(v9, 0, 1, v14);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v8, v58);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v19 = swift_allocObject();
  *(void *)(inited + 32) = v19;
  *(void *)(v19 + 48) = v59;
  long long v20 = v58[1];
  *(_OWORD *)(v19 + 16) = v58[0];
  *(_OWORD *)(v19 + 32) = v20;
  uint64_t v21 = v48;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C152A660;
  uint64_t v23 = v22 + v43;
  sub_1C0433600(1701869908, 0xE400000000000000, 0x70756F7247, 0xE500000000000000, (void *)(v22 + v43));
  v18((void *)(v22 + v43), 0, 1, v14);
  if (a2)
  {
    uint64_t v24 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, v24, (void *)(v23 + v48));
    uint64_t v21 = v48;
    v18((void *)(v23 + v48), 0, 1, v14);
    char v25 = *(unsigned char *)(a2 + 177);
  }
  else
  {
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, 0, (void *)(v23 + v48));
    v18((void *)(v23 + v48), 0, 1, v14);
    char v25 = 2;
  }
  sub_1C0432B74(0x426F547370696C43, 0xED000073646E756FLL, v25, (void *)(v23 + 2 * v21));
  v18((void *)(v23 + 2 * v21), 0, 1, v14);
  if (a2) {
    char v26 = *(unsigned char *)(a2 + 178);
  }
  else {
    char v26 = 2;
  }
  sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, v26, (void *)(v23 + 3 * v21));
  v18((void *)(v23 + 3 * v21), 0, 1, v14);
  sub_1C09BCFA4(2003134806, 0xE400000000000000, 0, 0, v22, v60);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v27 = swift_allocObject();
  *(void *)(inited + 72) = v27;
  *(void *)(v27 + 48) = v61;
  long long v28 = v60[1];
  *(_OWORD *)(v27 + 16) = v60[0];
  *(_OWORD *)(v27 + 32) = v28;
  if (a2)
  {
    uint64_t v29 = *(void *)(a2 + 72);
    uint64_t v30 = *(void *)(a2 + 80);
    char v31 = *(unsigned char *)(a2 + 88);
    sub_1BFEF6828(v29, v30, v31);
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    char v31 = -2;
  }
  uint64_t v50 = v29;
  *(void *)&long long v51 = v30;
  BYTE8(v51) = v31;
  uint64_t v32 = sub_1C108626C(a1, (uint64_t)&v50);
  sub_1BFEF68AC(v29, v30, v31);
  *(void *)(inited + 136) = &type metadata for FormatInspection;
  *(void *)(inited + 144) = &off_1F1C29D30;
  long long v49 = (void *)inited;
  *(void *)(inited + 112) = v32;
  if (a2)
  {
    unsigned __int8 v44 = *(unsigned char *)(a2 + 176);
    uint64_t v46 = *(void *)(a2 + 168);
    uint64_t v47 = *(void *)(a2 + 160);
    uint64_t v33 = *(void *)(a2 + 96);
    uint64_t v34 = *(void *)(a2 + 104);
    uint64_t v35 = *(void *)(a2 + 112);
    uint64_t v36 = *(void *)(a2 + 120);
    uint64_t v37 = *(void *)(a2 + 128);
    uint64_t v38 = *(void *)(a2 + 136);
    uint64_t v39 = *(void *)(a2 + 144);
    a2 = *(void *)(a2 + 152);
    sub_1BFEF8708(v33, v34, v35, v36, v37, v38, v39, a2, v47, v46, v44);
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    unsigned __int8 v44 = -2;
  }
  uint64_t v50 = v33;
  *(void *)&long long v51 = v34;
  *((void *)&v51 + 1) = v35;
  *(void *)&long long v52 = v36;
  *((void *)&v52 + 1) = v37;
  uint64_t v53 = v38;
  *(void *)&long long v54 = v39;
  *((void *)&v54 + 1) = a2;
  uint64_t v55 = v47;
  uint64_t v56 = v46;
  unsigned __int8 v57 = v44;
  uint64_t v42 = sub_1C0AD49A4((uint64_t)&v50);
  sub_1BFEF8738(v33, v34, v35, v36, v37, v38, v39, a2, v47, v46, v44);
  v49[22] = &type metadata for FormatInspection;
  v49[23] = &off_1F1C29D30;
  v49[19] = v42;
  uint64_t v40 = sub_1C131B79C((uint64_t)v49);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v40;
}

uint64_t sub_1C02D1EB8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C02D1F00()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1C02D1F8C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C02D1FE8()
{
  return sub_1C02D02D0();
}

uint64_t sub_1C02D2004(uint64_t a1)
{
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  uint64_t v9 = *(void *)(a1 + 160);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 168);
  sub_1BFEF8738(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  sub_1BFEF8738(v13, v12, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t FormatContentSubgroupFilterLink.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FormatContentSubgroupFilterLink.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C02D2124()
{
  return 0x696669746E656469;
}

uint64_t sub_1C02D2140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C02D21E4(uint64_t a1)
{
  unint64_t v2 = sub_1C02D23A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C02D2220(uint64_t a1)
{
  unint64_t v2 = sub_1C02D23A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSubgroupFilterLink.encode(to:)(void *a1)
{
  sub_1C02D2580(0, &qword_1EB86B978, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02D23A8();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C02D23A8()
{
  unint64_t result = qword_1EB869350;
  if (!qword_1EB869350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869350);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterLink.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C02D2580(0, &qword_1EB86B720, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02D23A8();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v10 = sub_1C152069C();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C02D2580(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C02D23A8();
    unint64_t v7 = a3(a1, &type metadata for FormatContentSubgroupFilterLink.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C02D25E4(void *a1)
{
  a1[1] = sub_1C02D261C();
  a1[2] = sub_1C02D2670();
  unint64_t result = sub_1C02D26C4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C02D261C()
{
  unint64_t result = qword_1EB869370;
  if (!qword_1EB869370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869370);
  }
  return result;
}

unint64_t sub_1C02D2670()
{
  unint64_t result = qword_1EB869368;
  if (!qword_1EB869368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869368);
  }
  return result;
}

unint64_t sub_1C02D26C4()
{
  unint64_t result = qword_1EA199248;
  if (!qword_1EA199248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199248);
  }
  return result;
}

uint64_t sub_1C02D2718@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroupFilterLink.init(from:)(a1, a2);
}

uint64_t sub_1C02D2730(void *a1)
{
  sub_1C02D2580(0, &qword_1EB86B978, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02D23A8();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterLink()
{
  return &type metadata for FormatContentSubgroupFilterLink;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroupFilterLink.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C02D2928);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterLink.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterLink.CodingKeys;
}

unint64_t sub_1C02D2964()
{
  unint64_t result = qword_1EA199250;
  if (!qword_1EA199250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199250);
  }
  return result;
}

unint64_t sub_1C02D29BC()
{
  unint64_t result = qword_1EB869360;
  if (!qword_1EB869360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869360);
  }
  return result;
}

unint64_t sub_1C02D2A14()
{
  unint64_t result = qword_1EB869358;
  if (!qword_1EB869358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869358);
  }
  return result;
}

uint64_t sub_1C02D2A68(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  sub_1C02D3E78();
  swift_bridgeObjectRetain();
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_1C151596C();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_1C02D3D00((uint64_t)v38, &qword_1EA199268, (void (*)(uint64_t))sub_1C02D3E78);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      unint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      unint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1C152020C();
      }
      if (v4) {
        unint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        unint64_t v6 = 0;
      }
      unint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_1C02D40E8(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_1C151E82C();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_1C02D414C(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x1F4188790](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_1C02D35C8((void *(*)(uint64_t *__return_ptr, char *, char *))sub_1C02D41EC);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_1C151602C();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_1C149BAC0(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_1C151E86C();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_1C152020C();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_1C149BAC0(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_1C151E83C();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_1C151603C();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_1C151603C();
    sub_1BFE95878(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_1BFE95878((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t static FormatFloat.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 61)
  {
    case 1uLL:
      if (v3 >> 61 != 1) {
        goto LABEL_17;
      }
      double v4 = *(double *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v3 &= 0x1FFFFFFFFFFFFFFFuLL;
      goto LABEL_14;
    case 2uLL:
      if (v3 >> 61 != 2) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 3uLL:
      if (v3 >> 61 != 3) {
        goto LABEL_17;
      }
LABEL_19:
      uint64_t v10 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = v10;
      swift_retain();
      swift_retain();
      char v9 = static FormatFloat.== infix(_:_:)(&v12, &v11);
      swift_release();
      swift_release();
      return v9 & 1;
    case 4uLL:
      if (v3 >> 61 != 4) {
        goto LABEL_17;
      }
      uint64_t v5 = v2 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v6 = v3 & 0x1FFFFFFFFFFFFFFFLL;
      if (*(void *)(v5 + 16) == *(void *)(v6 + 16) && *(void *)(v5 + 24) == *(void *)(v6 + 24))
      {
LABEL_15:
        char v9 = 1;
        return v9 & 1;
      }
      else
      {
        return sub_1C1520A9C();
      }
    default:
      if (!(v3 >> 61))
      {
        double v4 = *(double *)(v2 + 16);
LABEL_14:
        if (v4 == *(double *)(v3 + 16)) {
          goto LABEL_15;
        }
      }
LABEL_17:
      char v9 = 0;
      return v9 & 1;
  }
}

uint64_t FormatFloat.optionIdentifiers.getter()
{
  if ((*v0 & 0x8000000000000000) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)((*v0 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v2 = *(void *)((*v0 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
  sub_1BFEF9A78();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v2;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatFloat.init(value:)@<X0>(uint64_t *a1@<X8>, double a2@<D0>)
{
  uint64_t result = swift_allocObject();
  *(double *)(result + 16) = a2;
  *a1 = result;
  return result;
}

uint64_t sub_1C02D33B8()
{
  if ((*v0 & 0x8000000000000000) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)((*v0 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v2 = *(void *)((*v0 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
  sub_1BFEF9A78();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v2;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C02D3428@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *a2 = result;
  return result;
}

void sub_1C02D3470(uint64_t a1@<X0>, double *a2@<X8>)
{
  double v4 = FormatFloat.value(contextLayoutOptions:)(a1);
  if (!v2) {
    *a2 = v4;
  }
}

uint64_t sub_1C02D349C(uint64_t result)
{
  switch(*v1 >> 61)
  {
    case 2:
    case 3:
      uint64_t result = sub_1C02D349C(result);
      break;
    case 4:
      uint64_t v2 = *v1 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v3 = *(void *)(v2 + 0x10);
      uint64_t v4 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C00B857C((uint64_t)&unk_1F1B65FC0);
      sub_1C0F49260(v3, v4, v5, 0);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C02D3584(uint64_t a1)
{
  return sub_1C02D349C(a1);
}

void sub_1C02D35B0(uint64_t a1, uint64_t a2)
{
}

char *sub_1C02D35C8(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_1C153A9A0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_1C151572C() && __OFSUB__((int)v4, sub_1C151575C())) {
        goto LABEL_24;
      }
      sub_1C151577C();
      swift_allocObject();
      uint64_t v13 = sub_1C151570C();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_1C02D39B4((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        uint64_t *v5 = v4;
        goto LABEL_19;
      }
      uint64_t *v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1C1515FEC();
      uint64_t result = sub_1C02D39B4(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_1C02D38CC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_1C02D3F24(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_1C02D3FE8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_1C02D4064((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_1C02D3944(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_1C02D39B4(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_1C151572C();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_1C151575C();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_1C151574C();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_1C02D3A68(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t sub_1C02D3AC8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C152010C();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1C02D3B54@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

unsigned char *sub_1C02D3B98@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1C02D3C4C(a1, a2);
}

uint64_t sub_1C02D3BB0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C02D3BE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C02D3C24()
{
  return swift_deallocObject();
}

void *sub_1C02D3C34@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C02D3CBC(a1);
}

unsigned char *sub_1C02D3C4C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_1C02D3CBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1C02D3D00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C02D3ED0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C02D3D5C(uint64_t a1)
{
  unint64_t result = sub_1C02D3D84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C02D3D84()
{
  unint64_t result = qword_1EA199258;
  if (!qword_1EA199258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199258);
  }
  return result;
}

unint64_t sub_1C02D3DD8(void *a1)
{
  a1[1] = sub_1BFDFBE94();
  a1[2] = sub_1BFE0FA08();
  unint64_t result = sub_1C00841B0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C02D3E14()
{
  unint64_t result = qword_1EA199260;
  if (!qword_1EA199260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199260);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFloat()
{
  return &type metadata for FormatFloat;
}

unint64_t sub_1C02D3E78()
{
  unint64_t result = qword_1EB85F028;
  if (!qword_1EB85F028)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB85F028);
  }
  return result;
}

void sub_1C02D3ED0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C02D3F24(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1C02D3FE8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1C151577C();
  swift_allocObject();
  uint64_t result = sub_1C151571C();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C151601C();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1C02D4064(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1C151577C();
  swift_allocObject();
  uint64_t result = sub_1C151571C();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_1C02D40E8(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_1C02D3F24(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_1C02D3FE8((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_1C02D4064((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_1C02D414C(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_1C151577C();
      swift_allocObject();
      sub_1C151573C();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1C151601C();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void *sub_1C02D41EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  void v12[2] = v13;
  uint64_t result = sub_1C02D3944((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C02D4258, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1C02D4258@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C02D3AC8(a1, a2);
}

uint64_t dispatch thunk of FormatCollectionType.isEmpty.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatCollectionType.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t BundleSessionManager.bundleSessionCache.getter()
{
  swift_retain();
  sub_1C1518EBC();
  return swift_release();
}

uint64_t sub_1C02D42F0()
{
  swift_retain();
  sub_1C1518EBC();
  return swift_release();
}

uint64_t sub_1C02D4344(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1C02DE980(a1, (uint64_t)&v9 - v6, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  sub_1C02DE980((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  return sub_1C02DF5EC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
}

uint64_t BundleSessionManager.bundleSessionCache.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C02DE980(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  return sub_1C02DF5EC(a1, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
}

void (*BundleSessionManager.bundleSessionCache.modify(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager__bundleSessionCache);
  swift_retain();
  v3[5] = sub_1C1518EAC();
  return sub_1C02D459C;
}

void sub_1C02D459C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_release();
  free(v1);
}

double sub_1C02D45F0()
{
  swift_getObjectType();
  if (qword_1EB86F9A8 != -1) {
    swift_once();
  }
  if ((sub_1C151701C() & 1) == 0) {
    goto LABEL_8;
  }
  if (qword_1EA1947C8 != -1) {
    swift_once();
  }
  sub_1C0092A5C(&qword_1EB86FBC8, v1, (void (*)(uint64_t))type metadata accessor for BundleSessionManager);
  sub_1C1516FBC();
  if (v6) {
    return 1.79769313e308;
  }
LABEL_8:
  id v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_appConfigurationManager), sel_appConfiguration);
  if (objc_msgSend(v3, sel_respondsToSelector_, sel_maximumBundleSessionTime))
  {
    id v4 = objc_msgSend(v3, sel_maximumBundleSessionTime);
    swift_unknownObjectRelease();
    return (double)(uint64_t)v4;
  }
  swift_unknownObjectRelease();
  return 86400.0;
}

uint64_t BundleSessionManager.initialNewSubscriptionDetectionTimestampObservable.getter()
{
  swift_retain();
  uint64_t v0 = sub_1C151896C();
  swift_release();
  return v0;
}

char *BundleSessionManager.__allocating_init(newsletterManager:appConfigurationManager:familySharingStatusManager:featureAvailability:bundleSubscriptionManager:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v13 = objc_allocWithZone(v6);
  uint64_t v14 = sub_1C02DE398(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v14;
}

char *BundleSessionManager.init(newsletterManager:appConfigurationManager:familySharingStatusManager:featureAvailability:bundleSubscriptionManager:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char v6 = sub_1C02DE398(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1C02D48BC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C005E7F4;
  return sub_1C02D494C();
}

uint64_t sub_1C02D494C()
{
  v1[205] = v0;
  v1[211] = swift_getObjectType();
  uint64_t v2 = sub_1C151631C();
  v1[217] = v2;
  v1[223] = *(void *)(v2 - 8);
  v1[229] = swift_task_alloc();
  v1[235] = swift_task_alloc();
  v1[241] = swift_task_alloc();
  sub_1BFF97C40();
  v1[242] = v3;
  v1[243] = swift_task_alloc();
  v1[244] = swift_task_alloc();
  v1[245] = swift_task_alloc();
  v1[246] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C02D4A8C, 0, 0);
}

uint64_t sub_1C02D4A8C()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 1640) + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 184))(v2, v3) & 1) == 0)
  {
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  if (qword_1EA1947E0 != -1) {
    swift_once();
  }
  sub_1C0092A5C(&qword_1EB86FBC8, v4, (void (*)(uint64_t))type metadata accessor for BundleSessionManager);
  sub_1C1516FBC();
  uint64_t v5 = *(void *)(v0 + 1400);
  uint64_t v6 = *(void *)(v0 + 1640);
  if (v5)
  {
    sub_1C02DCBCC(v5);
    goto LABEL_6;
  }
  uint64_t v9 = self;
  *(void *)(v0 + 1976) = v9;
  id v10 = objc_msgSend(v9, sel_standardUserDefaults);
  uint64_t v11 = v6 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_initialNewSubscriptionDetectionTimestampKey;
  *(void *)(v0 + 1984) = *(void *)(v6
                                     + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_initialNewSubscriptionDetectionTimestampKey);
  *(void *)(v0 + 1992) = *(void *)(v11 + 8);
  uint64_t v12 = (void *)sub_1C151E5EC();
  id v13 = objc_msgSend(v10, sel_objectForKey_, v12);

  if (v13)
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 1336) = 0u;
    *(_OWORD *)(v0 + 1352) = 0u;
  }
  sub_1C02DEC7C(v0 + 1336, v0 + 1368, (uint64_t (*)(void))sub_1BFEFE510);
  uint64_t v14 = *(void *)(v0 + 1968);
  uint64_t v15 = *(void *)(v0 + 1784);
  uint64_t v16 = *(void *)(v0 + 1736);
  if (*(void *)(v0 + 1392))
  {
    int v17 = swift_dynamicCast();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v18(v14, v17 ^ 1u, 1, v16);
  }
  else
  {
    sub_1C02DF5EC(v0 + 1368, (uint64_t (*)(void))sub_1BFEFE510);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v18(v14, 1, 1, v16);
  }
  *(void *)(v0 + 2000) = v18;
  uint64_t v19 = *(void *)(v0 + 1968);
  uint64_t v20 = *(void *)(v0 + 1960);
  uint64_t v21 = *(void *)(v0 + 1952);
  uint64_t v22 = *(void *)(v0 + 1784);
  uint64_t v23 = *(void *)(v0 + 1736);
  *(void *)(v0 + 2008) = OBJC_IVAR____TtC8NewsFeed20BundleSessionManager__initialNewSubscriptionDetectionTimestamp;
  sub_1C02DE980(v19, v20, (uint64_t (*)(void))sub_1BFF97C40);
  swift_retain();
  sub_1C151895C();
  swift_release();
  sub_1C02DF5EC(v19, (uint64_t (*)(void))sub_1BFF97C40);
  swift_retain();
  sub_1C151894C();
  swift_release();
  LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v23);
  sub_1C02DF5EC(v21, (uint64_t (*)(void))sub_1BFF97C40);
  if (v20 != 1)
  {
    id v29 = objc_msgSend(*(id *)(*(void *)(v0 + 1640) + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_bundleSubscriptionManager), sel_cachedSubscription);
    unsigned __int8 v30 = objc_msgSend(v29, sel_isSubscribed);

    if ((v30 & 1) == 0) {
      BundleSessionManager.resetInitialNewSubscriptionDetectionTimestamp()();
    }
    goto LABEL_6;
  }
  uint64_t v24 = *(void **)(v0 + 1640);
  uint64_t v25 = swift_allocObject();
  *(void *)(v0 + 2016) = v25;
  *(void *)(v25 + 16) = v24;
  id v26 = v24;
  swift_retain();
  sub_1BFC39268(255, &qword_1EB871088);
  swift_asyncLet_begin();
  uint64_t v27 = swift_allocObject();
  *(void *)(v0 + 2024) = v27;
  *(void *)(v27 + 16) = v26;
  id v28 = v26;
  swift_retain();
  sub_1BFCF7C30();
  swift_asyncLet_begin();
  return MEMORY[0x1F41881E0](v0 + 656, v0 + 1496, sub_1C02D4FC0, v0 + 1600);
}

uint64_t sub_1C02D4FC0()
{
  if (v0)
  {

    return MEMORY[0x1F41881D0](v1 + 16, v1 + 1448, sub_1C02D5CCC, v1 + 1296);
  }
  else
  {
    uint64_t v2 = *(void **)(v1 + 1496);
    *(void *)(v1 + 2032) = v2;
    id v3 = v2;
    return MEMORY[0x1F41881E0](v1 + 16, v1 + 1448, sub_1C02D5094, v1 + 1552);
  }
}

uint64_t sub_1C02D5094()
{
  if (v0)
  {

    return MEMORY[0x1F41881D0](v1 + 16, v1 + 1448, sub_1C02D5CCC, v1 + 1296);
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C02D515C, 0, 0);
  }
}

uint64_t sub_1C02D515C()
{
  uint64_t v61 = v0;
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))(v0 + 1448);
  uint64_t v2 = *(void **)(v0 + 2032);
  uint64_t v3 = *(void **)(v0 + 1448);
  swift_unknownObjectRetain();
  if (!objc_msgSend(v2, sel_isSubscribed))
  {
    uint64_t v31 = v0 + 1792;
    uint64_t v32 = *(void **)(v0 + 2032);
    swift_unknownObjectRelease();

    uint64_t v33 = sub_1C02D5C30;
LABEL_14:
    uint64_t v36 = v33;
    uint64_t v37 = v0 + 16;
    uint64_t v38 = v0 + 1448;
    uint64_t v39 = v31;
    goto LABEL_15;
  }
  id v4 = objc_msgSend(*(id *)(v0 + 2032), sel_initialPurchaseTimestamp);
  if (!v4)
  {
    uint64_t v31 = v0 + 1888;
    uint64_t v34 = *(void **)(v0 + 2032);
    swift_unknownObjectRelease();

    uint64_t v33 = sub_1C02D5B94;
    goto LABEL_14;
  }
  uint64_t v5 = v4;
  if ((objc_msgSend(v3, sel_respondsToSelector_, sel_paidBundleConfig) & 1) == 0)
  {
    uint64_t v31 = v0 + 1456;
    uint64_t v35 = *(void **)(v0 + 2032);

    swift_unknownObjectRelease();
    uint64_t v33 = sub_1C02D5A0C;
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)(v0 + 1880);
  uint64_t v7 = *(void *)(v0 + 1784);
  __int16 v58 = *(void (**)(uint64_t, uint64_t))(v0 + 1736);
  id v59 = v5;
  id v8 = objc_msgSend(v3, sel_paidBundleConfig);
  id v9 = objc_msgSend(v8, sel_maxAllowedSubscriptionDetectionTime);

  objc_msgSend(v59, sel_doubleValue);
  sub_1C151628C();
  sub_1C151630C();
  sub_1C15161FC();
  double v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v12(v6, (uint64_t)v58);
  if ((~*(void *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v57 = v0 + 16;
  if (v11 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    swift_once();
    goto LABEL_9;
  }
  __int16 v58 = v12;
  uint64_t v56 = v0 + 1448;
  id v13 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 2000);
  uint64_t v14 = *(void *)(v0 + 1960);
  uint64_t v15 = *(void *)(v0 + 1944);
  if ((uint64_t)v9 >= (uint64_t)v11)
  {
    uint64_t v40 = *(void *)(v0 + 1736);
    sub_1C15162CC();
    v13(v14, 0, 1, v40);
    sub_1C02DE980(v14, v15, (uint64_t (*)(void))sub_1BFF97C40);
    swift_retain();
    sub_1C151895C();
    swift_release();
    sub_1C02DF5EC(v14, (uint64_t (*)(void))sub_1BFF97C40);
    if (qword_1EB86F9E0 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1C15198DC();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EB93C608);
    uint64_t v21 = sub_1C15198AC();
    os_log_type_t v42 = sub_1C151F38C();
    if (!os_log_type_enabled(v21, v42)) {
      goto LABEL_24;
    }
    os_log_type_t type = v42;
    uint64_t v43 = *(void *)(v0 + 1880);
    uint64_t v44 = *(void *)(v0 + 1736);
    id v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v60 = v52;
    *(_DWORD *)id v26 = 136315138;
    sub_1C15162CC();
    sub_1C0092A5C((unint64_t *)&qword_1EB871170, 255, MEMORY[0x1E4F27928]);
    uint64_t v45 = sub_1C152088C();
    unint64_t v47 = v46;
    v58(v43, v44);
    *(void *)(v0 + 1544) = sub_1BFDA76EC(v45, v47, &v60);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v21, type, "BundleSessionManager registered the initialNewSubscriptionDetectionTimestamp to: %s", v26, 0xCu);
    swift_arrayDestroy();
    uint64_t v30 = v52;
    goto LABEL_22;
  }
  uint64_t v16 = *(void *)(v0 + 1736);
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1784) + 16);
  v1(*(void *)(v0 + 1960), *(void *)(v0 + 1928), v16);
  v13(v14, 0, 1, v16);
  sub_1C02DE980(v14, v15, (uint64_t (*)(void))sub_1BFF97C40);
  swift_retain();
  sub_1C151895C();
  swift_release();
  sub_1C02DF5EC(v14, (uint64_t (*)(void))sub_1BFF97C40);
  if (qword_1EB86F9E0 != -1) {
    goto LABEL_28;
  }
LABEL_9:
  uint64_t v17 = *(void *)(v0 + 1928);
  uint64_t v18 = *(void *)(v0 + 1832);
  uint64_t v19 = *(void *)(v0 + 1736);
  uint64_t v20 = sub_1C15198DC();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EB93C608);
  v1(v18, v17, v19);
  uint64_t v21 = sub_1C15198AC();
  os_log_type_t v22 = sub_1C151F38C();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v24 = *(void *)(v0 + 1832);
  uint64_t v25 = *(void *)(v0 + 1736);
  if (!v23)
  {
    v58(*(void *)(v0 + 1832), *(void *)(v0 + 1736));
    goto LABEL_24;
  }
  id v26 = (uint8_t *)swift_slowAlloc();
  uint64_t v27 = swift_slowAlloc();
  uint64_t v60 = v27;
  *(_DWORD *)id v26 = 136315138;
  sub_1C0092A5C((unint64_t *)&qword_1EB871170, 255, MEMORY[0x1E4F27928]);
  uint64_t v28 = sub_1C152088C();
  *(void *)(v0 + 1592) = sub_1BFDA76EC(v28, v29, &v60);
  sub_1C151FE1C();
  swift_bridgeObjectRelease();
  v58(v24, v25);
  _os_log_impl(&dword_1BFC31000, v21, v22, "BundleSessionManager registered the initialNewSubscriptionDetectionTimestamp to: %s", v26, 0xCu);
  swift_arrayDestroy();
  uint64_t v30 = v27;
LABEL_22:
  MEMORY[0x1C18C9B00](v30, -1, -1);
  MEMORY[0x1C18C9B00](v26, -1, -1);
LABEL_24:

  uint64_t v48 = *(void **)(v0 + 2032);
  uint64_t v49 = *(void *)(v0 + 1960);
  uint64_t v54 = *(void *)(v0 + 1928);
  uint64_t v53 = *(void *)(v0 + 1736);
  id v50 = objc_msgSend(*(id *)(v0 + 1976), sel_standardUserDefaults);
  swift_retain();
  sub_1C151894C();
  swift_release();
  sub_1C151F39C();

  swift_unknownObjectRelease();
  sub_1C02DF5EC(v49, (uint64_t (*)(void))sub_1BFF97C40);
  v58(v54, v53);
  uint64_t v36 = sub_1C02D5954;
  uint64_t v38 = v56;
  uint64_t v37 = v57;
  uint64_t v39 = v0 + 1504;
LABEL_15:
  return MEMORY[0x1F41881D0](v37, v38, v36, v39);
}

uint64_t sub_1C02D5954()
{
  return MEMORY[0x1F4188298](sub_1C02D5970, 0, 0);
}

uint64_t sub_1C02D5970()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1496, sub_1C02D59F0, v0 + 1408);
}

uint64_t sub_1C02D59F0()
{
  return MEMORY[0x1F4188298](sub_1C02DFFC0, 0, 0);
}

uint64_t sub_1C02D5A0C()
{
  return MEMORY[0x1F4188298](sub_1C02D5A28, 0, 0);
}

uint64_t sub_1C02D5A28()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1496, sub_1C02D5AA8, v0 + 1744);
}

uint64_t sub_1C02D5AA8()
{
  return MEMORY[0x1F4188298](sub_1C02D5AC4, 0, 0);
}

uint64_t sub_1C02D5AC4()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C02D5B94()
{
  return MEMORY[0x1F4188298](sub_1C02D5BB0, 0, 0);
}

uint64_t sub_1C02D5BB0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1496, sub_1C02D59F0, v0 + 1648);
}

uint64_t sub_1C02D5C30()
{
  return MEMORY[0x1F4188298](sub_1C02D5C4C, 0, 0);
}

uint64_t sub_1C02D5C4C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1496, sub_1C02D59F0, v0 + 1840);
}

uint64_t sub_1C02D5CCC()
{
  return MEMORY[0x1F4188298](sub_1C02D5CE8, 0, 0);
}

uint64_t sub_1C02D5CE8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1496, sub_1C02D59F0, v0 + 1696);
}

id BundleSessionManager.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = objc_msgSend(self, sel_defaultCenter);
  id v3 = v0;
  id v4 = (void *)sub_1C151E5EC();
  objc_msgSend(v2, sel_removeObserver_name_object_, v3, v4, 0);

  v6.receiver = v3;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t BundleSessionManager.currentSession()@<X0>(uint64_t a1@<X8>)
{
  sub_1C02DE94C(0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  double v10 = (char *)&v15 - v9;
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v15 - v12;
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_1C02D61A8((uint64_t)v4);
    sub_1C02DE980((uint64_t)v4, (uint64_t)v10, (uint64_t (*)(void))sub_1C02DE94C);
    swift_storeEnumTagMultiPayload();
    sub_1C02DE980((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
    swift_retain();
    sub_1C1518ECC();
    swift_release();
    sub_1C02DF5EC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
    swift_retain();
    sub_1C1518EBC();
    swift_release();
    return sub_1C02DF5EC((uint64_t)v4, (uint64_t (*)(void))sub_1C02DE94C);
  }
  else
  {
    sub_1C02DEC7C((uint64_t)v13, a1, (uint64_t (*)(void))sub_1C02DE94C);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1C02D61A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for BundleSession();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v7 = (void *)sub_1C151E5EC();
  id v8 = objc_msgSend(v6, sel_objectForKey_, v7);

  if (v8)
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_1C02DEC7C((uint64_t)v22, (uint64_t)v23, (uint64_t (*)(void))sub_1BFEFE510);
  if (v23[3])
  {
    if (swift_dynamicCast())
    {
      uint64_t v10 = v21[4];
      unint64_t v9 = v21[5];
      sub_1C151529C();
      swift_allocObject();
      sub_1C151528C();
      sub_1C0092A5C(&qword_1EB86FB70, 255, (void (*)(uint64_t))type metadata accessor for BundleSession);
      sub_1C151527C();
      swift_release();
      if (qword_1EB86F9E0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1C15198DC();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EB93C608);
      uint64_t v16 = sub_1C15198AC();
      os_log_type_t v17 = sub_1C151F38C();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_1BFC31000, v16, v17, "BundleSessionManager loaded session from disk.", v18, 2u);
        MEMORY[0x1C18C9B00](v18, -1, -1);
      }
      sub_1BFE95664(v10, v9);

      sub_1C02DEC7C((uint64_t)v5, a1, (uint64_t (*)(void))type metadata accessor for BundleSession);
      uint64_t v19 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v19, 1, v2);
    }
  }
  else
  {
    sub_1C02DF5EC((uint64_t)v23, (uint64_t (*)(void))sub_1BFEFE510);
  }
  if (qword_1EB86F9E0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C15198DC();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB93C608);
  uint64_t v12 = sub_1C15198AC();
  os_log_type_t v13 = sub_1C151F36C();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1BFC31000, v12, v13, "BundleSessionManager failed to load session from disk because there is no data for key.", v14, 2u);
    MEMORY[0x1C18C9B00](v14, -1, -1);
  }

  uint64_t v19 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v19, 1, v2);
}

void sub_1C02D677C(uint64_t a1)
{
  sub_1C02DE94C(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BundleSession();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02DE980(a1, (uint64_t)v4, (uint64_t (*)(void))sub_1C02DE94C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C02DF5EC((uint64_t)v4, (uint64_t (*)(void))sub_1C02DE94C);
    id v9 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v10 = (void *)sub_1C151E5EC();
    objc_msgSend(v9, sel_removeObjectForKey_, v10);

    if (qword_1EB86F9E0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C15198DC();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB93C608);
    uint64_t v12 = sub_1C15198AC();
    os_log_type_t v13 = sub_1C151F38C();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1BFC31000, v12, v13, "BundleSessionManager removed session from disk.", v14, 2u);
      MEMORY[0x1C18C9B00](v14, -1, -1);
    }
  }
  else
  {
    sub_1C02DEC7C((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BundleSession);
    sub_1C151536C();
    swift_allocObject();
    sub_1C151535C();
    sub_1C0092A5C((unint64_t *)&unk_1EB86FB60, 255, (void (*)(uint64_t))type metadata accessor for BundleSession);
    uint64_t v15 = sub_1C151533C();
    unint64_t v17 = v16;
    swift_release();
    id v18 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v19 = (void *)sub_1C151605C();
    uint64_t v20 = (void *)sub_1C151E5EC();
    objc_msgSend(v18, sel_setObject_forKey_, v19, v20);

    if (qword_1EB86F9E0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C15198DC();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB93C608);
    os_log_type_t v22 = sub_1C15198AC();
    os_log_type_t v23 = sub_1C151F38C();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1BFC31000, v22, v23, "BundleSessionManager wrote session to disk.", v24, 2u);
      MEMORY[0x1C18C9B00](v24, -1, -1);
    }
    sub_1BFE95664(v15, v17);

    sub_1C02DF5EC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BundleSession);
  }
}

uint64_t BundleSessionManager.refreshSession(with:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = swift_getObjectType();
  sub_1C0064478(0);
  v3[6] = swift_task_alloc();
  sub_1C02DE9E8();
  v3[7] = v4;
  v3[8] = swift_task_alloc();
  uint64_t v5 = sub_1C151631C();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for BundleSession();
  v3[13] = v6;
  v3[14] = *(void *)(v6 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  sub_1C02DE94C(0);
  uint64_t v8 = *(void *)(v7 - 8);
  v3[17] = v8;
  v3[18] = *(void *)(v8 + 64);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for BundleSessionCache();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C02D7038, 0, 0);
}

uint64_t sub_1C02D7038()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);
  BundleSessionManager.currentSession()(v2);
  sub_1C02DE980(v2, v1, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v4 = (uint64_t (*)(void))sub_1C02DE94C;
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
LABEL_19:
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 248) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_1C02D7668;
      uint64_t v22 = *(void *)(v0 + 176);
      uint64_t v23 = *(void *)(v0 + 24);
      return sub_1C02D7E8C(v22, v23);
    }
    uint64_t v5 = (uint64_t *)(v0 + 232);
LABEL_18:
    sub_1C02DF5EC(*v5, v4);
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v7 = *(void *)(v0 + 192);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 112);
  sub_1C02DEC7C(*(void *)(v0 + 232), v7, (uint64_t (*)(void))sub_1C02DE94C);
  sub_1C02DE980(v7, v6, (uint64_t (*)(void))sub_1C02DE94C);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v5 = (uint64_t *)(v0 + 128);
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 72);
    sub_1C02DEC7C(*(void *)(v0 + 184), *(void *)(v0 + 128), (uint64_t (*)(void))type metadata accessor for BundleSession);
    sub_1C15162CC();
    sub_1C02D45F0();
    sub_1C151620C();
    sub_1C0092A5C((unint64_t *)&qword_1EB870780, 255, MEMORY[0x1E4F27928]);
    char v17 = sub_1C151E57C();
    id v18 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v18(v14, v16);
    v18(v13, v16);
    if (v17)
    {
      if (*(unsigned char *)(*(void *)(v0 + 32)
                    + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_shouldForceIncrementDemoSession) != 1)
      {
        sub_1C02DF5EC(*(void *)(v0 + 192), (uint64_t (*)(void))sub_1C02DE94C);
LABEL_25:
        uint64_t v27 = *(void *)(v0 + 128);
        uint64_t v28 = *(void *)(v0 + 104);
        uint64_t v29 = *(void *)(v0 + 112);
        uint64_t v30 = *(void *)(v0 + 16);
        sub_1C02DF5EC(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
        sub_1C02DEC7C(v27, v30, (uint64_t (*)(void))type metadata accessor for BundleSession);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
        goto LABEL_26;
      }
      if (qword_1EB86F9A8 != -1) {
        swift_once();
      }
      if ((sub_1C151701C() & 1) == 0)
      {
        *(unsigned char *)(v0 + 264) = 0;
        goto LABEL_24;
      }
      if (qword_1EA1947C8 != -1) {
        swift_once();
      }
      sub_1C0092A5C(&qword_1EB86FBC8, v19, (void (*)(uint64_t))type metadata accessor for BundleSessionManager);
      sub_1C1516FBC();
      if (!*(unsigned char *)(v0 + 264) || *(unsigned char *)(v0 + 264) == 1)
      {
LABEL_24:
        uint64_t v25 = *(void *)(v0 + 192);
        char v26 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        sub_1C02DF5EC(v25, (uint64_t (*)(void))sub_1C02DE94C);
        uint64_t v4 = (uint64_t (*)(void))type metadata accessor for BundleSession;
        if (v26) {
          goto LABEL_18;
        }
        goto LABEL_25;
      }
      uint64_t v32 = *(void *)(v0 + 192);
      swift_bridgeObjectRelease();
      uint64_t v20 = v32;
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 192);
    }
    sub_1C02DF5EC(v20, (uint64_t (*)(void))sub_1C02DE94C);
    uint64_t v4 = (uint64_t (*)(void))type metadata accessor for BundleSession;
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)(v0 + 184);
  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 16);
  sub_1C02DF5EC(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  sub_1C02DF5EC(v10, (uint64_t (*)(void))sub_1C02DE94C);
  sub_1C02DEC7C(v11, v12, (uint64_t (*)(void))sub_1C02DE94C);
LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1C02D7668()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C02D7D28;
  }
  else {
    uint64_t v2 = sub_1C02D777C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02D777C()
{
  sub_1C02DE980(v0[30], v0[28], (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  if (swift_getEnumCaseMultiPayload() > 1) {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[14] + 56))(v0[21], 1, 1, v0[13]);
  }
  else {
    sub_1C02DEC7C(v0[28], v0[21], (uint64_t (*)(void))sub_1C02DE94C);
  }
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[8];
  uint64_t v5 = v4 + *(int *)(v0[7] + 48);
  sub_1C02DE980(v0[22], v4, (uint64_t (*)(void))sub_1C02DE94C);
  sub_1C02DE980(v1, v5, (uint64_t (*)(void))sub_1C02DE94C);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v6(v4, 1, v2) != 1)
  {
    uint64_t v10 = v0[13];
    sub_1C02DE980(v0[8], v0[20], (uint64_t (*)(void))sub_1C02DE94C);
    int v11 = v6(v5, 1, v10);
    uint64_t v12 = (void *)v0[20];
    uint64_t v13 = v0[21];
    if (v11 != 1)
    {
      uint64_t v14 = (void *)v0[15];
      uint64_t v15 = v0[8];
      sub_1C02DEC7C(v5, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BundleSession);
      char v16 = _s8NewsFeed13BundleSessionV2eeoiySbAC_ACtFZ_0(v12, v14);
      sub_1C02DF5EC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BundleSession);
      sub_1C02DF5EC(v13, (uint64_t (*)(void))sub_1C02DE94C);
      sub_1C02DF5EC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BundleSession);
      sub_1C02DF5EC(v15, (uint64_t (*)(void))sub_1C02DE94C);
      if (v16) {
        goto LABEL_13;
      }
      goto LABEL_11;
    }
    sub_1C02DF5EC(v0[21], (uint64_t (*)(void))sub_1C02DE94C);
    sub_1C02DF5EC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BundleSession);
LABEL_9:
    sub_1C02DF5EC(v0[8], (uint64_t (*)(void))sub_1C02DE9E8);
LABEL_11:
    uint64_t v17 = v0[22];
    uint64_t v18 = v0[19];
    uint64_t v19 = v0[17];
    uint64_t v20 = v0[6];
    uint64_t v21 = (void *)v0[4];
    uint64_t v22 = sub_1C151EE9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 1, 1, v22);
    sub_1C02DE980(v17, v18, (uint64_t (*)(void))sub_1C02DE94C);
    unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = 0;
    v24[3] = 0;
    v24[4] = v21;
    sub_1C02DEC7C(v18, (uint64_t)v24 + v23, (uint64_t (*)(void))sub_1C02DE94C);
    id v25 = v21;
    sub_1C02D9404(v20, (uint64_t)&unk_1EA1992A0, (uint64_t)v24);
    swift_release();
    uint64_t v9 = sub_1C0064478;
    uint64_t v8 = v20;
    goto LABEL_12;
  }
  uint64_t v7 = v0[13];
  sub_1C02DF5EC(v0[21], (uint64_t (*)(void))sub_1C02DE94C);
  if (v6(v5, 1, v7) != 1) {
    goto LABEL_9;
  }
  uint64_t v8 = v0[8];
  uint64_t v9 = sub_1C02DE94C;
LABEL_12:
  sub_1C02DF5EC(v8, (uint64_t (*)(void))v9);
LABEL_13:
  uint64_t v26 = v0[30];
  uint64_t v27 = v0[26];
  uint64_t v28 = v0[27];
  uint64_t v29 = v0[4];
  sub_1C02DE980(v0[22], v28, (uint64_t (*)(void))sub_1C02DE94C);
  swift_storeEnumTagMultiPayload();
  sub_1C02DE980(v28, v27, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  sub_1C02DF5EC(v28, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  sub_1C02DF5EC(v26, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  if (*(unsigned char *)(v29 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_shouldForceIncrementDemoSession) == 1) {
    *(unsigned char *)(v29 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_shouldForceIncrementDemoSession) = 0;
  }
  sub_1C02DEC7C(v0[22], v0[2], (uint64_t (*)(void))sub_1C02DE94C);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_1C02D7D28()
{
  sub_1C02DF5EC(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C02D7E8C(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v3[9] = swift_getObjectType();
  uint64_t v4 = sub_1C151631C();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  sub_1C02DE94C(0);
  v3[13] = swift_task_alloc();
  v3[14] = type metadata accessor for BundleSessionCache();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for BundleSession();
  v3[17] = v5;
  v3[18] = *(void *)(v5 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C02D804C, 0, 0);
}

uint64_t sub_1C02D804C()
{
  uint64_t v42 = v0;
  if (qword_1EB86F9E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = sub_1C15198DC();
  *(void *)(v0 + 184) = __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C608);
  id v3 = v1;
  uint64_t v4 = sub_1C15198AC();
  os_log_type_t v5 = sub_1C151F38C();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v41 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    if (qword_1EB86F9A8 != -1) {
      swift_once();
    }
    uint64_t v8 = 0x6769666E6F63;
    if (sub_1C151701C())
    {
      if (qword_1EA1947C8 != -1) {
        swift_once();
      }
      sub_1C0092A5C(&qword_1EB86FBC8, v9, (void (*)(uint64_t))type metadata accessor for BundleSessionManager);
      sub_1C1516FBC();
      unint64_t v10 = 0xE500000000000000;
      uint64_t v11 = 0x6465786966;
      if (*(unsigned char *)(v0 + 305) != 1)
      {
        uint64_t v11 = 1869440356;
        unint64_t v10 = 0xE400000000000000;
      }
      if (*(unsigned char *)(v0 + 305))
      {
        uint64_t v8 = v11;
        unint64_t v12 = v10;
      }
      else
      {
        unint64_t v12 = 0xE600000000000000;
      }
    }
    else
    {
      unint64_t v12 = 0xE600000000000000;
    }
    uint64_t v14 = *(void **)(v0 + 64);
    *(void *)(v0 + 40) = sub_1BFDA76EC(v8, v12, &v41);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v4, v5, "BundleSessionManager will attempt to rebuild session with strategy: %s.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v7, -1, -1);
    MEMORY[0x1C18C9B00](v6, -1, -1);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 64);
  }
  if (objc_msgSend(*(id *)(v0 + 56), sel_isSubscribed))
  {
    id v15 = objc_msgSend(*(id *)(*(void *)(v0 + 64) + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_appConfigurationManager), sel_appConfiguration);
    if ((objc_msgSend(v15, sel_respondsToSelector_, sel_maximumBundleSessionValue) & 1) == 0)
    {
      swift_unknownObjectRelease();
      uint64_t v24 = sub_1C15198AC();
      os_log_type_t v25 = sub_1C151F36C();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_1BFC31000, v24, v25, "BundleSessionManager failed to build session because the maxmium bundle session value is invalid.", v26, 2u);
        MEMORY[0x1C18C9B00](v26, -1, -1);
      }

      sub_1C02DF994();
      swift_allocError();
      unsigned char *v27 = 1;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_28;
    }
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v16 = *(void *)(v0 + 128);
    id v18 = objc_msgSend(v15, sel_maximumBundleSessionValue);
    *(void *)(v0 + 192) = v18;
    swift_unknownObjectRelease();
    BundleSessionManager.currentSession()(v16);
    sub_1C02DE980(v16, v17, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
    if (swift_getEnumCaseMultiPayload() > 1) {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 144) + 56))(*(void *)(v0 + 104), 1, 1, *(void *)(v0 + 136));
    }
    else {
      sub_1C02DEC7C(*(void *)(v0 + 120), *(void *)(v0 + 104), (uint64_t (*)(void))sub_1C02DE94C);
    }
    uint64_t v30 = (uint64_t *)(v0 + 104);
    uint64_t v29 = *(void *)(v0 + 104);
    uint64_t v31 = *(void *)(v0 + 136);
    uint64_t v32 = *(void *)(v0 + 144);
    sub_1C02DF5EC(*(void *)(v0 + 128), (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31) == 1)
    {
      uint64_t v33 = (uint64_t (*)(void))sub_1C02DE94C;
LABEL_41:
      sub_1C02DF5EC(*v30, v33);
      *(void *)(v0 + 200) = self;
      *(void *)(v0 + 208) = sub_1C151EE6C();
      *(void *)(v0 + 216) = sub_1C151EE5C();
      uint64_t v40 = sub_1C151EDBC();
      return MEMORY[0x1F4188298](sub_1C02D8898, v40, v39);
    }
    uint64_t v30 = (uint64_t *)(v0 + 176);
    uint64_t v34 = *(uint64_t **)(v0 + 176);
    uint64_t v35 = *(void *)(v0 + 168);
    sub_1C02DEC7C(*(void *)(v0 + 104), (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for BundleSession);
    uint64_t v36 = *v34;
    sub_1C02DE980((uint64_t)v34, v35, (uint64_t (*)(void))type metadata accessor for BundleSession);
    uint64_t v37 = *(void *)(v0 + 168);
    if (v36 < (uint64_t)v18)
    {
      uint64_t v33 = (uint64_t (*)(void))type metadata accessor for BundleSession;
      sub_1C02DF5EC(*(void *)(v0 + 168), (uint64_t (*)(void))type metadata accessor for BundleSession);
      goto LABEL_41;
    }
    if (*(unsigned char *)(v37 + *(int *)(*(void *)(v0 + 136) + 24))
      && *(unsigned char *)(v37 + *(int *)(*(void *)(v0 + 136) + 24)) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1C02DF5EC(v37, (uint64_t (*)(void))type metadata accessor for BundleSession);
    }
    else
    {
      char v38 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      uint64_t v33 = (uint64_t (*)(void))type metadata accessor for BundleSession;
      sub_1C02DF5EC(v37, (uint64_t (*)(void))type metadata accessor for BundleSession);
      if ((v38 & 1) == 0) {
        goto LABEL_41;
      }
    }
    sub_1C02DEC7C(*(void *)(v0 + 176), *(void *)(v0 + 48), (uint64_t (*)(void))type metadata accessor for BundleSession);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v19 = sub_1C15198AC();
    os_log_type_t v20 = sub_1C151F38C();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1BFC31000, v19, v20, "BundleSessionManager will reset the session because the user is not subscribed.", v21, 2u);
      MEMORY[0x1C18C9B00](v21, -1, -1);
    }

    BundleSessionManager.resetBundleSession()();
    uint64_t v22 = 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 144) + 56))(*(void *)(v0 + 48), v22, 1, *(void *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
LABEL_28:
  return v23();
}

uint64_t sub_1C02D8898()
{
  uint64_t v1 = *(void **)(v0 + 200);
  swift_release();
  *(void *)(v0 + 224) = objc_msgSend(v1, sel_sharedApplication);
  return MEMORY[0x1F4188298](sub_1C02D8920, 0, 0);
}

uint64_t sub_1C02D8920()
{
  *(void *)(v0 + 232) = sub_1C151EE5C();
  uint64_t v2 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C02D89AC, v2, v1);
}

uint64_t sub_1C02D89AC()
{
  uint64_t v1 = *(void **)(v0 + 224);
  swift_release();
  *(void *)(v0 + 240) = objc_msgSend(v1, sel_applicationState);

  return MEMORY[0x1F4188298](sub_1C02D8A2C, 0, 0);
}

uint64_t sub_1C02D8A2C()
{
  uint64_t v12 = v0;
  if (*(void *)(v0 + 240))
  {
    uint64_t v1 = sub_1C15198AC();
    os_log_type_t v2 = sub_1C151F36C();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_1BFC31000, v1, v2, "BundleSessionManager failed to build session because the app is not in an active state.", v3, 2u);
      MEMORY[0x1C18C9B00](v3, -1, -1);
    }

    sub_1C02DF994();
    swift_allocError();
    unsigned char *v4 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 192);
    uint64_t v8 = *(void *)(v0 + 96);
    *(void *)(v0 + 248) = sub_1C02D9900(v7);
    sub_1C02DA02C(v7, v8);
    sub_1C02DA5C8(v7, v11);
    *(unsigned char *)(v0 + 306) = v11[0];
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1C02D8C7C;
    uint64_t v10 = *(void *)(v0 + 64);
    v9[6] = v0 + 16;
    v9[7] = v10;
    v9[8] = swift_getObjectType();
    return MEMORY[0x1F4188298](sub_1C02DACCC, 0, 0);
  }
}

uint64_t sub_1C02D8C7C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 304;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *(_OWORD *)(v1 + 264) = *(_OWORD *)(v1 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 280) = v3;
  *uint64_t v3 = v5;
  v3[1] = sub_1C02D8DD0;
  v3[4] = v2;
  return MEMORY[0x1F4188298](sub_1C02DB318, 0, 0);
}

uint64_t sub_1C02D8DD0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  *(unsigned char *)(v1 + 307) = *(unsigned char *)(v1 + 304);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 288) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1C02D8F34;
  v3[4] = *(void *)(v1 + 64);
  return MEMORY[0x1F4188298](sub_1C02DB838, 0, 0);
}

uint64_t sub_1C02D8F34(uint64_t a1)
{
  *(void *)(*(void *)v1 + 296) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C02D9034, 0, 0);
}

uint64_t sub_1C02D9034()
{
  uint64_t v31 = v0;
  char v1 = *(unsigned char *)(v0 + 307);
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 272);
  char v4 = *(unsigned char *)(v0 + 306);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v6 = *(char **)(v0 + 160);
  uint64_t v26 = *(void *)(v0 + 296);
  uint64_t v27 = *(void *)(v0 + 152);
  uint64_t v7 = *(int **)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 64);
  (*(void (**)(char *, void, void))(*(void *)(v0 + 88) + 16))(&v6[v7[5]], *(void *)(v0 + 96), *(void *)(v0 + 80));
  unsigned __int8 v9 = objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_newsletterManager), sel_isSubscribed);
  char v10 = sub_1C02DBCCC();
  *(void *)uint64_t v6 = v5;
  v6[v7[6]] = v4;
  v6[v7[7]] = v1;
  uint64_t v11 = &v6[v7[8]];
  *(void *)uint64_t v11 = v3;
  *((void *)v11 + 1) = v2;
  *(void *)&v6[v7[9]] = v26;
  v6[v7[10]] = v9;
  v6[v7[11]] = v10 & 1;
  sub_1C02DE980((uint64_t)v6, v27, (uint64_t (*)(void))type metadata accessor for BundleSession);
  uint64_t v12 = sub_1C15198AC();
  os_log_type_t v13 = sub_1C151F36C();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = *(void *)(v0 + 152);
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v28 = *(void *)(v0 + 80);
    uint64_t v29 = *(void *)(v0 + 96);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v30 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v18 = BundleSession.description.getter();
    *(void *)(v0 + 32) = sub_1BFDA76EC(v18, v19, &v30);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C02DF5EC(v14, (uint64_t (*)(void))type metadata accessor for BundleSession);
    _os_log_impl(&dword_1BFC31000, v12, v13, "BundleSessionManager rebuilt session with value: %s.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v17, -1, -1);
    MEMORY[0x1C18C9B00](v16, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v29, v28);
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 152);
    uint64_t v22 = *(void *)(v0 + 88);
    uint64_t v21 = *(void *)(v0 + 96);
    uint64_t v23 = *(void *)(v0 + 80);

    sub_1C02DF5EC(v20, (uint64_t (*)(void))type metadata accessor for BundleSession);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  sub_1C02DEC7C(*(void *)(v0 + 160), *(void *)(v0 + 48), (uint64_t (*)(void))type metadata accessor for BundleSession);
  (*(void (**)(void, void, uint64_t, void))(*(void *)(v0 + 144) + 56))(*(void *)(v0 + 48), 0, 1, *(void *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1C02D9384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1C02D93A4, 0, 0);
}

uint64_t sub_1C02D93A4()
{
  sub_1C02D677C(*(void *)(v0 + 24));
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C02D9404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0064478(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02DE980(a1, (uint64_t)v8, (uint64_t (*)(void))sub_1C0064478);
  uint64_t v9 = sub_1C151EE9C();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C02DF5EC((uint64_t)v8, (uint64_t (*)(void))sub_1C0064478);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1C151EDBC();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C151EE8C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    void v16[3] = v13;
  }
  return swift_task_create();
}

Swift::Void __swiftcall BundleSessionManager.resetBundleSession()()
{
  char v1 = v0;
  sub_1C0064478(0);
  MEMORY[0x1F4188790](v2 - 8);
  char v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - v9;
  if (qword_1EB86F9E0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C15198DC();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB93C608);
  uint64_t v12 = sub_1C15198AC();
  os_log_type_t v13 = sub_1C151F38C();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1BFC31000, v12, v13, "BundleSessionManager resetting the session.", v14, 2u);
    MEMORY[0x1C18C9B00](v14, -1, -1);
  }

  uint64_t v15 = type metadata accessor for BundleSession();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
  swift_storeEnumTagMultiPayload();
  sub_1C02DE980((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  sub_1C02DF5EC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  uint64_t v16 = sub_1C151EE9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v1;
  id v18 = v1;
  sub_1C02D9404((uint64_t)v4, (uint64_t)&unk_1EA1992B8, (uint64_t)v17);
  swift_release();
  sub_1C02DF5EC((uint64_t)v4, (uint64_t (*)(void))sub_1C0064478);
}

uint64_t sub_1C02D9900(uint64_t a1)
{
  uint64_t v51 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_1C151631C();
  uint64_t v49 = *(void *)(v1 - 8);
  uint64_t v50 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v48 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v47 = (char *)&v44 - v4;
  sub_1C02DE94C(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v44 - v9;
  uint64_t v11 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v11);
  os_log_type_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v46 = (uint64_t)&v44 - v15;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v44 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v22 = type metadata accessor for BundleSession();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v45 = (uint64_t *)((char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (uint64_t *)((char *)&v44 - v26);
  if (qword_1EB86F9A8 != -1) {
    swift_once();
  }
  if ((sub_1C151701C() & 1) == 0)
  {
    uint64_t v29 = v22;
    char v55 = 0;
LABEL_12:
    BundleSessionManager.currentSession()((uint64_t)v21);
    sub_1C02DE980((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
    if (swift_getEnumCaseMultiPayload() > 1) {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v29);
    }
    else {
      sub_1C02DEC7C((uint64_t)v18, (uint64_t)v10, (uint64_t (*)(void))sub_1C02DE94C);
    }
    sub_1C02DF5EC((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v29) != 1)
    {
      sub_1C02DEC7C((uint64_t)v10, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for BundleSession);
      uint64_t v32 = v47;
      sub_1C15162CC();
      sub_1C02D45F0();
      uint64_t v33 = v48;
      sub_1C151620C();
      sub_1C0092A5C((unint64_t *)&qword_1EB870780, 255, MEMORY[0x1E4F27928]);
      uint64_t v34 = v50;
      int v35 = sub_1C151E57C();
      uint64_t v36 = *(void (**)(char *, uint64_t))(v49 + 8);
      v36(v33, v34);
      v36(v32, v34);
      uint64_t v37 = *v27;
      uint64_t v38 = (*v27 < v51) & ~v35;
      sub_1C02DF5EC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for BundleSession);
      return v37 + v38;
    }
    uint64_t v31 = (uint64_t)v10;
    goto LABEL_23;
  }
  uint64_t v44 = v7;
  uint64_t v29 = v22;
  if (qword_1EA1947C8 != -1) {
    swift_once();
  }
  sub_1C0092A5C(&qword_1EB86FBC8, v28, (void (*)(uint64_t))type metadata accessor for BundleSessionManager);
  sub_1C1516FBC();
  if (!v55) {
    goto LABEL_12;
  }
  if (v55 == 1)
  {
    if (qword_1EA1947D0 != -1) {
      swift_once();
    }
    sub_1C1516FBC();
    return v54;
  }
  uint64_t v39 = v46;
  BundleSessionManager.currentSession()(v46);
  sub_1C02DE980(v39, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v40 = (uint64_t)v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v44, 1, 1, v22);
  }
  else
  {
    uint64_t v40 = (uint64_t)v44;
    sub_1C02DEC7C((uint64_t)v13, (uint64_t)v44, (uint64_t (*)(void))sub_1C02DE94C);
  }
  sub_1C02DF5EC(v39, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v40, 1, v22) == 1)
  {
    uint64_t v31 = v40;
LABEL_23:
    sub_1C02DF5EC(v31, (uint64_t (*)(void))sub_1C02DE94C);
    return 0;
  }
  uint64_t v41 = v45;
  sub_1C02DEC7C(v40, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for BundleSession);
  uint64_t v42 = *v41;
  if (*v41 < v51) {
    uint64_t v43 = *(unsigned __int8 *)(v53 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_shouldForceIncrementDemoSession);
  }
  else {
    uint64_t v43 = 0;
  }
  sub_1C02DF5EC((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for BundleSession);
  return v42 + v43;
}

uint64_t sub_1C02DA02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v36 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C151631C();
  uint64_t v35 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v33 = (char *)&v30 - v6;
  sub_1C02DE94C(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = type metadata accessor for BundleSession();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  BundleSessionManager.currentSession()((uint64_t)v15);
  sub_1C02DE980((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  if (swift_getEnumCaseMultiPayload() > 1) {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  }
  else {
    sub_1C02DEC7C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))sub_1C02DE94C);
  }
  sub_1C02DF5EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
  {
    sub_1C02DF5EC((uint64_t)v9, (uint64_t (*)(void))sub_1C02DE94C);
    return sub_1C15162CC();
  }
  sub_1C02DEC7C((uint64_t)v9, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for BundleSession);
  uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability + 24);
  uint64_t v22 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability), v21);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 184))(v21, v22) & 1) == 0) {
    goto LABEL_16;
  }
  if (qword_1EB86F9A8 != -1) {
    swift_once();
  }
  if ((sub_1C151701C() & 1) == 0)
  {
    char v37 = 0;
    goto LABEL_18;
  }
  if (qword_1EA1947C8 != -1) {
    swift_once();
  }
  sub_1C0092A5C(&qword_1EB86FBC8, v23, (void (*)(uint64_t))type metadata accessor for BundleSessionManager);
  sub_1C1516FBC();
  if (!v37)
  {
LABEL_18:
    uint64_t v24 = v33;
    sub_1C15162CC();
    uint64_t v25 = &v19[*(int *)(v16 + 20)];
    sub_1C02D45F0();
    uint64_t v26 = v34;
    sub_1C151620C();
    sub_1C0092A5C((unint64_t *)&qword_1EB870780, 255, MEMORY[0x1E4F27928]);
    char v27 = sub_1C151E57C();
    uint64_t v28 = v35;
    uint64_t v29 = *(void (**)(char *, uint64_t))(v35 + 8);
    v29(v26, v3);
    v29(v24, v3);
    if ((v27 & 1) != 0 || *(void *)v19 >= v31)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v36, v25, v3);
      return sub_1C02DF5EC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for BundleSession);
    }
    goto LABEL_20;
  }
  if (v37 == 1
    || *(unsigned char *)(v2 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_shouldForceIncrementDemoSession) == 1
    && *(void *)v19 < v31)
  {
LABEL_20:
    sub_1C15162CC();
    return sub_1C02DF5EC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for BundleSession);
  }
LABEL_16:
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v36, &v19[*(int *)(v16 + 20)], v3);
  return sub_1C02DF5EC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for BundleSession);
}

uint64_t sub_1C02DA5C8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v52 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C151631C();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v48 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v47 = (char *)&v42 - v6;
  sub_1C02DE94C(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = type metadata accessor for BundleSession();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v43 = (uint64_t *)((char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19);
  uint64_t v46 = (uint64_t *)((char *)&v42 - v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v51 = (uint64_t)&v42 - v22;
  uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability + 24);
  uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability), v24);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 184))(v24, v23);
  if ((result & 1) == 0)
  {
    *uint64_t v52 = 2;
    return result;
  }
  uint64_t v26 = v52;
  BundleSessionManager.currentSession()((uint64_t)v15);
  sub_1C02DE980((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  if (swift_getEnumCaseMultiPayload() > 1) {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  }
  else {
    sub_1C02DEC7C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))sub_1C02DE94C);
  }
  sub_1C02DF5EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
  {
    char v27 = (uint64_t (*)(void))sub_1C02DE94C;
    uint64_t v28 = (uint64_t)v9;
LABEL_8:
    uint64_t result = sub_1C02DF5EC(v28, v27);
LABEL_9:
    *uint64_t v26 = 0;
    return result;
  }
  uint64_t v29 = v51;
  sub_1C02DEC7C((uint64_t)v9, v51, (uint64_t (*)(void))type metadata accessor for BundleSession);
  if (qword_1EB86F9A8 != -1) {
    swift_once();
  }
  if ((sub_1C151701C() & 1) == 0)
  {
    char v53 = 0;
    goto LABEL_19;
  }
  if (qword_1EA1947C8 != -1) {
    swift_once();
  }
  sub_1C0092A5C(&qword_1EB86FBC8, v30, (void (*)(uint64_t))type metadata accessor for BundleSessionManager);
  sub_1C1516FBC();
  if (!v53)
  {
LABEL_19:
    uint64_t v31 = v47;
    sub_1C15162CC();
    sub_1C02D45F0();
    uint64_t v32 = v48;
    sub_1C151620C();
    sub_1C0092A5C((unint64_t *)&qword_1EB870780, 255, MEMORY[0x1E4F27928]);
    uint64_t v33 = v50;
    char v34 = sub_1C151E57C();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v49 + 8);
    v35(v32, v33);
    v35(v31, v33);
    uint64_t v36 = v46;
    sub_1C02DEC7C(v29, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for BundleSession);
    if (v34)
    {
      uint64_t result = sub_1C02DF5EC((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for BundleSession);
      char v37 = v26;
    }
    else
    {
      uint64_t v38 = *v36;
      uint64_t result = sub_1C02DF5EC((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for BundleSession);
      char v37 = v26;
      if (v38 >= v44)
      {
        *uint64_t v26 = 1;
        return result;
      }
    }
    *char v37 = 0;
    return result;
  }
  if (v53 == 1)
  {
    char v27 = (uint64_t (*)(void))type metadata accessor for BundleSession;
    uint64_t v28 = v29;
    goto LABEL_8;
  }
  int v39 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_shouldForceIncrementDemoSession);
  uint64_t v40 = v43;
  sub_1C02DEC7C(v29, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for BundleSession);
  if (v39 != 1)
  {
    char v27 = (uint64_t (*)(void))type metadata accessor for BundleSession;
    uint64_t v28 = (uint64_t)v40;
    goto LABEL_8;
  }
  uint64_t v41 = *v40;
  uint64_t result = sub_1C02DF5EC((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for BundleSession);
  if (v41 < v44) {
    goto LABEL_9;
  }
  *uint64_t v26 = 1;
  return result;
}

uint64_t sub_1C02DAC5C(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  v2[8] = swift_getObjectType();
  return MEMORY[0x1F4188298](sub_1C02DACCC, 0, 0);
}

uint64_t sub_1C02DACCC()
{
  if (qword_1EA1947F8 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    if (qword_1EA1947E8 != -1) {
      swift_once();
    }
    sub_1C0092A5C(&qword_1EB86FBC8, v1, (void (*)(uint64_t))type metadata accessor for BundleSessionManager);
    sub_1C1516FBC();
    uint64_t v2 = *(unsigned __int8 *)(v0 + 96);
    if (qword_1EA1947F0 != -1) {
      swift_once();
    }
    sub_1C1516FBC();
    unint64_t v3 = *(void *)(v0 + 40);
    switch(v2)
    {
      case 1:
        uint64_t v7 = *(void **)(v0 + 48);
        *uint64_t v7 = 0;
        v7[1] = 0;
        break;
      case 2:
        uint64_t v8 = *(unint64_t **)(v0 + 48);
        unint64_t v9 = 0x8000000000000000;
        goto LABEL_16;
      case 3:
        uint64_t v8 = *(unint64_t **)(v0 + 48);
        unint64_t v9 = 0x8000000000000001;
LABEL_16:
        *uint64_t v8 = v9;
        v8[1] = v3;
        break;
      default:
        *(_OWORD *)*(void *)(v0 + 48) = xmmword_1C153AB20;
        break;
    }
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(v0 + 56)
                   + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_familySharingStatusManager
                   + 8);
    uint64_t ObjectType = swift_getObjectType();
    *(void *)(v0 + 72) = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(ObjectType, v4);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1C02DAF78;
    return MEMORY[0x1F415EBC8](v0 + 16);
  }
}

uint64_t sub_1C02DAF78()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C02DB0B4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C02DB094;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02DB094()
{
  *(_OWORD *)*(void *)(v0 + 48) = *(_OWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C02DB0B4()
{
  swift_release();
  if (qword_1EB86F9E0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C608);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F36C();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[11];
  if (v7)
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v12;
    sub_1C151FE1C();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_1BFC31000, v5, v6, "BundleSessionManager failed to get family status with error: %@.", v9, 0xCu);
    sub_1C0064840(0, (unint64_t *)&qword_1EB861470, (unint64_t *)&qword_1EB87A330, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v10, -1, -1);
    MEMORY[0x1C18C9B00](v9, -1, -1);
  }
  else
  {
  }
  *(_OWORD *)v0[6] = xmmword_1C153AB20;
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1C02DB2F8(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return MEMORY[0x1F4188298](sub_1C02DB318, 0, 0);
}

uint64_t sub_1C02DB318()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 16;
  if (qword_1EB86F748 != -1) {
    swift_once();
  }
  swift_retain();
  *(void *)(v1 + 40) = sub_1C151862C();
  swift_release();
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v3;
  *id v3 = v1;
  v3[1] = sub_1C02DB430;
  return MEMORY[0x1F415EBC8](v2);
}

uint64_t sub_1C02DB430()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C02DB5DC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C02DB54C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02DB54C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_authorizationStatus);

  if (v2 == (id)2) {
    char v3 = 2;
  }
  else {
    char v3 = v2 == (id)1;
  }
  **(unsigned char **)(v0 + 32) = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C02DB5DC()
{
  swift_release();
  if (qword_1EB86F9E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C608);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F36C();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 56);
  if (v7)
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v12;
    sub_1C151FE1C();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_1BFC31000, v5, v6, "BundleSessionManager failed to get notifications status with error: %@.", v9, 0xCu);
    sub_1C0064840(0, (unint64_t *)&qword_1EB861470, (unint64_t *)&qword_1EB87A330, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v10, -1, -1);
    MEMORY[0x1C18C9B00](v9, -1, -1);
  }
  else
  {
  }
  **(unsigned char **)(v0 + 32) = 0;
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1C02DB818()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x1F4188298](sub_1C02DB838, 0, 0);
}

uint64_t sub_1C02DB838()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = v1;
  id v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  sub_1C0064840(0, &qword_1EB86FD70, (unint64_t *)&qword_1EB86FD88, 0x1E4F7E5D0, MEMORY[0x1E4FBB320]);
  *id v3 = v0;
  v3[1] = sub_1C02DB964;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000010, 0x80000001C160A4C0, sub_1C02DF9E8, v2, v4);
}

uint64_t sub_1C02DB964()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C02DBA98;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C02DBA80;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02DBA80()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1C02DBA98()
{
  swift_task_dealloc();
  if (qword_1EB86F9E0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C608);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F36C();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[7];
  if (v7)
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v12;
    sub_1C151FE1C();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_1BFC31000, v5, v6, "BundleSessionManager failed to get newsletters with error: %@.", v9, 0xCu);
    sub_1C0064840(0, (unint64_t *)&qword_1EB861470, (unint64_t *)&qword_1EB87A330, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v10, -1, -1);
    MEMORY[0x1C18C9B00](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = (void *)v0[7];

  uint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v15 = MEMORY[0x1E4FBC860];
  return v14(v15);
}

uint64_t sub_1C02DBCCC()
{
  uint64_t v1 = v0;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v42 - v10;
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability + 24);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability), v12);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 184))(v12, v13) & 1) == 0)
  {
    if (qword_1EB86F9E0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C15198DC();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB93C608);
    uint64_t v17 = sub_1C15198AC();
    os_log_type_t v18 = sub_1C151F38C();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_17;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = "BundleSessionManager will not slot premium headlines because the feature is disabled.";
    goto LABEL_16;
  }
  id v14 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_bundleSubscriptionManager), sel_cachedSubscription);
  unsigned int v15 = objc_msgSend(v14, sel_isSubscribed);

  if (!v15)
  {
    if (qword_1EB86F9E0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C15198DC();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB93C608);
    uint64_t v17 = sub_1C15198AC();
    os_log_type_t v18 = sub_1C151F38C();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_17;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = "BundleSessionManager will not slot premium headlines because the user is not subscribed.";
    goto LABEL_16;
  }
  swift_retain();
  sub_1C151894C();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C02DF5EC((uint64_t)v4, (uint64_t (*)(void))sub_1BFF97C40);
    if (qword_1EB86F9E0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1C15198DC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB93C608);
    uint64_t v17 = sub_1C15198AC();
    os_log_type_t v18 = sub_1C151F38C();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_17;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = "BundleSessionManager will not slot premium headlines because the user is not a detected new subscriber.";
LABEL_16:
    _os_log_impl(&dword_1BFC31000, v17, v18, v20, v19, 2u);
    MEMORY[0x1C18C9B00](v19, -1, -1);
LABEL_17:

    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  id v24 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_appConfigurationManager), sel_appConfiguration);
  if ((objc_msgSend(v24, sel_respondsToSelector_, sel_maximumPremiumHeadlinesGroupSlottingTime) & 1) == 0)
  {
    swift_unknownObjectRelease();
    if (qword_1EB86F9E0 == -1)
    {
LABEL_30:
      uint64_t v34 = sub_1C15198DC();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EB93C608);
      uint64_t v35 = sub_1C15198AC();
      os_log_type_t v36 = sub_1C151F38C();
      if (os_log_type_enabled(v35, v36))
      {
        char v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v37 = 0;
        _os_log_impl(&dword_1BFC31000, v35, v36, "BundleSessionManager will not slot premium headlines because the slotting time could not be determined.", v37, 2u);
        MEMORY[0x1C18C9B00](v37, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return 0;
    }
LABEL_41:
    swift_once();
    goto LABEL_30;
  }
  id v25 = objc_msgSend(v24, sel_maximumPremiumHeadlinesGroupSlottingTime);
  swift_unknownObjectRelease();
  sub_1C151630C();
  sub_1C15161FC();
  double v27 = v26;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v6 + 8);
  v6 += 8;
  uint64_t v28 = v29;
  v29(v8, v5);
  if ((~*(void *)&v27 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v27 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v27 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if ((uint64_t)v25 < (uint64_t)v27)
  {
    if (qword_1EB86F9E0 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1C15198DC();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EB93C608);
    uint64_t v31 = sub_1C15198AC();
    os_log_type_t v32 = sub_1C151F38C();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_1BFC31000, v31, v32, "BundleSessionManager will not slot premium headlines because the user is outside the eligible detection window.", v33, 2u);
      MEMORY[0x1C18C9B00](v33, -1, -1);
    }

    v28(v11, v5);
    return 0;
  }
  if (qword_1EB86F9E0 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C15198DC();
  __swift_project_value_buffer(v38, (uint64_t)qword_1EB93C608);
  int v39 = sub_1C15198AC();
  os_log_type_t v40 = sub_1C151F38C();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl(&dword_1BFC31000, v39, v40, "BundleSessionManager will slot premium headlines.", v41, 2u);
    MEMORY[0x1C18C9B00](v41, -1, -1);
  }

  v28(v11, v5);
  return 1;
}

Swift::Void __swiftcall BundleSessionManager.attemptDemoSessionIncrease()()
{
  swift_getObjectType();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability), v1);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 184))(v1, v2))
  {
    if (qword_1EB86F9A8 != -1) {
      swift_once();
    }
    if ((sub_1C151701C() & 1) == 0) {
      goto LABEL_9;
    }
    if (qword_1EA1947C8 != -1) {
      swift_once();
    }
    sub_1C0092A5C(&qword_1EB86FBC8, v3, (void (*)(uint64_t))type metadata accessor for BundleSessionManager);
    sub_1C1516FBC();
    if (v5 && v5 != 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_9:
      char v4 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if ((v4 & 1) == 0) {
        return;
      }
    }
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_shouldForceIncrementDemoSession) = 1;
  }
}

void sub_1C02DC5CC(uint64_t a1, char *a2)
{
  sub_1C02DF9F0();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  id v8 = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_newsletterManager], sel_forceUpdateSubscription, MEMORY[0x1F4188790](v4).n128_f64[0]);
  uint64_t v23 = a1;
  id v24 = v8;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v22((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = v9 | 7;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v20(v10 + ((v9 + 24) & ~v9), (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C02DFB58;
  *(void *)(v11 + 24) = v10;
  uint64_t v29 = sub_1C02DFBCC;
  uint64_t v30 = v11;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v26 = 1107296256;
  double v27 = sub_1C122099C;
  uint64_t v28 = &block_descriptor_16;
  uint64_t v12 = _Block_copy(&aBlock);
  uint64_t v13 = a2;
  swift_release();
  id v14 = v24;
  id v15 = objc_msgSend(v24, sel_then_, v12);
  _Block_release(v12);

  if (v15)
  {
    v22((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v5);
    uint64_t v16 = swift_allocObject();
    v20(v16 + ((v9 + 16) & ~v9), (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    uint64_t v29 = sub_1C02DFC94;
    uint64_t v30 = v16;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v26 = 1107296256;
    double v27 = sub_1C02DCA08;
    uint64_t v28 = &block_descriptor_87;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_release();
    id v18 = objc_msgSend(v15, sel_error_, v17);
    _Block_release(v17);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C02DC8E8(uint64_t a1, uint64_t a2)
{
  id v2 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_newsletterManager), sel_cachedNewsletters);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB86FD88);
    sub_1C151EBCC();
  }
  sub_1C02DF9F0();
  return sub_1C151EDDC();
}

uint64_t sub_1C02DC990(id a1)
{
  if (!a1)
  {
    sub_1C02DF994();
    swift_allocError();
    *id v2 = 0;
  }
  id v3 = a1;
  sub_1C02DF9F0();
  return sub_1C151EDCC();
}

void sub_1C02DCA08(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1C02DCA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_1C02DE94C(0);
  *(void *)(v4 + 24) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C02DCB04, 0, 0);
}

uint64_t sub_1C02DCB04()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = type metadata accessor for BundleSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  sub_1C02D677C(v1);
  sub_1C02DF5EC(v1, (uint64_t (*)(void))sub_1C02DE94C);
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1C02DCBCC(uint64_t a1)
{
  uint64_t v36 = sub_1C151631C();
  uint64_t v2 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151661C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v37 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v33 - v12;
  id v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C02DFD0C(0, (unint64_t *)&qword_1EB871190, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v33 - v16;
  sub_1C02DFD0C(0, &qword_1EB85C778, MEMORY[0x1E4F27CA0], v14);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v33 - v19;
  uint64_t v21 = sub_1C151586C();
  __n128 v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v33 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      double v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
      uint64_t v34 = v23;
      uint64_t v35 = v22;
      v27(v20, 1, 1, v5, v24);
      uint64_t v28 = sub_1C15166BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
      sub_1C151585C();
      sub_1C15157EC();
      goto LABEL_5;
    case 2:
    case 3:
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
      uint64_t v34 = v23;
      uint64_t v35 = v22;
      v29(v20, 1, 1, v5, v24);
      uint64_t v30 = sub_1C15166BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v17, 1, 1, v30);
      sub_1C151585C();
      sub_1C15157BC();
      goto LABEL_5;
    case 4:
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
      uint64_t v34 = v23;
      uint64_t v35 = v22;
      v31(v20, 1, 1, v5, v24);
      uint64_t v32 = sub_1C15166BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v17, 1, 1, v32);
      sub_1C151585C();
      sub_1C151581C();
LABEL_5:
      sub_1C15165BC();
      sub_1C15162CC();
      sub_1C151658C();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v36);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1C02DE980((uint64_t)v13, v37, (uint64_t (*)(void))sub_1BFF97C40);
      swift_retain();
      sub_1C151895C();
      swift_release();
      sub_1C02DF5EC((uint64_t)v13, (uint64_t (*)(void))sub_1BFF97C40);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v35);
      break;
    case 5:
      sub_1C15161BC();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v13, 0, 1, v36);
      sub_1C02DE980((uint64_t)v13, v37, (uint64_t (*)(void))sub_1BFF97C40);
      swift_retain();
      sub_1C151895C();
      swift_release();
      sub_1C02DF5EC((uint64_t)v13, (uint64_t (*)(void))sub_1BFF97C40);
      break;
    default:
      return;
  }
}

Swift::Void __swiftcall BundleSessionManager.resetInitialNewSubscriptionDetectionTimestamp()()
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v13 - v4;
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1C02DE980((uint64_t)v5, (uint64_t)v2, (uint64_t (*)(void))sub_1BFF97C40);
  swift_retain();
  sub_1C151895C();
  swift_release();
  sub_1C02DF5EC((uint64_t)v5, (uint64_t (*)(void))sub_1BFF97C40);
  id v7 = objc_msgSend(self, sel_standardUserDefaults);
  id v8 = (void *)sub_1C151E5EC();
  objc_msgSend(v7, sel_removeObjectForKey_, v8);

  if (qword_1EB86F9E0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1C15198DC();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB93C608);
  uint64_t v10 = sub_1C15198AC();
  os_log_type_t v11 = sub_1C151F38C();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1BFC31000, v10, v11, "BundleSessionManager resetted the initialNewSubscriptionDetectionTimestamp.", v12, 2u);
    MEMORY[0x1C18C9B00](v12, -1, -1);
  }
}

uint64_t sub_1C02DD6AC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C02DD6CC, 0, 0);
}

uint64_t sub_1C02DD6CC()
{
  swift_getObjectType();
  v0[4] = sub_1BFC48F8C();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C02AE608;
  uint64_t v2 = v0[2];
  return MEMORY[0x1F415EBC8](v2);
}

uint64_t sub_1C02DD788(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C02DD7A8, 0, 0);
}

uint64_t sub_1C02DD7A8()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C02DD85C;
  return FCNewsAppConfigurationManager.fetchConfiguration(cachedOnly:)(0, ObjectType);
}

uint64_t sub_1C02DD85C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 40) = a1;
    return MEMORY[0x1F4188298](sub_1C02DD9A8, 0, 0);
  }
}

uint64_t sub_1C02DD9A8()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id BundleSessionManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BundleSessionManager.init()()
{
}

uint64_t sub_1C02DDA60@<X0>(uint64_t a1@<X8>)
{
  return BundleSessionManager.debugInitialPurchaseTimestampValue.getter(a1);
}

uint64_t BundleSessionManager.debugInitialPurchaseTimestampValue.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_bundleSubscriptionManager), sel_cachedSubscription);
  id v4 = objc_msgSend(v3, sel_initialPurchaseTimestamp);

  if (v4)
  {
    objc_msgSend(v4, sel_doubleValue);
    sub_1C151628C();

    uint64_t v5 = sub_1C151631C();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1C151631C();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

uint64_t sub_1C02DDB9C@<X0>(uint64_t a1@<X8>)
{
  return BundleSessionManager.debugDetectionTimestampValue.getter(a1);
}

uint64_t BundleSessionManager.debugDetectionTimestampValue.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1C151894C();
  swift_release();
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C02DF5EC((uint64_t)v4, (uint64_t (*)(void))sub_1BFF97C40);
    uint64_t v7 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
    uint64_t v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

uint64_t sub_1C02DDD18()
{
  swift_retain();
  uint64_t v0 = sub_1C151896C();
  swift_release();
  return v0;
}

uint64_t sub_1C02DDD60(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1BFC542F4;
  return BundleSessionManager.refreshSession(with:)(a1, a2);
}

uint64_t sub_1C02DDE0C@<X0>(uint64_t a1@<X8>)
{
  return BundleSessionManager.currentSession()(a1);
}

void sub_1C02DDE30()
{
}

void sub_1C02DDE54()
{
}

void sub_1C02DDE78()
{
}

uint64_t sub_1C02DDE9C()
{
  swift_getObjectType();
  return sub_1C151723C();
}

uint64_t sub_1C02DDEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F415F4E0](a1, ObjectType, a5);
}

uint64_t sub_1C02DDF44(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F415F4D8](a1, ObjectType);
}

Swift::Void __swiftcall BundleSessionManager.userNotificationCenter(_:didChange:)(UNUserNotificationCenter _, UNNotificationSettings didChange)
{
}

uint64_t BundleSessionManager.newsletterSubscriptionChanged(from:)()
{
  return sub_1C02DEDC0();
}

uint64_t BundleSessionManager.bundleSubscriptionDidSubscribe(_:)()
{
  return sub_1C02DEFD4((uint64_t)&unk_1F1B99710, (uint64_t)&unk_1F1B99738, (uint64_t)&unk_1EA1994B0);
}

uint64_t BundleSessionManager.bundleSubscriptionDidExpire(_:)()
{
  return sub_1C02DEFD4((uint64_t)&unk_1F1B996C0, (uint64_t)&unk_1F1B996E8, (uint64_t)&unk_1EA199498);
}

uint64_t BundleSessionManager.bundleSubscriptionDidChange(_:previousBundleSubscription:)()
{
  return sub_1C02DEFD4((uint64_t)&unk_1F1B99620, (uint64_t)&unk_1F1B99648, (uint64_t)&unk_1EA199448);
}

char *sub_1C02DE398(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v52 = a5;
  char v53 = a6;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C0064478(0);
  MEMORY[0x1F4188790](v7 - 8);
  char v55 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v9 - 8);
  os_log_type_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v48 - v13;
  uint64_t v15 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_notificationCenter;
  id v22 = objc_allocWithZone(MEMORY[0x1E4F44680]);
  uint64_t v23 = v6;
  __n128 v24 = (void *)sub_1C151E5EC();
  id v25 = objc_msgSend(v22, sel_initWithBundleIdentifier_, v24);

  *(void *)&v6[v21] = v25;
  uint64_t v26 = OBJC_IVAR____TtC8NewsFeed20BundleSessionManager__bundleSessionCache;
  swift_storeEnumTagMultiPayload();
  sub_1C02DE980((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  sub_1C02DFD0C(0, &qword_1EA1994F8, (uint64_t (*)(uint64_t))type metadata accessor for BundleSessionCache, MEMORY[0x1E4FAB060]);
  swift_allocObject();
  uint64_t v27 = sub_1C1518E9C();
  sub_1C02DF5EC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
  *(void *)&v23[v26] = v27;
  uint64_t v28 = OBJC_IVAR____TtC8NewsFeed20BundleSessionManager__initialNewSubscriptionDetectionTimestamp;
  uint64_t v29 = sub_1C151631C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
  sub_1C02DE980((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1C02DFD0C(0, &qword_1EA199500, (uint64_t (*)(uint64_t))sub_1BFF97C40, MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  uint64_t v30 = sub_1C151892C();
  sub_1C02DF5EC((uint64_t)v14, (uint64_t (*)(void))sub_1BFF97C40);
  *(void *)&v23[v28] = v30;
  uint64_t v31 = &v23[OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_cachedBundleSessionKey];
  *(void *)uint64_t v31 = 0xD000000000000015;
  *((void *)v31 + 1) = 0x80000001C160A500;
  uint64_t v32 = &v23[OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_initialNewSubscriptionDetectionTimestampKey];
  *(void *)uint64_t v32 = 0xD00000000000002CLL;
  *((void *)v32 + 1) = 0x80000001C160A520;
  v23[OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_shouldForceIncrementDemoSession] = 0;
  uint64_t v34 = v48;
  uint64_t v33 = v49;
  *(void *)&v23[OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_newsletterManager] = v48;
  *(void *)&v23[OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_appConfigurationManager] = v33;
  uint64_t v35 = &v23[OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_familySharingStatusManager];
  uint64_t v36 = v51;
  *(void *)uint64_t v35 = v50;
  *((void *)v35 + 1) = v36;
  uint64_t v37 = v52;
  sub_1BFC66384(v52, (uint64_t)&v23[OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_featureAvailability]);
  uint64_t v38 = v53;
  *(void *)&v23[OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_bundleSubscriptionManager] = v53;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();

  v56.receiver = v23;
  v56.super_class = ObjectType;
  id v39 = objc_msgSendSuper2(&v56, sel_init);
  uint64_t v40 = sub_1C151EE9C();
  uint64_t v41 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v55, 1, 1, v40);
  uint64_t v42 = (void *)swift_allocObject();
  _OWORD v42[2] = 0;
  v42[3] = 0;
  v42[4] = v39;
  id v43 = v39;
  sub_1C0C833AC(v41, (uint64_t)&unk_1EA199510, (uint64_t)v42);
  swift_release();
  id v44 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v45 = (char *)v43;
  uint64_t v46 = (void *)sub_1C151E5EC();
  objc_msgSend(v44, sel_addObserver_selector_name_object_, v45, sel_familySharingStatusDidChange, v46, 0);

  objc_msgSend(*(id *)&v45[OBJC_IVAR____TtC8NewsFeed20BundleSessionManager_notificationCenter], sel_setPrivateDelegate_, v45);
  objc_msgSend(v34, sel_addObserver_, v45);
  objc_msgSend(v38, sel_addObserver_, v45);

  __swift_destroy_boxed_opaque_existential_1(v37);
  return v45;
}

void sub_1C02DE94C(uint64_t a1)
{
}

uint64_t sub_1C02DE980(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C02DE9E8()
{
  if (!qword_1EB8942F8)
  {
    sub_1C02DE94C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB8942F8);
    }
  }
}

uint64_t sub_1C02DEA4C()
{
  sub_1C02DE94C(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();

  uint64_t v3 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    unint64_t v4 = v0 + v2 + *(int *)(v3 + 20);
    uint64_t v5 = sub_1C151631C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C02DEB94()
{
  sub_1C02DE94C(0);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_1C005E7F4;
  return MEMORY[0x1F4188298](sub_1C02D93A4, 0, 0);
}

uint64_t sub_1C02DEC7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for BundleSessionManager()
{
  return self;
}

uint64_t sub_1C02DED0C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C005E7F4;
  return sub_1C02DCA74(a1, v4, v5, v6);
}

uint64_t sub_1C02DEDC0()
{
  sub_1C02DE94C(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for BundleSessionCache();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - v7;
  MEMORY[0x1F4188790](v9);
  os_log_type_t v11 = (char *)&v13 - v10;
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    sub_1C02DEC7C((uint64_t)v11, (uint64_t)v2, (uint64_t (*)(void))sub_1C02DE94C);
    sub_1C02DE980((uint64_t)v2, (uint64_t)v8, (uint64_t (*)(void))sub_1C02DE94C);
    swift_storeEnumTagMultiPayload();
    sub_1C02DE980((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
    swift_retain();
    sub_1C1518ECC();
    swift_release();
    sub_1C02DF5EC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BundleSessionCache);
    os_log_type_t v11 = v2;
    return sub_1C02DF5EC((uint64_t)v11, (uint64_t (*)(void))sub_1C02DE94C);
  }
  if (result == 1) {
    return sub_1C02DF5EC((uint64_t)v11, (uint64_t (*)(void))sub_1C02DE94C);
  }
  return result;
}

uint64_t sub_1C02DEFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0064478(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151EE9C();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v3;
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  id v12 = v3;
  if (v11 == 1)
  {
    sub_1C02DF5EC((uint64_t)v7, (uint64_t (*)(void))sub_1C0064478);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    sub_1C151EE8C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (v10[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = sub_1C151EDBC();
      uint64_t v14 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = v10;
  if (v14 | v13)
  {
    v18[0] = 0;
    v18[1] = 0;
    v18[2] = v13;
    v18[3] = v14;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C02DF20C(uint64_t a1, uint64_t a2)
{
  return sub_1C0092A5C(&qword_1EB86FBC8, a2, (void (*)(uint64_t))type metadata accessor for BundleSessionManager);
}

uint64_t dispatch thunk of BundleSessionManagerType.debugInitialPurchaseTimestampValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BundleSessionManagerType.debugDetectionTimestampValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BundleSessionManagerType.initialNewSubscriptionDetectionTimestampObservable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BundleSessionManagerType.refreshSession(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C005E7F4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BundleSessionManagerType.currentSession()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of BundleSessionManagerType.attemptDemoSessionIncrease()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of BundleSessionManagerType.resetBundleSession()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of BundleSessionManagerType.resetInitialNewSubscriptionDetectionTimestamp()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t method lookup function for BundleSessionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BundleSessionManager);
}

uint64_t dispatch thunk of BundleSessionManager.__allocating_init(newsletterManager:appConfigurationManager:familySharingStatusManager:featureAvailability:bundleSubscriptionManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_1C02DF428()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C005E7F4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C005E7F4;
  return sub_1C02D494C();
}

uint64_t sub_1C02DF4FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C02DF534(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1C005E7F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA1A55C0 + dword_1EA1A55C0);
  return v6(a1, v4);
}

uint64_t sub_1C02DF5EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C02DF64C()
{
  return swift_deallocObject();
}

uint64_t sub_1C02DF684(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1BFC542F4;
  return MEMORY[0x1F4188298](sub_1C02DD6CC, 0, 0);
}

uint64_t sub_1C02DF734(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1C005E7F4;
  return MEMORY[0x1F4188298](sub_1C02DD7A8, 0, 0);
}

uint64_t sub_1C02DF7E8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C005E7F4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C005E7F4;
  return sub_1C02D494C();
}

uint64_t sub_1C02DF8C0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C005E7F4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C005E7F4;
  return sub_1C02D494C();
}

unint64_t sub_1C02DF994()
{
  unint64_t result = qword_1EA1994D0;
  if (!qword_1EA1994D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA1994D0);
  }
  return result;
}

void sub_1C02DF9E8(uint64_t a1)
{
  sub_1C02DC5CC(a1, *(char **)(v1 + 16));
}

void sub_1C02DF9F0()
{
  if (!qword_1EA1994F0)
  {
    sub_1C0064840(255, &qword_1EB86FD70, (unint64_t *)&qword_1EB86FD88, 0x1E4F7E5D0, MEMORY[0x1E4FBB320]);
    sub_1C017F734();
    unint64_t v0 = sub_1C151EDEC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1994F0);
    }
  }
}

uint64_t sub_1C02DFA8C()
{
  sub_1C02DF9F0();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1C02DFB58(uint64_t a1)
{
  sub_1C02DF9F0();
  uint64_t v3 = *(void *)(v1 + 16);
  return sub_1C02DC8E8(a1, v3);
}

uint64_t sub_1C02DFBCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 16);
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC848] + 8;
  return v2();
}

uint64_t sub_1C02DFC04()
{
  sub_1C02DF9F0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C02DFC94(void *a1)
{
  sub_1C02DF9F0();
  return sub_1C02DC990(a1);
}

uint64_t sub_1C02DFD04()
{
  return sub_1C0F34614();
}

void sub_1C02DFD0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C02DFD74()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1BFC542F4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C005E7F4;
  return sub_1C02D494C();
}

unsigned char *storeEnumTagSinglePayload for BundleSessionManager.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02DFF14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleSessionManager.Errors()
{
  return &type metadata for BundleSessionManager.Errors;
}

unint64_t sub_1C02DFF50()
{
  unint64_t result = qword_1EA199518;
  if (!qword_1EA199518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199518);
  }
  return result;
}

void *sub_1C02DFFC4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_retain();
    if (EnumCaseMultiPayload == 1)
    {
      if (v8 != 1) {
        swift_bridgeObjectRetain();
      }
      a1[3] = v8;
      uint64_t v9 = *(int *)(type metadata accessor for FormatOption() + 28);
      uint64_t v10 = (char *)a1 + v9;
      int v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for FormatVersionRequirement(0);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
LABEL_11:
        sub_1C0178190();
        memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_22:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 != 2)
      {
        if (v17 == 1) {
          goto LABEL_17;
        }
        goto LABEL_20;
      }
    }
    else
    {
      if (v8 != 1) {
        swift_bridgeObjectRetain();
      }
      a1[3] = v8;
      uint64_t v15 = *(int *)(type metadata accessor for FormatOption() + 28);
      uint64_t v10 = (char *)a1 + v15;
      int v11 = (char *)a2 + v15;
      uint64_t v12 = type metadata accessor for FormatVersionRequirement(0);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_11;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      int v18 = swift_getEnumCaseMultiPayload();
      if (v18 != 2)
      {
        if (v18 == 1)
        {
LABEL_17:
          uint64_t v19 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v10, v11, v19);
          sub_1C015F8A0();
          uint64_t v21 = *(int *)(v20 + 48);
LABEL_19:
          id v25 = &v10[v21];
          uint64_t v26 = &v11[v21];
          uint64_t v27 = *((void *)v26 + 1);
          *(void *)id v25 = *(void *)v26;
          *((void *)v25 + 1) = v27;
          swift_bridgeObjectRetain();
LABEL_21:
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
          goto LABEL_22;
        }
LABEL_20:
        uint64_t v28 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v10, v11, v28);
        goto LABEL_21;
      }
    }
    uint64_t v22 = sub_1C151928C();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    v30(v10, v11, v22);
    sub_1BFF05D18();
    uint64_t v24 = v23;
    v30(&v10[*(int *)(v23 + 48)], &v11[*(int *)(v23 + 48)], v22);
    uint64_t v21 = *(int *)(v24 + 64);
    goto LABEL_19;
  }
  uint64_t v14 = *a2;
  *a1 = *a2;
  a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1C02E0508(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(void *)(a1 + 24);
  if (EnumCaseMultiPayload == 1)
  {
    if (v3 != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v4 = a1 + *(int *)(type metadata accessor for FormatOption() + 28);
    uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
    if (!result)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 2)
      {
        if (result != 1) {
          goto LABEL_7;
        }
LABEL_17:
        uint64_t v10 = sub_1C151928C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v4, v10);
        sub_1C015F8A0();
LABEL_19:
        return swift_bridgeObjectRelease();
      }
      goto LABEL_18;
    }
  }
  else
  {
    if (v3 != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v4 = a1 + *(int *)(type metadata accessor for FormatOption() + 28);
    uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9);
    if (!result)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 2)
      {
        if (result != 1)
        {
LABEL_7:
          if (!result)
          {
            uint64_t v7 = sub_1C151928C();
            uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
            return v8(v4, v7);
          }
          return result;
        }
        goto LABEL_17;
      }
LABEL_18:
      uint64_t v11 = sub_1C151928C();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      v12(v4, v11);
      sub_1BFF05D18();
      v12(v4 + *(int *)(v13 + 48), v11);
      goto LABEL_19;
    }
  }
  return result;
}

void *sub_1C02E0794(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  if (EnumCaseMultiPayload != 1)
  {
    if (v6 != 1) {
      swift_bridgeObjectRetain();
    }
    a1[3] = v6;
    uint64_t v13 = *(int *)(type metadata accessor for FormatOption() + 28);
    uint64_t v8 = (char *)a1 + v13;
    uint64_t v9 = (char *)a2 + v13;
    uint64_t v10 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      goto LABEL_5;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v15 = swift_getEnumCaseMultiPayload();
    if (v15 != 2)
    {
      if (v15 == 1)
      {
LABEL_15:
        uint64_t v16 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v8, v9, v16);
        sub_1C015F8A0();
        uint64_t v18 = *(int *)(v17 + 48);
LABEL_17:
        uint64_t v22 = &v8[v18];
        uint64_t v23 = &v9[v18];
        uint64_t v24 = *((void *)v23 + 1);
        *(void *)uint64_t v22 = *(void *)v23;
        *((void *)v22 + 1) = v24;
        swift_bridgeObjectRetain();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        goto LABEL_20;
      }
LABEL_18:
      uint64_t v25 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v8, v9, v25);
      goto LABEL_19;
    }
LABEL_16:
    uint64_t v19 = sub_1C151928C();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    v27(v8, v9, v19);
    sub_1BFF05D18();
    uint64_t v21 = v20;
    v27(&v8[*(int *)(v20 + 48)], &v9[*(int *)(v20 + 48)], v19);
    uint64_t v18 = *(int *)(v21 + 64);
    goto LABEL_17;
  }
  if (v6 != 1) {
    swift_bridgeObjectRetain();
  }
  a1[3] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for FormatOption() + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v14 = swift_getEnumCaseMultiPayload();
    if (v14 != 2)
    {
      if (v14 == 1) {
        goto LABEL_15;
      }
      goto LABEL_18;
    }
    goto LABEL_16;
  }
LABEL_5:
  sub_1C0178190();
  memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_20:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C02E0C88(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C02E11A8((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    uint64_t v5 = a2[3];
    swift_bridgeObjectRetain();
    swift_retain();
    if (EnumCaseMultiPayload == 1)
    {
      if (v5 != 1) {
        swift_bridgeObjectRetain();
      }
      a1[3] = v5;
      uint64_t v6 = *(int *)(type metadata accessor for FormatOption() + 28);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
LABEL_6:
        sub_1C0178190();
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      int v13 = swift_getEnumCaseMultiPayload();
      if (v13 != 2)
      {
        if (v13 == 1) {
          goto LABEL_16;
        }
        goto LABEL_21;
      }
    }
    else
    {
      if (v5 != 1) {
        swift_bridgeObjectRetain();
      }
      a1[3] = v5;
      uint64_t v12 = *(int *)(type metadata accessor for FormatOption() + 28);
      uint64_t v7 = (char *)a1 + v12;
      uint64_t v8 = (char *)a2 + v12;
      uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        goto LABEL_6;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 != 2)
      {
        if (v14 == 1)
        {
LABEL_16:
          uint64_t v15 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v7, v8, v15);
          sub_1C015F8A0();
          uint64_t v17 = *(int *)(v16 + 48);
LABEL_20:
          uint64_t v21 = &v7[v17];
          uint64_t v22 = &v8[v17];
          *(void *)uint64_t v21 = *(void *)v22;
          *((void *)v21 + 1) = *((void *)v22 + 1);
          swift_bridgeObjectRetain();
LABEL_22:
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
          goto LABEL_23;
        }
LABEL_21:
        uint64_t v23 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v7, v8, v23);
        goto LABEL_22;
      }
    }
    uint64_t v18 = sub_1C151928C();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v25(v7, v8, v18);
    sub_1BFF05D18();
    uint64_t v20 = v19;
    v25(&v7[*(int *)(v19 + 48)], &v8[*(int *)(v19 + 48)], v18);
    uint64_t v17 = *(int *)(v20 + 64);
    goto LABEL_20;
  }
  return a1;
}

uint64_t sub_1C02E11A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatScopedOption();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatScopedOption()
{
  uint64_t result = qword_1EA199580;
  if (!qword_1EA199580) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1C02E1250(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(type metadata accessor for FormatOption() + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (EnumCaseMultiPayload != 1)
  {
    if (v11) {
      goto LABEL_3;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 == 2)
    {
      uint64_t v24 = sub_1C151928C();
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
      v30(v7, v8, v24);
      sub_1BFF05D18();
      uint64_t v26 = v25;
      v30(&v7[*(int *)(v25 + 48)], &v8[*(int *)(v25 + 48)], v24);
      uint64_t v20 = *(int *)(v26 + 64);
    }
    else
    {
      if (v17 != 1) {
        goto LABEL_16;
      }
      uint64_t v18 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v7, v8, v18);
      sub_1C015F8A0();
      uint64_t v20 = *(int *)(v19 + 48);
    }
    *(_OWORD *)&v7[v20] = *(_OWORD *)&v8[v20];
    goto LABEL_17;
  }
  if (!v11)
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v13 = swift_getEnumCaseMultiPayload();
    if (v13 == 2)
    {
      uint64_t v21 = sub_1C151928C();
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v29(v7, v8, v21);
      sub_1BFF05D18();
      uint64_t v23 = v22;
      v29(&v7[*(int *)(v22 + 48)], &v8[*(int *)(v22 + 48)], v21);
      uint64_t v16 = *(int *)(v23 + 64);
      goto LABEL_13;
    }
    if (v13 == 1)
    {
      uint64_t v14 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      sub_1C015F8A0();
      uint64_t v16 = *(int *)(v15 + 48);
LABEL_13:
      *(_OWORD *)&v7[v16] = *(_OWORD *)&v8[v16];
LABEL_17:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_18;
    }
LABEL_16:
    uint64_t v27 = sub_1C151928C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v7, v8, v27);
    goto LABEL_17;
  }
LABEL_3:
  sub_1C0178190();
  memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_18:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_1C02E1680(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1C02E11A8((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    long long v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(type metadata accessor for FormatOption() + 28);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v10 = *(void *)(v9 - 8);
    int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
    if (EnumCaseMultiPayload == 1)
    {
      if (v11)
      {
LABEL_4:
        sub_1C0178190();
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      int v13 = swift_getEnumCaseMultiPayload();
      if (v13 == 2)
      {
        uint64_t v21 = sub_1C151928C();
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
        v29(v7, v8, v21);
        sub_1BFF05D18();
        uint64_t v23 = v22;
        v29(&v7[*(int *)(v22 + 48)], &v8[*(int *)(v22 + 48)], v21);
        uint64_t v16 = *(int *)(v23 + 64);
        goto LABEL_14;
      }
      if (v13 == 1)
      {
        uint64_t v14 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
        sub_1C015F8A0();
        uint64_t v16 = *(int *)(v15 + 48);
LABEL_14:
        *(_OWORD *)&v7[v16] = *(_OWORD *)&v8[v16];
LABEL_19:
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
        goto LABEL_20;
      }
LABEL_18:
      uint64_t v27 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v7, v8, v27);
      goto LABEL_19;
    }
    if (v11) {
      goto LABEL_4;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 == 2)
    {
      uint64_t v24 = sub_1C151928C();
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
      v30(v7, v8, v24);
      sub_1BFF05D18();
      uint64_t v26 = v25;
      v30(&v7[*(int *)(v25 + 48)], &v8[*(int *)(v25 + 48)], v24);
      uint64_t v20 = *(int *)(v26 + 64);
    }
    else
    {
      if (v17 != 1) {
        goto LABEL_18;
      }
      uint64_t v18 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v7, v8, v18);
      sub_1C015F8A0();
      uint64_t v20 = *(int *)(v19 + 48);
    }
    *(_OWORD *)&v7[v20] = *(_OWORD *)&v8[v20];
    goto LABEL_19;
  }
  return a1;
}

uint64_t sub_1C02E1AC0()
{
  uint64_t result = type metadata accessor for FormatOption();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t FormatCompilerSlotDefinition.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerSlotDefinition.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerSlotDefinition.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerSlotDefinition.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatCompilerSlotDefinition.description.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerSlotDefinition.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerSlotDefinition.properties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*FormatCompilerSlotDefinition.properties.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerSlotDefinition.transforms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerSlotDefinition.transforms.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatCompilerSlotDefinition.transforms.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerSlotDefinition.count.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t FormatCompilerSlotDefinition.count.setter(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

uint64_t (*FormatCompilerSlotDefinition.count.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerSlotDefinition.items.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatCompilerSlotDefinition(0);
  return sub_1C02E1DB0(v1 + *(int *)(v3 + 40), a1, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
}

uint64_t FormatCompilerSlotDefinition.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatCompilerSlotDefinition(0);
  return sub_1C02E1DB0(v1 + *(int *)(v3 + 44), a1, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
}

uint64_t sub_1C02E1DB0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFFE2D28(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C02E1E24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = a1[1];
  uint64_t v11 = *a1;
  uint64_t v12 = a2 + *(int *)(type metadata accessor for FormatCompilingSlotDefinition(0) + 20);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C02E75B8(v13, a3);
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *a4 = v5;
  }
  else
  {
    uint64_t v16 = v14;
    swift_release();
    sub_1C02E1F94((uint64_t)a1, a2, a3, v22);
    uint64_t v17 = v22[0];
    uint64_t v18 = v22[1];
    uint64_t v19 = v12 + *(int *)(type metadata accessor for FormatCompilerSlotDefinitionItemSet() + 24);
    uint64_t v20 = type metadata accessor for FormatSlotDefinitionItemSet();
    uint64_t result = sub_1C02E1DB0(v19, (uint64_t)a5 + *(int *)(v20 + 36), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    *a5 = v11;
    a5[1] = v10;
    a5[2] = v16;
    a5[3] = v17;
    a5[4] = v18;
  }
  return result;
}

void sub_1C02E1F94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v23 - v10;
  uint64_t v12 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 24)) {
    goto LABEL_4;
  }
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = a2 + *(int *)(type metadata accessor for FormatCompilingSlotDefinition(0) + 20);
  uint64_t v18 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  sub_1C02E1DB0(v17 + *(int *)(v18 + 20), (uint64_t)v11, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1BFE304E0((uint64_t)v11, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
LABEL_4:
    *a4 = 0;
    a4[1] = 0;
    return;
  }
  sub_1C02E788C((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  swift_retain();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C02E75B8(v19, a3);
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_release();
  if (v4)
  {
    sub_1C02E427C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  }
  else
  {
    MEMORY[0x1F4188790](v21);
    v23[-2] = v15;
    v23[-1] = a3;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C0183C68((void (*)(uint64_t, uint64_t *))sub_1C02E77AC, (uint64_t)&v23[-4], v16);
    swift_bridgeObjectRelease();
    sub_1C02E427C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    *a4 = v20;
    a4[1] = v22;
  }
}

uint64_t sub_1C02E2294@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = a1[1];
  uint64_t v11 = *a1;
  if (*(void *)(a2 + 8)) {
    uint64_t v12 = *(void *)(a2 + 8);
  }
  else {
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C02E75B8(v12, a3);
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *a4 = v5;
  }
  else
  {
    swift_release();
    uint64_t v15 = type metadata accessor for FormatSlotDefinitionItemSet();
    uint64_t result = sub_1C02E1DB0((uint64_t)a1 + *(int *)(v15 + 36), (uint64_t)a5 + *(int *)(v15 + 36), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    *a5 = v11;
    a5[1] = v10;
    a5[2] = v13;
    a5[3] = 0;
    a5[4] = 0;
  }
  return result;
}

BOOL _s8NewsFeed28FormatCompilerSlotDefinitionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v78 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v74 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C02E77CC(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v76 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v70 - v8;
  sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, v6);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v79 = (uint64_t)&v70 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v77 = (uint64_t)&v70 - v16;
  uint64_t v17 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  uint64_t v80 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v75 = (uint64_t *)((char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C02E77CC(0, &qword_1EA1995A0, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v81 = (uint64_t)&v70 - v21;
  sub_1BFFE2D28(0, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (uint64_t *)((char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v70 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v70 - v29;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v31 = sub_1C1520A9C(), result = 0, (v31 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (char v33 = sub_1C1520A9C(), result = 0, (v33 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5] || (char v34 = sub_1C1520A9C(), result = 0, (v34 & 1) != 0))
      {
        uint64_t v71 = v12;
        uint64_t v72 = v4;
        uint64_t v73 = v9;
        uint64_t v35 = a1[6];
        uint64_t v36 = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v37 = sub_1C00DFA40(v35, v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v37 & 1) == 0) {
          return 0;
        }
        uint64_t v38 = a1[7];
        uint64_t v39 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v40 = sub_1C00DFA94(v38, v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v40 & 1) == 0 || a1[8] != a2[8]) {
          return 0;
        }
        uint64_t v41 = type metadata accessor for FormatCompilerSlotDefinition(0);
        sub_1C02E1DB0((uint64_t)a1 + *(int *)(v41 + 40), (uint64_t)v30, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
        uint64_t v70 = v41;
        sub_1C02E1DB0((uint64_t)a2 + *(int *)(v41 + 40), (uint64_t)v27, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
        uint64_t v42 = v81;
        uint64_t v43 = v81 + *(int *)(v20 + 48);
        sub_1C02E1DB0((uint64_t)v30, v81, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
        sub_1C02E1DB0((uint64_t)v27, v43, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
        id v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
        if (v44(v42, 1, v17) == 1)
        {
          sub_1BFE304E0((uint64_t)v27, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
          sub_1BFE304E0((uint64_t)v30, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
          int v45 = v44(v43, 1, v17);
          uint64_t v46 = (uint64_t)v73;
          if (v45 == 1)
          {
            sub_1BFE304E0(v81, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
LABEL_20:
            uint64_t v55 = v70;
            objc_super v56 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            uint64_t v57 = v77;
            sub_1C02E1DB0((uint64_t)a1 + *(int *)(v70 + 44), v77, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            uint64_t v58 = v79;
            sub_1C02E1DB0((uint64_t)a2 + *(int *)(v55 + 44), v79, (unint64_t *)&qword_1EB884FE0, v56);
            uint64_t v59 = v46 + *(int *)(v76 + 48);
            sub_1C02E1DB0(v57, v46, (unint64_t *)&qword_1EB884FE0, v56);
            sub_1C02E1DB0(v58, v59, (unint64_t *)&qword_1EB884FE0, v56);
            uint64_t v60 = v78;
            uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
            uint64_t v62 = v72;
            if (v61(v46, 1, v72) == 1)
            {
              uint64_t v63 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE304E0(v58, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE304E0(v57, (unint64_t *)&qword_1EB884FE0, v63);
              if (v61(v59, 1, v62) == 1)
              {
                sub_1BFE304E0(v46, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                return 1;
              }
            }
            else
            {
              uint64_t v64 = (uint64_t)v71;
              sub_1C02E1DB0(v46, (uint64_t)v71, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              if (v61(v59, 1, v62) != 1)
              {
                uint64_t v66 = v74;
                (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v74, v59, v62);
                sub_1C02E2ED0(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                char v67 = sub_1C151E5CC();
                uint64_t v68 = *(void (**)(char *, uint64_t))(v60 + 8);
                v68(v66, v62);
                char v69 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFE304E0(v79, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFE304E0(v57, (unint64_t *)&qword_1EB884FE0, v69);
                v68((char *)v64, v62);
                sub_1BFE304E0(v46, (unint64_t *)&qword_1EB884FE0, v69);
                return (v67 & 1) != 0;
              }
              uint64_t v65 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE304E0(v79, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE304E0(v57, (unint64_t *)&qword_1EB884FE0, v65);
              (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v64, v62);
            }
            uint64_t v49 = (unint64_t *)&qword_1EB884FE8;
            uint64_t v50 = (unint64_t *)&qword_1EB884FE0;
            uint64_t v51 = (uint64_t (*)())MEMORY[0x1E4FAAFC8];
            uint64_t v52 = v46;
            goto LABEL_26;
          }
        }
        else
        {
          sub_1C02E1DB0(v42, (uint64_t)v24, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
          int v47 = v44(v43, 1, v17);
          uint64_t v48 = (uint64_t)v73;
          if (v47 != 1)
          {
            uint64_t v53 = v43;
            uint64_t v54 = v75;
            sub_1C02E788C(v53, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
            LODWORD(v80) = _s8NewsFeed35FormatCompilerSlotDefinitionItemSetV2eeoiySbAC_ACtFZ_0(v24, v54);
            sub_1C02E427C((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
            sub_1BFE304E0((uint64_t)v27, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
            sub_1BFE304E0((uint64_t)v30, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
            sub_1C02E427C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
            sub_1BFE304E0(v42, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
            uint64_t v46 = v48;
            if ((v80 & 1) == 0) {
              return 0;
            }
            goto LABEL_20;
          }
          sub_1BFE304E0((uint64_t)v27, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
          sub_1BFE304E0((uint64_t)v30, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
          sub_1C02E427C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
        }
        uint64_t v49 = &qword_1EA1995A0;
        uint64_t v50 = &qword_1EB88EEA0;
        uint64_t v51 = type metadata accessor for FormatCompilerSlotDefinitionItemSet;
        uint64_t v52 = v81;
LABEL_26:
        sub_1C02E7830(v52, v49, v50, (void (*)(uint64_t))v51);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C02E2DCC(uint64_t a1)
{
  uint64_t result = sub_1C02E2ED0(&qword_1EA199590, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinition);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C02E2E24(void *a1)
{
  a1[1] = sub_1C02E2ED0(&qword_1EB878C48, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinition);
  a1[2] = sub_1C02E2ED0(&qword_1EB870E30, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinition);
  uint64_t result = sub_1C02E2ED0(&qword_1EA199598, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinition);
  a1[3] = result;
  return result;
}

uint64_t sub_1C02E2ED0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C02E2F18@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02E2F24(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1C02E2F68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02E2F74(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 48) = v3;
  return result;
}

uint64_t sub_1C02E2FB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02E2FC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1C02E3008@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 64);
  return result;
}

void *sub_1C02E3014(void *result, uint64_t a2)
{
  *(void *)(a2 + 64) = *result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatCompilerSlotDefinition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v18 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[6];
    uint64_t v9 = a2[8];
    a1[7] = a2[7];
    a1[8] = v9;
    uint64_t v10 = *(int *)(a3 + 40);
    __dst = (uint64_t *)((char *)a1 + v10);
    uint64_t v11 = (uint64_t *)((char *)a2 + v10);
    a1[6] = v8;
    uint64_t v12 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BFFE2D28(0, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v52 = v13;
      uint64_t v53 = v11;
      void *__dst = *v11;
      uint64_t v19 = v12;
      uint64_t v20 = *(int *)(v12 + 20);
      uint64_t v21 = (void *)((char *)__dst + v20);
      uint64_t v22 = (void *)((char *)v15 + v20);
      uint64_t v23 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
        memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
        uint64_t v27 = __dst;
        uint64_t v28 = v12;
        uint64_t v29 = v52;
        uint64_t v30 = v53;
      }
      else
      {
        uint64_t v31 = v22[1];
        *uint64_t v21 = *v22;
        v21[1] = v31;
        uint64_t v32 = *(int *)(v23 + 24);
        uint64_t v51 = (char *)v21 + v32;
        char v33 = (char *)v22 + v32;
        uint64_t v34 = sub_1C1518CDC();
        uint64_t v50 = *(void *)(v34 - 8);
        uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v35(v33, 1, v34))
        {
          sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v51, v33, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v51, v33, v34);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v34);
        }
        uint64_t v27 = __dst;
        uint64_t v28 = v19;
        uint64_t v29 = v52;
        uint64_t v30 = v53;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      uint64_t v37 = *(int *)(v28 + 24);
      uint64_t v38 = (char *)v27 + v37;
      uint64_t v39 = (char *)v30 + v37;
      uint64_t v40 = sub_1C1518CDC();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v27, 0, 1, v28);
    }
    uint64_t v18 = a1;
    uint64_t v43 = *(int *)(a3 + 44);
    id v44 = (char *)a1 + v43;
    int v45 = (char *)a2 + v43;
    uint64_t v46 = sub_1C1518CDC();
    uint64_t v47 = *(void *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
  }
  return v18;
}

void *assignWithCopy for FormatCompilerSlotDefinition(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1C02E427C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      goto LABEL_7;
    }
    *uint64_t v7 = *v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = *(int *)(v9 + 20);
    uint64_t v25 = (void *)((char *)v7 + v24);
    char v95 = v8;
    uint64_t v26 = (char *)v8 + v24;
    uint64_t v27 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
    uint64_t v87 = *(void *)(v27 - 8);
    uint64_t v90 = v25;
    uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
    uint64_t v29 = (char *)v25;
    uint64_t v30 = v27;
    int v31 = v28(v29, 1, v27);
    int v32 = v28(v26, 1, v30);
    uint64_t v93 = a3;
    if (v31)
    {
      if (v32)
      {
        sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
        size_t v34 = *(void *)(*(void *)(v33 - 8) + 64);
        uint64_t v35 = v90;
LABEL_15:
        uint64_t v42 = v26;
LABEL_16:
        memcpy(v35, v42, v34);
        goto LABEL_30;
      }
      *uint64_t v90 = *(void *)v26;
      v90[1] = *((void *)v26 + 1);
      uint64_t v43 = *(int *)(v30 + 24);
      __dsta = (char *)v90 + v43;
      id v44 = &v26[v43];
      uint64_t v45 = sub_1C1518CDC();
      uint64_t v81 = *(void *)(v45 - 8);
      uint64_t v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v82(v44, 1, v45))
      {
        sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(__dsta, v44, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(__dsta, v44, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(__dsta, 0, 1, v45);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v87 + 56))(v90, 0, 1, v30);
    }
    else
    {
      if (v32)
      {
        sub_1C02E427C((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
        sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
        size_t v34 = *(void *)(*(void *)(v41 - 8) + 64);
        uint64_t v35 = v90;
        goto LABEL_15;
      }
      *uint64_t v90 = *(void *)v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v90[1] = *((void *)v26 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v53 = *(int *)(v30 + 24);
      uint64_t v54 = (char *)v90 + v53;
      uint64_t v55 = &v26[v53];
      uint64_t v56 = sub_1C1518CDC();
      __dstb = *(void **)(v56 - 8);
      uint64_t v57 = (uint64_t (*)(char *, uint64_t, uint64_t))__dstb[6];
      char v91 = v54;
      LODWORD(v54) = v57(v54, 1, v56);
      int v58 = v57(v55, 1, v56);
      if (v54)
      {
        if (v58)
        {
          sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          size_t v34 = *(void *)(*(void *)(v59 - 8) + 64);
          uint64_t v42 = v55;
          uint64_t v35 = v91;
          goto LABEL_16;
        }
        ((void (*)(void *, char *, uint64_t))__dstb[2])(v91, v55, v56);
        ((void (*)(void *, void, uint64_t, uint64_t))__dstb[7])(v91, 0, 1, v56);
      }
      else
      {
        if (v58)
        {
          ((void (*)(void *, uint64_t))__dstb[1])(v91, v56);
          sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          size_t v34 = *(void *)(*(void *)(v79 - 8) + 64);
          uint64_t v35 = v91;
          uint64_t v42 = v55;
          goto LABEL_16;
        }
        ((void (*)(void *, char *, uint64_t))__dstb[3])(v91, v55, v56);
      }
    }
LABEL_30:
    uint64_t v60 = *(int *)(v9 + 24);
    uint64_t v61 = (char *)v7 + v60;
    uint64_t v62 = (char *)v95 + v60;
    uint64_t v63 = sub_1C1518CDC();
    uint64_t v64 = *(void *)(v63 - 8);
    uint64_t v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
    int v66 = v65(v61, 1, v63);
    int v67 = v65(v62, 1, v63);
    if (v66)
    {
      if (!v67)
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_36:
        a3 = v93;
        goto LABEL_37;
      }
    }
    else
    {
      if (!v67)
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v61, v62, v63);
        goto LABEL_36;
      }
      (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    }
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v61, v62, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_36;
  }
  if (v13)
  {
LABEL_7:
    sub_1BFFE2D28(0, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_37;
  }
  uint64_t v89 = v7;
  uint64_t v92 = a3;
  *uint64_t v7 = *v8;
  uint64_t v14 = *(int *)(v9 + 20);
  uint64_t v15 = (void *)((char *)v7 + v14);
  uint64_t v94 = v8;
  uint64_t v16 = (void *)((char *)v8 + v14);
  uint64_t v17 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v20 = v17;
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v20))
  {
    sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    uint64_t v22 = v94;
  }
  else
  {
    *uint64_t v15 = *v16;
    v15[1] = v16[1];
    uint64_t v83 = v15;
    uint64_t v36 = *(int *)(v20 + 24);
    __dst = (char *)v15 + v36;
    uint64_t v88 = v18;
    uint64_t v37 = (char *)v16 + v36;
    uint64_t v38 = sub_1C1518CDC();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v80(v37, 1, v38))
    {
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(__dst, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
    }
    uint64_t v22 = v94;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v83, 0, 1, v20);
  }
  uint64_t v47 = *(int *)(v9 + 24);
  uint64_t v48 = (char *)v89 + v47;
  uint64_t v49 = (char *)v22 + v47;
  uint64_t v50 = sub_1C1518CDC();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  a3 = v92;
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v89, 0, 1, v9);
LABEL_37:
  uint64_t v69 = *(int *)(a3 + 44);
  uint64_t v70 = (char *)a1 + v69;
  uint64_t v71 = (char *)a2 + v69;
  uint64_t v72 = sub_1C1518CDC();
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
  int v75 = v74(v70, 1, v72);
  int v76 = v74(v71, 1, v72);
  if (!v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 24))(v70, v71, v72);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v72);
    goto LABEL_42;
  }
  if (v76)
  {
LABEL_42:
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v70, v71, *(void *)(*(void *)(v77 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  return a1;
}

uint64_t sub_1C02E427C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for FormatCompilerSlotDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BFFE2D28(0, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v42 = v3;
    *uint64_t v9 = *v10;
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = (void *)((char *)v9 + v14);
    uint64_t v16 = (void *)((char *)v10 + v14);
    uint64_t v17 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v40 = v18;
      uint64_t v41 = v15;
      uint64_t v20 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v20;
      uint64_t v21 = *(int *)(v17 + 24);
      uint64_t v39 = (char *)v15 + v21;
      uint64_t v22 = (char *)v16 + v21;
      uint64_t v23 = sub_1C1518CDC();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v39, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v39, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v39, 0, 1, v23);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v17);
    }
    uint64_t v26 = *(int *)(v11 + 24);
    uint64_t v27 = (char *)v9 + v26;
    uint64_t v28 = (char *)v10 + v26;
    uint64_t v29 = sub_1C1518CDC();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v3 = v42;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v32 = *(int *)(v3 + 44);
  uint64_t v33 = (void *)(a1 + v32);
  size_t v34 = (const void *)(a2 + v32);
  uint64_t v35 = sub_1C1518CDC();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v36 + 32))(v33, v34, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  return a1;
}

void *assignWithTake for FormatCompilerSlotDefinition(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_1C02E427C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      goto LABEL_7;
    }
    uint64_t v92 = a3;
    *(void *)uint64_t v10 = *(void *)v11;
    swift_bridgeObjectRelease();
    uint64_t v27 = *(int *)(v12 + 20);
    uint64_t v28 = &v10[v27];
    uint64_t v29 = &v11[v27];
    uint64_t v30 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
    __src = *(void **)(v30 - 8);
    uint64_t v88 = v28;
    uint64_t v31 = (uint64_t (*)(char *, uint64_t, uint64_t))__src[6];
    LODWORD(v28) = v31(v28, 1, v30);
    int v32 = v31(v29, 1, v30);
    if (v28)
    {
      if (!v32)
      {
        uint64_t v42 = *((void *)v29 + 1);
        *uint64_t v88 = *(void *)v29;
        v88[1] = v42;
        uint64_t v43 = *(int *)(v30 + 24);
        uint64_t v84 = (char *)v88 + v43;
        id v44 = &v29[v43];
        uint64_t v45 = sub_1C1518CDC();
        uint64_t v46 = *(void *)(v45 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
        {
          sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v84, v44, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v84, v44, v45);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v84, 0, 1, v45);
        }
        a3 = v92;
        ((void (*)(void *, void, uint64_t, uint64_t))__src[7])(v88, 0, 1, v30);
        goto LABEL_43;
      }
      sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      size_t v34 = *(void *)(*(void *)(v33 - 8) + 64);
      uint64_t v35 = v88;
    }
    else
    {
      if (!v32)
      {
        *uint64_t v88 = *(void *)v29;
        swift_bridgeObjectRelease();
        v88[1] = *((void *)v29 + 1);
        swift_bridgeObjectRelease();
        uint64_t v64 = *(int *)(v30 + 24);
        uint64_t v65 = (char *)v88 + v64;
        int v66 = &v29[v64];
        uint64_t v67 = sub_1C1518CDC();
        uint64_t v86 = *(void *)(v67 - 8);
        uint64_t v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
        uint64_t v90 = v65;
        LODWORD(v65) = v68(v65, 1, v67);
        int v69 = v68(v66, 1, v67);
        if (v65)
        {
          a3 = v92;
          if (!v69)
          {
            (*(void (**)(void *, char *, uint64_t))(v86 + 32))(v90, v66, v67);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v90, 0, 1, v67);
            goto LABEL_43;
          }
          sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          size_t v71 = *(void *)(*(void *)(v70 - 8) + 64);
          uint64_t v72 = v90;
        }
        else
        {
          a3 = v92;
          if (!v69)
          {
            (*(void (**)(void *, char *, uint64_t))(v86 + 40))(v90, v66, v67);
            goto LABEL_43;
          }
          (*(void (**)(void *, uint64_t))(v86 + 8))(v90, v67);
          sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          size_t v71 = *(void *)(*(void *)(v73 - 8) + 64);
          uint64_t v72 = v90;
        }
        memcpy(v72, v66, v71);
LABEL_43:
        uint64_t v74 = *(int *)(v12 + 24);
        int v75 = &v10[v74];
        int v76 = &v11[v74];
        uint64_t v77 = sub_1C1518CDC();
        uint64_t v78 = *(void *)(v77 - 8);
        uint64_t v79 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48);
        int v80 = v79(v75, 1, v77);
        int v81 = v79(v76, 1, v77);
        if (v80)
        {
          if (!v81)
          {
            (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v75, v76, v77);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
            goto LABEL_25;
          }
        }
        else
        {
          if (!v81)
          {
            (*(void (**)(char *, char *, uint64_t))(v78 + 40))(v75, v76, v77);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v78 + 8))(v75, v77);
        }
        sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v24 = *(void *)(*(void *)(v82 - 8) + 64);
        uint64_t v25 = v75;
        uint64_t v26 = v76;
LABEL_8:
        memcpy(v25, v26, v24);
        goto LABEL_25;
      }
      sub_1C02E427C((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      size_t v34 = *(void *)(*(void *)(v41 - 8) + 64);
      uint64_t v35 = v88;
    }
    memcpy(v35, v29, v34);
    a3 = v92;
    goto LABEL_43;
  }
  if (v16)
  {
LABEL_7:
    sub_1BFFE2D28(0, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    size_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
    uint64_t v25 = v10;
    uint64_t v26 = v11;
    goto LABEL_8;
  }
  uint64_t v91 = a3;
  *(void *)uint64_t v10 = *(void *)v11;
  uint64_t v17 = *(int *)(v12 + 20);
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  uint64_t v20 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    a3 = v91;
  }
  else
  {
    uint64_t v36 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v36;
    uint64_t v37 = *(int *)(v20 + 24);
    uint64_t v85 = v18;
    uint64_t v89 = &v18[v37];
    uint64_t v38 = &v19[v37];
    uint64_t v39 = sub_1C1518CDC();
    uint64_t v83 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v38, 1, v39))
    {
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v89, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v89, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v89, 0, 1, v39);
    }
    a3 = v91;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v85, 0, 1, v20);
  }
  uint64_t v48 = *(int *)(v12 + 24);
  uint64_t v49 = &v10[v48];
  uint64_t v50 = &v11[v48];
  uint64_t v51 = sub_1C1518CDC();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_25:
  uint64_t v54 = *(int *)(a3 + 44);
  uint64_t v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  uint64_t v57 = sub_1C1518CDC();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  int v60 = v59(v55, 1, v57);
  int v61 = v59(v56, 1, v57);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v55, v56, v57);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
    goto LABEL_30;
  }
  if (v61)
  {
LABEL_30:
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v55, v56, *(void *)(*(void *)(v62 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  return a1;
}

uint64_t sub_1C02E53A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFFE2D28(0, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 40);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C02E5504(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFFE2D28(0, &qword_1EB88EEA0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 40);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t *sub_1C02E5668(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v43 = a2[7];
    a1[6] = a2[6];
    a1[7] = v43;
    a1[8] = a2[8];
    uint64_t v9 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
    __dst = (char *)v4 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1C1518CDC();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v44 = v13;
    uint64_t v41 = v12;
    uint64_t v42 = v11;
    if (v13(v10, 1, v11))
    {
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v40 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
    uint64_t v19 = *(int *)(v40 + 20);
    uint64_t v20 = &v17[v19];
    uint64_t v21 = &v18[v19];
    uint64_t v22 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
    uint64_t v23 = *(void *)(v22 - 8);
    size_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
      uint64_t v26 = v41;
    }
    else
    {
      uint64_t v27 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v27;
      uint64_t v28 = *(int *)(v22 + 24);
      uint64_t v29 = &v20[v28];
      uint64_t v30 = &v21[v28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = v42;
      if (v44(v30, 1, v42))
      {
        sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        uint64_t v26 = v41;
      }
      else
      {
        int v32 = v30;
        uint64_t v26 = v41;
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v29, v32, v42);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v29, 0, 1, v42);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v33 = *(int *)(v40 + 24);
    size_t v34 = &v17[v33];
    uint64_t v35 = &v18[v33];
    if (v44(&v18[v33], 1, v11))
    {
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v34, v35, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v34, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_1C02E5B0C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  uint64_t v5 = sub_1C1518CDC();
  uint64_t v15 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  uint64_t v9 = v7 + *(int *)(v8 + 20);
  uint64_t v10 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 24);
    if (!v6(v11, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v11, v5);
    }
  }
  uint64_t v12 = v7 + *(int *)(v8 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v12, 1, v5);
  if (!result)
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    return v14(v12, v5);
  }
  return result;
}

void *sub_1C02E5D28(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  a1[8] = a2[8];
  uint64_t v9 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  uint64_t v38 = a1;
  __dst = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  uint64_t v11 = sub_1C1518CDC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v40 = v13;
  uint64_t v39 = v11;
  if (v13(v10, 1, v11))
  {
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)v38 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)v38 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v37 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  uint64_t v18 = *(int *)(v37 + 20);
  uint64_t v19 = &v16[v18];
  uint64_t v20 = &v17[v18];
  uint64_t v21 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v25;
    uint64_t v26 = *(int *)(v21 + 24);
    uint64_t v27 = &v19[v26];
    uint64_t v28 = &v20[v26];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = v39;
    if (v40(v28, 1, v39))
    {
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v27, v28, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v39);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v30 = *(int *)(v37 + 24);
  uint64_t v31 = &v16[v30];
  int v32 = &v17[v30];
  if (v40(&v17[v30], 1, v11))
  {
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v31, v32, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v31, 0, 1, v11);
  }
  return v38;
}

void *sub_1C02E6178(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  uint64_t v48 = v11;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  uint64_t v46 = v16;
  uint64_t v18 = *(int *)(v45 + 20);
  uint64_t v19 = &v16[v18];
  uint64_t v47 = v17;
  uint64_t v20 = &v17[v18];
  uint64_t v21 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v19 + 1) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v32 = *(int *)(v21 + 24);
      uint64_t v33 = &v19[v32];
      size_t v34 = &v20[v32];
      uint64_t v29 = v48;
      int v35 = v48(v33, 1, v9);
      int v36 = v48(v34, 1, v9);
      if (v35)
      {
        if (!v36)
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v33, v34, v9);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v33, 0, 1, v9);
          goto LABEL_23;
        }
      }
      else
      {
        if (!v36)
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v33, v34, v9);
          goto LABEL_23;
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v33, v9);
      }
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
      goto LABEL_23;
    }
    sub_1C02E427C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
LABEL_13:
    sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    memcpy(v19, v20, *(void *)(*(void *)(v31 - 8) + 64));
    uint64_t v29 = v48;
    goto LABEL_23;
  }
  if (v25) {
    goto LABEL_13;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  uint64_t v26 = *(int *)(v21 + 24);
  uint64_t v27 = &v19[v26];
  uint64_t v28 = &v20[v26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v48;
  if (v48(v28, 1, v9))
  {
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_23:
  uint64_t v38 = *(int *)(v45 + 24);
  uint64_t v39 = &v46[v38];
  uint64_t v40 = &v47[v38];
  int v41 = v29(&v46[v38], 1, v9);
  int v42 = v29(v40, 1, v9);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v39, v40, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v39, v9);
    goto LABEL_28;
  }
  if (v42)
  {
LABEL_28:
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  return a1;
}

uint64_t sub_1C02E6860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1C1518CDC();
  uint64_t v12 = *(void *)(v11 - 8);
  int v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v34 = v12;
  if (v35(v10, 1, v11))
  {
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  uint64_t v18 = *(int *)(v17 + 20);
  uint64_t v19 = (void *)(v15 + v18);
  uint64_t v20 = (void *)(v16 + v18);
  uint64_t v21 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v24;
    uint64_t v25 = *(int *)(v21 + 24);
    __dst = (char *)v19 + v25;
    uint64_t v26 = (char *)v20 + v25;
    if (v35(v26, 1, v11))
    {
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(__dst, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(__dst, v26, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v11);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v28 = *(int *)(v17 + 24);
  uint64_t v29 = (void *)(v15 + v28);
  uint64_t v30 = (const void *)(v16 + v28);
  if (v35((const void *)(v16 + v28), 1, v11))
  {
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 32))(v29, v30, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v29, 0, 1, v11);
  }
  return a1;
}

void *sub_1C02E6C34(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C1518CDC();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  uint64_t v53 = v14;
  int v16 = v14(v11, 1, v12);
  uint64_t v52 = v13;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (void *)((char *)a2 + v18);
  *(void *)((char *)a1 + v18) = *v20;
  swift_bridgeObjectRelease();
  uint64_t v49 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  uint64_t v50 = v19;
  uint64_t v21 = *(int *)(v49 + 20);
  uint64_t v22 = &v19[v21];
  uint64_t v51 = v20;
  uint64_t v23 = (char *)v20 + v21;
  uint64_t v24 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *(void *)uint64_t v22 = *(void *)v23;
      swift_bridgeObjectRelease();
      *((void *)v22 + 1) = *((void *)v23 + 1);
      swift_bridgeObjectRelease();
      uint64_t v36 = *(int *)(v24 + 24);
      uint64_t v37 = &v22[v36];
      uint64_t v38 = &v23[v36];
      int v39 = v53(v37, 1, v12);
      int v40 = v53(v38, 1, v12);
      if (v39)
      {
        uint64_t v33 = v52;
        if (!v40)
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v37, v38, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v37, 0, 1, v12);
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v33 = v52;
        if (!v40)
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 40))(v37, v38, v12);
          goto LABEL_23;
        }
        (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v12);
      }
      sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
      goto LABEL_23;
    }
    sub_1C02E427C((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
LABEL_13:
    sub_1BFFE2D28(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    memcpy(v22, v23, *(void *)(*(void *)(v35 - 8) + 64));
    uint64_t v33 = v52;
    goto LABEL_23;
  }
  if (v28) {
    goto LABEL_13;
  }
  uint64_t v29 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v29;
  uint64_t v30 = *(int *)(v24 + 24);
  uint64_t v31 = &v22[v30];
  uint64_t v32 = &v23[v30];
  uint64_t v33 = v52;
  if (v53(v32, 1, v12))
  {
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v31, v32, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v31, 0, 1, v12);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_23:
  uint64_t v42 = *(int *)(v49 + 24);
  uint64_t v43 = &v50[v42];
  id v44 = (char *)v51 + v42;
  int v45 = v53(&v50[v42], 1, v12);
  int v46 = v53(v44, 1, v12);
  if (!v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v43, v44, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v43, v12);
    goto LABEL_28;
  }
  if (v46)
  {
LABEL_28:
    sub_1BFFE2D28(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v43, v44, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v43, 0, 1, v12);
  return a1;
}

uint64_t sub_1C02E72AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02E72C0);
}

uint64_t sub_1C02E72C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatSlotDefinition();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1C02E73B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02E73CC);
}

uint64_t sub_1C02E73CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FormatSlotDefinition();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for FormatCompilingSlotDefinition(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB893370);
}

uint64_t sub_1C02E74F0()
{
  uint64_t result = type metadata accessor for FormatSlotDefinition();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C02E75B8(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for FormatPropertyDefinition(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C05F6FC0(0, v8, 0);
    uint64_t v9 = v17;
    uint64_t v10 = *(void *)(type metadata accessor for FormatCompilerProperty(0) - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v15 = *(void *)(v10 + 72);
    while (1)
    {
      sub_1C131CDA8(v16, (uint64_t)v7);
      if (v2) {
        break;
      }
      uint64_t v17 = v9;
      unint64_t v13 = *(void *)(v9 + 16);
      unint64_t v12 = *(void *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C05F6FC0(v12 > 1, v13 + 1, 1);
        uint64_t v9 = v17;
      }
      *(void *)(v9 + 16) = v13 + 1;
      sub_1C02E788C((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, type metadata accessor for FormatPropertyDefinition);
      v11 += v15;
      if (!--v8) {
        return v9;
      }
    }
    swift_release();
  }
  return v9;
}

uint64_t sub_1C02E77AC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1C02E2294(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), a2, a3);
}

void sub_1C02E77CC(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1BFFE2D28(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C02E7830(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C02E77CC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C02E788C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C02E78F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1BFF993A8((_OWORD *)a1, v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1BFFB4A24(v10, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC840] + 8;
    sub_1BFEFD990(a1, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
    sub_1C035332C(a2, a3, v10);
    swift_bridgeObjectRelease();
    return sub_1BFEFD990((uint64_t)v10, (unint64_t *)&qword_1EB87A940, v8);
  }
}

uint64_t sub_1C02E79E0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1BFF993A8((_OWORD *)a1, v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C10657A4(v10, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v9;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1C152039C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    uint64_t v7 = MEMORY[0x1E4FBC840] + 8;
    sub_1BFEFD990(a1, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
    sub_1C0353430(a2, v10);
    uint64_t v8 = sub_1C152039C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a2, v8);
    return sub_1BFEFD990((uint64_t)v10, (unint64_t *)&qword_1EB87A940, v7);
  }
}

uint64_t sub_1C02E7B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1BFEFD268(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v12 + 48))(a1, 1, v11, v13) == 1)
  {
    uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1BFE546A8(a1, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    sub_1C0353644(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BFE546A8((uint64_t)v10, (unint64_t *)&qword_1EB871180, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v15, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1C1065D40((uint64_t)v15, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C02E7D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C1067288(a1, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v12;
  }
  else
  {
    uint64_t result = sub_1C107A920(a2);
    if ((v8 & 1) == 0) {
      return result;
    }
    uint64_t v9 = result;
    int v10 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v2;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!v10)
    {
      sub_1C106E264();
      uint64_t v11 = v13;
    }
    sub_1C091DFB8(v9, v11);
    *uint64_t v3 = v11;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02E7E20(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t result = sub_1C107A920(a3);
    if ((v9 & 1) == 0) {
      return result;
    }
    unint64_t v10 = result;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v14 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C106E0D8();
      uint64_t v12 = v14;
    }
    sub_1C091DE20(v10, v12);
    uint64_t *v4 = v12;
  }
  else
  {
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C1067158(a1, a3, v7);
    *uint64_t v3 = v13;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02E7EF0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t result = sub_1C107A920(a3);
    if ((v9 & 1) == 0) {
      return result;
    }
    unint64_t v10 = result;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v14 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C106DF4C();
      uint64_t v12 = v14;
    }
    sub_1C091DE20(v10, v12);
    uint64_t *v4 = v12;
  }
  else
  {
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C106702C(a3, v7, *(double *)&a1);
    *uint64_t v3 = v13;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02E7FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1BFEFD268(0, &qword_1EA197258, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataOption, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for FormatDerivedDataOption();
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BFE546A8(a1, &qword_1EA197258, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
    sub_1C0353B44(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BFE546A8((uint64_t)v10, &qword_1EA197258, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  }
  else
  {
    sub_1C02F5C80(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1C10672E8((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C02E81E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1BFEFD268(0, &qword_1EA199748, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for FormatDerivedDataBindingSlotResult();
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BFE546A8(a1, &qword_1EA199748, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
    sub_1C0353D5C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BFE546A8((uint64_t)v10, &qword_1EA199748, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
  }
  else
  {
    sub_1C02F5C80(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBindingSlotResult);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1C1067A5C((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C02E8400(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1BFF993A8((_OWORD *)a1, v8);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C1067E58(v8, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v7;
    swift_bridgeObjectRelease();
    return sub_1C02CD3DC(a2);
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC840] + 8;
    sub_1BFEFD990(a1, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
    sub_1C0353E90(a2, v8);
    sub_1C02CD3DC(a2);
    return sub_1BFEFD990((uint64_t)v8, (unint64_t *)&qword_1EB87A940, v6);
  }
}

uint64_t sub_1C02E84DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1BFEFD268(0, (unint64_t *)&qword_1EB87C618, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for SharedItem();
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BFE546A8(a1, (unint64_t *)&qword_1EB87C618, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem);
    sub_1C035425C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BFE546A8((uint64_t)v10, (unint64_t *)&qword_1EB87C618, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem);
  }
  else
  {
    sub_1C02F5C80(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SharedItem);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1C1068558((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C02E86F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1BFEFD268(0, &qword_1EB8659E0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for SportsRoster();
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BFE546A8(a1, &qword_1EB8659E0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
    sub_1C0354358(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BFE546A8((uint64_t)v10, &qword_1EB8659E0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
  }
  else
  {
    sub_1C02F5C80(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SportsRoster);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1C1069188((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C02E8914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = MEMORY[0x1E4FBB718];
  sub_1C02F0A1C(a1, (uint64_t)v13, (uint64_t)&qword_1EA1A2580, (uint64_t)&type metadata for DebugFormatFileSource, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDE40);
  sub_1C02F0A1C((uint64_t)v13, (uint64_t)v16, (uint64_t)&qword_1EA1A2580, (uint64_t)&type metadata for DebugFormatFileSource, v8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDE40);
  sub_1C02F0A1C(a1, (uint64_t)v14, (uint64_t)&qword_1EA1A2580, (uint64_t)&type metadata for DebugFormatFileSource, v8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDE40);
  if (sub_1C0263AB8((uint64_t)v14) == 1)
  {
    sub_1C03543AC(a2, a3, v12);
    swift_bridgeObjectRelease();
    sub_1C02F0A1C((uint64_t)v12, (uint64_t)v15, (uint64_t)&qword_1EA1A2580, (uint64_t)&type metadata for DebugFormatFileSource, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDE40);
    return sub_1C02F6040((uint64_t)v15);
  }
  else
  {
    sub_1C02F0A1C((uint64_t)v16, (uint64_t)v12, (uint64_t)&qword_1EA1A2580, (uint64_t)&type metadata for DebugFormatFileSource, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDE40);
    v15[4] = v12[4];
    v15[5] = v12[5];
    v15[6] = v12[6];
    v15[7] = v12[7];
    v15[0] = v12[0];
    v15[1] = v12[1];
    v15[2] = v12[2];
    v15[3] = v12[3];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1C106991C(v15, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C02E8B20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7 = a4 & 1;
  if (*(void *)(a1 + 24))
  {
    sub_1BFF993A8((_OWORD *)a1, v12);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1C1069AB4(v12, a2, a3, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
    return sub_1C02F6038();
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC840] + 8;
    sub_1BFEFD990(a1, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
    sub_1C03544BC(a2, a3, v7, v12);
    sub_1C02F6038();
    return sub_1BFEFD990((uint64_t)v12, (unint64_t *)&qword_1EB87A940, v10);
  }
}

uint64_t sub_1C02E8C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1BFC773DC((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C1069C2C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C02F6130(a1);
    sub_1C03545D0(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1C02F6130((uint64_t)v9);
  }
}

uint64_t Dictionary<>.seedFormatCodingVersion(mode:)(uint64_t a1)
{
  uint64_t v65 = a1;
  uint64_t v1 = sub_1C151928C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v58 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v57 = (char *)&v50 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v56 = (char *)&v50 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v55 = (char *)&v50 - v9;
  uint64_t v64 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1F4188790](v64);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatVersionInfo(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFD268(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v54 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v53 = (char *)&v50 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v50 - v20;
  uint64_t v22 = sub_1C152039C();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v52 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v51 = (char *)&v50 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v50 - v28;
  sub_1C152038C();
  uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  uint64_t result = v63(v21, 1, v22);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  uint64_t v60 = v22;
  v59(v29, v21, v22);
  uint64_t v31 = v65;
  sub_1BFDCD3F4(v65, (uint64_t)v14, type metadata accessor for FormatVersioningMode);
  uint64_t v32 = &v14[*(int *)(v12 + 20)];
  uint64_t v61 = v2;
  uint64_t v62 = v1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v32, 1, 1, v1);
  *(void *)&v14[*(int *)(v12 + 24)] = MEMORY[0x1E4FBC860];
  sub_1BFEFD268(0, &qword_1EA1995A8, type metadata accessor for FormatVersionInfo, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
  uint64_t v34 = v33;
  uint64_t v35 = swift_allocObject();
  sub_1C02F5C80((uint64_t)v14, v35 + *(void *)(*(void *)v35 + 88), type metadata accessor for FormatVersionInfo);
  uint64_t v67 = v34;
  v66[0] = v35;
  sub_1C02E79E0((uint64_t)v66, (uint64_t)v29);
  sub_1BFDCD3F4(v31, (uint64_t)v11, type metadata accessor for FormatVersioningMode);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v37 = v61;
    uint64_t v36 = v62;
    uint64_t v38 = v55;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v55, v11, v62);
    int v45 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
    int v40 = v56;
    v45(v56, v38, v36);
    int v46 = v53;
    sub_1C152038C();
    uint64_t v47 = v60;
    uint64_t result = v63(v46, 1, v60);
    if (result != 1)
    {
      uint64_t v43 = (uint64_t)v51;
      v59(v51, v46, v47);
      uint64_t v67 = v36;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v66);
      v45((char *)boxed_opaque_existential_0, v40, v36);
      goto LABEL_8;
    }
LABEL_12:
    __break(1u);
    return result;
  }
  if (result != 1) {
    return result;
  }
  uint64_t v37 = v61;
  uint64_t v36 = v62;
  uint64_t v38 = v57;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v57, v11, v62);
  int v39 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  int v40 = v58;
  v39(v58, v38, v36);
  uint64_t v41 = v54;
  sub_1C152038C();
  uint64_t v42 = v60;
  uint64_t result = v63(v41, 1, v60);
  if (result == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v43 = (uint64_t)v52;
  v59(v52, v41, v42);
  uint64_t v67 = v36;
  id v44 = __swift_allocate_boxed_opaque_existential_0(v66);
  v39((char *)v44, v40, v36);
LABEL_8:
  sub_1C02E79E0((uint64_t)v66, v43);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v37 + 8);
  v49(v40, v36);
  return ((uint64_t (*)(char *, uint64_t))v49)(v38, v36);
}

uint64_t static CodingUserInfoKey.formatCodingVersionInfo.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFEFD268(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  sub_1C152038C();
  uint64_t v5 = sub_1C152039C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C02E9504(uint64_t a1, uint64_t *a2)
{
  sub_1BFEFD268(0, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - v5;
  sub_1BFEFC57C(a1, (uint64_t)&v8 - v5, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
  return Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v6, *a2);
}

void (*Dictionary<>.formatCodingVersionInfo.modify(uint64_t *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  *a1 = a2;
  sub_1BFEFD268(0, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo, MEMORY[0x1E4FBB718]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  a1[1] = (uint64_t)malloc(v5);
  uint64_t v6 = malloc(v5);
  a1[2] = (uint64_t)v6;
  Dictionary<>.formatCodingVersionInfo.getter(a2, (uint64_t)v6);
  return sub_1C02E9694;
}

void sub_1C02E9694(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)a1[1];
  uint64_t v3 = (void *)a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    sub_1BFEFC57C(a1[2], (uint64_t)v2, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
    Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v2, v4);
    sub_1BFE546A8((uint64_t)v3, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
  }
  else
  {
    Dictionary<>.formatCodingVersionInfo.setter(a1[2], v4);
  }
  free(v3);
  free(v2);
}

uint64_t sub_1C02E9744()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t sub_1C02E97F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement.Value(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDCD3F4(v2, (uint64_t)v6, type metadata accessor for FormatVersionRequirement.Value);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_1C151928C();
      uint64_t v9 = *(void *)(v8 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, 1, 1, v8);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    }
    else
    {
      sub_1BFF05D18();
      uint64_t v14 = &v6[*(int *)(v13 + 48)];
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_1C151928C();
      uint64_t v16 = *(void *)(v15 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v6, v15);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    }
  }
  else
  {
    uint64_t v11 = sub_1C151928C();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v6, v11);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
}

uint64_t sub_1C02E9A90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement.Value(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDCD3F4(v2, (uint64_t)v6, type metadata accessor for FormatVersionRequirement.Value);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      uint64_t v9 = &v6[*(int *)(v8 + 48)];
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *((void *)v9 + 1);
      sub_1C02F5DB4(0, &qword_1EA1996E8);
      uint64_t v13 = v12;
      uint64_t v14 = (void *)(a1 + *(int *)(v12 + 48));
      uint64_t v15 = sub_1C151928C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, v6, v15);
      void *v14 = v10;
      v14[1] = v11;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
    }
    else
    {
      sub_1BFF05D18();
      uint64_t v19 = &v6[*(int *)(v18 + 48)];
      uint64_t v20 = &v6[*(int *)(v18 + 64)];
      uint64_t v21 = *(void *)v20;
      uint64_t v22 = *((void *)v20 + 1);
      sub_1C02F5DB4(0, &qword_1EA1996E8);
      uint64_t v24 = v23;
      uint64_t v25 = (void *)(a1 + *(int *)(v23 + 48));
      uint64_t v26 = sub_1C151928C();
      uint64_t v27 = *(void *)(v26 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(a1, v19, v26);
      *uint64_t v25 = v21;
      v25[1] = v22;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a1, 0, 1, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v6, v26);
    }
  }
  else
  {
    sub_1C02F5DB4(0, &qword_1EA1996E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
    return sub_1BFDCD640((uint64_t)v6, type metadata accessor for FormatVersionRequirement.Value);
  }
}

uint64_t sub_1C02E9D7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151928C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v28 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v28 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v28 - v13;
  uint64_t v15 = type metadata accessor for FormatVersionRequirement.Value(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDCD3F4(v1, (uint64_t)v17, type metadata accessor for FormatVersionRequirement.Value);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      uint64_t v20 = *(void *)&v17[*(int *)(v19 + 48) + 8];
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v17, v2);
      sub_1C151E77C();
      sub_1C151920C();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      sub_1C1520DDC();
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
    }
    else
    {
      sub_1BFF05D18();
      uint64_t v23 = &v17[*(int *)(v22 + 48)];
      uint64_t v24 = &v17[*(int *)(v22 + 64)];
      uint64_t v25 = *((void *)v24 + 1);
      v28[1] = *(void *)v24;
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v26(v8, v17, v2);
      v26(v5, v23, v2);
      sub_1C151E77C();
      sub_1C151920C();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      sub_1C151920C();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      sub_1C1520DDC();
      if (v25)
      {
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void (**)(char *, uint64_t))(v3 + 8);
      v27(v5, v2);
      v27(v8, v2);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v14, v17, v2);
    sub_1C151E77C();
    sub_1C151920C();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v14, v2);
  }
}

uint64_t sub_1C02EA1CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v38 = type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement(0);
  MEMORY[0x1F4188790](v38);
  uint64_t v35 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for FormatVersionRequirement.DeprecatedRequirement(0);
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for FormatVersionRequirement.IntroducedRequirement(0);
  MEMORY[0x1F4188790](v34);
  int v40 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02F7620(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  int v39 = *(char **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = type metadata accessor for FormatVersionRequirement.Value(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v13 = v42;
  sub_1C1520EBC();
  if (!v13)
  {
    uint64_t v15 = v39;
    uint64_t v14 = v40;
    uint64_t v33 = v12;
    uint64_t v42 = v10;
    uint64_t v16 = v41;
    sub_1C02F5F90();
    long long v43 = 0uLL;
    sub_1C15206EC();
    uint64_t v17 = v7;
    if (v44)
    {
      long long v43 = xmmword_1C152C800;
      if (v44 == 1)
      {
        sub_1BFDCD6A0(&qword_1EA199710, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.DeprecatedRequirement);
        uint64_t v19 = v36;
        uint64_t v20 = v37;
        sub_1C15206EC();
        (*((void (**)(char *, uint64_t))v15 + 1))(v9, v17);
        sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
        uint64_t v22 = *(int *)(v21 + 48);
        uint64_t v23 = sub_1C151928C();
        uint64_t v24 = v19;
        uint64_t v25 = (uint64_t)v33;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v33, v24, v23);
        *(_OWORD *)(v25 + v22) = *(_OWORD *)&v24[*(int *)(v20 + 20)];
      }
      else
      {
        sub_1BFDCD6A0(&qword_1EA199708, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement);
        uint64_t v27 = v35;
        uint64_t v28 = v38;
        sub_1C15206EC();
        (*((void (**)(char *, uint64_t))v15 + 1))(v9, v17);
        sub_1BFF05D18();
        uint64_t v30 = v28;
        uint64_t v25 = (uint64_t)v33;
        int v39 = &v33[*(int *)(v29 + 48)];
        int v40 = (char *)*(int *)(v29 + 64);
        uint64_t v31 = sub_1C151928C();
        uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v31 - 8) + 32);
        v32(v25, v27, v31);
        v32((uint64_t)v39, &v27[*(int *)(v30 + 20)], v31);
        uint64_t v16 = v41;
        *(_OWORD *)&v40[v25] = *(_OWORD *)&v27[*(int *)(v30 + 24)];
      }
    }
    else
    {
      long long v43 = xmmword_1C152C800;
      sub_1BFDCD6A0(&qword_1EA199718, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.IntroducedRequirement);
      sub_1C15206EC();
      (*((void (**)(char *, uint64_t))v15 + 1))(v9, v7);
      uint64_t v26 = sub_1C151928C();
      uint64_t v25 = (uint64_t)v33;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v33, v14, v26);
    }
    swift_storeEnumTagMultiPayload();
    sub_1C02F5C80(v25, v16, type metadata accessor for FormatVersionRequirement.Value);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C02EA7F4(void *a1)
{
  uint64_t v65 = type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement(0);
  MEMORY[0x1F4188790](v65);
  int v66 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for FormatVersionRequirement.DeprecatedRequirement(0);
  MEMORY[0x1F4188790](v63);
  uint64_t v64 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatVersionRequirement.IntroducedRequirement(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1C151928C();
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  int v69 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v70 = (char *)&v62 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v68 = (char *)&v62 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v67 = (char *)&v62 - v13;
  uint64_t v14 = type metadata accessor for FormatVersionRequirement.Value(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02F7620(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v77 = v17;
  uint64_t v74 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v62 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v72 = v19;
  sub_1C1520F0C();
  sub_1BFDCD3F4(v76, (uint64_t)v16, type metadata accessor for FormatVersionRequirement.Value);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v32 = (uint64_t)v6;
    uint64_t v33 = v73;
    uint64_t v34 = v67;
    uint64_t v35 = v16;
    uint64_t v36 = v75;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v67, v35, v75);
    char v79 = 0;
    sub_1C02F5FE4();
    long long v78 = 0uLL;
    uint64_t v29 = v77;
    uint64_t v37 = v71;
    uint64_t v30 = v72;
    sub_1C152080C();
    if (!v37)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v32, v34, v36);
      long long v78 = xmmword_1C152C800;
      sub_1BFDCD6A0(&qword_1EA199738, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.IntroducedRequirement);
      sub_1C152080C();
      sub_1BFDCD640(v32, type metadata accessor for FormatVersionRequirement.IntroducedRequirement);
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v36);
    return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v30, v29);
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
    uint64_t v22 = &v16[*(int *)(v21 + 48)];
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *((void *)v22 + 1);
    uint64_t v25 = v73;
    uint64_t v26 = v68;
    uint64_t v27 = v16;
    uint64_t v28 = v75;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v68, v27, v75);
    char v79 = 1;
    sub_1C02F5FE4();
    long long v78 = 0uLL;
    uint64_t v29 = v77;
    uint64_t v31 = v71;
    uint64_t v30 = v72;
    sub_1C152080C();
    if (v31)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v52 = (uint64_t)v64;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v64, v26, v28);
      uint64_t v53 = (void *)(v52 + *(int *)(v63 + 20));
      *uint64_t v53 = v24;
      v53[1] = v23;
      long long v78 = xmmword_1C152C800;
      sub_1BFDCD6A0(&qword_1EA199730, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.DeprecatedRequirement);
      sub_1C152080C();
      sub_1BFDCD640(v52, type metadata accessor for FormatVersionRequirement.DeprecatedRequirement);
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v30, v29);
  }
  sub_1BFF05D18();
  int v39 = &v16[*(int *)(v38 + 48)];
  int v40 = (uint64_t *)&v16[*(int *)(v38 + 64)];
  uint64_t v41 = v40[1];
  uint64_t v76 = *v40;
  uint64_t v42 = v73;
  long long v43 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
  char v44 = v70;
  uint64_t v45 = v75;
  v43(v70, v16, v75);
  int v46 = v69;
  v43(v69, v39, v45);
  char v79 = 2;
  sub_1C02F5FE4();
  long long v78 = 0uLL;
  uint64_t v47 = v77;
  uint64_t v49 = v71;
  uint64_t v48 = v72;
  sub_1C152080C();
  if (v49)
  {
    swift_bridgeObjectRelease();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v42 + 8);
    v50(v46, v45);
    v50(v44, v45);
    return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v48, v47);
  }
  else
  {
    uint64_t v71 = v41;
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    uint64_t v55 = v44;
    uint64_t v56 = (uint64_t)v66;
    v54(v66, v55, v45);
    uint64_t v57 = v65;
    v54((char *)(v56 + *(int *)(v65 + 20)), v46, v45);
    uint64_t v58 = (void *)(v56 + *(int *)(v57 + 24));
    uint64_t v59 = v71;
    *uint64_t v58 = v76;
    v58[1] = v59;
    long long v78 = xmmword_1C152C800;
    sub_1BFDCD6A0(&qword_1EA199728, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement);
    uint64_t v60 = v77;
    sub_1C152080C();
    sub_1BFDCD640(v56, type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement);
    uint64_t v61 = *(void (**)(char *, uint64_t))(v42 + 8);
    v61(v69, v45);
    v61(v70, v45);
    return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v48, v60);
  }
}

uint64_t sub_1C02EB030@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v3 = sub_1C151928C();
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v19 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02F7620(0, &qword_1EA1997D8, (uint64_t (*)(void))sub_1C02F75CC, (uint64_t)&type metadata for FormatVersionRequirement.IntroducedRequirement.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v17 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = type metadata accessor for FormatVersionRequirement.IntroducedRequirement(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F75CC();
  uint64_t v12 = v20;
  sub_1C1520EBC();
  if (!v12)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v18;
    sub_1BFDCD6A0(&qword_1EB8714E8, MEMORY[0x1E4FAB0A8]);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v19, v3);
    sub_1C02F5C80((uint64_t)v11, v16, type metadata accessor for FormatVersionRequirement.IntroducedRequirement);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C02EB30C(void *a1)
{
  sub_1C02F7620(0, &qword_1EA1997F0, (uint64_t (*)(void))sub_1C02F7578, (uint64_t)&type metadata for FormatVersionRequirement.DeprecatedRequirement.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F7578();
  sub_1C1520F0C();
  char v11 = 0;
  sub_1C151928C();
  sub_1BFDCD6A0(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
  sub_1C152080C();
  if (!v1)
  {
    type metadata accessor for FormatVersionRequirement.DeprecatedRequirement(0);
    char v10 = 1;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C02EB4F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v29 = sub_1C151928C();
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v27 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02F7620(0, &qword_1EA1997C8, (uint64_t (*)(void))sub_1C02F7578, (uint64_t)&type metadata for FormatVersionRequirement.DeprecatedRequirement.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v28 = v5;
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = type metadata accessor for FormatVersionRequirement.DeprecatedRequirement(0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F7578();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v8;
  uint64_t v23 = v10;
  uint64_t v11 = v25;
  uint64_t v12 = v26;
  char v31 = 0;
  sub_1BFDCD6A0(&qword_1EB8714E8, MEMORY[0x1E4FAB0A8]);
  uint64_t v14 = v27;
  uint64_t v13 = v28;
  uint64_t v15 = v29;
  sub_1C15206EC();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v23, v14, v15);
  char v30 = 1;
  uint64_t v16 = sub_1C152060C();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v13);
  uint64_t v19 = (uint64_t)v23;
  uint64_t v20 = (uint64_t *)&v23[*(int *)(v22 + 20)];
  *uint64_t v20 = v16;
  v20[1] = v18;
  sub_1BFDCD3F4(v19, v24, type metadata accessor for FormatVersionRequirement.DeprecatedRequirement);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BFDCD640(v19, type metadata accessor for FormatVersionRequirement.DeprecatedRequirement);
}

uint64_t sub_1C02EB890(void *a1)
{
  sub_1C02F7620(0, &qword_1EA1997E8, (uint64_t (*)(void))sub_1C02F7524, (uint64_t)&type metadata for FormatVersionRequirement.IntroducedThenDeprecatedRequirement.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F7524();
  sub_1C1520F0C();
  char v12 = 0;
  sub_1C151928C();
  sub_1BFDCD6A0(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
  sub_1C152080C();
  if (!v1)
  {
    type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement(0);
    char v11 = 1;
    sub_1C152080C();
    char v10 = 2;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C02EBAB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v31 = sub_1C151928C();
  uint64_t v28 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  char v30 = (char *)&v25 - v6;
  sub_1C02F7620(0, &qword_1EA1997B8, (uint64_t (*)(void))sub_1C02F7524, (uint64_t)&type metadata for FormatVersionRequirement.IntroducedThenDeprecatedRequirement.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = v7;
  uint64_t v29 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement(0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F7524();
  uint64_t v32 = v9;
  uint64_t v13 = (uint64_t)v34;
  sub_1C1520EBC();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v29;
  uint64_t v34 = a1;
  uint64_t v25 = v10;
  uint64_t v26 = v12;
  char v37 = 0;
  sub_1BFDCD6A0(&qword_1EB8714E8, MEMORY[0x1E4FAB0A8]);
  uint64_t v15 = v30;
  uint64_t v16 = v31;
  sub_1C15206EC();
  char v30 = *(char **)(v28 + 32);
  ((void (*)(char *, char *, uint64_t))v30)(v26, v15, v16);
  char v36 = 1;
  uint64_t v17 = v4;
  sub_1C15206EC();
  uint64_t v18 = (uint64_t)v26;
  ((void (*)(char *, char *, uint64_t))v30)(&v26[*(int *)(v25 + 20)], v17, v16);
  char v35 = 2;
  uint64_t v19 = v32;
  uint64_t v20 = sub_1C152060C();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v33);
  uint64_t v23 = (uint64_t *)(v18 + *(int *)(v25 + 24));
  *uint64_t v23 = v20;
  v23[1] = v22;
  sub_1BFDCD3F4(v18, v27, type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_1BFDCD640(v18, type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement);
}

uint64_t sub_1C02EBF28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v3 = type metadata accessor for FormatVersionRequirement.Value(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v19 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02F7620(0, &qword_1EA1996C8, (uint64_t (*)(void))sub_1C02F5C2C, (uint64_t)&type metadata for FormatVersionRequirement.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v18 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F5C2C();
  uint64_t v12 = v20;
  sub_1C1520EBC();
  if (!v12)
  {
    uint64_t v13 = v18;
    sub_1BFDCD6A0(&qword_1EA1996A0, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.Value);
    uint64_t v14 = (uint64_t)v19;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    sub_1C02F5C80(v14, (uint64_t)v11, type metadata accessor for FormatVersionRequirement.Value);
    sub_1C02F5C80((uint64_t)v11, v17, type metadata accessor for FormatVersionRequirement);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C02EC1E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1480C58(*a1, *a2);
}

uint64_t sub_1C02EC1EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C02F56EC();
  *a1 = result;
  return result;
}

void sub_1C02EC21C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006465;
  int v3 = *v1;
  unint64_t v4 = 0x7461636572706564;
  unint64_t v5 = 0x80000001C15FD450;
  if (v3 == 1) {
    unint64_t v5 = 0xEA00000000006465;
  }
  else {
    unint64_t v4 = 0xD000000000000018;
  }
  BOOL v6 = v3 == 0;
  if (*v1) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 0x6375646F72746E69;
  }
  if (!v6) {
    unint64_t v2 = v5;
  }
  *a1 = v7;
  a1[1] = v2;
}

uint64_t sub_1C02EC280()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C02EC2E0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C02EC330()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C02EC3D8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02EC46C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C02EC514()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C02EC558()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C02EC594@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C02EA1CC(a1, a2);
}

uint64_t sub_1C02EC5AC(void *a1)
{
  return sub_1C02EA7F4(a1);
}

uint64_t sub_1C02EC5C4()
{
  return 0x6375646F72746E69;
}

uint64_t sub_1C02EC5E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6375646F72746E69 && a2 == 0xEA00000000006465)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C02EC684(uint64_t a1)
{
  unint64_t v2 = sub_1C02F75CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C02EC6C0(uint64_t a1)
{
  unint64_t v2 = sub_1C02F75CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C02EC6FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C02EB030(a1, a2);
}

uint64_t sub_1C02EC714(void *a1)
{
  sub_1C02F7620(0, &qword_1EA1997F8, (uint64_t (*)(void))sub_1C02F75CC, (uint64_t)&type metadata for FormatVersionRequirement.IntroducedRequirement.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  BOOL v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F75CC();
  sub_1C1520F0C();
  sub_1C151928C();
  sub_1BFDCD6A0(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C02EC8C0()
{
  if (*v0) {
    return 0x6D6563616C706572;
  }
  else {
    return 0x7461636572706564;
  }
}

uint64_t sub_1C02EC908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C02F5738(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02EC930(uint64_t a1)
{
  unint64_t v2 = sub_1C02F7578();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C02EC96C(uint64_t a1)
{
  unint64_t v2 = sub_1C02F7578();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C02EC9A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C02EB4F8(a1, a2);
}

uint64_t sub_1C02EC9C0(void *a1)
{
  return sub_1C02EB30C(a1);
}

uint64_t sub_1C02EC9D8()
{
  uint64_t v1 = 0x7461636572706564;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D6563616C706572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6375646F72746E69;
  }
}

uint64_t sub_1C02ECA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C02F5850(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02ECA64(uint64_t a1)
{
  unint64_t v2 = sub_1C02F7524();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C02ECAA0(uint64_t a1)
{
  unint64_t v2 = sub_1C02F7524();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C02ECADC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C02EBAB8(a1, a2);
}

uint64_t sub_1C02ECAF4(void *a1)
{
  return sub_1C02EB890(a1);
}

uint64_t sub_1C02ECB0C()
{
  return 0x65756C6176;
}

uint64_t sub_1C02ECB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C02ECBB0(uint64_t a1)
{
  unint64_t v2 = sub_1C02F5C2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C02ECBEC(uint64_t a1)
{
  unint64_t v2 = sub_1C02F5C2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C02ECC28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C02EBF28(a1, a2);
}

uint64_t sub_1C02ECC40(void *a1)
{
  sub_1C02F7620(0, &qword_1EA199740, (uint64_t (*)(void))sub_1C02F5C2C, (uint64_t)&type metadata for FormatVersionRequirement.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  BOOL v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F5C2C();
  sub_1C1520F0C();
  type metadata accessor for FormatVersionRequirement.Value(0);
  sub_1BFDCD6A0(&qword_1EA1996A8, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.Value);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FormatVersionInfo.mode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFDCD3F4(v1, a1, type metadata accessor for FormatVersioningMode);
}

uint64_t FormatVersionInfo.detectedVersion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatVersionInfo(0);
  return sub_1BFEFC57C(v1 + *(int *)(v3 + 20), a1, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
}

uint64_t FormatVersionInfo.recordedDeprecations.getter()
{
  type metadata accessor for FormatVersionInfo(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02ECEA8(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v114 = a5;
  long long v115 = a4;
  uint64_t v116 = a3;
  long long v117 = a2;
  uint64_t v6 = type metadata accessor for FormatDeprecationWarning(0);
  uint64_t v108 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v112 = (uint64_t)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02F5D4C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v127 = (uint64_t)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02F5E4C();
  uint64_t v122 = v10;
  MEMORY[0x1F4188790](v10);
  __int16 v121 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatVersioningMode(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v123 = (uint64_t)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v125 = (char *)&v106 - v15;
  sub_1BFEFD268(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  long long v110 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v106 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v106 - v22;
  uint64_t v24 = sub_1C151928C();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  long long v118 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v124 = (char *)&v106 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  long long v119 = (char *)&v106 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  long long v113 = (char *)&v106 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  long long v109 = (char *)&v106 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v38 = (char *)&v106 - v37;
  MEMORY[0x1F4188790](v36);
  int v40 = (char *)&v106 - v39;
  uint64_t v126 = a1;
  sub_1C02E97F0((uint64_t)v23);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v42 = v41(v23, 1, v24);
  uint64_t v120 = v12;
  if (v42 == 1)
  {
    sub_1BFE546A8((uint64_t)v23, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
    uint64_t v43 = v24;
  }
  else
  {
    long long v107 = v21;
    uint64_t v111 = v25;
    char v44 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v44(v40, v23, v24);
    sub_1BFDCD3F4(v129, (uint64_t)v125, type metadata accessor for FormatVersioningMode);
    uint64_t v43 = v24;
    if (swift_getEnumCaseMultiPayload() >= 2)
    {
      uint64_t v58 = (void (*)(uint64_t, char *, uint64_t))v44;
      uint64_t v125 = v40;
      uint64_t v59 = v129 + *(int *)(type metadata accessor for FormatVersionInfo(0) + 20);
      uint64_t v60 = (uint64_t)v107;
      sub_1BFEFC57C(v59, (uint64_t)v107, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      if (v41((char *)v60, 1, v24) == 1)
      {
        uint64_t v61 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAB0A8];
        sub_1BFE546A8(v60, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        sub_1BFE546A8(v59, &qword_1EB871500, v61);
        v58(v59, v125, v24);
        uint64_t v25 = v111;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v111 + 56))(v59, 0, 1, v24);
      }
      else
      {
        uint64_t v106 = v59;
        uint64_t v64 = v109;
        v58((uint64_t)v109, (char *)v60, v24);
        sub_1BFDCD6A0((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
        uint64_t v65 = (uint64_t)v125;
        char v66 = sub_1C151E58C();
        uint64_t v67 = (uint64_t)v110;
        uint64_t v68 = v111;
        if (v66) {
          uint64_t v69 = v65;
        }
        else {
          uint64_t v69 = (uint64_t)v64;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v110, v69, v24);
        uint64_t v70 = *(void (**)(char *, uint64_t))(v68 + 8);
        v70(v64, v24);
        v70((char *)v65, v24);
        uint64_t v25 = v68;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v67, 0, 1, v24);
        sub_1C02F0B34(v67, v106, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      }
    }
    else
    {
      v44(v38, v125, v24);
      sub_1BFDCD6A0((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
      if (sub_1C151E57C())
      {
        uint64_t v45 = (uint64_t (*)(char *, char *, uint64_t))v44;
        uint64_t v46 = v24;
        uint64_t v47 = v111;
        uint64_t v48 = v113;
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v113, v40, v24);
        uint64_t v49 = v45(v119, v38, v24);
        uint64_t v129 = ((uint64_t (*)(uint64_t))v115)(v49);
        uint64_t v128 = v50;
        uint64_t v127 = v117();
        uint64_t v51 = (int *)type metadata accessor for FormatVersioningError(0);
        sub_1BFDCD6A0(qword_1EA1995E0, (void (*)(uint64_t))type metadata accessor for FormatVersioningError);
        swift_allocError();
        uint64_t v52 = v40;
        uint64_t v54 = v53;
        v45(v53, v48, v46);
        v45(&v54[v51[5]], v119, v46);
        uint64_t v55 = &v54[v51[6]];
        uint64_t v56 = v128;
        *(void *)uint64_t v55 = v129;
        *((void *)v55 + 1) = v56;
        *(void *)&v54[v51[7]] = v127;
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v52, v46);
      }
      uint64_t v62 = v111;
      uint64_t v63 = *(void (**)(char *, uint64_t))(v111 + 8);
      v63(v38, v24);
      v63(v40, v24);
      uint64_t v25 = v62;
    }
  }
  uint64_t v71 = v127;
  sub_1C02E9A90(v127);
  sub_1C02F5DB4(0, &qword_1EA1996E8);
  uint64_t v73 = v72;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v71, 1, v72) == 1) {
    return sub_1BFDCD640(v71, (uint64_t (*)(void))sub_1C02F5D4C);
  }
  uint64_t v74 = (uint64_t *)(v71 + *(int *)(v73 + 48));
  uint64_t v75 = v74[1];
  uint64_t v126 = *v74;
  uint64_t v77 = v121;
  uint64_t v76 = v122;
  long long v78 = &v121[*(int *)(v122 + 48)];
  char v79 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
  v79(v121, v71, v43);
  *(void *)long long v78 = v126;
  *((void *)v78 + 1) = v75;
  int v80 = (uint64_t *)&v77[*(int *)(v76 + 48)];
  uint64_t v82 = *v80;
  uint64_t v81 = v80[1];
  uint64_t v83 = v124;
  uint64_t v84 = v129;
  v79(v124, (uint64_t)v77, v43);
  uint64_t v85 = v84;
  uint64_t v86 = v123;
  sub_1BFDCD3F4(v85, v123, type metadata accessor for FormatVersioningMode);
  if (swift_getEnumCaseMultiPayload() >= 2)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v83, v43);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v87 = v86;
    uint64_t v88 = v118;
    v79(v118, v87, v43);
    sub_1BFDCD6A0((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
    if (sub_1C151E57C())
    {
      swift_bridgeObjectRelease();
      uint64_t v89 = *(void (**)(char *, uint64_t))(v25 + 8);
      v89(v88, v43);
      return ((uint64_t (*)(char *, uint64_t))v89)(v83, v43);
    }
    else
    {
      uint64_t v125 = (char *)v115();
      uint64_t v127 = v82;
      uint64_t v91 = v90;
      uint64_t v92 = v117();
      uint64_t v111 = v25;
      uint64_t v93 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
      uint64_t v94 = v81;
      uint64_t v95 = v43;
      uint64_t v96 = (uint64_t)v113;
      v93(v113, v88, v95);
      uint64_t v97 = (uint64_t)v119;
      uint64_t v126 = v95;
      v93(v119, v83, v95);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v98 = v127;
      uint64_t v127 = v92;
      sub_1C02EDB0C(v96, v97, v98, v94, v92, (uint64_t)v125, v91, v112);
      uint64_t v99 = *(int *)(type metadata accessor for FormatVersionInfo(0) + 24);
      unint64_t v100 = *(void *)(v129 + v99);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v100 = sub_1C0EDFA68(0, *(void *)(v100 + 16) + 1, 1, v100);
      }
      unint64_t v102 = *(void *)(v100 + 16);
      unint64_t v101 = *(void *)(v100 + 24);
      long long v103 = v118;
      uint64_t v104 = v126;
      if (v102 >= v101 >> 1) {
        unint64_t v100 = sub_1C0EDFA68(v101 > 1, v102 + 1, 1, v100);
      }
      *(void *)(v100 + 16) = v102 + 1;
      sub_1C02F5C80(v112, v100+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(void *)(v108 + 72) * v102, type metadata accessor for FormatDeprecationWarning);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v129 + v99) = v100;
      long long v105 = *(void (**)(char *, uint64_t))(v111 + 8);
      v105(v103, v104);
      return ((uint64_t (*)(char *, uint64_t))v105)(v124, v104);
    }
  }
}

uint64_t sub_1C02EDB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v67 = a6;
  uint64_t v68 = a7;
  uint64_t v69 = a5;
  uint64_t v70 = a2;
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v71 = a1;
  uint64_t v9 = sub_1C151800C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151801C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v56 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v55 = (char *)&v53 - v17;
  sub_1BFEFD268(0, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v64 = (char *)&v53 - v19;
  uint64_t v20 = (int *)type metadata accessor for FormatDeprecationWarning(0);
  uint64_t v21 = (void *)(a8 + v20[6]);
  uint64_t v22 = a8 + v20[7];
  uint64_t v57 = v14;
  uint64_t v58 = v13;
  uint64_t v24 = *(void (**)(void))(v14 + 56);
  uint64_t v23 = v14 + 56;
  uint64_t v61 = v24;
  uint64_t v62 = v22;
  v24();
  uint64_t v25 = (uint64_t *)(a8 + v20[8]);
  uint64_t v26 = sub_1C151928C();
  *uint64_t v25 = 0;
  v25[1] = 0;
  char v66 = v25;
  uint64_t v63 = *(void *)(v26 - 8);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
  v27(a8, v71, v26);
  uint64_t v28 = v20[5];
  uint64_t v29 = v70;
  uint64_t v54 = a8;
  uint64_t v65 = v26;
  v27(a8 + v28, v70, v26);
  uint64_t v30 = v60;
  *uint64_t v21 = v59;
  v21[1] = v30;
  uint64_t v31 = v69;
  if (v69)
  {
    uint64_t v60 = v23;
    uint64_t v32 = v58;
    int64_t v33 = *(void *)(v69 + 16);
    if (v33)
    {
      uint64_t v74 = MEMORY[0x1E4FBC860];
      sub_1C05F6288(0, v33, 0);
      uint64_t v34 = v31 + 32;
      do
      {
        sub_1BFC66384(v34, (uint64_t)v72);
        __swift_project_boxed_opaque_existential_1(v72, v73);
        sub_1C1520F6C();
        if (v35)
        {
          __swift_project_boxed_opaque_existential_1(v72, v73);
          sub_1C1520F4C();
          sub_1C1517FFC();
        }
        else
        {
          sub_1C1517FEC();
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
        uint64_t v36 = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F6288(0, *(void *)(v36 + 16) + 1, 1);
          uint64_t v36 = v74;
        }
        unint64_t v38 = *(void *)(v36 + 16);
        unint64_t v37 = *(void *)(v36 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_1C05F6288(v37 > 1, v38 + 1, 1);
          uint64_t v36 = v74;
        }
        *(void *)(v36 + 16) = v38 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v36+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v38, v12, v9);
        uint64_t v74 = v36;
        v34 += 40;
        --v33;
      }
      while (v33);
      uint64_t v29 = v70;
    }
    uint64_t v39 = v56;
    sub_1C1517F9C();
    int v40 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    uint64_t v41 = v55;
    uint64_t v42 = v32;
    v40(v55, v39, v32);
    uint64_t v43 = (uint64_t)v64;
    v40(v64, v41, v42);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v61)(v43, 0, 1, v42);
    swift_bridgeObjectRelease();
    uint64_t v44 = v67;
  }
  else
  {
    uint64_t v45 = v64;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v61)(v64, 1, 1, v58);
    uint64_t v44 = v67;
    uint64_t v43 = (uint64_t)v45;
  }
  sub_1C02F0B34(v43, v62, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
  uint64_t v46 = v68;
  if (!v68)
  {
    uint64_t v44 = sub_1C02EF4C0(v54);
    uint64_t v46 = v47;
  }
  uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  uint64_t v49 = v29;
  uint64_t v50 = v65;
  v48(v49, v65);
  v48(v71, v50);
  uint64_t v51 = v66;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v51 = v44;
  v51[1] = v46;
  return result;
}

uint64_t sub_1C02EE068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151928C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v20 - v15;
  sub_1BFDCD3F4(v4, (uint64_t)v9, type metadata accessor for FormatVersioningMode);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    char v17 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    sub_1BFEFE794(a2, a3);
    sub_1BFDCD6A0((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
    char v17 = sub_1C151E57C() ^ 1;
    uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
    v18(v13, v10);
    v18(v16, v10);
  }
  return v17 & 1;
}

uint64_t sub_1C02EE28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a1;
  uint64_t v10 = type metadata accessor for FormatVersioningError(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDCD3F4(v5, (uint64_t)v15, type metadata accessor for FormatVersioningMode);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v22 = sub_1C151928C();
    uint64_t EnumCaseMultiPayload = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v15, v22);
LABEL_8:
    uint64_t v23 = MEMORY[0x1F4188790](EnumCaseMultiPayload);
    *(&v28 - 2) = a2;
    *(&v28 - 1) = a3;
    MEMORY[0x1F4188790](v23);
    *(&v28 - 2) = a4;
    *(&v28 - 1) = a5;
    uint64_t v24 = v29;
    sub_1C02ECEA8(v28, sub_1C02F5EE0, v25, sub_1C02F7C80, (uint64_t)(&v28 - 4));
    if (!v24) {
      LOBYTE(a2) = 1;
    }
    return a2 & 1;
  }
  if (EnumCaseMultiPayload != 1) {
    goto LABEL_8;
  }
  uint64_t v17 = MEMORY[0x1F4188790](EnumCaseMultiPayload);
  *(&v28 - 2) = a2;
  *(&v28 - 1) = a3;
  MEMORY[0x1F4188790](v17);
  *(&v28 - 2) = a4;
  *(&v28 - 1) = a5;
  uint64_t v18 = v29;
  sub_1C02ECEA8(v28, sub_1C02F7C7C, v19, sub_1C02F5F08, (uint64_t)(&v28 - 4));
  LOBYTE(a2) = v18 == 0;
  if (v18)
  {
    id v30 = v18;
    id v20 = v18;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if (!swift_dynamicCast())
    {

      uint64_t v26 = sub_1C151928C();
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v15, v26);
      return a2 & 1;
    }

    sub_1BFDCD640((uint64_t)v12, type metadata accessor for FormatVersioningError);
  }
  uint64_t v21 = sub_1C151928C();
  (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v15, v21);
  return a2 & 1;
}

uint64_t (*FormatVersioningError.detectedVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatVersioningError.maxVersion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C02EF098(type metadata accessor for FormatVersioningError, a1);
}

uint64_t FormatVersioningError.maxVersion.setter(uint64_t a1)
{
  return sub_1C02EF130(a1, type metadata accessor for FormatVersioningError);
}

uint64_t (*FormatVersioningError.maxVersion.modify())()
{
  return nullsub_1;
}

uint64_t FormatVersioningError.feature.getter()
{
  return sub_1C02EF20C(type metadata accessor for FormatVersioningError);
}

uint64_t FormatVersioningError.feature.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C02EF26C(a1, a2, type metadata accessor for FormatVersioningError);
}

uint64_t (*FormatVersioningError.feature.modify())()
{
  return nullsub_1;
}

uint64_t FormatVersioningError.codingPath.getter()
{
  type metadata accessor for FormatVersioningError(0);
  return swift_bridgeObjectRetain();
}

uint64_t FormatVersioningError.codingPath.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatVersioningError(0) + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatVersioningError.codingPath.modify())()
{
  return nullsub_1;
}

uint64_t FormatVersioningError.readableCodingPath.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatVersioningError(0) + 28));
  if (!v1) {
    return 0;
  }
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v2, 0);
    uint64_t v4 = v1 + 32;
    do
    {
      sub_1BFC66384(v4, (uint64_t)v14);
      __swift_project_boxed_opaque_existential_1(v14, v15);
      sub_1C1520F6C();
      if (v5)
      {
        __swift_project_boxed_opaque_existential_1(v14, v15);
        uint64_t v6 = sub_1C1520F4C();
      }
      else
      {
        uint64_t v6 = sub_1C152088C();
      }
      uint64_t v8 = v6;
      uint64_t v9 = v7;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      uint64_t v3 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v16;
      }
      unint64_t v11 = *(void *)(v3 + 16);
      unint64_t v10 = *(void *)(v3 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BFF661B8(v10 > 1, v11 + 1, 1);
        uint64_t v3 = v16;
      }
      *(void *)(v3 + 16) = v11 + 1;
      uint64_t v12 = v3 + 16 * v11;
      *(void *)(v12 + 32) = v8;
      *(void *)(v12 + 40) = v9;
      v4 += 40;
      --v2;
    }
    while (v2);
  }
  v14[0] = v3;
  sub_1BFEFDE40(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  sub_1C151E55C();
  swift_bridgeObjectRelease();
  v14[0] = 47;
  v14[1] = 0xE100000000000000;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v14[0];
}

uint64_t FormatVersioningError.failingProperty.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatVersioningError(0) + 28));
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  sub_1BFC66384(v1 + 40 * v2 - 8, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  uint64_t v3 = sub_1C1520F4C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t FormatVersioningError.failingIndex.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatVersioningError(0) + 28));
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  sub_1BFC66384(v1 + 40 * v2 - 8, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  uint64_t v3 = sub_1C1520F6C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t FormatVersioningError.errorDescription.getter()
{
  if (*(void *)(v0 + *(int *)(type metadata accessor for FormatVersioningError(0) + 24) + 8))
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    strcpy((char *)v4, "Compiling for ");
    HIBYTE(v4[1]) = -18;
    sub_1C151928C();
    sub_1BFDCD6A0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
  }
  else
  {
    FormatVersioningError.failingIndex.getter();
    if ((v1 & 1) == 0)
    {
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v4, "Compiling for ");
      HIBYTE(v4[1]) = -18;
      sub_1C151928C();
      sub_1BFDCD6A0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      goto LABEL_9;
    }
    FormatVersioningError.failingProperty.getter();
    if (!v2)
    {
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v4, "Compiling for ");
      HIBYTE(v4[1]) = -18;
      sub_1C151928C();
      sub_1BFDCD6A0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      goto LABEL_9;
    }
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    strcpy((char *)v4, "Compiling for ");
    HIBYTE(v4[1]) = -18;
    sub_1C151928C();
    sub_1BFDCD6A0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  sub_1C151E80C();
LABEL_9:
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v4[0];
}

uint64_t FormatVersioningError.errorHint.getter()
{
  return 0;
}

uint64_t _s8NewsFeed21FormatVersioningErrorV15detectedVersion13TeaFoundation0G0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151928C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t _s8NewsFeed21FormatVersioningErrorV15detectedVersion13TeaFoundation0G0Vvs_0(uint64_t a1)
{
  uint64_t v3 = sub_1C151928C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*FormatDeprecationWarning.target.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatDeprecationWarning.deprecatedIn.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C02EF098(type metadata accessor for FormatDeprecationWarning, a1);
}

uint64_t sub_1C02EF098@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t FormatDeprecationWarning.deprecatedIn.setter(uint64_t a1)
{
  return sub_1C02EF130(a1, type metadata accessor for FormatDeprecationWarning);
}

uint64_t sub_1C02EF130(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*FormatDeprecationWarning.deprecatedIn.modify())()
{
  return nullsub_1;
}

uint64_t FormatDeprecationWarning.replacement.getter()
{
  return sub_1C02EF20C(type metadata accessor for FormatDeprecationWarning);
}

uint64_t sub_1C02EF20C(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatDeprecationWarning.replacement.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C02EF26C(a1, a2, type metadata accessor for FormatDeprecationWarning);
}

uint64_t sub_1C02EF26C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*FormatDeprecationWarning.replacement.modify())()
{
  return nullsub_1;
}

uint64_t FormatDeprecationWarning.codingPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatDeprecationWarning(0);
  return sub_1BFEFC57C(v1 + *(int *)(v3 + 28), a1, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
}

uint64_t FormatDeprecationWarning.codingPath.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatDeprecationWarning(0);
  return sub_1C02F0B34(a1, v1 + *(int *)(v3 + 28), (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
}

uint64_t (*FormatDeprecationWarning.codingPath.modify())()
{
  return nullsub_1;
}

uint64_t FormatDeprecationWarning.feature.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatDeprecationWarning(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDeprecationWarning.feature.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FormatDeprecationWarning(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FormatDeprecationWarning.feature.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C02EF4C0(uint64_t a1)
{
  uint64_t v2 = sub_1C151801C();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v32 - v7;
  sub_1BFEFD268(0, &qword_1EA1996F8, MEMORY[0x1E4FAA8E8], MEMORY[0x1E4FBB718]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v34 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = a1 + *(int *)(type metadata accessor for FormatDeprecationWarning(0) + 28);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (!v15(v14, 1, v2))
  {
    int64_t v33 = v6;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v14, v2);
    uint64_t v16 = sub_1C1517FAC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v32 = v17 - 1;
      uint64_t v18 = sub_1C151800C();
      uint64_t v19 = *(void *)(v18 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v13, v16+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v32, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
    }
    else
    {
      uint64_t v18 = sub_1C151800C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v13, 1, 1, v18);
    }
    swift_bridgeObjectRelease();
    sub_1C151800C();
    uint64_t v20 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v18) == 1)
    {
      sub_1BFE546A8((uint64_t)v13, &qword_1EA1996F8, MEMORY[0x1E4FAA8E8]);
      uint64_t v6 = v33;
    }
    else
    {
      uint64_t v21 = sub_1C1517FDC();
      char v23 = v22;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v18);
      uint64_t v6 = v33;
      if ((v23 & 1) == 0)
      {
        uint64_t v36 = 0x5B206D657469;
        unint64_t v37 = 0xE600000000000000;
        uint64_t v35 = v21;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
  }
  if (v15(v14, 1, v2)) {
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v14, v2);
  uint64_t v24 = sub_1C1517FAC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v26 = v25 - 1;
    uint64_t v27 = sub_1C151800C();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = (uint64_t)v34;
    (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v34, v24+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v26, v27);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v29, 0, 1, v27);
  }
  else
  {
    uint64_t v27 = sub_1C151800C();
    uint64_t v29 = (uint64_t)v34;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v34, 1, 1, v27);
  }
  swift_bridgeObjectRelease();
  sub_1C151800C();
  uint64_t v30 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v29, 1, v27) == 1)
  {
    sub_1BFE546A8(v29, &qword_1EA1996F8, MEMORY[0x1E4FAA8E8]);
    return 0;
  }
  sub_1C1517FCC();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v27);
  uint64_t v36 = 0x79747265706F7270;
  unint64_t v37 = 0xEA00000000002720;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
LABEL_17:
  sub_1C151E80C();
  return v36;
}

uint64_t FormatDeprecationWarning.message.getter()
{
  if (*(void *)(v0 + *(int *)(type metadata accessor for FormatDeprecationWarning(0) + 32) + 8))
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    strcpy((char *)v2, "Compiling for ");
    HIBYTE(v2[1]) = -18;
    sub_1C151928C();
    sub_1BFDCD6A0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
  }
  else
  {
    v2[0] = 0;
    v2[1] = 0xE000000000000000;
    sub_1C15200FC();
    sub_1C151E80C();
    sub_1C151928C();
    sub_1BFDCD6A0((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  sub_1C151E80C();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v2[0];
}

uint64_t sub_1C02EFDB0()
{
  uint64_t result = 0x746567726174;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7461636572706564;
      break;
    case 2:
      uint64_t result = 0x6D6563616C706572;
      break;
    case 3:
      uint64_t result = 0x6150676E69646F63;
      break;
    case 4:
      uint64_t result = 0x65727574616566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C02EFE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C02F59D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02EFE94(uint64_t a1)
{
  unint64_t v2 = sub_1C02F1A48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C02EFED0(uint64_t a1)
{
  unint64_t v2 = sub_1C02F1A48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatDeprecationWarning.encode(to:)(void *a1)
{
  sub_1C02F7620(0, &qword_1EA1995B8, (uint64_t (*)(void))sub_1C02F1A48, (uint64_t)&type metadata for FormatDeprecationWarning.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F1A48();
  sub_1C1520F0C();
  char v14 = 0;
  sub_1C151928C();
  sub_1BFDCD6A0(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
  sub_1C152080C();
  if (!v1)
  {
    type metadata accessor for FormatDeprecationWarning(0);
    char v13 = 1;
    sub_1C152080C();
    char v12 = 2;
    sub_1C152074C();
    char v11 = 3;
    sub_1C151801C();
    sub_1BFDCD6A0(&qword_1EA1995C8, MEMORY[0x1E4FAA8F0]);
    sub_1C152078C();
    char v10 = 4;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatDeprecationWarning.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  sub_1BFEFD268(0, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v41 = (char *)v38 - v4;
  uint64_t v46 = sub_1C151928C();
  uint64_t v42 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v44 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)v38 - v7;
  sub_1C02F7620(0, &qword_1EA1995D0, (uint64_t (*)(void))sub_1C02F1A48, (uint64_t)&type metadata for FormatDeprecationWarning.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v47 = v8;
  uint64_t v43 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)v38 - v9;
  uint64_t v11 = type metadata accessor for FormatDeprecationWarning(0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = &v13[*(int *)(v14 + 24)];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v52 = (uint64_t *)v15;
  uint64_t v16 = (uint64_t)&v13[*(int *)(v14 + 28)];
  uint64_t v17 = sub_1C151801C();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v49 = v16;
  v18(v16, 1, 1, v17);
  uint64_t v19 = &v13[*(int *)(v11 + 32)];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v50 = v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F1A48();
  uint64_t v48 = v10;
  uint64_t v20 = (uint64_t)v51;
  sub_1C1520EBC();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v24 = v49;
    swift_bridgeObjectRelease();
    sub_1BFE546A8(v24, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v38[1] = v17;
    uint64_t v39 = v11;
    uint64_t v21 = v44;
    uint64_t v51 = a1;
    char v57 = 0;
    sub_1BFDCD6A0(&qword_1EB8714E8, MEMORY[0x1E4FAB0A8]);
    char v22 = v45;
    uint64_t v23 = v46;
    sub_1C15206EC();
    uint64_t v25 = (uint64_t)v13;
    uint64_t v26 = v13;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
    v27(v26, v22, v23);
    char v56 = 1;
    sub_1C15206EC();
    v27((char *)(v25 + *(int *)(v39 + 20)), v21, v23);
    char v55 = 2;
    uint64_t v28 = v47;
    uint64_t v29 = sub_1C152060C();
    uint64_t v30 = v52;
    *uint64_t v52 = v29;
    v30[1] = v31;
    char v54 = 3;
    sub_1BFDCD6A0(&qword_1EA1995D8, MEMORY[0x1E4FAA8F0]);
    uint64_t v32 = (uint64_t)v41;
    sub_1C152065C();
    sub_1C02F0B34(v32, v49, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
    char v53 = 4;
    uint64_t v33 = sub_1C152060C();
    uint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v48, v28);
    uint64_t v36 = (uint64_t *)v50;
    swift_bridgeObjectRelease();
    *uint64_t v36 = v33;
    v36[1] = v35;
    sub_1BFDCD3F4(v25, v40, type metadata accessor for FormatDeprecationWarning);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    return sub_1BFDCD640(v25, type metadata accessor for FormatDeprecationWarning);
  }
}

uint64_t sub_1C02F0868@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDeprecationWarning.init(from:)(a1, a2);
}

uint64_t sub_1C02F0880(void *a1)
{
  return FormatDeprecationWarning.encode(to:)(a1);
}

uint64_t FormatVersioningError.debugDescription.getter()
{
  return 0;
}

uint64_t sub_1C02F09B4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C02F09DC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t type metadata accessor for Box()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C02F0A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1C02F0A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatVersioningError(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA199668);
}

uint64_t type metadata accessor for FormatDeprecationWarning(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA199678);
}

uint64_t sub_1C02F0B34(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFEFD268(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C02F0BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v80 = v4;
  uint64_t v81 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v77 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v78 = (char *)&v72 - v8;
  MEMORY[0x1F4188790](v9);
  char v79 = (char *)&v72 - v10;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v72 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v72 - v15;
  uint64_t v17 = type metadata accessor for FormatVersionRequirement.Value(0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  char v22 = (char *)&v72 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v72 - v24;
  sub_1C02F5CE8();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v29 = (char *)&v72 + *(int *)(v28 + 56) - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  uint64_t v31 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDCD3F4(v30, (uint64_t)v31, type metadata accessor for FormatVersionRequirement.Value);
  sub_1BFDCD3F4(a2, (uint64_t)v29, type metadata accessor for FormatVersionRequirement.Value);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v76 = v31;
      sub_1BFDCD3F4((uint64_t)v31, (uint64_t)v19, type metadata accessor for FormatVersionRequirement.Value);
      sub_1BFF05D18();
      uint64_t v45 = *(int *)(v44 + 48);
      uint64_t v46 = &v19[v45];
      uint64_t v47 = *(int *)(v44 + 64);
      uint64_t v49 = *(void *)&v19[v47];
      uint64_t v48 = *(void *)&v19[v47 + 8];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v65 = v80;
        char v66 = *(void (**)(char *, uint64_t))(v81 + 8);
        v66(v46, v80);
        v66(v19, v65);
        char v63 = 0;
        uint64_t v64 = (uint64_t (*)(void))sub_1C02F5CE8;
LABEL_29:
        uint64_t v31 = v76;
        goto LABEL_30;
      }
      uint64_t v50 = &v29[v45];
      uint64_t v52 = *(void *)&v29[v47];
      uint64_t v51 = *(void *)&v29[v47 + 8];
      uint64_t v72 = v49;
      uint64_t v73 = v52;
      uint64_t v74 = v48;
      uint64_t v75 = v51;
      uint64_t v53 = v80;
      char v54 = *(void (**)(char *, char *, uint64_t))(v81 + 32);
      char v55 = v79;
      char v56 = v29;
      uint64_t v57 = v81;
      v54(v79, v56, v80);
      uint64_t v58 = v78;
      v54(v78, v46, v53);
      uint64_t v59 = v77;
      v54(v77, v50, v53);
      LOBYTE(v50) = sub_1C151922C();
      uint64_t v60 = *(void (**)(char *, uint64_t))(v57 + 8);
      v60(v19, v53);
      if (v50)
      {
        uint64_t v61 = v73;
        uint64_t v62 = v75;
        if (sub_1C151922C())
        {
          if (v74)
          {
            if (v62)
            {
              if (v72 == v61 && v74 == v62)
              {
                swift_bridgeObjectRelease();
                v60(v59, v53);
                v60(v58, v53);
                v60(v55, v53);
                goto LABEL_20;
              }
              char v71 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              v60(v59, v53);
              v60(v58, v53);
              v60(v55, v53);
              goto LABEL_41;
            }
            swift_bridgeObjectRetain();
            v60(v59, v53);
            v60(v58, v53);
            v60(v55, v53);
            swift_bridgeObjectRelease();
          }
          else
          {
            v60(v59, v53);
            v60(v58, v53);
            v60(v55, v53);
            uint64_t v64 = type metadata accessor for FormatVersionRequirement.Value;
            if (!v62) {
              goto LABEL_37;
            }
          }
          uint64_t v31 = v76;
          swift_bridgeObjectRelease();
          goto LABEL_43;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v60(v59, v53);
      v60(v58, v53);
      v60(v55, v53);
LABEL_27:
      char v63 = 0;
      goto LABEL_28;
    }
    sub_1BFDCD3F4((uint64_t)v31, (uint64_t)v22, type metadata accessor for FormatVersionRequirement.Value);
    sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
    uint64_t v34 = *(int *)(v33 + 48);
    uint64_t v36 = *(void *)&v22[v34];
    uint64_t v35 = *(void *)&v22[v34 + 8];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v76 = v31;
      uint64_t v38 = *(void *)&v29[v34];
      uint64_t v37 = *(void *)&v29[v34 + 8];
      uint64_t v39 = v80;
      uint64_t v40 = v29;
      uint64_t v41 = v81;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v13, v40, v80);
      char v42 = sub_1C151922C();
      uint64_t v43 = *(void (**)(char *, uint64_t))(v41 + 8);
      v43(v22, v39);
      if (v42)
      {
        if (v35)
        {
          if (v37)
          {
            if (v36 == v38 && v35 == v37)
            {
              swift_bridgeObjectRelease();
              v43(v13, v39);
LABEL_20:
              swift_bridgeObjectRelease();
              char v63 = 1;
LABEL_28:
              uint64_t v64 = type metadata accessor for FormatVersionRequirement.Value;
              goto LABEL_29;
            }
            char v71 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            v43(v13, v39);
LABEL_41:
            swift_bridgeObjectRelease();
            uint64_t v64 = type metadata accessor for FormatVersionRequirement.Value;
            uint64_t v31 = v76;
            if (v71)
            {
              char v63 = 1;
              goto LABEL_30;
            }
LABEL_43:
            char v63 = 0;
            uint64_t v64 = type metadata accessor for FormatVersionRequirement.Value;
            goto LABEL_30;
          }
          v43(v13, v39);
LABEL_34:
          swift_bridgeObjectRelease();
          uint64_t v31 = v76;
          goto LABEL_43;
        }
        v43(v13, v39);
        uint64_t v64 = type metadata accessor for FormatVersionRequirement.Value;
        if (v37) {
          goto LABEL_34;
        }
LABEL_37:
        char v63 = 1;
        goto LABEL_29;
      }
      v43(v13, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v22, v80);
  }
  else
  {
    sub_1BFDCD3F4((uint64_t)v31, (uint64_t)v25, type metadata accessor for FormatVersionRequirement.Value);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v68 = v80;
      uint64_t v67 = v81;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v16, v29, v80);
      char v63 = sub_1C151922C();
      uint64_t v69 = *(void (**)(char *, uint64_t))(v67 + 8);
      v69(v16, v68);
      v69(v25, v68);
      uint64_t v64 = type metadata accessor for FormatVersionRequirement.Value;
      goto LABEL_30;
    }
    (*(void (**)(char *, uint64_t))(v81 + 8))(v25, v80);
  }
  char v63 = 0;
  uint64_t v64 = (uint64_t (*)(void))sub_1C02F5CE8;
LABEL_30:
  sub_1BFDCD640((uint64_t)v31, v64);
  return v63 & 1;
}

uint64_t _s8NewsFeed24FormatDeprecationWarningV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151801C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02F61B8();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFD268(0, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v48 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v48 - v19;
  if ((sub_1C151922C() & 1) == 0) {
    return 0;
  }
  uint64_t v53 = v5;
  uint64_t v21 = type metadata accessor for FormatDeprecationWarning(0);
  if ((sub_1C151922C() & 1) == 0) {
    return 0;
  }
  uint64_t v22 = *(int *)(v21 + 24);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = *(void *)(a1 + v22 + 8);
  uint64_t v25 = (void *)(a2 + v22);
  uint64_t v26 = v25[1];
  uint64_t v27 = v21;
  if (!v24)
  {
    if (v26) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v26) {
    return 0;
  }
  if (*v23 == *v25 && v24 == v26 || (v28 = sub_1C1520A9C(), uint64_t v27 = v21, v29 = v28, result = 0, (v29 & 1) != 0))
  {
LABEL_10:
    uint64_t v31 = a1 + *(int *)(v27 + 28);
    uint64_t v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8F0];
    uint64_t v50 = v4;
    uint64_t v51 = v11;
    uint64_t v33 = v27;
    sub_1BFEFC57C(v31, (uint64_t)v20, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
    uint64_t v49 = v33;
    uint64_t v34 = (uint64_t)v51;
    sub_1BFEFC57C(a2 + *(int *)(v33 + 28), (uint64_t)v17, (unint64_t *)&qword_1EA1995B0, v32);
    uint64_t v35 = v34 + *(int *)(v9 + 48);
    sub_1BFEFC57C((uint64_t)v20, v34, (unint64_t *)&qword_1EA1995B0, v32);
    uint64_t v52 = v35;
    uint64_t v36 = v50;
    sub_1BFEFC57C((uint64_t)v17, v35, (unint64_t *)&qword_1EA1995B0, v32);
    uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
    if (v37(v34, 1, v36) == 1)
    {
      uint64_t v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8F0];
      sub_1BFE546A8((uint64_t)v17, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
      sub_1BFE546A8((uint64_t)v20, (unint64_t *)&qword_1EA1995B0, v38);
      if (v37(v52, 1, v36) == 1)
      {
        sub_1BFE546A8(v34, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
LABEL_17:
        uint64_t v43 = *(int *)(v49 + 32);
        uint64_t v44 = (void *)(a1 + v43);
        uint64_t v45 = *(void *)(a1 + v43 + 8);
        uint64_t v46 = (void *)(a2 + v43);
        uint64_t v47 = v46[1];
        if (v45)
        {
          if (v47 && (*v44 == *v46 && v45 == v47 || (sub_1C1520A9C() & 1) != 0)) {
            return 1;
          }
        }
        else if (!v47)
        {
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_1BFEFC57C(v34, (uint64_t)v14, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
      if (v37(v52, 1, v36) != 1)
      {
        uint64_t v40 = v53;
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v7, v52, v36);
        sub_1BFDCD6A0(&qword_1EA199758, MEMORY[0x1E4FAA8F0]);
        LODWORD(v52) = sub_1C151E5CC();
        uint64_t v41 = *(void (**)(char *, uint64_t))(v40 + 8);
        v41(v7, v36);
        char v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8F0];
        sub_1BFE546A8((uint64_t)v17, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
        sub_1BFE546A8((uint64_t)v20, (unint64_t *)&qword_1EA1995B0, v42);
        v41(v14, v36);
        sub_1BFE546A8(v34, (unint64_t *)&qword_1EA1995B0, v42);
        if ((v52 & 1) == 0) {
          return 0;
        }
        goto LABEL_17;
      }
      uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8F0];
      sub_1BFE546A8((uint64_t)v17, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0]);
      sub_1BFE546A8((uint64_t)v20, (unint64_t *)&qword_1EA1995B0, v39);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v36);
    }
    sub_1BFDCD640(v34, (uint64_t (*)(void))sub_1C02F61B8);
    return 0;
  }
  return result;
}

unint64_t sub_1C02F1A48()
{
  unint64_t result = qword_1EA1995C0;
  if (!qword_1EA1995C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1995C0);
  }
  return result;
}

uint64_t sub_1C02F1A9C(uint64_t a1)
{
  uint64_t result = sub_1BFDCD6A0(qword_1EA1995E0, (void (*)(uint64_t))type metadata accessor for FormatVersioningError);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C02F1AF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Dictionary<>.formatCodingVersionInfo.getter(*a1, a2);
}

uint64_t sub_1C02F1B00()
{
  return 0;
}

uint64_t sub_1C02F1B10()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatVersionInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatVersioningMode(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      uint64_t v8 = sub_1C151928C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1C151928C();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_1BFEFD268(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FormatVersionInfo(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FormatVersioningMode(0);
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    uint64_t v4 = sub_1C151928C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for FormatVersionInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatVersioningMode(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1C151928C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BFEFD268(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for FormatVersionInfo(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFDCD640((uint64_t)a1, type metadata accessor for FormatVersioningMode);
    uint64_t v6 = type metadata accessor for FormatVersioningMode(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v15)
  {
LABEL_10:
    sub_1BFEFD268(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_11:
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for FormatVersionInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatVersioningMode(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1C151928C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BFEFD268(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for FormatVersionInfo(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFDCD640((uint64_t)a1, type metadata accessor for FormatVersioningMode);
    uint64_t v6 = type metadata accessor for FormatVersioningMode(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v15)
  {
LABEL_10:
    sub_1BFEFD268(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_11:
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02F29D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatVersioningMode(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_1BFEFD268(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

void sub_1C02F2B14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FormatVersioningMode(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_1BFEFD268(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatVersioningError(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151928C();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FormatVersioningError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatVersioningError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatVersioningError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FormatVersioningError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for FormatVersioningError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVersioningError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_5Tm);
}

uint64_t storeEnumTagSinglePayload for FormatVersioningError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_6Tm);
}

uint64_t sub_1C02F3158()
{
  uint64_t result = sub_1C151928C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatDeprecationWarning(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151928C();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (char *)a1 + v10;
    int v15 = (char *)a2 + v10;
    uint64_t v16 = sub_1C151801C();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      sub_1BFEFD268(0, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FormatDeprecationWarning(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_1C151801C();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDeprecationWarning(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (const void *)(a2 + v9);
  uint64_t v15 = sub_1C151801C();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    sub_1BFEFD268(0, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatDeprecationWarning(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_1C151801C();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BFEFD268(0, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FormatDeprecationWarning(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1C151801C();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BFEFD268(0, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for FormatDeprecationWarning(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_1C151801C();
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1BFEFD268(0, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDeprecationWarning(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02F3D9C);
}

uint64_t sub_1C02F3D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    sub_1BFEFD268(0, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 28);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for FormatDeprecationWarning(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02F3F1C);
}

uint64_t sub_1C02F3F1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C151928C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  else
  {
    sub_1BFEFD268(0, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1C02F407C()
{
  sub_1C151928C();
  if (v0 <= 0x3F)
  {
    sub_1BFEFD268(319, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FormatDeprecationWarning.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02F424CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDeprecationWarning.CodingKeys()
{
  return &type metadata for FormatDeprecationWarning.CodingKeys;
}

uint64_t *sub_1C02F4284(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = sub_1C151928C();
      uint64_t v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16);
      v15(a1, a2, v14);
      sub_1BFF05D18();
      uint64_t v17 = v16;
      v15((uint64_t *)((char *)a1 + *(int *)(v16 + 48)), (uint64_t *)((char *)a2 + *(int *)(v16 + 48)), v14);
      uint64_t v18 = *(int *)(v17 + 64);
      int v19 = (uint64_t *)((char *)a1 + v18);
      int v20 = (uint64_t *)((char *)a2 + v18);
      uint64_t v21 = v20[1];
      *int v19 = *v20;
      v19[1] = v21;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_1C151928C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      uint64_t v9 = *(int *)(v8 + 48);
      unint64_t v10 = (uint64_t *)((char *)a1 + v9);
      uint64_t v11 = (uint64_t *)((char *)a2 + v9);
      uint64_t v12 = v11[1];
      *unint64_t v10 = *v11;
      v10[1] = v12;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v22 = sub_1C151928C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C02F448C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v5 = sub_1C151928C();
      unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(a1, v5);
      sub_1BFF05D18();
      v6(a1 + *(int *)(v7 + 48), v5);
      break;
    case 1:
      uint64_t v8 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      break;
    case 0:
      uint64_t v3 = sub_1C151928C();
      unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    default:
      return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02F4614(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1BFDCD640(a1, type metadata accessor for FormatVersionRequirement.Value);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_1C151928C();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      sub_1BFF05D18();
      uint64_t v11 = v10;
      v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
      uint64_t v7 = *(int *)(v11 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v14 = sub_1C151928C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        goto LABEL_8;
      }
      uint64_t v5 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      uint64_t v7 = *(int *)(v6 + 48);
    }
    uint64_t v12 = (void *)(a1 + v7);
    uint64_t v13 = (void *)(a2 + v7);
    *uint64_t v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C02F47D0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_1C151928C();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    sub_1BFF05D18();
    uint64_t v11 = v10;
    v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
    uint64_t v7 = *(int *)(v11 + 64);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v12 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_7;
    }
    uint64_t v5 = sub_1C151928C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
    uint64_t v7 = *(int *)(v6 + 48);
  }
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C02F4954(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1BFDCD640(a1, type metadata accessor for FormatVersionRequirement.Value);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_1C151928C();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
      v9(a1, a2, v8);
      sub_1BFF05D18();
      uint64_t v11 = v10;
      v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
      uint64_t v7 = *(int *)(v11 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v12 = sub_1C151928C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        goto LABEL_8;
      }
      uint64_t v5 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      uint64_t v7 = *(int *)(v6 + 48);
    }
    *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
LABEL_8:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *sub_1C02F4AFC(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for FormatVersionRequirement.Value(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = sub_1C151928C();
      uint64_t v14 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(a1, a2, v13);
      sub_1BFF05D18();
      uint64_t v16 = v15;
      v14((uint64_t *)((char *)a1 + *(int *)(v15 + 48)), (uint64_t *)((char *)a2 + *(int *)(v15 + 48)), v13);
      uint64_t v17 = *(int *)(v16 + 64);
      uint64_t v18 = (uint64_t *)((char *)a1 + v17);
      int v19 = (uint64_t *)((char *)a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = sub_1C151928C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      uint64_t v10 = (uint64_t *)((char *)a2 + v8);
      uint64_t v11 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v11;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v21 = sub_1C151928C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C02F4D0C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FormatVersionRequirement.Value(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_1C151928C();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    sub_1BFF05D18();
    uint64_t v11 = v10;
    v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
    uint64_t v7 = *(int *)(v11 + 64);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v15 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      goto LABEL_7;
    }
    uint64_t v5 = sub_1C151928C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
    uint64_t v7 = *(int *)(v6 + 48);
  }
  uint64_t v12 = (void *)(a1 + v7);
  uint64_t v13 = (void *)(a2 + v7);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C02F4EA4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1BFDCD640(a1, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_1C151928C();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      sub_1BFF05D18();
      uint64_t v11 = v10;
      v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
      uint64_t v7 = *(int *)(v11 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v14 = sub_1C151928C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        goto LABEL_8;
      }
      uint64_t v5 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      uint64_t v7 = *(int *)(v6 + 48);
    }
    uint64_t v12 = (void *)(a1 + v7);
    uint64_t v13 = (void *)(a2 + v7);
    *uint64_t v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C02F5068(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FormatVersionRequirement.Value(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_1C151928C();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    sub_1BFF05D18();
    uint64_t v11 = v10;
    v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
    uint64_t v7 = *(int *)(v11 + 64);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v12 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_7;
    }
    uint64_t v5 = sub_1C151928C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
    uint64_t v7 = *(int *)(v6 + 48);
  }
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C02F51F4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1BFDCD640(a1, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_1C151928C();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
      v9(a1, a2, v8);
      sub_1BFF05D18();
      uint64_t v11 = v10;
      v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
      uint64_t v7 = *(int *)(v11 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v12 = sub_1C151928C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        goto LABEL_8;
      }
      uint64_t v5 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      uint64_t v7 = *(int *)(v6 + 48);
    }
    *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
LABEL_8:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C02F53A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02F53B8);
}

uint64_t sub_1C02F53B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_16Tm(a1, a2, a3, type metadata accessor for FormatVersionRequirement.Value);
}

uint64_t sub_1C02F53D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02F53E4);
}

uint64_t sub_1C02F53E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_17Tm(a1, a2, a3, a4, type metadata accessor for FormatVersionRequirement.Value);
}

uint64_t sub_1C02F53FC()
{
  return sub_1BFDCD6A0(&qword_1EA199688, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1C02F5444(void *a1)
{
  a1[1] = sub_1BFDCD6A0(&qword_1EB891B80, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  a1[2] = sub_1BFDCD6A0(&qword_1EA199690, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  uint64_t result = sub_1BFDCD6A0(&qword_1EA199688, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  a1[3] = result;
  return result;
}

uint64_t sub_1C02F54F0()
{
  return sub_1BFDCD6A0(&qword_1EA199698, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.Value);
}

uint64_t sub_1C02F5538(void *a1)
{
  a1[1] = sub_1BFDCD6A0(&qword_1EA1996A0, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.Value);
  a1[2] = sub_1BFDCD6A0(&qword_1EA1996A8, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.Value);
  uint64_t result = sub_1BFDCD6A0(&qword_1EA199698, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement.Value);
  a1[3] = result;
  return result;
}

unint64_t sub_1C02F55E8()
{
  unint64_t result = qword_1EA1996B0;
  if (!qword_1EA1996B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1996B0);
  }
  return result;
}

unint64_t sub_1C02F5640()
{
  unint64_t result = qword_1EA1996B8;
  if (!qword_1EA1996B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1996B8);
  }
  return result;
}

unint64_t sub_1C02F5698()
{
  unint64_t result = qword_1EA1996C0;
  if (!qword_1EA1996C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1996C0);
  }
  return result;
}

uint64_t sub_1C02F56EC()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C02F5738(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461636572706564 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6563616C706572 && a2 == 0xEB00000000746E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C02F5850(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6375646F72746E69 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461636572706564 && a2 == 0xEA00000000006465 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6563616C706572 && a2 == 0xEB00000000746E65)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C02F59D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746567726174 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461636572706564 && a2 == 0xEC0000006E496465 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6563616C706572 && a2 == 0xEB00000000746E65 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6150676E69646F63 && a2 == 0xEA00000000006874 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65727574616566 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1C02F5C2C()
{
  unint64_t result = qword_1EA1996D0;
  if (!qword_1EA1996D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1996D0);
  }
  return result;
}

uint64_t sub_1C02F5C80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C02F5CE8()
{
  if (!qword_1EA1996D8)
  {
    type metadata accessor for FormatVersionRequirement.Value(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1996D8);
    }
  }
}

void sub_1C02F5D4C()
{
  if (!qword_1EA1996E0)
  {
    sub_1C02F5DB4(255, &qword_1EA1996E8);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1996E0);
    }
  }
}

void sub_1C02F5DB4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_1C151928C();
    sub_1BFEFDE40(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C02F5E4C()
{
  if (!qword_1EA1996F0)
  {
    sub_1C151928C();
    sub_1BFEFDE40(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1996F0);
    }
  }
}

uint64_t sub_1C02F5EE0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C02F5F08()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA199780);
}

uint64_t type metadata accessor for FormatVersionRequirement.DeprecatedRequirement(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA199770);
}

uint64_t type metadata accessor for FormatVersionRequirement.IntroducedRequirement(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA199760);
}

unint64_t sub_1C02F5F90()
{
  unint64_t result = qword_1EA199700;
  if (!qword_1EA199700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199700);
  }
  return result;
}

unint64_t sub_1C02F5FE4()
{
  unint64_t result = qword_1EA199720;
  if (!qword_1EA199720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199720);
  }
  return result;
}

uint64_t sub_1C02F6038()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02F6040(uint64_t a1)
{
  return a1;
}

void sub_1C02F609C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C017F270(a12, a13, a14, a15, a16);
  }
}

uint64_t sub_1C02F6130(uint64_t a1)
{
  sub_1BFFF4C64(0, &qword_1EB871758, &qword_1EB871750, MEMORY[0x1E4F7AE48], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C02F61B8()
{
  if (!qword_1EA199750)
  {
    sub_1BFEFD268(255, (unint64_t *)&qword_1EA1995B0, MEMORY[0x1E4FAA8F0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA199750);
    }
  }
}

uint64_t sub_1C02F624C()
{
  return sub_1C1520ECC();
}

ValueMetadata *type metadata accessor for FormatVersionRequirement.Value.CodingType()
{
  return &type metadata for FormatVersionRequirement.Value.CodingType;
}

uint64_t sub_1C02F6288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1C02F62F4(uint64_t a1)
{
  uint64_t v2 = sub_1C151928C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1C02F6358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C02F63BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C02F6420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C02F6484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C02F64E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02F64FC);
}

uint64_t sub_1C02F64FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_16Tm(a1, a2, a3, MEMORY[0x1E4FAB0A8]);
}

uint64_t __swift_get_extra_inhabitant_index_16Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  return v7(a1, a2, v6);
}

uint64_t sub_1C02F6584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02F6598);
}

uint64_t sub_1C02F6598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_17Tm(a1, a2, a3, a4, MEMORY[0x1E4FAB0A8]);
}

uint64_t __swift_store_extra_inhabitant_index_17Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(a1, a2, a2, v7);
}

uint64_t sub_1C02F6624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C02F663C(a1, a2, a3, MEMORY[0x1E4FAB0A8]);
}

uint64_t sub_1C02F663C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C02F66CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151928C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C02F67A4(uint64_t a1)
{
  uint64_t v2 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02F681C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C02F68A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02F6940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C02F69BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02F6A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02F6A5C);
}

uint64_t sub_1C02F6A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1C02F6B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02F6B40);
}

uint64_t sub_1C02F6B40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C151928C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_1C02F6C00()
{
  uint64_t result = sub_1C151928C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C02F6C94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151928C();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = (uint64_t *)((char *)a1 + v9);
    int v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C02F6D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02F6E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C02F6EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02F6FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C02F7050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02F7104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02F7118);
}

uint64_t __swift_get_extra_inhabitant_index_5Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1C02F71EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02F7200);
}

uint64_t __swift_store_extra_inhabitant_index_6Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C151928C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

uint64_t sub_1C02F72C4()
{
  uint64_t result = sub_1C151928C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVersionRequirement.CodingKeys()
{
  return &type metadata for FormatVersionRequirement.CodingKeys;
}

unint64_t sub_1C02F7374()
{
  unint64_t result = qword_1EA199790;
  if (!qword_1EA199790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199790);
  }
  return result;
}

unint64_t sub_1C02F73CC()
{
  unint64_t result = qword_1EA199798;
  if (!qword_1EA199798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199798);
  }
  return result;
}

unint64_t sub_1C02F7424()
{
  unint64_t result = qword_1EA1997A0;
  if (!qword_1EA1997A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1997A0);
  }
  return result;
}

unint64_t sub_1C02F747C()
{
  unint64_t result = qword_1EA1997A8;
  if (!qword_1EA1997A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1997A8);
  }
  return result;
}

unint64_t sub_1C02F74D0()
{
  unint64_t result = qword_1EA1997B0;
  if (!qword_1EA1997B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1997B0);
  }
  return result;
}

unint64_t sub_1C02F7524()
{
  unint64_t result = qword_1EA1997C0;
  if (!qword_1EA1997C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1997C0);
  }
  return result;
}

unint64_t sub_1C02F7578()
{
  unint64_t result = qword_1EA1997D0;
  if (!qword_1EA1997D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1997D0);
  }
  return result;
}

unint64_t sub_1C02F75CC()
{
  unint64_t result = qword_1EA1997E0;
  if (!qword_1EA1997E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1997E0);
  }
  return result;
}

void sub_1C02F7620(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *_s8NewsFeed24FormatVersionRequirementV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C02F7724);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVersionRequirement.IntroducedRequirement.CodingKeys()
{
  return &type metadata for FormatVersionRequirement.IntroducedRequirement.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FormatVersionRequirement.DeprecatedRequirement.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02F7828);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVersionRequirement.DeprecatedRequirement.CodingKeys()
{
  return &type metadata for FormatVersionRequirement.DeprecatedRequirement.CodingKeys;
}

unsigned char *_s8NewsFeed24FormatVersionRequirementV5ValueO10CodingTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02F792CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVersionRequirement.IntroducedThenDeprecatedRequirement.CodingKeys()
{
  return &type metadata for FormatVersionRequirement.IntroducedThenDeprecatedRequirement.CodingKeys;
}

unint64_t sub_1C02F7968()
{
  unint64_t result = qword_1EA199800;
  if (!qword_1EA199800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199800);
  }
  return result;
}

unint64_t sub_1C02F79C0()
{
  unint64_t result = qword_1EA199808;
  if (!qword_1EA199808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199808);
  }
  return result;
}

unint64_t sub_1C02F7A18()
{
  unint64_t result = qword_1EA199810;
  if (!qword_1EA199810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199810);
  }
  return result;
}

unint64_t sub_1C02F7A70()
{
  unint64_t result = qword_1EA199818;
  if (!qword_1EA199818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199818);
  }
  return result;
}

unint64_t sub_1C02F7AC8()
{
  unint64_t result = qword_1EA199820;
  if (!qword_1EA199820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199820);
  }
  return result;
}

unint64_t sub_1C02F7B20()
{
  unint64_t result = qword_1EA199828;
  if (!qword_1EA199828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199828);
  }
  return result;
}

unint64_t sub_1C02F7B78()
{
  unint64_t result = qword_1EA199830;
  if (!qword_1EA199830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199830);
  }
  return result;
}

unint64_t sub_1C02F7BD0()
{
  unint64_t result = qword_1EA199838;
  if (!qword_1EA199838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199838);
  }
  return result;
}

unint64_t sub_1C02F7C28()
{
  unint64_t result = qword_1EA199840;
  if (!qword_1EA199840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199840);
  }
  return result;
}

uint64_t sub_1C02F7C84()
{
  return 0x6E776F6E6B6E75;
}

uint64_t PuzzleStatsState.environment.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleStatsState.cumulativeStats.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleStatsState.lastProcessedDate.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleStatsState.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleStatsState() + 28);
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PuzzleStatsState.debugDescription.getter()
{
  return 0;
}

uint64_t sub_1C02F80C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C02F8868(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02F80F0(uint64_t a1)
{
  unint64_t v2 = sub_1BFDA6F30();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C02F812C(uint64_t a1)
{
  unint64_t v2 = sub_1BFDA6F30();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleStatsState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C151631C();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

void *assignWithCopy for PuzzleStatsState(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for PuzzleStatsState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1C02F83BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151631C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C02F846C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C151631C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatsState.CodingKeys()
{
  return &type metadata for PuzzleStatsState.CodingKeys;
}

unint64_t sub_1C02F8550()
{
  unint64_t result = qword_1EA199848;
  if (!qword_1EA199848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199848);
  }
  return result;
}

uint64_t sub_1C02F85A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v29 - v17;
  uint64_t v34 = v5[3];
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v30((char *)&v29 - v17, a1, v8, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v8) == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = v32;
    swift_bridgeObjectRetain();
    sub_1C007DB58((uint64_t)v18, (uint64_t (*)(void))sub_1BFF97C40);
    sub_1C0353644(v31, v19, (uint64_t)v14);
    swift_bridgeObjectRelease();
    sub_1C007DB58((uint64_t)v14, (uint64_t (*)(void))sub_1BFF97C40);
    uint64_t v20 = v34;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v18, v8);
    swift_bridgeObjectRetain();
    uint64_t v21 = v32;
    swift_bridgeObjectRetain();
    uint64_t v22 = v34;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = v22;
    sub_1C1065D40((uint64_t)v11, v31, v21, isUniquelyReferenced_nonNull_native);
    uint64_t v20 = v33;
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = *v5;
  uint64_t v24 = v5[1];
  uint64_t v26 = v5[2];
  uint64_t v27 = type metadata accessor for PuzzleStatsState();
  ((void (*)(char *, char *, uint64_t))v30)((char *)a4 + *(int *)(v27 + 28), (char *)v5 + *(int *)(v27 + 28), v8);
  *a4 = v25;
  a4[1] = v24;
  a4[2] = v26;
  a4[3] = v20;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02F8868(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974616C756D7563 && a2 == 0xEF73746174536576 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C160A6D0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t GenericDataVisualizationResponseItem.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GenericDataVisualizationResponseItem.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C02F8EDC(0, &qword_1EA199850, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02F8CDC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  type metadata accessor for WebEmbedDataVisualizationURLDataSource();
  char v16 = 1;
  sub_1C02F8FCC(&qword_1EB86A8C0);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C15205EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C02F8CDC()
{
  unint64_t result = qword_1EA199858;
  if (!qword_1EA199858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199858);
  }
  return result;
}

uint64_t GenericDataVisualizationResponseItem.encode(to:)(void *a1)
{
  sub_1C02F8EDC(0, &qword_1EA199860, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - v6;
  v13[0] = *(void *)(v1 + 16);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1;
  uint64_t v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1C02F8CDC();
  sub_1C1520F0C();
  char v15 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    v13[1] = v13[0];
    char v14 = 1;
    sub_1C00BB894(0);
    sub_1C02F8F40();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

void sub_1C02F8EDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C02F8CDC();
    unint64_t v7 = a3(a1, &type metadata for GenericDataVisualizationResponseItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C02F8F40()
{
  unint64_t result = qword_1EB86B2D0;
  if (!qword_1EB86B2D0)
  {
    sub_1C00BB894(255);
    sub_1C02F8FCC((unint64_t *)&unk_1EB86A8B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B2D0);
  }
  return result;
}

uint64_t sub_1C02F8FCC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WebEmbedDataVisualizationURLDataSource();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C02F9010()
{
  if (*v0) {
    return 0x53617461446C7275;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C02F905C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C02F9348(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02F9084(uint64_t a1)
{
  unint64_t v2 = sub_1C02F8CDC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C02F90C0(uint64_t a1)
{
  unint64_t v2 = sub_1C02F8CDC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C02F90FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return GenericDataVisualizationResponseItem.init(from:)(a1, a2);
}

uint64_t sub_1C02F9114(void *a1)
{
  return GenericDataVisualizationResponseItem.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for GenericDataVisualizationResponseItem()
{
  return &type metadata for GenericDataVisualizationResponseItem;
}

unsigned char *storeEnumTagSinglePayload for GenericDataVisualizationResponseItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02F9208);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericDataVisualizationResponseItem.CodingKeys()
{
  return &type metadata for GenericDataVisualizationResponseItem.CodingKeys;
}

unint64_t sub_1C02F9244()
{
  unint64_t result = qword_1EA199868;
  if (!qword_1EA199868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199868);
  }
  return result;
}

unint64_t sub_1C02F929C()
{
  unint64_t result = qword_1EA199870;
  if (!qword_1EA199870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199870);
  }
  return result;
}

unint64_t sub_1C02F92F4()
{
  unint64_t result = qword_1EA199878;
  if (!qword_1EA199878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199878);
  }
  return result;
}

uint64_t sub_1C02F9348(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x53617461446C7275 && a2 == 0xEE0073656372756FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t FeedGroupKind.description.getter()
{
  unint64_t result = 7364935;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
    case 2:
      unint64_t result = 0x656E696C64616548;
      break;
    case 3:
      unint64_t result = 0x5320736575737349;
      break;
    case 4:
      unint64_t result = 0x4720736575737349;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 25665;
      break;
    case 8:
      unint64_t result = 0x69726F6765746143;
      break;
    case 9:
      unint64_t result = 0x656D656761676E45;
      break;
    case 0xALL:
      unint64_t result = 0x6E6967756C50;
      break;
    default:
      swift_retain();
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t result = 0x472074616D726F46;
      break;
  }
  return result;
}

unint64_t destroy for FeedGroupKind(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FeedGroupKind(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v5 = *(void *)(a2 + 24);
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v6;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *assignWithCopy for FeedGroupKind(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v6 = *(_OWORD *)a2;
    long long v7 = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    *(_OWORD *)a1 = v6;
    *((_OWORD *)a1 + 1) = v7;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedGroupKind(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupKind(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF4 && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483637);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 10;
  if (v4 >= 0xC) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedGroupKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF5)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483637;
    if (a3 >= 0x7FFFFFF5) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF5) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 10;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V15()
{
  return &type metadata for A18_V15;
}

uint64_t sub_1C02F99EC(void *a1)
{
  uint64_t v3 = v1;
  sub_1C02FE3C4(0, &qword_1EA199930, (uint64_t (*)(void))sub_1C02FE370, (uint64_t)&type metadata for A18_V15.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02FE370();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C02FE42C(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C02F9C34(uint64_t a1)
{
  unint64_t v2 = sub_1C02FE370();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C02F9C70(uint64_t a1)
{
  unint64_t v2 = sub_1C02FE370();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C02F9CAC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C02FE0C0(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C02F9CF4(void *a1)
{
  return sub_1C02F99EC(a1);
}

uint64_t sub_1C02F9D0C()
{
  sub_1C02FDD20();
  return sub_1C151798C();
}

uint64_t sub_1C02F9D88@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C02FE3C4(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C02F9E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t v47 = a3;
  uint64_t v50 = sub_1C151635C();
  uint64_t v6 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v57 = *(void *)(v9 - 8);
  uint64_t v58 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v70 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v47 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v53 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v51 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  char v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  sub_1BFF1AFA4(a1, v51, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  char v54 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v49 = sub_1C151633C();
  uint64_t v48 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v50);
  uint64_t v68 = &type metadata for A18_V15;
  unint64_t v20 = sub_1C0185FF0();
  unint64_t v69 = v20;
  LOBYTE(v66) = v16;
  *((void *)&v66 + 1) = v17;
  unsigned __int8 v67 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v60 = sub_1C1520FAC();
  uint64_t v61 = v22;
  uint64_t v64 = 95;
  unint64_t v65 = 0xE100000000000000;
  uint64_t v62 = 45;
  unint64_t v63 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = v70;
  uint64_t v27 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v28 = v48;
  uint64_t *v27 = v49;
  v27[1] = v28;
  sub_1BFC66384((uint64_t)&v66, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v51, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v29, 0, 1, v53);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v30, 0, 1, v58);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  sub_1BFFFC630(v17, v18);
  uint64_t v68 = &type metadata for A18_V15;
  unint64_t v69 = v20;
  LOBYTE(v66) = v16;
  *((void *)&v66 + 1) = v17;
  unsigned __int8 v67 = v18;
  sub_1BFF1AFA4(v55, v26, (uint64_t (*)(void))v54);
  sub_1BFFFC7A0(v17, v18);
  uint64_t v31 = v59;
  uint64_t v32 = sub_1C001E608((uint64_t)&unk_1F1B6DBF8, 0, 0, 0, 4, 0, 0, 0);
  if (v31)
  {
    swift_release();
    sub_1BFF1F284(v26, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  }
  else
  {
    uint64_t v33 = v32;
    sub_1C00192A8(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v35 = (void *)(v34 + 16);
    swift_beginAccess();
    uint64_t v36 = *(void **)(v34 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v34 + 16) = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v36 = sub_1BFFB83AC(0, v36[2] + 1, 1, v36);
      *uint64_t v35 = v36;
    }
    unint64_t v39 = v36[2];
    unint64_t v38 = v36[3];
    if (v39 >= v38 >> 1)
    {
      uint64_t v36 = sub_1BFFB83AC((void *)(v38 > 1), v39 + 1, 1, v36);
      *uint64_t v35 = v36;
    }
    _OWORD v36[2] = v39 + 1;
    uint64_t v40 = &v36[2 * v39];
    v40[4] = sub_1C064667C;
    v40[5] = 0;
    swift_endAccess();
    uint64_t v41 = sub_1C001E608((uint64_t)&unk_1F1B6DC20, 0, 0, v34, 0, 0, 0, 0);
    swift_release();
    uint64_t v60 = v33;
    sub_1C0018900(v41);
    uint64_t v42 = v60;
    uint64_t v43 = type metadata accessor for A18_V15.Bound();
    uint64_t v44 = v47;
    v47[3] = v43;
    v44[4] = sub_1C02FE42C(&qword_1EA199890, (void (*)(uint64_t))type metadata accessor for A18_V15.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v44);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v66, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v70, (uint64_t)boxed_opaque_existential_0 + *(int *)(v43 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v43 + 28)) = v42;
  }
  return result;
}

double sub_1C02FA518@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  *(void *)&long long v39 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  long long v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A18_V15.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(int *)(v8 + 40);
  uint64_t v10 = v7;
  uint64_t v40 = v7;
  uint64_t v11 = *(void *)(v7 + v9);
  uint64_t v12 = *(void *)(v11 + 16);
  double v13 = *(double *)(v10 + *(int *)(v8 + 32));
  sub_1BFC66384(v12 + 16, (uint64_t)v50);
  sub_1BFC66384(v12 + 56, (uint64_t)v49);
  double v14 = v13 * *(double *)(v12 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v50, inited + 16);
  sub_1BFC773DC(v49, inited + 56);
  *(double *)(inited + 96) = v14;
  v48[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v48, (uint64_t *)&v51);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1C00737F8();
  uint64_t v16 = sub_1C151ECCC();
  *(void *)(v16 + 16) = 2;
  sub_1BFC66384((uint64_t)&v51, v16 + 32);
  sub_1BFC773DC(&v51, v16 + 72);
  uint64_t v17 = *(void *)(v11 + 16);
  sub_1BFC66384(v17 + 16, (uint64_t)v50);
  sub_1BFC66384(v17 + 56, (uint64_t)v49);
  double v18 = v13 * *(double *)(v17 + 96);
  uint64_t v19 = swift_initStackObject();
  sub_1BFC773DC(v50, v19 + 16);
  sub_1BFC773DC(v49, v19 + 56);
  *(double *)(v19 + 96) = v18;
  v48[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v48, (uint64_t *)&v51);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v19 + 16);
  __swift_destroy_boxed_opaque_existential_1(v19 + 56);
  uint64_t v20 = sub_1BFEB3714((uint64_t)&v51, *(void *)(*(void *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(void *)&long long v51 = v16;
  sub_1BFEB37F8(v20);
  uint64_t v21 = v51;
  v47[2] = v2;
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C06472C0(v22, v21, (void (*)(char *, uint64_t))sub_1C02FDCAC, (uint64_t)v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v24 = *(void *)(v23 + 16);
  if (v24 >= 2) {
    uint64_t v25 = 2;
  }
  else {
    uint64_t v25 = *(void *)(v23 + 16);
  }
  uint64_t v26 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
  unint64_t v27 = v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  uint64_t v28 = (2 * v24) | 1;
  uint64_t v29 = *MEMORY[0x1E4FAB6D8];
  uint64_t v30 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v5, v29, v30);
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v39);
  uint64_t v42 = v23;
  uint64_t v43 = v23;
  unint64_t v44 = v27;
  uint64_t v45 = v25;
  uint64_t v46 = v28;
  sub_1C02FDE00(0, &qword_1EA1998B0, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1C1517BEC();
  uint64_t v31 = sub_1C1517BFC();
  long long v39 = v51;
  uint64_t v32 = v52;
  uint64_t v33 = v53;
  *(void *)&long long v51 = v23;
  *(void *)&v50[0] = v54;
  MEMORY[0x1F4188790](v31);
  sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v51 = v34;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v35 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = v41;
  *uint64_t v41 = 0;
  double result = *(double *)&v39;
  *(_OWORD *)(v36 + 8) = v39;
  *((void *)v36 + 3) = v32;
  *((void *)v36 + 4) = v33;
  uint64_t v38 = MEMORY[0x1E4FBC860];
  *((void *)v36 + 5) = v35;
  *((void *)v36 + 6) = v38;
  return result;
}

uint64_t sub_1C02FAB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C02FABD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C02FE3C4(0, &qword_1EA1998C8, (uint64_t (*)(void))sub_1C02FDCCC, (uint64_t)&type metadata for A18_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)&v20[-v15];
  uint64_t v26 = a1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 18;
  *uint64_t v16 = v17;
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FABA10], v13);
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  double v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C02FDE00(0, &qword_1EA1998D0, MEMORY[0x1E4FAB6F0]);
  sub_1C02FDDBC(&qword_1EA1998D8, &qword_1EA1998D0, v18);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1C02FADEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v59 = a5;
  uint64_t v60 = a6;
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v56 = a2;
  uint64_t v50 = sub_1C02FDCCC;
  sub_1C02FE3C4(0, &qword_1EA1998C8, (uint64_t (*)(void))sub_1C02FDCCC, (uint64_t)&type metadata for A18_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v35 - v10);
  uint64_t v66 = a1;
  uint64_t v40 = a1;
  uint64_t v12 = sub_1C151729C();
  uint64_t v13 = swift_allocBox();
  unsigned int v54 = *MEMORY[0x1E4FAB4E8];
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v53 = *(void (**)(uint64_t))(v14 + 104);
  uint64_t v55 = v14 + 104;
  v53(v15);
  *uint64_t v11 = v13;
  unsigned int v52 = *MEMORY[0x1E4FAB940];
  uint64_t v16 = *(void (**)(uint64_t *))(v9 + 104);
  v16(v11);
  uint64_t v49 = v9 + 104;
  uint64_t v48 = v16;
  uint64_t v17 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C02FDE00(0, &qword_1EA1998E0, MEMORY[0x1E4FAB4D0]);
  uint64_t v41 = v18;
  v35[1] = sub_1C02FDDBC(&qword_1EA1998E8, &qword_1EA1998E0, v17);
  sub_1C151738C();
  uint64_t v19 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  uint64_t v42 = v9 + 8;
  uint64_t v43 = v19;
  v19(v11, v8);
  uint64_t v66 = a1;
  unsigned int v51 = *MEMORY[0x1E4FABA28];
  v16(v11);
  sub_1C02FDE84();
  uint64_t v47 = v20;
  sub_1C02FE3C4(0, &qword_1EA1998F8, (uint64_t (*)(void))v50, (uint64_t)&type metadata for A18_V15.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v38 = v21;
  uint64_t v22 = *(unsigned __int8 *)(*(void *)(v21 - 8) + 80);
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v50 = (unint64_t (*)())(((v22 + 32) & ~v22) + *(void *)(v23 + 72));
  uint64_t v24 = (v22 + 32) & ~v22;
  uint64_t v45 = v24;
  uint64_t v46 = v22 | 7;
  uint64_t v25 = swift_allocObject();
  long long v44 = xmmword_1C1529AE0;
  *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
  unsigned int v36 = *MEMORY[0x1E4FAB638];
  uint64_t v26 = *(void (**)(void))(v23 + 104);
  uint64_t v37 = v23 + 104;
  long long v39 = (void (*)(uint64_t, void, uint64_t))v26;
  v26(v25 + v24);
  uint64_t v65 = v56;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  uint64_t v27 = v8;
  uint64_t v28 = v43;
  v43(v11, v8);
  uint64_t v29 = v40;
  uint64_t v66 = v40;
  uint64_t v30 = swift_allocBox();
  ((void (*)(uint64_t, void, uint64_t))v53)(v31, v54, v12);
  *uint64_t v11 = v30;
  uint64_t v32 = v48;
  ((void (*)(uint64_t *, void, uint64_t))v48)(v11, v52, v27);
  sub_1C151738C();
  v28(v11, v27);
  uint64_t v66 = v29;
  ((void (*)(uint64_t *, void, uint64_t))v32)(v11, v51, v27);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v44;
  v39(v33 + v45, v36, v38);
  uint64_t v61 = v57;
  uint64_t v62 = v58;
  uint64_t v63 = v59;
  uint64_t v64 = v60;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v28)(v11, v27);
}

uint64_t sub_1C02FB3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C02FE3C4(0, &qword_1EA1998C8, (uint64_t (*)(void))sub_1C02FDCCC, (uint64_t)&type metadata for A18_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 9;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C02FDE00(0, &qword_1EA1998E0, MEMORY[0x1E4FAB4D0]);
  sub_1C02FDDBC(&qword_1EA1998E8, &qword_1EA1998E0, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 9;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C02FB65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  long long v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02FE3C4(0, &qword_1EA1998C8, (uint64_t (*)(void))sub_1C02FDCCC, (uint64_t)&type metadata for A18_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FABA28], v17);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F284((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F284((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C02FDE00(0, &qword_1EA1998E0, MEMORY[0x1E4FAB4D0]);
  sub_1C02FDDBC(&qword_1EA1998E8, &qword_1EA1998E0, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C02FBC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  long long v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02FE3C4(0, &qword_1EA1998C8, (uint64_t (*)(void))sub_1C02FDCCC, (uint64_t)&type metadata for A18_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FABA28], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F284((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F284((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C02FDE00(0, &qword_1EA1998E0, MEMORY[0x1E4FAB4D0]);
  sub_1C02FDDBC(&qword_1EA1998E8, &qword_1EA1998E0, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

void sub_1C02FC200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  sub_1C02FE3C4(0, &qword_1EA1998C8, (uint64_t (*)(void))sub_1C02FDCCC, (uint64_t)&type metadata for A18_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v33 = (uint64_t *)((char *)&v27 - v13);
  uint64_t v14 = type metadata accessor for HeadlineViewLayout.Context(0) - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v18 = a5 >> 1;
  uint64_t v19 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v18 != a4 && v19 == 3)
  {
    if (v18 > a4)
    {
      uint64_t v20 = *(void *)(v15 + 72);
      unsigned int v31 = *MEMORY[0x1E4FABA10];
      uint64_t v27 = a2;
      uint64_t v28 = v11;
      id v29 = (void (**)(uint64_t *, uint64_t))(v12 + 8);
      uint64_t v30 = (uint64_t (**)(uint64_t *, void, uint64_t))(v12 + 104);
      swift_unknownObjectRetain();
      uint64_t v32 = v20;
      uint64_t v21 = a3 + v20 * a4;
      uint64_t v22 = v33;
      uint64_t v23 = v28;
      do
      {
        sub_1BFF1AFA4(v21, (uint64_t)v17, type metadata accessor for HeadlineViewLayout.Context);
        uint64_t v34 = a1;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = 6;
        *uint64_t v22 = v24;
        uint64_t v25 = (*v30)(v22, v31, v23);
        MEMORY[0x1F4188790](v25);
        uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
        sub_1C02FDE00(0, &qword_1EA1998E0, MEMORY[0x1E4FAB4D0]);
        sub_1C02FDDBC(&qword_1EA1998E8, &qword_1EA1998E0, v26);
        uint64_t v22 = v33;
        sub_1C151734C();
        (*v29)(v22, v23);
        sub_1BFF1F284((uint64_t)v17, type metadata accessor for HeadlineViewLayout.Context);
        v21 += v32;
        --v19;
      }
      while (v19);
      swift_unknownObjectRelease();
      return;
    }
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_1C02FC568(uint64_t a1, uint64_t a2)
{
  v25[0] = a2;
  uint64_t v3 = type metadata accessor for HeadlineViewLayout.Options(0);
  uint64_t v4 = (int *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C02FE3C4(0, &qword_1EA1998C8, (uint64_t (*)(void))sub_1C02FDCCC, (uint64_t)&type metadata for A18_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)v25 - v10);
  v25[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  uint64_t v13 = (char *)v6 + v4[7];
  uint64_t v14 = *MEMORY[0x1E4FAB8C8];
  uint64_t v15 = sub_1C1517A7C();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  uint64_t v17 = (void *)*MEMORY[0x1E4FB27D0];
  *uint64_t v6 = 0;
  *(void *)((char *)v6 + v4[8]) = 0;
  *(void *)((char *)v6 + v4[9]) = v17;
  double v18 = *MEMORY[0x1E4FB2848];
  double v19 = *(double *)(MEMORY[0x1E4FB2848] + 8);
  double v20 = *(double *)(MEMORY[0x1E4FB2848] + 16);
  double v21 = *(double *)(MEMORY[0x1E4FB2848] + 24);
  id v22 = v17;
  _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v25[0], (uint64_t)v6, v18, v19, v20, v21);
  sub_1BFF1F284((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v23 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C02FDE00(0, &qword_1EA1998E0, MEMORY[0x1E4FAB4D0]);
  sub_1C02FDDBC(&qword_1EA1998E8, &qword_1EA1998E0, v23);
  sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C02FC8D0@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A18_V15.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C02FC9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C02F9E44(a1, a2, a3);
}

uint64_t sub_1C02FC9D8()
{
  return sub_1C12BC2BC();
}

unint64_t sub_1C02FC9E8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C02FCA18();
  unint64_t result = sub_1C02FCA6C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C02FCA18()
{
  unint64_t result = qword_1EA199880;
  if (!qword_1EA199880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199880);
  }
  return result;
}

unint64_t sub_1C02FCA6C()
{
  unint64_t result = qword_1EA199888;
  if (!qword_1EA199888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199888);
  }
  return result;
}

uint64_t type metadata accessor for A18_V15.Bound()
{
  uint64_t result = qword_1EA199898;
  if (!qword_1EA199898) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C02FCB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  *(void *)(a1 + *(int *)(v32 + 28)) = *(void *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C02FCE50(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F284((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    unsigned int v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F284(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    unsigned int v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C02FD2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  uint64_t v18 = (const void *)(v16 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v15 + *(int *)(v24 + 40)) = *(void *)(v16 + *(int *)(v24 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C02FD5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F284((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F284(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C00192A8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C02FDA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02FDA38);
}

uint64_t sub_1C02FDA38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C02FDAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02FDAFC);
}

void *sub_1C02FDAFC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C02FDBA4()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C02FDC54(uint64_t a1)
{
  uint64_t result = sub_1C02FE42C(&qword_1EA1998A8, (void (*)(uint64_t))type metadata accessor for A18_V15.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C02FDCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C02FAB08(a1, a2, a3);
}

uint64_t sub_1C02FDCB4(uint64_t a1)
{
  return sub_1C02FDDA4(a1, sub_1C02FABD8);
}

unint64_t sub_1C02FDCCC()
{
  unint64_t result = qword_1EA1998B8;
  if (!qword_1EA1998B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1998B8);
  }
  return result;
}

unint64_t sub_1C02FDD20()
{
  unint64_t result = qword_1EA1998C0;
  if (!qword_1EA1998C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1998C0);
  }
  return result;
}

uint64_t sub_1C02FDD74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C02FC8D0(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C02FDD7C()
{
  return swift_deallocObject();
}

uint64_t sub_1C02FDD8C(uint64_t a1)
{
  return sub_1C02FDDA4(a1, sub_1C02FADEC);
}

uint64_t sub_1C02FDDA4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1C02FDDBC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C02FDE00(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C02FDE00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A18_V15.Layout;
    v8[1] = &type metadata for A18_V15.Layout.Attributes;
    _OWORD v8[2] = sub_1C02FDCCC();
    v8[3] = sub_1C02FDD20();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C02FDE84()
{
  if (!qword_1EA1998F0)
  {
    sub_1C02FE3C4(255, &qword_1EA1998F8, (uint64_t (*)(void))sub_1C02FDCCC, (uint64_t)&type metadata for A18_V15.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1998F0);
    }
  }
}

uint64_t sub_1C02FDF14(uint64_t a1)
{
  return sub_1C02FB3B8(a1, *(void *)(v1 + 16));
}

void sub_1C02FDF1C(uint64_t a1)
{
  sub_1C02FC200(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C02FDF28(uint64_t a1)
{
  return sub_1C02FC568(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C02FDF30(uint64_t a1)
{
  return sub_1C02FB65C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C02FDF38(uint64_t a1)
{
  return sub_1C02FBC28(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V15.Layout.Attributes()
{
  return &type metadata for A18_V15.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V15.Layout()
{
  return &type metadata for A18_V15.Layout;
}

unint64_t sub_1C02FDF64()
{
  unint64_t result = qword_1EA199900;
  if (!qword_1EA199900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199900);
  }
  return result;
}

unint64_t sub_1C02FDFBC()
{
  unint64_t result = qword_1EA199908;
  if (!qword_1EA199908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199908);
  }
  return result;
}

unint64_t sub_1C02FE014()
{
  unint64_t result = qword_1EA199910;
  if (!qword_1EA199910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199910);
  }
  return result;
}

unint64_t sub_1C02FE06C()
{
  unint64_t result = qword_1EA199918;
  if (!qword_1EA199918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199918);
  }
  return result;
}

uint64_t sub_1C02FE0C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C02FE3C4(0, &qword_1EA199920, (uint64_t (*)(void))sub_1C02FE370, (uint64_t)&type metadata for A18_V15.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02FE370();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C02FE42C(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  _OWORD v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C02FE370()
{
  unint64_t result = qword_1EA199928;
  if (!qword_1EA199928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199928);
  }
  return result;
}

void sub_1C02FE3C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C02FE42C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A18_V15.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02FE540);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V15.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V15.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C02FE57C()
{
  unint64_t result = qword_1EA199938;
  if (!qword_1EA199938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199938);
  }
  return result;
}

unint64_t sub_1C02FE5D4()
{
  unint64_t result = qword_1EA199940;
  if (!qword_1EA199940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199940);
  }
  return result;
}

unint64_t sub_1C02FE62C()
{
  unint64_t result = qword_1EA199948;
  if (!qword_1EA199948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199948);
  }
  return result;
}

void *assignWithCopy for FeedGroupEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FeedGroupEntity(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupEntity()
{
  return &type metadata for FeedGroupEntity;
}

uint64_t sub_1C02FE898()
{
  if (qword_1EA194410 != -1) {
    swift_once();
  }
  qword_1EB93C220 = qword_1EA198ED8;
  *(void *)algn_1EB93C228 = unk_1EA198EE0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02FE904@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v186 = a3;
  uint64_t v197 = a2;
  long long v195 = a1;
  unint64_t v160 = a4;
  uint64_t v4 = *a1;
  uint64_t v181 = *(void *)(*a1 + 88);
  uint64_t v180 = *(void *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = (void (*)(char *, void, uint64_t, uint64_t))swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v159 = swift_getAssociatedTypeWitness();
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x1F4188790](v159);
  long long v157 = (char *)&v157 - v5;
  uint64_t v161 = sub_1C151827C();
  uint64_t v162 = *(void *)(v161 - 8);
  MEMORY[0x1F4188790](v161);
  long long v189 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_1C151531C();
  uint64_t v184 = *(void *)(v185 - 8);
  MEMORY[0x1F4188790](v185);
  uint64_t v183 = (char **)((char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v8 - 8);
  long long v196 = (char *)&v157 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v178 = sub_1BFD77314;
  long long v177 = sub_1BFD773F8;
  sub_1BFD76E98(0, &qword_1EB864078, &qword_1EB864070, (uint64_t (*)(uint64_t))sub_1BFD77314, sub_1BFD773F8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v179 = (char *)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v176 = (char *)&v157 - v13;
  uint64_t v174 = sub_1BFD7742C;
  uint64_t v173 = sub_1BFD775B8;
  sub_1BFD76E98(0, &qword_1EB864058, &qword_1EB864050, (uint64_t (*)(uint64_t))sub_1BFD7742C, sub_1BFD775B8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v175 = (char *)&v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  long long v172 = (char *)&v157 - v17;
  long long v200 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFD771A0(0, (unint64_t *)&qword_1EB864048, (uint64_t)&qword_1EB864040, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD770FC);
  MEMORY[0x1F4188790](v18 - 8);
  v201 = (char *)&v157 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  long long v198 = (char *)&v157 - v21;
  unsigned __int8 v214 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD76E98(0, &qword_1EB85AC88, &qword_1EB85AC80, MEMORY[0x1E4F27928], sub_1C03029F4);
  MEMORY[0x1F4188790](v22 - 8);
  unsigned int v206 = (char *)&v157 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  long long v199 = (char *)&v157 - v25;
  sub_1BFD77258();
  MEMORY[0x1F4188790](v26 - 8);
  size_t v28 = (char *)&v157 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v157 - v30;
  uint64_t v32 = (uint64_t (*)(void, void, void))MEMORY[0x1E4FAA6B0];
  sub_1BFD771A0(0, (unint64_t *)&qword_1EB85ACA8, (uint64_t)&qword_1EB85ACA0, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD76E3C);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = (char *)&v157 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v157 - v37;
  sub_1BFD76E3C(0, &qword_1EB85ACA0, v32);
  uint64_t v40 = v39;
  uint64_t v203 = v39;
  uint64_t v41 = *(void *)(v39 - 8);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v202 = v42;
  uint64_t v205 = v41 + 56;
  long long v190 = (void (*)(void, void, void))v38;
  v42((uint64_t)v38, 1, 1, v39);
  uint64_t v191 = (uint64_t)v35;
  v42((uint64_t)v35, 1, 1, v40);
  sub_1BFD76E3C(0, &qword_1EB85ACE0, MEMORY[0x1E4FAA6B8]);
  uint64_t v193 = v43;
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  uint64_t v192 = v44;
  swift_allocObject();
  uint64_t v208 = sub_1C151996C();
  sub_1BFD76F78(0, (unint64_t *)&qword_1EB85AC90, MEMORY[0x1E4FAA6B0]);
  uint64_t v46 = v45;
  uint64_t v169 = v45;
  uint64_t v47 = *(void *)(v45 - 8);
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
  long long v170 = v48;
  uint64_t v171 = v47 + 56;
  uint64_t v165 = v31;
  v48(v31, 1, 1, v45);
  long long v166 = v28;
  v48(v28, 1, 1, v46);
  sub_1BFD76F78(0, (unint64_t *)&qword_1EB85ACE8, MEMORY[0x1E4FAA6B8]);
  uint64_t v168 = v49;
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFD76F78(0, (unint64_t *)&qword_1EB85AC48, MEMORY[0x1E4FAA610]);
  uint64_t v167 = v50;
  swift_allocObject();
  uint64_t v207 = sub_1C151996C();
  uint64_t v204 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  unsigned int v51 = v214;
  uint64_t v163 = sub_1C03029F4;
  sub_1BFD76D3C(0, &qword_1EB85AC80, v214, sub_1C03029F4, MEMORY[0x1E4FAA6B0]);
  uint64_t v53 = v52;
  unsigned int v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
  uint64_t v55 = v199;
  v54(v199, 1, 1, v52);
  uint64_t v56 = v206;
  v54(v206, 1, 1, v53);
  uint64_t v164 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFD76D3C(0, &qword_1EB85ACD8, v51, sub_1C03029F4, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  long long v194 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFD76D3C(0, &qword_1EB85AC38, v51, v163, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  unsigned __int8 v214 = (uint64_t (*)(uint64_t))sub_1C151996C();
  v54(v55, 1, 1, v53);
  v54(v56, 1, 1, v53);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  unsigned int v206 = (char *)sub_1C151996C();
  uint64_t v58 = v202;
  uint64_t v57 = v203;
  v202((uint64_t)v190, 1, 1, v203);
  v58(v191, 1, 1, v57);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  long long v199 = (char *)sub_1C151996C();
  sub_1BFD770FC(0, &qword_1EB864040, v200);
  uint64_t v60 = v59;
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56);
  uint64_t v62 = v198;
  v61(v198, 1, 1, v59);
  uint64_t v63 = v201;
  v61(v201, 1, 1, v60);
  sub_1BFD770FC(0, &qword_1EB8640B0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFD770FC(0, &qword_1EB863FD8, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  long long v200 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C151996C();
  v61(v62, 1, 1, v60);
  v61(v63, 1, 1, v60);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  long long v198 = (char *)sub_1C151996C();
  uint64_t v64 = v190;
  uint64_t v66 = v202;
  uint64_t v65 = v203;
  v202((uint64_t)v190, 1, 1, v203);
  uint64_t v67 = v191;
  v66(v191, 1, 1, v65);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  v201 = (char *)sub_1C151996C();
  v66((uint64_t)v64, 1, 1, v65);
  v66(v67, 1, 1, v65);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v202 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C151996C();
  uint64_t v68 = (uint64_t (*)(uint64_t))v174;
  unint64_t v69 = v173;
  sub_1BFD76D3C(0, &qword_1EB864050, (uint64_t (*)(uint64_t))v174, v173, v204);
  uint64_t v71 = v70;
  uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56);
  v72(v172, 1, 1, v70);
  v72(v175, 1, 1, v71);
  uint64_t v73 = v164;
  sub_1BFD76D3C(0, &qword_1EB8640C0, v68, v69, v164);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFD76D3C(0, &qword_1EB863FE8, v68, v69, v194);
  swift_allocObject();
  uint64_t v205 = sub_1C151996C();
  uint64_t v74 = v169;
  uint64_t v75 = v170;
  v170(v165, 1, 1, v169);
  v75(v166, 1, 1, v74);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v203 = sub_1C151996C();
  uint64_t v76 = (uint64_t (*)(uint64_t))v178;
  uint64_t v77 = v177;
  sub_1BFD76D3C(0, &qword_1EB864070, (uint64_t (*)(uint64_t))v178, v177, v204);
  uint64_t v79 = v78;
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56);
  v80(v176, 1, 1, v78);
  v80(v179, 1, 1, v79);
  sub_1BFD76D3C(0, &qword_1EB8640D0, v76, v77, v73);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFD76D3C(0, &qword_1EB863FF8, v76, v77, v194);
  swift_allocObject();
  uint64_t v204 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C151996C();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v193 = sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v194 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedCursorGroup();
  uint64_t v211 = FeedCursorGroup.identifier.getter();
  unint64_t v212 = v81;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v192 = sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v193 = v197 + *((int *)v194 + 9);
  uint64_t v82 = AssociatedConformanceWitness;
  uint64_t v83 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
  uint64_t v191 = swift_checkMetadataState();
  uint64_t v211 = v83(v191, v82);
  unint64_t v212 = v84;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v180 = sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v85 = sub_1C151631C();
  uint64_t v181 = v85;
  uint64_t v86 = *(void *)(v85 - 8);
  long long v190 = *(void (**)(void, void, void))(v86 + 16);
  uint64_t v192 = v86 + 16;
  uint64_t v87 = v196;
  v190(v196, v197, v85);
  uint64_t v88 = *(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56);
  uint64_t v179 = (char *)(v86 + 56);
  AssociatedTypeWitness = v88;
  v88(v87, 0, 1, v85);
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v89 = v196;
  uint64_t v90 = v181;
  v190(v196, (char *)v195 + qword_1EB93C670, v181);
  AssociatedTypeWitness(v89, 0, 1, v90);
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v91 = v195[3];
  uint64_t v211 = v195[2];
  unint64_t v212 = v91;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  sub_1C151869C();
  swift_allocObject();
  uint64_t v92 = sub_1C151535C();
  uint64_t v93 = v183;
  *uint64_t v183 = 0x7974696E69666E69;
  v93[1] = 0xE800000000000000;
  v93[2] = 0x74696E69666E692DLL;
  v93[3] = 0xE900000000000079;
  v93[4] = 7233902;
  v93[5] = 0xE300000000000000;
  (*(void (**)(void *, void, uint64_t))(v184 + 104))(v93, *MEMORY[0x1E4F26D30], v185);
  sub_1C151532C();
  long long v196 = (char *)v92;
  uint64_t v94 = v187;
  sub_1C151867C();
  uint64_t v192 = v94;
  if (v94)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t))(*((void *)v194 - 1) + 8))(v197);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  long long v190 = (void (*)(void, void, void))sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v211 = 0x2D617461642E67;
  unint64_t v212 = 0xE700000000000000;
  uint64_t v95 = v195;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  FeedCursorGroup.identifier.getter();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v96 = v211;
  unint64_t v97 = v212;
  uint64_t v98 = v95[2];
  unint64_t v99 = v95[3];
  swift_bridgeObjectRetain();
  uint64_t v100 = sub_1C151825C();
  uint64_t v211 = sub_1C039FAE0(v96, v97, v98, v99, v100, v101);
  unint64_t v212 = v102;
  uint64_t v213 = v103;
  sub_1BFCBF7FC(0, (unint64_t *)&unk_1EB8614E8, (uint64_t (*)(void))sub_1BFD98EEC, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E4FAA628]);
  uint64_t v187 = v104;
  swift_allocObject();
  uint64_t v211 = sub_1C1519A2C();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  long long v190 = (void (*)(void, void, void))sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v211 = 0x2D6C6F6F702E67;
  unint64_t v212 = 0xE700000000000000;
  long long v105 = v195;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v106 = v194;
  FeedCursorGroup.identifier.getter();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  unint64_t v107 = v212;
  uint64_t v186 = v211;
  uint64_t v108 = v189;
  uint64_t v110 = v105[2];
  unint64_t v109 = v105[3];
  swift_bridgeObjectRetain();
  uint64_t v211 = sub_1C151826C();
  sub_1C1518ACC();
  sub_1BFD772CC(&qword_1EB85AB38, MEMORY[0x1E4FAAD90]);
  uint64_t v111 = v192;
  uint64_t v112 = sub_1C151533C();
  uint64_t v192 = v111;
  if (v111)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(*((void *)v106 - 1) + 8))(v197, v106);
    swift_release();
    (*(void (**)(char *, uint64_t))(v162 + 8))(v108, v161);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  uint64_t v115 = v112;
  unint64_t v116 = v113;
  swift_release();
  uint64_t v211 = sub_1C039FAE0(v186, v107, v110, v109, v115, v116);
  unint64_t v212 = v117;
  uint64_t v213 = v118;
  swift_allocObject();
  uint64_t v211 = sub_1C1519A2C();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v119 = (uint64_t *)(v197 + *((int *)v106 + 10));
  unint64_t v120 = v119[1];
  uint64_t v211 = *v119;
  unint64_t v212 = v120;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  long long v190 = (void (*)(void, void, void))sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __int16 v121 = v157;
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v191, AssociatedConformanceWitness);
  uint64_t v122 = v159;
  swift_getAssociatedConformanceWitness();
  sub_1C151EACC();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v121, v122);
  uint64_t v209 = v211;
  unint64_t v210 = v212;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  long long v190 = (void (*)(void, void, void))sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(AssociatedConformanceWitness + 88))(&v211, v191);
  sub_1BFD7742C();
  swift_allocObject();
  uint64_t v211 = sub_1C1519D4C();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  long long v190 = (void (*)(void, void, void))sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v123 = (void *)(*(uint64_t (**)(uint64_t))(AssociatedConformanceWitness + 104))(v191);
  uint64_t v124 = (uint64_t)v123;
  if (v123)
  {
    id v125 = objc_msgSend(v123, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v124 = sub_1C151E62C();
    uint64_t v127 = v126;
  }
  else
  {
    uint64_t v127 = 1;
  }
  uint64_t v128 = v160;
  uint64_t v211 = v124;
  unint64_t v212 = v127;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  long long v190 = (void (*)(void, void, void))sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v129 = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 32))(v191);
  unint64_t v130 = v129;
  uint64_t v131 = v162;
  if (v129 >> 62) {
    uint64_t v132 = sub_1C15204BC();
  }
  else {
    uint64_t v132 = *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v132)
  {
    swift_bridgeObjectRelease();
    uint64_t v134 = MEMORY[0x1E4FBC860];
    uint64_t v145 = v197;
    long long v146 = v189;
LABEL_22:
    uint64_t v211 = v134;
    sub_1BFD77314();
    swift_allocObject();
    uint64_t v211 = sub_1C1519D4C();
    sub_1C1519C0C();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t))(*((void *)v194 - 1) + 8))(v145);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v146, v161);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    long long v147 = v201;
    swift_release();
    long long v148 = v198;
    swift_release();
    uint64_t v149 = v200;
    swift_release();
    uint64_t v150 = v199;
    swift_release();
    __int16 v151 = v206;
    swift_release();
    long long v152 = v214;
    swift_release();
    uint64_t v153 = v207;
    swift_release();
    uint64_t v154 = v208;
    uint64_t result = swift_release();
    *uint64_t v128 = v154;
    v128[1] = v153;
    v128[2] = (uint64_t)v152;
    v128[3] = (uint64_t)v151;
    v128[4] = (uint64_t)v150;
    v128[5] = (uint64_t)v149;
    v128[6] = (uint64_t)v148;
    v128[7] = (uint64_t)v147;
    uint64_t v155 = v205;
    v128[8] = (uint64_t)v202;
    v128[9] = v155;
    long long v156 = v204;
    v128[10] = v203;
    v128[11] = (uint64_t)v156;
    return result;
  }
  uint64_t v211 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BFF661B8(0, v132 & ~(v132 >> 63), 0);
  uint64_t v193 = v132;
  if ((v132 & 0x8000000000000000) == 0)
  {
    uint64_t v133 = 0;
    uint64_t v134 = v211;
    unint64_t v135 = v130 & 0xC000000000000001;
    unint64_t v136 = v130;
    do
    {
      if (v135)
      {
        long long v137 = (void *)MEMORY[0x1C18C7CB0](v133, v130);
      }
      else
      {
        long long v137 = *(void **)(v130 + 8 * v133 + 32);
        swift_unknownObjectRetain();
      }
      id v138 = objc_msgSend(v137, sel_itemID);
      uint64_t v139 = sub_1C151E62C();
      uint64_t v141 = v140;
      swift_unknownObjectRelease();

      uint64_t v211 = v134;
      unint64_t v143 = *(void *)(v134 + 16);
      unint64_t v142 = *(void *)(v134 + 24);
      if (v143 >= v142 >> 1)
      {
        sub_1BFF661B8(v142 > 1, v143 + 1, 1);
        uint64_t v134 = v211;
      }
      ++v133;
      *(void *)(v134 + 16) = v143 + 1;
      unint64_t v144 = v134 + 16 * v143;
      *(void *)(v144 + 32) = v139;
      *(void *)(v144 + 40) = v141;
      unint64_t v130 = v136;
    }
    while (v193 != v133);
    swift_bridgeObjectRelease();
    uint64_t v145 = v197;
    uint64_t v128 = v160;
    uint64_t v131 = v162;
    long long v146 = v189;
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C03014DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v77 = a5;
  uint64_t v75 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v74 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v66 - v8;
  uint64_t v10 = sub_1C151827C();
  uint64_t v76 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151531C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char **)((char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C151869C();
  swift_allocObject();
  uint64_t v17 = sub_1C151535C();
  *uint64_t v16 = 0x7974696E69666E69;
  v16[1] = 0xE800000000000000;
  v16[2] = 0x74696E69666E692DLL;
  void v16[3] = 0xE900000000000079;
  void v16[4] = 7233902;
  v16[5] = 0xE300000000000000;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4F26D30], v13);
  uint64_t v18 = v12;
  sub_1C151532C();
  uint64_t v19 = v78;
  sub_1C151867C();
  if (v19) {
    return swift_release();
  }
  uint64_t v68 = v9;
  uint64_t v69 = a1;
  uint64_t v70 = a2;
  uint64_t v72 = v10;
  sub_1C151997C();
  uint64_t v79 = 0x2D617461642E67;
  unint64_t v80 = 0xE700000000000000;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (!v83)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v77 = v17;
  uint64_t v78 = 0;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (!v83)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v21 = v79;
  unint64_t v22 = v80;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  unint64_t v23 = v80;
  if (!v80)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v24 = v79;
  uint64_t v25 = sub_1C151825C();
  uint64_t v79 = sub_1C039FAE0(v21, v22, v24, v23, v25, v26);
  unint64_t v80 = v27;
  uint64_t v81 = v28;
  sub_1BFCBF7FC(0, (unint64_t *)&unk_1EB8614E8, (uint64_t (*)(void))sub_1BFD98EEC, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E4FAA628]);
  swift_allocObject();
  uint64_t v79 = sub_1C1519A2C();
  sub_1C1519C0C();
  swift_release();
  uint64_t v29 = sub_1C151997C();
  uint64_t v79 = 0x2D6C6F6F702E67;
  unint64_t v80 = 0xE700000000000000;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (!v83)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (!v83)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v71 = v29;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  unint64_t v30 = v80;
  uint64_t v67 = v79;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  unint64_t v31 = v80;
  if (v80)
  {
    uint64_t v32 = v79;
    uint64_t v82 = sub_1C151826C();
    sub_1C1518ACC();
    sub_1BFD772CC(&qword_1EB85AB38, MEMORY[0x1E4FAAD90]);
    uint64_t v33 = v78;
    uint64_t v34 = sub_1C151533C();
    uint64_t v78 = v33;
    if (v33)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v18, v72);
    }
    uint64_t v36 = v34;
    unint64_t v37 = v35;
    uint64_t v66 = v18;
    swift_release();
    uint64_t v79 = sub_1C039FAE0(v67, v30, v32, v31, v36, v37);
    unint64_t v80 = v38;
    uint64_t v81 = v39;
    swift_allocObject();
    uint64_t v79 = sub_1C1519A2C();
    sub_1C1519C0C();
    swift_release();
    sub_1C151997C();
    uint64_t v40 = v75;
    uint64_t v41 = v68;
    uint64_t v42 = v70;
    (*(void (**)(uint64_t, uint64_t))(v75 + 64))(v70, v75);
    uint64_t v43 = v74;
    swift_getAssociatedConformanceWitness();
    sub_1C151EACC();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v43);
    uint64_t v82 = v79;
    unint64_t v83 = v80;
    sub_1C1519C0C();
    swift_release();
    sub_1C151997C();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v40 + 88))(&v79, v42, v40);
    sub_1BFD7742C();
    swift_allocObject();
    uint64_t v79 = sub_1C1519D4C();
    sub_1C1519C0C();
    swift_release();
    sub_1C151997C();
    uint64_t v44 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 104))(v42, v40);
    uint64_t v45 = (uint64_t)v44;
    if (v44)
    {
      id v46 = objc_msgSend(v44, sel_identifier);
      swift_unknownObjectRelease();
      uint64_t v45 = sub_1C151E62C();
      uint64_t v48 = v47;
    }
    else
    {
      uint64_t v48 = 1;
    }
    uint64_t v49 = v72;
    uint64_t v50 = v76;
    uint64_t v79 = v45;
    unint64_t v80 = v48;
    sub_1C1519C0C();
    swift_release();
    uint64_t v74 = sub_1C151997C();
    unint64_t v51 = (*(uint64_t (**)(uint64_t))(*(void *)(v40 + 8) + 32))(v42);
    unint64_t v52 = v51;
    if (v51 >> 62)
    {
      uint64_t v53 = sub_1C15204BC();
      if (v53) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v53 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v53)
      {
LABEL_16:
        uint64_t v79 = MEMORY[0x1E4FBC860];
        uint64_t result = sub_1BFF661B8(0, v53 & ~(v53 >> 63), 0);
        if ((v53 & 0x8000000000000000) == 0)
        {
          uint64_t v54 = 0;
          uint64_t v55 = v79;
          unint64_t v84 = v52 & 0xC000000000000001;
          unint64_t v56 = v52;
          uint64_t v57 = v53;
          do
          {
            if (v84)
            {
              uint64_t v58 = (void *)MEMORY[0x1C18C7CB0](v54, v52);
            }
            else
            {
              uint64_t v58 = *(void **)(v52 + 8 * v54 + 32);
              swift_unknownObjectRetain();
            }
            id v59 = objc_msgSend(v58, sel_itemID);
            uint64_t v60 = sub_1C151E62C();
            uint64_t v62 = v61;
            swift_unknownObjectRelease();

            uint64_t v79 = v55;
            unint64_t v64 = *(void *)(v55 + 16);
            unint64_t v63 = *(void *)(v55 + 24);
            if (v64 >= v63 >> 1)
            {
              sub_1BFF661B8(v63 > 1, v64 + 1, 1);
              uint64_t v55 = v79;
            }
            ++v54;
            *(void *)(v55 + 16) = v64 + 1;
            unint64_t v65 = v55 + 16 * v64;
            *(void *)(v65 + 32) = v60;
            *(void *)(v65 + 40) = v62;
            unint64_t v52 = v56;
          }
          while (v57 != v54);
          swift_bridgeObjectRelease();
          uint64_t v49 = v72;
          uint64_t v50 = v76;
          goto LABEL_27;
        }
        __break(1u);
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v55 = MEMORY[0x1E4FBC860];
LABEL_27:
    uint64_t v79 = v55;
    sub_1BFD77314();
    swift_allocObject();
    uint64_t v79 = sub_1C1519D4C();
    sub_1C1519C0C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v66, v49);
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C0301EA4(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6449646E696BLL;
      break;
    case 2:
      uint64_t result = 0x4464657461657263;
      break;
    case 3:
      uint64_t result = 0x446873696C627570;
      break;
    case 4:
      uint64_t result = 0x6449726F73727563;
      break;
    case 5:
      uint64_t result = 0x74614470756F7267;
      break;
    case 6:
      uint64_t result = 0x617461446C6F6F70;
      break;
    case 7:
      uint64_t result = 0x64496769666E6F63;
      break;
    case 8:
      uint64_t result = 1684957547;
      break;
    case 9:
      uint64_t result = 0x6E696C6F6F706572;
      break;
    case 10:
      uint64_t result = 0x6449676174;
      break;
    case 11:
      uint64_t result = 0x7364496D657469;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C030200C(void *a1)
{
  int v3 = v1;
  sub_1BFCBF7FC(0, &qword_1EA199998, (uint64_t (*)(void))sub_1C0304AB8, (uint64_t)&type metadata for FeedGroupEntity.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0304AB8();
  sub_1C1520F0C();
  uint64_t v23 = *v3;
  char v22 = 0;
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  uint64_t v11 = v10;
  sub_1C0304B0C((unint64_t *)&qword_1EA1999A0);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v21 = v11;
    uint64_t v23 = v3[1];
    char v22 = 1;
    sub_1BFD76F78(0, (unint64_t *)&qword_1EB85AC48, MEMORY[0x1E4FAA610]);
    uint64_t v13 = v12;
    uint64_t v14 = sub_1C0304B6C(&qword_1EA1999A8);
    sub_1C152080C();
    v19[1] = v14;
    void v19[2] = v13;
    uint64_t v20 = v3;
    uint64_t v23 = v3[2];
    char v22 = 2;
    sub_1BFD76D3C(0, &qword_1EB85AC38, MEMORY[0x1E4F27928], sub_1C03029F4, MEMORY[0x1E4FAA610]);
    sub_1C0304DA0();
    sub_1C152080C();
    uint64_t v23 = v20[3];
    char v22 = 3;
    sub_1C152080C();
    uint64_t v15 = v20;
    uint64_t v23 = v20[4];
    char v22 = 4;
    sub_1C152080C();
    uint64_t v23 = v15[5];
    char v22 = 5;
    sub_1BFD770FC(0, &qword_1EB863FD8, MEMORY[0x1E4FAA610]);
    uint64_t v17 = v16;
    sub_1C0304E3C(&qword_1EA1999B8);
    v19[0] = v17;
    sub_1C152080C();
    uint64_t v23 = v15[6];
    char v22 = 6;
    sub_1C152080C();
    uint64_t v23 = v15[7];
    char v22 = 7;
    sub_1C152080C();
    uint64_t v23 = v15[8];
    char v22 = 8;
    sub_1C152080C();
    uint64_t v23 = v15[9];
    char v22 = 9;
    sub_1BFD76D3C(0, &qword_1EB863FE8, (uint64_t (*)(uint64_t))sub_1BFD7742C, sub_1BFD775B8, MEMORY[0x1E4FAA610]);
    sub_1C0304E9C();
    sub_1C152080C();
    uint64_t v23 = v15[10];
    char v22 = 10;
    sub_1C152080C();
    uint64_t v23 = v20[11];
    char v22 = 11;
    sub_1BFD76D3C(0, &qword_1EB863FF8, (uint64_t (*)(uint64_t))sub_1BFD77314, sub_1BFD773F8, MEMORY[0x1E4FAA610]);
    sub_1C0304F38();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C03025F4()
{
  return sub_1C0301EA4(*v0);
}

uint64_t sub_1C03025FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0302A28(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C0302624(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1C0302630(uint64_t a1)
{
  unint64_t v2 = sub_1C0304AB8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C030266C(uint64_t a1)
{
  unint64_t v2 = sub_1C0304AB8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C03026A8()
{
  return sub_1C151997C();
}

uint64_t sub_1C03026CC()
{
  if (qword_1EB85E988 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB93C220;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C0302734(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98E98();
  return MEMORY[0x1F415D4C8](a1, v2);
}

uint64_t sub_1C0302780(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98E98();
  return MEMORY[0x1F415D4D8](a1, v2);
}

uint64_t sub_1C03027CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98E98();
  return MEMORY[0x1F415D4D0](a1, a2, a3, v6);
}

double sub_1C0302830@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0302F00(a1, (uint64_t (**)(uint64_t))v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1C030287C(void *a1)
{
  return sub_1C030200C(a1);
}

uint64_t sub_1C0302894(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1BFD98E98();
  return MEMORY[0x1F415D4F0](a1, a2, v4);
}

uint64_t sub_1C03028E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98E98();
  return MEMORY[0x1F415D4E8](a1, a2, a3, v6);
}

uint64_t sub_1C0302934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1BFD98E98();
  return MEMORY[0x1F415D4E0](a1, a2, a3, a4, v8);
}

unint64_t sub_1C03029A0()
{
  unint64_t result = qword_1EA199950;
  if (!qword_1EA199950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199950);
  }
  return result;
}

uint64_t sub_1C03029F4()
{
  return sub_1BFD772CC(&qword_1EB85AA40, MEMORY[0x1E4F27928]);
}

uint64_t sub_1C0302A28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449646E696BLL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6449726F73727563 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x617461446C6F6F70 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64496769666E6F63 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E696C6F6F706572 && a2 == 0xE900000000000067 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6449676174 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7364496D657469 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_1C0302F00@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t)@<X8>)
{
  unint64_t v136 = (void *)a1;
  unint64_t v107 = a2;
  sub_1BFCBF7FC(0, &qword_1EA199958, (uint64_t (*)(void))sub_1C0304AB8, (uint64_t)&type metadata for FeedGroupEntity.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v111 = v2;
  uint64_t v110 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v133 = (char *)&v106 - v3;
  unint64_t v129 = sub_1BFD77314;
  uint64_t v128 = sub_1BFD773F8;
  sub_1BFD76E98(0, &qword_1EB864078, &qword_1EB864070, (uint64_t (*)(uint64_t))sub_1BFD77314, sub_1BFD773F8);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v130 = (uint64_t (*)(uint64_t))((char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v127 = (uint64_t (*)(uint64_t))((char *)&v106 - v7);
  id v125 = sub_1BFD7742C;
  uint64_t v124 = sub_1BFD775B8;
  sub_1BFD76E98(0, &qword_1EB864058, &qword_1EB864050, (uint64_t (*)(uint64_t))sub_1BFD7742C, sub_1BFD775B8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v126 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v123 = (char *)&v106 - v11;
  id v138 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFD771A0(0, (unint64_t *)&qword_1EB864048, (uint64_t)&qword_1EB864040, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD770FC);
  MEMORY[0x1F4188790](v12 - 8);
  long long v137 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v135 = (char *)&v106 - v15;
  unint64_t v113 = sub_1C03029F4;
  uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD76E98(0, &qword_1EB85AC88, &qword_1EB85AC80, MEMORY[0x1E4F27928], sub_1C03029F4);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v114 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v112 = (char *)&v106 - v20;
  sub_1BFD77258();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  unint64_t v26 = (char *)&v106 - v25;
  unint64_t v27 = (uint64_t (*)(void, void, void))MEMORY[0x1E4FAA6B0];
  sub_1BFD771A0(0, (unint64_t *)&qword_1EB85ACA8, (uint64_t)&qword_1EB85ACA0, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD76E3C);
  MEMORY[0x1F4188790](v28 - 8);
  unint64_t v30 = (uint64_t (*)(uint64_t))((char *)&v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v106 - v32;
  sub_1BFD76E3C(0, &qword_1EB85ACA0, v27);
  uint64_t v35 = v34;
  uint64_t v143 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  unint64_t v37 = *(void (**)(void, void, void, void))(v36 + 56);
  unint64_t v142 = (void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))v37;
  uint64_t v144 = v36 + 56;
  uint64_t v140 = v33;
  v37(v33, 1, 1, v34);
  uint64_t v141 = v30;
  v37(v30, 1, 1, v35);
  sub_1BFD76E3C(0, &qword_1EB85ACE0, MEMORY[0x1E4FAA6B8]);
  uint64_t v115 = v38;
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  long long v147 = v39;
  swift_allocObject();
  uint64_t v132 = sub_1C151996C();
  sub_1BFD76F78(0, (unint64_t *)&qword_1EB85AC90, MEMORY[0x1E4FAA6B0]);
  uint64_t v41 = v40;
  uint64_t v120 = v40;
  uint64_t v42 = *(void *)(v40 - 8);
  uint64_t v43 = *(void (**)(void, void, void, void))(v42 + 56);
  __int16 v121 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v43;
  uint64_t v122 = v42 + 56;
  unint64_t v117 = v26;
  v43(v26, 1, 1, v40);
  uint64_t v118 = v23;
  v43(v23, 1, 1, v41);
  sub_1BFD76F78(0, (unint64_t *)&qword_1EB85ACE8, MEMORY[0x1E4FAA6B8]);
  uint64_t v119 = v44;
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76F78(0, (unint64_t *)&qword_1EB85AC48, MEMORY[0x1E4FAA610]);
  uint64_t v139 = v45;
  swift_allocObject();
  uint64_t v131 = sub_1C151996C();
  unint64_t v116 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  id v46 = v16;
  uint64_t v47 = v113;
  sub_1BFD76D3C(0, &qword_1EB85AC80, v16, v113, MEMORY[0x1E4FAA6B0]);
  uint64_t v49 = v48;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56);
  unint64_t v51 = v112;
  v50(v112, 1, 1, v48);
  unint64_t v52 = v114;
  v50(v114, 1, 1, v49);
  uint64_t v145 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFD76D3C(0, &qword_1EB85ACD8, v46, v47, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  long long v146 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFD76D3C(0, &qword_1EB85AC38, v46, v47, MEMORY[0x1E4FAA610]);
  uint64_t v54 = v53;
  swift_allocObject();
  unint64_t v113 = (uint64_t (*)(void))sub_1C151996C();
  v50(v51, 1, 1, v49);
  v50(v52, 1, 1, v49);
  swift_allocObject();
  sub_1C1519BDC();
  uint64_t v109 = v54;
  swift_allocObject();
  uint64_t v114 = (char *)sub_1C151996C();
  unint64_t v56 = v142;
  uint64_t v55 = v143;
  v142((uint64_t (*)(uint64_t))v140, 1, 1, v143);
  v56(v141, 1, 1, v55);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v112 = (char *)sub_1C151996C();
  sub_1BFD770FC(0, &qword_1EB864040, v138);
  uint64_t v58 = v57;
  id v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
  uint64_t v60 = v135;
  v59(v135, 1, 1, v57);
  uint64_t v61 = v137;
  v59(v137, 1, 1, v58);
  sub_1BFD770FC(0, &qword_1EB8640B0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD770FC(0, &qword_1EB863FD8, MEMORY[0x1E4FAA610]);
  uint64_t v63 = v62;
  swift_allocObject();
  id v138 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C151996C();
  v59(v60, 1, 1, v58);
  v59(v61, 1, 1, v58);
  swift_allocObject();
  sub_1C1519BDC();
  uint64_t v108 = v63;
  swift_allocObject();
  long long v137 = (char *)sub_1C151996C();
  unint64_t v64 = (uint64_t (*)(uint64_t))v140;
  uint64_t v66 = v142;
  uint64_t v65 = v143;
  v142((uint64_t (*)(uint64_t))v140, 1, 1, v143);
  uint64_t v67 = v141;
  v66(v141, 1, 1, v65);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  unint64_t v135 = (char *)sub_1C151996C();
  v66(v64, 1, 1, v65);
  v66(v67, 1, 1, v65);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v144 = sub_1C151996C();
  uint64_t v68 = (uint64_t (*)(uint64_t))v125;
  uint64_t v69 = v124;
  uint64_t v70 = v116;
  sub_1BFD76D3C(0, &qword_1EB864050, (uint64_t (*)(uint64_t))v125, v124, v116);
  uint64_t v72 = v71;
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
  v73(v123, 1, 1, v71);
  v73(v126, 1, 1, v72);
  sub_1BFD76D3C(0, &qword_1EB8640C0, v68, v69, v145);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76D3C(0, &qword_1EB863FE8, v68, v69, v146);
  swift_allocObject();
  uint64_t v143 = sub_1C151996C();
  uint64_t v74 = v120;
  uint64_t v75 = v121;
  v121(v117, 1, 1, v120);
  v75(v118, 1, 1, v74);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  unint64_t v142 = (void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))sub_1C151996C();
  uint64_t v77 = v128;
  uint64_t v76 = (uint64_t (*)(uint64_t))v129;
  sub_1BFD76D3C(0, &qword_1EB864070, (uint64_t (*)(uint64_t))v129, v128, v70);
  uint64_t v79 = v78;
  unint64_t v80 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56);
  v80(v127, 1, 1, v78);
  v80(v130, 1, 1, v79);
  uint64_t v81 = v136;
  sub_1BFD76D3C(0, &qword_1EB8640D0, v76, v77, v145);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76D3C(0, &qword_1EB863FF8, v76, v77, v146);
  swift_allocObject();
  long long v146 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C151996C();
  __swift_project_boxed_opaque_existential_1(v81, v81[3]);
  sub_1C0304AB8();
  uint64_t v82 = v134;
  unint64_t v83 = v133;
  sub_1C1520EBC();
  if (v82)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    char v148 = 0;
    unint64_t v84 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0304B0C((unint64_t *)&qword_1EA199968);
    sub_1C15206EC();
    uint64_t v145 = v84;
    uint64_t v85 = v149;
    swift_retain();
    swift_release();
    char v148 = 1;
    uint64_t v86 = sub_1C0304B6C(&qword_1EA199970);
    sub_1C15206EC();
    uint64_t v140 = (char *)v86;
    uint64_t v141 = v85;
    uint64_t v87 = v149;
    swift_retain();
    swift_release();
    char v148 = 2;
    sub_1C0304BCC();
    sub_1C15206EC();
    uint64_t v134 = v87;
    uint64_t v88 = v149;
    swift_retain();
    swift_release();
    char v148 = 3;
    sub_1C15206EC();
    uint64_t v132 = (uint64_t)v88;
    uint64_t v89 = v149;
    swift_retain();
    swift_release();
    char v148 = 4;
    sub_1C15206EC();
    uint64_t v131 = (uint64_t)v89;
    uint64_t v90 = v149;
    swift_retain();
    swift_release();
    char v148 = 5;
    sub_1C0304E3C(&qword_1EA199980);
    sub_1C15206EC();
    unint64_t v130 = v90;
    unint64_t v91 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))v149;
    swift_retain();
    swift_release();
    char v148 = 6;
    sub_1C15206EC();
    id v138 = v91;
    uint64_t v92 = v149;
    swift_retain();
    swift_release();
    char v148 = 7;
    sub_1C15206EC();
    unint64_t v129 = (void (*)())v149;
    swift_retain();
    swift_release();
    char v148 = 8;
    sub_1C15206EC();
    uint64_t v93 = v132;
    long long v147 = v149;
    swift_retain();
    swift_release();
    char v148 = 9;
    sub_1C0304C68();
    sub_1C15206EC();
    uint64_t v94 = v149;
    swift_retain();
    swift_release();
    char v148 = 10;
    sub_1C15206EC();
    uint64_t v145 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v149;
    swift_retain();
    swift_release();
    char v148 = 11;
    sub_1C0304D04();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v83, v111);
    uint64_t v144 = (uint64_t)v149;
    swift_retain();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
    swift_release();
    swift_release();
    uint64_t v127 = v94;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v95 = v138;
    swift_release();
    uint64_t v96 = v130;
    swift_release();
    uint64_t v97 = v131;
    swift_release();
    uint64_t v98 = v93;
    swift_release();
    unint64_t v99 = v134;
    swift_release();
    uint64_t v100 = v141;
    uint64_t result = swift_release();
    unint64_t v102 = v107;
    *unint64_t v107 = v100;
    v102[1] = v99;
    v102[2] = (uint64_t (*)(uint64_t))v98;
    v102[3] = (uint64_t (*)(uint64_t))v97;
    v102[4] = v96;
    v102[5] = (uint64_t (*)(uint64_t))v95;
    uint64_t v103 = v129;
    v102[6] = v92;
    v102[7] = (uint64_t (*)(uint64_t))v103;
    uint64_t v104 = v127;
    v102[8] = v147;
    v102[9] = v104;
    uint64_t v105 = v144;
    v102[10] = (uint64_t (*)(uint64_t))v145;
    v102[11] = (uint64_t (*)(uint64_t))v105;
  }
  return result;
}

unint64_t sub_1C0304AB8()
{
  unint64_t result = qword_1EA199960;
  if (!qword_1EA199960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199960);
  }
  return result;
}

uint64_t sub_1C0304B0C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFD76E3C(255, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0304B6C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFD76F78(255, (unint64_t *)&qword_1EB85AC48, MEMORY[0x1E4FAA610]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0304BCC()
{
  unint64_t result = qword_1EA199978;
  if (!qword_1EA199978)
  {
    sub_1BFD76D3C(255, &qword_1EB85AC38, MEMORY[0x1E4F27928], sub_1C03029F4, MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199978);
  }
  return result;
}

unint64_t sub_1C0304C68()
{
  unint64_t result = qword_1EA199988;
  if (!qword_1EA199988)
  {
    sub_1BFD76D3C(255, &qword_1EB863FE8, (uint64_t (*)(uint64_t))sub_1BFD7742C, sub_1BFD775B8, MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199988);
  }
  return result;
}

unint64_t sub_1C0304D04()
{
  unint64_t result = qword_1EA199990;
  if (!qword_1EA199990)
  {
    sub_1BFD76D3C(255, &qword_1EB863FF8, (uint64_t (*)(uint64_t))sub_1BFD77314, sub_1BFD773F8, MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199990);
  }
  return result;
}

unint64_t sub_1C0304DA0()
{
  unint64_t result = qword_1EA1999B0;
  if (!qword_1EA1999B0)
  {
    sub_1BFD76D3C(255, &qword_1EB85AC38, MEMORY[0x1E4F27928], sub_1C03029F4, MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1999B0);
  }
  return result;
}

uint64_t sub_1C0304E3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFD770FC(255, &qword_1EB863FD8, MEMORY[0x1E4FAA610]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0304E9C()
{
  unint64_t result = qword_1EA1999C0;
  if (!qword_1EA1999C0)
  {
    sub_1BFD76D3C(255, &qword_1EB863FE8, (uint64_t (*)(uint64_t))sub_1BFD7742C, sub_1BFD775B8, MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1999C0);
  }
  return result;
}

unint64_t sub_1C0304F38()
{
  unint64_t result = qword_1EA1999C8;
  if (!qword_1EA1999C8)
  {
    sub_1BFD76D3C(255, &qword_1EB863FF8, (uint64_t (*)(uint64_t))sub_1BFD77314, sub_1BFD773F8, MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1999C8);
  }
  return result;
}

void *assignWithCopy for FeedGroupEntity.ManifestEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FeedGroupEntity.ManifestEntity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupEntity.ManifestEntity()
{
  return &type metadata for FeedGroupEntity.ManifestEntity;
}

ValueMetadata *type metadata accessor for FeedGroupEntity.ItemEntity()
{
  return &type metadata for FeedGroupEntity.ItemEntity;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C03051D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupEntity.CodingKeys()
{
  return &type metadata for FeedGroupEntity.CodingKeys;
}

unint64_t sub_1C030520C()
{
  unint64_t result = qword_1EA1999D0;
  if (!qword_1EA1999D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1999D0);
  }
  return result;
}

unint64_t sub_1C0305264()
{
  unint64_t result = qword_1EA1999D8;
  if (!qword_1EA1999D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1999D8);
  }
  return result;
}

unint64_t sub_1C03052BC()
{
  unint64_t result = qword_1EA1999E0;
  if (!qword_1EA1999E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1999E0);
  }
  return result;
}

uint64_t SharingActivityTypeProvider.supportedActivityTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SharingActivityTypeProvider.__allocating_init(supportedActivityTypes:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t SharingActivityTypeProvider.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SharingActivityTypeProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of SharingActivityTypeProviderType.supportedActivityTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for SharingActivityTypeProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingActivityTypeProvider);
}

uint64_t dispatch thunk of SharingActivityTypeProvider.__allocating_init(supportedActivityTypes:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

Swift::OpaquePointer_optional __swiftcall FCPuzzlesConfiguration.leaderboardDifficultyLevels(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  id v4 = objc_msgSend(v1, sel_puzzleTypeLeaderboards);
  sub_1BFC39268(0, &qword_1EA1999E8);
  uint64_t v5 = sub_1C151E33C();

  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_1BFEF2D8C(countAndFlagsBits, (uint64_t)object);
    if (v7)
    {
      id v8 = *(id *)(*(void *)(v5 + 56) + 8 * v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v9 = objc_msgSend(v8, sel_leaderboards);
      sub_1BFC39268(0, (unint64_t *)&unk_1EA1AB1E0);
      unint64_t v10 = sub_1C151EBCC();

      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = (void *)sub_1C15204BC();
        uint64_t v11 = (uint64_t)v12;
        if (v12) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v12 = (void *)swift_bridgeObjectRetain();
        if (v11)
        {
LABEL_5:
          if (v11 < 1)
          {
            __break(1u);
            goto LABEL_25;
          }
          uint64_t v14 = 0;
          uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            if ((v10 & 0xC000000000000001) != 0) {
              id v16 = (id)MEMORY[0x1C18C7CB0](v14, v10);
            }
            else {
              id v16 = *(id *)(v10 + 8 * v14 + 32);
            }
            uint64_t v17 = v16;
            id v18 = objc_msgSend(v16, sel_difficulty);
            if (v18)
            {
              uint64_t v19 = v18;
              id v20 = objc_msgSend(v18, sel_integerValue);

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v15 = sub_1C0EDFE80(0, v15[2] + 1, 1, v15);
              }
              unint64_t v22 = v15[2];
              unint64_t v21 = v15[3];
              if (v22 >= v21 >> 1) {
                uint64_t v15 = sub_1C0EDFE80((void *)(v21 > 1), v22 + 1, 1, v15);
              }
              v15[2] = v22 + 1;
              v15[v22 + 4] = v20;
            }
            else
            {
            }
            ++v14;
          }
          while (v11 != v14);
          goto LABEL_22;
        }
      }
      uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:

      swift_bridgeObjectRelease_n();
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = 0;
LABEL_23:
  uint64_t v12 = v15;
LABEL_25:
  result.value._rawValue = v12;
  result.is_nil = v13;
  return result;
}

uint64_t dispatch thunk of FeedDatabaseGroupProcessorType.process(group:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t FormatDecorationCollection.decorations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C030569C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    *a2 = v3;
    return swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
    uint64_t v8 = *(void *)(v7 + 16);
    int64_t v9 = *(void *)(v3 + 16);
    int64_t v10 = v9 + v8;
    if (__OFADD__(v9, v8)) {
      break;
    }
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v10 <= *(void *)(v3 + 24) >> 1)
    {
      if (*(void *)(v7 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v9 <= v10) {
        int64_t v12 = v9 + v8;
      }
      else {
        int64_t v12 = v9;
      }
      unint64_t v3 = sub_1BFFC22A0(isUniquelyReferenced_nonNull_native, v12, 1, v3);
      if (*(void *)(v7 + 16))
      {
LABEL_14:
        uint64_t v13 = *(void *)(v3 + 16);
        uint64_t v14 = (*(void *)(v3 + 24) >> 1) - v13;
        sub_1BFC9188C(0, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
        uint64_t v17 = *(void *)(*(void *)(v15 - 8) + 72);
        if (v14 < v8) {
          goto LABEL_29;
        }
        uint64_t v16 = *(unsigned __int8 *)(*(void *)(v15 - 8) + 80);
        uint64_t v18 = (v16 + 32) & ~v16;
        unint64_t v19 = v3 + v18 + v17 * v13;
        unint64_t v20 = v7 + v18;
        uint64_t v21 = v17 * v8;
        unint64_t v22 = v19 + v21;
        unint64_t v23 = v20 + v21;
        if (v20 < v22 && v19 < v23) {
          goto LABEL_31;
        }
        swift_arrayInitWithCopy();
        if (v8)
        {
          uint64_t v25 = *(void *)(v3 + 16);
          BOOL v26 = __OFADD__(v25, v8);
          uint64_t v27 = v25 + v8;
          if (v26) {
            goto LABEL_30;
          }
          *(void *)(v3 + 16) = v27;
        }
        goto LABEL_4;
      }
    }
    if (v8) {
      goto LABEL_28;
    }
LABEL_4:
    ++v6;
    swift_bridgeObjectRelease();
    if (v4 == v6)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v3;
      return result;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0305918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x697461726F636564 && a2 == 0xEB00000000736E6FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C03059C8(uint64_t a1)
{
  unint64_t v2 = sub_1BFC91838();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0305A04(uint64_t a1)
{
  unint64_t v2 = sub_1BFC91838();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL FormatDecorationCollection.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

NewsFeed::FormatDecorationCollection __swiftcall FormatDecorationCollection.init()()
{
  *uint64_t v0 = MEMORY[0x1E4FBC860];
  return result;
}

void sub_1C0305A64(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

__n128 sub_1C0305A74(unint64_t *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v7[4] = *(_OWORD *)(a2 + 64);
  v7[5] = v3;
  uint64_t v8 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  void v7[2] = *(_OWORD *)(a2 + 32);
  v7[3] = v5;
  sub_1BFFF0974(a1, v7, *v2);
  return result;
}

ValueMetadata *type metadata accessor for FormatDecorationCollection()
{
  return &type metadata for FormatDecorationCollection;
}

unsigned char *storeEnumTagSinglePayload for FormatDecorationCollection.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0305B68);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDecorationCollection.CodingKeys()
{
  return &type metadata for FormatDecorationCollection.CodingKeys;
}

unint64_t sub_1C0305BA4()
{
  unint64_t result = qword_1EA1999F0[0];
  if (!qword_1EA1999F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1999F0);
  }
  return result;
}

uint64_t FeedItemFilterMatcherType.wrap<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 16))(v11, v4, v9);
  FeedItemFilterWrapperMatcher.init(matcher:translator:)((uint64_t)v11, a1, a2, a3, a4);
  return swift_retain();
}

uint64_t dispatch thunk of FeedItemFilterMatcherType.createApplicator()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedItemFilterMatcherType.debugName(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

void sub_1C0305D1C()
{
  type metadata accessor for FormatObject();
  if (v0 <= 0x3F)
  {
    sub_1C031439C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1C0305DE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v270 = *(void *)(a3 + 16);
  uint64_t v286 = *(void *)(v270 - 8);
  uint64_t v275 = *(void *)(v286 + 64);
  uint64_t v274 = sub_1C151928C();
  uint64_t v3 = *(void *)(v274 - 8);
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  int v280 = *(_DWORD *)(v3 + 80);
  size_t v5 = *(void *)(v3 + 64);
  size_t v283 = v5;
  uint64_t v272 = v3;
  if (!v4) {
    ++v5;
  }
  size_t v282 = v5;
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v261 = v7;
  uint64_t v262 = v6;
  int v278 = *(_DWORD *)(v7 + 80);
  uint64_t v263 = sub_1C151D6DC();
  uint64_t v8 = *(void *)(v263 - 8);
  int v276 = *(_DWORD *)(v8 + 80);
  unint64_t v9 = v276 | (unint64_t)v278;
  uint64_t v10 = sub_1C1518CDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  int v13 = *(_DWORD *)(v11 + 80);
  uint64_t v14 = v13;
  uint64_t v15 = v13 | 7;
  unint64_t v16 = v9 | v280 | v15;
  unsigned int v273 = v4;
  if (v4 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = v4;
  }
  if (v17 - 1 < v17) {
    unsigned int v18 = v17;
  }
  else {
    unsigned int v18 = v17 - 1;
  }
  uint64_t v259 = v278 + 16;
  uint64_t v266 = v278;
  uint64_t v260 = *(void *)(v7 + 64) + 7;
  uint64_t v19 = v276 + 16;
  uint64_t v265 = v276;
  uint64_t v268 = v8;
  uint64_t v20 = (v13 + 176) & ~v15;
  uint64_t v264 = v13 | 7;
  uint64_t v21 = (v13 + 16) & ~v15;
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v22 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v8 + 64) + 1;
  }
  unint64_t v23 = v9 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  unint64_t v258 = v276 | (unint64_t)v278;
  unint64_t v24 = ((((((((((((((v22
                    + 7
                    + ((v276
                      + 16
                      + ((((((((v260 + ((v278 + 16) & ~(unint64_t)v278)) & 0xFFFFFFFFFFFFFFF8)
                            + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 23) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v276)) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v25 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  else {
    uint64_t v25 = *(void *)(*(void *)(v10 - 8) + 64) + 1;
  }
  unint64_t v26 = ((v25
        + 7
        + ((v25 + v13 + ((v13 + 48) & ~(unint64_t)v13) + v21) & ~(unint64_t)v13)) & 0xFFFFFFFFFFFFFFF8)
      + v280
      + 8;
  unint64_t v27 = ((v283 + v13 + ((v26 + v20) & ~(unint64_t)v280)) & ~(unint64_t)v13)
      + v25;
  if (v24 > v27) {
    unint64_t v27 = ((((((((((((((v22
  }
                      + 7
                      + ((v276
                        + 16
                        + ((((((((v260 + ((v278 + 16) & ~(unint64_t)v278)) & 0xFFFFFFFFFFFFFFF8)
                              + 23) & 0xFFFFFFFFFFFFFFF8)
                            + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v276)) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  if (v27 <= v24 + ((v9 + 48) & v23)) {
    unint64_t v27 = v24 + ((v9 + 48) & v23);
  }
  if (v27 <= 0x90) {
    uint64_t v28 = 144;
  }
  else {
    uint64_t v28 = v27;
  }
  unint64_t v29 = v16 | *(_DWORD *)(v286 + 80);
  if (v29 != 7) {
    goto LABEL_27;
  }
  if (((v278 | v280 | v276 | v13 | *(_DWORD *)(v286 + 80)) & 0x100000) != 0) {
    goto LABEL_27;
  }
  uint64_t v30 = v280;
  uint64_t v31 = v280 | 7;
  uint64_t v32 = v31 + v275;
  uint64_t v33 = v280 + 16;
  unsigned int v34 = v18;
  size_t v35 = v283 + v280;
  size_t v279 = v282 + 7;
  unint64_t v281 = ((v31 + v275) & ~v31)
       + v16
       + ((((((((v282 + 7 + ((v283 + v30 + ((v283 + v30 + (v33 & ~v30)) & ~v30)) & ~v30)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  uint64_t v257 = v30 + 48;
  size_t v36 = ((v30 + 128) & ~v30) + v283;
  size_t v277 = v36 + v31;
  size_t v253 = v283 + 7;
  unint64_t v254 = ((v283 + 7) & 0xFFFFFFFFFFFFFFF8) + v16 + 8;
  unint64_t __n = ((v254 + ((v36 + v31 + ((v30 + 48) & ~v31)) & ~v31)) & ~v16)
      + (((v28 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (__n + (v281 & ~v16) > 0x18)
  {
LABEL_27:
    uint64_t v49 = *a2;
    *a1 = *a2;
    uint64_t v39 = (uint64_t *)(v49 + ((v29 + 16) & ~v29));
    swift_retain();
  }
  else
  {
    size_t v250 = ((v30 + 128) & ~v30) + v283;
    unint64_t v242 = v9 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
    uint64_t v247 = v22 + 7;
    uint64_t v243 = v14 + 16;
    size_t v244 = v22;
    uint64_t v251 = v14;
    uint64_t v236 = v14 + 48;
    uint64_t v237 = v25 + v14 + ((v14 + 48) & ~v14);
    uint64_t v238 = v25 + 7;
    unint64_t v239 = v26;
    uint64_t v240 = v283 + v14;
    uint64_t v241 = v10;
    size_t v245 = v25;
    uint64_t v246 = v12;
    uint64_t v256 = v28;
    uint64_t v37 = ~v31;
    uint64_t v248 = v30;
    uint64_t v38 = ~v30;
    unint64_t v284 = ~v16;
    uint64_t v39 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v286 + 16))(a1, a2, v270);
    uint64_t v40 = (void *)(((unint64_t)a1 + v32) & v37);
    uint64_t v287 = v37;
    uint64_t v41 = (void *)(((unint64_t)a2 + v32) & v37);
    *uint64_t v40 = *v41;
    v40[1] = v41[1];
    unint64_t v42 = ((unint64_t)v40 + v33) & ~v30;
    unint64_t v43 = ((unint64_t)v41 + v33) & ~v30;
    uint64_t v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v272 + 16);
    swift_bridgeObjectRetain();
    v44(v42, v43, v274);
    unint64_t v45 = (v35 + v42) & v38;
    unint64_t v46 = (v35 + v43) & v38;
    v44(v45, v46, v274);
    uint64_t v47 = (void *)((v35 + v45) & v38);
    uint64_t v249 = v38;
    uint64_t v48 = (const void *)((v35 + v46) & v38);
    uint64_t v271 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
    uint64_t v252 = (void (*)(uint64_t, unint64_t, uint64_t))v44;
    if (v271(v48, 1, v274))
    {
      memcpy(v47, v48, v282);
    }
    else
    {
      v44((unint64_t)v47, (unint64_t)v48, v274);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v47, 0, 1, v274);
    }
    uint64_t v50 = (void *)(((unint64_t)v47 + v279) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v51 = (void *)(((unint64_t)v48 + v279) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v50 = *v51;
    unint64_t v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v52 = *v53;
    uint64_t v54 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v55 = (void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v54 = *v55;
    *(void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v56 = v284;
    uint64_t v57 = (void *)(((unint64_t)a1 + v281) & v284);
    uint64_t v58 = (void *)(((unint64_t)a2 + v281) & v284);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v34 & 0x80000000) != 0)
    {
      uint64_t v60 = v273;
      if (v271((const void *)((v277 + (((unint64_t)v58 + v257) & v37)) & v37), v273, v274))
      {
LABEL_33:
        memcpy(v57, v58, __n);
        return v39;
      }
    }
    else
    {
      unint64_t v59 = *(void *)((((unint64_t)a2 + v281) & v284) + 8);
      if (v59 >= 0xFFFFFFFF) {
        LODWORD(v59) = -1;
      }
      uint64_t v60 = v273;
      if (v59 != -1) {
        goto LABEL_33;
      }
    }
    *uint64_t v57 = *v58;
    *(void *)((((unint64_t)a1 + v281) & v284) + 8) = *(void *)((((unint64_t)a2 + v281) & v284) + 8);
    *(void *)((((unint64_t)a1 + v281) & v284) + 0x10) = *(void *)((((unint64_t)a2 + v281) & v284)
                                                                           + 0x10);
    *(unsigned char *)((((unint64_t)a1 + v281) & v284) + 0x18) = *(unsigned char *)((((unint64_t)a2 + v281) & v284) + 0x18);
    *(void *)((((unint64_t)a1 + v281) & v284) + 0x20) = *(void *)((((unint64_t)a2 + v281) & v284)
                                                                           + 0x20);
    *(void *)((((unint64_t)a1 + v281) & v284) + 0x28) = *(void *)((((unint64_t)a2 + v281) & v284)
                                                                           + 0x28);
    uint64_t v61 = (void *)(((unint64_t)v57 + v257) & v37);
    uint64_t v62 = (uint64_t *)(((unint64_t)v58 + v257) & v37);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v60 & 0x80000000) != 0)
    {
      unsigned int v64 = v271((const void *)((v248 + (((unint64_t)v62 + 71) & 0xFFFFFFFFFFFFFFF8) + 64) & v249), v60, v274);
    }
    else
    {
      unint64_t v63 = *(void *)((((unint64_t)v58 + v257) & v37) + 0x38);
      if (v63 >= 0xFFFFFFFF) {
        LODWORD(v63) = -1;
      }
      unsigned int v64 = v63 + 1;
    }
    uint64_t v65 = v256;
    uint64_t v66 = v252;
    if (v64)
    {
      memcpy(v61, v62, v250);
      uint64_t v67 = v274;
    }
    else
    {
      uint64_t v69 = *v62;
      uint64_t v68 = v62[1];
      unsigned __int8 v70 = *((unsigned char *)v62 + 16);
      sub_1C024FAC0(*v62, v68, v70);
      *uint64_t v61 = v69;
      v61[1] = v68;
      *((unsigned char *)v61 + 16) = v70;
      uint64_t v71 = v61 + 3;
      uint64_t v72 = v62 + 3;
      unsigned int v73 = *((unsigned __int8 *)v62 + 40);
      if ((((v73 >> 6) & 0xFFFFFF83 | (4 * ((v73 >> 1) & 0x1F))) ^ 0x7F) < 0x7D)
      {
        long long v76 = *(_OWORD *)v72;
        *((unsigned char *)v61 + 40) = *((unsigned char *)v62 + 40);
        *uint64_t v71 = v76;
      }
      else
      {
        uint64_t v74 = *v72;
        unint64_t v75 = v62[4];
        sub_1C00F5ACC(*v72, v75, *((unsigned char *)v62 + 40));
        *(void *)uint64_t v71 = v74;
        v61[4] = v75;
        *((unsigned char *)v61 + 40) = v73;
      }
      v61[6] = v62[6];
      v61[7] = v62[7];
      unint64_t v77 = ((unint64_t)v61 + 71) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v78 = ((unint64_t)v62 + 71) & 0xFFFFFFFFFFFFFFF8;
      unsigned int v79 = *(unsigned __int16 *)(v78 + 44);
      uint64_t v80 = *(unsigned int *)(v78 + 40);
      swift_bridgeObjectRetain();
      if (v79 >> 9 <= 0x7EuLL)
      {
        unint64_t v83 = v80 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v79 << 32);
        uint64_t v84 = *(void *)v78;
        uint64_t v85 = *(void *)(v78 + 8);
        uint64_t v86 = *(void *)(v78 + 16);
        uint64_t v87 = *(void *)(v78 + 24);
        uint64_t v88 = *(void *)(v78 + 32);
        sub_1C017F524(*(void *)v78, v85, v86, v87, v88, v83);
        *(void *)unint64_t v77 = v84;
        *(void *)(v77 + 8) = v85;
        *(void *)(v77 + 16) = v86;
        *(void *)(v77 + 24) = v87;
        uint64_t v66 = v252;
        *(void *)(v77 + 32) = v88;
        *(_WORD *)(v77 + 44) = WORD2(v83);
        *(_DWORD *)(v77 + 40) = v83;
      }
      else
      {
        long long v81 = *(_OWORD *)v78;
        long long v82 = *(_OWORD *)(v78 + 16);
        *(_OWORD *)(v77 + 30) = *(_OWORD *)(v78 + 30);
        *(_OWORD *)unint64_t v77 = v81;
        *(_OWORD *)(v77 + 16) = v82;
      }
      uint64_t v65 = v256;
      *(void *)(v77 + 48) = *(void *)(v78 + 48);
      *(void *)(v77 + 56) = *(void *)(v78 + 56);
      uint64_t v89 = (v248 + 64 + v77) & v249;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v67 = v274;
      v66(v89, (v248 + 64 + v78) & v249, v274);
      unint64_t v56 = v284;
    }
    unint64_t v90 = ((unint64_t)v61 + v277) & v287;
    unint64_t v91 = ((unint64_t)v62 + v277) & v287;
    v66(v90, v91, v67);
    *(void *)((v253 + v90) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v253 + v91) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v92 = (v254 + v90) & v56;
    unint64_t v93 = (v254 + v91) & v56;
    unsigned int v94 = *(unsigned __int8 *)(v93 + v65);
    swift_bridgeObjectRetain();
    if (v94 < 0xC)
    {
      uint64_t v96 = v268;
      uint64_t v97 = v251;
    }
    else
    {
      if (v65 <= 3) {
        uint64_t v95 = v65;
      }
      else {
        uint64_t v95 = 4;
      }
      uint64_t v96 = v268;
      uint64_t v97 = v251;
      switch(v95)
      {
        case 1:
          int v98 = *(unsigned __int8 *)v93;
          goto LABEL_59;
        case 2:
          int v98 = *(unsigned __int16 *)v93;
          goto LABEL_59;
        case 3:
          int v98 = *(unsigned __int16 *)v93 | (*(unsigned __int8 *)(v93 + 2) << 16);
          goto LABEL_59;
        case 4:
          int v98 = *(_DWORD *)v93;
LABEL_59:
          if (v65 < 4) {
            unsigned int v94 = (v98 | ((v94 - 12) << (8 * v65))) + 12;
          }
          else {
            unsigned int v94 = v98 + 12;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v99 = ~v266;
    uint64_t v100 = ~v265;
    uint64_t v101 = ~v264;
    uint64_t v102 = ~v97;
    switch(v94)
    {
      case 1u:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        *(void *)(v92 + 16) = *(void *)(v93 + 16);
        *(void *)(v92 + 24) = *(void *)(v93 + 24);
        *(void *)(v92 + 32) = *(void *)(v93 + 32);
        *(void *)(v92 + 40) = *(void *)(v93 + 40);
        *(void *)(v92 + 48) = *(void *)(v93 + 48);
        *(void *)(v92 + 56) = *(void *)(v93 + 56);
        uint64_t v117 = *(void *)(v93 + 64);
        *(unsigned char *)(v92 + 72) = *(unsigned char *)(v93 + 72);
        *(void *)(v92 + 64) = v117;
        *(void *)(v92 + 80) = *(void *)(v93 + 80);
        *(void *)(v92 + 88) = *(void *)(v93 + 88);
        long long v291 = (uint64_t *)(v93 + 96);
        unsigned __int8 v118 = *(unsigned char *)(v93 + 106);
        int v119 = *(unsigned __int16 *)(v93 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v118 == 255)
        {
          uint64_t v120 = *v291;
          *(_DWORD *)(v92 + 103) = *(_DWORD *)(v93 + 103);
          *(void *)(v92 + 96) = v120;
        }
        else
        {
          uint64_t v184 = v119 & 0xFF00FFFF | (v118 << 16);
          uint64_t v185 = *v291;
          sub_1BFFA742C(*v291, v184, SBYTE2(v184), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *(void *)(v92 + 96) = v185;
          *(_WORD *)(v92 + 104) = v184;
          *(unsigned char *)(v92 + 106) = BYTE2(v184);
        }
        uint64_t v65 = v256;
        *(unsigned char *)(v92 + v256) = 1;
        goto LABEL_99;
      case 2u:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        *(void *)(v92 + 16) = *(void *)(v93 + 16);
        *(void *)(v92 + 24) = *(void *)(v93 + 24);
        *(void *)(v92 + 32) = *(void *)(v93 + 32);
        *(void *)(v92 + 40) = *(void *)(v93 + 40);
        *(unsigned char *)(v92 + 48) = *(unsigned char *)(v93 + 48);
        *(void *)(v92 + 56) = *(void *)(v93 + 56);
        unint64_t v121 = *(void *)(v93 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v121 <= 2)
        {
          *(_OWORD *)(v92 + 64) = *(_OWORD *)(v93 + 64);
        }
        else
        {
          *(unsigned char *)(v92 + 64) = *(unsigned char *)(v93 + 64);
          *(void *)(v92 + 72) = *(void *)(v93 + 72);
          swift_bridgeObjectRetain();
        }
        *(void *)(v92 + 80) = *(void *)(v93 + 80);
        *(void *)(v92 + 88) = *(void *)(v93 + 88);
        *(void *)(v92 + 96) = *(void *)(v93 + 96);
        *(void *)(v92 + 104) = *(void *)(v93 + 104);
        *(void *)(v92 + 112) = *(void *)(v93 + 112);
        *(void *)(v92 + 120) = *(void *)(v93 + 120);
        *(unsigned char *)(v92 + 128) = *(unsigned char *)(v93 + 128);
        *(void *)(v92 + 136) = *(void *)(v93 + 136);
        char v211 = 2;
        goto LABEL_95;
      case 3u:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        *(void *)(v92 + 16) = *(void *)(v93 + 16);
        *(void *)(v92 + 24) = *(void *)(v93 + 24);
        *(void *)(v92 + 32) = *(void *)(v93 + 32);
        *(void *)(v92 + 40) = *(void *)(v93 + 40);
        unint64_t v122 = *(void *)(v93 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v122 >= 0xF)
        {
          *(void *)(v92 + 48) = *(void *)(v93 + 48);
          *(void *)(v92 + 56) = *(void *)(v93 + 56);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v92 + 48) = *(_OWORD *)(v93 + 48);
        }
        *(void *)(v92 + 64) = *(void *)(v93 + 64);
        *(void *)(v92 + 72) = *(void *)(v93 + 72);
        *(void *)(v92 + 80) = *(void *)(v93 + 80);
        *(void *)(v92 + 88) = *(void *)(v93 + 88);
        *(void *)(v92 + 96) = *(void *)(v93 + 96);
        *(void *)(v92 + 104) = *(void *)(v93 + 104);
        *(void *)(v92 + 112) = *(void *)(v93 + 112);
        *(unsigned char *)(v92 + 120) = *(unsigned char *)(v93 + 120);
        *(unsigned char *)(v92 + v256) = 3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v65 = v256;
        swift_retain();
        goto LABEL_97;
      case 4u:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        *(void *)(v92 + 16) = *(void *)(v93 + 16);
        *(void *)(v92 + 24) = *(void *)(v93 + 24);
        *(void *)(v92 + 32) = *(void *)(v93 + 32);
        *(void *)(v92 + 40) = *(void *)(v93 + 40);
        *(void *)(v92 + 48) = *(void *)(v93 + 48);
        *(unsigned char *)(v92 + v256) = 4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v65 = v256;
        swift_bridgeObjectRetain();
        goto LABEL_98;
      case 5u:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        uint64_t v123 = (void *)((v92 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v124 = (void *)((v93 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v123 = *v124;
        v123[1] = v124[1];
        unint64_t v125 = ((unint64_t)v123 + 23) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v126 = ((unint64_t)v124 + 23) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v125 = *(void *)v126;
        *(void *)(v125 + 8) = *(void *)(v126 + 8);
        *(unsigned char *)(v125 + 16) = *(unsigned char *)(v126 + 16);
        *(unsigned char *)(v125 + 17) = *(unsigned char *)(v126 + 17);
        uint64_t v127 = (void *)((v125 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v128 = (void *)((v126 + 25) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v127 = *v128;
        unint64_t v129 = (void *)(((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v130 = (void *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v129 = *v130;
        uint64_t v131 = (void *)(((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v132 = (void *)(((unint64_t)v130 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v131 = *v132;
        uint64_t v133 = (void *)(((unint64_t)v131 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v134 = (void *)(((unint64_t)v132 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v133 = *v134;
        unint64_t v135 = (void *)(((unint64_t)v133 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v136 = (void *)(((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v135 = *v136;
        long long v137 = (void *)(((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8);
        id v138 = (void *)(((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v137 = *v138;
        uint64_t v139 = (void *)(((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v140 = (void *)(((unint64_t)v138 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v139 = *v140;
        uint64_t v141 = (void *)(((unint64_t)v139 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v142 = (void *)(((unint64_t)v140 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v141 = *v142;
        uint64_t v143 = (void *)(((unint64_t)v141 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v144 = (void *)(((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v143 = *v144;
        uint64_t v145 = (void *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v146 = (void *)(((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v145 = *v146;
        long long v147 = (void *)(((unint64_t)v145 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v148 = (void *)(((unint64_t)v146 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v147 = *v148;
        uint64_t v149 = (void *)(((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v150 = (void *)(((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v149 = *v150;
        __int16 v151 = (void *)(((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v152 = (void *)(((unint64_t)v150 + 15) & 0xFFFFFFFFFFFFFFF8);
        *__int16 v151 = *v152;
        unint64_t v153 = ((unint64_t)v151 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v154 = ((unint64_t)v152 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v155 = *(void *)(v154 + 8);
        if (v155 >= 0xFFFFFFFF) {
          LODWORD(v155) = -1;
        }
        int v267 = v155;
        unsigned int v269 = v155 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v269 > 2)
        {
          *(_OWORD *)unint64_t v153 = *(_OWORD *)v154;
          uint64_t v156 = v251;
          uint64_t v157 = v243;
        }
        else
        {
          uint64_t v156 = v251;
          uint64_t v157 = v243;
          if (v267 == -1)
          {
            *(unsigned char *)unint64_t v153 = *(unsigned char *)v154;
            *(void *)(v153 + 8) = *(void *)(v154 + 8);
            swift_bridgeObjectRetain();
            uint64_t v156 = v251;
          }
          else
          {
            *(_OWORD *)unint64_t v153 = *(_OWORD *)v154;
          }
        }
        int v217 = (void *)((v157 + v154) & v101);
        long long v285 = (void *)((v157 + v153) & v101);
        *long long v285 = *v217;
        uint64_t v218 = (void *)(((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8);
        v219 = (void *)(((unint64_t)v217 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v218 = *v219;
        uint64_t v220 = v156 + 8;
        uint64_t v221 = (void *)(((unint64_t)v218 + v220) & v101);
        uint64_t v222 = (void *)(((unint64_t)v219 + v220) & v101);
        unint64_t v223 = v222[1];
        if (v223 >= 0xFFFFFFFF) {
          LODWORD(v223) = -1;
        }
        int v224 = v223 - 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v288 = v217;
        if (v224 < 0)
        {
          *uint64_t v221 = *v222;
          v221[1] = v222[1];
          v221[2] = v222[2];
          v221[3] = v222[3];
          v221[4] = v222[4];
          v221[5] = v222[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v225 = *(_OWORD *)v222;
          long long v226 = *((_OWORD *)v222 + 2);
          *((_OWORD *)v221 + 1) = *((_OWORD *)v222 + 1);
          *((_OWORD *)v221 + 2) = v226;
          *(_OWORD *)uint64_t v221 = v225;
        }
        uint64_t v227 = (void *)(((unint64_t)v221 + v236) & v102);
        char v228 = (const void *)(((unint64_t)v222 + v236) & v102);
        long long v293 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v246 + 48);
        if (v293(v228, 1, v241))
        {
          memcpy(v227, v228, v245);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v246 + 16))(v227, v228, v241);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v246 + 56))(v227, 0, 1, v241);
        }
        char v229 = (void *)(((unint64_t)v221 + v237) & v102);
        uint64_t v230 = (const void *)(((unint64_t)v222 + v237) & v102);
        if (v293(v230, 1, v241))
        {
          size_t v231 = v245;
          memcpy(v229, v230, v245);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v246 + 16))(v229, v230, v241);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v246 + 56))(v229, 0, 1, v241);
          size_t v231 = v245;
        }
        *(void *)(((unint64_t)v229 + v238) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v230 + v238) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v232 = ((unint64_t)v285 + v239) & v249;
        unint64_t v233 = ((unint64_t)v288 + v239) & v249;
        swift_bridgeObjectRetain();
        v252(v232, v233, v274);
        uint64_t v234 = (void *)((v240 + v232) & v102);
        uint64_t v235 = (const void *)((v240 + v233) & v102);
        if (v293(v235, 1, v241))
        {
          memcpy(v234, v235, v231);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v246 + 16))(v234, v235, v241);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v246 + 56))(v234, 0, 1, v241);
        }
        uint64_t v65 = v256;
        *(unsigned char *)(v92 + v256) = 5;
        goto LABEL_99;
      case 6u:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        *(void *)(v92 + 16) = *(void *)(v93 + 16);
        *(unsigned char *)(v92 + v65) = 6;
        swift_bridgeObjectRetain();
        goto LABEL_98;
      case 7u:
        *(void *)unint64_t v92 = *(void *)v93;
        *(unsigned char *)(v92 + v65) = 7;
        swift_retain();
        goto LABEL_99;
      case 8u:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        *(void *)(v92 + 16) = *(void *)(v93 + 16);
        *(void *)(v92 + 24) = *(void *)(v93 + 24);
        *(void *)(v92 + 32) = *(void *)(v93 + 32);
        *(void *)(v92 + 40) = *(void *)(v93 + 40);
        *(void *)(v92 + 48) = *(void *)(v93 + 48);
        *(void *)(v92 + 56) = *(void *)(v93 + 56);
        *(void *)(v92 + 64) = *(void *)(v93 + 64);
        *(unsigned char *)(v92 + v256) = 8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v65 = v256;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_98;
      case 9u:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        *(void *)(v92 + 16) = *(void *)(v93 + 16);
        *(void *)(v92 + 24) = *(void *)(v93 + 24);
        *(void *)(v92 + 32) = *(void *)(v93 + 32);
        *(void *)(v92 + 40) = *(void *)(v93 + 40);
        *(void *)(v92 + 48) = *(void *)(v93 + 48);
        *(void *)(v92 + 56) = *(void *)(v93 + 56);
        *(void *)(v92 + 64) = *(void *)(v93 + 64);
        *(void *)(v92 + 72) = *(void *)(v93 + 72);
        *(unsigned char *)(v92 + 80) = *(unsigned char *)(v93 + 80);
        *(void *)(v92 + 88) = *(void *)(v93 + 88);
        *(void *)(v92 + 96) = *(void *)(v93 + 96);
        *(unsigned char *)(v92 + 104) = *(unsigned char *)(v93 + 104);
        *(unsigned char *)(v92 + v256) = 9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v65 = v256;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_98;
      case 0xAu:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        *(void *)(v92 + 16) = *(void *)(v93 + 16);
        *(void *)(v92 + 24) = *(void *)(v93 + 24);
        uint64_t v158 = *(void *)(v93 + 32);
        uint64_t v159 = *(void *)(v93 + 40);
        uint64_t v160 = *(void *)(v93 + 48);
        uint64_t v161 = *(void *)(v93 + 56);
        uint64_t v162 = *(void *)(v93 + 64);
        uint64_t v163 = *(void *)(v93 + 72);
        unsigned __int8 v164 = *(unsigned char *)(v93 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v158, v159, v160, v161, v162, v163, v164);
        *(void *)(v92 + 32) = v158;
        *(void *)(v92 + 40) = v159;
        uint64_t v65 = v256;
        *(void *)(v92 + 48) = v160;
        *(void *)(v92 + 56) = v161;
        *(void *)(v92 + 64) = v162;
        *(void *)(v92 + 72) = v163;
        *(unsigned char *)(v92 + 80) = v164;
        *(unsigned char *)(v92 + v256) = 10;
        goto LABEL_99;
      case 0xBu:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        uint64_t v165 = (void *)((v92 + 23) & 0xFFFFFFFFFFFFFFF8);
        long long v166 = (void *)((v93 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v165 = *v166;
        v165[1] = v166[1];
        uint64_t v167 = (void *)(((unint64_t)v165 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v168 = (void *)(((unint64_t)v166 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v167 = *v168;
        v167[1] = v168[1];
        uint64_t v169 = (void *)(((unint64_t)v167 + v258 + 16) & v242);
        long long v170 = (void *)(((unint64_t)v168 + v258 + 16) & v242);
        *uint64_t v169 = *v170;
        v169[1] = v170[1];
        unint64_t v171 = ((unint64_t)v169 + v259) & v99;
        unint64_t v172 = ((unint64_t)v170 + v259) & v99;
        __int16 v292 = *(void (**)(unint64_t, unint64_t, uint64_t))(v261 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v292(v171, v172, v262);
        uint64_t v173 = (void *)((v260 + v171) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v174 = (void *)((v260 + v172) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v173 = *v174;
        v173[1] = v174[1];
        uint64_t v175 = (void *)(((unint64_t)v173 + 23) & 0xFFFFFFFFFFFFFFF8);
        long long v176 = (void *)(((unint64_t)v174 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v175 = *v176;
        v175[1] = v176[1];
        long long v177 = (void *)(((unint64_t)v175 + 23) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v178 = (void *)(((unint64_t)v176 + 23) & 0xFFFFFFFFFFFFFFF8);
        *long long v177 = *v178;
        v177[1] = v178[1];
        uint64_t v179 = (void *)(((unint64_t)v177 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v180 = (void *)(((unint64_t)v178 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v179 = *v180;
        v179[1] = v180[1];
        uint64_t v181 = (void *)(((unint64_t)v179 + v19) & v100);
        char v182 = (const void *)(((unint64_t)v180 + v19) & v100);
        uint64_t v183 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v96 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v183(v182, 1, v263))
        {
          memcpy(v181, v182, v244);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v96 + 16))(v181, v182, v263);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56))(v181, 0, 1, v263);
        }
        long long v199 = (void *)(((unint64_t)v181 + v247) & 0xFFFFFFFFFFFFFFF8);
        long long v200 = (void *)(((unint64_t)v182 + v247) & 0xFFFFFFFFFFFFFFF8);
        *long long v199 = *v200;
        v201 = (void *)(((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v202 = (void *)(((unint64_t)v200 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v201 = *v202;
        uint64_t v203 = (void *)(((unint64_t)v201 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v204 = (void *)(((unint64_t)v202 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v203 = *v204;
        uint64_t v205 = (void *)(((unint64_t)v203 + 15) & 0xFFFFFFFFFFFFFFF8);
        unsigned int v206 = (void *)(((unint64_t)v204 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v205 = *v206;
        uint64_t v207 = (void *)(((unint64_t)v205 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v208 = (void *)(((unint64_t)v206 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v207 = *v208;
        uint64_t v209 = (void *)(((unint64_t)v207 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v210 = (void *)(((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v209 = *v210;
        *(void *)(((unint64_t)v209 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v210 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v211 = 11;
LABEL_95:
        uint64_t v198 = v256;
        *(unsigned char *)(v92 + v256) = v211;
        goto LABEL_96;
      default:
        *(void *)unint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = *(void *)(v93 + 8);
        uint64_t v103 = (v259 + v92) & v99;
        unint64_t v104 = (v259 + v93) & v99;
        uint64_t v105 = *(void (**)(uint64_t, unint64_t, uint64_t))(v261 + 16);
        swift_bridgeObjectRetain();
        v105(v103, v104, v262);
        uint64_t v106 = (void *)((v260 + v103) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v107 = (void *)((v260 + v104) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v106 = *v107;
        v106[1] = v107[1];
        uint64_t v108 = (void *)(((unint64_t)v106 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v109 = (void *)(((unint64_t)v107 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v108 = *v109;
        v108[1] = v109[1];
        uint64_t v110 = (void *)(((unint64_t)v108 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v111 = (void *)(((unint64_t)v109 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v110 = *v111;
        v110[1] = v111[1];
        uint64_t v112 = (void *)(((unint64_t)v110 + 23) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v113 = (void *)(((unint64_t)v111 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v112 = *v113;
        v112[1] = v113[1];
        uint64_t v114 = (void *)(((unint64_t)v112 + v19) & v100);
        uint64_t v115 = (const void *)(((unint64_t)v113 + v19) & v100);
        unint64_t v116 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v96 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v116(v115, 1, v263))
        {
          memcpy(v114, v115, v244);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v96 + 16))(v114, v115, v263);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56))(v114, 0, 1, v263);
        }
        uint64_t v186 = (void *)(((unint64_t)v114 + v247) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v187 = (void *)(((unint64_t)v115 + v247) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v186 = *v187;
        long long v188 = (void *)(((unint64_t)v186 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v189 = (void *)(((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v188 = *v189;
        long long v190 = (void *)(((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v191 = (void *)(((unint64_t)v189 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v190 = *v191;
        uint64_t v192 = (void *)(((unint64_t)v190 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v193 = (void *)(((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v192 = *v193;
        long long v194 = (void *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v195 = (void *)(((unint64_t)v193 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v194 = *v195;
        long long v196 = (void *)(((unint64_t)v194 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v197 = (void *)(((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v196 = *v197;
        *(void *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v198 = v256;
        *(unsigned char *)(v92 + v256) = 0;
LABEL_96:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v65 = v198;
        swift_bridgeObjectRetain();
LABEL_97:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_98:
        swift_bridgeObjectRetain();
LABEL_99:
        unint64_t v212 = (void *)(((v92 | 7) + v65 + 1) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v213 = (uint64_t *)(((v93 | 7) + v65 + 1) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v214 = *v213;
        unint64_t v215 = v213[1];
        sub_1BFE95820(*v213, v215);
        *unint64_t v212 = v214;
        v212[1] = v215;
        *(void *)(((unint64_t)v212 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v213 + 23) & 0xFFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain();
        uint64_t v39 = a1;
        break;
    }
  }
  return v39;
}

uint64_t sub_1C0307878(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v121 = a1;
  uint64_t v123 = (v8 | 7) + v4;
  uint64_t v128 = ~(v8 | 7);
  uint64_t v113 = v8 | 7;
  swift_bridgeObjectRelease();
  uint64_t v127 = ~v8;
  uint64_t v9 = (v8 + 16 + ((v123 + a1) & v128)) & ~v8;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v9, v5);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v115 = (void (*)(unint64_t, uint64_t))v10;
  v10((v11 + v8 + v9) & ~v8, v5);
  uint64_t v12 = (v11 + v8 + ((v11 + v8 + v9) & ~v8)) & ~v8;
  uint64_t v109 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v109(v12, 1, v5)) {
    v10(v12, v5);
  }
  uint64_t v126 = v5;
  unsigned int v119 = *(_DWORD *)(v7 + 84);
  if (v119) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v116 = v123 & v128;
  uint64_t v14 = sub_1C151631C();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v100 = v15;
  uint64_t v101 = v14;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v103 = sub_1C151D6DC();
  uint64_t v17 = *(void *)(v103 - 8);
  uint64_t v114 = v16;
  uint64_t v124 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v18 = sub_1C1518CDC();
  uint64_t v99 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v108 = v124 | v16;
  uint64_t v112 = v20 | 7;
  uint64_t v21 = v124 | v16 | v8 | v20 | 7;
  unint64_t v22 = v121
      + v116
      + v21
      + ((((((((v13 + ((v11 + v8 + ((((v8 + 16) | v8) + v11) & v127)) & v127) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v117 = v21;
  unint64_t v23 = v22 & ~v21;
  if (v119 <= 0x7FFFFFFF) {
    unsigned int v24 = 0x7FFFFFFF;
  }
  else {
    unsigned int v24 = v119;
  }
  if (v24 - 1 >= v24) {
    --v24;
  }
  uint64_t v25 = *(void *)(v15 + 64);
  uint64_t v102 = v17;
  int v107 = *(_DWORD *)(v17 + 84);
  uint64_t v106 = *(void *)(v17 + 64);
  uint64_t v104 = *(void *)(v18 - 8);
  int v26 = *(_DWORD *)(v19 + 84);
  uint64_t v27 = *(void *)(v104 + 64);
  uint64_t v28 = (v8 + 128) & v127;
  uint64_t v122 = v8;
  uint64_t v105 = v11 + v28;
  if ((v24 & 0x80000000) != 0)
  {
    uint64_t v30 = ~(v8 | 7);
    uint64_t v34 = (v11 + v28 + v113 + ((v8 + v23 + 48) & v128)) & v128;
    uint64_t v29 = v119;
    uint64_t v33 = v126;
    uint64_t v35 = *(unsigned __int8 *)(v19 + 80);
    uint64_t result = ((uint64_t (*)(uint64_t))v109)(v34);
    uint64_t v20 = v35;
    if (result) {
      return result;
    }
    goto LABEL_17;
  }
  uint64_t v29 = v119;
  uint64_t v30 = ~(v8 | 7);
  unint64_t v31 = *(void *)(v23 + 8);
  if (v31 >= 0xFFFFFFFF) {
    LODWORD(v31) = -1;
  }
  uint64_t result = (v31 + 1);
  uint64_t v33 = v126;
  if (v31 == -1)
  {
LABEL_17:
    int v97 = v26;
    uint64_t v96 = v27;
    uint64_t v89 = v114 + 16;
    uint64_t v90 = v25 + 7;
    unint64_t v36 = v124
        + 16
        + ((((((((v25 + 7 + ((v114 + 16) & ~v114)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v37 = v20 + 176;
    uint64_t v95 = v20 + 16;
    uint64_t v98 = v20;
    uint64_t v38 = v20 + 48;
    uint64_t v93 = v11;
    unint64_t v94 = v108 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = v11 + 7;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = v122 + v23 + 48;
    uint64_t v41 = v40 & v30;
    if ((v29 & 0x80000000) != 0)
    {
      unsigned int v43 = v109((v122 + ((v41 + 71) & 0xFFFFFFFFFFFFFFF8) + 64) & v127, v29, v33);
    }
    else
    {
      unint64_t v42 = *(void *)((v40 & v30) + 0x38);
      if (v42 >= 0xFFFFFFFF) {
        LODWORD(v42) = -1;
      }
      unsigned int v43 = v42 + 1;
    }
    uint64_t v44 = v117;
    uint64_t v45 = ~v117;
    unint64_t v46 = v36 & ~v124;
    uint64_t v47 = v37 & ~v112;
    uint64_t v48 = v98;
    uint64_t v49 = ~v98;
    uint64_t v88 = v38;
    uint64_t v50 = v38 & ~v98;
    unint64_t v51 = v39 & 0xFFFFFFFFFFFFFFF8;
    int v52 = v97;
    uint64_t v111 = v47;
    uint64_t v110 = v95 & ~v112;
    if (!v43)
    {
      uint64_t v91 = v50;
      sub_1C024F49C(*(void *)v41, *(void *)(v41 + 8), *(unsigned char *)(v41 + 16));
      unsigned int v53 = *(unsigned __int8 *)(v41 + 40);
      if ((((v53 >> 6) & 0xFFFFFF83 | (4 * ((v53 >> 1) & 0x1F))) ^ 0x7F) >= 0x7D) {
        sub_1C00F5AEC(*(void *)(v41 + 24), *(void *)(v41 + 32), v53);
      }
      swift_bridgeObjectRelease();
      unint64_t v54 = (v41 + 71) & 0xFFFFFFFFFFFFFFF8;
      if (*(unsigned __int16 *)(v54 + 44) >> 9 <= 0x7EuLL) {
        sub_1C017F5B0(*(void *)v54, *(void *)(v54 + 8), *(void *)(v54 + 16), *(void *)(v54 + 24), *(void *)(v54 + 32), *(unsigned int *)(v54 + 40) | ((unint64_t)*(unsigned __int16 *)(v54 + 44) << 32));
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v115((v122 + v54 + 64) & v127, v126);
      uint64_t v48 = v98;
      uint64_t v49 = ~v98;
      uint64_t v50 = v91;
      uint64_t v30 = v128;
      uint64_t v44 = v117;
      uint64_t v45 = ~v117;
      unint64_t v51 = v39 & 0xFFFFFFFFFFFFFFF8;
      int v52 = v97;
    }
    uint64_t v55 = (v105 + v113 + v41) & v30;
    uint64_t v56 = v50;
    v115(v55, v126);
    swift_bridgeObjectRelease();
    uint64_t v57 = v106;
    if (!v107) {
      uint64_t v57 = v106 + 1;
    }
    uint64_t v58 = (unsigned __int8 *)((v44 + v51 + v55 + 8) & v45);
    unint64_t v59 = ((((((((((((((v57 + 7 + v46) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    if (v52) {
      uint64_t v60 = v96;
    }
    else {
      uint64_t v60 = v96 + 1;
    }
    uint64_t v61 = v60 + v56;
    uint64_t v62 = v110 + v48;
    unint64_t v63 = (v122 + 8 + v111 + ((v60 + 7 + ((v110 + v48 + v60 + v56) & v49)) & 0xFFFFFFFFFFFFFFF8)) & v127;
    uint64_t v64 = v93 + v48;
    unint64_t v65 = ((v64 + v63) & v49) + v60;
    if (v59 > v65) {
      unint64_t v65 = v59;
    }
    unint64_t v66 = v59 + ((v108 + 48) & v94);
    if (v65 > v66) {
      unint64_t v66 = v65;
    }
    if (v66 <= 0x90) {
      uint64_t v67 = 144;
    }
    else {
      uint64_t v67 = v66;
    }
    unsigned int v68 = v58[v67];
    unsigned int v69 = v68 - 12;
    uint64_t v70 = v56;
    if (v68 >= 0xC)
    {
      if (v67 <= 3) {
        uint64_t v71 = v67;
      }
      else {
        uint64_t v71 = 4;
      }
      switch(v71)
      {
        case 1:
          int v72 = *v58;
          if (v67 < 4) {
            goto LABEL_50;
          }
          goto LABEL_52;
        case 2:
          int v72 = *(unsigned __int16 *)v58;
          if (v67 >= 4) {
            goto LABEL_52;
          }
          goto LABEL_50;
        case 3:
          int v72 = *(unsigned __int16 *)v58 | (v58[2] << 16);
          if (v67 < 4) {
            goto LABEL_50;
          }
          goto LABEL_52;
        case 4:
          int v72 = *(_DWORD *)v58;
          if (v67 < 4) {
LABEL_50:
          }
            unsigned int v68 = (v72 | (v69 << (8 * v67))) + 12;
          else {
LABEL_52:
          }
            unsigned int v68 = v72 + 12;
          break;
        default:
          break;
      }
    }
    uint64_t v73 = ~v114;
    uint64_t v74 = ~v112;
    uint64_t v75 = v67;
    switch(v68)
    {
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v58[106] != 255)
        {
          uint64_t v77 = *((unsigned __int16 *)v58 + 52) | (v58[106] << 16);
          sub_1BFFA742C(*((void *)v58 + 12), v77, SBYTE2(v77), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        }
        goto LABEL_86;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)v58 + 9) >= 3uLL) {
          swift_bridgeObjectRelease();
        }
        goto LABEL_84;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)v58 + 7) >= 0xFuLL) {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_85;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_85;
      case 5u:
        uint64_t v120 = v61;
        uint64_t v125 = v62;
        uint64_t v92 = v70;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v78 = (((((((((((((((((((((((((((((((unint64_t)(v58 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                       + 25) & 0xFFFFFFFFFFFFFFF8)
                                     + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 15) & 0xFFFFFFFFFFFFFFF8)
                               + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v78 + 8) >= 0xFFFFFFFFuLL) {
          swift_bridgeObjectRelease();
        }
        unint64_t v118 = (v95 + v78) & v74;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v79 = (v98 + ((v118 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v74;
        LODWORD(v80) = -1;
        if (*(void *)(v79 + 8) < 0xFFFFFFFFuLL) {
          uint64_t v80 = *(void *)(((v98 + ((v118 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v74) + 8);
        }
        if ((int)v80 - 1 < 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v81 = v49;
        unint64_t v82 = (v88 + v79) & v49;
        unint64_t v83 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v104 + 48);
        if (!v83(v82, 1, v99)) {
          (*(void (**)(unint64_t, uint64_t))(v104 + 8))(v82, v99);
        }
        unint64_t v84 = (v120 + v98 + v79) & v81;
        if (!v83(v84, 1, v99)) {
          (*(void (**)(unint64_t, uint64_t))(v104 + 8))(v84, v99);
        }
        swift_bridgeObjectRelease();
        unint64_t v85 = (v122 + 8 + v118 + ((v60 + 7 + ((v125 + v92 + v60) & v81)) & 0xFFFFFFFFFFFFFFF8)) & v127;
        v115(v85, v126);
        if (!v83((v64 + v85) & v81, 1, v99)) {
          (*(void (**)(unint64_t, uint64_t))(v104 + 8))((v64 + v85) & v81, v99);
        }
        goto LABEL_86;
      case 6u:
        swift_bridgeObjectRelease();
        goto LABEL_85;
      case 7u:
        swift_release();
        goto LABEL_86;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_85;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_85;
      case 0xAu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEC28BC(*((void *)v58 + 4), *((void *)v58 + 5), *((void *)v58 + 6), *((void *)v58 + 7), *((void *)v58 + 8), *((void *)v58 + 9), v58[80]);
        goto LABEL_86;
      case 0xBu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v76 = v89
            + ((v108 + ((((unint64_t)(v58 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & v94);
        goto LABEL_82;
      default:
        swift_bridgeObjectRelease();
        unint64_t v76 = (unint64_t)&v58[v89];
LABEL_82:
        unint64_t v86 = v76 & v73;
        (*(void (**)(unint64_t, uint64_t))(v100 + 8))(v76 & v73, v101);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v87 = (v124
             + 16
             + ((((((((v90 + v86) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
               + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v124;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v102 + 48))(v87, 1, v103)) {
          (*(void (**)(unint64_t, uint64_t))(v102 + 8))(v87, v103);
        }
LABEL_84:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_85:
        swift_bridgeObjectRelease();
LABEL_86:
        sub_1BFE95664(*(void *)((unint64_t)&v58[v75 + 8] & 0xFFFFFFFFFFFFFFF8), *(void *)(((unint64_t)&v58[v75 + 8] & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t result = swift_bridgeObjectRelease();
        break;
    }
  }
  return result;
}

uint64_t sub_1C0308770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 | 7) + v6;
  uint64_t v292 = a1;
  uint64_t v293 = ~(v10 | 7);
  uint64_t v12 = (void *)((v11 + a1) & v293);
  uint64_t v285 = v10 | 7;
  uint64_t v287 = a2;
  uint64_t v283 = v11;
  uint64_t v13 = (void *)((v11 + a2) & v293);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  uint64_t v295 = ~v10;
  uint64_t v14 = ((unint64_t)v12 + v10 + 16) & ~v10;
  uint64_t v15 = ((unint64_t)v13 + v10 + 16) & ~v10;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  v16(v14, v15, v7);
  size_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = (v17 + v10 + v14) & ~v10;
  v16(v18, (v17 + v10 + v15) & ~v10, v7);
  uint64_t v19 = (void *)((v17 + v10 + v18) & ~v10);
  uint64_t v20 = (const void *)((v17 + v10 + ((v17 + v10 + v15) & ~v10)) & ~v10);
  uint64_t v251 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v254 = v7;
  uint64_t v249 = v16;
  if (v251(v20, 1, v7))
  {
    unsigned int v21 = *(_DWORD *)(v9 + 84);
    if (v21) {
      size_t v22 = v17;
    }
    else {
      size_t v22 = v17 + 1;
    }
    memcpy(v19, v20, v22);
  }
  else
  {
    v16((uint64_t)v19, (uint64_t)v20, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v7);
    unsigned int v21 = *(_DWORD *)(v9 + 84);
  }
  size_t v23 = v17;
  if (v21) {
    size_t v24 = v17;
  }
  else {
    size_t v24 = v17 + 1;
  }
  uint64_t v25 = (void *)(((unint64_t)v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  int v26 = (void *)(((unint64_t)v20 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = *v26;
  uint64_t v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v27 = *v28;
  uint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v29 = *v30;
  *(void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v278 = v283 & v293;
  unint64_t v280 = (((((((v24 + ((v17 + v10 + ((((v10 + 16) | v10) + v17) & v295)) & v295) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = sub_1C151631C();
  uint64_t v32 = v10;
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v243 = v33;
  uint64_t v244 = v31;
  uint64_t v34 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v247 = sub_1C151D6DC();
  uint64_t v275 = *(void *)(v247 - 8);
  int64_t v35 = *(unsigned __int8 *)(v275 + 80);
  unint64_t v36 = v35 | v34;
  uint64_t v239 = sub_1C1518CDC();
  uint64_t v37 = *(void *)(v239 - 8);
  uint64_t v38 = *(unsigned __int8 *)(v37 + 80);
  uint64_t v284 = v38 | 7;
  uint64_t v39 = v35 | v34 | v10 | v38 | 7;
  uint64_t v40 = v278 + v39 + v280 + 8;
  __dst = (void *)((v40 + v292) & ~v39);
  uint64_t v281 = v39;
  uint64_t v259 = (void *)((v40 + v287) & ~v39);
  unsigned int v252 = v21;
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v41 = 0x7FFFFFFF;
  }
  else {
    unsigned int v41 = v21;
  }
  if (v41 - 1 >= v41) {
    --v41;
  }
  unsigned int v255 = v41;
  uint64_t v241 = v34 + 16;
  uint64_t v248 = v34;
  uint64_t v42 = (v34 + 16) & ~v34;
  unint64_t v43 = v35;
  uint64_t v242 = *(void *)(v33 + 64) + 7;
  uint64_t v245 = v35 + 16;
  uint64_t v246 = v275;
  size_t __n = v35
      + 16
      + ((((((((v242 + v42) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  int v269 = *(_DWORD *)(v275 + 84);
  size_t v268 = *(void *)(v275 + 64);
  uint64_t v44 = v38 + 176;
  uint64_t v276 = v38 + 16;
  uint64_t v288 = *(unsigned __int8 *)(v37 + 80);
  uint64_t v45 = v38 + 48;
  uint64_t v240 = *(void *)(v239 - 8);
  int v267 = *(_DWORD *)(v37 + 84);
  size_t v270 = *(void *)(v240 + 64);
  unint64_t v273 = v36 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  unint64_t v238 = v36;
  unint64_t v46 = v36 + 48;
  uint64_t v47 = v32 + 48;
  uint64_t v279 = v32;
  uint64_t v48 = v295;
  size_t v49 = v23 + ((v32 + 128) & v295);
  size_t v271 = v23;
  size_t v50 = v23 + 7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v255 & 0x80000000) != 0)
  {
    unsigned int v53 = v251((const void *)((v49 + v285 + (((unint64_t)v259 + v47) & v293)) & v293), v252, v254);
    uint64_t v54 = v293;
    unint64_t v51 = v259;
  }
  else
  {
    unint64_t v51 = v259;
    unint64_t v52 = v259[1];
    if (v52 >= 0xFFFFFFFF) {
      LODWORD(v52) = -1;
    }
    unsigned int v53 = v52 + 1;
    uint64_t v54 = v293;
  }
  uint64_t v55 = v44 & ~v284;
  unint64_t v56 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v53)
  {
    size_t v57 = v268;
    if (!v269) {
      size_t v57 = v268 + 1;
    }
    unint64_t v58 = ((((((((((((((v57 + (__n & ~v43) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    size_t v59 = v270;
    if (!v267) {
      size_t v59 = v270 + 1;
    }
    unint64_t v60 = ((v271
          + v288
          + ((v32
            + v55
            + ((v59 + (((v276 & ~v284) + v288 + (v45 & ~v288) + v59) & ~v288) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8) & v295)) & ~v288)
        + v59;
    if (v58 > v60) {
      unint64_t v60 = v58;
    }
    unint64_t v61 = v58 + (v46 & v273);
    if (v60 > v61) {
      unint64_t v61 = v60;
    }
    if (v61 <= 0x90) {
      unint64_t v61 = 144;
    }
    memcpy(__dst, v51, ((((v49 + v285 + (v47 & v54)) & v54) + v56 + v281) & ~v281)+ (((v61 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ 8);
    return v292;
  }
  uint64_t v236 = v45;
  uint64_t v237 = ~v281;
  size_t v256 = __n & ~v43;
  size_t __na = v49;
  uint64_t v260 = v45 & ~v288;
  uint64_t v262 = v55;
  unint64_t v263 = v46 & v273;
  uint64_t v264 = ~v288;
  void *__dst = *v51;
  __dst[1] = v51[1];
  __dst[2] = v51[2];
  *((unsigned char *)__dst + 24) = *((unsigned char *)v51 + 24);
  __dst[4] = v51[4];
  __dst[5] = v51[5];
  uint64_t v62 = (void *)(((unint64_t)__dst + v47) & v54);
  unint64_t v63 = (uint64_t *)(((unint64_t)v51 + v47) & v54);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v252 & 0x80000000) != 0)
  {
    int v65 = ((uint64_t (*)(unint64_t))v251)((v32
                                                          + (((unint64_t)v63 + 71) & 0xFFFFFFFFFFFFFFF8)
                                                          + 64) & v295);
  }
  else
  {
    unint64_t v64 = v63[7];
    if (v64 >= 0xFFFFFFFF) {
      LODWORD(v64) = -1;
    }
    int v65 = v64 + 1;
  }
  unint64_t __dsta = v43;
  size_t v250 = v50;
  if (v65)
  {
    size_t v66 = __na;
    memcpy(v62, v63, __na);
    uint64_t v67 = v254;
    unsigned int v68 = (void (*)(unint64_t, unint64_t, uint64_t))v249;
  }
  else
  {
    uint64_t v69 = *v63;
    uint64_t v70 = v63[1];
    unsigned __int8 v71 = *((unsigned char *)v63 + 16);
    sub_1C024FAC0(*v63, v70, v71);
    void *v62 = v69;
    v62[1] = v70;
    *((unsigned char *)v62 + 16) = v71;
    int v72 = v62 + 3;
    uint64_t v73 = v63 + 3;
    unsigned int v74 = *((unsigned __int8 *)v63 + 40);
    if ((((v74 >> 6) & 0xFFFFFF83 | (4 * ((v74 >> 1) & 0x1F))) ^ 0x7F) < 0x7D)
    {
      long long v77 = *(_OWORD *)v73;
      *((unsigned char *)v62 + 40) = *((unsigned char *)v63 + 40);
      *int v72 = v77;
    }
    else
    {
      uint64_t v75 = *v73;
      unint64_t v76 = v63[4];
      sub_1C00F5ACC(*v73, v76, *((unsigned char *)v63 + 40));
      *(void *)int v72 = v75;
      v62[4] = v76;
      *((unsigned char *)v62 + 40) = v74;
    }
    v62[6] = v63[6];
    v62[7] = v63[7];
    unint64_t v78 = ((unint64_t)v62 + 71) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v79 = ((unint64_t)v63 + 71) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v80 = *(unsigned __int16 *)(v79 + 44);
    uint64_t v81 = *(unsigned int *)(v79 + 40);
    swift_bridgeObjectRetain();
    if (v80 >> 9 <= 0x7EuLL)
    {
      unint64_t v84 = v81 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v80 << 32);
      uint64_t v85 = *(void *)v79;
      uint64_t v86 = *(void *)(v79 + 8);
      uint64_t v87 = *(void *)(v79 + 16);
      uint64_t v253 = *(void *)(v79 + 24);
      uint64_t v88 = *(void *)(v79 + 32);
      sub_1C017F524(*(void *)v79, v86, v87, v253, v88, v84);
      *(void *)unint64_t v78 = v85;
      *(void *)(v78 + 8) = v86;
      *(void *)(v78 + 16) = v87;
      *(void *)(v78 + 24) = v253;
      *(void *)(v78 + 32) = v88;
      *(_WORD *)(v78 + 44) = WORD2(v84);
      *(_DWORD *)(v78 + 40) = v84;
    }
    else
    {
      long long v82 = *(_OWORD *)v79;
      long long v83 = *(_OWORD *)(v79 + 16);
      *(_OWORD *)(v78 + 30) = *(_OWORD *)(v79 + 30);
      *(_OWORD *)unint64_t v78 = v82;
      *(_OWORD *)(v78 + 16) = v83;
    }
    *(void *)(v78 + 48) = *(void *)(v79 + 48);
    *(void *)(v78 + 56) = *(void *)(v79 + 56);
    uint64_t v89 = (v279 + 64 + v78) & v295;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v90 = (v279 + 64 + v79) & v295;
    uint64_t v32 = v279;
    uint64_t v48 = v295;
    uint64_t v67 = v254;
    unsigned int v68 = (void (*)(unint64_t, unint64_t, uint64_t))v249;
    v249(v89, v90, v254);
    size_t v66 = __na;
  }
  size_t v91 = v66 + v285;
  unint64_t v92 = ((unint64_t)v62 + v66 + v285) & v293;
  unint64_t v93 = ((unint64_t)v63 + v91) & v293;
  v68(v92, v93, v67);
  if (v269) {
    size_t v94 = v268;
  }
  else {
    size_t v94 = v268 + 1;
  }
  *(void *)((v250 + v92) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v250 + v93) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v95 = (v281 + v56 + v92) & v237;
  unint64_t v96 = (v281 + v56 + v93) & v237;
  size_t v97 = v94 + 7;
  unint64_t v98 = ((((((((((((((v94 + 7 + v256) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v267) {
    size_t v99 = v270;
  }
  else {
    size_t v99 = v270 + 1;
  }
  size_t v100 = v99 + v260;
  unint64_t v282 = ((v99 + 7 + (((v276 & ~v284) + v288 + v99 + v260) & v264)) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v101 = ((v271 + v288 + ((v262 + v32 + v282) & v48)) & v264) + v99;
  if (v98 > v101) {
    unint64_t v101 = ((((((((((((((v94 + 7 + v256) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
  }
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8;
  unint64_t v102 = v98 + v263;
  if (v101 > v102) {
    unint64_t v102 = v101;
  }
  if (v102 <= 0x90) {
    uint64_t v103 = 144;
  }
  else {
    uint64_t v103 = v102;
  }
  unsigned int v104 = *(unsigned __int8 *)(v96 + v103);
  swift_bridgeObjectRetain();
  if (v104 >= 0xC)
  {
    if (v103 <= 3) {
      uint64_t v105 = v103;
    }
    else {
      uint64_t v105 = 4;
    }
    switch(v105)
    {
      case 1:
        int v106 = *(unsigned __int8 *)v96;
        if (v103 < 4) {
          goto LABEL_69;
        }
        goto LABEL_71;
      case 2:
        int v106 = *(unsigned __int16 *)v96;
        if (v103 >= 4) {
          goto LABEL_71;
        }
        goto LABEL_69;
      case 3:
        int v106 = *(unsigned __int16 *)v96 | (*(unsigned __int8 *)(v96 + 2) << 16);
        if (v103 < 4) {
          goto LABEL_69;
        }
        goto LABEL_71;
      case 4:
        int v106 = *(_DWORD *)v96;
        if (v103 < 4) {
LABEL_69:
        }
          unsigned int v104 = (v106 | ((v104 - 12) << (8 * v103))) + 12;
        else {
LABEL_71:
        }
          unsigned int v104 = v106 + 12;
        break;
      default:
        break;
    }
  }
  uint64_t v286 = v271 + v288;
  uint64_t v294 = v103;
  uint64_t v107 = ~v248;
  unint64_t v108 = ~__dsta;
  uint64_t v109 = ~v284;
  switch(v104)
  {
    case 1u:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      *(void *)(v95 + 16) = *(void *)(v96 + 16);
      *(void *)(v95 + 24) = *(void *)(v96 + 24);
      *(void *)(v95 + 32) = *(void *)(v96 + 32);
      *(void *)(v95 + 40) = *(void *)(v96 + 40);
      *(void *)(v95 + 48) = *(void *)(v96 + 48);
      *(void *)(v95 + 56) = *(void *)(v96 + 56);
      uint64_t v122 = *(void *)(v96 + 64);
      *(unsigned char *)(v95 + 72) = *(unsigned char *)(v96 + 72);
      *(void *)(v95 + 64) = v122;
      *(void *)(v95 + 80) = *(void *)(v96 + 80);
      *(void *)(v95 + 88) = *(void *)(v96 + 88);
      long long v297 = (uint64_t *)(v96 + 96);
      unsigned __int8 v123 = *(unsigned char *)(v96 + 106);
      int v124 = *(unsigned __int16 *)(v96 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v123 == 255)
      {
        uint64_t v125 = *v297;
        *(_DWORD *)(v95 + 103) = *(_DWORD *)(v96 + 103);
        *(void *)(v95 + 96) = v125;
      }
      else
      {
        uint64_t v188 = v124 & 0xFF00FFFF | (v123 << 16);
        uint64_t v189 = *v297;
        sub_1BFFA742C(*v297, v188, SBYTE2(v188), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        *(void *)(v95 + 96) = v189;
        *(_WORD *)(v95 + 104) = v188;
        *(unsigned char *)(v95 + 106) = BYTE2(v188);
      }
      char v170 = 1;
      goto LABEL_98;
    case 2u:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      *(void *)(v95 + 16) = *(void *)(v96 + 16);
      *(void *)(v95 + 24) = *(void *)(v96 + 24);
      *(void *)(v95 + 32) = *(void *)(v96 + 32);
      *(void *)(v95 + 40) = *(void *)(v96 + 40);
      *(unsigned char *)(v95 + 48) = *(unsigned char *)(v96 + 48);
      *(void *)(v95 + 56) = *(void *)(v96 + 56);
      unint64_t v126 = *(void *)(v96 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v126 <= 2)
      {
        *(_OWORD *)(v95 + 64) = *(_OWORD *)(v96 + 64);
      }
      else
      {
        *(unsigned char *)(v95 + 64) = *(unsigned char *)(v96 + 64);
        *(void *)(v95 + 72) = *(void *)(v96 + 72);
        swift_bridgeObjectRetain();
      }
      uint64_t v128 = v103;
      *(void *)(v95 + 80) = *(void *)(v96 + 80);
      *(void *)(v95 + 88) = *(void *)(v96 + 88);
      *(void *)(v95 + 96) = *(void *)(v96 + 96);
      *(void *)(v95 + 104) = *(void *)(v96 + 104);
      *(void *)(v95 + 112) = *(void *)(v96 + 112);
      *(void *)(v95 + 120) = *(void *)(v96 + 120);
      *(unsigned char *)(v95 + 128) = *(unsigned char *)(v96 + 128);
      *(void *)(v95 + 136) = *(void *)(v96 + 136);
      char v214 = 2;
      goto LABEL_108;
    case 3u:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      *(void *)(v95 + 16) = *(void *)(v96 + 16);
      *(void *)(v95 + 24) = *(void *)(v96 + 24);
      *(void *)(v95 + 32) = *(void *)(v96 + 32);
      *(void *)(v95 + 40) = *(void *)(v96 + 40);
      unint64_t v127 = *(void *)(v96 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v127 >= 0xF)
      {
        *(void *)(v95 + 48) = *(void *)(v96 + 48);
        *(void *)(v95 + 56) = *(void *)(v96 + 56);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v95 + 48) = *(_OWORD *)(v96 + 48);
      }
      uint64_t v128 = v294;
      *(void *)(v95 + 64) = *(void *)(v96 + 64);
      *(void *)(v95 + 72) = *(void *)(v96 + 72);
      *(void *)(v95 + 80) = *(void *)(v96 + 80);
      *(void *)(v95 + 88) = *(void *)(v96 + 88);
      *(void *)(v95 + 96) = *(void *)(v96 + 96);
      *(void *)(v95 + 104) = *(void *)(v96 + 104);
      *(void *)(v95 + 112) = *(void *)(v96 + 112);
      *(unsigned char *)(v95 + 120) = *(unsigned char *)(v96 + 120);
      *(unsigned char *)(v95 + v294) = 3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_110;
    case 4u:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      *(void *)(v95 + 16) = *(void *)(v96 + 16);
      *(void *)(v95 + 24) = *(void *)(v96 + 24);
      *(void *)(v95 + 32) = *(void *)(v96 + 32);
      *(void *)(v95 + 40) = *(void *)(v96 + 40);
      *(void *)(v95 + 48) = *(void *)(v96 + 48);
      uint64_t v128 = v103;
      *(unsigned char *)(v95 + v103) = 4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_111;
    case 5u:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      unint64_t v129 = (void *)((v95 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v130 = (void *)((v96 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v129 = *v130;
      v129[1] = v130[1];
      unint64_t v131 = ((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v132 = ((unint64_t)v130 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v131 = *(void *)v132;
      *(void *)(v131 + 8) = *(void *)(v132 + 8);
      *(unsigned char *)(v131 + 16) = *(unsigned char *)(v132 + 16);
      *(unsigned char *)(v131 + 17) = *(unsigned char *)(v132 + 17);
      uint64_t v133 = (void *)((v131 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v134 = (void *)((v132 + 25) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v133 = *v134;
      unint64_t v135 = (void *)(((unint64_t)v133 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v136 = (void *)(((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v135 = *v136;
      long long v137 = (void *)(((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8);
      id v138 = (void *)(((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v137 = *v138;
      uint64_t v139 = (void *)(((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v140 = (void *)(((unint64_t)v138 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v139 = *v140;
      uint64_t v141 = (void *)(((unint64_t)v139 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v142 = (void *)(((unint64_t)v140 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v141 = *v142;
      uint64_t v143 = (void *)(((unint64_t)v141 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v144 = (void *)(((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v143 = *v144;
      uint64_t v145 = (void *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v146 = (void *)(((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v145 = *v146;
      long long v147 = (void *)(((unint64_t)v145 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v148 = (void *)(((unint64_t)v146 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v147 = *v148;
      uint64_t v149 = (void *)(((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v150 = (void *)(((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v149 = *v150;
      __int16 v151 = (void *)(((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v152 = (void *)(((unint64_t)v150 + 15) & 0xFFFFFFFFFFFFFFF8);
      *__int16 v151 = *v152;
      unint64_t v153 = (void *)(((unint64_t)v151 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v154 = (void *)(((unint64_t)v152 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v153 = *v154;
      unint64_t v155 = (void *)(((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v156 = (void *)(((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v155 = *v156;
      uint64_t v157 = (void *)(((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v158 = (void *)(((unint64_t)v156 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v157 = *v158;
      unint64_t v261 = ((unint64_t)v157 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v159 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v159 + 8) >= 0xFFFFFFFFuLL) {
        LODWORD(v160) = -1;
      }
      else {
        uint64_t v160 = *(void *)(v159 + 8);
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v160 + 1) > 2)
      {
        long long v162 = *(_OWORD *)v159;
        uint64_t v161 = (_OWORD *)v261;
        goto LABEL_102;
      }
      uint64_t v161 = (_OWORD *)v261;
      if (v160 != -1)
      {
        long long v162 = *(_OWORD *)v159;
LABEL_102:
        _OWORD *v161 = v162;
        goto LABEL_115;
      }
      *(unsigned char *)unint64_t v261 = *(unsigned char *)v159;
      *(void *)(v261 + 8) = *(void *)(v159 + 8);
      swift_bridgeObjectRetain();
LABEL_115:
      uint64_t v274 = (void *)((v276 + v159) & v109);
      uint64_t v272 = (void *)(((unint64_t)v161 + v276) & v109);
      *uint64_t v272 = *v274;
      uint64_t v220 = (void *)(((unint64_t)v272 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v221 = (void *)(((unint64_t)v274 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v220 = *v221;
      uint64_t v222 = (void *)(((unint64_t)v220 + v288 + 8) & v109);
      unint64_t v223 = (void *)(((unint64_t)v221 + v288 + 8) & v109);
      unint64_t v224 = v223[1];
      if (v224 >= 0xFFFFFFFF) {
        LODWORD(v224) = -1;
      }
      int v225 = v224 - 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v225 < 0)
      {
        *uint64_t v222 = *v223;
        v222[1] = v223[1];
        v222[2] = v223[2];
        v222[3] = v223[3];
        v222[4] = v223[4];
        v222[5] = v223[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v226 = *(_OWORD *)v223;
        long long v227 = *((_OWORD *)v223 + 2);
        *((_OWORD *)v222 + 1) = *((_OWORD *)v223 + 1);
        *((_OWORD *)v222 + 2) = v227;
        *(_OWORD *)uint64_t v222 = v226;
      }
      char v228 = (void *)(((unint64_t)v222 + v236) & v264);
      char v229 = (const void *)(((unint64_t)v223 + v236) & v264);
      size_t v277 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v240 + 48);
      if (v277(v229, 1, v239))
      {
        memcpy(v228, v229, v99);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v240 + 16))(v228, v229, v239);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v240 + 56))(v228, 0, 1, v239);
      }
      uint64_t v230 = (void *)(((unint64_t)v222 + v100 + v288) & v264);
      size_t v231 = (const void *)(((unint64_t)v223 + v100 + v288) & v264);
      if (v277(v231, 1, v239))
      {
        memcpy(v230, v231, v99);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v240 + 16))(v230, v231, v239);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v240 + 56))(v230, 0, 1, v239);
      }
      *(void *)(((unint64_t)v230 + v99 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v231
                                                                                          + v99
                                                                                          + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v232 = ((unint64_t)v272 + v282 + v279) & v295;
      unint64_t v233 = ((unint64_t)v274 + v282 + v279) & v295;
      swift_bridgeObjectRetain();
      v249(v232, v233, v254);
      uint64_t v234 = (void *)((v286 + v232) & v264);
      uint64_t v235 = (const void *)((v286 + v233) & v264);
      if (v277(v235, 1, v239))
      {
        memcpy(v234, v235, v99);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v240 + 16))(v234, v235, v239);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v240 + 56))(v234, 0, 1, v239);
      }
      uint64_t v128 = v294;
      *(unsigned char *)(v95 + v294) = 5;
LABEL_112:
      unint64_t v215 = (void *)(((v95 | 7) + v128 + 1) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v216 = (uint64_t *)(((v96 | 7) + v128 + 1) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v217 = *v216;
      unint64_t v218 = v216[1];
      sub_1BFE95820(*v216, v218);
      *unint64_t v215 = v217;
      v215[1] = v218;
      *(void *)(((unint64_t)v215 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v216 + 23) & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      return v292;
    case 6u:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      *(void *)(v95 + 16) = *(void *)(v96 + 16);
      uint64_t v128 = v103;
      *(unsigned char *)(v95 + v103) = 6;
      swift_bridgeObjectRetain();
      goto LABEL_111;
    case 7u:
      *(void *)unint64_t v95 = *(void *)v96;
      uint64_t v128 = v103;
      *(unsigned char *)(v95 + v103) = 7;
      swift_retain();
      goto LABEL_112;
    case 8u:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      *(void *)(v95 + 16) = *(void *)(v96 + 16);
      *(void *)(v95 + 24) = *(void *)(v96 + 24);
      *(void *)(v95 + 32) = *(void *)(v96 + 32);
      *(void *)(v95 + 40) = *(void *)(v96 + 40);
      *(void *)(v95 + 48) = *(void *)(v96 + 48);
      *(void *)(v95 + 56) = *(void *)(v96 + 56);
      *(void *)(v95 + 64) = *(void *)(v96 + 64);
      uint64_t v128 = v103;
      *(unsigned char *)(v95 + v103) = 8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_111;
    case 9u:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      *(void *)(v95 + 16) = *(void *)(v96 + 16);
      *(void *)(v95 + 24) = *(void *)(v96 + 24);
      *(void *)(v95 + 32) = *(void *)(v96 + 32);
      *(void *)(v95 + 40) = *(void *)(v96 + 40);
      *(void *)(v95 + 48) = *(void *)(v96 + 48);
      *(void *)(v95 + 56) = *(void *)(v96 + 56);
      *(void *)(v95 + 64) = *(void *)(v96 + 64);
      *(void *)(v95 + 72) = *(void *)(v96 + 72);
      *(unsigned char *)(v95 + 80) = *(unsigned char *)(v96 + 80);
      *(void *)(v95 + 88) = *(void *)(v96 + 88);
      *(void *)(v95 + 96) = *(void *)(v96 + 96);
      *(unsigned char *)(v95 + 104) = *(unsigned char *)(v96 + 104);
      uint64_t v128 = v103;
      *(unsigned char *)(v95 + v103) = 9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_111;
    case 0xAu:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      *(void *)(v95 + 16) = *(void *)(v96 + 16);
      *(void *)(v95 + 24) = *(void *)(v96 + 24);
      uint64_t v163 = *(void *)(v96 + 32);
      uint64_t v164 = *(void *)(v96 + 40);
      uint64_t v165 = *(void *)(v96 + 48);
      uint64_t v166 = *(void *)(v96 + 56);
      uint64_t v167 = *(void *)(v96 + 64);
      uint64_t v168 = *(void *)(v96 + 72);
      unsigned __int8 v169 = *(unsigned char *)(v96 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v163, v164, v165, v166, v167, v168, v169);
      *(void *)(v95 + 32) = v163;
      *(void *)(v95 + 40) = v164;
      *(void *)(v95 + 48) = v165;
      *(void *)(v95 + 56) = v166;
      *(void *)(v95 + 64) = v167;
      *(void *)(v95 + 72) = v168;
      char v170 = 10;
      *(unsigned char *)(v95 + 80) = v169;
LABEL_98:
      uint64_t v128 = v294;
      *(unsigned char *)(v95 + v294) = v170;
      goto LABEL_112;
    case 0xBu:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      unint64_t v171 = (void *)((v95 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v172 = (void *)((v96 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v171 = *v172;
      v171[1] = v172[1];
      uint64_t v173 = (void *)(((unint64_t)v171 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v174 = (void *)(((unint64_t)v172 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v173 = *v174;
      v173[1] = v174[1];
      uint64_t v175 = (void *)(((unint64_t)v173 + v238 + 16) & v273);
      long long v176 = (void *)(((unint64_t)v174 + v238 + 16) & v273);
      *uint64_t v175 = *v176;
      v175[1] = v176[1];
      unint64_t v177 = ((unint64_t)v175 + v241) & v107;
      unint64_t v178 = ((unint64_t)v176 + v241) & v107;
      long long v290 = *(void (**)(unint64_t, unint64_t, uint64_t))(v243 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v290(v177, v178, v244);
      uint64_t v179 = (void *)((v242 + v177) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v180 = (void *)((v242 + v178) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v179 = *v180;
      v179[1] = v180[1];
      uint64_t v181 = (void *)(((unint64_t)v179 + 23) & 0xFFFFFFFFFFFFFFF8);
      char v182 = (void *)(((unint64_t)v180 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v181 = *v182;
      v181[1] = v182[1];
      uint64_t v183 = (void *)(((unint64_t)v181 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v184 = (void *)(((unint64_t)v182 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v183 = *v184;
      v183[1] = v184[1];
      uint64_t v185 = (void *)(((unint64_t)v183 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v186 = (void *)(((unint64_t)v184 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v185 = *v186;
      v185[1] = v186[1];
      long long v298 = (void *)(((unint64_t)v185 + v245) & v108);
      uint64_t v187 = (const void *)(((unint64_t)v186 + v245) & v108);
      long long v291 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v246 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v291(v187, 1, v247))
      {
        memcpy(v298, v187, v94);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v246 + 16))(v298, v187, v247);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v246 + 56))(v298, 0, 1, v247);
      }
      uint64_t v128 = v103;
      uint64_t v202 = (void *)(((unint64_t)v298 + v97) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v203 = (void *)(((unint64_t)v187 + v97) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v202 = *v203;
      uint64_t v204 = (void *)(((unint64_t)v202 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v205 = (void *)(((unint64_t)v203 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v204 = *v205;
      unsigned int v206 = (void *)(((unint64_t)v204 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v207 = (void *)(((unint64_t)v205 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v206 = *v207;
      uint64_t v208 = (void *)(((unint64_t)v206 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v209 = (void *)(((unint64_t)v207 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v208 = *v209;
      unint64_t v210 = (void *)(((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v211 = (void *)(((unint64_t)v209 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v210 = *v211;
      unint64_t v212 = (void *)(((unint64_t)v210 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v213 = (void *)(((unint64_t)v211 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v212 = *v213;
      *(void *)(((unint64_t)v212 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v214 = 11;
LABEL_108:
      *(unsigned char *)(v95 + v128) = v214;
      goto LABEL_109;
    default:
      *(void *)unint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *(void *)(v96 + 8);
      unint64_t v110 = (v241 + v95) & v107;
      unint64_t v111 = (v241 + v96) & v107;
      uint64_t v112 = *(void (**)(unint64_t, unint64_t, uint64_t))(v243 + 16);
      swift_bridgeObjectRetain();
      v112(v110, v111, v244);
      uint64_t v113 = (void *)((v242 + v110) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v114 = (void *)((v242 + v111) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v113 = *v114;
      v113[1] = v114[1];
      uint64_t v115 = (void *)(((unint64_t)v113 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v116 = (void *)(((unint64_t)v114 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v115 = *v116;
      v115[1] = v116[1];
      uint64_t v117 = (void *)(((unint64_t)v115 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v118 = (void *)(((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v117 = *v118;
      v117[1] = v118[1];
      unsigned int v119 = (void *)(((unint64_t)v117 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v120 = (void *)(((unint64_t)v118 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v119 = *v120;
      v119[1] = v120[1];
      long long v296 = (void *)(((unint64_t)v119 + v245) & v108);
      uint64_t v121 = (const void *)(((unint64_t)v120 + v245) & v108);
      long long v289 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v246 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v289(v121, 1, v247))
      {
        memcpy(v296, v121, v94);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v246 + 16))(v296, v121, v247);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v246 + 56))(v296, 0, 1, v247);
      }
      uint64_t v128 = v294;
      long long v190 = (void *)(((unint64_t)v296 + v97) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v191 = (void *)(((unint64_t)v121 + v97) & 0xFFFFFFFFFFFFFFF8);
      *long long v190 = *v191;
      uint64_t v192 = (void *)(((unint64_t)v190 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v193 = (void *)(((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v192 = *v193;
      long long v194 = (void *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v195 = (void *)(((unint64_t)v193 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v194 = *v195;
      long long v196 = (void *)(((unint64_t)v194 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v197 = (void *)(((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v196 = *v197;
      uint64_t v198 = (void *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v199 = (void *)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v198 = *v199;
      long long v200 = (void *)(((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8);
      v201 = (void *)(((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v200 = *v201;
      *(void *)(((unint64_t)v200 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v201 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v95 + v294) = 0;
LABEL_109:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_110:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_111:
      swift_bridgeObjectRetain();
      goto LABEL_112;
  }
}

uint64_t sub_1C030A2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v627 = a1;
  uint64_t v628 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v628 | 7) + v6;
  uint64_t v633 = ~(v628 | 7);
  uint64_t v11 = (void *)((v10 + a1) & v633);
  uint64_t v600 = a2;
  uint64_t v617 = v10;
  uint64_t v608 = v628 | 7;
  uint64_t v12 = (void *)((v10 + a2) & v633);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v630 = ~v628;
  uint64_t v13 = ((unint64_t)v11 + v628 + 16) & ~v628;
  uint64_t v14 = *(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 24);
  v14(v13, ((unint64_t)v12 + v628 + 16) & ~v628, v7);
  uint64_t v15 = v7;
  size_t v16 = *(void *)(v8 + 64);
  uint64_t v17 = (v16 + v628 + v13) & ~v628;
  uint64_t v18 = (v16 + v628 + (((unint64_t)v12 + v628 + 16) & ~v628)) & ~v628;
  v550 = (void (*)(unint64_t, unint64_t, uint64_t))v14;
  v14(v17, v18, v7);
  uint64_t v19 = (void *)((v16 + v628 + v17) & ~v628);
  uint64_t v20 = (void *)((v16 + v628 + v18) & ~v628);
  unsigned int v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v11) = v21(v19, 1, v7);
  v556 = (uint64_t (*)(size_t))v21;
  int v22 = v21(v20, 1, v7);
  uint64_t v616 = v7;
  if (v11)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v19, v20, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v7);
      goto LABEL_12;
    }
    int v23 = *(_DWORD *)(v9 + 84);
  }
  else
  {
    if (!v22)
    {
      v14((uint64_t)v19, (unint64_t)v20, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v19, v7);
    int v23 = *(_DWORD *)(v9 + 84);
  }
  if (v23) {
    size_t v24 = v16;
  }
  else {
    size_t v24 = v16 + 1;
  }
  memcpy(v19, v20, v24);
LABEL_12:
  uint64_t v25 = v617;
  uint64_t v555 = v9;
  unsigned int v618 = *(_DWORD *)(v9 + 84);
  size_t v26 = v16;
  if (v618) {
    size_t v27 = v16;
  }
  else {
    size_t v27 = v16 + 1;
  }
  uint64_t v28 = (void *)(((unint64_t)v19 + v27 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (uint64_t)v20 + v27 + 7;
  unint64_t v30 = (v29 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v28 = *(void *)(v29 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v31 = *(void *)v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)((v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v596 = (((((((v27 + ((v16 + v628 + ((((v628 + 16) | v628) + v16) & v630)) & v630) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = sub_1C151631C();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v542 = v34;
  uint64_t v543 = v35;
  uint64_t v36 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v549 = sub_1C151D6DC();
  uint64_t v37 = *(void *)(v549 - 8);
  size_t v38 = v26;
  uint64_t v39 = *(unsigned __int8 *)(v37 + 80);
  uint64_t v40 = v39 | v36;
  uint64_t v41 = sub_1C1518CDC();
  uint64_t v537 = v41;
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(unsigned __int8 *)(v42 + 80);
  uint64_t v44 = v43 | 7;
  uint64_t v45 = v39 | v36 | v628 | v43 | 7;
  uint64_t v46 = (v25 & v633) + v45 + v596 + 8;
  uint64_t v47 = (void *)((v46 + v627) & ~v45);
  uint64_t v48 = v600;
  uint64_t v601 = v45;
  uint64_t v603 = ~v45;
  size_t v49 = (void *)((v46 + v48) & ~v45);
  if (v618 <= 0x7FFFFFFF) {
    unsigned int v50 = 0x7FFFFFFF;
  }
  else {
    unsigned int v50 = v618;
  }
  if (v50 - 1 >= v50) {
    --v50;
  }
  uint64_t v540 = ~v36;
  uint64_t v539 = v36 + 16;
  uint64_t v541 = *(void *)(v35 + 64) + 7;
  uint64_t v545 = ~v39;
  uint64_t v544 = v39 + 16;
  unint64_t v579 = (v39
        + 16
        + ((((((((v541 + ((v36 + 16) & ~v36)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v39;
  uint64_t v51 = ~v628;
  uint64_t v547 = v37;
  size_t v577 = *(void *)(v37 + 64);
  uint64_t v52 = ~v44;
  uint64_t v580 = (v43 + 176) & ~v44;
  uint64_t v534 = v43 + 16;
  uint64_t v53 = (v43 + 16) & ~v44;
  uint64_t v595 = ~v43;
  uint64_t v588 = *(unsigned __int8 *)(v42 + 80);
  uint64_t v536 = v43 + 48;
  uint64_t v589 = (v43 + 48) & ~v43;
  uint64_t v538 = *(void *)(v41 - 8);
  int v591 = *(_DWORD *)(v42 + 84);
  size_t v593 = *(void *)(v538 + 64);
  uint64_t v533 = v40;
  unint64_t v532 = v40 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v582 = (v40 + 48) & v532;
  uint64_t v54 = v628 + 48;
  size_t v55 = v38 + ((v628 + 128) & v630);
  size_t v571 = v38;
  unint64_t v597 = ((v38 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v56 = (v628 + 48) & v633;
  uint64_t v535 = v52;
  int v567 = *(_DWORD *)(v37 + 84);
  size_t v559 = v38 + 7;
  size_t v583 = v55;
  if ((v50 & 0x80000000) != 0)
  {
    size_t v66 = v55 + v608;
    __dstc = v47;
    uint64_t v67 = v49;
    int v531 = v556((v55 + v608 + (((unint64_t)v47 + v54) & v633)) & v633);
    uint64_t v51 = ~v628;
    int v58 = ((uint64_t (*)(size_t, void, uint64_t))v556)((v66 + (((unint64_t)v67 + v54) & v633)) & v633, v618, v15);
    uint64_t v56 = (v628 + 48) & v633;
    uint64_t v47 = __dstc;
    size_t v59 = v67;
    if (!v531) {
      goto LABEL_24;
    }
  }
  else
  {
    unint64_t v57 = v49[1];
    if (v57 >= 0xFFFFFFFF) {
      LODWORD(v57) = -1;
    }
    int v58 = v57 + 1;
    size_t v59 = v49;
    if (v47[1] > 0xFFFFFFFEuLL)
    {
LABEL_24:
      if (v58)
      {
        uint64_t v551 = v56;
        __dst = v47;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v60 = ~(v628 | 7);
        unint64_t v61 = ((unint64_t)__dst + v54) & v633;
        if ((v618 & 0x80000000) != 0)
        {
          uint64_t v63 = v628;
          if (v556((v628 + ((v61 + 71) & 0xFFFFFFFFFFFFFFF8) + 64) & v51))
          {
LABEL_29:
            uint64_t v64 = v53;
            int v65 = *(void (**)(unint64_t, uint64_t))(v555 + 8);
LABEL_64:
            size_t v619 = v583 + v608;
            size_t v101 = (v583 + v608 + v61) & v633;
            v609 = v65;
            v65(v101, v15);
            swift_bridgeObjectRelease();
            size_t v102 = v577;
            if (!v567) {
              size_t v102 = v577 + 1;
            }
            uint64_t v103 = (unsigned __int8 *)((v601 + v597 + v101) & v603);
            unint64_t v104 = ((((((((((((((v102 + 7 + v579) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 8;
            if (v591) {
              size_t v105 = v593;
            }
            else {
              size_t v105 = v593 + 1;
            }
            uint64_t v106 = v64 + v588;
            uint64_t v107 = v63 + 8;
            unint64_t v108 = ((v571
                   + v588
                   + ((v107 + v580 + ((v105 + 7 + ((v106 + v105 + v589) & v595)) & 0xFFFFFFFFFFFFFFF8)) & v51)) & v595)
                 + v105;
            if (v104 > v108) {
              unint64_t v108 = v104;
            }
            unint64_t v109 = v104 + v582;
            if (v108 > v109) {
              unint64_t v109 = v108;
            }
            if (v109 <= 0x90) {
              uint64_t v110 = 144;
            }
            else {
              uint64_t v110 = v109;
            }
            unsigned int v111 = v103[v110];
            unsigned int v112 = v111 - 12;
            if (v111 >= 0xC)
            {
              if (v110 <= 3) {
                uint64_t v113 = v110;
              }
              else {
                uint64_t v113 = 4;
              }
              switch(v113)
              {
                case 1:
                  int v114 = *v103;
                  if (v110 < 4) {
                    goto LABEL_122;
                  }
                  goto LABEL_124;
                case 2:
                  int v114 = *(unsigned __int16 *)v103;
                  if (v110 >= 4) {
                    goto LABEL_124;
                  }
                  goto LABEL_122;
                case 3:
                  int v114 = *(unsigned __int16 *)v103 | (v103[2] << 16);
                  if (v110 < 4) {
                    goto LABEL_122;
                  }
                  goto LABEL_124;
                case 4:
                  int v114 = *(_DWORD *)v103;
                  if (v110 < 4) {
LABEL_122:
                  }
                    unsigned int v111 = (v114 | (v112 << (8 * v110))) + 12;
                  else {
LABEL_124:
                  }
                    unsigned int v111 = v114 + 12;
                  break;
                default:
                  break;
              }
            }
            uint64_t v629 = v110;
            switch(v111)
            {
              case 1u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v180 = v619;
                if (v103[106] != 255)
                {
                  uint64_t v181 = *((unsigned __int16 *)v103 + 52) | (v103[106] << 16);
                  sub_1BFFA742C(*((void *)v103 + 12), v181, SBYTE2(v181), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
                }
                goto LABEL_159;
              case 2u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((void *)v103 + 9) >= 3uLL) {
                  swift_bridgeObjectRelease();
                }
                goto LABEL_156;
              case 3u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((void *)v103 + 7) >= 0xFuLL) {
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_157;
              case 4u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_157;
              case 5u:
                uint64_t v581 = v571 + v588;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v182 = (((((((((((((((((((((((((((((((unint64_t)(v103 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                                + 25) & 0xFFFFFFFFFFFFFFF8)
                                              + 15) & 0xFFFFFFFFFFFFFFF8)
                                            + 15) & 0xFFFFFFFFFFFFFFF8)
                                          + 15) & 0xFFFFFFFFFFFFFFF8)
                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                      + 15) & 0xFFFFFFFFFFFFFFF8)
                                    + 15) & 0xFFFFFFFFFFFFFFF8)
                                  + 15) & 0xFFFFFFFFFFFFFFF8)
                                + 15) & 0xFFFFFFFFFFFFFFF8)
                              + 15) & 0xFFFFFFFFFFFFFFF8)
                            + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 15) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8;
                if (*(void *)(v182 + 8) >= 0xFFFFFFFFuLL) {
                  swift_bridgeObjectRelease();
                }
                unint64_t v578 = (v534 + v182) & v535;
                swift_bridgeObjectRelease();
                unint64_t v183 = (v578 + 15) & 0xFFFFFFFFFFFFFFF8;
                swift_bridgeObjectRelease();
                uint64_t v184 = (v588 + v183 + 8) & v535;
                LODWORD(v185) = -1;
                if (*(void *)(v184 + 8) < 0xFFFFFFFFuLL) {
                  uint64_t v185 = *(void *)(((v588 + v183 + 8) & v535) + 8);
                }
                if ((int)v185 - 1 < 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v584 = *(unsigned int (**)(void))(v538 + 48);
                if (!v584()) {
                  (*(void (**)(uint64_t, uint64_t))(v538 + 8))((v536 + v184) & v595, v537);
                }
                uint64_t v186 = (v105 + v589 + v588 + v184) & v595;
                if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v584)(v186, 1, v537)) {
                  (*(void (**)(uint64_t, uint64_t))(v538 + 8))(v186, v537);
                }
                swift_bridgeObjectRelease();
                unint64_t v187 = (v107 + v578 + ((v105 + 7 + ((v106 + v589 + v105) & v595)) & 0xFFFFFFFFFFFFFFF8)) & v630;
                v609(v187, v616);
                size_t v180 = v619;
                uint64_t v60 = v633;
                if (!((unsigned int (*)(unint64_t, uint64_t, uint64_t))v584)((v581 + v187) & v595, 1, v537))(*(void (**)(unint64_t, uint64_t))(v538 + 8))((v581 + v187) & v595, v537); {
                goto LABEL_159;
                }
              case 6u:
                swift_bridgeObjectRelease();
                goto LABEL_157;
              case 7u:
                swift_release();
                goto LABEL_158;
              case 8u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_157;
              case 9u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_157;
              case 0xAu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1BFEC28BC(*((void *)v103 + 4), *((void *)v103 + 5), *((void *)v103 + 6), *((void *)v103 + 7), *((void *)v103 + 8), *((void *)v103 + 9), v103[80]);
                goto LABEL_158;
              case 0xBu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v179 = v539
                     + ((v533
                       + ((((unint64_t)(v103 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                       + 16) & v532);
                goto LABEL_154;
              default:
                swift_bridgeObjectRelease();
                unint64_t v179 = (unint64_t)&v103[v539];
LABEL_154:
                unint64_t v188 = v179 & v540;
                (*(void (**)(unint64_t, uint64_t))(v543 + 8))(v179 & v540, v542);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v189 = (v544
                      + ((((((((v541 + v188) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)) & v545;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v547 + 48))(v189, 1, v549)) {
                  (*(void (**)(unint64_t, uint64_t))(v547 + 8))(v189, v549);
                }
LABEL_156:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_157:
                swift_bridgeObjectRelease();
LABEL_158:
                size_t v180 = v619;
LABEL_159:
                sub_1BFE95664(*(void *)((unint64_t)&v103[v629 + 8] & 0xFFFFFFFFFFFFFFF8), *(void *)(((unint64_t)&v103[v629 + 8] & 0xFFFFFFFFFFFFFFF8) + 8));
                swift_bridgeObjectRelease();
                size_t v73 = ((((v180 + v551) & v60) + v597 + v601) & v603)
                    + (((v629 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                    + 8;
                unsigned int v74 = __dst;
                break;
            }
LABEL_160:
            memcpy(v74, v59, v73);
            return v627;
          }
        }
        else
        {
          unint64_t v62 = *(void *)((((unint64_t)__dst + v54) & v633) + 0x38);
          if (v62 >= 0xFFFFFFFF) {
            LODWORD(v62) = -1;
          }
          uint64_t v63 = v628;
          if (v62 != -1) {
            goto LABEL_29;
          }
        }
        sub_1C024F49C(*(void *)(((unint64_t)__dst + v54) & v633), *(void *)((((unint64_t)__dst + v54) & v633) + 8), *(unsigned char *)((((unint64_t)__dst + v54) & v633) + 0x10));
        unsigned int v98 = *(unsigned __int8 *)((((unint64_t)__dst + v54) & v633) + 0x28);
        if ((((v98 >> 6) & 0xFFFFFF83 | (4 * ((v98 >> 1) & 0x1F))) ^ 0x7F) >= 0x7D) {
          sub_1C00F5AEC(*(void *)((((unint64_t)__dst + v54) & v633) + 0x18), *(void *)((((unint64_t)__dst + v54) & v633) + 0x20), v98);
        }
        swift_bridgeObjectRelease();
        unint64_t v99 = (v61 + 71) & 0xFFFFFFFFFFFFFFF8;
        if (*(unsigned __int16 *)(v99 + 44) >> 9 <= 0x7EuLL) {
          sub_1C017F5B0(*(void *)v99, *(void *)(v99 + 8), *(void *)(v99 + 16), *(void *)(v99 + 24), *(void *)(v99 + 32), *(unsigned int *)(v99 + 40) | ((unint64_t)*(unsigned __int16 *)(v99 + 44) << 32));
        }
        uint64_t v64 = v53;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v100 = (v63 + v99 + 64) & v51;
        int v65 = *(void (**)(unint64_t, uint64_t))(v555 + 8);
        uint64_t v15 = v616;
        v65(v100, v616);
        goto LABEL_64;
      }
      *uint64_t v47 = *v59;
      v47[1] = v59[1];
      unint64_t v84 = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v84[2] = v59[2];
      *((unsigned char *)v84 + 24) = *((unsigned char *)v59 + 24);
      v84[4] = v59[4];
      v84[5] = v59[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v85 = ~(v628 | 7);
      uint64_t v86 = ((unint64_t)v84 + v54) & v633;
      uint64_t v87 = (uint64_t *)(((unint64_t)v59 + v54) & v633);
      if ((v618 & 0x80000000) != 0)
      {
        uint64_t v91 = v616;
        int __dstd = ((uint64_t (*)(unint64_t, void, uint64_t))v556)((v628 + 64 + ((v86 + 71) & 0xFFFFFFFFFFFFFFF8)) & v630, v618, v616);
        uint64_t v92 = v53;
        int v90 = ((uint64_t (*)(unint64_t, void, uint64_t))v556)((v628 + 64 + (((unint64_t)v87 + 71) & 0xFFFFFFFFFFFFFFF8)) & v630, v618, v616);
        uint64_t v85 = ~(v628 | 7);
        if (!__dstd) {
          goto LABEL_52;
        }
      }
      else
      {
        unint64_t v88 = *(void *)((((unint64_t)v84 + v54) & v633) + 0x38);
        unint64_t v89 = *(void *)((((unint64_t)v59 + v54) & v633) + 0x38);
        if (v89 >= 0xFFFFFFFF) {
          LODWORD(v89) = -1;
        }
        int v90 = v89 + 1;
        uint64_t v91 = v616;
        uint64_t v92 = v53;
        if (v88 > 0xFFFFFFFE)
        {
LABEL_52:
          uint64_t v93 = v92;
          if (v90)
          {
            sub_1C024F49C(*(void *)v86, *(void *)(v86 + 8), *(unsigned char *)(v86 + 16));
            unsigned int v94 = *(unsigned __int8 *)(v86 + 40);
            if ((((v94 >> 6) & 0xFFFFFF83 | (4 * ((v94 >> 1) & 0x1F))) ^ 0x7F) >= 0x7D) {
              sub_1C00F5AEC(*(void *)(v86 + 24), *(void *)(v86 + 32), v94);
            }
            swift_bridgeObjectRelease();
            unint64_t v95 = (v86 + 71) & 0xFFFFFFFFFFFFFFF8;
            int v96 = v567;
            if (*(unsigned __int16 *)(v95 + 44) >> 9 <= 0x7EuLL) {
              sub_1C017F5B0(*(void *)v95, *(void *)(v95 + 8), *(void *)(v95 + 16), *(void *)(v95 + 24), *(void *)(v95 + 32), *(unsigned int *)(v95 + 40) | ((unint64_t)*(unsigned __int16 *)(v95 + 44) << 32));
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v91 = v616;
            (*(void (**)(unint64_t, uint64_t))(v555 + 8))((v628 + v95 + 64) & v630, v616);
            size_t v97 = v583;
            memcpy((void *)v86, v87, v583);
            goto LABEL_218;
          }
          uint64_t v161 = *v87;
          uint64_t v162 = v87[1];
          unsigned __int8 v163 = *((unsigned char *)v87 + 16);
          sub_1C024FAC0(*v87, v162, v163);
          uint64_t v164 = *(void *)v86;
          uint64_t v165 = *(void *)(v86 + 8);
          *(void *)uint64_t v86 = v161;
          *(void *)(v86 + 8) = v162;
          unsigned __int8 v166 = *(unsigned char *)(v86 + 16);
          *(unsigned char *)(v86 + 16) = v163;
          sub_1C024F49C(v164, v165, v166);
          uint64_t v167 = v86 + 24;
          uint64_t v168 = v86;
          unsigned __int8 v169 = *(unsigned char *)(v86 + 40);
          unsigned __int8 v170 = *((unsigned char *)v87 + 40);
          v171.i32[0] = v170;
          v171.i32[1] = v169;
          unint64_t v172 = v87 + 3;
          uint32x2_t v173 = vcgt_u32((uint32x2_t)veor_s8(vorr_s8(vand_s8((int8x8_t)vadd_s32(v171, v171), (int8x8_t)0x7C0000007CLL), (int8x8_t)vshr_n_u32((uint32x2_t)v171, 6uLL)), (int8x8_t)0x7F0000007FLL), (uint32x2_t)0x7C0000007CLL);
          uint64_t v554 = v93;
          if (v173.i8[4])
          {
            if (v173.i8[0])
            {
              uint64_t v174 = *v172;
              unint64_t v175 = v87[4];
              sub_1C00F5ACC(*v172, v175, v170);
              uint64_t v176 = *(void *)v167;
              unint64_t v177 = *(void *)(v167 + 8);
              *(void *)uint64_t v167 = v174;
              *(void *)(v167 + 8) = v175;
              unsigned __int8 v178 = *(unsigned char *)(v167 + 16);
              *(unsigned char *)(v167 + 16) = v170;
              sub_1C00F5AEC(v176, v177, v178);
LABEL_210:
              uint64_t v86 = v168;
              *(void *)(v168 + 48) = v87[6];
              *(void *)(v168 + 56) = v87[7];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              unint64_t v296 = (v168 + 71) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v297 = ((unint64_t)v87 + 71) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v298 = *(unsigned int *)(v297 + 40) | ((unint64_t)*(unsigned __int16 *)(v297 + 44) << 32);
              if (*(unsigned __int16 *)(v296 + 44) >> 9 <= 0x7EuLL)
              {
                if (((v298 >> 41) & 0x7F) == 0x7F)
                {
                  sub_1C030EAFC((v168 + 71) & 0xFFFFFFFFFFFFFFF8);
                  long long v301 = *(_OWORD *)(v297 + 30);
                  long long v302 = *(_OWORD *)(v297 + 16);
                  *(_OWORD *)unint64_t v296 = *(_OWORD *)v297;
                  *(_OWORD *)(v296 + 16) = v302;
                  *(_OWORD *)(v296 + 30) = v301;
                }
                else
                {
                  uint64_t v307 = *(void *)v297;
                  uint64_t v308 = *(void *)(v297 + 8);
                  uint64_t v309 = *(void *)(v297 + 16);
                  uint64_t v621 = *(void *)(v297 + 24);
                  __dste = *(void **)(v297 + 32);
                  sub_1C017F524(*(void *)v297, v308, v309, v621, (uint64_t)__dste, v298);
                  uint64_t v310 = *(void *)v296;
                  uint64_t v311 = *(void *)(v296 + 8);
                  uint64_t v312 = *(void *)(v296 + 16);
                  uint64_t v313 = *(void *)(v296 + 24);
                  uint64_t v314 = *(void *)(v296 + 32);
                  unint64_t v315 = *(unsigned int *)(v296 + 40) | ((unint64_t)*(unsigned __int16 *)(v296 + 44) << 32);
                  *(void *)unint64_t v296 = v307;
                  *(void *)(v296 + 8) = v308;
                  *(void *)(v296 + 16) = v309;
                  *(void *)(v296 + 24) = v621;
                  *(void *)(v296 + 32) = __dste;
                  *(_DWORD *)(v296 + 40) = v298;
                  *(_WORD *)(v296 + 44) = WORD2(v298);
                  sub_1C017F5B0(v310, v311, v312, v313, v314, v315);
                }
              }
              else if (((v298 >> 41) & 0x7F) == 0x7F)
              {
                long long v299 = *(_OWORD *)v297;
                long long v300 = *(_OWORD *)(v297 + 16);
                *(_OWORD *)(v296 + 30) = *(_OWORD *)(v297 + 30);
                *(_OWORD *)unint64_t v296 = v299;
                *(_OWORD *)(v296 + 16) = v300;
              }
              else
              {
                uint64_t v303 = *(void *)v297;
                uint64_t v304 = *(void *)(v297 + 8);
                uint64_t v306 = *(void *)(v297 + 16);
                uint64_t v305 = *(void *)(v297 + 24);
                uint64_t v620 = *(void *)(v297 + 32);
                sub_1C017F524(*(void *)v297, v304, v306, v305, v620, v298);
                *(void *)unint64_t v296 = v303;
                *(void *)(v296 + 8) = v304;
                *(void *)(v296 + 16) = v306;
                *(void *)(v296 + 24) = v305;
                *(void *)(v296 + 32) = v620;
                *(_WORD *)(v296 + 44) = WORD2(v298);
                *(_DWORD *)(v296 + 40) = v298;
              }
              int v96 = v567;
              uint64_t v91 = v616;
              uint64_t v93 = v554;
              *(void *)(v296 + 48) = *(void *)(v297 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(void *)(v296 + 56) = *(void *)(v297 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v550((v628 + 64 + v296) & v630, (v628 + 64 + v297) & v630, v616);
              size_t v97 = v583;
LABEL_218:
              BOOL v316 = v96 == 0;
              size_t v317 = v97 + v608;
              uint64_t v318 = (v97 + v608 + v86) & v85;
              unint64_t v319 = ((unint64_t)v87 + v317) & v85;
              v550((v317 + v86) & v85, v319, v91);
              *(void *)((v559 + v318) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v559 + v319) & 0xFFFFFFFFFFFFFFF8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              unint64_t v320 = (v601 + v597 + v318) & v603;
              unint64_t v321 = (v601 + v597 + v319) & v603;
              if (v320 == v321)
              {
                uint64_t v335 = v589;
                uint64_t v324 = v93 + v588;
                uint64_t v326 = v571 + v588;
                uint64_t v336 = ~v628;
                BOOL v332 = v316;
              }
              else
              {
                uint64_t v606 = v577 + v316 + 7;
                unint64_t v322 = ((((((((((((((v606 + v579) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 8;
                if (v591) {
                  size_t v323 = v593;
                }
                else {
                  size_t v323 = v593 + 1;
                }
                uint64_t v324 = v93 + v588;
                size_t v598 = v323 + v589;
                size_t v602 = v323 + 7;
                unint64_t v325 = ((v323 + 7 + ((v93 + v588 + v323 + v589) & v595)) & 0xFFFFFFFFFFFFFFF8) + 8;
                uint64_t v326 = v571 + v588;
                unint64_t v327 = ((v571 + v588 + ((v580 + v628 + v325) & v630)) & v595) + v323;
                if (v322 > v327) {
                  unint64_t v327 = ((((((((((((((v606 + v579) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                }
                               + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 8;
                unint64_t v328 = v322 + v582;
                if (v327 > v328) {
                  unint64_t v328 = v327;
                }
                if (v328 <= 0x90) {
                  uint64_t v329 = 144;
                }
                else {
                  uint64_t v329 = v328;
                }
                unsigned int v330 = *(unsigned __int8 *)(v320 + v329);
                unsigned int v331 = v330 - 12;
                BOOL v332 = v316;
                if (v330 >= 0xC)
                {
                  if (v329 <= 3) {
                    uint64_t v333 = v329;
                  }
                  else {
                    uint64_t v333 = 4;
                  }
                  switch(v333)
                  {
                    case 1:
                      int v334 = *(unsigned __int8 *)v320;
                      goto LABEL_239;
                    case 2:
                      int v334 = *(unsigned __int16 *)v320;
                      goto LABEL_239;
                    case 3:
                      int v334 = *(unsigned __int16 *)v320 | (*(unsigned __int8 *)(v320 + 2) << 16);
                      goto LABEL_239;
                    case 4:
                      int v334 = *(_DWORD *)v320;
LABEL_239:
                      if (v329 < 4) {
                        unsigned int v330 = (v334 | (v331 << (8 * v329))) + 12;
                      }
                      else {
                        unsigned int v330 = v334 + 12;
                      }
                      break;
                    default:
                      break;
                  }
                }
                size_t v586 = v577 + v316;
                switch(v330)
                {
                  case 1u:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (*(unsigned __int8 *)(v320 + 106) != 255)
                    {
                      uint64_t v339 = *(unsigned __int16 *)(v320 + 104) | (*(unsigned __int8 *)(v320 + 106) << 16);
                      sub_1BFFA742C(*(void *)(v320 + 96), v339, SBYTE2(v339), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
                    }
                    break;
                  case 2u:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (*(void *)(v320 + 72) >= 3uLL) {
                      swift_bridgeObjectRelease();
                    }
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    break;
                  case 3u:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (*(void *)(v320 + 56) >= 0xFuLL) {
                      swift_bridgeObjectRelease();
                    }
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    break;
                  case 4u:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    break;
                  case 5u:
                    unint64_t __dsta = (void *)(((v323 + 7 + ((v93 + v588 + v323 + v589) & v595)) & 0xFFFFFFFFFFFFFFF8) + 8);
                    uint64_t v611 = v93 + v588;
                    BOOL v622 = v316;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    unint64_t v340 = (((((((((((((((((((((((((((((((v320 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                                    + 25) & 0xFFFFFFFFFFFFFFF8)
                                                  + 15) & 0xFFFFFFFFFFFFFFF8)
                                                + 15) & 0xFFFFFFFFFFFFFFF8)
                                              + 15) & 0xFFFFFFFFFFFFFFF8)
                                            + 15) & 0xFFFFFFFFFFFFFFF8)
                                          + 15) & 0xFFFFFFFFFFFFFFF8)
                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                      + 15) & 0xFFFFFFFFFFFFFFF8)
                                    + 15) & 0xFFFFFFFFFFFFFFF8)
                                  + 15) & 0xFFFFFFFFFFFFFFF8)
                                + 15) & 0xFFFFFFFFFFFFFFF8)
                              + 15) & 0xFFFFFFFFFFFFFFF8)
                            + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 15) & 0xFFFFFFFFFFFFFFF8;
                    if (*(void *)(v340 + 8) >= 0xFFFFFFFFuLL) {
                      swift_bridgeObjectRelease();
                    }
                    unint64_t v341 = (v534 + v340) & v535;
                    swift_bridgeObjectRelease();
                    unint64_t v342 = (v341 + 15) & 0xFFFFFFFFFFFFFFF8;
                    swift_bridgeObjectRelease();
                    uint64_t v343 = (v588 + v342 + 8) & v535;
                    LODWORD(v344) = -1;
                    if (*(void *)(v343 + 8) < 0xFFFFFFFFuLL) {
                      uint64_t v344 = *(void *)(((v588 + v342 + 8) & v535) + 8);
                    }
                    if ((int)v344 - 1 < 0)
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                    }
                    v345 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v538 + 48);
                    if (!v345((v536 + v343) & v595, 1, v537)) {
                      (*(void (**)(uint64_t, uint64_t))(v538 + 8))((v536 + v343) & v595, v537);
                    }
                    if (!v345((v598 + v588 + v343) & v595, 1, v537)) {
                      (*(void (**)(size_t, uint64_t))(v538 + 8))((v598 + v588 + v343) & v595, v537);
                    }
                    swift_bridgeObjectRelease();
                    unint64_t v346 = (v628 + v341 + ((v602 + ((v611 + v589 + v323) & v595)) & 0xFFFFFFFFFFFFFFF8) + 8) & v630;
                    (*(void (**)(unint64_t, uint64_t))(v555 + 8))(v346, v616);
                    uint64_t v326 = v571 + v588;
                    unint64_t v347 = (v571 + v588 + v346) & v595;
                    uint64_t v324 = v611;
                    BOOL v332 = v622;
                    unint64_t v325 = (unint64_t)__dsta;
                    if (!v345(v347, 1, v537)) {
                      (*(void (**)(unint64_t, uint64_t))(v538 + 8))(v347, v537);
                    }
                    break;
                  case 6u:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    break;
                  case 7u:
                    swift_release();
                    break;
                  case 8u:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    break;
                  case 9u:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    break;
                  case 0xAu:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_1BFEC28BC(*(void *)(v320 + 32), *(void *)(v320 + 40), *(void *)(v320 + 48), *(void *)(v320 + 56), *(void *)(v320 + 64), *(void *)(v320 + 72), *(unsigned char *)(v320 + 80));
                    break;
                  case 0xBu:
                    unint64_t v337 = ((v323 + 7 + ((v93 + v588 + v323 + v589) & v595)) & 0xFFFFFFFFFFFFFFF8) + 8;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    unint64_t v338 = v539
                         + ((v533 + ((((v320 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & v532);
                    goto LABEL_271;
                  default:
                    unint64_t v337 = ((v323 + 7 + ((v93 + v588 + v323 + v589) & v595)) & 0xFFFFFFFFFFFFFFF8) + 8;
                    swift_bridgeObjectRelease();
                    unint64_t v338 = v539 + v320;
LABEL_271:
                    unint64_t v348 = v338 & v540;
                    (*(void (**)(unint64_t, uint64_t))(v543 + 8))(v338 & v540, v542);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    unint64_t v349 = (v544
                          + ((((((((v541 + v348) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                            + 23) & 0xFFFFFFFFFFFFFFF8)) & v545;
                    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v547 + 48))(v349, 1, v549))(*(void (**)(unint64_t, uint64_t))(v547 + 8))(v349, v549); {
                    swift_bridgeObjectRelease();
                    }
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    unint64_t v325 = v337;
                    break;
                }
                unsigned int v350 = *(unsigned __int8 *)(v321 + v329);
                unsigned int v351 = v350 - 12;
                if (v350 >= 0xC)
                {
                  if (v329 <= 3) {
                    uint64_t v352 = v329;
                  }
                  else {
                    uint64_t v352 = 4;
                  }
                  switch(v352)
                  {
                    case 1:
                      int v353 = *(unsigned __int8 *)v321;
                      goto LABEL_283;
                    case 2:
                      int v353 = *(unsigned __int16 *)v321;
                      goto LABEL_283;
                    case 3:
                      int v353 = *(unsigned __int16 *)v321 | (*(unsigned __int8 *)(v321 + 2) << 16);
                      goto LABEL_283;
                    case 4:
                      int v353 = *(_DWORD *)v321;
LABEL_283:
                      if (v329 < 4) {
                        unsigned int v350 = (v353 | (v351 << (8 * v329))) + 12;
                      }
                      else {
                        unsigned int v350 = v353 + 12;
                      }
                      break;
                    default:
                      break;
                  }
                }
                switch(v350)
                {
                  case 1u:
                    uint64_t v572 = v329;
                    uint64_t v640 = v326;
                    uint64_t v613 = v324;
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    *(void *)(v320 + 16) = *(void *)(v321 + 16);
                    *(void *)(v320 + 24) = *(void *)(v321 + 24);
                    *(void *)(v320 + 32) = *(void *)(v321 + 32);
                    *(void *)(v320 + 40) = *(void *)(v321 + 40);
                    *(void *)(v320 + 48) = *(void *)(v321 + 48);
                    *(void *)(v320 + 56) = *(void *)(v321 + 56);
                    uint64_t v368 = *(void *)(v321 + 64);
                    *(unsigned char *)(v320 + 72) = *(unsigned char *)(v321 + 72);
                    *(void *)(v320 + 64) = v368;
                    *(void *)(v320 + 80) = *(void *)(v321 + 80);
                    *(void *)(v320 + 88) = *(void *)(v321 + 88);
                    v369 = (uint64_t *)(v321 + 96);
                    unsigned __int8 v370 = *(unsigned char *)(v321 + 106);
                    int v371 = *(unsigned __int16 *)(v321 + 104);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v370 == 255)
                    {
                      uint64_t v372 = *v369;
                      *(_DWORD *)(v320 + 103) = *(_DWORD *)(v321 + 103);
                      *(void *)(v320 + 96) = v372;
                    }
                    else
                    {
                      uint64_t v470 = v371 & 0xFF00FFFF | (v370 << 16);
                      uint64_t v471 = *v369;
                      sub_1BFFA742C(*v369, v470, SBYTE2(v470), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
                      *(void *)(v320 + 96) = v471;
                      *(_WORD *)(v320 + 104) = v470;
                      *(unsigned char *)(v320 + 106) = BYTE2(v470);
                    }
                    uint64_t v336 = ~v628;
                    uint64_t v326 = v640;
                    uint64_t v335 = v589;
                    uint64_t v324 = v613;
                    *(unsigned char *)(v320 + v572) = 1;
                    break;
                  case 2u:
                    uint64_t v639 = v326;
                    uint64_t v612 = v324;
                    BOOL v624 = v332;
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    *(void *)(v320 + 16) = *(void *)(v321 + 16);
                    *(void *)(v320 + 24) = *(void *)(v321 + 24);
                    *(void *)(v320 + 32) = *(void *)(v321 + 32);
                    *(void *)(v320 + 40) = *(void *)(v321 + 40);
                    *(unsigned char *)(v320 + 48) = *(unsigned char *)(v321 + 48);
                    *(void *)(v320 + 56) = *(void *)(v321 + 56);
                    v373 = (unsigned __int8 *)v321;
                    v374 = (_OWORD *)(v321 + 64);
                    v375 = v373;
                    unint64_t v376 = *((void *)v373 + 9);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    uint64_t v573 = v329;
                    if (v376 <= 2)
                    {
                      *(_OWORD *)(v320 + 64) = *v374;
                      uint64_t v335 = v589;
                      v500 = v375;
                    }
                    else
                    {
                      v500 = v375;
                      *(unsigned char *)(v320 + 64) = v375[64];
                      *(void *)(v320 + 72) = *((void *)v375 + 9);
                      swift_bridgeObjectRetain();
                      uint64_t v335 = v589;
                    }
                    *(void *)(v320 + 80) = v500[10];
                    *(void *)(v320 + 88) = v500[11];
                    *(void *)(v320 + 96) = v500[12];
                    *(void *)(v320 + 104) = v500[13];
                    *(void *)(v320 + 112) = v500[14];
                    *(void *)(v320 + 120) = *((void *)v375 + 15);
                    *(unsigned char *)(v320 + 128) = v375[128];
                    *(void *)(v320 + 136) = *((void *)v375 + 17);
                    *(unsigned char *)(v320 + v573) = 2;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    unint64_t v321 = (unint64_t)v375;
                    goto LABEL_343;
                  case 3u:
                    uint64_t v574 = v329;
                    uint64_t v639 = v326;
                    uint64_t v612 = v324;
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    *(void *)(v320 + 16) = *(void *)(v321 + 16);
                    *(void *)(v320 + 24) = *(void *)(v321 + 24);
                    *(void *)(v320 + 32) = *(void *)(v321 + 32);
                    *(void *)(v320 + 40) = *(void *)(v321 + 40);
                    unint64_t v377 = *(void *)(v321 + 56);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    BOOL v624 = v332;
                    if (v377 >= 0xF)
                    {
                      *(void *)(v320 + 48) = *(void *)(v321 + 48);
                      *(void *)(v320 + 56) = *(void *)(v321 + 56);
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)(v320 + 48) = *(_OWORD *)(v321 + 48);
                    }
                    uint64_t v335 = v589;
                    *(void *)(v320 + 64) = *(void *)(v321 + 64);
                    *(void *)(v320 + 72) = *(void *)(v321 + 72);
                    *(void *)(v320 + 80) = *(void *)(v321 + 80);
                    *(void *)(v320 + 88) = *(void *)(v321 + 88);
                    *(void *)(v320 + 96) = *(void *)(v321 + 96);
                    *(void *)(v320 + 104) = *(void *)(v321 + 104);
                    *(void *)(v320 + 112) = *(void *)(v321 + 112);
                    *(unsigned char *)(v320 + 120) = *(unsigned char *)(v321 + 120);
                    *(unsigned char *)(v320 + v574) = 3;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
LABEL_343:
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    uint64_t v336 = ~v628;
                    BOOL v332 = v624;
                    goto LABEL_344;
                  case 4u:
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    *(void *)(v320 + 16) = *(void *)(v321 + 16);
                    *(void *)(v320 + 24) = *(void *)(v321 + 24);
                    *(void *)(v320 + 32) = *(void *)(v321 + 32);
                    *(void *)(v320 + 40) = *(void *)(v321 + 40);
                    *(void *)(v320 + 48) = *(void *)(v321 + 48);
                    *(unsigned char *)(v320 + v329) = 4;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    goto LABEL_306;
                  case 5u:
                    __dstb = (void *)v325;
                    uint64_t v575 = v329;
                    uint64_t v641 = v326;
                    uint64_t v614 = v324;
                    BOOL v625 = v332;
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    v378 = (void *)((v320 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v570 = (unsigned __int8 *)v321;
                    v379 = (void *)((v321 + 23) & 0xFFFFFFFFFFFFFFF8);
                    void *v378 = *v379;
                    v378[1] = v379[1];
                    unint64_t v380 = ((unint64_t)v378 + 23) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v381 = ((unint64_t)v379 + 23) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v380 = *(void *)v381;
                    *(void *)(v380 + 8) = *(void *)(v381 + 8);
                    *(unsigned char *)(v380 + 16) = *(unsigned char *)(v381 + 16);
                    *(unsigned char *)(v380 + 17) = *(unsigned char *)(v381 + 17);
                    v382 = (void *)((v380 + 25) & 0xFFFFFFFFFFFFFFF8);
                    v383 = (void *)((v381 + 25) & 0xFFFFFFFFFFFFFFF8);
                    void *v382 = *v383;
                    v384 = (void *)(((unint64_t)v382 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v385 = (void *)(((unint64_t)v383 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v384 = *v385;
                    v386 = (void *)(((unint64_t)v384 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v387 = (void *)(((unint64_t)v385 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v386 = *v387;
                    v388 = (void *)(((unint64_t)v386 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v389 = (void *)(((unint64_t)v387 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v388 = *v389;
                    v390 = (void *)(((unint64_t)v388 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v391 = (void *)(((unint64_t)v389 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v390 = *v391;
                    v392 = (void *)(((unint64_t)v390 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v393 = (void *)(((unint64_t)v391 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v392 = *v393;
                    v394 = (void *)(((unint64_t)v392 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v395 = (void *)(((unint64_t)v393 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v394 = *v395;
                    v396 = (void *)(((unint64_t)v394 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v397 = (void *)(((unint64_t)v395 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v396 = *v397;
                    v398 = (void *)(((unint64_t)v396 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v399 = (void *)(((unint64_t)v397 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v398 = *v399;
                    v400 = (void *)(((unint64_t)v398 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v401 = (void *)(((unint64_t)v399 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v400 = *v401;
                    v402 = (void *)(((unint64_t)v400 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v403 = (void *)(((unint64_t)v401 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v402 = *v403;
                    v404 = (void *)(((unint64_t)v402 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v405 = (void *)(((unint64_t)v403 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v404 = *v405;
                    v406 = (void *)(((unint64_t)v404 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v407 = (void *)(((unint64_t)v405 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v406 = *v407;
                    unint64_t v408 = ((unint64_t)v406 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v409 = ((unint64_t)v407 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v410 = *(void *)(v409 + 8);
                    if (v410 >= 0xFFFFFFFF) {
                      LODWORD(v410) = -1;
                    }
                    int v546 = v410;
                    unsigned int v548 = v410 + 1;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v548 <= 2 && v546 == -1)
                    {
                      *(unsigned char *)unint64_t v408 = *(unsigned char *)v409;
                      *(void *)(v408 + 8) = *(void *)(v409 + 8);
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)unint64_t v408 = *(_OWORD *)v409;
                    }
                    v587 = (void *)((v534 + v409) & v535);
                    v560 = (void *)((v534 + v408) & v535);
                    void *v560 = *v587;
                    v513 = (void *)(((unint64_t)v560 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v514 = (void *)(((unint64_t)v587 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v513 = *v514;
                    v515 = (void *)(((unint64_t)v513 + v588 + 8) & v535);
                    v516 = (void *)(((unint64_t)v514 + v588 + 8) & v535);
                    unint64_t v517 = v516[1];
                    if (v517 >= 0xFFFFFFFF) {
                      LODWORD(v517) = -1;
                    }
                    int v518 = v517 - 1;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v518 < 0)
                    {
                      void *v515 = *v516;
                      v515[1] = v516[1];
                      v515[2] = v516[2];
                      v515[3] = v516[3];
                      v515[4] = v516[4];
                      v515[5] = v516[5];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      long long v519 = *(_OWORD *)v516;
                      long long v520 = *((_OWORD *)v516 + 2);
                      *((_OWORD *)v515 + 1) = *((_OWORD *)v516 + 1);
                      *((_OWORD *)v515 + 2) = v520;
                      *(_OWORD *)v515 = v519;
                    }
                    v521 = (void *)(((unint64_t)v515 + v536) & v595);
                    v522 = (const void *)(((unint64_t)v516 + v536) & v595);
                    v607 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v538 + 48);
                    if (v607(v522, 1, v537))
                    {
                      memcpy(v521, v522, v323);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v538 + 16))(v521, v522, v537);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v538 + 56))(v521, 0, 1, v537);
                    }
                    v523 = (void *)(((unint64_t)v515 + v598 + v588) & v595);
                    v524 = (const void *)(((unint64_t)v516 + v598 + v588) & v595);
                    if (v607(v524, 1, v537))
                    {
                      memcpy(v523, v524, v323);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v538 + 16))(v523, v524, v537);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v538 + 56))(v523, 0, 1, v537);
                    }
                    uint64_t v335 = v589;
                    *(void *)(((unint64_t)v523 + v602) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v524 + v602) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v525 = ((unint64_t)v560 + v325 + v628) & v630;
                    uint64_t v526 = ((uint64_t)v587 + (void)__dstb + v628) & v630;
                    v527 = *(void (**)(unint64_t, uint64_t, uint64_t))(v555 + 16);
                    swift_bridgeObjectRetain();
                    v527(v525, v526, v616);
                    v528 = (void *)((v641 + v525) & v595);
                    uint64_t v529 = v641 + v526;
                    uint64_t v326 = v641;
                    v530 = (const void *)(v529 & v595);
                    if (v607((const void *)(v529 & v595), 1, v537))
                    {
                      memcpy(v528, v530, v323);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v538 + 16))(v528, v530, v537);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v538 + 56))(v528, 0, 1, v537);
                    }
                    uint64_t v336 = ~v628;
                    BOOL v332 = v625;
                    unint64_t v321 = (unint64_t)v570;
                    uint64_t v324 = v614;
                    *(unsigned char *)(v320 + v575) = 5;
                    break;
                  case 6u:
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    *(void *)(v320 + 16) = *(void *)(v321 + 16);
                    *(unsigned char *)(v320 + v329) = 6;
                    swift_bridgeObjectRetain();
                    goto LABEL_306;
                  case 7u:
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(unsigned char *)(v320 + v329) = 7;
                    swift_retain();
                    goto LABEL_307;
                  case 8u:
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    *(void *)(v320 + 16) = *(void *)(v321 + 16);
                    *(void *)(v320 + 24) = *(void *)(v321 + 24);
                    *(void *)(v320 + 32) = *(void *)(v321 + 32);
                    *(void *)(v320 + 40) = *(void *)(v321 + 40);
                    *(void *)(v320 + 48) = *(void *)(v321 + 48);
                    *(void *)(v320 + 56) = *(void *)(v321 + 56);
                    *(void *)(v320 + 64) = *(void *)(v321 + 64);
                    *(unsigned char *)(v320 + v329) = 8;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    goto LABEL_306;
                  case 9u:
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    *(void *)(v320 + 16) = *(void *)(v321 + 16);
                    *(void *)(v320 + 24) = *(void *)(v321 + 24);
                    *(void *)(v320 + 32) = *(void *)(v321 + 32);
                    *(void *)(v320 + 40) = *(void *)(v321 + 40);
                    *(void *)(v320 + 48) = *(void *)(v321 + 48);
                    *(void *)(v320 + 56) = *(void *)(v321 + 56);
                    *(void *)(v320 + 64) = *(void *)(v321 + 64);
                    *(void *)(v320 + 72) = *(void *)(v321 + 72);
                    *(unsigned char *)(v320 + 80) = *(unsigned char *)(v321 + 80);
                    *(void *)(v320 + 88) = *(void *)(v321 + 88);
                    *(void *)(v320 + 96) = *(void *)(v321 + 96);
                    *(unsigned char *)(v320 + 104) = *(unsigned char *)(v321 + 104);
                    *(unsigned char *)(v320 + v329) = 9;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
LABEL_306:
                    swift_bridgeObjectRetain();
                    goto LABEL_307;
                  case 0xAu:
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    *(void *)(v320 + 16) = *(void *)(v321 + 16);
                    *(void *)(v320 + 24) = *(void *)(v321 + 24);
                    uint64_t v615 = v324;
                    uint64_t v642 = v326;
                    uint64_t v411 = *(void *)(v321 + 32);
                    uint64_t v412 = *(void *)(v321 + 40);
                    BOOL v626 = v332;
                    uint64_t v413 = *(void *)(v321 + 48);
                    uint64_t v414 = *(void *)(v321 + 56);
                    uint64_t v576 = v329;
                    uint64_t v415 = *(void *)(v321 + 64);
                    uint64_t v416 = *(void *)(v321 + 72);
                    unsigned __int8 v417 = *(unsigned char *)(v321 + 80);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    sub_1BFF1DB64(v411, v412, v413, v414, v415, v416, v417);
                    *(void *)(v320 + 32) = v411;
                    *(void *)(v320 + 40) = v412;
                    uint64_t v324 = v615;
                    uint64_t v326 = v642;
                    *(void *)(v320 + 48) = v413;
                    *(void *)(v320 + 56) = v414;
                    BOOL v332 = v626;
                    *(void *)(v320 + 64) = v415;
                    *(void *)(v320 + 72) = v416;
                    *(unsigned char *)(v320 + 80) = v417;
                    *(unsigned char *)(v320 + v576) = 10;
LABEL_307:
                    uint64_t v336 = ~v628;
                    uint64_t v335 = v589;
                    break;
                  case 0xBu:
                    uint64_t v639 = v326;
                    uint64_t v612 = v324;
                    BOOL v623 = v332;
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    v418 = (void *)((v320 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v569 = (unsigned __int8 *)v321;
                    v419 = (void *)((v321 + 23) & 0xFFFFFFFFFFFFFFF8);
                    void *v418 = *v419;
                    v418[1] = v419[1];
                    v420 = (void *)(((unint64_t)v418 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v421 = (void *)(((unint64_t)v419 + 23) & 0xFFFFFFFFFFFFFFF8);
                    void *v420 = *v421;
                    v420[1] = v421[1];
                    v422 = (void *)(((unint64_t)v420 + v533 + 16) & v532);
                    v423 = (void *)(((unint64_t)v421 + v533 + 16) & v532);
                    void *v422 = *v423;
                    v422[1] = v423[1];
                    unint64_t v424 = ((unint64_t)v422 + v539) & v540;
                    unint64_t v425 = ((unint64_t)v423 + v539) & v540;
                    v426 = *(void (**)(unint64_t, unint64_t, uint64_t))(v543 + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v426(v424, v425, v542);
                    v427 = (void *)((v541 + v424) & 0xFFFFFFFFFFFFFFF8);
                    v428 = (void *)((v541 + v425) & 0xFFFFFFFFFFFFFFF8);
                    void *v427 = *v428;
                    v427[1] = v428[1];
                    v429 = (void *)(((unint64_t)v427 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v430 = (void *)(((unint64_t)v428 + 23) & 0xFFFFFFFFFFFFFFF8);
                    void *v429 = *v430;
                    v429[1] = v430[1];
                    v431 = (void *)(((unint64_t)v429 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v432 = (void *)(((unint64_t)v430 + 23) & 0xFFFFFFFFFFFFFFF8);
                    void *v431 = *v432;
                    v431[1] = v432[1];
                    v433 = (void *)(((unint64_t)v431 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v434 = (void *)(((unint64_t)v432 + 23) & 0xFFFFFFFFFFFFFFF8);
                    void *v433 = *v434;
                    v433[1] = v434[1];
                    v435 = (void *)(((unint64_t)v433 + v544) & v545);
                    v436 = (const void *)(((unint64_t)v434 + v544) & v545);
                    v437 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v547 + 48);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v437(v436, 1, v549))
                    {
                      memcpy(v435, v436, v586);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v547 + 16))(v435, v436, v549);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v547 + 56))(v435, 0, 1, v549);
                    }
                    v488 = (void *)(((unint64_t)v435 + v606) & 0xFFFFFFFFFFFFFFF8);
                    v489 = (void *)(((unint64_t)v436 + v606) & 0xFFFFFFFFFFFFFFF8);
                    void *v488 = *v489;
                    v490 = (void *)(((unint64_t)v488 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v491 = (void *)(((unint64_t)v489 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v490 = *v491;
                    v492 = (void *)(((unint64_t)v490 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v493 = (void *)(((unint64_t)v491 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v492 = *v493;
                    v494 = (void *)(((unint64_t)v492 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v495 = (void *)(((unint64_t)v493 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v494 = *v495;
                    v496 = (void *)(((unint64_t)v494 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v497 = (void *)(((unint64_t)v495 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v496 = *v497;
                    v498 = (void *)(((unint64_t)v496 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v499 = (void *)(((unint64_t)v497 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v498 = *v499;
                    *(void *)(((unint64_t)v498 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v499 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *(unsigned char *)(v320 + v329) = 11;
                    goto LABEL_340;
                  default:
                    uint64_t v639 = v326;
                    uint64_t v612 = v324;
                    BOOL v623 = v332;
                    *(void *)unint64_t v320 = *(void *)v321;
                    *(void *)(v320 + 8) = *(void *)(v321 + 8);
                    unint64_t v354 = (v539 + v320) & v540;
                    v569 = (unsigned __int8 *)v321;
                    unint64_t v355 = (v539 + v321) & v540;
                    v356 = *(void (**)(unint64_t, unint64_t, uint64_t))(v543 + 16);
                    swift_bridgeObjectRetain();
                    v356(v354, v355, v542);
                    v357 = (void *)((v541 + v354) & 0xFFFFFFFFFFFFFFF8);
                    v358 = (void *)((v541 + v355) & 0xFFFFFFFFFFFFFFF8);
                    void *v357 = *v358;
                    v357[1] = v358[1];
                    v359 = (void *)(((unint64_t)v357 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v360 = (void *)(((unint64_t)v358 + 23) & 0xFFFFFFFFFFFFFFF8);
                    void *v359 = *v360;
                    v359[1] = v360[1];
                    v361 = (void *)(((unint64_t)v359 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v362 = (void *)(((unint64_t)v360 + 23) & 0xFFFFFFFFFFFFFFF8);
                    void *v361 = *v362;
                    v361[1] = v362[1];
                    v363 = (void *)(((unint64_t)v361 + 23) & 0xFFFFFFFFFFFFFFF8);
                    v364 = (void *)(((unint64_t)v362 + 23) & 0xFFFFFFFFFFFFFFF8);
                    void *v363 = *v364;
                    v363[1] = v364[1];
                    v365 = (void *)(((unint64_t)v363 + v544) & v545);
                    v366 = (const void *)(((unint64_t)v364 + v544) & v545);
                    v367 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v547 + 48);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v367(v366, 1, v549))
                    {
                      memcpy(v365, v366, v586);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v547 + 16))(v365, v366, v549);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v547 + 56))(v365, 0, 1, v549);
                    }
                    v476 = (void *)(((unint64_t)v365 + v606) & 0xFFFFFFFFFFFFFFF8);
                    v477 = (void *)(((unint64_t)v366 + v606) & 0xFFFFFFFFFFFFFFF8);
                    void *v476 = *v477;
                    v478 = (void *)(((unint64_t)v476 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v479 = (void *)(((unint64_t)v477 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v478 = *v479;
                    v480 = (void *)(((unint64_t)v478 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v481 = (void *)(((unint64_t)v479 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v480 = *v481;
                    v482 = (void *)(((unint64_t)v480 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v483 = (void *)(((unint64_t)v481 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v482 = *v483;
                    v484 = (void *)(((unint64_t)v482 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v485 = (void *)(((unint64_t)v483 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v484 = *v485;
                    v486 = (void *)(((unint64_t)v484 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v487 = (void *)(((unint64_t)v485 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v486 = *v487;
                    *(void *)(((unint64_t)v486 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v487 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *(unsigned char *)(v320 + v329) = 0;
LABEL_340:
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    uint64_t v336 = ~v628;
                    uint64_t v335 = v589;
                    BOOL v332 = v623;
                    unint64_t v321 = (unint64_t)v569;
LABEL_344:
                    uint64_t v324 = v612;
                    uint64_t v326 = v639;
                    break;
                }
              }
              unint64_t v501 = ((((((((((((((v577 + v332 + v579 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 8;
              size_t v502 = v593;
              if (!v591) {
                size_t v502 = v593 + 1;
              }
              unint64_t v503 = ((v326
                     + ((v628 + v580 + ((v502 + ((v324 + v335 + v502) & v595) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & v336)) & v595)
                   + v502;
              if (v501 > v503) {
                unint64_t v503 = ((((((((((((((v577 + v332 + v579 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              }
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 8;
              unint64_t v504 = v501 + v582;
              if (v503 > v504) {
                unint64_t v504 = v503;
              }
              if (v504 <= 0x90) {
                unint64_t v504 = 144;
              }
              unint64_t v505 = v504 + 1;
              v506 = (uint64_t *)(((v320 | 7) + v505) & 0xFFFFFFFFFFFFFFF8);
              v507 = (uint64_t *)(((v321 | 7) + v505) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v508 = *v507;
              unint64_t v509 = v507[1];
              sub_1BFE95820(*v507, v509);
              uint64_t v510 = *v506;
              unint64_t v511 = v506[1];
              uint64_t *v506 = v508;
              v506[1] = v509;
              sub_1BFE95664(v510, v511);
              *(void *)(((unint64_t)v506 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v507
                                                                                             + 23) & 0xFFFFFFFFFFFFFFF8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              return v627;
            }
            sub_1C00F5AEC(*(void *)v167, *(void *)(v167 + 8), v169);
          }
          else if (v173.i8[0])
          {
            uint64_t v283 = *v172;
            unint64_t v284 = v87[4];
            sub_1C00F5ACC(*v172, v284, v170);
            *(void *)uint64_t v167 = v283;
            *(void *)(v167 + 8) = v284;
            *(unsigned char *)(v167 + 16) = v170;
            goto LABEL_210;
          }
          long long v295 = *(_OWORD *)v172;
          *(unsigned char *)(v167 + 16) = *((unsigned char *)v87 + 40);
          *(_OWORD *)uint64_t v167 = v295;
          goto LABEL_210;
        }
      }
      uint64_t v93 = v92;
      size_t v97 = v583;
      if (v90)
      {
        memcpy((void *)v86, v87, v583);
        int v96 = v567;
      }
      else
      {
        uint64_t v153 = *v87;
        uint64_t v154 = v87[1];
        unsigned __int8 v155 = *((unsigned char *)v87 + 16);
        sub_1C024FAC0(*v87, v154, v155);
        *(void *)uint64_t v86 = v153;
        *(void *)(v86 + 8) = v154;
        *(unsigned char *)(v86 + 16) = v155;
        uint64_t v156 = (_OWORD *)(v86 + 24);
        uint64_t v157 = v87 + 3;
        unsigned int v158 = *((unsigned __int8 *)v87 + 40);
        uint64_t v553 = v93;
        if ((((v158 >> 6) & 0xFFFFFF83 | (4 * ((v158 >> 1) & 0x1F))) ^ 0x7F) < 0x7D)
        {
          long long v202 = *(_OWORD *)v157;
          *(unsigned char *)(v86 + 40) = *((unsigned char *)v87 + 40);
          _OWORD *v156 = v202;
        }
        else
        {
          uint64_t v159 = *v157;
          unint64_t v160 = v87[4];
          sub_1C00F5ACC(*v157, v160, v158);
          *(void *)uint64_t v156 = v159;
          *(void *)(v86 + 32) = v160;
          *(unsigned char *)(v86 + 40) = v158;
        }
        *(void *)(v86 + 48) = v87[6];
        *(void *)(v86 + 56) = v87[7];
        uint64_t v203 = v86;
        unint64_t v204 = (v86 + 71) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v205 = ((unint64_t)v87 + 71) & 0xFFFFFFFFFFFFFFF8;
        unsigned int v206 = *(unsigned __int16 *)(v205 + 44);
        uint64_t v207 = *(unsigned int *)(v205 + 40);
        swift_bridgeObjectRetain();
        if (v206 >> 9 <= 0x7EuLL)
        {
          unint64_t v210 = v207 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v206 << 32);
          uint64_t v211 = *(void *)v205;
          uint64_t v212 = *(void *)(v205 + 8);
          uint64_t v214 = *(void *)(v205 + 16);
          uint64_t v213 = *(void *)(v205 + 24);
          uint64_t v215 = *(void *)(v205 + 32);
          sub_1C017F524(*(void *)v205, v212, v214, v213, v215, v210);
          *(void *)unint64_t v204 = v211;
          *(void *)(v204 + 8) = v212;
          *(void *)(v204 + 16) = v214;
          *(void *)(v204 + 24) = v213;
          *(void *)(v204 + 32) = v215;
          *(_WORD *)(v204 + 44) = WORD2(v210);
          *(_DWORD *)(v204 + 40) = v210;
        }
        else
        {
          long long v208 = *(_OWORD *)v205;
          long long v209 = *(_OWORD *)(v205 + 16);
          *(_OWORD *)(v204 + 30) = *(_OWORD *)(v205 + 30);
          *(_OWORD *)unint64_t v204 = v208;
          *(_OWORD *)(v204 + 16) = v209;
        }
        int v96 = v567;
        *(void *)(v204 + 48) = *(void *)(v205 + 48);
        *(void *)(v204 + 56) = *(void *)(v205 + 56);
        uint64_t v216 = (v628 + 64 + v205) & v630;
        uint64_t v217 = *(void (**)(unint64_t, uint64_t, uint64_t))(v555 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v217((v628 + 64 + v204) & v630, v216, v616);
        uint64_t v85 = ~(v628 | 7);
        uint64_t v93 = v553;
        size_t v97 = v583;
        uint64_t v86 = v203;
        uint64_t v91 = v616;
      }
      goto LABEL_218;
    }
  }
  if (v58)
  {
    size_t v68 = v577;
    if (!v567) {
      size_t v68 = v577 + 1;
    }
    unint64_t v69 = ((((((((((((((v68 + v579 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    size_t v70 = v593;
    if (!v591) {
      size_t v70 = v593 + 1;
    }
    unint64_t v71 = ((v571
          + v588
          + ((v628 + v580 + ((v70 + ((v53 + v588 + v589 + v70) & v595) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & v51)) & v595)
        + v70;
    if (v69 > v71) {
      unint64_t v71 = v69;
    }
    unint64_t v72 = v69 + v582;
    if (v71 > v72) {
      unint64_t v72 = v71;
    }
    if (v72 <= 0x90) {
      unint64_t v72 = 144;
    }
    size_t v73 = ((((v583 + v608 + v56) & v633) + v597 + v601) & v603)
        + (((v72 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    unsigned int v74 = v47;
    goto LABEL_160;
  }
  *uint64_t v47 = *v59;
  v47[1] = v59[1];
  v47[2] = v59[2];
  *((unsigned char *)v47 + 24) = *((unsigned char *)v59 + 24);
  v47[4] = v59[4];
  v47[5] = v59[5];
  uint64_t v75 = ~(v628 | 7);
  unint64_t v76 = (char *)(((unint64_t)v47 + v54) & v633);
  unint64_t v77 = ((unint64_t)v59 + v54) & v633;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v618 & 0x80000000) == 0)
  {
    unint64_t v78 = *(void *)((((unint64_t)v59 + v54) & v633) + 0x38);
    if (v78 >= 0xFFFFFFFF) {
      LODWORD(v78) = -1;
    }
    size_t v79 = v583;
    uint64_t v80 = v15;
    uint64_t v552 = v53;
    if (v78 != -1) {
      goto LABEL_47;
    }
LABEL_84:
    uint64_t v115 = *(void *)v77;
    uint64_t v116 = *(void *)((((unint64_t)v59 + v54) & v633) + 8);
    unsigned __int8 v117 = *(unsigned char *)(v77 + 16);
    sub_1C024FAC0(*(void *)v77, *(void *)(v77 + 8), v117);
    *(void *)unint64_t v76 = v115;
    *((void *)v76 + 1) = v116;
    v76[16] = v117;
    unint64_t v118 = v76 + 24;
    unsigned int v119 = (uint64_t *)(v77 + 24);
    unsigned int v120 = *(unsigned __int8 *)(v77 + 40);
    if ((((v120 >> 6) & 0xFFFFFF83 | (4 * ((v120 >> 1) & 0x1F))) ^ 0x7F) < 0x7D)
    {
      long long v123 = *(_OWORD *)v119;
      v76[40] = *(unsigned char *)(v77 + 40);
      *unint64_t v118 = v123;
    }
    else
    {
      uint64_t v121 = *v119;
      unint64_t v122 = *(void *)(v77 + 32);
      sub_1C00F5ACC(*v119, v122, *(unsigned char *)(v77 + 40));
      *(void *)unint64_t v118 = v121;
      *((void *)v76 + 4) = v122;
      v76[40] = v120;
    }
    *((void *)v76 + 6) = *(void *)(v77 + 48);
    *((void *)v76 + 7) = *(void *)(v77 + 56);
    unint64_t v124 = (unint64_t)(v76 + 71) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v125 = (v77 + 71) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v126 = *(unsigned __int16 *)(v125 + 44);
    uint64_t v127 = *(unsigned int *)(v125 + 40);
    swift_bridgeObjectRetain();
    if (v126 >> 9 <= 0x7EuLL)
    {
      unint64_t v130 = v127 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v126 << 32);
      uint64_t v131 = *(void *)v125;
      uint64_t v132 = *(void *)(v125 + 8);
      uint64_t v133 = *(void *)(v125 + 16);
      uint64_t v134 = *(void *)(v125 + 24);
      uint64_t v135 = *(void *)(v125 + 32);
      sub_1C017F524(*(void *)v125, v132, v133, v134, v135, v130);
      *(void *)unint64_t v124 = v131;
      *(void *)(v124 + 8) = v132;
      *(void *)(v124 + 16) = v133;
      *(void *)(v124 + 24) = v134;
      *(void *)(v124 + 32) = v135;
      *(_WORD *)(v124 + 44) = WORD2(v130);
      *(_DWORD *)(v124 + 40) = v130;
    }
    else
    {
      long long v128 = *(_OWORD *)v125;
      long long v129 = *(_OWORD *)(v125 + 16);
      *(_OWORD *)(v124 + 30) = *(_OWORD *)(v125 + 30);
      *(_OWORD *)unint64_t v124 = v128;
      *(_OWORD *)(v124 + 16) = v129;
    }
    *(void *)(v124 + 48) = *(void *)(v125 + 48);
    *(void *)(v124 + 56) = *(void *)(v125 + 56);
    uint64_t v83 = v628;
    uint64_t v82 = ~v628;
    uint64_t v136 = (v628 + 64 + v124) & v630;
    uint64_t v81 = *(void (**)(uint64_t, unint64_t, uint64_t))(v555 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v80 = v616;
    v81(v136, (v628 + 64 + v125) & v630, v616);
    uint64_t v75 = ~(v628 | 7);
    size_t v79 = v583;
    goto LABEL_94;
  }
  uint64_t v80 = v15;
  size_t v79 = v583;
  uint64_t v552 = v53;
  if (!v556((v628 + ((v77 + 71) & 0xFFFFFFFFFFFFFFF8) + 64) & v630)) {
    goto LABEL_84;
  }
LABEL_47:
  memcpy(v76, (const void *)(((unint64_t)v59 + v54) & v633), v79);
  uint64_t v81 = *(void (**)(uint64_t, unint64_t, uint64_t))(v555 + 16);
  uint64_t v83 = v628;
  uint64_t v82 = ~v628;
LABEL_94:
  size_t v137 = v79 + v608;
  unint64_t v138 = (unint64_t)&v76[v79 + v608] & v75;
  uint64_t v139 = (v137 + v77) & v75;
  v634 = (void (*)(unint64_t, unint64_t, uint64_t))v81;
  v81(v138, v139, v80);
  if (v567) {
    size_t v140 = v577;
  }
  else {
    size_t v140 = v577 + 1;
  }
  *(void *)((v559 + v138) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v559 + v139) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v141 = (v601 + v597 + v138) & v603;
  unint64_t v142 = (v601 + v597 + v139) & v603;
  size_t v143 = v140 + 7;
  unint64_t v144 = ((((((((((((((v140 + 7 + v579) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  if (v591) {
    size_t v145 = v593;
  }
  else {
    size_t v145 = v593 + 1;
  }
  size_t v146 = v145 + v589;
  unint64_t v610 = ((v145 + 7 + ((v552 + v588 + v145 + v589) & v595)) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v147 = ((v571 + v588 + ((v580 + v83 + v610) & v82)) & v595) + v145;
  if (v144 > v147) {
    unint64_t v147 = ((((((((((((((v140 + 7 + v579) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
  }
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8;
  unint64_t v148 = v144 + v582;
  if (v147 > v148) {
    unint64_t v148 = v147;
  }
  if (v148 <= 0x90) {
    uint64_t v149 = 144;
  }
  else {
    uint64_t v149 = v148;
  }
  unsigned int v150 = *(unsigned __int8 *)(v142 + v149);
  swift_bridgeObjectRetain();
  if (v150 >= 0xC)
  {
    if (v149 <= 3) {
      uint64_t v151 = v149;
    }
    else {
      uint64_t v151 = 4;
    }
    switch(v151)
    {
      case 1:
        int v152 = *(unsigned __int8 *)v142;
        if (v149 < 4) {
          goto LABEL_164;
        }
        goto LABEL_166;
      case 2:
        int v152 = *(unsigned __int16 *)v142;
        if (v149 >= 4) {
          goto LABEL_166;
        }
        goto LABEL_164;
      case 3:
        int v152 = *(unsigned __int16 *)((v601 + v597 + v139) & v603) | (*(unsigned __int8 *)(((v601 + v597 + v139) & v603)
                                                                                        + 2) << 16);
        if (v149 < 4) {
          goto LABEL_164;
        }
        goto LABEL_166;
      case 4:
        int v152 = *(_DWORD *)v142;
        if (v149 < 4) {
LABEL_164:
        }
          unsigned int v150 = (v152 | ((v150 - 12) << (8 * v149))) + 12;
        else {
LABEL_166:
        }
          unsigned int v150 = v152 + 12;
        break;
      default:
        break;
    }
  }
  switch(v150)
  {
    case 1u:
      uint64_t v604 = v149;
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(v142 + 8);
      *(void *)(v141 + 16) = *(void *)(v142 + 16);
      *(void *)(v141 + 24) = *(void *)(v142 + 24);
      *(void *)(v141 + 32) = *(void *)(v142 + 32);
      *(void *)(v141 + 40) = *(void *)(v142 + 40);
      *(void *)(v141 + 48) = *(void *)(v142 + 48);
      *(void *)(v141 + 56) = *(void *)(v142 + 56);
      uint64_t v218 = *(void *)(v142 + 64);
      *(unsigned char *)(v141 + 72) = *(unsigned char *)(v142 + 72);
      *(void *)(v141 + 64) = v218;
      *(void *)(v141 + 80) = *(void *)(v142 + 80);
      *(void *)(v141 + 88) = *(void *)(v142 + 88);
      v636 = (uint64_t *)(v142 + 96);
      unsigned __int8 v219 = *(unsigned char *)(v142 + 106);
      int v220 = *(unsigned __int16 *)(v142 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v219 == 255)
      {
        uint64_t v221 = *v636;
        *(_DWORD *)(v141 + 103) = *(_DWORD *)(v142 + 103);
        *(void *)(v141 + 96) = v221;
      }
      else
      {
        uint64_t v285 = v220 & 0xFF00FFFF | (v219 << 16);
        uint64_t v286 = *v636;
        sub_1BFFA742C(*v636, v285, SBYTE2(v285), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        *(void *)(v141 + 96) = v286;
        *(_WORD *)(v141 + 104) = v285;
        *(unsigned char *)(v141 + 106) = BYTE2(v285);
      }
      char v265 = 1;
      goto LABEL_199;
    case 2u:
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(((v601 + v597 + v139) & v603) + 8);
      *(void *)(v141 + 16) = *(void *)(((v601 + v597 + v139) & v603) + 0x10);
      *(void *)(v141 + 24) = *(void *)(((v601 + v597 + v139) & v603) + 0x18);
      *(void *)(v141 + 32) = *(void *)(((v601 + v597 + v139) & v603) + 0x20);
      *(void *)(v141 + 40) = *(void *)(((v601 + v597 + v139) & v603) + 0x28);
      *(unsigned char *)(v141 + 48) = *(unsigned char *)(((v601 + v597 + v139) & v603) + 0x30);
      *(void *)(v141 + 56) = *(void *)(((v601 + v597 + v139) & v603) + 0x38);
      unint64_t v222 = *(void *)(((v601 + v597 + v139) & v603) + 0x48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v222 <= 2)
      {
        *(_OWORD *)(v141 + 64) = *(_OWORD *)(((v601 + v597 + v139) & v603) + 0x40);
      }
      else
      {
        *(unsigned char *)(v141 + 64) = *(unsigned char *)(((v601 + v597 + v139) & v603) + 0x40);
        *(void *)(v141 + 72) = *(void *)(((v601 + v597 + v139) & v603) + 0x48);
        swift_bridgeObjectRetain();
      }
      *(void *)(v141 + 80) = *(void *)(((v601 + v597 + v139) & v603) + 0x50);
      *(void *)(v141 + 88) = *(void *)(((v601 + v597 + v139) & v603) + 0x58);
      *(void *)(v141 + 96) = *(void *)(((v601 + v597 + v139) & v603) + 0x60);
      *(void *)(v141 + 104) = *(void *)(((v601 + v597 + v139) & v603) + 0x68);
      *(void *)(v141 + 112) = *(void *)(((v601 + v597 + v139) & v603) + 0x70);
      *(void *)(v141 + 120) = *(void *)(((v601 + v597 + v139) & v603) + 0x78);
      *(unsigned char *)(v141 + 128) = *(unsigned char *)(((v601 + v597 + v139) & v603) + 0x80);
      *(void *)(v141 + 136) = *(void *)(((v601 + v597 + v139) & v603) + 0x88);
      char v462 = 2;
      goto LABEL_331;
    case 3u:
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(((v601 + v597 + v139) & v603) + 8);
      *(void *)(v141 + 16) = *(void *)(((v601 + v597 + v139) & v603) + 0x10);
      *(void *)(v141 + 24) = *(void *)(((v601 + v597 + v139) & v603) + 0x18);
      *(void *)(v141 + 32) = *(void *)(((v601 + v597 + v139) & v603) + 0x20);
      *(void *)(v141 + 40) = *(void *)(((v601 + v597 + v139) & v603) + 0x28);
      unint64_t v223 = *(void *)(((v601 + v597 + v139) & v603) + 0x38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v223 >= 0xF)
      {
        *(void *)(v141 + 48) = *(void *)(v142 + 48);
        *(void *)(v141 + 56) = *(void *)(v142 + 56);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v141 + 48) = *(_OWORD *)(v142 + 48);
      }
      *(void *)(v141 + 64) = *(void *)(v142 + 64);
      *(void *)(v141 + 72) = *(void *)(v142 + 72);
      *(void *)(v141 + 80) = *(void *)(v142 + 80);
      *(void *)(v141 + 88) = *(void *)(v142 + 88);
      *(void *)(v141 + 96) = *(void *)(v142 + 96);
      *(void *)(v141 + 104) = *(void *)(v142 + 104);
      *(void *)(v141 + 112) = *(void *)(v142 + 112);
      *(unsigned char *)(v141 + 120) = *(unsigned char *)(v142 + 120);
      *(unsigned char *)(v141 + v149) = 3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_333;
    case 4u:
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(((v601 + v597 + v139) & v603) + 8);
      *(void *)(v141 + 16) = *(void *)(((v601 + v597 + v139) & v603) + 0x10);
      *(void *)(v141 + 24) = *(void *)(((v601 + v597 + v139) & v603) + 0x18);
      *(void *)(v141 + 32) = *(void *)(((v601 + v597 + v139) & v603) + 0x20);
      *(void *)(v141 + 40) = *(void *)(((v601 + v597 + v139) & v603) + 0x28);
      *(void *)(v141 + 48) = *(void *)(((v601 + v597 + v139) & v603) + 0x30);
      *(unsigned char *)(v141 + v149) = 4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_334;
    case 5u:
      uint64_t v592 = v571 + v588;
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(((v601 + v597 + v139) & v603) + 8);
      unint64_t v224 = (void *)((v141 + 23) & 0xFFFFFFFFFFFFFFF8);
      int v225 = (void *)((v142 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v224 = *v225;
      v224[1] = v225[1];
      unint64_t v226 = ((unint64_t)v224 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v227 = ((unint64_t)v225 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v226 = *(void *)v227;
      *(void *)(v226 + 8) = *(void *)(v227 + 8);
      *(unsigned char *)(v226 + 16) = *(unsigned char *)(v227 + 16);
      *(unsigned char *)(v226 + 17) = *(unsigned char *)(v227 + 17);
      char v228 = (void *)((v226 + 25) & 0xFFFFFFFFFFFFFFF8);
      char v229 = (void *)((v227 + 25) & 0xFFFFFFFFFFFFFFF8);
      *char v228 = *v229;
      uint64_t v230 = (void *)(((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8);
      size_t v231 = (void *)(((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v230 = *v231;
      unint64_t v232 = (void *)(((unint64_t)v230 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v233 = (void *)(((unint64_t)v231 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v232 = *v233;
      uint64_t v234 = (void *)(((unint64_t)v232 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v235 = (void *)(((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v234 = *v235;
      uint64_t v236 = (void *)(((unint64_t)v234 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v237 = (void *)(((unint64_t)v235 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v236 = *v237;
      unint64_t v238 = (void *)(((unint64_t)v236 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v239 = (void *)(((unint64_t)v237 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v238 = *v239;
      uint64_t v240 = (void *)(((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v241 = (void *)(((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v240 = *v241;
      uint64_t v242 = (void *)(((unint64_t)v240 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v243 = (void *)(((unint64_t)v241 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v242 = *v243;
      uint64_t v244 = (void *)(((unint64_t)v242 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v245 = (void *)(((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v244 = *v245;
      uint64_t v246 = (void *)(((unint64_t)v244 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v247 = (void *)(((unint64_t)v245 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v246 = *v247;
      uint64_t v248 = (void *)(((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v249 = (void *)(((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v248 = *v249;
      size_t v250 = (void *)(((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v251 = (void *)(((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8);
      *size_t v250 = *v251;
      unsigned int v252 = (void *)(((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v253 = (void *)(((unint64_t)v251 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v252 = *v253;
      unint64_t v568 = ((unint64_t)v252 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v254 = ((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v255 = *(void *)(v254 + 8);
      if (v255 >= 0xFFFFFFFF) {
        LODWORD(v255) = -1;
      }
      int v557 = v255;
      unsigned int v558 = v255 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v558 > 2)
      {
        long long v257 = *(_OWORD *)v254;
        size_t v256 = (_OWORD *)v568;
        goto LABEL_203;
      }
      size_t v256 = (_OWORD *)v568;
      if (v557 != -1)
      {
        long long v257 = *(_OWORD *)v254;
LABEL_203:
        *size_t v256 = v257;
        goto LABEL_204;
      }
      *(unsigned char *)unint64_t v568 = *(unsigned char *)v254;
      *(void *)(v568 + 8) = *(void *)(v254 + 8);
      swift_bridgeObjectRetain();
LABEL_204:
      v590 = (void *)((v534 + v254) & v535);
      v585 = (void *)(((unint64_t)v256 + v534) & v535);
      void *v585 = *v590;
      uint64_t v287 = (void *)(((unint64_t)v585 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v288 = (void *)(((unint64_t)v590 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v287 = *v288;
      long long v289 = (void *)(((unint64_t)v287 + v588 + 8) & v535);
      long long v290 = (void *)(((unint64_t)v288 + v588 + 8) & v535);
      unint64_t v291 = v290[1];
      if (v291 >= 0xFFFFFFFF) {
        LODWORD(v291) = -1;
      }
      int v292 = v291 - 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v292 < 0)
      {
        *long long v289 = *v290;
        v289[1] = v290[1];
        v289[2] = v290[2];
        v289[3] = v290[3];
        v289[4] = v290[4];
        v289[5] = v290[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v293 = *(_OWORD *)v290;
        long long v294 = *((_OWORD *)v290 + 2);
        *((_OWORD *)v289 + 1) = *((_OWORD *)v290 + 1);
        *((_OWORD *)v289 + 2) = v294;
        *(_OWORD *)long long v289 = v293;
      }
      v594 = (void *)(((unint64_t)v289 + v536) & v595);
      v463 = (const void *)(((unint64_t)v290 + v536) & v595);
      v599 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v538 + 48);
      if (v599(v463, 1, v537))
      {
        memcpy(v594, v463, v145);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v538 + 16))(v594, v463, v537);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v538 + 56))(v594, 0, 1, v537);
      }
      v464 = (void *)(((unint64_t)v289 + v146 + v588) & v595);
      v465 = (const void *)(((unint64_t)v290 + v146 + v588) & v595);
      if (v599(v465, 1, v537))
      {
        memcpy(v464, v465, v145);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v538 + 16))(v464, v465, v537);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v538 + 56))(v464, 0, 1, v537);
      }
      *(void *)(((unint64_t)v464 + v145 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v465
                                                                                           + v145
                                                                                           + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v466 = ((unint64_t)v585 + v610 + v628) & v630;
      unint64_t v467 = ((unint64_t)v590 + v610 + v628) & v630;
      swift_bridgeObjectRetain();
      v634(v466, v467, v616);
      v468 = (void *)((v592 + v466) & v595);
      v469 = (const void *)((v592 + v467) & v595);
      if (v599(v469, 1, v537))
      {
        memcpy(v468, v469, v145);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v538 + 16))(v468, v469, v537);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v538 + 56))(v468, 0, 1, v537);
      }
      *(unsigned char *)(v141 + v149) = 5;
LABEL_335:
      v472 = (void *)(((v141 | 7) + v149 + 1) & 0xFFFFFFFFFFFFFFF8);
      v473 = (uint64_t *)(((v142 | 7) + v149 + 1) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v474 = *v473;
      unint64_t v475 = v473[1];
      sub_1BFE95820(*v473, v475);
      void *v472 = v474;
      v472[1] = v475;
      *(void *)(((unint64_t)v472 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v473 + 23) & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      return v627;
    case 6u:
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(((v601 + v597 + v139) & v603) + 8);
      *(void *)(v141 + 16) = *(void *)(((v601 + v597 + v139) & v603) + 0x10);
      *(unsigned char *)(v141 + v149) = 6;
      swift_bridgeObjectRetain();
      goto LABEL_334;
    case 7u:
      *(void *)unint64_t v141 = *(void *)v142;
      *(unsigned char *)(v141 + v149) = 7;
      swift_retain();
      goto LABEL_335;
    case 8u:
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(((v601 + v597 + v139) & v603) + 8);
      *(void *)(v141 + 16) = *(void *)(((v601 + v597 + v139) & v603) + 0x10);
      *(void *)(v141 + 24) = *(void *)(((v601 + v597 + v139) & v603) + 0x18);
      *(void *)(v141 + 32) = *(void *)(((v601 + v597 + v139) & v603) + 0x20);
      *(void *)(v141 + 40) = *(void *)(((v601 + v597 + v139) & v603) + 0x28);
      *(void *)(v141 + 48) = *(void *)(((v601 + v597 + v139) & v603) + 0x30);
      *(void *)(v141 + 56) = *(void *)(((v601 + v597 + v139) & v603) + 0x38);
      *(void *)(v141 + 64) = *(void *)(((v601 + v597 + v139) & v603) + 0x40);
      *(unsigned char *)(v141 + v149) = 8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_334;
    case 9u:
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(((v601 + v597 + v139) & v603) + 8);
      *(void *)(v141 + 16) = *(void *)(((v601 + v597 + v139) & v603) + 0x10);
      *(void *)(v141 + 24) = *(void *)(((v601 + v597 + v139) & v603) + 0x18);
      *(void *)(v141 + 32) = *(void *)(((v601 + v597 + v139) & v603) + 0x20);
      *(void *)(v141 + 40) = *(void *)(((v601 + v597 + v139) & v603) + 0x28);
      *(void *)(v141 + 48) = *(void *)(((v601 + v597 + v139) & v603) + 0x30);
      *(void *)(v141 + 56) = *(void *)(((v601 + v597 + v139) & v603) + 0x38);
      *(void *)(v141 + 64) = *(void *)(((v601 + v597 + v139) & v603) + 0x40);
      *(void *)(v141 + 72) = *(void *)(((v601 + v597 + v139) & v603) + 0x48);
      *(unsigned char *)(v141 + 80) = *(unsigned char *)(((v601 + v597 + v139) & v603) + 0x50);
      *(void *)(v141 + 88) = *(void *)(((v601 + v597 + v139) & v603) + 0x58);
      *(void *)(v141 + 96) = *(void *)(((v601 + v597 + v139) & v603) + 0x60);
      *(unsigned char *)(v141 + 104) = *(unsigned char *)(((v601 + v597 + v139) & v603) + 0x68);
      *(unsigned char *)(v141 + v149) = 9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_334;
    case 0xAu:
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(((v601 + v597 + v139) & v603) + 8);
      *(void *)(v141 + 16) = *(void *)(((v601 + v597 + v139) & v603) + 0x10);
      *(void *)(v141 + 24) = *(void *)(((v601 + v597 + v139) & v603) + 0x18);
      uint64_t v258 = *(void *)(((v601 + v597 + v139) & v603) + 0x20);
      uint64_t v259 = *(void *)(((v601 + v597 + v139) & v603) + 0x28);
      uint64_t v260 = *(void *)(v142 + 48);
      uint64_t v261 = *(void *)(v142 + 56);
      uint64_t v262 = *(void *)(v142 + 64);
      uint64_t v263 = *(void *)(v142 + 72);
      uint64_t v604 = v149;
      unsigned __int8 v264 = *(unsigned char *)(v142 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v258, v259, v260, v261, v262, v263, v264);
      *(void *)(v141 + 32) = v258;
      *(void *)(v141 + 40) = v259;
      *(void *)(v141 + 48) = v260;
      *(void *)(v141 + 56) = v261;
      *(void *)(v141 + 64) = v262;
      *(void *)(v141 + 72) = v263;
      char v265 = 10;
      *(unsigned char *)(v141 + 80) = v264;
LABEL_199:
      uint64_t v149 = v604;
      *(unsigned char *)(v141 + v604) = v265;
      goto LABEL_335;
    case 0xBu:
      uint64_t v605 = v149;
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(v142 + 8);
      uint64_t v266 = (void *)((v141 + 23) & 0xFFFFFFFFFFFFFFF8);
      int v267 = (void *)((v142 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v266 = *v267;
      v266[1] = v267[1];
      size_t v268 = (void *)(((unint64_t)v266 + 23) & 0xFFFFFFFFFFFFFFF8);
      int v269 = (void *)(((unint64_t)v267 + 23) & 0xFFFFFFFFFFFFFFF8);
      *size_t v268 = *v269;
      v268[1] = v269[1];
      size_t v270 = (void *)(((unint64_t)v268 + v533 + 16) & v532);
      size_t v271 = (void *)(((unint64_t)v269 + v533 + 16) & v532);
      *size_t v270 = *v271;
      v270[1] = v271[1];
      unint64_t v272 = ((unint64_t)v270 + v539) & v540;
      unint64_t v273 = ((unint64_t)v271 + v539) & v540;
      v637 = *(void (**)(unint64_t, unint64_t, uint64_t))(v543 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v637(v272, v273, v542);
      uint64_t v274 = (void *)((v541 + v272) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v275 = (void *)((v541 + v273) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v274 = *v275;
      v274[1] = v275[1];
      uint64_t v276 = (void *)(((unint64_t)v274 + 23) & 0xFFFFFFFFFFFFFFF8);
      size_t v277 = (void *)(((unint64_t)v275 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v276 = *v277;
      v276[1] = v277[1];
      uint64_t v278 = (void *)(((unint64_t)v276 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v279 = (void *)(((unint64_t)v277 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v278 = *v279;
      v278[1] = v279[1];
      unint64_t v280 = (void *)(((unint64_t)v278 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v281 = (void *)(((unint64_t)v279 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v280 = *v281;
      v280[1] = v281[1];
      v632 = (void *)(((unint64_t)v280 + v544) & v545);
      unint64_t v282 = (const void *)(((unint64_t)v281 + v544) & v545);
      v638 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v547 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v638(v282, 1, v549))
      {
        memcpy(v632, v282, v140);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v547 + 16))(v632, v282, v549);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v547 + 56))(v632, 0, 1, v549);
      }
      uint64_t v149 = v605;
      v450 = (void *)(((unint64_t)v632 + v143) & 0xFFFFFFFFFFFFFFF8);
      v451 = (void *)(((unint64_t)v282 + v143) & 0xFFFFFFFFFFFFFFF8);
      void *v450 = *v451;
      v452 = (void *)(((unint64_t)v450 + 15) & 0xFFFFFFFFFFFFFFF8);
      v453 = (void *)(((unint64_t)v451 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v452 = *v453;
      v454 = (void *)(((unint64_t)v452 + 15) & 0xFFFFFFFFFFFFFFF8);
      v455 = (void *)(((unint64_t)v453 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v454 = *v455;
      v456 = (void *)(((unint64_t)v454 + 15) & 0xFFFFFFFFFFFFFFF8);
      v457 = (void *)(((unint64_t)v455 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v456 = *v457;
      v458 = (void *)(((unint64_t)v456 + 15) & 0xFFFFFFFFFFFFFFF8);
      v459 = (void *)(((unint64_t)v457 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v458 = *v459;
      v460 = (void *)(((unint64_t)v458 + 15) & 0xFFFFFFFFFFFFFFF8);
      v461 = (void *)(((unint64_t)v459 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v460 = *v461;
      *(void *)(((unint64_t)v460 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v461 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v462 = 11;
LABEL_331:
      *(unsigned char *)(v141 + v149) = v462;
      goto LABEL_332;
    default:
      *(void *)unint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *(void *)(((v601 + v597 + v139) & v603) + 8);
      unint64_t v190 = (v539 + v141) & v540;
      unint64_t v191 = (v539 + v142) & v540;
      uint64_t v192 = *(void (**)(unint64_t, unint64_t, uint64_t))(v543 + 16);
      swift_bridgeObjectRetain();
      v192(v190, v191, v542);
      uint64_t v193 = (void *)((v541 + v190) & 0xFFFFFFFFFFFFFFF8);
      long long v194 = (void *)((v541 + v191) & 0xFFFFFFFFFFFFFFF8);
      void *v193 = *v194;
      v193[1] = v194[1];
      long long v195 = (void *)(((unint64_t)v193 + 23) & 0xFFFFFFFFFFFFFFF8);
      long long v196 = (void *)(((unint64_t)v194 + 23) & 0xFFFFFFFFFFFFFFF8);
      *long long v195 = *v196;
      v195[1] = v196[1];
      uint64_t v197 = (void *)(((unint64_t)v195 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v198 = (void *)(((unint64_t)v196 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v197 = *v198;
      v197[1] = v198[1];
      long long v199 = (void *)(((unint64_t)v197 + 23) & 0xFFFFFFFFFFFFFFF8);
      long long v200 = (void *)(((unint64_t)v198 + 23) & 0xFFFFFFFFFFFFFFF8);
      *long long v199 = *v200;
      v199[1] = v200[1];
      v631 = (void *)(((unint64_t)v199 + v544) & v545);
      v201 = (const void *)(((unint64_t)v200 + v544) & v545);
      v635 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v547 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v635(v201, 1, v549))
      {
        memcpy(v631, v201, v140);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v547 + 16))(v631, v201, v549);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v547 + 56))(v631, 0, 1, v549);
      }
      v438 = (void *)(((unint64_t)v631 + v143) & 0xFFFFFFFFFFFFFFF8);
      v439 = (void *)(((unint64_t)v201 + v143) & 0xFFFFFFFFFFFFFFF8);
      void *v438 = *v439;
      v440 = (void *)(((unint64_t)v438 + 15) & 0xFFFFFFFFFFFFFFF8);
      v441 = (void *)(((unint64_t)v439 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v440 = *v441;
      v442 = (void *)(((unint64_t)v440 + 15) & 0xFFFFFFFFFFFFFFF8);
      v443 = (void *)(((unint64_t)v441 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v442 = *v443;
      v444 = (void *)(((unint64_t)v442 + 15) & 0xFFFFFFFFFFFFFFF8);
      v445 = (void *)(((unint64_t)v443 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v444 = *v445;
      v446 = (void *)(((unint64_t)v444 + 15) & 0xFFFFFFFFFFFFFFF8);
      v447 = (void *)(((unint64_t)v445 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v446 = *v447;
      v448 = (void *)(((unint64_t)v446 + 15) & 0xFFFFFFFFFFFFFFF8);
      v449 = (void *)(((unint64_t)v447 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v448 = *v449;
      *(void *)(((unint64_t)v448 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v449 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v141 + v149) = 0;
LABEL_332:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_333:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_334:
      swift_bridgeObjectRetain();
      goto LABEL_335;
  }
}

uint64_t sub_1C030EAFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C030EB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 | 7) + v6;
  uint64_t v318 = a1;
  uint64_t v319 = ~(v10 | 7);
  uint64_t v12 = (_OWORD *)((v11 + a1) & v319);
  uint64_t v311 = v11;
  uint64_t v314 = a2;
  uint64_t v316 = v10 | 7;
  uint64_t v13 = (_OWORD *)((v11 + a2) & v319);
  *uint64_t v12 = *v13;
  uint64_t v320 = ~v10;
  uint64_t v14 = ((unint64_t)v12 + v10 + 16) & ~v10;
  uint64_t v15 = ((unint64_t)v13 + v10 + 16) & ~v10;
  size_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v16(v14, v15, v7);
  size_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = (v17 + v10 + v14) & ~v10;
  v16(v18, (v17 + v10 + v15) & ~v10, v7);
  uint64_t v19 = (void *)((v17 + v10 + v18) & ~v10);
  uint64_t v20 = (const void *)((v17 + v10 + ((v17 + v10 + v15) & ~v10)) & ~v10);
  long long v301 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v303 = v7;
  long long v289 = (void (*)(unint64_t, unint64_t, uint64_t))v16;
  if (v301(v20, 1, v7))
  {
    unsigned int v21 = *(_DWORD *)(v9 + 84);
    if (v21) {
      size_t v22 = v17;
    }
    else {
      size_t v22 = v17 + 1;
    }
    memcpy(v19, v20, v22);
  }
  else
  {
    v16((uint64_t)v19, (uint64_t)v20, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v7);
    unsigned int v21 = *(_DWORD *)(v9 + 84);
  }
  if (v21) {
    size_t v23 = v17;
  }
  else {
    size_t v23 = v17 + 1;
  }
  size_t v24 = (void *)(((unint64_t)v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((unint64_t)v20 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  *size_t v24 = *v25;
  size_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *size_t v26 = *v27;
  uint64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  *(void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v30 = v17;
  unint64_t v308 = (((((((v23 + ((v17 + v10 + ((((v10 + 16) | v10) + v17) & v320)) & v320) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = sub_1C151631C();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v277 = v32;
  uint64_t v278 = v31;
  unsigned int v33 = v21;
  uint64_t v34 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v280 = sub_1C151D6DC();
  uint64_t v304 = *(void *)(v280 - 8);
  uint64_t v35 = *(unsigned __int8 *)(v304 + 80);
  uint64_t v36 = v35 | v34;
  uint64_t v37 = sub_1C1518CDC();
  unsigned int v38 = v33;
  uint64_t v273 = v37;
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = v40 | 7;
  uint64_t v42 = v35 | v34 | v10 | v40 | 7;
  uint64_t v43 = (v311 & v319) + v42 + v308 + 8;
  uint64_t v309 = (_OWORD *)((v43 + v318) & ~v42);
  uint64_t v44 = (_OWORD *)((v43 + v314) & ~v42);
  if (v33 <= 0x7FFFFFFF) {
    unsigned int v45 = 0x7FFFFFFF;
  }
  else {
    unsigned int v45 = v33;
  }
  if (v45 - 1 >= v45) {
    --v45;
  }
  uint64_t v288 = v34;
  uint64_t v274 = v34 + 16;
  uint64_t v275 = *(void *)(v32 + 64) + 7;
  uint64_t v315 = v35;
  uint64_t v276 = v35 + 16;
  unint64_t v46 = v35
      + 16
      + ((((((((v275 + ((v34 + 16) & ~v34)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v279 = v304;
  int v47 = *(_DWORD *)(v304 + 84);
  size_t v48 = *(void *)(v304 + 64);
  uint64_t v49 = v40 + 176;
  uint64_t v50 = v40 + 16;
  uint64_t v51 = v40 + 48;
  uint64_t v281 = *(void *)(v37 - 8);
  int v52 = *(_DWORD *)(v39 + 84);
  size_t v53 = *(void *)(v281 + 64);
  unint64_t v54 = v36 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v272 = v35 | v34;
  uint64_t v55 = v36 + 48;
  uint64_t v56 = v10 + 48;
  uint64_t v57 = v10;
  size_t v58 = v30 + ((v10 + 128) & v320);
  size_t v312 = v30;
  size_t v286 = v30 + 7;
  unint64_t v59 = (v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v287 = v38;
  if ((v45 & 0x80000000) != 0)
  {
    size_t v62 = (v58 + v316 + (((unint64_t)v44 + v56) & v319)) & v319;
    uint64_t v295 = v42;
    uint64_t v298 = v40 | 7;
    uint64_t v63 = v40;
    size_t v64 = *(void *)(v281 + 64);
    uint64_t v305 = v40 + 16;
    unint64_t v282 = v36 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
    uint64_t v284 = v40 + 48;
    size_t v267 = v58;
    int v292 = v47;
    size_t v290 = v48;
    int v65 = v52;
    uint64_t v66 = v40 + 176;
    unint64_t v67 = v46;
    int v61 = ((uint64_t (*)(size_t))v301)(v62);
    unint64_t v46 = v67;
    uint64_t v49 = v66;
    uint64_t v42 = v295;
    uint64_t v41 = v298;
    int v52 = v65;
    size_t v48 = v290;
    int v47 = v292;
    unint64_t v54 = v282;
    uint64_t v51 = v284;
    size_t v58 = v267;
    uint64_t v50 = v305;
    size_t v53 = v64;
    uint64_t v40 = v63;
  }
  else
  {
    unint64_t v60 = *((void *)v44 + 1);
    if (v60 >= 0xFFFFFFFF) {
      LODWORD(v60) = -1;
    }
    int v61 = v60 + 1;
  }
  unint64_t v68 = v55 & v54;
  unint64_t v69 = v59 + 8;
  uint64_t v70 = v57;
  if (v61)
  {
    if (v47) {
      size_t v71 = v48;
    }
    else {
      size_t v71 = v48 + 1;
    }
    unint64_t v72 = ((((((((((((((v71 + (v46 & ~v315) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    if (v52) {
      size_t v73 = v53;
    }
    else {
      size_t v73 = v53 + 1;
    }
    unint64_t v74 = ((v312
          + v40
          + ((v57
            + (v49 & ~v41)
            + ((v73 + (((v50 & ~v41) + v40 + (v51 & ~v40) + v73) & ~v40) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8) & v320)) & ~v40)
        + v73;
    if (v72 > v74) {
      unint64_t v74 = v72;
    }
    unint64_t v75 = v72 + v68;
    if (v74 > v75) {
      unint64_t v75 = v74;
    }
    if (v75 <= 0x90) {
      unint64_t v75 = 144;
    }
    memcpy(v309, v44, ((((v58 + v316 + (v56 & v319)) & v319) + v69 + v42) & ~v42)+ (((v75 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ 8);
  }
  else
  {
    unint64_t v261 = v69;
    uint64_t v262 = ~v42;
    unint64_t v263 = v46 & ~v315;
    size_t v291 = v48;
    int v293 = v47;
    uint64_t v264 = v50 & ~v41;
    uint64_t v265 = v49 & ~v41;
    unint64_t v266 = v68;
    uint64_t v296 = v42;
    uint64_t v306 = v50;
    unint64_t v283 = v54;
    uint64_t v285 = v51;
    long long v76 = *v44;
    *(_OWORD *)((char *)v309 + 9) = *(_OWORD *)((char *)v44 + 9);
    *uint64_t v309 = v76;
    v309[2] = v44[2];
    uint64_t v77 = v319;
    unint64_t v78 = (_OWORD *)(((unint64_t)v309 + v56) & v319);
    size_t v79 = (long long *)(((unint64_t)v44 + v56) & v319);
    uint64_t v310 = ~v40;
    uint64_t v268 = v51 & ~v40;
    if ((v287 & 0x80000000) != 0)
    {
      uint64_t v80 = v70;
      uint64_t v83 = v320;
      unint64_t v85 = (v70 + (((unint64_t)v79 + 71) & 0xFFFFFFFFFFFFFFF8) + 64) & v320;
      uint64_t v86 = v41;
      uint64_t v84 = v303;
      size_t v87 = v58;
      uint64_t v88 = v40;
      size_t v89 = v53;
      int v90 = v52;
      int v82 = ((uint64_t (*)(unint64_t))v301)(v85);
      uint64_t v41 = v86;
      int v52 = v90;
      size_t v53 = v89;
      uint64_t v77 = v319;
      uint64_t v40 = v88;
      size_t v58 = v87;
    }
    else
    {
      uint64_t v80 = v70;
      unint64_t v81 = *(void *)((((unint64_t)v44 + v56) & v319) + 0x38);
      if (v81 >= 0xFFFFFFFF) {
        LODWORD(v81) = -1;
      }
      int v82 = v81 + 1;
      uint64_t v83 = v320;
      uint64_t v84 = v303;
    }
    uint64_t v299 = v41;
    int v269 = v52;
    size_t v270 = v53;
    uint64_t v271 = v40;
    if (v82)
    {
      memcpy(v78, v79, v58);
      uint64_t v91 = v80;
    }
    else
    {
      long long v92 = *v79;
      *((unsigned char *)v78 + 16) = *((unsigned char *)v79 + 16);
      *unint64_t v78 = v92;
      long long v93 = *(long long *)((char *)v79 + 24);
      *((unsigned char *)v78 + 40) = *((unsigned char *)v79 + 40);
      *(_OWORD *)((char *)v78 + 24) = v93;
      v78[3] = v79[3];
      unsigned int v94 = (_OWORD *)(((unint64_t)v78 + 71) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v95 = (long long *)(((unint64_t)v79 + 71) & 0xFFFFFFFFFFFFFFF8);
      long long v96 = *v95;
      long long v97 = v95[1];
      long long v98 = v95[3];
      v94[2] = v95[2];
      v94[3] = v98;
      *unsigned int v94 = v96;
      v94[1] = v97;
      uint64_t v91 = v80;
      v289(((unint64_t)v94 + v80 + 64) & v83, ((unint64_t)v95 + v80 + 64) & v83, v84);
    }
    unint64_t v99 = ((unint64_t)v78 + v58 + v316) & v77;
    unint64_t v100 = ((unint64_t)v79 + v58 + v316) & v77;
    v289(v99, v100, v84);
    if (v293) {
      size_t v101 = v291;
    }
    else {
      size_t v101 = v291 + 1;
    }
    *(void *)((v286 + v99) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v286 + v100) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v102 = (v296 + v261 + v99) & v262;
    unint64_t v103 = (v296 + v261 + v100) & v262;
    unint64_t v104 = ((((((((((((((v101 + 7 + v263) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8;
    if (v269) {
      size_t v105 = v270;
    }
    else {
      size_t v105 = v270 + 1;
    }
    unint64_t v106 = ((v312
           + v271
           + ((v91 + v265 + ((v105 + 7 + ((v264 + v271 + v105 + v268) & v310)) & 0xFFFFFFFFFFFFFFF8) + 8) & v83)) & v310)
         + v105;
    if (v104 > v106) {
      unint64_t v106 = ((((((((((((((v101 + 7 + v263) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
    }
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 8;
    unint64_t v107 = v104 + v266;
    if (v106 > v107) {
      unint64_t v107 = v106;
    }
    if (v107 <= 0x90) {
      uint64_t v108 = 144;
    }
    else {
      uint64_t v108 = v107;
    }
    unsigned int v109 = *(unsigned __int8 *)(v103 + v108);
    if (v109 < 0xC)
    {
      uint64_t v111 = v299;
    }
    else
    {
      if (v108 <= 3) {
        uint64_t v110 = v108;
      }
      else {
        uint64_t v110 = 4;
      }
      uint64_t v111 = v299;
      switch(v110)
      {
        case 1:
          int v112 = *(unsigned __int8 *)v103;
          if (v108 < 4) {
            goto LABEL_66;
          }
          goto LABEL_68;
        case 2:
          int v112 = *(unsigned __int16 *)v103;
          if (v108 >= 4) {
            goto LABEL_68;
          }
          goto LABEL_66;
        case 3:
          int v112 = *(unsigned __int16 *)v103 | (*(unsigned __int8 *)(v103 + 2) << 16);
          if (v108 < 4) {
            goto LABEL_66;
          }
          goto LABEL_68;
        case 4:
          int v112 = *(_DWORD *)v103;
          if (v108 < 4) {
LABEL_66:
          }
            unsigned int v109 = (v112 | ((v109 - 12) << (8 * v108))) + 12;
          else {
LABEL_68:
          }
            unsigned int v109 = v112 + 12;
          break;
        default:
          break;
      }
    }
    uint64_t v113 = ~v288;
    uint64_t v114 = ~v315;
    uint64_t v115 = ~v111;
    switch(v109)
    {
      case 1u:
        long long v129 = *(_OWORD *)v103;
        long long v130 = *(_OWORD *)(v103 + 32);
        *(_OWORD *)(v102 + 16) = *(_OWORD *)(v103 + 16);
        *(_OWORD *)(v102 + 32) = v130;
        *(_OWORD *)unint64_t v102 = v129;
        long long v131 = *(_OWORD *)(v103 + 48);
        long long v132 = *(_OWORD *)(v103 + 64);
        long long v133 = *(_OWORD *)(v103 + 80);
        *(_OWORD *)(v102 + 91) = *(_OWORD *)(v103 + 91);
        *(_OWORD *)(v102 + 64) = v132;
        *(_OWORD *)(v102 + 80) = v133;
        *(_OWORD *)(v102 + 48) = v131;
        char v134 = 1;
        break;
      case 2u:
        *(_OWORD *)unint64_t v102 = *(_OWORD *)v103;
        long long v135 = *(_OWORD *)(v103 + 16);
        long long v136 = *(_OWORD *)(v103 + 32);
        long long v137 = *(_OWORD *)(v103 + 64);
        *(_OWORD *)(v102 + 48) = *(_OWORD *)(v103 + 48);
        *(_OWORD *)(v102 + 64) = v137;
        *(_OWORD *)(v102 + 16) = v135;
        *(_OWORD *)(v102 + 32) = v136;
        long long v138 = *(_OWORD *)(v103 + 80);
        long long v139 = *(_OWORD *)(v103 + 96);
        long long v140 = *(_OWORD *)(v103 + 128);
        *(_OWORD *)(v102 + 112) = *(_OWORD *)(v103 + 112);
        *(_OWORD *)(v102 + 128) = v140;
        *(_OWORD *)(v102 + 80) = v138;
        *(_OWORD *)(v102 + 96) = v139;
        char v134 = 2;
        break;
      case 3u:
        long long v141 = *(_OWORD *)v103;
        long long v142 = *(_OWORD *)(v103 + 16);
        long long v143 = *(_OWORD *)(v103 + 48);
        *(_OWORD *)(v102 + 32) = *(_OWORD *)(v103 + 32);
        *(_OWORD *)(v102 + 48) = v143;
        *(_OWORD *)unint64_t v102 = v141;
        *(_OWORD *)(v102 + 16) = v142;
        long long v144 = *(_OWORD *)(v103 + 64);
        long long v145 = *(_OWORD *)(v103 + 80);
        long long v146 = *(_OWORD *)(v103 + 96);
        *(_OWORD *)(v102 + 105) = *(_OWORD *)(v103 + 105);
        *(_OWORD *)(v102 + 80) = v145;
        *(_OWORD *)(v102 + 96) = v146;
        *(_OWORD *)(v102 + 64) = v144;
        char v134 = 3;
        break;
      case 4u:
        long long v147 = *(_OWORD *)v103;
        long long v148 = *(_OWORD *)(v103 + 16);
        long long v149 = *(_OWORD *)(v103 + 32);
        *(void *)(v102 + 48) = *(void *)(v103 + 48);
        *(_OWORD *)(v102 + 16) = v148;
        *(_OWORD *)(v102 + 32) = v149;
        *(_OWORD *)unint64_t v102 = v147;
        char v134 = 4;
        break;
      case 5u:
        size_t v297 = v105 + v268;
        uint64_t v300 = v91;
        uint64_t v302 = v312 + v271;
        *(_OWORD *)unint64_t v102 = *(_OWORD *)v103;
        unsigned int v150 = (_OWORD *)((v102 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v151 = (_OWORD *)((v103 + 23) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v150 = *v151;
        unint64_t v152 = ((unint64_t)v150 + 23) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v153 = ((unint64_t)v151 + 23) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v152 = *(_OWORD *)v153;
        *(unsigned char *)(v152 + 16) = *(unsigned char *)(v153 + 16);
        *(unsigned char *)(v152 + 17) = *(unsigned char *)(v153 + 17);
        uint64_t v154 = (void *)((v152 + 25) & 0xFFFFFFFFFFFFFFF8);
        unsigned __int8 v155 = (void *)((v153 + 25) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v154 = *v155;
        uint64_t v156 = (void *)(((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v157 = (void *)(((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v156 = *v157;
        unsigned int v158 = (void *)(((unint64_t)v156 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v159 = (void *)(((unint64_t)v157 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v158 = *v159;
        unint64_t v160 = (void *)(((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v161 = (void *)(((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v160 = *v161;
        uint64_t v162 = (void *)(((unint64_t)v160 + 15) & 0xFFFFFFFFFFFFFFF8);
        unsigned __int8 v163 = (void *)(((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v162 = *v163;
        uint64_t v164 = (void *)(((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v165 = (void *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v164 = *v165;
        unsigned __int8 v166 = (void *)(((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v167 = (void *)(((unint64_t)v165 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v166 = *v167;
        uint64_t v168 = (void *)(((unint64_t)v166 + 15) & 0xFFFFFFFFFFFFFFF8);
        unsigned __int8 v169 = (void *)(((unint64_t)v167 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v168 = *v169;
        unsigned __int8 v170 = (void *)(((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8);
        int32x2_t v171 = (void *)(((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unsigned __int8 v170 = *v171;
        unint64_t v172 = (void *)(((unint64_t)v170 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint32x2_t v173 = (void *)(((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v172 = *v173;
        uint64_t v174 = (void *)(((unint64_t)v172 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v175 = (void *)(((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v174 = *v175;
        uint64_t v176 = (void *)(((unint64_t)v174 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v177 = (void *)(((unint64_t)v175 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v176 = *v177;
        unsigned __int8 v178 = (void *)(((unint64_t)v176 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v179 = (void *)(((unint64_t)v177 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unsigned __int8 v178 = *v179;
        size_t v180 = (_OWORD *)(((unint64_t)v178 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v181 = (_OWORD *)(((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8);
        *size_t v180 = *v181;
        long long v294 = (void *)(((unint64_t)v181 + v306) & v115);
        uint64_t v307 = (void *)(((unint64_t)v180 + v306) & v115);
        *uint64_t v307 = *v294;
        unint64_t v182 = (void *)(((unint64_t)v307 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v183 = (void *)(((unint64_t)v294 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v182 = *v183;
        uint64_t v184 = (_OWORD *)(((unint64_t)v182 + v271 + 8) & v115);
        uint64_t v185 = (long long *)(((unint64_t)v183 + v271 + 8) & v115);
        long long v186 = *v185;
        long long v187 = v185[2];
        v184[1] = v185[1];
        v184[2] = v187;
        *uint64_t v184 = v186;
        unint64_t v188 = (void *)(((unint64_t)v184 + v285) & v310);
        unint64_t v189 = (const void *)(((unint64_t)v185 + v285) & v310);
        size_t v317 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v281 + 48);
        uint64_t v313 = v108;
        if (v317(v189, 1, v273))
        {
          memcpy(v188, v189, v105);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v281 + 32))(v188, v189, v273);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v281 + 56))(v188, 0, 1, v273);
        }
        uint64_t v234 = (void *)(((unint64_t)v184 + v297 + v271) & v310);
        uint64_t v235 = (const void *)(((unint64_t)v185 + v297 + v271) & v310);
        if (v317(v235, 1, v273))
        {
          memcpy(v234, v235, v105);
          uint64_t v236 = v320;
          uint64_t v237 = v303;
          unint64_t v238 = v289;
          uint64_t v239 = v281;
        }
        else
        {
          uint64_t v239 = v281;
          (*(void (**)(void *, const void *, uint64_t))(v281 + 32))(v234, v235, v273);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v281 + 56))(v234, 0, 1, v273);
          uint64_t v236 = v320;
          uint64_t v237 = v303;
          unint64_t v238 = v289;
        }
        uint64_t v252 = 7;
        if (!v269) {
          uint64_t v252 = 8;
        }
        *(void *)(((unint64_t)v234 + v270 + v252) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v235
                                                                                                + v270
                                                                                                + v252) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v253 = ((v105 + 7 + ((v264 + v271 + v268 + v105) & v310)) & 0xFFFFFFFFFFFFFFF8) + 8;
        unint64_t v254 = ((unint64_t)v307 + v300 + v253) & v236;
        unint64_t v255 = ((unint64_t)v294 + v300 + v253) & v236;
        v238(v254, v255, v237);
        size_t v256 = (void *)((v302 + v254) & v310);
        long long v257 = (const void *)((v302 + v255) & v310);
        if (v317(v257, 1, v273))
        {
          memcpy(v256, v257, v105);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v239 + 32))(v256, v257, v273);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v239 + 56))(v256, 0, 1, v273);
        }
        char v134 = 5;
        uint64_t v108 = v313;
        break;
      case 6u:
        long long v190 = *(_OWORD *)v103;
        *(void *)(v102 + 16) = *(void *)(v103 + 16);
        *(_OWORD *)unint64_t v102 = v190;
        char v134 = 6;
        break;
      case 7u:
        *(void *)unint64_t v102 = *(void *)v103;
        char v134 = 7;
        break;
      case 8u:
        *(_OWORD *)unint64_t v102 = *(_OWORD *)v103;
        long long v191 = *(_OWORD *)(v103 + 16);
        long long v192 = *(_OWORD *)(v103 + 32);
        long long v193 = *(_OWORD *)(v103 + 48);
        *(void *)(v102 + 64) = *(void *)(v103 + 64);
        *(_OWORD *)(v102 + 32) = v192;
        *(_OWORD *)(v102 + 48) = v193;
        *(_OWORD *)(v102 + 16) = v191;
        char v134 = 8;
        break;
      case 9u:
        long long v194 = *(_OWORD *)v103;
        long long v195 = *(_OWORD *)(v103 + 32);
        *(_OWORD *)(v102 + 16) = *(_OWORD *)(v103 + 16);
        *(_OWORD *)(v102 + 32) = v195;
        *(_OWORD *)unint64_t v102 = v194;
        long long v196 = *(_OWORD *)(v103 + 48);
        long long v197 = *(_OWORD *)(v103 + 64);
        long long v198 = *(_OWORD *)(v103 + 80);
        *(_OWORD *)(v102 + 89) = *(_OWORD *)(v103 + 89);
        *(_OWORD *)(v102 + 64) = v197;
        *(_OWORD *)(v102 + 80) = v198;
        *(_OWORD *)(v102 + 48) = v196;
        char v134 = 9;
        break;
      case 0xAu:
        long long v199 = *(_OWORD *)(v103 + 16);
        *(_OWORD *)unint64_t v102 = *(_OWORD *)v103;
        *(_OWORD *)(v102 + 16) = v199;
        long long v200 = *(_OWORD *)(v103 + 32);
        long long v201 = *(_OWORD *)(v103 + 48);
        long long v202 = *(_OWORD *)(v103 + 64);
        *(unsigned char *)(v102 + 80) = *(unsigned char *)(v103 + 80);
        *(_OWORD *)(v102 + 48) = v201;
        *(_OWORD *)(v102 + 64) = v202;
        *(_OWORD *)(v102 + 32) = v200;
        char v134 = 10;
        break;
      case 0xBu:
        size_t v203 = v101 + 7;
        *(_OWORD *)unint64_t v102 = *(_OWORD *)v103;
        unint64_t v204 = (_OWORD *)((v102 + 23) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v205 = (_OWORD *)((v103 + 23) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v204 = *v205;
        unsigned int v206 = (_OWORD *)(((unint64_t)v204 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v207 = (_OWORD *)(((unint64_t)v205 + 23) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v206 = *v207;
        long long v208 = (_OWORD *)(((unint64_t)v206 + v272 + 16) & v283);
        long long v209 = (_OWORD *)(((unint64_t)v207 + v272 + 16) & v283);
        *long long v208 = *v209;
        unint64_t v210 = ((unint64_t)v208 + v274) & v113;
        unint64_t v211 = ((unint64_t)v209 + v274) & v113;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v277 + 32))(v210, v211, v278);
        uint64_t v212 = (_OWORD *)((v275 + v210) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v213 = (_OWORD *)((v275 + v211) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v212 = *v213;
        uint64_t v214 = (_OWORD *)(((unint64_t)v212 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v215 = (_OWORD *)(((unint64_t)v213 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v214 = *v215;
        uint64_t v216 = (_OWORD *)(((unint64_t)v214 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v217 = (_OWORD *)(((unint64_t)v215 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v216 = *v217;
        uint64_t v218 = (_OWORD *)(((unint64_t)v216 + 23) & 0xFFFFFFFFFFFFFFF8);
        unsigned __int8 v219 = (_OWORD *)(((unint64_t)v217 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v218 = *v219;
        int v220 = (void *)(((unint64_t)v218 + v276) & v114);
        uint64_t v221 = (const void *)(((unint64_t)v219 + v276) & v114);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v279 + 48))(v221, 1, v280))
        {
          memcpy(v220, v221, v101);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v279 + 32))(v220, v221, v280);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v279 + 56))(v220, 0, 1, v280);
        }
        uint64_t v240 = (void *)(((unint64_t)v220 + v203) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v241 = (void *)(((unint64_t)v221 + v203) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v240 = *v241;
        uint64_t v242 = (void *)(((unint64_t)v240 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v243 = (void *)(((unint64_t)v241 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v242 = *v243;
        uint64_t v244 = (void *)(((unint64_t)v242 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v245 = (void *)(((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v244 = *v245;
        uint64_t v246 = (void *)(((unint64_t)v244 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v247 = (void *)(((unint64_t)v245 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v246 = *v247;
        uint64_t v248 = (void *)(((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v249 = (void *)(((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v248 = *v249;
        size_t v250 = (void *)(((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v251 = (void *)(((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8);
        *size_t v250 = *v251;
        *(void *)(((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v251 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v134 = 11;
        break;
      default:
        size_t v116 = v101 + 7;
        *(_OWORD *)unint64_t v102 = *(_OWORD *)v103;
        unint64_t v117 = (v274 + v102) & v113;
        unint64_t v118 = (v274 + v103) & v113;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v277 + 32))(v117, v118, v278);
        unsigned int v119 = (_OWORD *)((v275 + v117) & 0xFFFFFFFFFFFFFFF8);
        unsigned int v120 = (_OWORD *)((v275 + v118) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v119 = *v120;
        uint64_t v121 = (_OWORD *)(((unint64_t)v119 + 23) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v122 = (_OWORD *)(((unint64_t)v120 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v121 = *v122;
        long long v123 = (_OWORD *)(((unint64_t)v121 + 23) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v124 = (_OWORD *)(((unint64_t)v122 + 23) & 0xFFFFFFFFFFFFFFF8);
        *long long v123 = *v124;
        unint64_t v125 = (_OWORD *)(((unint64_t)v123 + 23) & 0xFFFFFFFFFFFFFFF8);
        unsigned int v126 = (_OWORD *)(((unint64_t)v124 + 23) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v125 = *v126;
        uint64_t v127 = (void *)(((unint64_t)v125 + v276) & v114);
        long long v128 = (const void *)(((unint64_t)v126 + v276) & v114);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v279 + 48))(v128, 1, v280))
        {
          memcpy(v127, v128, v101);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v279 + 32))(v127, v128, v280);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v279 + 56))(v127, 0, 1, v280);
        }
        char v134 = 0;
        unint64_t v222 = (void *)(((unint64_t)v127 + v116) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v223 = (void *)(((unint64_t)v128 + v116) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v222 = *v223;
        unint64_t v224 = (void *)(((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8);
        int v225 = (void *)(((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v224 = *v225;
        unint64_t v226 = (void *)(((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v227 = (void *)(((unint64_t)v225 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v226 = *v227;
        char v228 = (void *)(((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v229 = (void *)(((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8);
        *char v228 = *v229;
        uint64_t v230 = (void *)(((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8);
        size_t v231 = (void *)(((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v230 = *v231;
        unint64_t v232 = (void *)(((unint64_t)v230 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v233 = (void *)(((unint64_t)v231 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v232 = *v233;
        *(void *)(((unint64_t)v232 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8);
        break;
    }
    *(unsigned char *)(v102 + v108) = v134;
    uint64_t v258 = (_OWORD *)(((v102 | 7) + v108 + 1) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v259 = (_OWORD *)(((v103 | 7) + v108 + 1) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v258 = *v259;
    *(void *)(((unint64_t)v258 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v259 + 23) & 0xFFFFFFFFFFFFFFF8);
  }
  return v318;
}

uint64_t sub_1C030FECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 | 7) + v6;
  uint64_t v583 = a1;
  uint64_t v584 = ~(v10 | 7);
  uint64_t v12 = (void *)((v11 + a1) & v584);
  uint64_t v572 = v11;
  uint64_t v575 = a2;
  uint64_t v577 = v10 | 7;
  uint64_t v13 = (void *)((v11 + a2) & v584);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRelease();
  uint64_t v586 = ~v10;
  uint64_t v567 = v10 + 16;
  uint64_t v14 = ((unint64_t)v13 + v10 + 16) & ~v10;
  uint64_t v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 40);
  v15(((unint64_t)v12 + v10 + 16) & ~v10, v14, v7);
  size_t v16 = *(void *)(v8 + 64);
  size_t v17 = v16 + v10;
  uint64_t v529 = (void (*)(unint64_t, unint64_t, uint64_t))v15;
  v15((v16 + v10 + (((unint64_t)v12 + v10 + 16) & ~v10)) & ~v10, (v16 + v10 + v14) & ~v10, v7);
  uint64_t v18 = (void *)((v16 + v10 + ((v16 + v10 + (((unint64_t)v12 + v10 + 16) & ~v10)) & ~v10)) & ~v10);
  uint64_t v581 = v10;
  uint64_t v19 = (void *)((v16 + v10 + ((v16 + v10 + v14) & ~v10)) & ~v10);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v14) = v20(v18, 1, v7);
  unint64_t v532 = v20;
  int v21 = v20(v19, 1, v7);
  uint64_t v563 = v7;
  if (v14)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v18, v19, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0, 1, v7);
      goto LABEL_12;
    }
    int v22 = *(_DWORD *)(v9 + 84);
  }
  else
  {
    if (!v21)
    {
      v15((unint64_t)v18, (uint64_t)v19, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v18, v7);
    int v22 = *(_DWORD *)(v9 + 84);
  }
  if (v22) {
    size_t v23 = v16;
  }
  else {
    size_t v23 = v16 + 1;
  }
  memcpy(v18, v19, v23);
LABEL_12:
  uint64_t v531 = v9;
  unsigned int v554 = *(_DWORD *)(v9 + 84);
  if (v554) {
    size_t v24 = v16;
  }
  else {
    size_t v24 = v16 + 1;
  }
  uint64_t v25 = (void *)(((unint64_t)v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v26 = (void *)(((unint64_t)v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = *v26;
  swift_bridgeObjectRelease();
  size_t v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v27 = *v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v29 = *v30;
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  uint64_t v31 = v581;
  unint64_t v568 = (((((((v24 + ((v17 + (((v567 | v581) + v16) & v586)) & v586) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = sub_1C151631C();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v521 = v32;
  uint64_t v522 = v33;
  uint64_t v34 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v525 = sub_1C151D6DC();
  uint64_t v35 = *(void *)(v525 - 8);
  uint64_t v36 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v37 = v36 | v34;
  uint64_t v38 = sub_1C1518CDC();
  uint64_t v517 = v38;
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = v40 | 7;
  uint64_t v42 = v36 | v34 | v581 | v40 | 7;
  uint64_t v43 = (v572 & v584) + v42 + v568 + 8;
  uint64_t v569 = v42;
  uint64_t v573 = ~v42;
  uint64_t v44 = (_OWORD *)((v43 + v583) & ~v42);
  unsigned int v45 = (void *)((v43 + v575) & ~v42);
  if (v554 <= 0x7FFFFFFF) {
    unsigned int v46 = 0x7FFFFFFF;
  }
  else {
    unsigned int v46 = v554;
  }
  if (v46 - 1 >= v46) {
    --v46;
  }
  uint64_t v519 = ~v34;
  uint64_t v518 = v34 + 16;
  uint64_t v520 = *(void *)(v33 + 64) + 7;
  uint64_t v524 = ~v36;
  uint64_t v523 = v36 + 16;
  unint64_t v557 = (v36
        + 16
        + ((((((((v520 + ((v34 + 16) & ~v34)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v36;
  uint64_t v47 = v586;
  uint64_t v526 = v35;
  int v538 = *(_DWORD *)(v35 + 84);
  size_t v48 = *(void *)(v35 + 64);
  uint64_t v515 = ~v41;
  uint64_t v514 = v40 + 16;
  uint64_t v562 = ~v40;
  uint64_t v559 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v516 = v40 + 48;
  uint64_t v561 = (v40 + 48) & ~v40;
  uint64_t v527 = *(void *)(v38 - 8);
  int v49 = *(_DWORD *)(v39 + 84);
  size_t v560 = *(void *)(v527 + 64);
  uint64_t v513 = v36 | v34;
  unint64_t v512 = v37 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = (v37 + 48) & v512;
  uint64_t v51 = v581 + 48;
  size_t v52 = v16 + ((v581 + 128) & v586);
  size_t v550 = v16;
  unint64_t v564 = ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v53 = (v581 + 48) & v584;
  int v576 = v49;
  uint64_t v542 = (v40 + 16) & ~v41;
  uint64_t v545 = (v40 + 176) & ~v41;
  size_t v533 = v16 + 7;
  size_t __n = v52;
  if ((v46 & 0x80000000) != 0)
  {
    size_t v63 = v52 + v577;
    size_t v64 = v45;
    int v65 = v44;
    int v510 = v532((void *)((v52 + v577 + (((unint64_t)v44 + v51) & v584)) & v584), v554, v563);
    size_t v66 = v63 + (((unint64_t)v64 + v51) & v584);
    uint64_t v55 = v584;
    uint64_t v54 = v554;
    uint64_t v31 = v581;
    int v57 = v532((void *)(v66 & v584), v554, v563);
    uint64_t v47 = v586;
    uint64_t v44 = v65;
    uint64_t v53 = (v581 + 48) & v584;
    unsigned int v45 = v64;
    uint64_t v50 = (v37 + 48) & v512;
    if (!v510) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v54 = v554;
    uint64_t v55 = v584;
    unint64_t v56 = v45[1];
    if (v56 >= 0xFFFFFFFF) {
      LODWORD(v56) = -1;
    }
    int v57 = v56 + 1;
    if (*((void *)v44 + 1) > 0xFFFFFFFEuLL)
    {
LABEL_24:
      size_t v511 = v48;
      if (v57)
      {
        __src = v45;
        uint64_t v582 = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v58 = ((unint64_t)v582 + v51) & v55;
        if ((v54 & 0x80000000) != 0)
        {
          uint64_t v61 = v563;
          int v60 = v532((void *)((v31 + ((v58 + 71) & 0xFFFFFFFFFFFFFFF8) + 64) & v586), v54, v563);
          uint64_t v62 = v562;
        }
        else
        {
          unint64_t v59 = *(void *)((((unint64_t)v582 + v51) & v55) + 0x38);
          if (v59 >= 0xFFFFFFFF) {
            LODWORD(v59) = -1;
          }
          int v60 = v59 + 1;
          uint64_t v62 = v562;
          uint64_t v61 = v563;
        }
        int v94 = v576;
        uint64_t v534 = v50;
        uint64_t v528 = v53;
        if (v60)
        {
          unint64_t v95 = *(void (**)(unint64_t, uint64_t))(v531 + 8);
          uint64_t v96 = v586;
        }
        else
        {
          sub_1C024F49C(*(void *)v58, *(void *)(v58 + 8), *(unsigned char *)(v58 + 16));
          unsigned int v97 = *(unsigned __int8 *)(v58 + 40);
          if ((((v97 >> 6) & 0xFFFFFF83 | (4 * ((v97 >> 1) & 0x1F))) ^ 0x7F) >= 0x7D) {
            sub_1C00F5AEC(*(void *)(v58 + 24), *(void *)(v58 + 32), v97);
          }
          swift_bridgeObjectRelease();
          unint64_t v98 = (v58 + 71) & 0xFFFFFFFFFFFFFFF8;
          if (*(unsigned __int16 *)(v98 + 44) >> 9 <= 0x7EuLL) {
            sub_1C017F5B0(*(void *)v98, *(void *)(v98 + 8), *(void *)(v98 + 16), *(void *)(v98 + 24), *(void *)(v98 + 32), *(unsigned int *)(v98 + 40) | ((unint64_t)*(unsigned __int16 *)(v98 + 44) << 32));
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v96 = v586;
          unint64_t v95 = *(void (**)(unint64_t, uint64_t))(v531 + 8);
          uint64_t v61 = v563;
          v95((v31 + v98 + 64) & v586, v563);
          int v94 = v576;
        }
        size_t v99 = __n + v577;
        unint64_t v578 = v95;
        v95((v99 + v58) & v584, v61);
        swift_bridgeObjectRelease();
        size_t v100 = v48;
        if (!v538) {
          size_t v100 = v48 + 1;
        }
        size_t v101 = (unsigned __int8 *)((v569 + v564 + ((v99 + v58) & v584)) & v573);
        unint64_t v102 = ((((((((((((((v100 + 7 + v557) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 8;
        if (v94) {
          size_t v103 = v560;
        }
        else {
          size_t v103 = v560 + 1;
        }
        uint64_t v104 = v31 + 8;
        unint64_t v105 = (v31 + 8 + v545 + ((v103 + 7 + ((v542 + v559 + v103 + v561) & v62)) & 0xFFFFFFFFFFFFFFF8)) & v96;
        uint64_t v106 = v550 + v559;
        unint64_t v107 = ((v550 + v559 + v105) & v62) + v103;
        if (v102 > v107) {
          unint64_t v107 = v102;
        }
        unint64_t v108 = v102 + v534;
        if (v107 > v108) {
          unint64_t v108 = v107;
        }
        if (v108 <= 0x90) {
          uint64_t v109 = 144;
        }
        else {
          uint64_t v109 = v108;
        }
        unsigned int v110 = v101[v109];
        unsigned int v111 = v110 - 12;
        if (v110 >= 0xC)
        {
          if (v109 <= 3) {
            uint64_t v112 = v109;
          }
          else {
            uint64_t v112 = 4;
          }
          switch(v112)
          {
            case 1:
              int v113 = *v101;
              if (v109 < 4) {
                goto LABEL_115;
              }
              goto LABEL_119;
            case 2:
              int v113 = *(unsigned __int16 *)v101;
              if (v109 < 4) {
                goto LABEL_115;
              }
              goto LABEL_119;
            case 3:
              int v113 = *(unsigned __int16 *)v101 | (v101[2] << 16);
              if (v109 < 4) {
                goto LABEL_115;
              }
              goto LABEL_119;
            case 4:
              int v113 = *(_DWORD *)v101;
              if (v109 < 4) {
LABEL_115:
              }
                unsigned int v110 = (v113 | (v111 << (8 * v109))) + 12;
              else {
LABEL_119:
              }
                unsigned int v110 = v113 + 12;
              break;
            default:
              break;
          }
        }
        switch(v110)
        {
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v167 = v528;
            if (v101[106] != 255)
            {
              uint64_t v168 = *((unsigned __int16 *)v101 + 52) | (v101[106] << 16);
              sub_1BFFA742C(*((void *)v101 + 12), v168, SBYTE2(v168), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
            }
            goto LABEL_154;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*((void *)v101 + 9) >= 3uLL) {
              swift_bridgeObjectRelease();
            }
            goto LABEL_151;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*((void *)v101 + 7) >= 0xFuLL) {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_152;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_152;
          case 5u:
            size_t v546 = v103 + 7;
            uint64_t v551 = v542 + v559;
            uint64_t v555 = v109;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v169 = (((((((((((((((((((((((((((((((unint64_t)(v101 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                            + 25) & 0xFFFFFFFFFFFFFFF8)
                                          + 15) & 0xFFFFFFFFFFFFFFF8)
                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                      + 15) & 0xFFFFFFFFFFFFFFF8)
                                    + 15) & 0xFFFFFFFFFFFFFFF8)
                                  + 15) & 0xFFFFFFFFFFFFFFF8)
                                + 15) & 0xFFFFFFFFFFFFFFF8)
                              + 15) & 0xFFFFFFFFFFFFFFF8)
                            + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 15) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8;
            if (*(void *)(v169 + 8) >= 0xFFFFFFFFuLL) {
              swift_bridgeObjectRelease();
            }
            size_t v539 = (v514 + v169) & v515;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v170 = (v559 + ((v539 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v515;
            LODWORD(v171) = -1;
            if (*(void *)(v170 + 8) < 0xFFFFFFFFuLL) {
              uint64_t v171 = *(void *)(((v559 + ((v539 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v515) + 8);
            }
            if ((int)v171 - 1 < 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            unsigned int v558 = *(unsigned int (**)(void))(v527 + 48);
            if (!v558()) {
              (*(void (**)(unint64_t, uint64_t))(v527 + 8))((v516 + v170) & v562, v517);
            }
            unint64_t v172 = (v103 + v561 + v559 + v170) & v562;
            if (!((unsigned int (*)(unint64_t, uint64_t, uint64_t))v558)(v172, 1, v517)) {
              (*(void (**)(unint64_t, uint64_t))(v527 + 8))(v172, v517);
            }
            swift_bridgeObjectRelease();
            v578((v104 + v539 + ((v546 + ((v551 + v561 + v103) & v562)) & 0xFFFFFFFFFFFFFFF8)) & v586, v563);
            unint64_t v173 = (v106 + ((v104 + v539 + ((v546 + ((v551 + v561 + v103) & v562)) & 0xFFFFFFFFFFFFFFF8)) & v586)) & v562;
            uint64_t v167 = v528;
            uint64_t v109 = v555;
            if (!((unsigned int (*)(unint64_t, uint64_t, uint64_t))v558)(v173, 1, v517)) {
              (*(void (**)(unint64_t, uint64_t))(v527 + 8))(v173, v517);
            }
            goto LABEL_154;
          case 6u:
            swift_bridgeObjectRelease();
            goto LABEL_152;
          case 7u:
            swift_release();
            goto LABEL_153;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_152;
          case 9u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_152;
          case 0xAu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFEC28BC(*((void *)v101 + 4), *((void *)v101 + 5), *((void *)v101 + 6), *((void *)v101 + 7), *((void *)v101 + 8), *((void *)v101 + 9), v101[80]);
            goto LABEL_153;
          case 0xBu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v166 = v518
                 + ((v513 + ((((unint64_t)(v101 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & v512);
            goto LABEL_149;
          default:
            swift_bridgeObjectRelease();
            unint64_t v166 = (unint64_t)&v101[v518];
LABEL_149:
            unint64_t v174 = v166 & v519;
            (*(void (**)(unint64_t, uint64_t))(v522 + 8))(v166 & v519, v521);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v175 = (v523
                  + ((((((((v520 + v174) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)) & v524;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v526 + 48))(v175, 1, v525)) {
              (*(void (**)(unint64_t, uint64_t))(v526 + 8))(v175, v525);
            }
LABEL_151:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_152:
            swift_bridgeObjectRelease();
LABEL_153:
            uint64_t v167 = v528;
LABEL_154:
            sub_1BFE95664(*(void *)((unint64_t)&v101[v109 + 8] & 0xFFFFFFFFFFFFFFF8), *(void *)(((unint64_t)&v101[v109 + 8] & 0xFFFFFFFFFFFFFFF8) + 8));
            swift_bridgeObjectRelease();
            size_t v72 = ((((v99 + v167) & v584) + v564 + v569) & v573)
                + (((v109 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                + 8;
            size_t v73 = v582;
            unsigned int v45 = __src;
            break;
        }
LABEL_155:
        memcpy(v73, v45, v72);
        return v583;
      }
      *(void *)uint64_t v44 = *v45;
      *((void *)v44 + 1) = v45[1];
      unint64_t v81 = v45;
      int v82 = v44;
      swift_bridgeObjectRelease();
      *((void *)v82 + 2) = v81[2];
      *((unsigned char *)v82 + 24) = *((unsigned char *)v81 + 24);
      *((void *)v82 + 4) = v81[4];
      *((void *)v82 + 5) = v81[5];
      swift_bridgeObjectRelease();
      uint64_t v83 = ((unint64_t)v82 + v51) & v55;
      uint64_t v84 = (_OWORD *)(((unint64_t)v81 + v51) & v55);
      if ((v54 & 0x80000000) != 0)
      {
        uint64_t v146 = v54;
        int v147 = v532((void *)((v31 + 64 + ((v83 + 71) & 0xFFFFFFFFFFFFFFF8)) & v586), v54, v563);
        unint64_t v148 = v31 + 64 + (((unint64_t)v84 + 71) & 0xFFFFFFFFFFFFFFF8);
        int v90 = v576;
        uint64_t v88 = v563;
        int v87 = v532((void *)(v148 & v586), v146, v563);
        uint64_t v89 = v50;
        size_t v91 = __n;
        if (!v147) {
          goto LABEL_51;
        }
      }
      else
      {
        unint64_t v85 = *(void *)((((unint64_t)v82 + v51) & v55) + 0x38);
        unint64_t v86 = *((void *)v84 + 7);
        if (v86 >= 0xFFFFFFFF) {
          LODWORD(v86) = -1;
        }
        int v87 = v86 + 1;
        uint64_t v88 = v563;
        uint64_t v89 = v50;
        int v90 = v576;
        size_t v91 = __n;
        if (v85 > 0xFFFFFFFE)
        {
LABEL_51:
          if (v87)
          {
            sub_1C024F49C(*(void *)v83, *(void *)(v83 + 8), *(unsigned char *)(v83 + 16));
            unsigned int v92 = *(unsigned __int8 *)(v83 + 40);
            if ((((v92 >> 6) & 0xFFFFFF83 | (4 * ((v92 >> 1) & 0x1F))) ^ 0x7F) >= 0x7D) {
              sub_1C00F5AEC(*(void *)(v83 + 24), *(void *)(v83 + 32), v92);
            }
            swift_bridgeObjectRelease();
            unint64_t v93 = (v83 + 71) & 0xFFFFFFFFFFFFFFF8;
            if (*(unsigned __int16 *)(v93 + 44) >> 9 <= 0x7EuLL) {
              sub_1C017F5B0(*(void *)v93, *(void *)(v93 + 8), *(void *)(v93 + 16), *(void *)(v93 + 24), *(void *)(v93 + 32), *(unsigned int *)(v93 + 40) | ((unint64_t)*(unsigned __int16 *)(v93 + 44) << 32));
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v531 + 8))((v581 + v93 + 64) & v586, v88);
            memcpy((void *)v83, v84, v91);
            int v90 = v576;
            goto LABEL_186;
          }
          char v156 = *((unsigned char *)v84 + 16);
          uint64_t v157 = *(void *)v83;
          uint64_t v158 = *(void *)(v83 + 8);
          *(_OWORD *)uint64_t v83 = *v84;
          unsigned __int8 v159 = *(unsigned char *)(v83 + 16);
          *(unsigned char *)(v83 + 16) = v156;
          sub_1C024F49C(v157, v158, v159);
          unint64_t v160 = (uint64_t *)(v83 + 24);
          uint64_t v161 = (_OWORD *)((char *)v84 + 24);
          unsigned int v162 = *(unsigned __int8 *)(v83 + 40);
          if ((((v162 >> 6) & 0xFFFFFF83 | (4 * ((v162 >> 1) & 0x1F))) ^ 0x7F) >= 0x7D)
          {
            unsigned int v163 = *((unsigned __int8 *)v84 + 40);
            uint64_t v164 = *v160;
            unint64_t v165 = *(void *)(v83 + 32);
            if ((((v163 >> 6) & 0xFFFFFF83 | (4 * ((v163 >> 1) & 0x1F))) ^ 0x7F) >= 0x7D)
            {
              *(_OWORD *)unint64_t v160 = *v161;
              *(unsigned char *)(v83 + 40) = v163;
              sub_1C00F5AEC(v164, v165, v162);
LABEL_180:
              *(void *)(v83 + 48) = *((void *)v84 + 6);
              *(void *)(v83 + 56) = *((void *)v84 + 7);
              swift_bridgeObjectRelease();
              unint64_t v278 = (v83 + 71) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v279 = ((unint64_t)v84 + 71) & 0xFFFFFFFFFFFFFFF8;
              if (*(unsigned __int16 *)(v278 + 44) >> 9 <= 0x7EuLL)
              {
                unint64_t v282 = *(unsigned int *)(v279 + 40) | ((unint64_t)*(unsigned __int16 *)(v279 + 44) << 32);
                if (((v282 >> 41) & 0x7F) == 0x7F)
                {
                  sub_1C030EAFC((v83 + 71) & 0xFFFFFFFFFFFFFFF8);
                  long long v283 = *(_OWORD *)(v279 + 30);
                  long long v284 = *(_OWORD *)(v279 + 16);
                  *(_OWORD *)unint64_t v278 = *(_OWORD *)v279;
                  *(_OWORD *)(v278 + 16) = v284;
                  *(_OWORD *)(v278 + 30) = v283;
                }
                else
                {
                  unint64_t v285 = *(unsigned int *)(v278 + 40) | ((unint64_t)*(unsigned __int16 *)(v278 + 44) << 32);
                  uint64_t v286 = *(void *)(v279 + 32);
                  uint64_t v287 = *(void *)v278;
                  uint64_t v288 = *(void *)(v278 + 8);
                  uint64_t v289 = *(void *)(v278 + 16);
                  uint64_t v290 = *(void *)(v278 + 24);
                  uint64_t v291 = *(void *)(v278 + 32);
                  long long v292 = *(_OWORD *)(v279 + 16);
                  *(_OWORD *)unint64_t v278 = *(_OWORD *)v279;
                  *(_OWORD *)(v278 + 16) = v292;
                  *(void *)(v278 + 32) = v286;
                  *(_DWORD *)(v278 + 40) = v282;
                  *(_WORD *)(v278 + 44) = WORD2(v282);
                  sub_1C017F5B0(v287, v288, v289, v290, v291, v285);
                }
              }
              else
              {
                long long v280 = *(_OWORD *)v279;
                long long v281 = *(_OWORD *)(v279 + 16);
                *(_OWORD *)(v278 + 30) = *(_OWORD *)(v279 + 30);
                *(_OWORD *)unint64_t v278 = v280;
                *(_OWORD *)(v278 + 16) = v281;
              }
              *(void *)(v278 + 48) = *(void *)(v279 + 48);
              swift_bridgeObjectRelease();
              *(void *)(v278 + 56) = *(void *)(v279 + 56);
              swift_bridgeObjectRelease();
              uint64_t v88 = v563;
              v529((v581 + 64 + v278) & v586, (v581 + 64 + v279) & v586, v563);
              int v90 = v576;
              goto LABEL_186;
            }
            sub_1C00F5AEC(v164, v165, v162);
          }
          long long v277 = *v161;
          *(unsigned char *)(v83 + 40) = *((unsigned char *)v84 + 40);
          *(_OWORD *)unint64_t v160 = v277;
          goto LABEL_180;
        }
      }
      if (v87)
      {
        memcpy((void *)v83, v84, v91);
      }
      else
      {
        long long v149 = *v84;
        *(unsigned char *)(v83 + 16) = *((unsigned char *)v84 + 16);
        *(_OWORD *)uint64_t v83 = v149;
        long long v150 = *(_OWORD *)((char *)v84 + 24);
        *(unsigned char *)(v83 + 40) = *((unsigned char *)v84 + 40);
        *(_OWORD *)(v83 + 24) = v150;
        *(_OWORD *)(v83 + 48) = v84[3];
        uint64_t v151 = (_OWORD *)((v83 + 71) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v152 = (long long *)(((unint64_t)v84 + 71) & 0xFFFFFFFFFFFFFFF8);
        long long v153 = *v152;
        long long v154 = v152[1];
        long long v155 = v152[3];
        v151[2] = v152[2];
        v151[3] = v155;
        *uint64_t v151 = v153;
        v151[1] = v154;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v531 + 32))(((unint64_t)v151 + v581 + 64) & v586, ((unint64_t)v152 + v581 + 64) & v586, v88);
      }
LABEL_186:
      BOOL v293 = v538 == 0;
      size_t v294 = (v91 + v577 + v83) & v584;
      unint64_t v295 = ((unint64_t)v84 + v91 + v577) & v584;
      v529(v294, v295, v88);
      *(void *)((v533 + v294) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v533 + v295) & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRelease();
      unint64_t v296 = (v569 + v564 + v294) & v573;
      unint64_t v297 = (v569 + v564 + v295) & v573;
      if (v296 == v297)
      {
        uint64_t v303 = v89;
        unint64_t v298 = v557;
        uint64_t v310 = v542 + v559;
        uint64_t v311 = v581 + v545 + 8;
        uint64_t v312 = v550 + v559;
        uint64_t v313 = v586;
      }
      else
      {
        unint64_t v298 = v557;
        uint64_t v571 = v511 + v293 + 7;
        unint64_t v299 = ((((((((((((((v571 + v557) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 8;
        if (v90) {
          size_t v300 = v560;
        }
        else {
          size_t v300 = v560 + 1;
        }
        size_t v556 = v300 + v561;
        size_t v566 = v300 + 7;
        uint64_t v301 = v581 + 8;
        uint64_t v574 = v581 + 8 + v545;
        uint64_t v585 = v550 + v559;
        unint64_t v302 = ((v550
               + v559
               + ((v574 + ((v300 + 7 + ((v542 + v559 + v300 + v561) & v562)) & 0xFFFFFFFFFFFFFFF8)) & v586)) & v562)
             + v300;
        if (v299 > v302) {
          unint64_t v302 = ((((((((((((((v571 + v557) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        }
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 8;
        uint64_t v303 = v89;
        unint64_t v304 = v299 + v89;
        if (v302 > v304) {
          unint64_t v304 = v302;
        }
        if (v304 <= 0x90) {
          uint64_t v305 = 144;
        }
        else {
          uint64_t v305 = v304;
        }
        unsigned int v306 = *(unsigned __int8 *)(v296 + v305);
        unsigned int v307 = v306 - 12;
        if (v306 >= 0xC)
        {
          if (v305 <= 3) {
            uint64_t v308 = v305;
          }
          else {
            uint64_t v308 = 4;
          }
          switch(v308)
          {
            case 1:
              int v309 = *(unsigned __int8 *)v296;
              goto LABEL_207;
            case 2:
              int v309 = *(unsigned __int16 *)v296;
              goto LABEL_207;
            case 3:
              int v309 = *(unsigned __int16 *)v296 | (*(unsigned __int8 *)(v296 + 2) << 16);
              goto LABEL_207;
            case 4:
              int v309 = *(_DWORD *)v296;
LABEL_207:
              if (v305 < 4) {
                unsigned int v306 = (v309 | (v307 << (8 * v305))) + 12;
              }
              else {
                unsigned int v306 = v309 + 12;
              }
              break;
            default:
              break;
          }
        }
        uint64_t v580 = v542 + v559;
        size_t v540 = v511 + v293;
        switch(v306)
        {
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(unsigned __int8 *)(v296 + 106) != 255)
            {
              uint64_t v315 = *(unsigned __int16 *)(v296 + 104) | (*(unsigned __int8 *)(v296 + 106) << 16);
              sub_1BFFA742C(*(void *)(v296 + 96), v315, SBYTE2(v315), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
            }
            goto LABEL_243;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v296 + 72) >= 3uLL) {
              swift_bridgeObjectRelease();
            }
            goto LABEL_241;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v296 + 56) >= 0xFuLL) {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_242;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_242;
          case 5u:
            size_t v543 = v300;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v316 = (((((((((((((((((((((((((((((((v296 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
                                          + 15) & 0xFFFFFFFFFFFFFFF8)
                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                      + 15) & 0xFFFFFFFFFFFFFFF8)
                                    + 15) & 0xFFFFFFFFFFFFFFF8)
                                  + 15) & 0xFFFFFFFFFFFFFFF8)
                                + 15) & 0xFFFFFFFFFFFFFFF8)
                              + 15) & 0xFFFFFFFFFFFFFFF8)
                            + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 15) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8;
            if (*(void *)(v316 + 8) >= 0xFFFFFFFFuLL) {
              swift_bridgeObjectRelease();
            }
            unint64_t v548 = (v514 + v316) & v515;
            swift_bridgeObjectRelease();
            unint64_t v317 = (v548 + 15) & 0xFFFFFFFFFFFFFFF8;
            swift_bridgeObjectRelease();
            uint64_t v318 = (v559 + v317 + 8) & v515;
            LODWORD(v319) = -1;
            if (*(void *)(v318 + 8) < 0xFFFFFFFFuLL) {
              uint64_t v319 = *(void *)(((v559 + v317 + 8) & v515) + 8);
            }
            if ((int)v319 - 1 < 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v320 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v527 + 48);
            if (!v320((v516 + v318) & v562, 1, v517)) {
              (*(void (**)(uint64_t, uint64_t))(v527 + 8))((v516 + v318) & v562, v517);
            }
            if (!v320((v556 + v559 + v318) & v562, 1, v517)) {
              (*(void (**)(size_t, uint64_t))(v527 + 8))((v556 + v559 + v318) & v562, v517);
            }
            swift_bridgeObjectRelease();
            size_t v300 = v543;
            (*(void (**)(unint64_t, uint64_t))(v531 + 8))((v301 + v548 + ((v566 + ((v580 + v561 + v543) & v562)) & 0xFFFFFFFFFFFFFFF8)) & v586, v563);
            unint64_t v321 = (v585 + ((v301 + v548 + ((v566 + ((v580 + v561 + v543) & v562)) & 0xFFFFFFFFFFFFFFF8)) & v586)) & v562;
            unsigned int v322 = v320(v321, 1, v517);
            uint64_t v303 = v89;
            unint64_t v298 = v557;
            if (!v322) {
              (*(void (**)(unint64_t, uint64_t))(v527 + 8))(v321, v517);
            }
            goto LABEL_243;
          case 6u:
            swift_bridgeObjectRelease();
            goto LABEL_242;
          case 7u:
            swift_release();
            goto LABEL_243;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_242;
          case 9u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_242;
          case 0xAu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFEC28BC(*(void *)(v296 + 32), *(void *)(v296 + 40), *(void *)(v296 + 48), *(void *)(v296 + 56), *(void *)(v296 + 64), *(void *)(v296 + 72), *(unsigned char *)(v296 + 80));
            goto LABEL_243;
          case 0xBu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v314 = v518 + ((v513 + ((((v296 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & v512);
            goto LABEL_239;
          default:
            swift_bridgeObjectRelease();
            unint64_t v314 = v518 + v296;
LABEL_239:
            unint64_t v323 = v314 & v519;
            (*(void (**)(unint64_t, uint64_t))(v522 + 8))(v314 & v519, v521);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v324 = (v523
                  + ((((((((v520 + v323) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)) & v524;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v526 + 48))(v324, 1, v525)) {
              (*(void (**)(unint64_t, uint64_t))(v526 + 8))(v324, v525);
            }
LABEL_241:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_242:
            swift_bridgeObjectRelease();
LABEL_243:
            unsigned int v325 = *(unsigned __int8 *)(v297 + v305);
            unsigned int v326 = v325 - 12;
            if (v325 < 0xC)
            {
              int v90 = v576;
              uint64_t v328 = v527;
            }
            else
            {
              if (v305 <= 3) {
                uint64_t v327 = v305;
              }
              else {
                uint64_t v327 = 4;
              }
              int v90 = v576;
              uint64_t v328 = v527;
              switch(v327)
              {
                case 1:
                  int v329 = *(unsigned __int8 *)v297;
                  goto LABEL_253;
                case 2:
                  int v329 = *(unsigned __int16 *)v297;
                  goto LABEL_253;
                case 3:
                  int v329 = *(unsigned __int16 *)v297 | (*(unsigned __int8 *)(v297 + 2) << 16);
                  goto LABEL_253;
                case 4:
                  int v329 = *(_DWORD *)v297;
LABEL_253:
                  if (v305 < 4) {
                    unsigned int v325 = (v329 | (v326 << (8 * v305))) + 12;
                  }
                  else {
                    unsigned int v325 = v329 + 12;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v325)
            {
              case 1u:
                long long v341 = *(_OWORD *)v297;
                long long v342 = *(_OWORD *)(v297 + 32);
                *(_OWORD *)(v296 + 16) = *(_OWORD *)(v297 + 16);
                *(_OWORD *)(v296 + 32) = v342;
                *(_OWORD *)unint64_t v296 = v341;
                long long v343 = *(_OWORD *)(v297 + 48);
                long long v344 = *(_OWORD *)(v297 + 64);
                long long v345 = *(_OWORD *)(v297 + 80);
                *(_OWORD *)(v296 + 91) = *(_OWORD *)(v297 + 91);
                *(_OWORD *)(v296 + 64) = v344;
                *(_OWORD *)(v296 + 80) = v345;
                *(_OWORD *)(v296 + 48) = v343;
                char v346 = 1;
                goto LABEL_270;
              case 2u:
                *(_OWORD *)unint64_t v296 = *(_OWORD *)v297;
                long long v347 = *(_OWORD *)(v297 + 16);
                long long v348 = *(_OWORD *)(v297 + 32);
                long long v349 = *(_OWORD *)(v297 + 64);
                *(_OWORD *)(v296 + 48) = *(_OWORD *)(v297 + 48);
                *(_OWORD *)(v296 + 64) = v349;
                *(_OWORD *)(v296 + 16) = v347;
                *(_OWORD *)(v296 + 32) = v348;
                long long v350 = *(_OWORD *)(v297 + 80);
                long long v351 = *(_OWORD *)(v297 + 96);
                long long v352 = *(_OWORD *)(v297 + 128);
                *(_OWORD *)(v296 + 112) = *(_OWORD *)(v297 + 112);
                *(_OWORD *)(v296 + 128) = v352;
                *(_OWORD *)(v296 + 80) = v350;
                *(_OWORD *)(v296 + 96) = v351;
                char v346 = 2;
                goto LABEL_270;
              case 3u:
                long long v353 = *(_OWORD *)v297;
                long long v354 = *(_OWORD *)(v297 + 16);
                long long v355 = *(_OWORD *)(v297 + 48);
                *(_OWORD *)(v296 + 32) = *(_OWORD *)(v297 + 32);
                *(_OWORD *)(v296 + 48) = v355;
                *(_OWORD *)unint64_t v296 = v353;
                *(_OWORD *)(v296 + 16) = v354;
                long long v356 = *(_OWORD *)(v297 + 64);
                long long v357 = *(_OWORD *)(v297 + 80);
                long long v358 = *(_OWORD *)(v297 + 96);
                *(_OWORD *)(v296 + 105) = *(_OWORD *)(v297 + 105);
                *(_OWORD *)(v296 + 80) = v357;
                *(_OWORD *)(v296 + 96) = v358;
                *(_OWORD *)(v296 + 64) = v356;
                char v346 = 3;
                goto LABEL_270;
              case 4u:
                long long v359 = *(_OWORD *)v297;
                long long v360 = *(_OWORD *)(v297 + 16);
                long long v361 = *(_OWORD *)(v297 + 32);
                *(void *)(v296 + 48) = *(void *)(v297 + 48);
                *(_OWORD *)(v296 + 16) = v360;
                *(_OWORD *)(v296 + 32) = v361;
                *(_OWORD *)unint64_t v296 = v359;
                char v346 = 4;
                goto LABEL_270;
              case 5u:
                BOOL v553 = v293;
                uint64_t v536 = v303;
                *(_OWORD *)unint64_t v296 = *(_OWORD *)v297;
                v362 = (_OWORD *)((v296 + 23) & 0xFFFFFFFFFFFFFFF8);
                v363 = (_OWORD *)((v297 + 23) & 0xFFFFFFFFFFFFFFF8);
                _OWORD *v362 = *v363;
                unint64_t v364 = ((unint64_t)v362 + 23) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v365 = ((unint64_t)v363 + 23) & 0xFFFFFFFFFFFFFFF8;
                *(_OWORD *)unint64_t v364 = *(_OWORD *)v365;
                *(unsigned char *)(v364 + 16) = *(unsigned char *)(v365 + 16);
                *(unsigned char *)(v364 + 17) = *(unsigned char *)(v365 + 17);
                v366 = (void *)((v364 + 25) & 0xFFFFFFFFFFFFFFF8);
                v367 = (void *)((v365 + 25) & 0xFFFFFFFFFFFFFFF8);
                void *v366 = *v367;
                uint64_t v368 = (void *)(((unint64_t)v366 + 15) & 0xFFFFFFFFFFFFFFF8);
                v369 = (void *)(((unint64_t)v367 + 15) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v368 = *v369;
                unsigned __int8 v370 = (void *)(((unint64_t)v368 + 15) & 0xFFFFFFFFFFFFFFF8);
                int v371 = (void *)(((unint64_t)v369 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unsigned __int8 v370 = *v371;
                uint64_t v372 = (void *)(((unint64_t)v370 + 15) & 0xFFFFFFFFFFFFFFF8);
                v373 = (void *)(((unint64_t)v371 + 15) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v372 = *v373;
                v374 = (void *)(((unint64_t)v372 + 15) & 0xFFFFFFFFFFFFFFF8);
                v375 = (void *)(((unint64_t)v373 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v374 = *v375;
                unint64_t v376 = (void *)(((unint64_t)v374 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v377 = (void *)(((unint64_t)v375 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v376 = *v377;
                v378 = (void *)(((unint64_t)v376 + 15) & 0xFFFFFFFFFFFFFFF8);
                v379 = (void *)(((unint64_t)v377 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v378 = *v379;
                unint64_t v380 = (void *)(((unint64_t)v378 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v381 = (void *)(((unint64_t)v379 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v380 = *v381;
                v382 = (void *)(((unint64_t)v380 + 15) & 0xFFFFFFFFFFFFFFF8);
                v383 = (void *)(((unint64_t)v381 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v382 = *v383;
                v384 = (void *)(((unint64_t)v382 + 15) & 0xFFFFFFFFFFFFFFF8);
                v385 = (void *)(((unint64_t)v383 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v384 = *v385;
                v386 = (void *)(((unint64_t)v384 + 15) & 0xFFFFFFFFFFFFFFF8);
                v387 = (void *)(((unint64_t)v385 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v386 = *v387;
                v388 = (void *)(((unint64_t)v386 + 15) & 0xFFFFFFFFFFFFFFF8);
                v389 = (void *)(((unint64_t)v387 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v388 = *v389;
                v390 = (void *)(((unint64_t)v388 + 15) & 0xFFFFFFFFFFFFFFF8);
                v391 = (void *)(((unint64_t)v389 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v390 = *v391;
                v392 = (_OWORD *)(((unint64_t)v390 + 15) & 0xFFFFFFFFFFFFFFF8);
                v393 = (_OWORD *)(((unint64_t)v391 + 15) & 0xFFFFFFFFFFFFFFF8);
                _OWORD *v392 = *v393;
                uint64_t v541 = (void *)(((unint64_t)v392 + v514) & v515);
                uint64_t v544 = (void *)(((unint64_t)v393 + v514) & v515);
                *uint64_t v541 = *v544;
                v394 = (void *)(((unint64_t)v541 + 15) & 0xFFFFFFFFFFFFFFF8);
                v395 = (void *)(((unint64_t)v544 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v394 = *v395;
                v396 = (_OWORD *)(((unint64_t)v394 + v559 + 8) & v515);
                v397 = (long long *)(((unint64_t)v395 + v559 + 8) & v515);
                long long v398 = *v397;
                long long v399 = v397[2];
                v396[1] = v397[1];
                v396[2] = v399;
                _OWORD *v396 = v398;
                v400 = (void *)(((unint64_t)v396 + v516) & v562);
                v401 = (const void *)(((unint64_t)v397 + v516) & v562);
                uint64_t v549 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v328 + 48);
                if (v549(v401, 1, v517))
                {
                  memcpy(v400, v401, v300);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v328 + 32))(v400, v401, v517);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v328 + 56))(v400, 0, 1, v517);
                }
                v479 = (void *)(((unint64_t)v396 + v556 + v559) & v562);
                v480 = (const void *)(((unint64_t)v397 + v556 + v559) & v562);
                uint64_t v310 = v580;
                if (v549(v480, 1, v517))
                {
                  memcpy(v479, v480, v300);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v527 + 32))(v479, v480, v517);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v527 + 56))(v479, 0, 1, v517);
                }
                uint64_t v493 = 7;
                if (!v576) {
                  uint64_t v493 = 8;
                }
                *(void *)(((unint64_t)v479 + v560 + v493) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v480 + v560 + v493) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v494 = ((v566 + ((v580 + v561 + v300) & v562)) & 0xFFFFFFFFFFFFFFF8) + 8;
                unint64_t v495 = ((unint64_t)v541 + v581 + v494) & v586;
                unint64_t v496 = ((unint64_t)v544 + v581 + v494) & v586;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v531 + 32))(v495, v496, v563);
                v497 = (void *)((v585 + v495) & v562);
                v498 = (const void *)((v585 + v496) & v562);
                if (v549(v498, 1, v517))
                {
                  memcpy(v497, v498, v300);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v527 + 32))(v497, v498, v517);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v527 + 56))(v497, 0, 1, v517);
                }
                unint64_t v298 = v557;
                *(unsigned char *)(v296 + v305) = 5;
                uint64_t v313 = v586;
                int v90 = v576;
                uint64_t v303 = v536;
                goto LABEL_303;
              case 6u:
                long long v402 = *(_OWORD *)v297;
                *(void *)(v296 + 16) = *(void *)(v297 + 16);
                *(_OWORD *)unint64_t v296 = v402;
                char v346 = 6;
                goto LABEL_270;
              case 7u:
                *(void *)unint64_t v296 = *(void *)v297;
                char v346 = 7;
                goto LABEL_270;
              case 8u:
                *(_OWORD *)unint64_t v296 = *(_OWORD *)v297;
                long long v403 = *(_OWORD *)(v297 + 16);
                long long v404 = *(_OWORD *)(v297 + 32);
                long long v405 = *(_OWORD *)(v297 + 48);
                *(void *)(v296 + 64) = *(void *)(v297 + 64);
                *(_OWORD *)(v296 + 32) = v404;
                *(_OWORD *)(v296 + 48) = v405;
                *(_OWORD *)(v296 + 16) = v403;
                char v346 = 8;
                goto LABEL_270;
              case 9u:
                long long v406 = *(_OWORD *)v297;
                long long v407 = *(_OWORD *)(v297 + 32);
                *(_OWORD *)(v296 + 16) = *(_OWORD *)(v297 + 16);
                *(_OWORD *)(v296 + 32) = v407;
                *(_OWORD *)unint64_t v296 = v406;
                long long v408 = *(_OWORD *)(v297 + 48);
                long long v409 = *(_OWORD *)(v297 + 64);
                long long v410 = *(_OWORD *)(v297 + 80);
                *(_OWORD *)(v296 + 89) = *(_OWORD *)(v297 + 89);
                *(_OWORD *)(v296 + 64) = v409;
                *(_OWORD *)(v296 + 80) = v410;
                *(_OWORD *)(v296 + 48) = v408;
                char v346 = 9;
                goto LABEL_270;
              case 0xAu:
                long long v411 = *(_OWORD *)(v297 + 16);
                *(_OWORD *)unint64_t v296 = *(_OWORD *)v297;
                *(_OWORD *)(v296 + 16) = v411;
                long long v412 = *(_OWORD *)(v297 + 32);
                long long v413 = *(_OWORD *)(v297 + 48);
                long long v414 = *(_OWORD *)(v297 + 64);
                *(unsigned char *)(v296 + 80) = *(unsigned char *)(v297 + 80);
                *(_OWORD *)(v296 + 48) = v413;
                *(_OWORD *)(v296 + 64) = v414;
                *(_OWORD *)(v296 + 32) = v412;
                char v346 = 10;
LABEL_270:
                *(unsigned char *)(v296 + v305) = v346;
                uint64_t v313 = v586;
                uint64_t v310 = v580;
                goto LABEL_304;
              case 0xBu:
                BOOL v553 = v293;
                uint64_t v330 = v303;
                *(_OWORD *)unint64_t v296 = *(_OWORD *)v297;
                uint64_t v415 = (_OWORD *)((v296 + 23) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v416 = (_OWORD *)((v297 + 23) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v415 = *v416;
                unsigned __int8 v417 = (_OWORD *)(((unint64_t)v415 + 23) & 0xFFFFFFFFFFFFFFF8);
                v418 = (_OWORD *)(((unint64_t)v416 + 23) & 0xFFFFFFFFFFFFFFF8);
                *unsigned __int8 v417 = *v418;
                v419 = (_OWORD *)(((unint64_t)v417 + v513 + 16) & v512);
                v420 = (_OWORD *)(((unint64_t)v418 + v513 + 16) & v512);
                _OWORD *v419 = *v420;
                unint64_t v421 = ((unint64_t)v419 + v518) & v519;
                unint64_t v422 = ((unint64_t)v420 + v518) & v519;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 32))(v421, v422, v521);
                v423 = (_OWORD *)((v520 + v421) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v424 = (_OWORD *)((v520 + v422) & 0xFFFFFFFFFFFFFFF8);
                _OWORD *v423 = *v424;
                unint64_t v425 = (_OWORD *)(((unint64_t)v423 + 23) & 0xFFFFFFFFFFFFFFF8);
                v426 = (_OWORD *)(((unint64_t)v424 + 23) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v425 = *v426;
                v427 = (_OWORD *)(((unint64_t)v425 + 23) & 0xFFFFFFFFFFFFFFF8);
                v428 = (_OWORD *)(((unint64_t)v426 + 23) & 0xFFFFFFFFFFFFFFF8);
                _OWORD *v427 = *v428;
                v429 = (_OWORD *)(((unint64_t)v427 + 23) & 0xFFFFFFFFFFFFFFF8);
                v430 = (_OWORD *)(((unint64_t)v428 + 23) & 0xFFFFFFFFFFFFFFF8);
                _OWORD *v429 = *v430;
                v431 = (void *)(((unint64_t)v429 + v523) & v524);
                v432 = (const void *)(((unint64_t)v430 + v523) & v524);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v526 + 48))(v432, 1, v525))
                {
                  memcpy(v431, v432, v540);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v526 + 32))(v431, v432, v525);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v526 + 56))(v431, 0, 1, v525);
                }
                uint64_t v313 = v586;
                uint64_t v310 = v580;
                v481 = (void *)(((unint64_t)v431 + v571) & 0xFFFFFFFFFFFFFFF8);
                v482 = (void *)(((unint64_t)v432 + v571) & 0xFFFFFFFFFFFFFFF8);
                void *v481 = *v482;
                v483 = (void *)(((unint64_t)v481 + 15) & 0xFFFFFFFFFFFFFFF8);
                v484 = (void *)(((unint64_t)v482 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v483 = *v484;
                v485 = (void *)(((unint64_t)v483 + 15) & 0xFFFFFFFFFFFFFFF8);
                v486 = (void *)(((unint64_t)v484 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v485 = *v486;
                v487 = (void *)(((unint64_t)v485 + 15) & 0xFFFFFFFFFFFFFFF8);
                v488 = (void *)(((unint64_t)v486 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v487 = *v488;
                v489 = (void *)(((unint64_t)v487 + 15) & 0xFFFFFFFFFFFFFFF8);
                v490 = (void *)(((unint64_t)v488 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v489 = *v490;
                v491 = (void *)(((unint64_t)v489 + 15) & 0xFFFFFFFFFFFFFFF8);
                v492 = (void *)(((unint64_t)v490 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v491 = *v492;
                *(void *)(((unint64_t)v491 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v492
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                *(unsigned char *)(v296 + v305) = 11;
                goto LABEL_295;
              default:
                BOOL v553 = v293;
                uint64_t v330 = v303;
                *(_OWORD *)unint64_t v296 = *(_OWORD *)v297;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 32))((v518 + v296) & v519, (v518 + v297) & v519, v521);
                unsigned int v331 = (_OWORD *)((v520 + ((v518 + v296) & v519)) & 0xFFFFFFFFFFFFFFF8);
                BOOL v332 = (_OWORD *)((v520 + ((v518 + v297) & v519)) & 0xFFFFFFFFFFFFFFF8);
                *unsigned int v331 = *v332;
                uint64_t v333 = (_OWORD *)(((unint64_t)v331 + 23) & 0xFFFFFFFFFFFFFFF8);
                int v334 = (_OWORD *)(((unint64_t)v332 + 23) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v333 = *v334;
                uint64_t v335 = (_OWORD *)(((unint64_t)v333 + 23) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v336 = (_OWORD *)(((unint64_t)v334 + 23) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v335 = *v336;
                unint64_t v337 = (_OWORD *)(((unint64_t)v335 + 23) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v338 = (_OWORD *)(((unint64_t)v336 + 23) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v337 = *v338;
                uint64_t v339 = (void *)(((unint64_t)v337 + v523) & v524);
                unint64_t v340 = (const void *)(((unint64_t)v338 + v523) & v524);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v526 + 48))(v340, 1, v525))
                {
                  memcpy(v339, v340, v540);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v526 + 32))(v339, v340, v525);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v526 + 56))(v339, 0, 1, v525);
                }
                uint64_t v313 = v586;
                uint64_t v310 = v580;
                unint64_t v467 = (void *)(((unint64_t)v339 + v571) & 0xFFFFFFFFFFFFFFF8);
                v468 = (void *)(((unint64_t)v340 + v571) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v467 = *v468;
                v469 = (void *)(((unint64_t)v467 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v470 = (void *)(((unint64_t)v468 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v469 = *v470;
                uint64_t v471 = (void *)(((unint64_t)v469 + 15) & 0xFFFFFFFFFFFFFFF8);
                v472 = (void *)(((unint64_t)v470 + 15) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v471 = *v472;
                v473 = (void *)(((unint64_t)v471 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v474 = (void *)(((unint64_t)v472 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v473 = *v474;
                unint64_t v475 = (void *)(((unint64_t)v473 + 15) & 0xFFFFFFFFFFFFFFF8);
                v476 = (void *)(((unint64_t)v474 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v475 = *v476;
                v477 = (void *)(((unint64_t)v475 + 15) & 0xFFFFFFFFFFFFFFF8);
                v478 = (void *)(((unint64_t)v476 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v477 = *v478;
                *(void *)(((unint64_t)v477 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v478
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                *(unsigned char *)(v296 + v305) = 0;
LABEL_295:
                uint64_t v303 = v330;
LABEL_303:
                BOOL v293 = v553;
LABEL_304:
                uint64_t v311 = v574;
                uint64_t v312 = v585;
                break;
            }
            break;
        }
      }
      unint64_t v499 = ((((((((((((((v511 + v293 + v298 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 8;
      size_t v500 = v560;
      if (!v90) {
        size_t v500 = v560 + 1;
      }
      unint64_t v501 = ((v312 + ((v311 + ((v500 + ((v310 + v561 + v500) & v562) + 7) & 0xFFFFFFFFFFFFFFF8)) & v313)) & v562)
           + v500;
      if (v499 > v501) {
        unint64_t v501 = ((((((((((((((v511 + v293 + v298 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      }
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 8;
      unint64_t v502 = v499 + v303;
      if (v501 > v502) {
        unint64_t v502 = v501;
      }
      if (v502 <= 0x90) {
        unint64_t v502 = 144;
      }
      unint64_t v503 = v502 + 1;
      unint64_t v504 = (uint64_t *)(((v296 | 7) + v503) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v505 = (v297 | 7) + v503;
      uint64_t v506 = *v504;
      unint64_t v507 = v504[1];
      unint64_t v508 = (v505 & 0xFFFFFFFFFFFFFFF8) + 23;
      *(_OWORD *)unint64_t v504 = *(_OWORD *)(v505 & 0xFFFFFFFFFFFFFFF8);
      sub_1BFE95664(v506, v507);
      *(void *)(((unint64_t)v504 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v508 & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRelease();
      return v583;
    }
  }
  if (v57)
  {
    if (v538) {
      size_t v67 = v48;
    }
    else {
      size_t v67 = v48 + 1;
    }
    unint64_t v68 = ((((((((((((((v67 + v557 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    size_t v69 = v560;
    if (!v576) {
      size_t v69 = v560 + 1;
    }
    unint64_t v70 = ((v550
          + v559
          + ((v31 + v545 + ((v69 + ((v542 + v559 + v561 + v69) & v562) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & v47)) & v562)
        + v69;
    if (v68 > v70) {
      unint64_t v70 = v68;
    }
    unint64_t v71 = v68 + v50;
    if (v70 > v71) {
      unint64_t v71 = v70;
    }
    if (v71 <= 0x90) {
      unint64_t v71 = 144;
    }
    size_t v72 = ((((__n + v577 + v53) & v55) + v564 + v569) & v573)
        + (((v71 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    size_t v73 = v44;
    goto LABEL_155;
  }
  long long v74 = *(_OWORD *)v45;
  *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)((char *)v45 + 9);
  *uint64_t v44 = v74;
  v44[2] = *((_OWORD *)v45 + 2);
  unint64_t v75 = (_OWORD *)(((unint64_t)v44 + v51) & v55);
  long long v76 = (_OWORD *)(((unint64_t)v45 + v51) & v55);
  if ((v54 & 0x80000000) != 0)
  {
    size_t v77 = v48;
    uint64_t v80 = v563;
    int v79 = v532((void *)((v31 + (((unint64_t)v76 + 71) & 0xFFFFFFFFFFFFFFF8) + 64) & v586), v54, v563);
  }
  else
  {
    size_t v77 = v48;
    unint64_t v78 = *((void *)v76 + 7);
    if (v78 >= 0xFFFFFFFF) {
      LODWORD(v78) = -1;
    }
    int v79 = v78 + 1;
    uint64_t v80 = v563;
  }
  uint64_t v535 = v50;
  if (v79)
  {
    size_t v114 = __n;
    memcpy(v75, v76, __n);
    uint64_t v115 = *(void (**)(unint64_t, unint64_t, uint64_t))(v531 + 32);
    uint64_t v116 = v31;
    uint64_t v117 = v586;
  }
  else
  {
    long long v118 = *v76;
    *((unsigned char *)v75 + 16) = *((unsigned char *)v76 + 16);
    *unint64_t v75 = v118;
    long long v119 = *(_OWORD *)((char *)v76 + 24);
    *((unsigned char *)v75 + 40) = *((unsigned char *)v76 + 40);
    *(_OWORD *)((char *)v75 + 24) = v119;
    v75[3] = v76[3];
    unsigned int v120 = (_OWORD *)(((unint64_t)v75 + 71) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v121 = (long long *)(((unint64_t)v76 + 71) & 0xFFFFFFFFFFFFFFF8);
    long long v122 = *v121;
    long long v123 = v121[1];
    long long v124 = v121[3];
    v120[2] = v121[2];
    v120[3] = v124;
    *unsigned int v120 = v122;
    v120[1] = v123;
    uint64_t v125 = v31 + 64;
    unint64_t v126 = (unint64_t)v120 + v31 + 64;
    uint64_t v116 = v31;
    uint64_t v117 = v586;
    uint64_t v127 = *(void (**)(unint64_t, unint64_t, uint64_t))(v531 + 32);
    v127(v126 & v586, ((unint64_t)v121 + v125) & v586, v80);
    uint64_t v115 = v127;
    size_t v114 = __n;
  }
  size_t v128 = v114 + v577;
  unint64_t v129 = ((unint64_t)v75 + v114 + v577) & v584;
  unint64_t v130 = ((unint64_t)v76 + v128) & v584;
  unint64_t v579 = v115;
  v115(v129, v130, v80);
  if (!v538) {
    ++v77;
  }
  *(void *)((v533 + v129) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v533 + v130) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v131 = (v569 + v564 + v129) & v573;
  unint64_t v132 = (v569 + v564 + v130) & v573;
  size_t v133 = v77 + 7;
  unint64_t v134 = ((((((((((((((v77 + 7 + v557) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  if (v576) {
    size_t v135 = v560;
  }
  else {
    size_t v135 = v560 + 1;
  }
  size_t v136 = v135 + v561;
  unint64_t v137 = (v116 + v545 + ((v135 + 7 + ((v542 + v559 + v135 + v561) & v562)) & 0xFFFFFFFFFFFFFFF8) + 8) & v117;
  uint64_t v138 = v550 + v559;
  unint64_t v139 = ((v550 + v559 + v137) & v562) + v135;
  if (v134 > v139) {
    unint64_t v139 = ((((((((((((((v77 + 7 + v557) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
  }
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8;
  unint64_t v140 = v134 + v535;
  if (v139 > v140) {
    unint64_t v140 = v139;
  }
  if (v140 <= 0x90) {
    uint64_t v141 = 144;
  }
  else {
    uint64_t v141 = v140;
  }
  unsigned int v142 = *(unsigned __int8 *)(v132 + v141);
  unsigned int v143 = v142 - 12;
  if (v142 >= 0xC)
  {
    if (v141 <= 3) {
      uint64_t v144 = v141;
    }
    else {
      uint64_t v144 = 4;
    }
    switch(v144)
    {
      case 1:
        int v145 = *(unsigned __int8 *)v132;
        if (v141 < 4) {
          goto LABEL_157;
        }
        goto LABEL_161;
      case 2:
        int v145 = *(unsigned __int16 *)v132;
        if (v141 < 4) {
          goto LABEL_157;
        }
        goto LABEL_161;
      case 3:
        int v145 = *(unsigned __int16 *)v132 | (*(unsigned __int8 *)(v132 + 2) << 16);
        if (v141 < 4) {
          goto LABEL_157;
        }
        goto LABEL_161;
      case 4:
        int v145 = *(_DWORD *)v132;
        if (v141 < 4) {
LABEL_157:
        }
          unsigned int v142 = (v145 | (v143 << (8 * v141))) + 12;
        else {
LABEL_161:
        }
          unsigned int v142 = v145 + 12;
        break;
      default:
        break;
    }
  }
  switch(v142)
  {
    case 1u:
      long long v186 = *(_OWORD *)v132;
      long long v187 = *(_OWORD *)(v132 + 32);
      *(_OWORD *)(v131 + 16) = *(_OWORD *)(v132 + 16);
      *(_OWORD *)(v131 + 32) = v187;
      *(_OWORD *)unint64_t v131 = v186;
      long long v188 = *(_OWORD *)(v132 + 48);
      long long v189 = *(_OWORD *)(v132 + 64);
      long long v190 = *(_OWORD *)(v132 + 80);
      *(_OWORD *)(v131 + 91) = *(_OWORD *)(v132 + 91);
      *(_OWORD *)(v131 + 64) = v189;
      *(_OWORD *)(v131 + 80) = v190;
      *(_OWORD *)(v131 + 48) = v188;
      char v191 = 1;
      break;
    case 2u:
      *(_OWORD *)unint64_t v131 = *(_OWORD *)v132;
      long long v192 = *(_OWORD *)(v132 + 16);
      long long v193 = *(_OWORD *)(v132 + 32);
      long long v194 = *(_OWORD *)(v132 + 64);
      *(_OWORD *)(v131 + 48) = *(_OWORD *)(v132 + 48);
      *(_OWORD *)(v131 + 64) = v194;
      *(_OWORD *)(v131 + 16) = v192;
      *(_OWORD *)(v131 + 32) = v193;
      long long v195 = *(_OWORD *)(v132 + 80);
      long long v196 = *(_OWORD *)(v132 + 96);
      long long v197 = *(_OWORD *)(v132 + 128);
      *(_OWORD *)(v131 + 112) = *(_OWORD *)(v132 + 112);
      *(_OWORD *)(v131 + 128) = v197;
      *(_OWORD *)(v131 + 80) = v195;
      *(_OWORD *)(v131 + 96) = v196;
      char v191 = 2;
      break;
    case 3u:
      long long v198 = *(_OWORD *)v132;
      long long v199 = *(_OWORD *)(v132 + 16);
      long long v200 = *(_OWORD *)(v132 + 48);
      *(_OWORD *)(v131 + 32) = *(_OWORD *)(v132 + 32);
      *(_OWORD *)(v131 + 48) = v200;
      *(_OWORD *)unint64_t v131 = v198;
      *(_OWORD *)(v131 + 16) = v199;
      long long v201 = *(_OWORD *)(v132 + 64);
      long long v202 = *(_OWORD *)(v132 + 80);
      long long v203 = *(_OWORD *)(v132 + 96);
      *(_OWORD *)(v131 + 105) = *(_OWORD *)(v132 + 105);
      *(_OWORD *)(v131 + 80) = v202;
      *(_OWORD *)(v131 + 96) = v203;
      *(_OWORD *)(v131 + 64) = v201;
      char v191 = 3;
      break;
    case 4u:
      long long v204 = *(_OWORD *)v132;
      long long v205 = *(_OWORD *)(v132 + 16);
      long long v206 = *(_OWORD *)(v132 + 32);
      *(void *)(v131 + 48) = *(void *)(v132 + 48);
      *(_OWORD *)(v131 + 16) = v205;
      *(_OWORD *)(v131 + 32) = v206;
      *(_OWORD *)unint64_t v131 = v204;
      char v191 = 4;
      break;
    case 5u:
      *(_OWORD *)unint64_t v131 = *(_OWORD *)v132;
      uint64_t v207 = (_OWORD *)((v131 + 23) & 0xFFFFFFFFFFFFFFF8);
      long long v208 = (_OWORD *)((v132 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v207 = *v208;
      unint64_t v209 = ((unint64_t)v207 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v210 = ((unint64_t)v208 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v209 = *(_OWORD *)v210;
      *(unsigned char *)(v209 + 16) = *(unsigned char *)(v210 + 16);
      *(unsigned char *)(v209 + 17) = *(unsigned char *)(v210 + 17);
      unint64_t v211 = (void *)((v209 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v212 = (void *)((v210 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v211 = *v212;
      uint64_t v213 = (void *)(((unint64_t)v211 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v214 = (void *)(((unint64_t)v212 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v213 = *v214;
      uint64_t v215 = (void *)(((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v216 = (void *)(((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v215 = *v216;
      uint64_t v217 = (void *)(((unint64_t)v215 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v218 = (void *)(((unint64_t)v216 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v217 = *v218;
      unsigned __int8 v219 = (void *)(((unint64_t)v217 + 15) & 0xFFFFFFFFFFFFFFF8);
      int v220 = (void *)(((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v219 = *v220;
      uint64_t v221 = (void *)(((unint64_t)v219 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v222 = (void *)(((unint64_t)v220 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v221 = *v222;
      unint64_t v223 = (void *)(((unint64_t)v221 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v224 = (void *)(((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v223 = *v224;
      int v225 = (void *)(((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v226 = (void *)(((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8);
      *int v225 = *v226;
      unint64_t v227 = (void *)(((unint64_t)v225 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v228 = (void *)(((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v227 = *v228;
      char v229 = (void *)(((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v230 = (void *)(((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8);
      *char v229 = *v230;
      size_t v231 = (void *)(((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v232 = (void *)(((unint64_t)v230 + 15) & 0xFFFFFFFFFFFFFFF8);
      *size_t v231 = *v232;
      unint64_t v233 = (void *)(((unint64_t)v231 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v234 = (void *)(((unint64_t)v232 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v233 = *v234;
      uint64_t v235 = (void *)(((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v236 = (void *)(((unint64_t)v234 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v235 = *v236;
      uint64_t v237 = (_OWORD *)(((unint64_t)v235 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v238 = (_OWORD *)(((unint64_t)v236 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v237 = *v238;
      uint64_t v552 = (void *)(((unint64_t)v238 + v514) & v515);
      uint64_t v547 = (void *)(((unint64_t)v237 + v514) & v515);
      *uint64_t v547 = *v552;
      uint64_t v239 = (void *)(((unint64_t)v547 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v240 = (void *)(((unint64_t)v552 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v239 = *v240;
      uint64_t v241 = (_OWORD *)(((unint64_t)v239 + v559 + 8) & v515);
      uint64_t v242 = (long long *)(((unint64_t)v240 + v559 + 8) & v515);
      long long v243 = *v242;
      long long v244 = v242[2];
      v241[1] = v242[1];
      v241[2] = v244;
      _OWORD *v241 = v243;
      v565 = (void *)(((unint64_t)v241 + v516) & v562);
      uint64_t v245 = (const void *)(((unint64_t)v242 + v516) & v562);
      v570 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v527 + 48);
      if (v570(v245, 1, v517))
      {
        memcpy(v565, v245, v135);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v527 + 32))(v565, v245, v517);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v527 + 56))(v565, 0, 1, v517);
      }
      v445 = (void *)(((unint64_t)v241 + v136 + v559) & v562);
      v446 = (const void *)(((unint64_t)v242 + v136 + v559) & v562);
      if (v570(v446, 1, v517))
      {
        memcpy(v445, v446, v135);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v527 + 32))(v445, v446, v517);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v527 + 56))(v445, 0, 1, v517);
      }
      uint64_t v459 = 7;
      if (!v576) {
        uint64_t v459 = 8;
      }
      *(void *)(((unint64_t)v445 + v560 + v459) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v446
                                                                                              + v560
                                                                                              + v459) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v460 = ((v135 + 7 + ((v542 + v559 + v561 + v135) & v562)) & 0xFFFFFFFFFFFFFFF8) + 8;
      unint64_t v461 = ((unint64_t)v547 + v581 + v460) & v586;
      unint64_t v462 = ((unint64_t)v552 + v581 + v460) & v586;
      v579(v461, v462, v563);
      v463 = (void *)((v138 + v461) & v562);
      unint64_t v464 = (v138 + v462) & v562;
      if (v570((const void *)v464, 1, v517))
      {
        memcpy(v463, (const void *)((v138 + v462) & v562), v135);
      }
      else
      {
        (*(void (**)(void *, unint64_t, uint64_t))(v527 + 32))(v463, v464, v517);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v527 + 56))(v463, 0, 1, v517);
      }
      char v191 = 5;
      break;
    case 6u:
      long long v246 = *(_OWORD *)v132;
      *(void *)(v131 + 16) = *(void *)(v132 + 16);
      *(_OWORD *)unint64_t v131 = v246;
      char v191 = 6;
      break;
    case 7u:
      *(void *)unint64_t v131 = *(void *)v132;
      char v191 = 7;
      break;
    case 8u:
      *(_OWORD *)unint64_t v131 = *(_OWORD *)v132;
      long long v247 = *(_OWORD *)(v132 + 16);
      long long v248 = *(_OWORD *)(v132 + 32);
      long long v249 = *(_OWORD *)(v132 + 48);
      *(void *)(v131 + 64) = *(void *)(v132 + 64);
      *(_OWORD *)(v131 + 32) = v248;
      *(_OWORD *)(v131 + 48) = v249;
      *(_OWORD *)(v131 + 16) = v247;
      char v191 = 8;
      break;
    case 9u:
      long long v250 = *(_OWORD *)v132;
      long long v251 = *(_OWORD *)(v132 + 32);
      *(_OWORD *)(v131 + 16) = *(_OWORD *)(v132 + 16);
      *(_OWORD *)(v131 + 32) = v251;
      *(_OWORD *)unint64_t v131 = v250;
      long long v252 = *(_OWORD *)(v132 + 48);
      long long v253 = *(_OWORD *)(v132 + 64);
      long long v254 = *(_OWORD *)(v132 + 80);
      *(_OWORD *)(v131 + 89) = *(_OWORD *)(v132 + 89);
      *(_OWORD *)(v131 + 64) = v253;
      *(_OWORD *)(v131 + 80) = v254;
      *(_OWORD *)(v131 + 48) = v252;
      char v191 = 9;
      break;
    case 0xAu:
      long long v255 = *(_OWORD *)(v132 + 16);
      *(_OWORD *)unint64_t v131 = *(_OWORD *)v132;
      *(_OWORD *)(v131 + 16) = v255;
      long long v256 = *(_OWORD *)(v132 + 32);
      long long v257 = *(_OWORD *)(v132 + 48);
      long long v258 = *(_OWORD *)(v132 + 64);
      *(unsigned char *)(v131 + 80) = *(unsigned char *)(v132 + 80);
      *(_OWORD *)(v131 + 48) = v257;
      *(_OWORD *)(v131 + 64) = v258;
      *(_OWORD *)(v131 + 32) = v256;
      char v191 = 10;
      break;
    case 0xBu:
      *(_OWORD *)unint64_t v131 = *(_OWORD *)v132;
      uint64_t v259 = (_OWORD *)((v131 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v260 = (_OWORD *)((v132 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v259 = *v260;
      unint64_t v261 = (_OWORD *)(((unint64_t)v259 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v262 = (_OWORD *)(((unint64_t)v260 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v261 = *v262;
      unint64_t v263 = (_OWORD *)(((unint64_t)v261 + v513 + 16) & v512);
      uint64_t v264 = (_OWORD *)(((unint64_t)v262 + v513 + 16) & v512);
      *unint64_t v263 = *v264;
      unint64_t v265 = ((unint64_t)v263 + v518) & v519;
      unint64_t v266 = ((unint64_t)v264 + v518) & v519;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 32))(v265, v266, v521);
      size_t v267 = (_OWORD *)((v520 + v265) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v268 = (_OWORD *)((v520 + v266) & 0xFFFFFFFFFFFFFFF8);
      *size_t v267 = *v268;
      int v269 = (_OWORD *)(((unint64_t)v267 + 23) & 0xFFFFFFFFFFFFFFF8);
      size_t v270 = (_OWORD *)(((unint64_t)v268 + 23) & 0xFFFFFFFFFFFFFFF8);
      *int v269 = *v270;
      uint64_t v271 = (_OWORD *)(((unint64_t)v269 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v272 = (_OWORD *)(((unint64_t)v270 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v271 = *v272;
      uint64_t v273 = (_OWORD *)(((unint64_t)v271 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v274 = (_OWORD *)(((unint64_t)v272 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v273 = *v274;
      uint64_t v275 = (void *)(((unint64_t)v273 + v523) & v524);
      uint64_t v276 = (const void *)(((unint64_t)v274 + v523) & v524);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v526 + 48))(v276, 1, v525))
      {
        memcpy(v275, v276, v77);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v526 + 32))(v275, v276, v525);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v526 + 56))(v275, 0, 1, v525);
      }
      v447 = (void *)(((unint64_t)v275 + v133) & 0xFFFFFFFFFFFFFFF8);
      v448 = (void *)(((unint64_t)v276 + v133) & 0xFFFFFFFFFFFFFFF8);
      void *v447 = *v448;
      v449 = (void *)(((unint64_t)v447 + 15) & 0xFFFFFFFFFFFFFFF8);
      v450 = (void *)(((unint64_t)v448 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v449 = *v450;
      v451 = (void *)(((unint64_t)v449 + 15) & 0xFFFFFFFFFFFFFFF8);
      v452 = (void *)(((unint64_t)v450 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v451 = *v452;
      v453 = (void *)(((unint64_t)v451 + 15) & 0xFFFFFFFFFFFFFFF8);
      v454 = (void *)(((unint64_t)v452 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v453 = *v454;
      v455 = (void *)(((unint64_t)v453 + 15) & 0xFFFFFFFFFFFFFFF8);
      v456 = (void *)(((unint64_t)v454 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v455 = *v456;
      v457 = (void *)(((unint64_t)v455 + 15) & 0xFFFFFFFFFFFFFFF8);
      v458 = (void *)(((unint64_t)v456 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v457 = *v458;
      *(void *)(((unint64_t)v457 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v458 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v191 = 11;
      break;
    default:
      *(_OWORD *)unint64_t v131 = *(_OWORD *)v132;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 32))((v518 + v131) & v519, (v518 + v132) & v519, v521);
      uint64_t v176 = (_OWORD *)((v520 + ((v518 + v131) & v519)) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v177 = (_OWORD *)((v520 + ((v518 + v132) & v519)) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v176 = *v177;
      unsigned __int8 v178 = (_OWORD *)(((unint64_t)v176 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v179 = (_OWORD *)(((unint64_t)v177 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unsigned __int8 v178 = *v179;
      size_t v180 = (_OWORD *)(((unint64_t)v178 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v181 = (_OWORD *)(((unint64_t)v179 + 23) & 0xFFFFFFFFFFFFFFF8);
      *size_t v180 = *v181;
      unint64_t v182 = (_OWORD *)(((unint64_t)v180 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v183 = (_OWORD *)(((unint64_t)v181 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v182 = *v183;
      uint64_t v184 = (void *)(((unint64_t)v182 + v523) & v524);
      uint64_t v185 = (const void *)(((unint64_t)v183 + v523) & v524);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v526 + 48))(v185, 1, v525))
      {
        memcpy(v184, v185, v77);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v526 + 32))(v184, v185, v525);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v526 + 56))(v184, 0, 1, v525);
      }
      char v191 = 0;
      v433 = (void *)(((unint64_t)v184 + v133) & 0xFFFFFFFFFFFFFFF8);
      v434 = (void *)(((unint64_t)v185 + v133) & 0xFFFFFFFFFFFFFFF8);
      void *v433 = *v434;
      v435 = (void *)(((unint64_t)v433 + 15) & 0xFFFFFFFFFFFFFFF8);
      v436 = (void *)(((unint64_t)v434 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v435 = *v436;
      v437 = (void *)(((unint64_t)v435 + 15) & 0xFFFFFFFFFFFFFFF8);
      v438 = (void *)(((unint64_t)v436 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v437 = *v438;
      v439 = (void *)(((unint64_t)v437 + 15) & 0xFFFFFFFFFFFFFFF8);
      v440 = (void *)(((unint64_t)v438 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v439 = *v440;
      v441 = (void *)(((unint64_t)v439 + 15) & 0xFFFFFFFFFFFFFFF8);
      v442 = (void *)(((unint64_t)v440 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v441 = *v442;
      v443 = (void *)(((unint64_t)v441 + 15) & 0xFFFFFFFFFFFFFFF8);
      v444 = (void *)(((unint64_t)v442 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v443 = *v444;
      *(void *)(((unint64_t)v443 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v444 + 15) & 0xFFFFFFFFFFFFFFF8);
      break;
  }
  *(unsigned char *)(v131 + v141) = v191;
  v465 = (_OWORD *)(((v131 | 7) + v141 + 1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v466 = (_OWORD *)(((v132 | 7) + v141 + 1) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v465 = *v466;
  *(void *)(((unint64_t)v465 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v466 + 23) & 0xFFFFFFFFFFFFFFF8);
  return v583;
}

uint64_t sub_1C031349C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v59 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v3 = *(_DWORD *)(v59 + 84);
  uint64_t v54 = sub_1C151928C();
  uint64_t v4 = *(void *)(v54 - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  unsigned int v53 = v6;
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v55 = v7;
  unsigned int v56 = v3;
  if (v7 <= v3) {
    unsigned int v8 = v3;
  }
  else {
    unsigned int v8 = v7;
  }
  if (v7 - 1 < v7) {
    unsigned int v9 = v7;
  }
  else {
    unsigned int v9 = v7 - 1;
  }
  uint64_t v10 = *(void *)(sub_1C151631C() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(sub_1C151D6DC() - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  int v15 = *(_DWORD *)(v13 + 84);
  uint64_t v58 = *(void *)(v13 + 64);
  uint64_t v16 = *(void *)(sub_1C1518CDC() - 8);
  uint64_t v17 = v16;
  if (v9 - 1 <= v8) {
    unsigned int v18 = v8;
  }
  else {
    unsigned int v18 = v9 - 1;
  }
  uint64_t v19 = *(void *)(v4 + 64);
  if (v5) {
    uint64_t v20 = v19 + 7;
  }
  else {
    uint64_t v20 = v19 + 8;
  }
  uint64_t v21 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v22 = v21 | 7;
  uint64_t v23 = *(void *)(v16 + 64);
  if (v15) {
    uint64_t v24 = v58;
  }
  else {
    uint64_t v24 = v58 + 1;
  }
  uint64_t v25 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v26 = ((((((((((((((v24
                    + ((v14
                      + ((((((((v12 + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                        + 23) & 0xFFFFFFFFFFFFFFF8)
                      + 16) & ~v14)
                    + 7) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (*(_DWORD *)(v17 + 84)) {
    uint64_t v27 = v23;
  }
  else {
    uint64_t v27 = v23 + 1;
  }
  unint64_t v28 = ((v19
        + v21
        + ((((v21 + 176) & ~(v21 | 7))
          + v25
          + ((v27 + ((v27 + v21 + ((v21 + 48) & ~v21) + ((v21 + 16) & ~(v21 | 7))) & ~v21) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 8) & ~v25)) & ~v21)
      + v27;
  if (v26 > v28) {
    unint64_t v28 = ((((((((((((((v24
  }
                      + ((v14
                        + ((((((((v12 + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                            + 23) & 0xFFFFFFFFFFFFFFF8)
                          + 23) & 0xFFFFFFFFFFFFFFF8)
                        + 16) & ~v14)
                      + 7) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v29 = v26 + (((v14 | v11) & 0xF8 ^ 0x1F8) & ((v14 | v11) + 48));
  if (v28 > v29) {
    unint64_t v29 = v28;
  }
  if (v29 <= 0x90) {
    uint64_t v30 = 144;
  }
  else {
    uint64_t v30 = v29;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v31 = v25 | 7;
  uint64_t v32 = (v25 | 7) + *(void *)(v59 + 64);
  uint64_t v33 = v25 + 16;
  uint64_t v34 = v19 + v25;
  uint64_t v35 = v22 | v14 | v11 | v25;
  unint64_t v36 = (v32 & ~(v25 | 7))
      + v35
      + ((((((((v20 + ((v19 + v25 + ((v19 + v25 + ((v25 + 16) & ~v25)) & ~v25)) & ~v25)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v37 = ((v25 + 128) & ~v25) + v19 + (v25 | 7);
  uint64_t v38 = a1;
  if (a2 <= v18) {
    goto LABEL_52;
  }
  unint64_t v39 = ((((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + v35 + ((v37 + ((v25 + 48) & ~v31)) & ~v31) + 8) & ~v35)
      + (v36 & ~v35)
      + (((v30 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v30 = (8 * v39);
  if (v39 > 3) {
    goto LABEL_34;
  }
  unsigned int v42 = ((a2 - v18 + ~(-1 << (8 * v39))) >> (8 * v39)) + 1;
  if (HIWORD(v42))
  {
    int v40 = *(_DWORD *)((char *)a1 + v39);
    if (v40) {
      goto LABEL_42;
    }
  }
  else
  {
    if (v42 <= 0xFF)
    {
      if (v42 < 2) {
        goto LABEL_52;
      }
LABEL_34:
      int v40 = *((unsigned __int8 *)a1 + v39);
      if (!*((unsigned char *)a1 + v39)) {
        goto LABEL_52;
      }
LABEL_42:
      int v43 = (v40 - 1) << (8 * v39);
      if (v39 > 3) {
        int v43 = 0;
      }
      if (v39)
      {
        if (v39 <= 3) {
          int v44 = v39;
        }
        else {
          int v44 = 4;
        }
        switch(v44)
        {
          case 2:
            int v45 = *a1;
            break;
          case 3:
            int v45 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v45 = *(_DWORD *)a1;
            break;
          default:
            int v45 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v45 = 0;
      }
      return v18 + (v45 | v43) + 1;
    }
    int v40 = *(unsigned __int16 *)((char *)a1 + v39);
    if (*(unsigned __int16 *)((char *)a1 + v39)) {
      goto LABEL_42;
    }
  }
LABEL_52:
  uint64_t v46 = ~v31;
  if (v8 < v9 - 1)
  {
    if ((v9 & 0x80000000) != 0)
    {
      unsigned int v48 = (*(uint64_t (**)(unint64_t, void, uint64_t, uint64_t))(v4 + 48))((v37 + ((v31 + (((unint64_t)a1 + v36) & ~v35) + 48) & v46)) & v46, v5, v54, v30);
    }
    else
    {
      unint64_t v47 = *(void *)((((unint64_t)a1 + v36) & ~v35) + 8);
      if (v47 >= 0xFFFFFFFF) {
        LODWORD(v47) = -1;
      }
      unsigned int v48 = v47 + 1;
    }
    goto LABEL_68;
  }
  if (v56 >= v55)
  {
    uint64_t v50 = *(uint64_t (**)(unsigned __int16 *))(v59 + 48);
    return v50(v38);
  }
  uint64_t v49 = ~v25;
  uint64_t v38 = (unsigned __int16 *)((v33 + (((unint64_t)a1 + v32) & v46)) & v49);
  if (v5 >= 0x7FFFFFFF)
  {
    uint64_t v50 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
    return v50(v38);
  }
  unint64_t v51 = (v34 + (((unint64_t)v38 + v34) & v49)) & v49;
  if (v53 == v55)
  {
    unsigned int v48 = (*(uint64_t (**)(unint64_t, void, uint64_t, uint64_t))(v4 + 48))(v51, v5, v54, v30);
LABEL_68:
    if (v48 >= 2) {
      return v48 - 1;
    }
    else {
      return 0;
    }
  }
  unint64_t v52 = *(void *)((v51 + v19 + (v5 == 0) + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v52 >= 0xFFFFFFFF) {
    LODWORD(v52) = -1;
  }
  return (v52 + 1);
}

void sub_1C0313B08(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v75 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v4 = *(_DWORD *)(v75 + 84);
  uint64_t v5 = *(void *)(sub_1C151928C() - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  unsigned int v68 = v7;
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  unsigned int v70 = v4;
  unsigned int v71 = v8;
  if (v8 <= v4) {
    unsigned int v9 = v4;
  }
  else {
    unsigned int v9 = v8;
  }
  if (v8 - 1 < v8) {
    unsigned int v10 = v8;
  }
  else {
    unsigned int v10 = v8 - 1;
  }
  uint64_t v11 = *(void *)(sub_1C151631C() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(sub_1C151D6DC() - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  int v16 = *(_DWORD *)(v14 + 84);
  uint64_t v74 = *(void *)(v14 + 64);
  int v79 = 0;
  uint64_t v17 = *(void *)(sub_1C1518CDC() - 8);
  unsigned int v72 = v10;
  unsigned int v73 = v9;
  unsigned int v18 = v10 - 1;
  if (v10 - 1 <= v9) {
    unsigned int v19 = v9;
  }
  else {
    unsigned int v19 = v10 - 1;
  }
  unsigned int v69 = v6;
  uint64_t v20 = *(void *)(v5 + 64);
  if (v6) {
    uint64_t v21 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v21 = v20 + 1;
  }
  uint64_t v22 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v23 = *(void *)(v17 + 64);
  if (v16) {
    uint64_t v24 = v74;
  }
  else {
    uint64_t v24 = v74 + 1;
  }
  BOOL v25 = *(_DWORD *)(v17 + 84) == 0;
  uint64_t v26 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v27 = v26 | 7;
  uint64_t v28 = (v26 | 7) + *(void *)(v75 + 64);
  uint64_t v29 = v26 + 16;
  uint64_t v30 = v20 + v26;
  uint64_t v31 = v21 + ((v20 + v26 + ((v20 + v26 + ((v26 + 16) & ~v26)) & ~v26)) & ~v26);
  uint64_t v32 = (v28 & ~(v26 | 7)) + 8;
  uint64_t v33 = v22 | 7 | v15 | v12 | v26;
  unint64_t v34 = v32
      + v33
      + ((((((((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = ((v26 + 128) & ~v26) + v20 + (v26 | 7);
  size_t v36 = ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v37 = v24
      + ((v15
        + ((((((((v13 + ((v12 + 16) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v15);
  if (v25) {
    ++v23;
  }
  unint64_t v38 = ((v20
        + v22
        + ((((v22 + 176) & ~(v22 | 7))
          + v26
          + ((v23 + ((v23 + v22 + ((v22 + 48) & ~v22) + ((v22 + 16) & ~(v22 | 7))) & ~v22) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 8) & ~v26)) & ~v22)
      + v23;
  unint64_t v39 = ((((((((((((((v37 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v39 > v38) {
    unint64_t v38 = ((((((((((((((v37 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
  }
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v40 = v39 + (((v15 | v12) & 0xF8 ^ 0x1F8) & ((v15 | v12) + 48));
  uint64_t v41 = (v33 + v36 + ((v35 + ((v26 + 48) & ~(v26 | 7))) & ~(v26 | 7))) & ~v33;
  if (v38 <= v40) {
    unint64_t v38 = v40;
  }
  if (v38 <= 0x90) {
    uint64_t v42 = 144;
  }
  else {
    uint64_t v42 = v38;
  }
  int v43 = v41 + 8;
  size_t v44 = v41 + 8 + (v34 & ~v33) + (((v42 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  if (a3 > v19)
  {
    if (v44 <= 3)
    {
      unsigned int v46 = ((a3 - v19 + ~(-1 << (8 * v44))) >> (8 * v44)) + 1;
      if (HIWORD(v46))
      {
        int v45 = 4;
      }
      else if (v46 >= 0x100)
      {
        int v45 = 2;
      }
      else
      {
        int v45 = v46 > 1;
      }
    }
    else
    {
      int v45 = 1;
    }
    int v79 = v45;
  }
  if (v19 < a2)
  {
    unsigned int v47 = ~v19 + a2;
    if (v44 < 4)
    {
      int v48 = (v47 >> (8 * v44)) + 1;
      if (v44)
      {
        int v53 = v47 & ~(-1 << (8 * v44));
        bzero(a1, v44);
        if (v44 == 3)
        {
          *(_WORD *)a1 = v53;
          a1[2] = BYTE2(v53);
        }
        else if (v44 == 2)
        {
          *(_WORD *)a1 = v53;
        }
        else
        {
          *a1 = v53;
        }
      }
    }
    else
    {
      bzero(a1, v44);
      *(_DWORD *)a1 = v47;
      int v48 = 1;
    }
    switch(v79)
    {
      case 1:
        a1[v44] = v48;
        return;
      case 2:
        *(_WORD *)&a1[v44] = v48;
        return;
      case 3:
        goto LABEL_111;
      case 4:
        *(_DWORD *)&a1[v44] = v48;
        return;
      default:
        return;
    }
  }
  uint64_t v49 = ~v26;
  uint64_t v50 = ~v27;
  uint64_t v51 = ~v33;
  unint64_t v52 = a1;
  switch(v79)
  {
    case 1:
      a1[v44] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_51;
    case 2:
      *(_WORD *)&a1[v44] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_51;
    case 3:
LABEL_111:
      __break(1u);
      JUMPOUT(0x1C031434CLL);
    case 4:
      *(_DWORD *)&a1[v44] = 0;
      goto LABEL_50;
    default:
LABEL_50:
      if (!a2) {
        return;
      }
LABEL_51:
      if (v73 >= v18)
      {
        if (v73 >= a2)
        {
          if (v70 >= v71)
          {
            size_t v64 = *(void (**)(unsigned char *, uint64_t))(v75 + 56);
            int v65 = a1;
            uint64_t v66 = a2;
            goto LABEL_106;
          }
          unint64_t v52 = (unsigned char *)((unint64_t)&a1[v28] & v50);
          if (a2 <= v71)
          {
            int v65 = (unsigned char *)((unint64_t)&v52[v29] & v49);
            if (v69 < 0x7FFFFFFF)
            {
              int v65 = (unsigned char *)((v30 + ((unint64_t)&v65[v30] & v49)) & v49);
              if (v68 != v71)
              {
                if ((a2 & 0x80000000) != 0) {
                  uint64_t v67 = a2 ^ 0x80000000;
                }
                else {
                  uint64_t v67 = a2 - 1;
                }
                *(void *)((unint64_t)&v65[v21 + 7] & 0xFFFFFFFFFFFFFFF8) = v67;
                return;
              }
              uint64_t v66 = a2 + 1;
              size_t v64 = *(void (**)(unsigned char *, uint64_t))(v5 + 56);
            }
            else
            {
              size_t v64 = *(void (**)(unsigned char *, uint64_t))(v5 + 56);
              uint64_t v66 = a2;
            }
            goto LABEL_106;
          }
          int v63 = (((((((v31 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8;
          size_t v36 = (v63 + 8);
          if (v63 == -8) {
            return;
          }
          unsigned int v58 = v71;
        }
        else
        {
          size_t v36 = v32
              + ((((((((v31 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8);
          if (!v36) {
            return;
          }
          unsigned int v58 = v73;
        }
        int v59 = ~v58 + a2;
LABEL_66:
        int v60 = v52;
LABEL_75:
        bzero(v60, v36);
        *(_DWORD *)unint64_t v52 = v59;
        return;
      }
      unint64_t v52 = (unsigned char *)((unint64_t)&a1[v34] & v51);
      unsigned int v54 = v43 + (((v42 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8);
      if (v18 < a2)
      {
        if (v54 <= 3) {
          int v55 = ~(-1 << (8 * v54));
        }
        else {
          int v55 = -1;
        }
        if (v54)
        {
          int v56 = v55 & (a2 - v72);
          if (v54 <= 3) {
            int v57 = v43 + (((v42 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8);
          }
          else {
            int v57 = 4;
          }
          bzero(v52, v43 + (((v42 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8));
          switch(v57)
          {
            case 2:
              *(_WORD *)unint64_t v52 = v56;
              break;
            case 3:
              *(_WORD *)unint64_t v52 = v56;
              v52[2] = BYTE2(v56);
              break;
            case 4:
              *(_DWORD *)unint64_t v52 = v56;
              break;
            default:
              *unint64_t v52 = v56;
              break;
          }
        }
        return;
      }
      unsigned int v61 = a2 + 1;
      if (a2 + 1 > v72)
      {
        if (!v54) {
          return;
        }
        if (v54 <= 3) {
          int v62 = ~(-1 << (8 * v54));
        }
        else {
          int v62 = -1;
        }
        int v59 = v62 & (a2 - v72);
        int v60 = (void *)((unint64_t)&a1[v34] & v51);
        size_t v36 = v43 + (((v42 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8);
        goto LABEL_75;
      }
      if (a2 == -1) {
        return;
      }
      if ((v72 & 0x80000000) == 0)
      {
        if ((v61 & 0x80000000) != 0)
        {
          *(void *)(((unint64_t)&a1[v34] & v51) + 8) = 0;
          *(void *)(((unint64_t)&a1[v34] & v51) + 0x10) = 0;
          *(unsigned char *)(((unint64_t)&a1[v34] & v51) + 0x18) = 0;
          *(void *)unint64_t v52 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *(void *)(((unint64_t)&a1[v34] & v51) + 8) = a2;
        }
        return;
      }
      unint64_t v52 = (unsigned char *)((v35 + ((unint64_t)&v52[v27 + 48] & v50)) & v50);
      if (v61 > v71)
      {
        if (!v36) {
          return;
        }
        int v59 = a2 - v71;
        goto LABEL_66;
      }
      size_t v64 = *(void (**)(unsigned char *, uint64_t))(v5 + 56);
      int v65 = v52;
      uint64_t v66 = a2 + 1;
LABEL_106:
      v64(v65, v66);
      return;
  }
}

uint64_t type metadata accessor for DebugFormatObject()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C031439C()
{
  if (!qword_1EA1A5240)
  {
    type metadata accessor for DebugFormatCacheFile();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A5240);
    }
  }
}

uint64_t sub_1C03143F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C69466568636163 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C03144EC(char a1)
{
  if (a1) {
    return 0x6C69466568636163;
  }
  else {
    return 0x7463656A626FLL;
  }
}

uint64_t sub_1C0314524(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  v10[0] = a2;
  v10[1] = v3;
  type metadata accessor for DebugFormatObject.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1C152083C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = (char *)v10 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  char v12 = 0;
  type metadata accessor for FormatObject();
  swift_getWitnessTable();
  uint64_t v8 = v10[3];
  sub_1C152080C();
  if (!v8)
  {
    char v11 = 1;
    type metadata accessor for DebugFormatCacheFile();
    sub_1C0314D10(qword_1EA199A80);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0314738@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  sub_1C031439C();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for FormatObject();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v27 = (char *)&v20 - v5;
  type metadata accessor for DebugFormatObject.CodingKeys();
  swift_getWitnessTable();
  uint64_t v28 = sub_1C152072C();
  uint64_t v25 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  unsigned int v7 = (char *)&v20 - v6;
  uint64_t v8 = type metadata accessor for DebugFormatObject();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unsigned int v10 = (char *)&v20 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  char v11 = v29;
  sub_1C1520EBC();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v12 = v10;
  uint64_t v14 = v23;
  uint64_t v13 = (uint64_t)v24;
  char v31 = 0;
  uint64_t v15 = v26;
  swift_getWitnessTable();
  sub_1C15206EC();
  int v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v29 = v12;
  v16(v12, v27, v15);
  type metadata accessor for DebugFormatCacheFile();
  char v30 = 1;
  sub_1C0314D10(&qword_1EA199A78);
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v28);
  uint64_t v17 = v29;
  sub_1C0314CAC(v13, (uint64_t)&v29[*(int *)(v8 + 36)]);
  uint64_t v18 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v22, v17, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v17, v8);
}

uint64_t sub_1C0314B74()
{
  return sub_1C03144EC(*v0);
}

uint64_t sub_1C0314B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C03143F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0314BB4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C0314C08(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C0314C5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0314738(a1, a2);
}

uint64_t sub_1C0314C7C(void *a1, uint64_t a2)
{
  return sub_1C0314524(a1, a2);
}

uint64_t type metadata accessor for DebugFormatObject.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C0314CAC(uint64_t a1, uint64_t a2)
{
  sub_1C031439C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0314D10(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DebugFormatCacheFile();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *sub_1C0314D54(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0314E20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C0314E48()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0314E64()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0314E80()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for FormatInspectionIdentifier()
{
  return &type metadata for FormatInspectionIdentifier;
}

id FeedLayoutFailure.error.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t FeedLayoutFailure.explanation.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t dispatch thunk of FeedLayoutTrackerType.trackFeedDidFailSubgroupLayout(subgroup:failure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t destroy for FeedLayoutFailure(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed17FeedLayoutFailureVwCP_0(void *a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  id v5 = *(id *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *a1 = v4;
  a1[1] = v7;
  a1[2] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedLayoutFailure(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  id v5 = *(id *)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedLayoutFailure(uint64_t a1, void *a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedLayoutFailure()
{
  return &type metadata for FeedLayoutFailure;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatJsonKeyValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for FormatJson();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 8u:
      case 0xAu:
        *uint64_t v7 = *v8;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v12 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v12;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v13 = sub_1C1515FDC();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *uint64_t v7 = *v8;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v14 = (void *)*v8;
        *uint64_t v7 = *v8;
        id v15 = v14;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  return v3;
}

void destroy for FormatJsonKeyValue(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  int v4 = (void **)(a1 + *(int *)(a2 + 20));
  type metadata accessor for FormatJson();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 5u:
    case 8u:
    case 0xAu:
      swift_bridgeObjectRelease();
      break;
    case 6u:
      uint64_t v5 = sub_1C1515FDC();
      uint64_t v6 = *(void (**)(void **, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(v4, v5);
      break;
    case 7u:
      swift_release();
      break;
    case 9u:
      uint64_t v7 = *v4;

      break;
    default:
      return;
  }
}

void *initializeWithCopy for FormatJsonKeyValue(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  uint64_t v8 = type metadata accessor for FormatJson();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 8u:
    case 0xAu:
      *uint64_t v6 = *v7;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 5u:
      uint64_t v9 = v7[1];
      *uint64_t v6 = *v7;
      v6[1] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 6u:
      uint64_t v10 = sub_1C1515FDC();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v6, v7, v10);
      goto LABEL_8;
    case 7u:
      *uint64_t v6 = *v7;
      swift_retain();
      goto LABEL_8;
    case 9u:
      char v11 = (void *)*v7;
      *uint64_t v6 = *v7;
      id v12 = v11;
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for FormatJsonKeyValue(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1C0315844((uint64_t)a1 + v6);
    uint64_t v9 = type metadata accessor for FormatJson();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 8u:
      case 0xAu:
        *uint64_t v7 = *v8;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 5u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 6u:
        uint64_t v10 = sub_1C1515FDC();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
        goto LABEL_9;
      case 7u:
        *uint64_t v7 = *v8;
        swift_retain();
        goto LABEL_9;
      case 9u:
        char v11 = (void *)*v8;
        *uint64_t v7 = *v8;
        id v12 = v11;
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C0315844(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatJson();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for FormatJsonKeyValue(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for FormatJson();
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    uint64_t v8 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for FormatJsonKeyValue(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1C0315844((uint64_t)a1 + v7);
    uint64_t v10 = type metadata accessor for FormatJson();
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v11 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatJsonKeyValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0315A74);
}

uint64_t sub_1C0315A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatJson();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatJsonKeyValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0315B38);
}

uint64_t sub_1C0315B38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatJson();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FormatJsonKeyValue()
{
  uint64_t result = qword_1EB870460;
  if (!qword_1EB870460) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0315C2C()
{
  uint64_t result = type metadata accessor for FormatJson();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static FormatDateTime.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1 >> 62)
  {
    case 1uLL:
      if (v3 >> 62 != 1) {
        goto LABEL_23;
      }
      uint64_t v12 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v11 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v14 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v13 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFF58F10(*a2);
      sub_1BFF58F10(v2);
      swift_bridgeObjectRetain();
      sub_1BFF58F10(v11);
      swift_bridgeObjectRetain();
      sub_1BFF58F10(v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v15 = sub_1C00DE998(v12, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1BFF07CD8(v13);
        swift_bridgeObjectRelease();
        sub_1BFF07CD8(v11);
        goto LABEL_24;
      }
      *(void *)&long long v21 = v11;
      *(void *)&long long v18 = v13;
      char v16 = static FormatDateTime.== infix(_:_:)(&v21, &v18);
      swift_bridgeObjectRelease();
      sub_1BFF07CD8(v13);
      swift_bridgeObjectRelease();
      sub_1BFF07CD8(v11);
      sub_1BFF07CD8(v2);
      sub_1BFF07CD8(v3);
      if ((v16 & 1) == 0) {
        goto LABEL_25;
      }
      char v8 = 1;
      return v8 & 1;
    case 2uLL:
      if (v3 >> 62 != 2) {
        goto LABEL_23;
      }
      if (*(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10)
        && *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18))
      {
        char v8 = 1;
      }
      else
      {
        char v8 = sub_1C1520A9C();
      }
      sub_1BFF58F10(v3);
      sub_1BFF58F10(v2);
      goto LABEL_28;
    case 3uLL:
      if (v2 == 0xC000000000000000)
      {
        if (v3 == 0xC000000000000000)
        {
          sub_1BFF07CD8(0xC000000000000000);
          unint64_t v10 = 0xC000000000000000;
          goto LABEL_22;
        }
      }
      else if (v2 == 0xC000000000000008)
      {
        if (v3 == 0xC000000000000008)
        {
          sub_1BFF07CD8(0xC000000000000008);
          unint64_t v10 = 0xC000000000000008;
LABEL_22:
          sub_1BFF07CD8(v10);
          char v8 = 1;
          return v8 & 1;
        }
      }
      else if (v3 == 0xC000000000000010)
      {
        sub_1BFF07CD8(0xC000000000000010);
        unint64_t v10 = 0xC000000000000010;
        goto LABEL_22;
      }
LABEL_23:
      sub_1BFF58F10(*a2);
      sub_1BFF58F10(v2);
LABEL_24:
      sub_1BFF07CD8(v2);
      sub_1BFF07CD8(v3);
LABEL_25:
      char v8 = 0;
      return v8 & 1;
    default:
      if (v3 >> 62) {
        goto LABEL_23;
      }
      char v4 = *(unsigned char *)(v2 + 40);
      uint64_t v5 = *(void *)(v2 + 32);
      uint64_t v6 = *(void *)(v3 + 32);
      char v7 = *(unsigned char *)(v3 + 40);
      long long v21 = *(_OWORD *)(v2 + 16);
      uint64_t v22 = v5;
      char v23 = v4;
      long long v18 = *(_OWORD *)(v3 + 16);
      uint64_t v19 = v6;
      char v20 = v7;
      sub_1BFF58F10(v3);
      sub_1BFF58F10(v2);
      char v8 = _s8NewsFeed21FormatDateTimeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v21, (uint64_t)&v18);
LABEL_28:
      sub_1BFF07CD8(v2);
      sub_1BFF07CD8(v3);
      return v8 & 1;
  }
}

unint64_t sub_1C0315F94(void *a1)
{
  return FormatDateTime.encode(to:)(a1);
}

uint64_t sub_1C0315FB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v90 = a2;
  sub_1BFEE9DCC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v89 - v8;
  uint64_t v10 = sub_1C151631C();
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v92 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v89 - v14;
  MEMORY[0x1F4188790](v16);
  long long v18 = (char *)&v89 - v17;
  MEMORY[0x1F4188790](v19);
  long long v21 = (char *)&v89 - v20;
  sub_1BFEE9DCC(0, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  MEMORY[0x1F4188790](v22 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v89 - v25;
  uint64_t v27 = *v2;
  switch((unint64_t)*v2 >> 62)
  {
    case 1uLL:
      uint64_t v35 = v24;
      unint64_t v36 = *(void *)((v27 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_bridgeObjectRetain();
      sub_1BFF58F10(v36);
      sub_1BFF58F10(v36);
      uint64_t v37 = v93;
      sub_1C121C9E0(a1, v36, (uint64_t)v9);
      if (v37)
      {
        swift_bridgeObjectRelease();
        sub_1BFF07CD8(v36);
        uint64_t result = sub_1BFF07CD8(v36);
      }
      else
      {
        sub_1BFF07CD8(v36);
        uint64_t v69 = v91;
        uint64_t v68 = v92;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v9, 1, v92) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v18, v9, v68);
          uint64_t v82 = type metadata accessor for FormatVersionRequirement(0);
          uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56);
          uint64_t v89 = v35;
          v83(v35, 1, 1, v82);
          sub_1BFF29220();
          uint64_t v85 = v84;
          uint64_t v86 = swift_allocBox();
          uint64_t v88 = v87;
          (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v87, v18, v68);
          *(void *)(v88 + *(int *)(v85 + 36)) = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRelease();
          sub_1BFF07CD8(v36);
          (*(void (**)(char *, uint64_t))(v69 + 8))(v18, v68);
          int v53 = v90;
          *int v90 = v86 | 0x2000000000000000;
          v53[1] = 1;
          uint64_t v54 = type metadata accessor for FormatOptionsNodeStatementResult();
          uint64_t v55 = (uint64_t)v53 + *(int *)(v54 + 24);
          uint64_t v56 = v89;
          goto LABEL_24;
        }
        swift_bridgeObjectRelease();
        sub_1BFF07CD8(v36);
        sub_1BFE54718((uint64_t)v9, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        uint64_t v70 = type metadata accessor for FormatOptionsNodeStatementResult();
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v90, 1, 1, v70);
      }
      break;
    case 2uLL:
      uint64_t v38 = v24;
      if (qword_1EB882038 != -1) {
        swift_once();
      }
      unint64_t v39 = (void *)qword_1EB93C7C8;
      unint64_t v40 = (void *)sub_1C151E5EC();
      id v41 = objc_msgSend(v39, sel_dateFromString_, v40);

      uint64_t v42 = v91;
      if (v41)
      {
        sub_1C15162BC();

        int v43 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
        size_t v44 = v12;
        uint64_t v45 = v92;
        v43(v6, v44, v92);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v6, 0, 1, v45);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v6, 1, v45) != 1)
        {
          v43(v15, v6, v45);
          uint64_t v46 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v38, 1, 1, v46);
          sub_1BFF29220();
          uint64_t v48 = v47;
          uint64_t v49 = swift_allocBox();
          uint64_t v51 = v50;
          (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v50, v15, v45);
          *(void *)(v51 + *(int *)(v48 + 36)) = MEMORY[0x1E4FBC860];
          uint64_t v52 = v49 | 0x2000000000000000;
          (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v45);
          int v53 = v90;
          *int v90 = v52;
          v53[1] = 1;
          uint64_t v54 = type metadata accessor for FormatOptionsNodeStatementResult();
          uint64_t v55 = (uint64_t)v53 + *(int *)(v54 + 24);
          uint64_t v56 = v38;
          goto LABEL_24;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56))(v6, 1, 1, v92);
      }
      sub_1BFE54718((uint64_t)v6, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      uint64_t v71 = type metadata accessor for FormatOptionsNodeStatementResult();
      uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v90, 1, 1, v71);
      break;
    case 3uLL:
      uint64_t v57 = v24;
      if (v27 == 0xC000000000000000)
      {
        uint64_t v72 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v57, 1, 1, v72);
        sub_1C15162CC();
        sub_1BFF29220();
        uint64_t v74 = v73;
        uint64_t v76 = swift_allocBox();
        uint64_t v77 = v75;
        uint64_t v58 = v91;
      }
      else
      {
        uint64_t v58 = v91;
        if (v27 == 0xC000000000000008)
        {
          uint64_t v59 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v57, 1, 1, v59);
          sub_1C15161DC();
        }
        else
        {
          uint64_t v78 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v57, 1, 1, v78);
          sub_1C15161BC();
        }
        sub_1BFF29220();
        uint64_t v74 = v79;
        uint64_t v76 = swift_allocBox();
        uint64_t v77 = v75;
      }
      uint64_t v80 = v92;
      (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v75, v12, v92);
      *(void *)(v77 + *(int *)(v74 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v81 = v76 | 0x2000000000000000;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v80);
      int v53 = v90;
      *int v90 = v81;
      v53[1] = 1;
      uint64_t v54 = type metadata accessor for FormatOptionsNodeStatementResult();
      uint64_t v55 = (uint64_t)v53 + *(int *)(v54 + 24);
      uint64_t v56 = v57;
      goto LABEL_24;
    default:
      uint64_t v28 = *(void *)(v27 + 16);
      uint64_t v29 = *(void *)(v27 + 24);
      uint64_t v30 = *(void *)(v27 + 32);
      char v31 = *(unsigned char *)(v27 + 40);
      uint64_t v32 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v26, 1, 1, v32);
      uint64_t v33 = v93;
      sub_1C121DD9C(a1, v28, v29, v30, v31, (uint64_t)v21);
      if (v33)
      {
        uint64_t result = sub_1BFE54718((uint64_t)v26, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
      }
      else
      {
        sub_1BFF29220();
        uint64_t v61 = v60;
        uint64_t v62 = swift_allocBox();
        uint64_t v64 = v63;
        uint64_t v65 = v91;
        uint64_t v66 = v92;
        (*(void (**)(uint64_t, char *, uint64_t))(v91 + 16))(v63, v21, v92);
        *(void *)(v64 + *(int *)(v61 + 36)) = MEMORY[0x1E4FBC860];
        uint64_t v67 = v62 | 0x2000000000000000;
        (*(void (**)(char *, uint64_t))(v65 + 8))(v21, v66);
        int v53 = v90;
        *int v90 = v67;
        v53[1] = 0;
        uint64_t v54 = type metadata accessor for FormatOptionsNodeStatementResult();
        uint64_t v55 = (uint64_t)v53 + *(int *)(v54 + 24);
        uint64_t v56 = (uint64_t)v26;
LABEL_24:
        sub_1C0164368(v56, v55);
        uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
      }
      break;
  }
  return result;
}

uint64_t sub_1C03169C4(void *a1)
{
  return FormatDateTimeOffset.encode(to:)(a1);
}

uint64_t _s8NewsFeed20FormatDateTimeOffsetV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1C00DE998(v2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
    unint64_t v9 = v5;
    unint64_t v10 = v3;
    char v7 = static FormatDateTime.== infix(_:_:)(&v10, &v9);
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

unint64_t sub_1C0316A6C(uint64_t a1)
{
  unint64_t result = sub_1C0316A94();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0316A94()
{
  unint64_t result = qword_1EA199B08;
  if (!qword_1EA199B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B08);
  }
  return result;
}

uint64_t sub_1C0316AE8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0316C8C(a1, a2, a3, (uint64_t (*)(void))sub_1BFCBBF20, (uint64_t (*)(void))sub_1C0316B28, (uint64_t (*)(void))sub_1C0316B7C);
}

unint64_t sub_1C0316B28()
{
  unint64_t result = qword_1EB865B40;
  if (!qword_1EB865B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B40);
  }
  return result;
}

unint64_t sub_1C0316B7C()
{
  unint64_t result = qword_1EA199B10;
  if (!qword_1EA199B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B10);
  }
  return result;
}

unint64_t sub_1C0316BD0(uint64_t a1)
{
  unint64_t result = sub_1C0316BF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0316BF8()
{
  unint64_t result = qword_1EA199B18;
  if (!qword_1EA199B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B18);
  }
  return result;
}

uint64_t sub_1C0316C4C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0316C8C(a1, a2, a3, (uint64_t (*)(void))sub_1BFD019A8, (uint64_t (*)(void))sub_1C0316CE0, (uint64_t (*)(void))sub_1C0316D34);
}

uint64_t sub_1C0316C8C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0316CE0()
{
  unint64_t result = qword_1EB866A70;
  if (!qword_1EB866A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866A70);
  }
  return result;
}

unint64_t sub_1C0316D34()
{
  unint64_t result = qword_1EA199B20;
  if (!qword_1EA199B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B20);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDateTime()
{
  return &type metadata for FormatDateTime;
}

unint64_t destroy for FormatDateTimeOffset(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 8);
  return sub_1BFF07CD8(v2);
}

void *_s8NewsFeed20FormatDateTimeOffsetVwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  *a1 = *a2;
  swift_bridgeObjectRetain();
  sub_1BFF58F10(v3);
  a1[1] = v3;
  return a1;
}

void *assignWithCopy for FormatDateTimeOffset(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = a2[1];
  sub_1BFF58F10(v4);
  unint64_t v5 = a1[1];
  a1[1] = v4;
  sub_1BFF07CD8(v5);
  return a1;
}

void *assignWithTake for FormatDateTimeOffset(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  unint64_t v4 = a1[1];
  a1[1] = a2[1];
  sub_1BFF07CD8(v4);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDateTimeOffset()
{
  return &type metadata for FormatDateTimeOffset;
}

ValueMetadata *type metadata accessor for SportsStandingRecordEmbed()
{
  return &type metadata for SportsStandingRecordEmbed;
}

uint64_t sub_1C0316EDC(void *a1)
{
  sub_1C03175C0(0, &qword_1EA199B58, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0317514();
  sub_1C1520F0C();
  v10[1] = v8;
  sub_1C0317624();
  sub_1C0317698();
  sub_1C03176F0();
  sub_1C1520BAC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C031704C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1C0317404();
  uint64_t v5 = v4;
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C03175C0(0, &qword_1EA199B40, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v17 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0317514();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    sub_1C0317568();
    sub_1C15206EC();
    uint64_t v14 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v9);
    *uint64_t v16 = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C031728C()
{
  return 0x74697465706D6F63;
}

uint64_t sub_1C03172AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74697465706D6F63 && a2 == 0xEB0000000073726FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C031735C(uint64_t a1)
{
  unint64_t v2 = sub_1C0317514();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0317398(uint64_t a1)
{
  unint64_t v2 = sub_1C0317514();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C03173D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C031704C(a1, a2);
}

uint64_t sub_1C03173EC(void *a1)
{
  return sub_1C0316EDC(a1);
}

void sub_1C0317404()
{
  if (!qword_1EA199B28)
  {
    sub_1C031746C();
    sub_1C03174C0();
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA199B28);
    }
  }
}

unint64_t sub_1C031746C()
{
  unint64_t result = qword_1EA199B30;
  if (!qword_1EA199B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B30);
  }
  return result;
}

unint64_t sub_1C03174C0()
{
  unint64_t result = qword_1EA199B38;
  if (!qword_1EA199B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B38);
  }
  return result;
}

unint64_t sub_1C0317514()
{
  unint64_t result = qword_1EA199B48;
  if (!qword_1EA199B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B48);
  }
  return result;
}

unint64_t sub_1C0317568()
{
  unint64_t result = qword_1EA199B50;
  if (!qword_1EA199B50)
  {
    sub_1C0317404();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B50);
  }
  return result;
}

void sub_1C03175C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0317514();
    unint64_t v7 = a3(a1, &type metadata for SportsStandingRecordEmbed.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0317624()
{
  unint64_t result = qword_1EA199B60;
  if (!qword_1EA199B60)
  {
    sub_1C03175C0(255, &qword_1EA199B58, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B60);
  }
  return result;
}

void sub_1C0317698()
{
  if (!qword_1EA199B68)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA199B68);
    }
  }
}

unint64_t sub_1C03176F0()
{
  unint64_t result = qword_1EA199B70;
  if (!qword_1EA199B70)
  {
    sub_1C0317698();
    sub_1C03174C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsStandingRecordEmbed.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C03177FCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsStandingRecordEmbed.CodingKeys()
{
  return &type metadata for SportsStandingRecordEmbed.CodingKeys;
}

unint64_t sub_1C0317838()
{
  unint64_t result = qword_1EA199B78;
  if (!qword_1EA199B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B78);
  }
  return result;
}

unint64_t sub_1C0317890()
{
  unint64_t result = qword_1EA199B80;
  if (!qword_1EA199B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B80);
  }
  return result;
}

unint64_t sub_1C03178E8()
{
  unint64_t result = qword_1EA199B88;
  if (!qword_1EA199B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B88);
  }
  return result;
}

BOOL static FollowingPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FollowingPosition.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FollowingPosition.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t FollowingManager.toggleFollowing(for:autoEnableNotifications:)(void *a1, char a2)
{
  if (objc_msgSend(*(id *)(v2 + 24), sel_hasSubscriptionToTag_, a1))
  {
    return FollowingManager.unfollow(tag:)(a1);
  }
  else
  {
    return FollowingManager.follow(tag:autoEnableNotifications:source:)(a1, a2 & 1);
  }
}

uint64_t FollowingManager.unfollow(tag:)(void *a1)
{
  objc_msgSend(*(id *)(v1 + 24), sel_removeSubscriptionToTag_, a1);
  objc_msgSend(a1, sel_isSports);
  sub_1C03187E0(0, &qword_1EA199B90);
  swift_allocObject();
  sub_1C151908C();
  swift_release();
  sub_1C03187E0(0, &qword_1EA199B90);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t FollowingManager.follow(tag:autoEnableNotifications:source:)(void *a1, char a2)
{
  v13[5] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)v2[3];
  v13[0] = 0;
  objc_msgSend(v5, sel_addSubscriptionToTag_notificationsEnabled_error_, a1, 0, v13);
  if (!v13[0]) {
    return sub_1C0317D94(a1, a2 & 1);
  }
  id v6 = v13[0];
  if (objc_msgSend(v6, sel_code) == (id)1)
  {
    __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
    unint64_t v7 = (void *)sub_1C151AE2C();
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = objc_msgSend(v7, sel_rootViewController);

      if (v9)
      {
        uint64_t v10 = (void *)sub_1C151F49C();

        v13[3] = &type metadata for AlertSubscriptionLimitReached;
        v13[4] = (id)sub_1C0317FF4();
        sub_1C151C80C();
        swift_allocObject();
        sub_1C151C7CC();
        sub_1C151C7DC();

        swift_release();
      }
    }
  }
  sub_1C03187E0(0, &qword_1EA199B90);
  swift_allocObject();
  uint64_t v11 = sub_1C151906C();

  return v11;
}

uint64_t FollowingManager.toggleFollowing(for:autoEnableNotifications:source:)(void *a1, char a2)
{
  if (objc_msgSend(*(id *)(v2 + 24), sel_hasSubscriptionToTag_, a1))
  {
    return FollowingManager.unfollow(tag:)(a1);
  }
  else
  {
    return FollowingManager.follow(tag:autoEnableNotifications:source:)(a1, a2 & 1);
  }
}

uint64_t FollowingManager.follow(tag:autoEnableNotifications:)(void *a1, char a2)
{
  return FollowingManager.follow(tag:autoEnableNotifications:source:)(a1, a2);
}

uint64_t sub_1C0317D94(void *a1, char a2)
{
  id v4 = objc_msgSend(a1, sel_tagType);
  if (v4 == (id)1)
  {
    objc_msgSend(a1, sel_isSports);
LABEL_5:
    sub_1C03187E0(0, &qword_1EA199B90);
    swift_allocObject();
    return sub_1C151908C();
  }
  if (v4 != (id)2) {
    goto LABEL_5;
  }
  MEMORY[0x1F4188790](2);
  char v5 = a2 & 1;
  sub_1C151932C();
  id v6 = (void *)sub_1C151806C();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(unsigned char *)(v7 + 24) = v5;
  swift_unknownObjectRetain();
  sub_1C151900C();
  swift_release();

  swift_release();
  uint64_t v8 = (void *)sub_1C1518E7C();
  uint64_t v9 = sub_1C151903C();
  swift_release();

  return v9;
}

unint64_t sub_1C0317FF4()
{
  unint64_t result = qword_1EA199B98;
  if (!qword_1EA199B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199B98);
  }
  return result;
}

uint64_t sub_1C0318048(void *a1, void *a2, char a3)
{
  if (a1[2])
  {
    __swift_project_boxed_opaque_existential_1(a1 + 4, a1[7]);
    swift_unknownObjectRetain();
    char v5 = (void *)sub_1C151AE2C();
    if (v5
      && (id v6 = v5,
          id v7 = objc_msgSend(v5, sel_rootViewController),
          v6,
          v7))
    {
      uint64_t v8 = (void *)sub_1C151F49C();
    }
    else
    {
      uint64_t v8 = 0;
    }
    swift_getObjectType();
    uint64_t v10 = sub_1C12E9614(a2, (uint64_t)v8, a3 & 1);
    swift_unknownObjectRelease();

    return v10;
  }
  else
  {
    sub_1C03187E0(0, (unint64_t *)&qword_1EA1ADF50);
    swift_allocObject();
    swift_retain();
    return sub_1C151908C();
  }
}

uint64_t sub_1C031818C(unsigned char *a1, uint64_t a2, uint64_t a3, char a4)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  char v5 = a1[1];
  if (*a1 == 1)
  {
    id v6 = *(void **)(a2 + 24);
    v10[0] = 0;
    if (!objc_msgSend(v6, sel_setNotificationsEnabled_forTag_error_, 1, a3, v10))
    {
      id v9 = v10[0];
      sub_1C1515D3C();

      return swift_willThrow();
    }
    id v7 = v10[0];
  }
  if (a4) {
    LOBYTE(v10[0]) = 0;
  }
  else {
    LOBYTE(v10[0]) = 0x2040103u >> (8 * v5);
  }
  sub_1C03187E0(0, &qword_1EA199B90);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C03182A0()
{
  if (qword_1EB87B060 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C700;
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t FollowingManager.deinit()
{
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t FollowingManager.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

unint64_t sub_1C0318454()
{
  unint64_t result = qword_1EA199BA0;
  if (!qword_1EA199BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199BA0);
  }
  return result;
}

uint64_t sub_1C03184A8(void *a1, char a2)
{
  if (objc_msgSend(*(id *)(*(void *)v2 + 24), sel_hasSubscriptionToTag_, a1)) {
    return FollowingManager.unfollow(tag:)(a1);
  }
  else {
    return FollowingManager.follow(tag:autoEnableNotifications:source:)(a1, a2 & 1);
  }
}

uint64_t sub_1C031850C(void *a1, char a2)
{
  if (objc_msgSend(*(id *)(*(void *)v2 + 24), sel_hasSubscriptionToTag_, a1)) {
    return FollowingManager.unfollow(tag:)(a1);
  }
  else {
    return FollowingManager.follow(tag:autoEnableNotifications:source:)(a1, a2 & 1);
  }
}

uint64_t sub_1C0318574(void *a1, char a2)
{
  return FollowingManager.follow(tag:autoEnableNotifications:source:)(a1, a2);
}

uint64_t sub_1C031859C(void *a1, char a2)
{
  return FollowingManager.follow(tag:autoEnableNotifications:source:)(a1, a2);
}

uint64_t sub_1C03185C0(void *a1)
{
  return FollowingManager.unfollow(tag:)(a1);
}

uint64_t dispatch thunk of FollowingManagerType.toggleFollowing(for:autoEnableNotifications:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FollowingManagerType.toggleFollowing(for:autoEnableNotifications:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of FollowingManagerType.follow(tag:autoEnableNotifications:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FollowingManagerType.follow(tag:autoEnableNotifications:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of FollowingManagerType.unfollow(tag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

unsigned char *storeEnumTagSinglePayload for FollowingPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0318714);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingPosition()
{
  return &type metadata for FollowingPosition;
}

uint64_t method lookup function for FollowingManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FollowingManager);
}

uint64_t sub_1C0318764()
{
  return sub_1C0318048(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1C0318788()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C03187C0(unsigned char *a1, uint64_t a2)
{
  return sub_1C031818C(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

void sub_1C03187E0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C151917C();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C0318828(uint64_t a1)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = sub_1BFE72794(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

NewsFeed::PuzzleStatisticType_optional __swiftcall PuzzleStatisticType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t PuzzleStatsServiceType.updateStats()(uint64_t a1, uint64_t a2)
{
  int64_t v7 = (uint64_t (*)(void, uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1C005E7F4;
  return v7(0, a1, a2);
}

unint64_t PuzzleStatisticType.rawValue.getter()
{
  unint64_t result = 0x53747365676E6F6CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x53746E6572727563;
      break;
    case 2:
      unint64_t result = 0x5373656C7A7A7570;
      break;
    case 3:
      unint64_t result = 0x74615265766C6F73;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 7:
      unint64_t result = 0x53646570756F7267;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0318C3C(unsigned __int8 *a1, char *a2)
{
  return sub_1C1488BC8(*a1, *a2);
}

uint64_t sub_1C0318C48()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0318C90()
{
  return sub_1C044A250();
}

uint64_t sub_1C0318C98()
{
  return sub_1C1520E0C();
}

NewsFeed::PuzzleStatisticType_optional sub_1C0318CDC(Swift::String *a1)
{
  return PuzzleStatisticType.init(rawValue:)(*a1);
}

unint64_t sub_1C0318CE8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PuzzleStatisticType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0318D10()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0318D70()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0318DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C032BED4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C0318DE8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1C0318DF4(uint64_t a1)
{
  unint64_t v2 = sub_1BFD13738();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0318E30(uint64_t a1)
{
  unint64_t v2 = sub_1BFD13738();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0318E6C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t PuzzleTypeStats.debugDescription.getter()
{
  return 0;
}

unint64_t sub_1C0319120()
{
  unint64_t result = qword_1EA199BB8;
  if (!qword_1EA199BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199BB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PuzzleStatisticType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0319244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatisticType()
{
  return &type metadata for PuzzleStatisticType;
}

uint64_t dispatch thunk of PuzzleStatsServiceType.updateStats(verbose:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int64_t v7 = v3;
  v7[1] = sub_1C005E7F4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleStatsServiceType.puzzleStatistic(for:puzzleType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *int64_t v11 = v5;
  v11[1] = sub_1C005E7F4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PuzzleStatsServiceType.puzzleStatistics(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int64_t v7 = v3;
  v7[1] = sub_1C032DE74;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleStatsServiceType.hasSolvedPuzzles(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int64_t v7 = v3;
  v7[1] = sub_1C014AF5C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleStatsServiceType.resetAccumulatedStats()(uint64_t a1, uint64_t a2)
{
  int64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1C005E7F4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PuzzleStatsServiceType.debugStats(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = sub_1BFC542F4;
  return v11(a1, a2, a3, a4);
}

ValueMetadata *type metadata accessor for PuzzleTypeStats()
{
  return &type metadata for PuzzleTypeStats;
}

uint64_t sub_1C03198C8(void *a1)
{
  uint64_t v3 = v1;
  sub_1BFD1378C(0, &qword_1EA199DC0, (uint64_t (*)(void))sub_1C032DC14, (uint64_t)&type metadata for PuzzleTypeDebugStats.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C032DC14();
  sub_1C1520F0C();
  uint64_t v13 = *v3;
  char v12 = 0;
  sub_1BFD1393C();
  sub_1BFD13A28();
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v13 = v3[1];
    char v12 = 1;
    sub_1C152080C();
    uint64_t v13 = v3[2];
    char v12 = 2;
    sub_1BFD136E8(0, &qword_1EB863258);
    sub_1BFD138B8(&qword_1EB863260);
    sub_1C152080C();
    uint64_t v13 = v3[3];
    char v12 = 3;
    sub_1BFD136E8(0, &qword_1EB863208);
    sub_1BFD139A4((unint64_t *)&unk_1EB863210);
    sub_1C152080C();
    uint64_t v13 = v3[4];
    char v12 = 4;
    sub_1C152080C();
    uint64_t v13 = v3[5];
    char v12 = 5;
    sub_1BFED9C20();
    sub_1BFE389D8((unint64_t *)&qword_1EB85DF50, (void (*)(uint64_t))sub_1BFED9C20);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0319C78(uint64_t a1)
{
  unint64_t v2 = sub_1C032DC14();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0319CB4(uint64_t a1)
{
  unint64_t v2 = sub_1C032DC14();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0319CF0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C032C18C(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C0319D34(void *a1)
{
  return sub_1C03198C8(a1);
}

uint64_t sub_1C0319D4C(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 64) = a1;
  sub_1C0064478(0);
  *(void *)(v2 + 24) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0319DE0, v1, 0);
}

uint64_t sub_1C0319DE0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 304);
  *(void *)(v0 + 32) = v2;
  if (v2)
  {
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v3;
    *uint64_t v3 = v0;
    uint64_t v4 = sub_1C0319FDC;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 24);
    char v6 = *(unsigned char *)(v0 + 64);
    uint64_t v7 = sub_1C151EE9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
    uint64_t v9 = sub_1BFDA76A4(&qword_1EB86C7F8, v8, (void (*)(uint64_t))type metadata accessor for PuzzleStatsService);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v1;
    *(void *)(v10 + 24) = v9;
    *(void *)(v10 + 32) = v1;
    *(unsigned char *)(v10 + 40) = v6;
    swift_retain_n();
    uint64_t v11 = sub_1C0C833AC(v5, (uint64_t)&unk_1EA199D50, v10);
    *(void *)(v0 + 48) = v11;
    *(void *)(v1 + 304) = v11;
    swift_retain();
    swift_release();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v3;
    *uint64_t v3 = v0;
    uint64_t v4 = sub_1C031A154;
  }
  v3[1] = v4;
  return MEMORY[0x1F4187DC0]();
}

uint64_t sub_1C0319FDC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C031A0EC, v1, 0);
}

uint64_t sub_1C031A0EC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C031A154()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C031A264, v1, 0);
}

uint64_t sub_1C031A264()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  *(void *)(v1 + 304) = 0;
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C031A2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 320) = a5;
  *(void *)(v5 + 104) = a4;
  sub_1BFF97C40();
  *(void *)(v5 + 112) = swift_task_alloc();
  *(void *)(v5 + 120) = type metadata accessor for PuzzleStatsService.StatsResult();
  *(void *)(v5 + 128) = swift_task_alloc();
  sub_1C032B7FC(0);
  *(void *)(v5 + 136) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for PuzzleStatsState();
  *(void *)(v5 + 144) = v7;
  *(void *)(v5 + 152) = *(void *)(v7 - 8);
  *(void *)(v5 + 160) = swift_task_alloc();
  *(void *)(v5 + 168) = swift_task_alloc();
  uint64_t v8 = sub_1C151631C();
  *(void *)(v5 + 176) = v8;
  *(void *)(v5 + 184) = *(void *)(v8 - 8);
  *(void *)(v5 + 192) = swift_task_alloc();
  *(void *)(v5 + 200) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C031A4A8, a4, 0);
}

uint64_t sub_1C031A4A8()
{
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C15198DC();
  v0[26] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB93C7A8);
  uint64_t v2 = sub_1C15198AC();
  os_log_type_t v3 = sub_1C151F38C();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1BFC31000, v2, v3, "PuzzleStatsService: updating stats...", v4, 2u);
    MEMORY[0x1C18C9B00](v4, -1, -1);
  }
  uint64_t v5 = (void *)v0[13];

  char v6 = v5 + 14;
  uint64_t v7 = v5[17];
  uint64_t v8 = v5[18];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 72))(v7, v8))
  {
    uint64_t v9 = sub_1C15198AC();
    os_log_type_t v10 = sub_1C151F38C();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1BFC31000, v9, v10, "PuzzleStatsService: empty puzzle history, exiting.", v11, 2u);
      MEMORY[0x1C18C9B00](v11, -1, -1);
    }
  }
  char v12 = (void *)swift_task_alloc();
  v0[27] = v12;
  *char v12 = v0;
  v12[1] = sub_1C031A6AC;
  uint64_t v13 = v0[25];
  return sub_1C031B9B4(v13);
}

uint64_t sub_1C031A6AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C031A7BC, v1, 0);
}

uint64_t sub_1C031A7BC()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C031A868;
  return FCNewsAppConfigurationManager.fetchConfiguration(cachedOnly:)(0, ObjectType);
}

uint64_t sub_1C031A868(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[29] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[13];
  if (v1)
  {
    char v6 = sub_1C031AEF4;
  }
  else
  {
    v4[30] = a1;
    char v6 = sub_1C031A9A4;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1C031A9A4()
{
  uint64_t v51 = v0;
  uint64_t v1 = *(char **)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void **)(v0 + 104);
  id v6 = objc_msgSend(*(id *)(v0 + 240), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  id v7 = objc_msgSend(v6, sel_puzzleTypes);

  uint64_t v8 = sub_1C151EBCC();
  *(void *)(v0 + 248) = v8;

  sub_1C031C4C4(v1);
  uint64_t v9 = v5[35];
  uint64_t v10 = v5[36];
  __swift_project_boxed_opaque_existential_1(v5 + 32, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_1BFDA7E5C(&v50);
    unint64_t v11 = 0xEA00000000006E6FLL;
    uint64_t v12 = 0x69746375646F7270;
    switch(v50)
    {
      case 1:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x676E6967617473;
        break;
      case 2:
        unint64_t v11 = 0xE200000000000000;
        uint64_t v12 = 24945;
        break;
      case 3:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1953719668;
        break;
      case 4:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x6C65766564;
        break;
      case 5:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x786F62646E6173;
        break;
      case 6:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x316F6D6564;
        break;
      case 7:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x326F6D6564;
        break;
      default:
        break;
    }
    uint64_t v13 = *(uint64_t **)(v0 + 168);
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    unint64_t v16 = sub_1C018E2F0(MEMORY[0x1E4FBC860]);
    unint64_t v17 = sub_1C018E49C(v15);
    sub_1C15161BC();
    *uint64_t v13 = v12;
    v13[1] = v11;
    void v13[2] = v16;
    v13[3] = v17;
    sub_1C032CA9C(v14, (uint64_t (*)(void))sub_1C032B7FC);
  }
  else
  {
    sub_1C032BE04(*(void *)(v0 + 136), *(void *)(v0 + 168), (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
  }
  uint64_t v18 = *(void *)(v0 + 200);
  uint64_t v19 = *(void *)(v0 + 176);
  uint64_t v20 = *(void *)(v0 + 184);
  uint64_t v22 = *(void **)(v0 + 160);
  long long v21 = *(uint64_t **)(v0 + 168);
  uint64_t v24 = *v21;
  uint64_t v23 = v21[1];
  uint64_t v25 = v21[2];
  uint64_t v26 = v21[3];
  uint64_t v27 = (char *)v22 + *(int *)(*(void *)(v0 + 144) + 28);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  *(void *)(v0 + 256) = v28;
  *(void *)(v0 + 264) = (v20 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v28(v27, v18, v19);
  *uint64_t v22 = v24;
  v22[1] = v23;
  uint64_t v22[2] = v25;
  v22[3] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C032CA9C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
  sub_1C032BE04((uint64_t)v22, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
  uint64_t v29 = *(void *)(v8 + 16);
  *(void *)(v0 + 272) = v29;
  if (v29)
  {
    *(void *)(v0 + 280) = 0;
    uint64_t v30 = *(void *)(v0 + 248);
    uint64_t v31 = *(void *)(v30 + 32);
    *(void *)(v0 + 288) = v31;
    uint64_t v32 = *(void *)(v30 + 40);
    *(void *)(v0 + 296) = v32;
    swift_bridgeObjectRetain();
    uint64_t v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 304) = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_1C031B128;
    uint64_t v34 = *(void *)(v0 + 200);
    uint64_t v35 = *(void *)(v0 + 128);
    char v36 = *(unsigned char *)(v0 + 320);
    return sub_1C031CE8C(v35, v31, v32, v34, v36);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void *)(v0 + 168);
    uint64_t v39 = *(void *)(v0 + 104);
    uint64_t v40 = *(void *)(v39 + 280);
    uint64_t v41 = *(void *)(v39 + 288);
    __swift_project_boxed_opaque_existential_1((void *)(v39 + 256), v40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 24))(v38, v40, v41);
    *(unsigned char *)(v39 + 312) = 0;
    uint64_t v42 = sub_1C15198AC();
    os_log_type_t v43 = sub_1C151F38C();
    if (os_log_type_enabled(v42, v43))
    {
      size_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)size_t v44 = 0;
      _os_log_impl(&dword_1BFC31000, v42, v43, "PuzzleStatsService: completed updating stats", v44, 2u);
      MEMORY[0x1C18C9B00](v44, -1, -1);
    }
    uint64_t v45 = *(void *)(v0 + 200);
    uint64_t v46 = *(void *)(v0 + 176);
    uint64_t v47 = *(void *)(v0 + 184);
    uint64_t v48 = *(void *)(v0 + 168);

    sub_1C032CA9C(v48, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v49 = *(uint64_t (**)(void))(v0 + 8);
    return v49();
  }
}

uint64_t sub_1C031AEF4()
{
  uint64_t v13 = v0;
  (*(void (**)(void, void))(v0[23] + 8))(v0[25], v0[22]);
  uint64_t v1 = (void *)v0[29];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C15198AC();
  os_log_type_t v5 = sub_1C151F36C();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)id v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_1C1520D3C();
    v0[12] = sub_1BFDA76EC(v8, v9, &v12);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v4, v5, "PuzzleStatsService: error updating stats: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v7, -1, -1);
    MEMORY[0x1C18C9B00](v6, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1C031B128()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C031B75C;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 104);
    uint64_t v4 = sub_1C031B25C;
  }
  return MEMORY[0x1F4188298](v4, v5, 0);
}

uint64_t sub_1C031B25C()
{
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v5 = *(char **)(v0 + 160);
  uint64_t v4 = *(char **)(v0 + 168);
  uint64_t v46 = *(void *)(v0 + 144);
  id v6 = *(_OWORD **)(v0 + 128);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = *(void *)(v0 + 112);
  uint64_t v50 = *(void *)(v0 + 184);
  long long v8 = v6[1];
  long long v7 = v6[2];
  *(_OWORD *)(v0 + 16) = *v6;
  *(_OWORD *)(v0 + 32) = v8;
  *(_OWORD *)(v0 + 48) = v7;
  uint64_t v9 = *((void *)v4 + 2);
  sub_1BFDAA7CC(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BFDAA7CC(v0 + 16);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BFDA7184((long long *)(v0 + 16), v2, v1, isUniquelyReferenced_nonNull_native);
  uint64_t v11 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)v4;
  uint64_t v12 = *((void *)v4 + 1);
  uint64_t v14 = *((void *)v4 + 3);
  v47(&v5[*(int *)(v46 + 28)], &v4[*(int *)(v46 + 28)], v3);
  *(void *)uint64_t v5 = v13;
  *((void *)v5 + 1) = v12;
  *((void *)v5 + 2) = v11;
  *((void *)v5 + 3) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFDAA760(v0 + 16);
  sub_1C032CA9C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
  sub_1C032BE04((uint64_t)v5, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
  sub_1C032BE6C((uint64_t)v6 + *(int *)(v48 + 20), v49, (uint64_t (*)(void))sub_1BFF97C40);
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v49, 1, v3);
  uint64_t v16 = *(void *)(v0 + 296);
  if (v15 == 1)
  {
    uint64_t v17 = *(void *)(v0 + 112);
    sub_1C032CA9C(*(void *)(v0 + 128), (uint64_t (*)(void))type metadata accessor for PuzzleStatsService.StatsResult);
    swift_bridgeObjectRelease();
    sub_1C032CA9C(v17, (uint64_t (*)(void))sub_1BFF97C40);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 288);
    uint64_t v20 = *(void *)(v0 + 184);
    uint64_t v19 = *(void *)(v0 + 192);
    uint64_t v22 = *(void *)(v0 + 168);
    uint64_t v21 = *(void *)(v0 + 176);
    uint64_t v23 = *(void **)(v0 + 160);
    uint64_t v24 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 32))(v19, *(void *)(v0 + 112), v21);
    sub_1C02F85A4(v19, v18, v16, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    sub_1C032CA9C(v24, (uint64_t (*)(void))type metadata accessor for PuzzleStatsService.StatsResult);
    sub_1C032CA9C(v22, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
    sub_1C032BE04((uint64_t)v23, v22, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
  }
  uint64_t v25 = *(void *)(v0 + 280) + 1;
  if (v25 == *(void *)(v0 + 272))
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v0 + 168);
    uint64_t v27 = *(void *)(v0 + 104);
    uint64_t v28 = *(void *)(v27 + 280);
    uint64_t v29 = *(void *)(v27 + 288);
    __swift_project_boxed_opaque_existential_1((void *)(v27 + 256), v28);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 24))(v26, v28, v29);
    *(unsigned char *)(v27 + 312) = 0;
    uint64_t v30 = sub_1C15198AC();
    os_log_type_t v31 = sub_1C151F38C();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_1BFC31000, v30, v31, "PuzzleStatsService: completed updating stats", v32, 2u);
      MEMORY[0x1C18C9B00](v32, -1, -1);
    }
    uint64_t v33 = *(void *)(v0 + 200);
    uint64_t v34 = *(void *)(v0 + 176);
    uint64_t v35 = *(void *)(v0 + 184);
    uint64_t v36 = *(void *)(v0 + 168);

    sub_1C032CA9C(v36, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
    return v37();
  }
  else
  {
    *(void *)(v0 + 280) = v25;
    uint64_t v39 = *(void *)(v0 + 248) + 16 * v25;
    uint64_t v40 = *(void *)(v39 + 32);
    *(void *)(v0 + 288) = v40;
    uint64_t v41 = *(void *)(v39 + 40);
    *(void *)(v0 + 296) = v41;
    swift_bridgeObjectRetain();
    uint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 304) = v42;
    *uint64_t v42 = v0;
    v42[1] = sub_1C031B128;
    uint64_t v43 = *(void *)(v0 + 200);
    uint64_t v44 = *(void *)(v0 + 128);
    char v45 = *(unsigned char *)(v0 + 320);
    return sub_1C031CE8C(v44, v40, v41, v43, v45);
  }
}

uint64_t sub_1C031B75C()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  sub_1C032CA9C(v0[21], (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = (void *)v0[39];
  id v5 = v4;
  id v6 = v4;
  long long v7 = sub_1C15198AC();
  os_log_type_t v8 = sub_1C151F36C();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v11 = sub_1C1520D3C();
    v0[12] = sub_1BFDA76EC(v11, v12, &v15);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v7, v8, "PuzzleStatsService: error updating stats: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v10, -1, -1);
    MEMORY[0x1C18C9B00](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1C031B9B4(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  v2[6] = swift_getObjectType();
  sub_1BFF97C40();
  v2[7] = swift_task_alloc();
  uint64_t v3 = sub_1C151631C();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C031BAEC, v1, 0);
}

uint64_t sub_1C031BAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = v2;
  if (qword_1EB861160 != -1) {
    swift_once();
  }
  sub_1BFDA76A4(&qword_1EB862E60, a2, (void (*)(uint64_t))type metadata accessor for PuzzleStatsService);
  sub_1C1516FBC();
  if (*(unsigned char *)(v2 + 160) == 1)
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1C15198DC();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB93C7A8);
    uint64_t v4 = sub_1C15198AC();
    os_log_type_t v5 = sub_1C151F38C();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v6 = 0;
      _os_log_impl(&dword_1BFC31000, v4, v5, "PuzzleStatsService: ignoring stored stats starting date.", v6, 2u);
      MEMORY[0x1C18C9B00](v6, -1, -1);
    }

    sub_1C15161BC();
LABEL_26:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v49 = *(uint64_t (**)(void))(v2 + 8);
    return v49();
  }
  long long v7 = *(void **)(*(void *)(v2 + 40) + 296);
  *(void *)(v2 + 128) = v7;
  id v8 = objc_msgSend(v7, sel_puzzleStatsStartDate);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v2 + 104);
    uint64_t v12 = *(void *)(v2 + 64);
    uint64_t v11 = *(void *)(v2 + 72);
    uint64_t v13 = *(void *)(v2 + 56);
    sub_1C15162BC();

    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
    v14(v13, v10, v12);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v12);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v12) != 1)
    {
      v14(*(void *)(v2 + 112), *(void *)(v2 + 56), *(void *)(v2 + 64));
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v15 = *(void *)(v2 + 112);
      uint64_t v16 = *(void *)(v2 + 96);
      uint64_t v18 = *(void *)(v2 + 64);
      uint64_t v17 = *(void *)(v2 + 72);
      uint64_t v19 = sub_1C15198DC();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EB93C7A8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v18);
      uint64_t v20 = sub_1C15198AC();
      os_log_type_t v21 = sub_1C151F38C();
      BOOL v22 = os_log_type_enabled(v20, v21);
      uint64_t v23 = *(void *)(v2 + 96);
      uint64_t v25 = *(void *)(v2 + 64);
      uint64_t v24 = *(void *)(v2 + 72);
      if (v22)
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        uint64_t v54 = v51;
        *(_DWORD *)uint64_t v26 = 136315138;
        sub_1BFDA76A4((unint64_t *)&qword_1EB871170, 255, MEMORY[0x1E4F27928]);
        uint64_t v27 = sub_1C152088C();
        *(void *)(v2 + 24) = sub_1BFDA76EC(v27, v28, &v54);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
        _os_log_impl(&dword_1BFC31000, v20, v21, "PuzzleStatsService: using a stats starting date of %s.", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v51, -1, -1);
        MEMORY[0x1C18C9B00](v26, -1, -1);
      }
      else
      {
        (*(void (**)(void, void))(v24 + 8))(*(void *)(v2 + 96), *(void *)(v2 + 64));
      }

      v14(*(void *)(v2 + 120), *(void *)(v2 + 112), *(void *)(v2 + 64));
      v14(*(void *)(v2 + 32), *(void *)(v2 + 120), *(void *)(v2 + 64));
      goto LABEL_26;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v2 + 72) + 56))(*(void *)(v2 + 56), 1, 1, *(void *)(v2 + 64));
  }
  sub_1C032CA9C(*(void *)(v2 + 56), (uint64_t (*)(void))sub_1BFF97C40);
  sub_1C15162CC();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)(v2 + 80);
  uint64_t v30 = *(void *)(v2 + 88);
  uint64_t v31 = *(void *)(v2 + 64);
  uint64_t v32 = *(void *)(v2 + 72);
  uint64_t v33 = sub_1C15198DC();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EB93C7A8);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  v34(v29, v30, v31);
  uint64_t v35 = sub_1C15198AC();
  os_log_type_t v36 = sub_1C151F38C();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v38 = *(void *)(v2 + 72);
  uint64_t v39 = *(void *)(v2 + 80);
  uint64_t v40 = *(void *)(v2 + 64);
  if (v37)
  {
    *(void *)os_log_type_t type = v34;
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v54 = v52;
    *(_DWORD *)uint64_t v41 = 136315138;
    sub_1BFDA76A4((unint64_t *)&qword_1EB871170, 255, MEMORY[0x1E4F27928]);
    uint64_t v42 = sub_1C152088C();
    *(void *)(v2 + 16) = sub_1BFDA76EC(v42, v43, &v54);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    uint64_t v46 = *(void (**)(void, void))(v38 + 8);
    uint64_t v44 = v38 + 8;
    char v45 = v46;
    v46(v39, v40);
    _os_log_impl(&dword_1BFC31000, v35, v36, "PuzzleStatsService: setting stats starting date to %s.", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v52, -1, -1);
    uint64_t v47 = v41;
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))type;
    MEMORY[0x1C18C9B00](v47, -1, -1);
  }
  else
  {
    uint64_t v48 = *(void (**)(void, void))(v38 + 8);
    uint64_t v44 = v38 + 8;
    char v45 = v48;
    v48(*(void *)(v2 + 80), *(void *)(v2 + 64));
  }

  *(void *)(v2 + 136) = v44;
  *(void *)(v2 + 144) = v45;
  v34(*(void *)(v2 + 120), *(void *)(v2 + 88), *(void *)(v2 + 64));
  return MEMORY[0x1F4188298](sub_1C031C270, 0, 0);
}

uint64_t sub_1C031C270()
{
  sub_1C151EE6C();
  *(void *)(v0 + 152) = sub_1C151EE5C();
  uint64_t v2 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C031C304, v2, v1);
}

uint64_t sub_1C031C304()
{
  uint64_t v1 = *(void **)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_release();
  uint64_t v3 = (void *)sub_1C151621C();
  objc_msgSend(v1, sel_setPuzzleStatsStartDate_, v3);

  return MEMORY[0x1F4188298](sub_1C031C3A0, v2, 0);
}

uint64_t sub_1C031C3A0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[18];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = v5[35];
  uint64_t v7 = v5[36];
  __swift_project_boxed_opaque_existential_1(v5 + 32, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
  v1(v2, v3);
  (*(void (**)(void, void, void))(v4 + 32))(v0[4], v0[15], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1C031C4C4(char *a1)
{
  uint64_t v2 = (char *)v1;
  uint64_t v67 = a1;
  uint64_t v71 = sub_1C151631C();
  uint64_t v73 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v65 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCD9524();
  uint64_t v68 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v70 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v62 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v62 - v13;
  sub_1C032B7FC(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint64_t *)((char *)&v62 - v19);
  sub_1BFDA7E5C(&v75);
  unint64_t v21 = 0xEA00000000006E6FLL;
  uint64_t v22 = 0x69746375646F7270;
  uint64_t v69 = v11;
  uint64_t v72 = v14;
  uint64_t v66 = v8;
  switch(v75)
  {
    case 1:
      unint64_t v21 = 0xE700000000000000;
      uint64_t v22 = 0x676E6967617473;
      break;
    case 2:
      unint64_t v21 = 0xE200000000000000;
      uint64_t v22 = 24945;
      break;
    case 3:
      unint64_t v21 = 0xE400000000000000;
      uint64_t v22 = 1953719668;
      break;
    case 4:
      unint64_t v21 = 0xE500000000000000;
      uint64_t v22 = 0x6C65766564;
      break;
    case 5:
      unint64_t v21 = 0xE700000000000000;
      uint64_t v22 = 0x786F62646E6173;
      break;
    case 6:
      unint64_t v21 = 0xE500000000000000;
      uint64_t v22 = 0x316F6D6564;
      break;
    case 7:
      unint64_t v21 = 0xE500000000000000;
      uint64_t v22 = 0x326F6D6564;
      break;
    default:
      break;
  }
  uint64_t v23 = v1[35];
  uint64_t v24 = v1[36];
  uint64_t v74 = v1 + 32;
  __swift_project_boxed_opaque_existential_1(v1 + 32, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  uint64_t v25 = type metadata accessor for PuzzleStatsState();
  uint64_t v26 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48);
  if (v26(v20, 1, v25) == 1)
  {
    sub_1C032CA9C((uint64_t)v20, (uint64_t (*)(void))sub_1C032B7FC);
    swift_bridgeObjectRelease();
LABEL_16:
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1C15198DC();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EB93C7A8);
    uint64_t v32 = sub_1C15198AC();
    os_log_type_t v33 = sub_1C151F38C();
    if (!os_log_type_enabled(v32, v33)) {
      goto LABEL_41;
    }
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    uint64_t v35 = "PuzzleStatsService: resetting stats triggered by a change of environment";
    goto LABEL_40;
  }
  uint64_t v28 = *v20;
  uint64_t v27 = v20[1];
  swift_bridgeObjectRetain();
  sub_1C032CA9C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
  if (v22 == v28 && v21 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v30 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v36 = (uint64_t)v72;
  uint64_t v37 = v73;
  uint64_t v38 = v71;
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  v63(v72, v67, v71);
  uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
  v64(v36, 0, 1, v38);
  uint64_t v39 = *((void *)v2 + 35);
  uint64_t v40 = *((void *)v2 + 36);
  uint64_t v67 = v2;
  __swift_project_boxed_opaque_existential_1(v74, v39);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
  unsigned int v41 = v26((uint64_t *)v17, 1, v25);
  uint64_t v42 = (uint64_t (*)(void))sub_1C032B7FC;
  if (v41 == 1)
  {
    uint64_t v43 = v38;
    uint64_t v44 = (uint64_t)v69;
    uint64_t v45 = 1;
  }
  else
  {
    uint64_t v46 = &v17[*(int *)(v25 + 28)];
    uint64_t v44 = (uint64_t)v69;
    v63(v69, v46, v38);
    uint64_t v45 = 0;
    uint64_t v42 = (uint64_t (*)(void))type metadata accessor for PuzzleStatsState;
    uint64_t v43 = v38;
  }
  sub_1C032CA9C((uint64_t)v17, v42);
  v64(v44, v45, 1, v43);
  uint64_t v47 = v70;
  uint64_t v48 = v70 + *(int *)(v68 + 48);
  uint64_t v49 = (uint64_t)v72;
  sub_1C032BE6C((uint64_t)v72, v70, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1C032BE6C(v44, v48, (uint64_t (*)(void))sub_1BFF97C40);
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  if (v50(v47, 1, v43) == 1)
  {
    sub_1C032CA9C(v44, (uint64_t (*)(void))sub_1BFF97C40);
    sub_1C032CA9C(v49, (uint64_t (*)(void))sub_1BFF97C40);
    int v51 = v50(v48, 1, v43);
    uint64_t v2 = v67;
    if (v51 == 1)
    {
      uint64_t result = sub_1C032CA9C(v47, (uint64_t (*)(void))sub_1BFF97C40);
      goto LABEL_31;
    }
    goto LABEL_29;
  }
  uint64_t v53 = (uint64_t)v66;
  sub_1C032BE6C(v47, (uint64_t)v66, (uint64_t (*)(void))sub_1BFF97C40);
  if (v50(v48, 1, v43) == 1)
  {
    sub_1C032CA9C(v44, (uint64_t (*)(void))sub_1BFF97C40);
    sub_1C032CA9C(v49, (uint64_t (*)(void))sub_1BFF97C40);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v53, v43);
    uint64_t v2 = v67;
LABEL_29:
    sub_1C032CA9C(v47, (uint64_t (*)(void))sub_1BFCD9524);
LABEL_36:
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v59 = sub_1C15198DC();
    __swift_project_value_buffer(v59, (uint64_t)qword_1EB93C7A8);
    uint64_t v32 = sub_1C15198AC();
    os_log_type_t v33 = sub_1C151F38C();
    if (!os_log_type_enabled(v32, v33)) {
      goto LABEL_41;
    }
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    uint64_t v35 = "PuzzleStatsService: resetting stats triggered by a change for stats start date";
    goto LABEL_40;
  }
  uint64_t v54 = v73;
  uint64_t v55 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v65, v48, v43);
  sub_1BFDA76A4((unint64_t *)&qword_1EB871160, 255, MEMORY[0x1E4F27928]);
  char v56 = sub_1C151E5CC();
  uint64_t v57 = *(void (**)(char *, uint64_t))(v54 + 8);
  v57(v55, v43);
  sub_1C032CA9C(v44, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1C032CA9C(v49, (uint64_t (*)(void))sub_1BFF97C40);
  v57((char *)v53, v43);
  uint64_t result = sub_1C032CA9C(v47, (uint64_t (*)(void))sub_1BFF97C40);
  uint64_t v2 = v67;
  if ((v56 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_31:
  if (v2[312] != 1) {
    return result;
  }
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v58 = sub_1C15198DC();
  __swift_project_value_buffer(v58, (uint64_t)qword_1EB93C7A8);
  uint64_t v32 = sub_1C15198AC();
  os_log_type_t v33 = sub_1C151F38C();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    uint64_t v35 = "PuzzleStatsService: resetting stats triggered by request to discard accumulated stats";
LABEL_40:
    _os_log_impl(&dword_1BFC31000, v32, v33, v35, v34, 2u);
    MEMORY[0x1C18C9B00](v34, -1, -1);
  }
LABEL_41:

  uint64_t v61 = *((void *)v2 + 35);
  uint64_t v60 = *((void *)v2 + 36);
  __swift_project_boxed_opaque_existential_1(v74, v61);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 16))(v61, v60);
}

uint64_t sub_1C031CE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 120) = a4;
  *(void *)(v6 + 128) = v5;
  *(unsigned char *)(v6 + 448) = a5;
  *(void *)(v6 + 104) = a2;
  *(void *)(v6 + 112) = a3;
  *(void *)(v6 + 96) = a1;
  type metadata accessor for PuzzleStatsProcessorContext();
  *(void *)(v6 + 136) = swift_task_alloc();
  uint64_t v7 = sub_1C151616C();
  *(void *)(v6 + 144) = v7;
  *(void *)(v6 + 152) = *(void *)(v7 - 8);
  *(void *)(v6 + 160) = swift_task_alloc();
  uint64_t v8 = sub_1C151618C();
  *(void *)(v6 + 168) = v8;
  *(void *)(v6 + 176) = *(void *)(v8 - 8);
  *(void *)(v6 + 184) = swift_task_alloc();
  sub_1BFF97C40();
  *(void *)(v6 + 192) = swift_task_alloc();
  *(void *)(v6 + 200) = swift_task_alloc();
  *(void *)(v6 + 208) = swift_task_alloc();
  uint64_t v9 = sub_1C151631C();
  *(void *)(v6 + 216) = v9;
  *(void *)(v6 + 224) = *(void *)(v9 - 8);
  *(void *)(v6 + 232) = swift_task_alloc();
  *(void *)(v6 + 240) = swift_task_alloc();
  *(void *)(v6 + 248) = swift_task_alloc();
  *(void *)(v6 + 256) = swift_task_alloc();
  *(void *)(v6 + 264) = swift_task_alloc();
  *(void *)(v6 + 272) = swift_task_alloc();
  *(void *)(v6 + 280) = swift_task_alloc();
  sub_1C032B7FC(0);
  *(void *)(v6 + 288) = swift_task_alloc();
  *(void *)(v6 + 296) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C031D10C, v5, 0);
}

uint64_t sub_1C031D10C()
{
  uint64_t v145 = v0;
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C15198DC();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1C15198AC();
  os_log_type_t v3 = sub_1C151F38C();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 112);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v144[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 88) = sub_1BFDA76EC(v6, v5, v144);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v2, v3, "PuzzleStatsService: updating stats for puzzleType: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v8, -1, -1);
    MEMORY[0x1C18C9B00](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = *(void *)(v0 + 296);
  uint64_t v10 = *(void **)(v0 + 128);
  *(void *)(v0 + 40) = MEMORY[0x1E4FBC860];
  uint64_t v11 = v10[35];
  uint64_t v12 = v10[36];
  __swift_project_boxed_opaque_existential_1(v10 + 32, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  uint64_t v13 = type metadata accessor for PuzzleStatsState();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
  int v15 = v14(v9, 1, v13);
  uint64_t v16 = *(void *)(v0 + 296);
  if (v15 == 1)
  {
    sub_1C032CA9C(*(void *)(v0 + 296), (uint64_t (*)(void))sub_1C032B7FC);
  }
  else
  {
    uint64_t v17 = *(void *)(v16 + 16);
    swift_bridgeObjectRetain();
    sub_1C032CA9C(v16, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
    if (*(void *)(v17 + 16))
    {
      uint64_t v19 = *(void *)(v0 + 104);
      uint64_t v18 = *(void *)(v0 + 112);
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_1BFEF2D8C(v19, v18);
      if (v21)
      {
        uint64_t v22 = (uint64_t *)(*(void *)(v17 + 56) + 48 * v20);
        uint64_t v23 = v22[1];
        uint64_t v25 = v22[2];
        uint64_t v24 = v22[3];
        uint64_t v137 = v22[4];
        uint64_t v143 = v22[5];
        uint64_t v141 = *v22;
        swift_bridgeObjectRetain();
        uint64_t v131 = v23;
        swift_bridgeObjectRetain();
        uint64_t v139 = v25;
        swift_bridgeObjectRetain();
        uint64_t v138 = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v139 = 0;
  uint64_t v141 = 0;
  uint64_t v131 = 0;
  uint64_t v137 = 0;
  uint64_t v138 = 0;
  uint64_t v143 = 0;
LABEL_15:
  uint64_t v26 = *(void *)(v0 + 288);
  uint64_t v27 = v10[35];
  uint64_t v28 = v10[36];
  __swift_project_boxed_opaque_existential_1(v10 + 32, v27);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
  int v29 = v14(v26, 1, v13);
  uint64_t v30 = *(void *)(v0 + 288);
  if (v29 == 1)
  {
    uint64_t v31 = *(void *)(v0 + 216);
    uint64_t v32 = *(void *)(v0 + 224);
    uint64_t v33 = *(void *)(v0 + 208);
    sub_1C032CA9C(*(void *)(v0 + 288), (uint64_t (*)(void))sub_1C032B7FC);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
    v34(v33, 1, 1, v31);
  }
  else
  {
    uint64_t v35 = *(void *)(v30 + 24);
    swift_bridgeObjectRetain();
    sub_1C032CA9C(v30, (uint64_t (*)(void))type metadata accessor for PuzzleStatsState);
    if (*(void *)(v35 + 16))
    {
      uint64_t v37 = *(void *)(v0 + 104);
      uint64_t v36 = *(void *)(v0 + 112);
      swift_bridgeObjectRetain();
      unint64_t v38 = sub_1BFEF2D8C(v37, v36);
      uint64_t v39 = *(void *)(v0 + 216);
      uint64_t v40 = *(void *)(v0 + 224);
      uint64_t v41 = *(void *)(v0 + 208);
      if (v42)
      {
        (*(void (**)(void, unint64_t, void))(v40 + 16))(*(void *)(v0 + 208), *(void *)(v35 + 56) + *(void *)(v40 + 72) * v38, *(void *)(v0 + 216));
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
        v34(v41, 0, 1, v39);
      }
      else
      {
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
        v34(*(void *)(v0 + 208), 1, 1, v39);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56);
      v34(*(void *)(v0 + 208), 1, 1, *(void *)(v0 + 216));
    }
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 304) = v34;
  uint64_t v43 = *(void *)(v0 + 216);
  uint64_t v44 = *(void *)(v0 + 224);
  uint64_t v45 = *(void *)(v0 + 208);
  os_log_type_t type = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
  type(*(void *)(v0 + 272), *(void *)(v0 + 120), v43);
  uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  *(void *)(v0 + 312) = v46;
  *(void *)(v0 + 320) = (v44 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v47 = v46(v45, 1, v43);
  uint64_t v48 = *(void *)(v0 + 272);
  uint64_t v49 = *(void *)(v0 + 280);
  uint64_t v50 = *(void *)(v0 + 216);
  uint64_t v51 = *(void *)(v0 + 224);
  uint64_t v52 = *(void *)(v0 + 208);
  size_t v136 = v34;
  if (v47 == 1)
  {
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32);
    uint64_t v54 = (v51 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v53(v49, v48, v50);
    sub_1C032CA9C(v52, (uint64_t (*)(void))sub_1BFF97C40);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v48, v50);
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32);
    uint64_t v54 = (v51 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v53(v49, v52, v50);
  }
  uint64_t v55 = *(void *)(v0 + 280);
  uint64_t v57 = *(void *)(v0 + 256);
  uint64_t v56 = *(void *)(v0 + 264);
  uint64_t v58 = *(void *)(v0 + 248);
  uint64_t v59 = *(void *)(v0 + 216);
  uint64_t v60 = *(void *)(v0 + 224);
  uint64_t v61 = *(void *)(v0 + 120);
  *(void *)(v0 + 328) = v53;
  *(void *)(v0 + 336) = v54;
  v53(v57, v55, v59);
  sub_1BFDA76A4((unint64_t *)&qword_1EB870780, 255, MEMORY[0x1E4F27928]);
  if (sub_1C151E58C()) {
    uint64_t v62 = v57;
  }
  else {
    uint64_t v62 = v61;
  }
  type(v56, v62, v59);
  uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  *(void *)(v0 + 344) = v63;
  *(void *)(v0 + 352) = (v60 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v63(v57, v59);
  type(v58, v56, v59);
  swift_bridgeObjectRetain_n();
  uint64_t v64 = sub_1C15198AC();
  os_log_type_t v65 = sub_1C151F38C();
  BOOL v66 = os_log_type_enabled(v64, v65);
  uint64_t v67 = *(void *)(v0 + 248);
  uint64_t v68 = *(void *)(v0 + 216);
  if (v66)
  {
    uint64_t v125 = *(void *)(v0 + 248);
    os_log_type_t typea = v65;
    uint64_t v69 = *(void *)(v0 + 184);
    unint64_t v130 = v63;
    uint64_t v70 = *(void *)(v0 + 160);
    uint64_t v127 = *(void *)(v0 + 176);
    uint64_t v128 = *(void *)(v0 + 168);
    uint64_t v71 = *(void *)(v0 + 152);
    uint64_t v126 = *(void *)(v0 + 144);
    loga = v64;
    uint64_t v72 = *(void *)(v0 + 104);
    unint64_t v73 = *(void *)(v0 + 112);
    uint64_t v74 = swift_slowAlloc();
    uint64_t v129 = swift_slowAlloc();
    v144[0] = v129;
    *(_DWORD *)uint64_t v74 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 72) = sub_1BFDA76EC(v72, v73, v144);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v74 + 12) = 2080;
    sub_1C151617C();
    sub_1C151615C();
    uint64_t v75 = sub_1C15162FC();
    unint64_t v77 = v76;
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v126);
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v69, v128);
    *(void *)(v0 + 80) = sub_1BFDA76EC(v75, v77, v144);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    v130(v125, v68);
    uint64_t v64 = loga;
    _os_log_impl(&dword_1BFC31000, loga, typea, "PuzzleStatsService: Processing stats for puzzleType %s starting: [%s]", (uint8_t *)v74, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v129, -1, -1);
    MEMORY[0x1C18C9B00](v74, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v63(v67, v68);
  }

  uint64_t v78 = *(void *)(v0 + 264);
  uint64_t v80 = *(void *)(v0 + 120);
  uint64_t v79 = *(void **)(v0 + 128);
  uint64_t v82 = *(void *)(v0 + 104);
  uint64_t v81 = *(void *)(v0 + 112);
  uint64_t v83 = v79 + 14;
  uint64_t v84 = v79[17];
  uint64_t v85 = v79[18];
  __swift_project_boxed_opaque_existential_1(v79 + 14, v84);
  uint64_t v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v82, v81, v78, v84, v85);
  char v87 = sub_1C03237FC(v82, v81, v86, v80);
  uint64_t v88 = *(void *)(v0 + 104);
  uint64_t v89 = *(void *)(v0 + 112);
  if (v87)
  {
    char v90 = *(unsigned char *)(v0 + 448);
    uint64_t v91 = *(void *)(v0 + 120);
    swift_bridgeObjectRelease();
    sub_1BFDAA83C(v141);
    uint64_t v93 = v79[17];
    uint64_t v92 = v79[18];
    __swift_project_boxed_opaque_existential_1(v83, v93);
    uint64_t v94 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v88, v89, v91, v93, v92);
    uint64_t v95 = 0;
    *(void *)(v0 + 40) = v94;
    if ((v90 & 1) == 0)
    {
      uint64_t v101 = 0;
      uint64_t v100 = 0;
      uint64_t v99 = 0;
      uint64_t v98 = 0;
      uint64_t v97 = 0;
      goto LABEL_46;
    }
    uint64_t log = 7104878;
    unint64_t v96 = 0xE300000000000000;
    uint64_t v97 = 0;
    uint64_t v98 = 0;
    uint64_t v99 = 0;
    uint64_t v100 = 0;
    uint64_t v101 = 0;
  }
  else
  {
    char v102 = *(unsigned char *)(v0 + 448);
    size_t v103 = sub_1BFDA7A10(*(void *)(v0 + 104), *(void *)(v0 + 112), v86);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 40) = v103;
    uint64_t v100 = v137;
    uint64_t v101 = v143;
    if ((v102 & 1) == 0)
    {
      uint64_t v98 = v139;
      uint64_t v95 = v141;
      uint64_t v97 = v131;
      uint64_t v99 = v138;
      goto LABEL_46;
    }
    uint64_t v98 = v139;
    uint64_t v95 = v141;
    uint64_t v97 = v131;
    uint64_t v99 = v138;
    if (v141)
    {
      v144[0] = v141;
      v144[1] = v131;
      v144[2] = v139;
      v144[3] = v138;
      v144[4] = v137;
      v144[5] = v143;
      uint64_t log = PuzzleTypeStats.debugDescription.getter();
      unint64_t v96 = v104;
    }
    else
    {
      uint64_t log = 7104878;
      unint64_t v96 = 0xE300000000000000;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v105 = sub_1C15198AC();
  os_log_type_t v106 = sub_1C151F38C();
  if (os_log_type_enabled(v105, v106))
  {
    uint64_t v142 = v95;
    unint64_t v107 = (uint8_t *)swift_slowAlloc();
    uint64_t v140 = v98;
    uint64_t v108 = swift_slowAlloc();
    v144[0] = v108;
    *(_DWORD *)unint64_t v107 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_1BFDA76EC(log, v96, v144);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v105, v106, "PuzzleStatsService: using cumulative stats: %s", v107, 0xCu);
    swift_arrayDestroy();
    uint64_t v109 = v108;
    uint64_t v98 = v140;
    MEMORY[0x1C18C9B00](v109, -1, -1);
    unsigned int v110 = v107;
    uint64_t v95 = v142;
    MEMORY[0x1C18C9B00](v110, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

LABEL_46:
  *(void *)(v0 + 392) = v97;
  *(void *)(v0 + 400) = v95;
  *(void *)(v0 + 376) = v99;
  *(void *)(v0 + 384) = v98;
  *(void *)(v0 + 360) = v101;
  *(void *)(v0 + 368) = v100;
  uint64_t v111 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v112 = sub_1C15198AC();
  os_log_type_t v113 = sub_1C151F38C();
  BOOL v114 = os_log_type_enabled(v112, v113);
  unint64_t v115 = *(void *)(v0 + 112);
  if (v114)
  {
    uint64_t v116 = *(void *)(v0 + 104);
    uint64_t v117 = swift_slowAlloc();
    uint64_t v118 = swift_slowAlloc();
    v144[0] = v118;
    *(_DWORD *)uint64_t v117 = 134218242;
    *(void *)(v0 + 48) = *(void *)(v111 + 16);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v117 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_1BFDA76EC(v116, v115, v144);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v112, v113, "PuzzleStatsService: processing %ld entries for puzzleType %s", (uint8_t *)v117, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v118, -1, -1);
    MEMORY[0x1C18C9B00](v117, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v119 = *(void *)(v0 + 216);
  uint64_t v120 = *(void *)(v0 + 200);
  *(void *)(v0 + 408) = (*(void *)(v0 + 224) + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v136(v120, 1, 1, v119);
  swift_beginAccess();
  uint64_t v121 = *(void *)(v0 + 40);
  *(void *)(v0 + 416) = v121;
  swift_bridgeObjectRetain();
  long long v122 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v122;
  *long long v122 = v0;
  v122[1] = sub_1C031DF04;
  char v123 = *(unsigned char *)(v0 + 448);
  return sub_1C0323F9C(v121, v123);
}

uint64_t sub_1C031DF04(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 432) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 128);
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1C031E4FC;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 128);
    *(void *)(v4 + 440) = a1;
    uint64_t v6 = sub_1C031E068;
  }
  return MEMORY[0x1F4188298](v6, v7, 0);
}

uint64_t sub_1C031E068()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v5 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 368);
  uint64_t v8 = *(void *)(v0 + 136);
  int v48 = *(unsigned __int8 *)(v0 + 448);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 128) + 200), *(void *)(*(void *)(v0 + 128) + 224));
  v51[0] = v2;
  v51[1] = v3;
  v51[2] = v4;
  v51[3] = v5;
  _OWORD v51[4] = v6;
  v51[5] = v7;
  sub_1C032BD84(v2);
  sub_1C15165BC();
  sub_1C11D5270(v1, v51, v8, v48, v50);
  sub_1C032CA9C(v8, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessorContext);
  swift_bridgeObjectRelease();
  sub_1BFDAA83C(v2);
  uint64_t v9 = *(void **)(v0 + 40);
  long long v47 = v50[1];
  long long v49 = v50[0];
  long long v46 = v50[2];
  if (v9[2])
  {
    uint64_t v10 = *(void **)(v0 + 128);
    uint64_t v11 = v10 + 14;
    uint64_t v12 = v9[4];
    uint64_t v13 = v9[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v14 = v10[17];
    uint64_t v15 = v10[18];
    __swift_project_boxed_opaque_existential_1(v11, v14);
    uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 8) + 48))(v12, v13, v14);
    swift_bridgeObjectRelease();
    if (v16)
    {
      id v17 = objc_msgSend(v16, sel_lastPlayedDate);
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
      if (v17)
      {
        uint64_t v19 = v17;
        unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 328);
        uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 312);
        uint64_t v44 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 304);
        uint64_t v21 = *(void *)(v0 + 264);
        uint64_t v22 = *(void *)(v0 + 232);
        uint64_t v23 = *(void *)(v0 + 216);
        uint64_t v24 = *(void *)(v0 + 192);
        sub_1C15162BC();

        v18(v21, v23);
        v20(v24, v22, v23);
        v44(v24, 0, 1, v23);
        if (v45(v24, 1, v23) != 1)
        {
          uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 328);
          uint64_t v26 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 304);
          uint64_t v27 = *(void *)(v0 + 240);
          uint64_t v28 = *(void *)(v0 + 216);
          uint64_t v30 = *(void *)(v0 + 192);
          uint64_t v29 = *(void *)(v0 + 200);
          sub_1C032CA9C(v29, (uint64_t (*)(void))sub_1BFF97C40);
          v25(v27, v30, v28);
          v25(v29, v27, v28);
          v26(v29, 0, 1, v28);
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 304);
        uint64_t v35 = *(void *)(v0 + 264);
        uint64_t v36 = *(void *)(v0 + 216);
        uint64_t v37 = *(void *)(v0 + 192);

        v18(v35, v36);
        v34(v37, 1, 1, v36);
      }
      sub_1C032CA9C(*(void *)(v0 + 192), (uint64_t (*)(void))sub_1BFF97C40);
    }
    else
    {
      (*(void (**)(void, void))(v0 + 344))(*(void *)(v0 + 264), *(void *)(v0 + 216));
    }
  }
  else
  {
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v32 = *(void *)(v0 + 264);
    uint64_t v33 = *(void *)(v0 + 216);
    swift_bridgeObjectRelease();
    v31(v32, v33);
  }
LABEL_10:
  uint64_t v38 = *(void *)(v0 + 400);
  uint64_t v39 = *(void *)(v0 + 200);
  uint64_t v40 = *(_OWORD **)(v0 + 96);
  uint64_t v41 = type metadata accessor for PuzzleStatsService.StatsResult();
  sub_1C032BE04(v39, (uint64_t)v40 + *(int *)(v41 + 20), (uint64_t (*)(void))sub_1BFF97C40);
  sub_1BFDAA83C(v38);
  *uint64_t v40 = v49;
  v40[1] = v47;
  v40[2] = v46;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v42 = *(uint64_t (**)(void))(v0 + 8);
  return v42();
}

uint64_t sub_1C031E4FC()
{
  uint64_t v1 = v0[50];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[43];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[27];
  sub_1C032CA9C(v0[25], (uint64_t (*)(void))sub_1BFF97C40);
  v2(v3, v4);
  sub_1BFDAA83C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C031E694(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 40) = type metadata accessor for PuzzleStatisticCategory(0);
  *(void *)(v4 + 48) = swift_task_alloc();
  *(void *)(v4 + 56) = swift_task_alloc();
  sub_1C032BB9C(0);
  *(void *)(v4 + 64) = swift_task_alloc();
  *(void *)(v4 + 72) = swift_task_alloc();
  *(unsigned char *)(v4 + 112) = *a2;
  return MEMORY[0x1F4188298](sub_1C031E78C, v3, 0);
}

uint64_t sub_1C031E78C()
{
  uint64_t v61 = v0;
  switch(*(unsigned char *)(v0 + 112))
  {
    case 1:
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 80) = v5;
      void *v5 = v0;
      v5[1] = sub_1C031ED94;
      uint64_t v6 = *(void *)(v0 + 64);
      uint64_t v7 = *(void *)(v0 + 24);
      return sub_1C0326494(v6, v7);
    case 2:
      uint64_t v9 = sub_1C0325A10(*(void **)(v0 + 24));
      uint64_t v10 = *(void *)(v0 + 56);
      uint64_t v12 = *(void **)(v0 + 16);
      uint64_t v11 = *(void *)(v0 + 24);
      *(void *)uint64_t v10 = v9;
      type metadata accessor for PuzzleStatisticValue(0);
      goto LABEL_8;
    case 3:
      uint64_t v13 = sub_1C0325C14(*(void **)(v0 + 24));
      uint64_t v10 = *(void *)(v0 + 48);
      uint64_t v12 = *(void **)(v0 + 16);
      uint64_t v11 = *(void *)(v0 + 24);
      *(void *)uint64_t v10 = v13;
      *(unsigned char *)(v10 + 8) = v14 & 1;
      type metadata accessor for PuzzleStatisticValue(0);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      *uint64_t v12 = v11;
      uint64_t v15 = type metadata accessor for PuzzleStatistic();
      sub_1C032BE04(v10, (uint64_t)v12 + *(int *)(v15 + 20), type metadata accessor for PuzzleStatisticCategory);
      goto LABEL_19;
    case 4:
      sub_1C0327500(*(void **)(v0 + 24), (uint64_t)&v55);
      uint64_t v16 = *(void **)(v0 + 16);
      uint64_t v54 = *(void *)(v0 + 24);
      uint64_t v17 = v55;
      char v18 = v56;
      uint64_t v19 = v57;
      char v20 = v58;
      uint64_t v21 = v59;
      char v22 = v60;
      uint64_t v23 = (char *)v16 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      *(void *)uint64_t v23 = v17;
      v23[8] = v18;
      type metadata accessor for PuzzleStatisticValue(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v25 = &v23[*(int *)(v24 + 20)];
      *(void *)uint64_t v25 = v19;
      v25[8] = v20;
      swift_storeEnumTagMultiPayload();
      uint64_t v26 = &v23[*(int *)(v24 + 24)];
      *(void *)uint64_t v26 = v21;
      v26[8] = v22;
      goto LABEL_18;
    case 5:
      sub_1C03276A4(*(void **)(v0 + 24), (uint64_t)&v55);
      uint64_t v16 = *(void **)(v0 + 16);
      uint64_t v54 = *(void *)(v0 + 24);
      uint64_t v27 = v55;
      char v28 = v56;
      uint64_t v29 = v57;
      char v30 = v58;
      uint64_t v31 = v59;
      char v32 = v60;
      uint64_t v33 = (char *)v16 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      *(void *)uint64_t v33 = v27;
      v33[8] = v28;
      type metadata accessor for PuzzleStatisticValue(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v35 = &v33[*(int *)(v34 + 20)];
      *(void *)uint64_t v35 = v29;
      v35[8] = v30;
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = &v33[*(int *)(v34 + 24)];
      *(void *)uint64_t v36 = v31;
      v36[8] = v32;
      goto LABEL_18;
    case 6:
      sub_1C0327848(*(void **)(v0 + 24), (uint64_t)&v55);
      uint64_t v16 = *(void **)(v0 + 16);
      uint64_t v54 = *(void *)(v0 + 24);
      uint64_t v43 = v55;
      char v44 = v56;
      uint64_t v45 = v57;
      char v46 = v58;
      uint64_t v47 = v59;
      char v48 = v60;
      long long v49 = (char *)v16 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      *(void *)long long v49 = v43;
      v49[8] = v44;
      type metadata accessor for PuzzleStatisticValue(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v51 = &v49[*(int *)(v50 + 20)];
      *(void *)uint64_t v51 = v45;
      v51[8] = v46;
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = &v49[*(int *)(v50 + 24)];
      *(void *)uint64_t v52 = v47;
      v52[8] = v48;
LABEL_18:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      *uint64_t v16 = v54;
      goto LABEL_19;
    case 7:
      uint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 104) = v37;
      *uint64_t v37 = v0;
      v37[1] = sub_1C031F1C0;
      uint64_t v38 = *(void *)(v0 + 24);
      uint64_t v39 = *(void *)(v0 + 16);
      return sub_1C0320F60(v39, v38);
    case 8:
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 96) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_1C031F04C;
      uint64_t v41 = *(void *)(v0 + 24);
      uint64_t v42 = *(void *)(v0 + 16);
      return sub_1C031F334(v42, v41);
    default:
      sub_1C0325F6C(*(void **)(v0 + 24), *(void *)(v0 + 72));
      uint64_t v1 = *(void *)(v0 + 72);
      uint64_t v3 = *(void **)(v0 + 16);
      uint64_t v2 = *(void *)(v0 + 24);
      uint64_t v4 = type metadata accessor for PuzzleStatistic();
      sub_1C032BE04(v1, (uint64_t)v3 + *(int *)(v4 + 20), (uint64_t (*)(void))sub_1C032BB9C);
      type metadata accessor for PuzzleStatisticValue(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      *uint64_t v3 = v2;
LABEL_19:
      swift_unknownObjectRetain();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
      return v53();
  }
}

uint64_t sub_1C031ED94()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_1C031EFC4;
  }
  else {
    uint64_t v4 = sub_1C031EEC0;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C031EEC0()
{
  uint64_t v1 = v0[8];
  uint64_t v3 = (void *)v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = type metadata accessor for PuzzleStatistic();
  sub_1C032BE04(v1, (uint64_t)v3 + *(int *)(v4 + 20), (uint64_t (*)(void))sub_1C032BB9C);
  type metadata accessor for PuzzleStatisticValue(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  *uint64_t v3 = v2;
  swift_unknownObjectRetain();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C031EFC4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C031F04C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C031F1C0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C031F334(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_1C032BBD0(0);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  sub_1C032BC04(0);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for PuzzleLeaderboardResult();
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C031F4DC, v2, 0);
}

uint64_t sub_1C031F4DC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  *(void *)(v0 + 128) = *(void *)(v1 + 240);
  uint64_t v2 = *(void *)(v1 + 248);
  *(void *)(v0 + 136) = v2;
  *(void *)(v0 + 144) = swift_getObjectType();
  if ((*(uint64_t (**)(void))(v2 + 16))())
  {
    id v3 = objc_msgSend(*(id *)(v0 + 24), sel_identifier);
    uint64_t v4 = sub_1C151E62C();
    uint64_t v6 = v5;

    *(void *)(v0 + 152) = v4;
    *(void *)(v0 + 160) = v6;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1C031F6EC;
    return FCNewsAppConfigurationManager.fetchConfiguration(cachedOnly:)(0, ObjectType);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v11 = *(void *)(v0 + 64);
    uint64_t v12 = *(void *)(v0 + 16);
    uint64_t v13 = type metadata accessor for PuzzleStatistic();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v12 + *(int *)(v13 + 20), 1, 1, v10);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_storeEnumTagMultiPayload();
    **(void **)(v0 + 16) = *(void *)(v0 + 24);
    swift_unknownObjectRetain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_1C031F6EC(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[22] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[4];
  if (v1)
  {
    uint64_t v6 = sub_1C031FA3C;
  }
  else
  {
    v4[23] = a1;
    uint64_t v6 = sub_1C031F828;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

void sub_1C031F828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v31 = v10;
  uint64_t v12 = *(void *)(v10 + 152);
  uint64_t v11 = *(void **)(v10 + 160);
  id v13 = objc_msgSend(*(id *)(v10 + 184), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  v14._uint64_t countAndFlagsBits = v12;
  v14._object = v11;
  unint64_t v15 = (unint64_t)FCPuzzlesConfiguration.leaderboardDifficultyLevels(for:)(v14);

  if (!v15) {
    goto LABEL_9;
  }
  uint64_t v16 = *(void *)(v10 + 176);
  unint64_t v30 = v15;
  swift_bridgeObjectRetain();
  sub_1C03297D0((uint64_t *)&v30);
  if (v16)
  {
    swift_release();
    return;
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v30;
  *(void *)(v10 + 192) = v30;
  uint64_t v18 = *(void *)(v17 + 16);
  *(void *)(v10 + 200) = v18;
  if (!v18)
  {
    swift_release();
LABEL_9:
    *(unsigned char *)(v10 + 272) = 1;
    char v28 = (void *)swift_task_alloc();
    *(void *)(v10 + 240) = v28;
    *char v28 = v10;
    v28[1] = sub_1C0320374;
    uint64_t v21 = *(void *)(v10 + 152);
    uint64_t v22 = *(void *)(v10 + 160);
    uint64_t v29 = *(void *)(v10 + 136);
    uint64_t v24 = *(void *)(v10 + 80);
    uint64_t v33 = *(void *)(v10 + 144);
    uint64_t v34 = v29;
    uint64_t v25 = 0;
    uint64_t v26 = 1;
    uint64_t v27 = (unsigned char *)(v10 + 272);
    goto LABEL_10;
  }
  *(void *)(v10 + 208) = 0;
  uint64_t v19 = *(void *)(v17 + 32);
  *(void *)(v10 + 216) = v19;
  *(unsigned char *)(v10 + 273) = 1;
  char v20 = (void *)swift_task_alloc();
  *(void *)(v10 + 224) = v20;
  *char v20 = v10;
  v20[1] = sub_1C031FAFC;
  uint64_t v21 = *(void *)(v10 + 152);
  uint64_t v22 = *(void *)(v10 + 160);
  uint64_t v23 = *(void *)(v10 + 136);
  uint64_t v24 = *(void *)(v10 + 88);
  uint64_t v33 = *(void *)(v10 + 144);
  uint64_t v34 = v23;
  uint64_t v25 = v19;
  uint64_t v26 = 0;
  uint64_t v27 = (unsigned char *)(v10 + 273);
LABEL_10:
  PuzzleGameCenterServiceType.leaderboard(for:difficulty:scope:range:)(v24, v21, v22, v25, v26, v27, 1, 10, a9, a10);
}

uint64_t sub_1C031FA3C()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C031FAFC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 32);

    uint64_t v4 = sub_1C0320938;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 32);
    uint64_t v4 = sub_1C031FC30;
  }
  return MEMORY[0x1F4188298](v4, v5, 0);
}

void sub_1C031FC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *(void *)(v10 + 96);
  uint64_t v12 = *(void *)(v10 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 104) + 48))(v12, 1, v11) == 1)
  {
    id v13 = (uint64_t (*)(void))sub_1C032BC04;
    uint64_t v14 = v12;
    goto LABEL_8;
  }
  uint64_t v15 = *(void *)(v10 + 120);
  sub_1C032BE04(v12, v15, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardResult);
  if (*(uint64_t *)(v15 + *(int *)(v11 + 24)) < 2)
  {
    uint64_t v14 = *(void *)(v10 + 120);
    id v13 = (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardResult;
LABEL_8:
    sub_1C032CA9C(v14, v13);
    uint64_t v21 = *(void *)(v10 + 208) + 1;
    if (v21 == *(void *)(v10 + 200))
    {
      uint64_t v22 = *(void *)(v10 + 56);
      uint64_t v23 = *(void *)(v10 + 64);
      uint64_t v24 = *(void *)(v10 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v25 = type metadata accessor for PuzzleStatistic();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v24 + *(int *)(v25 + 20), 1, 1, v22);
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_storeEnumTagMultiPayload();
      **(void **)(v10 + 16) = *(void *)(v10 + 24);
      swift_unknownObjectRetain();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v26 = *(void (**)(void))(v10 + 8);
      v26();
    }
    else
    {
      *(void *)(v10 + 208) = v21;
      uint64_t v27 = *(void *)(*(void *)(v10 + 192) + 8 * v21 + 32);
      *(void *)(v10 + 216) = v27;
      *(unsigned char *)(v10 + 273) = 1;
      char v28 = (void *)swift_task_alloc();
      *(void *)(v10 + 224) = v28;
      *char v28 = v10;
      v28[1] = sub_1C031FAFC;
      uint64_t v29 = *(void *)(v10 + 152);
      uint64_t v30 = *(void *)(v10 + 160);
      uint64_t v31 = *(void *)(v10 + 88);
      PuzzleGameCenterServiceType.leaderboard(for:difficulty:scope:range:)(v31, v29, v30, v27, 0, (unsigned char *)(v10 + 273), 1, 10, a9, a10);
    }
    return;
  }
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v10 + 232) = v16;
  *uint64_t v16 = v10;
  v16[1] = sub_1C031FF50;
  uint64_t v17 = *(void *)(v10 + 216);
  uint64_t v18 = *(void *)(v10 + 120);
  uint64_t v19 = *(void *)(v10 + 48);
  uint64_t v20 = *(void *)(v10 + 24);
  sub_1C03279EC(v19, v20, v17, 0, v18);
}

uint64_t sub_1C031FF50()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0)
  {

    uint64_t v4 = sub_1C0320B74;
  }
  else
  {
    uint64_t v4 = sub_1C0320088;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

void sub_1C0320088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *(void *)(v10 + 56);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(v10 + 48);
  sub_1C032CA9C(*(void *)(v10 + 120), (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardResult);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) != 1)
  {
    uint64_t v20 = *(void *)(v10 + 64);
    uint64_t v19 = *(void *)(v10 + 72);
    uint64_t v22 = *(void *)(v10 + 48);
    uint64_t v21 = *(void *)(v10 + 56);
    uint64_t v23 = *(void *)(v10 + 16);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C032BE04(v22, v19, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    uint64_t v24 = v23 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    sub_1C032BE04(v19, v24, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v21);
    goto LABEL_5;
  }
  sub_1C032CA9C(*(void *)(v10 + 48), (uint64_t (*)(void))sub_1C032BBD0);
  uint64_t v14 = *(void *)(v10 + 208) + 1;
  if (v14 == *(void *)(v10 + 200))
  {
    uint64_t v15 = *(void *)(v10 + 56);
    uint64_t v16 = *(void *)(v10 + 64);
    uint64_t v17 = *(void *)(v10 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for PuzzleStatistic();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v17 + *(int *)(v18 + 20), 1, 1, v15);
LABEL_5:
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_storeEnumTagMultiPayload();
    **(void **)(v10 + 16) = *(void *)(v10 + 24);
    swift_unknownObjectRetain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(void (**)(void))(v10 + 8);
    v25();
    return;
  }
  *(void *)(v10 + 208) = v14;
  uint64_t v26 = *(void *)(*(void *)(v10 + 192) + 8 * v14 + 32);
  *(void *)(v10 + 216) = v26;
  *(unsigned char *)(v10 + 273) = 1;
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v10 + 224) = v27;
  void *v27 = v10;
  v27[1] = sub_1C031FAFC;
  uint64_t v28 = *(void *)(v10 + 152);
  uint64_t v29 = *(void *)(v10 + 160);
  uint64_t v30 = *(void *)(v10 + 88);
  PuzzleGameCenterServiceType.leaderboard(for:difficulty:scope:range:)(v30, v28, v29, v26, 0, (unsigned char *)(v10 + 273), 1, 10, a9, a10);
}

uint64_t sub_1C0320374()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 32);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C0320DD4;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 32);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C03204A0;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C03204A0()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[10];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 48))(v2, 1, v1) == 1)
  {
    uint64_t v3 = (uint64_t (*)(void))sub_1C032BC04;
    uint64_t v4 = v2;
LABEL_8:
    sub_1C032CA9C(v4, v3);
    uint64_t v11 = v0[7];
    uint64_t v12 = v0[8];
    uint64_t v13 = v0[2];
    uint64_t v14 = type metadata accessor for PuzzleStatistic();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v13 + *(int *)(v14 + 20), 1, 1, v11);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_storeEnumTagMultiPayload();
    *(void *)v0[2] = v0[3];
    swift_unknownObjectRetain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  uint64_t v5 = v0[14];
  sub_1C032BE04(v2, v5, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardResult);
  if (*(uint64_t *)(v5 + *(int *)(v1 + 24)) < 2)
  {
    uint64_t v4 = v0[14];
    uint64_t v3 = (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardResult;
    goto LABEL_8;
  }
  uint64_t v6 = (void *)swift_task_alloc();
  v0[32] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C03206D8;
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[3];
  return sub_1C03279EC(v8, v9, 0, 1, v7);
}

uint64_t sub_1C03206D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_1C0320E8C;
  }
  else {
    uint64_t v4 = sub_1C0320804;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C0320804()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  sub_1C032CA9C(v0[14], (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardResult);
  uint64_t v3 = type metadata accessor for PuzzleStatistic();
  sub_1C032BE04(v1, v2 + *(int *)(v3 + 20), (uint64_t (*)(void))sub_1C032BBD0);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_storeEnumTagMultiPayload();
  *(void *)v0[2] = v0[3];
  swift_unknownObjectRetain();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1C0320938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v10 + 104) + 56))(*(void *)(v10 + 88), 1, 1, *(void *)(v10 + 96));
  sub_1C032CA9C(*(void *)(v10 + 88), (uint64_t (*)(void))sub_1C032BC04);
  uint64_t v11 = *(void *)(v10 + 208) + 1;
  if (v11 == *(void *)(v10 + 200))
  {
    uint64_t v12 = *(void *)(v10 + 56);
    uint64_t v13 = *(void *)(v10 + 64);
    uint64_t v14 = *(void *)(v10 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = type metadata accessor for PuzzleStatistic();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v14 + *(int *)(v15 + 20), 1, 1, v12);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_storeEnumTagMultiPayload();
    **(void **)(v10 + 16) = *(void *)(v10 + 24);
    swift_unknownObjectRetain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(void (**)(void))(v10 + 8);
    v16();
  }
  else
  {
    *(void *)(v10 + 208) = v11;
    uint64_t v17 = *(void *)(*(void *)(v10 + 192) + 8 * v11 + 32);
    *(void *)(v10 + 216) = v17;
    *(unsigned char *)(v10 + 273) = 1;
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v10 + 224) = v18;
    *uint64_t v18 = v10;
    v18[1] = sub_1C031FAFC;
    uint64_t v19 = *(void *)(v10 + 152);
    uint64_t v20 = *(void *)(v10 + 160);
    uint64_t v21 = *(void *)(v10 + 88);
    PuzzleGameCenterServiceType.leaderboard(for:difficulty:scope:range:)(v21, v19, v20, v17, 0, (unsigned char *)(v10 + 273), 1, 10, a9, a10);
  }
}

void sub_1C0320B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *(void *)(v10 + 56);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(v10 + 48);
  sub_1C032CA9C(*(void *)(v10 + 120), (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardResult);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v13, 1, 1, v11);
  sub_1C032CA9C(*(void *)(v10 + 48), (uint64_t (*)(void))sub_1C032BBD0);
  uint64_t v14 = *(void *)(v10 + 208) + 1;
  if (v14 == *(void *)(v10 + 200))
  {
    uint64_t v15 = *(void *)(v10 + 56);
    uint64_t v16 = *(void *)(v10 + 64);
    uint64_t v17 = *(void *)(v10 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for PuzzleStatistic();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v17 + *(int *)(v18 + 20), 1, 1, v15);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_storeEnumTagMultiPayload();
    **(void **)(v10 + 16) = *(void *)(v10 + 24);
    swift_unknownObjectRetain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(void (**)(void))(v10 + 8);
    v19();
  }
  else
  {
    *(void *)(v10 + 208) = v14;
    uint64_t v20 = *(void *)(*(void *)(v10 + 192) + 8 * v14 + 32);
    *(void *)(v10 + 216) = v20;
    *(unsigned char *)(v10 + 273) = 1;
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v10 + 224) = v21;
    *uint64_t v21 = v10;
    v21[1] = sub_1C031FAFC;
    uint64_t v22 = *(void *)(v10 + 152);
    uint64_t v23 = *(void *)(v10 + 160);
    uint64_t v24 = *(void *)(v10 + 88);
    PuzzleGameCenterServiceType.leaderboard(for:difficulty:scope:range:)(v24, v22, v23, v20, 0, (unsigned char *)(v10 + 273), 1, 10, a9, a10);
  }
}

uint64_t sub_1C0320DD4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0320E8C()
{
  sub_1C032CA9C(*(void *)(v0 + 112), (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardResult);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0320F60(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  sub_1C032BB9C(0);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v3[9] = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  v3[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0321034, v2, 0);
}

uint64_t sub_1C0321034()
{
  *(void *)(v0 + 88) = sub_1C0325A10(*(void **)(v0 + 40));
  uint64_t v1 = sub_1C0325C14(*(void **)(v0 + 40));
  *(unsigned char *)(v0 + 24) = v2;
  *(void *)(v0 + 16) = v1;
  sub_1C0325F6C(*(void **)(v0 + 40), *(void *)(v0 + 64));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C0321160;
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 40);
  return sub_1C0326494(v4, v5);
}

uint64_t sub_1C0321160()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    sub_1C032CA9C(*(void *)(v2 + 64), (uint64_t (*)(void))sub_1C032BB9C);
    uint64_t v4 = sub_1C0321588;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 48);
    uint64_t v4 = sub_1C032129C;
  }
  return MEMORY[0x1F4188298](v4, v5, 0);
}

uint64_t sub_1C032129C()
{
  uint64_t v53 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  sub_1C0327500(*(void **)(v0 + 40), (uint64_t)&v35);
  if (v1)
  {
    uint64_t v9 = *(void *)(v0 + 64);
    sub_1C032CA9C(*(void *)(v0 + 56), (uint64_t (*)(void))sub_1C032BB9C);
    sub_1C032CA9C(v9, (uint64_t (*)(void))sub_1C032BB9C);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v2 = v35;
    char v3 = v36;
    uint64_t v4 = v37;
    char v5 = v38;
    uint64_t v6 = v39;
    char v7 = v40;
    sub_1C03276A4(*(void **)(v0 + 40), (uint64_t)&v41);
    uint64_t v8 = v41;
    char v34 = v42;
    uint64_t v33 = v43;
    char v32 = v44;
    uint64_t v31 = v45;
    char v30 = v46;
    sub_1C0327848(*(void **)(v0 + 40), (uint64_t)&v47);
    char v12 = *(unsigned char *)(v0 + 24);
    uint64_t v13 = *(void *)(v0 + 16);
    uint64_t v14 = *(void *)(v0 + 80);
    uint64_t v15 = *(int **)(v0 + 72);
    uint64_t v29 = *(void *)(v0 + 56);
    uint64_t v27 = *(void *)(v0 + 64);
    uint64_t v28 = *(void *)(v0 + 40);
    uint64_t v26 = *(void **)(v0 + 32);
    uint64_t v25 = v47;
    char v24 = v48;
    uint64_t v23 = v49;
    char v22 = v50;
    uint64_t v21 = v51;
    char v20 = v52;
    *(void *)uint64_t v14 = *(void *)(v0 + 88);
    *(void *)(v14 + 8) = v13;
    *(unsigned char *)(v14 + 16) = v12 & 1;
    sub_1C032BE04(v27, v14 + v15[6], (uint64_t (*)(void))sub_1C032BB9C);
    sub_1C032BE04(v29, v14 + v15[7], (uint64_t (*)(void))sub_1C032BB9C);
    uint64_t v16 = v14 + v15[8];
    *(void *)uint64_t v16 = v2;
    *(unsigned char *)(v16 + 8) = v3;
    *(void *)(v16 + 16) = v4;
    *(unsigned char *)(v16 + 24) = v5;
    *(void *)(v16 + 32) = v6;
    *(unsigned char *)(v16 + 40) = v7;
    uint64_t v17 = v14 + v15[9];
    *(void *)uint64_t v17 = v8;
    *(unsigned char *)(v17 + 8) = v34;
    *(void *)(v17 + 16) = v33;
    *(unsigned char *)(v17 + 24) = v32;
    *(void *)(v17 + 32) = v31;
    *(unsigned char *)(v17 + 40) = v30;
    uint64_t v18 = v14 + v15[10];
    *(void *)uint64_t v18 = v25;
    *(unsigned char *)(v18 + 8) = v24;
    *(void *)(v18 + 16) = v23;
    *(unsigned char *)(v18 + 24) = v22;
    *(void *)(v18 + 32) = v21;
    *(unsigned char *)(v18 + 40) = v20;
    uint64_t v19 = type metadata accessor for PuzzleStatistic();
    sub_1C032BE04(v14, (uint64_t)v26 + *(int *)(v19 + 20), type metadata accessor for PuzzleStatisticsGroupedValue);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_storeEnumTagMultiPayload();
    *uint64_t v26 = v28;
    swift_unknownObjectRetain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v10();
}