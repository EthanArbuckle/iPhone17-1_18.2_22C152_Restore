uint64_t FormatStateMachineEvent.fromState.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateMachineEvent.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateMachineEvent.fromState.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatStateMachineEvent.fromState.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatStateMachineEvent.toState.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C118CFE4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C118CFEC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = *(void *)(v1 + 24);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateMachineEventValue.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FormatStateMachineEventValue.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t _s8NewsFeed23FormatStateMachineEventV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v6 = a2[2];
  uint64_t v5 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (v9 = sub_1C1520A9C(), uint64_t result = 0, (v9 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v11 = sub_1BFEFAE14(v2, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11)
    {
      if (v3 == v5 && v4 == v7)
      {
        return 1;
      }
      else
      {
        return sub_1C1520A9C();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C118D15C(uint64_t a1)
{
  unint64_t result = sub_1C118D184();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C118D184()
{
  unint64_t result = qword_1EA1AC648;
  if (!qword_1EA1AC648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC648);
  }
  return result;
}

unint64_t sub_1C118D1DC()
{
  unint64_t result = qword_1EB879B90;
  if (!qword_1EB879B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879B90);
  }
  return result;
}

uint64_t sub_1C118D230(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0072770(a1, a2, a3, (uint64_t (*)(void))sub_1C007271C, (uint64_t (*)(void))sub_1C08E5928, (uint64_t (*)(void))sub_1C118D270);
}

unint64_t sub_1C118D270()
{
  unint64_t result = qword_1EA1AC650;
  if (!qword_1EA1AC650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC650);
  }
  return result;
}

unint64_t sub_1C118D2C4(uint64_t a1)
{
  unint64_t result = sub_1C006B830();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C118D2EC()
{
  unint64_t result = qword_1EB892880;
  if (!qword_1EB892880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB892880);
  }
  return result;
}

uint64_t sub_1C118D340@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C118D34C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatStateMachineEvent()
{
  return &type metadata for FormatStateMachineEvent;
}

ValueMetadata *type metadata accessor for FormatStateMachineEventValue()
{
  return &type metadata for FormatStateMachineEventValue;
}

uint64_t sub_1C118D3B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1BFF2918C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF29220();
  MEMORY[0x1F4188790](v8 - 8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  switch((unint64_t)*v2 >> 60)
  {
    case 1uLL:
      uint64_t v18 = v11 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v19 = *(void *)(v18 + 24);
      uint64_t v32 = *(void *)(v18 + 16);
      uint64_t v33 = v19;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v20 = v33;
      *a2 = v32;
      a2[1] = v20;
      uint64_t v17 = type metadata accessor for FormatJson();
      goto LABEL_7;
    case 2uLL:
      uint64_t v21 = swift_projectBox();
      sub_1BFFDA278(v21, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF29220);
      sub_1C151629C();
      uint64_t v23 = v22;
      sub_1BFFDA128((uint64_t)v10, (uint64_t (*)(void))sub_1BFF29220);
      *a2 = v23;
      uint64_t v24 = type metadata accessor for FormatJson();
      goto LABEL_15;
    case 3uLL:
    case 4uLL:
      *a2 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = type metadata accessor for FormatJson();
      goto LABEL_7;
    case 5uLL:
      uint64_t v26 = v11 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v27 = *(void *)(v26 + 24);
      *a2 = *(void *)(v26 + 16);
      a2[1] = v27;
      uint64_t v28 = type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a2, 0, 1, v28);
      return swift_bridgeObjectRetain();
    case 6uLL:
      uint64_t v29 = swift_projectBox();
      sub_1BFFDA278(v29, (uint64_t)v7, (uint64_t (*)(void))sub_1BFF2918C);
      uint64_t v30 = sub_1C1515FDC();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(a2, v7, v30);
      sub_1BFFDA128((uint64_t)v7, (uint64_t (*)(void))sub_1BFF2918C);
      uint64_t v24 = type metadata accessor for FormatJson();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 0, 1, v24);
    case 7uLL:
      *a2 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v31 = type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a2, 0, 1, v31);
      return swift_retain();
    case 8uLL:
      uint64_t v32 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      sub_1C118D3B0(a1);
      swift_release_n();
      return swift_release();
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
      uint64_t v12 = type metadata accessor for FormatJson();
      v13 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
      uint64_t v14 = v12;
      v15 = a2;
      uint64_t v16 = 1;
      goto LABEL_8;
    default:
      *(unsigned char *)a2 = *(unsigned char *)(v11 + 16);
      uint64_t v17 = type metadata accessor for FormatJson();
LABEL_7:
      swift_storeEnumTagMultiPayload();
      v13 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
      v15 = a2;
      uint64_t v16 = 0;
      uint64_t v14 = v17;
LABEL_8:
      return v13(v15, v16, 1, v14);
  }
}

uint64_t sub_1C118D8E0(uint64_t a1, uint64_t a2)
{
  sub_1C0A52A28();
  swift_bridgeObjectRetain();
  if (swift_dynamicCast())
  {
    uint64_t v4 = *((void *)&v8 + 1);
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(&v7, *((uint64_t *)&v8 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, a2, v4, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  }
  else
  {
    uint64_t v9 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
    return sub_1BFFD5ADC((uint64_t)&v7, (uint64_t (*)(void))sub_1C0A52ADC);
  }
}

uint64_t sub_1C118D9D8(uint64_t a1, uint64_t (*a2)(uint64_t a1, uint64_t a2, uint64_t a3, char a4), unint64_t a3)
{
  return swift_release();
}

void FormatStateViewNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C151635C();
  uint64_t v75 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  v74 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFD5BA0();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)(*(void *)(a2 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v76 = v2;
  uint64_t v13 = *(void *)(v2 + 56);
  uint64_t v79 = *(void *)(v2 + 64);
  if (!*(void *)(v12 + 16))
  {
    sub_1C119059C(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_7:
    sub_1BFFD5ADC((uint64_t)v9, (uint64_t (*)(void))sub_1BFFD5BA0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA91C((unint64_t *)&qword_1EB875690, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    uint64_t v52 = swift_allocError();
    uint64_t v53 = v79;
    uint64_t *v54 = v13;
    v54[1] = v53;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    uint64_t v78 = v52;
    swift_willThrow();
    return;
  }
  uint64_t v71 = v5;
  uint64_t v72 = a1;
  uint64_t v73 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = v79;
  swift_bridgeObjectRetain();
  uint64_t v77 = v13;
  unint64_t v15 = sub_1BFEF2D8C(v13, v14);
  if (v16)
  {
    unint64_t v17 = v15;
    uint64_t v18 = *(void *)(v12 + 56);
    sub_1C119059C(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    uint64_t v20 = v19;
    uint64_t v21 = v11;
    uint64_t v22 = *(void *)(v19 - 8);
    sub_1BFFD59B8(v18 + *(void *)(v22 + 72) * v17, (uint64_t)v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v9, 0, 1, v20);
    uint64_t v11 = v21;
  }
  else
  {
    sub_1C119059C(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    uint64_t v20 = v24;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
  }
  swift_bridgeObjectRelease();
  sub_1C119059C(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v9, 1, v20);
  uint64_t v13 = v77;
  if (v25 == 1) {
    goto LABEL_7;
  }
  uint64_t v69 = *((void *)v9 + 1);
  uint64_t v26 = *((void *)v9 + 4);
  uint64_t v68 = *((void *)v9 + 3);
  uint64_t v27 = *((void *)v9 + 5);
  uint64_t v28 = *((void *)v9 + 6);
  uint64_t v67 = v11;
  uint64_t v30 = *((void *)v9 + 7);
  uint64_t v29 = *((void *)v9 + 8);
  uint64_t v31 = *((void *)v9 + 9);
  unsigned int v32 = v9[80];
  LODWORD(v70) = v32 >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1DB64(v26, v27, v28, v30, v29, v31, v32);
  sub_1BFFD8564((uint64_t)v9);
  uint64_t v33 = v29;
  uint64_t v34 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1DB64(v26, v27, v28, v30, v33, v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEC28BC(v26, v27, v28, v30, v33, v31, v32);
  if (v70 != 1)
  {
    sub_1BFEC28BC(v26, v27, v28, v30, v33, v31, v32);
    uint64_t v13 = v77;
    goto LABEL_13;
  }
  unsigned int v65 = v32;
  uint64_t v64 = v26;
  uint64_t v66 = v27;
  if (v32)
  {
    uint64_t v69 = v33;
    uint64_t v70 = v31;
    uint64_t v35 = v72;
LABEL_11:
    uint64_t v36 = v76;
    swift_beginAccess();
    uint64_t v37 = *(void *)(v36 + 16);
    uint64_t v38 = *(void *)(v36 + 24);
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_1BFF303E0(v37, v38);
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v41 = v74;
    sub_1C151634C();
    uint64_t v42 = sub_1C151633C();
    uint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v41, v71);
    v85[0] = v42;
    v85[1] = v44;
    v85[2] = v77;
    v85[3] = v79;
    uint64_t v45 = v64;
    uint64_t v46 = v66;
    v85[4] = v64;
    v85[5] = v66;
    uint64_t v47 = v28;
    v85[6] = v28;
    v85[7] = v34;
    uint64_t v48 = v69;
    uint64_t v49 = v70;
    v85[8] = v69;
    v85[9] = v70;
    LOBYTE(v44) = v65;
    char v86 = v65 & 1;
    swift_bridgeObjectRetain();
    sub_1BFF1DB64(v45, v46, v47, v34, v48, v49, v44);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v87 = *(void *)(v35 + 72);
    *(void *)(v35 + 72) = 0x8000000000000000;
    sub_1C1066270((uint64_t)v85, v72, v40, isUniquelyReferenced_nonNull_native);
    *(void *)(v35 + 72) = v87;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v51 = v78;
    FormatStateViewNode.bindChildren(binder:context:)(v35, v73);
    sub_1BFEC28BC(v45, v66, v47, v34, v48, v49, v44);
    uint64_t v78 = v51;
    return;
  }
  uint64_t v55 = *(void *)(v28 + 24);
  uint64_t v70 = *(void *)(v28 + 16);
  uint64_t v56 = *(void *)(v28 + 32);
  unsigned int v57 = *(unsigned __int8 *)(v28 + 40);
  int v58 = *(unsigned __int8 *)(v28 + 41);
  uint64_t v80 = v70;
  uint64_t v81 = v55;
  uint64_t v82 = v56;
  char v83 = v57;
  char v84 = v58;
  sub_1BFF429DC(v28, v34, v33, v31, 0);
  swift_retain();
  uint64_t v63 = v55;
  uint64_t v69 = v56;
  LODWORD(v68) = v57;
  LODWORD(v67) = v58;
  sub_1C118FE4C(v70, v55, v56, v57, v58, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
  uint64_t v35 = v72;
  uint64_t v59 = v73;
  uint64_t v60 = v78;
  FormatCommandBinding.bind(binder:context:)(v72, v73);
  uint64_t v78 = v60;
  if (v60)
  {
    sub_1C118FE4C(v70, v63, v69, v68, v67, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
    swift_release();
  }
  else
  {
    sub_1C118FE4C(v70, v63, v69, v68, v67, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
    swift_release();
    uint64_t v61 = v78;
    sub_1C04CD090(v35, v59, v34);
    uint64_t v78 = v61;
    if (!v61)
    {
      sub_1C118D8E0(v35, v59);
      sub_1BFEC41E8(v28, v34, v33, v31, 0);
      uint64_t v78 = 0;
      uint64_t v69 = v33;
      uint64_t v70 = v31;
      goto LABEL_11;
    }
  }
  sub_1BFEC41E8(v28, v34, v33, v31, 0);
  sub_1BFEC28BC(v64, v27, v28, v34, v33, v31, v65);
}

unint64_t FormatStateViewNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v3;
  return sub_1BFF35EA4(v3);
}

uint64_t FormatStateViewNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatStateViewNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 88);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t sub_1C118E59C(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  int64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v24 = v1[7];
    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v23 = v1[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v6, 0);
    uint64_t v7 = v26;
    uint64_t v8 = (uint64_t *)(v5 + 56);
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      unint64_t v12 = *(void *)(v26 + 16);
      unint64_t v11 = *(void *)(v26 + 24);
      swift_bridgeObjectRetain();
      if (v12 >= v11 >> 1) {
        sub_1BFF661B8(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v26 + 16) = v12 + 1;
      uint64_t v13 = v26 + 16 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v10;
      v8 += 5;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v3 = v24;
    uint64_t v2 = a1;
    uint64_t v4 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  *(void *)(v14 + 24) = v4;
  *(void *)(v14 + 32) = v7;
  unint64_t v15 = v14 | 0xA000000000000000;
  char v16 = *(void **)(v2 + 48);
  uint64_t v17 = v16[2];
  if (v17
    && (unint64_t v18 = v16[v17 + 3],
        swift_retain(),
        swift_retain(),
        char v19 = sub_1C0387D88(v18, v15),
        swift_release(),
        swift_release(),
        (v19 & 1) != 0))
  {
    swift_release();
  }
  else
  {
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v16 = sub_1C0EE23FC(0, v16[2] + 1, 1, v16);
    }
    unint64_t v21 = v16[2];
    unint64_t v20 = v16[3];
    if (v21 >= v20 >> 1) {
      char v16 = sub_1C0EE23FC((void *)(v20 > 1), v21 + 1, 1, v16);
    }
    v16[2] = v21 + 1;
    v16[v21 + 4] = v15;
    swift_release();
    *(void *)(v2 + 48) = v16;
  }
  return sub_1C05C184C(v2);
}

uint64_t FormatStateViewNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 80);
}

uint64_t FormatStateViewNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t FormatStateViewNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateViewNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatStateViewNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatStateViewNode.size.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = v2;
  return sub_1BFF322A8(v3);
}

uint64_t (*FormatStateViewNode.size.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatStateViewNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatStateViewNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatStateViewNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatStateViewNode.stateMachineName.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNode.states.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateViewNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatStateViewNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t FormatStateViewNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 88);
  *(void *)(v1 + 88) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatStateViewNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatStateViewNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatStateViewNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatStateViewNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatStateViewNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatStateViewNode.__allocating_init(identifier:size:resize:adjustments:stateMachineName:states:zIndex:visibility:isUserInteractionEnabled:animation:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17 = swift_allocObject();
  FormatStateViewNode.init(identifier:size:resize:adjustments:stateMachineName:states:zIndex:visibility:isUserInteractionEnabled:animation:selectors:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  return v17;
}

uint64_t FormatStateViewNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF0056C(*(void *)(v0 + 88));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatStateViewNode.__deallocating_deinit()
{
  FormatStateViewNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C118EE7C(void *a1)
{
  return FormatStateViewNode.encode(to:)(a1);
}

uint64_t sub_1C118EEA0(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed19FormatStateViewNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C118EEAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *a1;
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a3 + 40);
  if (v11)
  {
    uint64_t v12 = *(void *)(v11 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v12 = 0;
  }
  swift_beginAccess();
  uint64_t v13 = *(void *)(a3 + 80);
  swift_beginAccess();
  unint64_t v14 = *(void *)(a3 + 88);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v14);
  sub_1BFE6EF70(a4, &v20);
  sub_1BFF0056C(v14);
  uint64_t v15 = v20;
  swift_beginAccess();
  char v16 = *(unsigned char *)(a3 + 96);
  sub_1C1517EFC();
  type metadata accessor for FormatStateViewNodeLayoutAttributes();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v9;
  *(void *)(v17 + 24) = v10;
  *(void *)(v17 + 32) = v12;
  *(void *)(v17 + 40) = v13;
  *(void *)(v17 + 48) = v15;
  swift_beginAccess();
  *(unsigned char *)(v17 + 56) = v16;
  *(void *)(v17 + 64) = v19;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v17;
  *a5 = result | 0x4000000000000004;
  return result;
}

uint64_t sub_1C118F040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_getKeyPath();
  uint64_t v28 = MEMORY[0x1E4FBB1A0];
  uint64_t v29 = MEMORY[0x1E4FABA68];
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C1190448(0, (unint64_t *)&qword_1EB884D88, MEMORY[0x1E4FAB6F0]);
  sub_1BFF544FC(&qword_1EB884D80, (unint64_t *)&qword_1EB884D88, v12);
  sub_1BFFBA91C((unint64_t *)&qword_1EB871238, 255, (void (*)(uint64_t))sub_1BFE13AFC);
  swift_bridgeObjectRetain();
  sub_1C151733C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  uint64_t v30 = a1;
  swift_getKeyPath();
  uint64_t v23 = a4;
  uint64_t v13 = *(void *)(a4 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a5 + 16);
  uint64_t v14 = *(void *)(a5 + 24);
  uint64_t v16 = *(void *)(v13 + 40);
  if (v16)
  {
    uint64_t v26 = *(void *)(v13 + 32);
    uint64_t v27 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v15 = v26;
    uint64_t v14 = v27;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  uint64_t v28 = MEMORY[0x1E4FBB1A0];
  uint64_t v18 = MEMORY[0x1E4FABA68];
  uint64_t v29 = MEMORY[0x1E4FABA68];
  uint64_t v26 = v15;
  uint64_t v27 = v14;
  sub_1C151733C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  uint64_t v30 = a1;
  swift_getKeyPath();
  uint64_t v20 = *(void *)(a5 + 16);
  uint64_t v19 = *(void *)(a5 + 24);
  uint64_t v28 = v17;
  uint64_t v29 = v18;
  uint64_t v26 = v20;
  uint64_t v27 = v19;
  swift_bridgeObjectRetain();
  sub_1C151733C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  uint64_t v26 = a1;
  unint64_t v21 = (void *)swift_allocObject();
  v21[2] = a5;
  v21[3] = v23;
  v21[4] = a6;
  v21[5] = a7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151739C();
  return swift_release();
}

uint64_t sub_1C118F35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v36 = a1;
  uint64_t v37 = a5;
  uint64_t v40 = a4;
  uint64_t v39 = sub_1C1517A9C();
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(result + 16);
  if (v12)
  {
    uint64_t v35 = a3;
    uint64_t v13 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    unsigned int v34 = *MEMORY[0x1E4FAB8F8];
    uint64_t v33 = (uint64_t (**)(char *, void, uint64_t))(v9 + 104);
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = 32;
    uint64_t v32 = v14;
    while (1)
    {
      uint64_t v41 = v12;
      long long v16 = *(_OWORD *)(v14 + v15);
      long long v17 = *(_OWORD *)(v14 + v15 + 16);
      uint64_t v46 = *(void *)(v14 + v15 + 32);
      long long v44 = v16;
      long long v45 = v17;
      uint64_t v19 = *((void *)&v17 + 1);
      uint64_t v18 = v17;
      uint64_t v20 = v13[3];
      if (v20) {
        break;
      }
      sub_1BFF2A03C((uint64_t)&v44);
      swift_bridgeObjectRetain();
      uint64_t v21 = v13[7];
      if (v21) {
        goto LABEL_5;
      }
LABEL_6:
      uint64_t v25 = sub_1BFF1E298(0, 0);
      uint64_t v26 = (*v33)(v38, v34, v39);
      MEMORY[0x1F4188790](v26);
      *(&v31 - 6) = v18;
      *(&v31 - 5) = v19;
      *(&v31 - 4) = v25;
      *(&v31 - 3) = (uint64_t)&v44;
      *(&v31 - 2) = v40;
      sub_1C1190448(0, &qword_1EB884DC8, MEMORY[0x1E4FAB938]);
      swift_allocObject();
      uint64_t v27 = sub_1C1517C0C();
      if (v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        return sub_1C0EC1D2C((uint64_t)&v44);
      }
      uint64_t v28 = v27;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v18;
      *(void *)(v29 + 24) = v19;
      *(void *)(v29 + 32) = v28;
      long long v30 = v45;
      *(_OWORD *)(v29 + 40) = v44;
      *(_OWORD *)(v29 + 56) = v30;
      *(void *)(v29 + 72) = v46;
      *(void *)(v29 + 80) = v25;
      *(void *)(v29 + 88) = v37;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C15175CC();
      swift_release();
      swift_release();
      swift_release();
      v15 += 40;
      uint64_t v12 = v41 - 1;
      uint64_t v14 = v32;
      if (v41 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v42 = v13[2];
    uint64_t v43 = v20;
    sub_1BFF2A03C((uint64_t)&v44);
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    uint64_t v18 = v42;
    uint64_t v19 = v43;
    uint64_t v21 = v13[7];
    if (!v21) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v22 = *(void *)(v21 + 32);
    uint64_t v23 = v13[6];
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v47 = *(void *)(v22 + 16);
    *(void *)(v22 + 16) = 0x8000000000000000;
    sub_1C1065DA0(v23, v18, v19, isUniquelyReferenced_nonNull_native);
    *(void *)(v22 + 16) = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C118F75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v20[4] = a4;
  v20[2] = a2;
  v20[3] = a3;
  sub_1C119059C(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v20 - v14;
  v20[7] = a1;
  v20[1] = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FABA28], v12);
  uint64_t v16 = swift_allocObject();
  long long v17 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v16 + 32) = v17;
  *(void *)(v16 + 48) = *(void *)(a5 + 32);
  *(void *)(v16 + 56) = a6;
  *(void *)(v16 + 64) = a7;
  sub_1BFF2A03C(a5);
  uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB538];
  sub_1C1190448(0, (unint64_t *)&qword_1EB884D78, MEMORY[0x1E4FAB538]);
  sub_1BFF544FC(&qword_1EB884D70, (unint64_t *)&qword_1EB884D78, v18);
  swift_retain();
  swift_retain();
  sub_1C15173CC();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1C118F9B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1517EFC();
  type metadata accessor for FormatStateViewNodeStateLayoutAttributes();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = v7;
  v9[4] = v6;
  v9[5] = v13;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(a3 + 16);
  *(void *)(a3 + 16) = 0x8000000000000000;
  sub_1C1069FD8((uint64_t)v9, v8, v7, isUniquelyReferenced_nonNull_native);
  *(void *)(a3 + 16) = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t result = swift_release();
  *a4 = 0xA000000000000004;
  return result;
}

uint64_t sub_1C118FADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v30 = a1;
  swift_getKeyPath();
  uint64_t v28 = MEMORY[0x1E4FBB1A0];
  uint64_t v29 = MEMORY[0x1E4FABA68];
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C1190448(0, (unint64_t *)&qword_1EB884D88, MEMORY[0x1E4FAB6F0]);
  sub_1BFF544FC(&qword_1EB884D80, (unint64_t *)&qword_1EB884D88, v12);
  sub_1BFFBA91C((unint64_t *)&qword_1EB871238, 255, (void (*)(uint64_t))sub_1BFE13AFC);
  swift_bridgeObjectRetain();
  sub_1C151733C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  uint64_t v30 = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a4 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  uint64_t v15 = *a5;
  uint64_t v14 = a5[1];
  uint64_t v16 = *(void *)(v13 + 40);
  uint64_t v24 = *a5;
  if (v16)
  {
    uint64_t v26 = *(void *)(v13 + 32);
    uint64_t v27 = v16;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    uint64_t v15 = v26;
    uint64_t v17 = v27;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = v14;
  }
  uint64_t v28 = MEMORY[0x1E4FBB1A0];
  uint64_t v29 = MEMORY[0x1E4FABA68];
  uint64_t v26 = v15;
  uint64_t v27 = v17;
  sub_1C151733C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  uint64_t v30 = a1;
  swift_getKeyPath();
  uint64_t v28 = MEMORY[0x1E4FBB1A0];
  uint64_t v29 = MEMORY[0x1E4FABA68];
  uint64_t v26 = v24;
  uint64_t v27 = v14;
  swift_bridgeObjectRetain();
  sub_1C151733C();
  swift_release();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  uint64_t v19 = a5[4];
  uint64_t v33 = v19;
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v21 = (long long *)(v19 + 32);
    sub_1BFFAF7A4((uint64_t)&v33);
    while (1)
    {
      long long v22 = *v21;
      long long v23 = v21[1];
      uint64_t v32 = *((void *)v21 + 4);
      v31[0] = v22;
      v31[1] = v23;
      sub_1BFF1BDBC((uint64_t)v31);
      sub_1BFF52B88(a1, a4, a6);
      if (v6) {
        break;
      }
      sub_1BFF1BD7C((uint64_t)v31);
      uint64_t v21 = (long long *)((char *)v21 + 40);
      if (!--v20) {
        return sub_1BFCA59C8((uint64_t)&v33);
      }
    }
    sub_1BFCA59C8((uint64_t)&v33);
    return sub_1BFF1BD7C((uint64_t)v31);
  }
  return result;
}

uint64_t sub_1C118FE04(uint64_t a1)
{
  return sub_1C118E59C(a1);
}

void sub_1C118FE28(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C118FE4C(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      uint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      uint64_t result = a7();
      break;
    case 6u:
      uint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t v8 = a4 & 1;
      uint64_t result = a8(result, a2, a3, v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C118FF10(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFFBA91C(&qword_1EA1AC658, a2, (void (*)(uint64_t))type metadata accessor for FormatStateViewNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C118FF68(void *a1, uint64_t a2)
{
  a1[1] = sub_1BFFBA91C(&qword_1EB87F010, a2, (void (*)(uint64_t))type metadata accessor for FormatStateViewNode);
  a1[2] = sub_1BFFBA91C(&qword_1EB85F180, v3, (void (*)(uint64_t))type metadata accessor for FormatStateViewNode);
  uint64_t result = sub_1BFFBA91C(&qword_1EA1AC660, v4, (void (*)(uint64_t))type metadata accessor for FormatStateViewNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C1190014(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFFBA91C(&qword_1EA1AC668, a2, (void (*)(uint64_t))type metadata accessor for FormatStateViewNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C119006C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C11900BC@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 32);
  *a2 = v4;
  return sub_1BFF35EA4(v4);
}

uint64_t sub_1C119010C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C119015C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return result;
}

uint64_t sub_1C11901A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 80) = v2;
  return result;
}

unint64_t sub_1C11901E8@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 88);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C1190238@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 96);
  return result;
}

uint64_t sub_1C1190280(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_1C11902C4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatStateViewNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatStateViewNode);
}

uint64_t dispatch thunk of FormatStateViewNode.__allocating_init(identifier:size:resize:adjustments:stateMachineName:states:zIndex:visibility:isUserInteractionEnabled:animation:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t type metadata accessor for FormatStateViewNodeStateMapper()
{
  return self;
}

uint64_t sub_1C119037C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C11903B4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1190404(uint64_t a1)
{
  return sub_1C118F35C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C1190424(uint64_t a1)
{
  return sub_1C118FADC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t **)(v1 + 40), *(void *)(v1 + 48));
}

void sub_1C1190448(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FormatLayout;
    v8[1] = type metadata accessor for FormatLayoutAttributes();
    v8[2] = sub_1BFF597F8();
    v8[3] = sub_1BFFBA91C(&qword_1EB88A8A0, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C119050C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1190574(uint64_t a1)
{
  return sub_1C118F75C(a1, v1[2], v1[3], v1[4], (uint64_t)(v1 + 5), v1[10], v1[11]);
}

void sub_1C119059C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C1190604()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C119065C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C118F9B4(a1, v2 + 16, *(void *)(v2 + 64), a2);
}

uint64_t sub_1C119067C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C11906EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t FeedItemLayoutAttributes.dragBackgroundColor.getter()
{
  uint64_t v1 = type metadata accessor for HeadlineViewLayout.Context(0);
  __n128 v2 = MEMORY[0x1F4188790](v1);
  unint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = 0;
  switch(*v0 >> 60)
  {
    case 4:
      sub_1BFE298EC();
      uint64_t v7 = swift_projectBox();
      sub_1BFE29638(v7, (uint64_t)v4, type metadata accessor for HeadlineViewLayout.Context);
      uint64_t v8 = &v4[*(int *)(v1 + 24)];
      uint64_t v9 = *((void *)v8 + 3);
      uint64_t v10 = *((void *)v8 + 4);
      __swift_project_boxed_opaque_existential_1(v8, v9);
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
      sub_1BFE299DC((uint64_t)v4, type metadata accessor for HeadlineViewLayout.Context);
      return v5;
    case 7:
      sub_1BFE29960();
      uint64_t v12 = *(void *)(*(void *)(swift_projectBox() + *(int *)(v11 + 48)) + 32);
      if (!v12) {
        return 0;
      }
      unsigned __int8 v13 = *(unsigned char *)(v12 + 112);
      if ((v13 & 0xFE) == 0x7E) {
        return 0;
      }
      uint64_t v15 = *(void *)(v12 + 48);
      uint64_t v14 = *(void *)(v12 + 56);
      uint64_t v16 = *(void *)(v12 + 64);
      uint64_t v17 = *(void *)(v12 + 72);
      uint64_t v18 = *(void *)(v12 + 80);
      uint64_t v19 = *(void *)(v12 + 88);
      uint64_t v20 = *(void *)(v12 + 96);
      uint64_t v21 = *(void *)(v12 + 104);
      swift_retain();
      sub_1BFF8C638(v15, v14, v16, v17, v18, v19, v20, v21, v13, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
      uint64_t v22 = sub_1C151F72C();
      if ((~v15 & 0xF000000000000007) != 0)
      {
        uint64_t v25 = v14;
        uint64_t v26 = v15;
        Class v23 = FormatColor.color.getter(v22);
        uint64_t v24 = v16;
        uint64_t v5 = (uint64_t)v23;
        sub_1BFF8C638(v15, v25, v24, v17, v18, v19, v20, v21, v13, (void (*)(void))sub_1BFDC11BC, (void (*)(uint64_t, uint64_t, void))sub_1BFEF68AC);
        swift_release();
      }
      else
      {
        sub_1BFF8C638(v15, v14, v16, v17, v18, v19, v20, v21, v13, (void (*)(void))sub_1BFDC11BC, (void (*)(uint64_t, uint64_t, void))sub_1BFEF68AC);
        swift_release();
        return 0;
      }
      return v5;
    case 0xBLL:
      uint64_t v26 = *(void *)((*v0 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      return FeedItemLayoutAttributes.dragBackgroundColor.getter(v2);
    default:
      return v5;
  }
}

void FeedItemLayoutAttributes.dragPreviewClipping.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatItemNodeLayoutContext();
  __n128 v4 = MEMORY[0x1F4188790](v3 - 8);
  unint64_t v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*v1 >> 60)
  {
    case 4:
      sub_1BFE298EC();
      uint64_t v14 = *(void *)(swift_projectBox() + *(int *)(v13 + 48) + 264);
      __asm { FMOV            V1.2D, #-8.0 }
      *(_OWORD *)a1 = _Q1;
      *(_OWORD *)(a1 + 16) = _Q1;
      *(void *)(a1 + 32) = v14;
      goto LABEL_5;
    case 5:
    case 6:
      __asm { FMOV            V0.2D, #-8.0; jumptable 00000001C1190BB8 cases 5,6 }
      *(_OWORD *)a1 = _Q0;
      *(_OWORD *)(a1 + 16) = _Q0;
      *(void *)(a1 + 32) = 0;
LABEL_5:
      uint64_t v7 = (unsigned int *)MEMORY[0x1E4FAC540];
      goto LABEL_6;
    case 7:
      sub_1BFE29960();
      uint64_t v20 = v19;
      uint64_t v21 = swift_projectBox();
      uint64_t v22 = *(void *)(v21 + *(int *)(v20 + 48));
      sub_1BFE29638(v21, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      uint64_t v23 = *(void *)(v22 + 32);
      if (v23 && (unsigned __int8 v24 = *(unsigned char *)(v23 + 112), (v24 & 0xFE) != 0x7E))
      {
        uint64_t v27 = *(void *)(v23 + 96);
        uint64_t v28 = *(void *)(v23 + 104);
        uint64_t v30 = *(void *)(v23 + 80);
        uint64_t v29 = *(void *)(v23 + 88);
        uint64_t v31 = *(void *)(v23 + 64);
        uint64_t v32 = *(void *)(v23 + 72);
        uint64_t v35 = v23 + 48;
        uint64_t v33 = *(void *)(v23 + 48);
        uint64_t v34 = *(void *)(v35 + 8);
        uint64_t v42 = v31;
        uint64_t v43 = v33;
        uint64_t v44 = v33;
        uint64_t v45 = v34;
        uint64_t v46 = v31;
        uint64_t v47 = v32;
        uint64_t v48 = v30;
        char v49 = v29 & 1;
        uint64_t v50 = v27;
        uint64_t v51 = v28;
        unsigned __int8 v52 = v24;
        v40[1] = *((void *)v6 + 1);
        uint64_t v41 = v29;
        swift_retain();
        sub_1BFF8C638(v43, v34, v42, v32, v30, v29, v27, v28, v24, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
        sub_1C151F72C();
        sub_1C09D09F0(a1, v36, v37, v38, v39);
        swift_release();
        sub_1BFE299DC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
        sub_1BFF8C638(v43, v34, v42, v32, v30, v41, v27, v28, v24, (void (*)(void))sub_1BFDC11BC, (void (*)(uint64_t, uint64_t, void))sub_1BFEF68AC);
      }
      else
      {
        sub_1BFE299DC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
        uint64_t v25 = *MEMORY[0x1E4FAC550];
        uint64_t v26 = sub_1C151B1FC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(a1, v25, v26);
      }
      return;
    case 0xBLL:
      uint64_t v44 = *(void *)((*v1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      FeedItemLayoutAttributes.dragPreviewClipping.getter(v4);
      return;
    default:
      uint64_t v7 = (unsigned int *)MEMORY[0x1E4FAC550];
LABEL_6:
      uint64_t v16 = *v7;
      uint64_t v17 = sub_1C151B1FC();
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);
      v18(a1, v16, v17);
      return;
  }
}

uint64_t FeedItemLayoutAttributes.contextMenuItemOptions.getter()
{
  uint64_t v1 = *v0 >> 60;
  uint64_t result = MEMORY[0x1E4FBC870];
  if (((1 << v1) & 0x77F) == 0)
  {
    if (v1 == 7)
    {
      sub_1BFE29960();
      swift_projectBox();
      swift_retain();
      swift_retain();
      uint64_t v3 = sub_1BFF88E38();
      swift_release();
      swift_release();
      return v3;
    }
    else
    {
      return FeedItemLayoutAttributes.contextMenuItemOptions.getter(MEMORY[0x1E4FBC870]);
    }
  }
  return result;
}

void FeedItemLayoutAttributes.adFrame.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 >> 60 == 3)
  {
    sub_1BFE29A3C();
    uint64_t v7 = v6;
    uint64_t v8 = swift_projectBox();
    sub_1BFE29638(v8 + *(int *)(v7 + 48), (uint64_t)v5, type metadata accessor for FeedBannerAdViewLayout.Attributes);
    sub_1C151DA1C();
    uint64_t v9 = v14[1];
    uint64_t v10 = v14[2];
    uint64_t v11 = v14[3];
    uint64_t v12 = v14[4];
    char v13 = v15;
    sub_1BFE299DC((uint64_t)v5, type metadata accessor for FeedBannerAdViewLayout.Attributes);
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 1;
  }
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v12;
  *(unsigned char *)(a1 + 32) = v13;
}

unint64_t FeedItemLayoutAttributes.prerollPlacements.getter()
{
  uint64_t v1 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v46 - v5;
  sub_1BFE47054(0, &qword_1EB8854B0, MEMORY[0x1E4F7AD70], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v10 = sub_1C151D73C();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  if (*v0 >> 60 != 7) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v47 = (char *)&v46 - v14;
  uint64_t v48 = v15;
  sub_1BFE29960();
  uint64_t v17 = *(void *)(swift_projectBox() + *(int *)(v16 + 48));
  uint64_t v18 = *(void *)(*(void *)(v17 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                  + 112);
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v61 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
  char v49 = (uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  uint64_t v56 = v3;
  unsigned int v57 = (void (**)(char *, char *, uint64_t))(v48 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v46 = v17;
  swift_retain();
  uint64_t v20 = 0;
  unint64_t v58 = MEMORY[0x1E4FBC860];
  v54 = v9;
  uint64_t v55 = v6;
  unsigned __int8 v52 = v12;
  uint64_t v53 = v10;
  uint64_t v50 = v19;
  uint64_t v51 = v18;
  do
  {
    unint64_t v21 = *(void *)(v18 + 8 * v20 + 32);
    if (((v21 >> 59) & 0x1E | (v21 >> 2) & 1) != 0xE)
    {
      (*v61)(v9, 1, 1, v10);
LABEL_5:
      sub_1BFE46FE4((uint64_t)v9, &qword_1EB8854B0, MEMORY[0x1E4F7AD70]);
      goto LABEL_6;
    }
    uint64_t v22 = v21 & 0xFFFFFFFFFFFFFFBLL;
    sub_1C1192E70();
    uint64_t v24 = v23;
    uint64_t v60 = v22;
    uint64_t v25 = swift_projectBox();
    uint64_t v26 = v25 + *(int *)(v24 + 48);
    uint64_t v27 = *(void *)(v26 + 16);
    uint64_t v28 = *(void *)(v26 + 24);
    sub_1BFE29638(v25, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
    uint64_t v30 = *((void *)v6 + 4);
    uint64_t v29 = *((void *)v6 + 5);
    uint64_t v31 = (uint64_t)v6;
    uint64_t v32 = (uint64_t)v56;
    sub_1BFE29638(v31, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
    if (v29)
    {
      uint64_t v59 = v30;
    }
    else
    {
      uint64_t v59 = *(void *)(v32 + 16);
      swift_bridgeObjectRetain();
    }
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C017C3D4(v27, v28);
    swift_bridgeObjectRetain();
    sub_1BFE299DC(v32, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
    uint64_t v33 = v54;
    sub_1C151D71C();
    swift_release();
    swift_release();
    uint64_t v34 = v27;
    uint64_t v9 = v33;
    sub_1C017C418(v34, v28);
    uint64_t v6 = v55;
    sub_1BFE299DC((uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
    uint64_t v10 = v53;
    (*v61)(v9, 0, 1, v53);
    swift_release();
    int v35 = (*v49)(v9, 1, v10);
    uint64_t v18 = v51;
    CGFloat v36 = v52;
    uint64_t v19 = v50;
    if (v35 == 1) {
      goto LABEL_5;
    }
    CGFloat v37 = *v57;
    CGFloat v38 = v47;
    (*v57)(v47, v9, v10);
    v37(v36, v38, v10);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      unint64_t v39 = v58;
    }
    else {
      unint64_t v39 = sub_1C0EE6D90(0, *(void *)(v58 + 16) + 1, 1, v58);
    }
    unint64_t v41 = *(void *)(v39 + 16);
    unint64_t v40 = *(void *)(v39 + 24);
    uint64_t v42 = v48;
    if (v41 >= v40 >> 1)
    {
      uint64_t v44 = sub_1C0EE6D90(v40 > 1, v41 + 1, 1, v39);
      uint64_t v42 = v48;
      unint64_t v39 = v44;
    }
    *(void *)(v39 + 16) = v41 + 1;
    unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    unint64_t v58 = v39;
    v37((char *)(v39 + v43 + *(void *)(v42 + 72) * v41), v36, v10);
LABEL_6:
    ++v20;
  }
  while (v19 != v20);
  swift_release();
  swift_bridgeObjectRelease_n();
  return v58;
}

uint64_t FeedItemLayoutAttributes.groupLayoutKey.getter()
{
  uint64_t v1 = type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (void *)((char *)&v14[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for HeadlineViewLayout.Context(0);
  __n128 v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (void *)((char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *v0;
  uint64_t v9 = 0;
  switch((unint64_t)*v0 >> 60)
  {
    case 4uLL:
      sub_1BFE298EC();
      uint64_t v11 = swift_projectBox();
      sub_1BFE29638(v11, (uint64_t)v7, type metadata accessor for HeadlineViewLayout.Context);
      uint64_t v9 = *v7;
      swift_retain();
      sub_1BFE299DC((uint64_t)v7, type metadata accessor for HeadlineViewLayout.Context);
      break;
    case 5uLL:
      sub_1C01BC5C8((v8 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v14);
      uint64_t v9 = v14[0];
      swift_retain();
      sub_1C01BC710((uint64_t)v14);
      break;
    case 6uLL:
      sub_1C1192E14((v8 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v14);
      uint64_t v9 = v14[0];
      swift_retain();
      sub_1C0FC6680((uint64_t)v14);
      break;
    case 7uLL:
      sub_1BFE29960();
      uint64_t v12 = swift_projectBox();
      sub_1BFE29638(v12, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      uint64_t v9 = *v3;
      swift_retain();
      sub_1BFE299DC((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      break;
    case 8uLL:
      sub_1C0F557B4((v8 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v14);
      uint64_t v9 = v14[0];
      swift_retain();
      sub_1C1192DC0((uint64_t)v14);
      break;
    case 0xBuLL:
      v14[0] = *(void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v9 = FeedItemLayoutAttributes.groupLayoutKey.getter(v5);
      break;
    default:
      return v9;
  }
  return v9;
}

uint64_t FeedItemLayoutAttributes.layoutSelectionStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatItemNodeAction();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFE47054(0, &qword_1EB8898A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v28 - v9;
  sub_1BFE47054(0, &qword_1EB86C2B0, MEMORY[0x1E4FAC680], v7);
  __n128 v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)v28 - v13;
  uint64_t v15 = *v1 >> 60;
  if (((1 << v15) & 0x77F) != 0)
  {
    uint64_t v16 = *MEMORY[0x1E4FAC670];
    uint64_t v17 = sub_1C151B36C();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);
    return v18(a1, v16, v17);
  }
  if (v15 != 7)
  {
    v28[1] = *(void *)((*v1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    return FeedItemLayoutAttributes.layoutSelectionStyle.getter(v12);
  }
  sub_1BFE29960();
  uint64_t v21 = *(void *)(*(void *)(swift_projectBox() + *(int *)(v20 + 48)) + 32);
  if (!v21)
  {
LABEL_9:
    uint64_t v22 = sub_1C151B36C();
    uint64_t v23 = *(void *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v14, 1, 1, v22);
    (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(a1, *MEMORY[0x1E4FAC670], v22);
    return sub_1BFE46FE4((uint64_t)v14, &qword_1EB86C2B0, MEMORY[0x1E4FAC680]);
  }
  sub_1BFE470B8(v21 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t)v10, &qword_1EB8898A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    sub_1BFE46FE4((uint64_t)v10, &qword_1EB8898A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
    goto LABEL_9;
  }
  sub_1BFE29638((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      swift_retain();
      goto LABEL_14;
    case 3u:
      uint64_t v27 = *MEMORY[0x1E4FAC670];
      uint64_t v25 = sub_1C151B36C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v14, v27, v25);
      break;
    default:
      swift_retain();
      sub_1BFE299DC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
LABEL_14:
      uint64_t v24 = *MEMORY[0x1E4FAC678];
      uint64_t v25 = sub_1C151B36C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v14, v24, v25);
      swift_release();
      break;
  }
  sub_1BFE299DC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
  sub_1C151B36C();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v14, 0, 1, v25);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(a1, v14, v25);
}

uint64_t FeedItemLayoutAttributes.supplementaryAttributes.getter()
{
  if (*v0 >> 60 != 11) {
    return 0;
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C0234D38(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C1191E80()
{
  if (*v0 >> 60 != 11) {
    return 0;
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C0234D38(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C1191EE4(uint64_t a1)
{
  unint64_t v2 = sub_1C11933E0();
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t FeedItemLayoutAttributes.swipeActionInsets.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 >> 60;
  if (v3 == 7)
  {
    sub_1BFE29960();
    int v6 = *(unsigned __int8 *)(*(void *)(swift_projectBox() + *(int *)(v5 + 48)) + 72);
    uint64_t v7 = sub_1C151AF0C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);
    if (v6 == 1) {
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4FAC378];
    }
    else {
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4FAC380];
    }
    uint64_t v13 = *v9;
    uint64_t v12 = a1;
  }
  else
  {
    if (v3 == 11) {
      return FeedItemLayoutAttributes.swipeActionInsets.getter();
    }
    uint64_t v10 = *MEMORY[0x1E4FAC378];
    uint64_t v11 = sub_1C151AF0C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);
    uint64_t v7 = v11;
    uint64_t v12 = a1;
    uint64_t v13 = v10;
  }
  return v8(v12, v13, v7);
}

uint64_t FeedItemLayoutAttributes.swipeActionStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 >> 60;
  if (v3 == 7)
  {
    sub_1BFE29960();
    uint64_t v6 = *(void *)(*(void *)(swift_projectBox() + *(int *)(v5 + 48))
                   + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
    uint64_t v7 = *(void *)(*(void *)v6 + 144);
    uint64_t v8 = v6 + *(int *)(type metadata accessor for FormatItemNodeData() + 28) + v7;
    uint64_t v9 = sub_1C151AC1C();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    uint64_t v11 = v9;
    uint64_t v12 = a1;
    uint64_t v13 = v8;
  }
  else
  {
    if (v3 == 11) {
      return FeedItemLayoutAttributes.swipeActionStyle.getter();
    }
    uint64_t v14 = *MEMORY[0x1E4FAC238];
    uint64_t v15 = sub_1C151AC1C();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);
    uint64_t v11 = v15;
    uint64_t v12 = a1;
    uint64_t v13 = v14;
  }
  return v10(v12, v13, v11);
}

double FeedItemLayoutAttributes.thumnailImageProcessorRequest(options:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFE47054(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v23[-v6];
  uint64_t v8 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)&v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  switch(*v2 >> 60)
  {
    case 4:
      sub_1BFE298EC();
      uint64_t v17 = v16;
      uint64_t v18 = swift_projectBox();
      memcpy(v25, (const void *)(v18 + *(int *)(v17 + 48)), sizeof(v25));
      sub_1BFE29638(v18, (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
      sub_1BFE29638(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
      uint64_t v19 = sub_1C151A01C();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 1, 1, v19);
      uint64_t v24 = 0;
      memset(v23, 0, sizeof(v23));
      uint64_t v20 = (void *)swift_unknownObjectRetain();
      id v21 = sub_1BFE465F0(v20, v25, v10, (uint64_t)v7, (uint64_t)v23);
      if (v21)
      {
        id v22 = v21;
        *(void *)(a2 + 24) = type metadata accessor for ThumbnailProcessorRequest();
        *(void *)(a2 + 32) = sub_1BFE47138((unint64_t *)&qword_1EB8907E8, (void (*)(uint64_t))type metadata accessor for ThumbnailProcessorRequest);
        *(void *)a2 = v22;
        sub_1BFE299DC((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
      }
      else
      {
        sub_1BFE299DC((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
        double result = 0.0;
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
        *(void *)(a2 + 32) = 0;
      }
      break;
    case 0xBLL:
      v25[0] = *(void *)((*v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      FeedItemLayoutAttributes.thumnailImageProcessorRequest(options:)(a1, v12);
      break;
    default:
      *(void *)(a2 + 32) = 0;
      double result = 0.0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      break;
  }
  return result;
}

double FeedItemLayoutAttributes.publisherLogoImageProcessorRequest(options:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HeadlineViewLayout.Context(0);
  __n128 v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*v2 >> 60)
  {
    case 4:
      sub_1BFE298EC();
      uint64_t v14 = v13;
      uint64_t v15 = swift_projectBox();
      memcpy(v37, (const void *)(v15 + *(int *)(v14 + 48)), sizeof(v37));
      sub_1BFE29638(v15, (uint64_t)v11, type metadata accessor for HeadlineViewLayout.Context);
      uint64_t v16 = type metadata accessor for PublisherLogoProcessorRequest(0);
      uint64_t v17 = *(int *)(v8 + 24);
      uint64_t v33 = *(void *)&v11[*(int *)(v8 + 20) + 40];
      uint64_t v34 = v16;
      uint64_t v19 = *(void *)&v11[v17 + 24];
      uint64_t v18 = *(void *)&v11[v17 + 32];
      uint64_t v20 = __swift_project_boxed_opaque_existential_1(&v11[v17], v19);
      v36[3] = v19;
      uint64_t v32 = *(void *)(v18 + 8);
      v36[4] = v32;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
      id v22 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(void *)(v19 - 8) + 16);
      ((void (*)(uint64_t *, void *, uint64_t))v22)(boxed_opaque_existential_0, v20, v19);
      sub_1BFE29638(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
      uint64_t v23 = memcpy(v35, v37, sizeof(v35));
      __n128 v24 = MEMORY[0x1F4188790](v23);
      uint64_t v26 = (char *)&v31 - v25;
      v22((char *)&v31 - v25, boxed_opaque_existential_0, v19, v24);
      uint64_t v27 = (void *)swift_unknownObjectRetain();
      uint64_t v28 = (uint64_t)v26;
      uint64_t v29 = v34;
      uint64_t v30 = sub_1BFE4621C(v27, (uint64_t)v35, v28, (uint64_t)v7, v34, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, v19, (uint64_t)&protocol witness table for HeadlineViewLayout.Attributes, v32);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      if (v30)
      {
        *(void *)(a2 + 24) = v29;
        *(void *)(a2 + 32) = sub_1BFE47138(&qword_1EB893400, (void (*)(uint64_t))type metadata accessor for PublisherLogoProcessorRequest);
        *(void *)a2 = v30;
        sub_1BFE299DC((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Context);
      }
      else
      {
        sub_1BFE299DC((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Context);
        double result = 0.0;
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
        *(void *)(a2 + 32) = 0;
      }
      break;
    case 0xBLL:
      v37[0] = *(void *)((*v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      FeedItemLayoutAttributes.publisherLogoImageProcessorRequest(options:)(a1, v9);
      break;
    default:
      *(void *)(a2 + 32) = 0;
      double result = 0.0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      break;
  }
  return result;
}

uint64_t sub_1C11928F8(uint64_t result, uint64_t *a2, uint64_t a3, double *a4)
{
  if (*(unsigned char *)(result + 56))
  {
    if (*(unsigned char *)(result + 56) != 1) {
      return result;
    }
    uint64_t v7 = (void **)(result + 48);
    result += 32;
  }
  else
  {
    uint64_t v7 = (void **)(result + 16);
  }
  uint64_t v8 = *v7;
  id v9 = *(id *)result;
  id v10 = v8;
  double v11 = *(double *)(a3 + 264);
  uint64_t v12 = *(void *)(a3 + 272);
  double v13 = *a4;
  id v14 = v10;
  sub_1C151F72C();
  double v16 = v15;
  double v18 = v17;
  if (v11 > 0.0) {
    uint64_t v19 = *(void *)&v11;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v11 <= 0.0) {
    uint64_t v12 = 0;
  }
  uint64_t v20 = type metadata accessor for IssueCoverImageProcessorRequest();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = sub_1C017C088(v14, v19, v12, v11 <= 0.0, v21, v16, v18, v13);

  v34[3] = v20;
  uint64_t v23 = sub_1BFE47138((unint64_t *)&qword_1EB86EF88, (void (*)(uint64_t))type metadata accessor for IssueCoverImageProcessorRequest);
  v34[4] = v23;
  v34[0] = v22;
  __n128 v24 = (void *)*a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = (uint64_t)v24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    __n128 v24 = sub_1C0EE2540(0, v24[2] + 1, 1, v24);
    *a2 = (uint64_t)v24;
  }
  unint64_t v27 = v24[2];
  unint64_t v26 = v24[3];
  if (v27 >= v26 >> 1) {
    *a2 = (uint64_t)sub_1C0EE2540((void *)(v26 > 1), v27 + 1, 1, v24);
  }
  uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v20);
  __n128 v29 = MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v34[-1] - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v32 + 16))(v31, v29);
  sub_1BFFB628C(v27, (uint64_t)v31, a2, v20, v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

void sub_1C1192BD8(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 >> 60 == 3)
  {
    sub_1BFE29A3C();
    uint64_t v7 = v6;
    uint64_t v8 = swift_projectBox();
    sub_1BFE29638(v8 + *(int *)(v7 + 48), (uint64_t)v5, type metadata accessor for FeedBannerAdViewLayout.Attributes);
    sub_1C151DA1C();
    uint64_t v9 = v14[1];
    uint64_t v10 = v14[2];
    uint64_t v11 = v14[3];
    uint64_t v12 = v14[4];
    char v13 = v15;
    sub_1BFE299DC((uint64_t)v5, type metadata accessor for FeedBannerAdViewLayout.Attributes);
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 1;
  }
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v12;
  *(unsigned char *)(a1 + 32) = v13;
}

uint64_t FeedItemLayoutAttributes.isResizing.getter()
{
  uint64_t v1 = *v0 >> 60;
  char v2 = 0;
  if (((1 << v1) & 0x77F) == 0)
  {
    if (v1 == 7)
    {
      sub_1BFE29960();
      swift_projectBox();
      swift_retain();
      char v4 = FormatItemNodeDataLayoutAttributes.isResizing.getter();
      swift_release();
      return v4 & 1;
    }
    char v2 = FeedItemLayoutAttributes.isResizing.getter(0);
  }
  return v2 & 1;
}

uint64_t sub_1C1192DC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C1192E14(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C1192E70()
{
  if (!qword_1EA19BBC8)
  {
    type metadata accessor for FormatVideoPlayerData();
    sub_1BFE47054(255, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeDataLayoutAttributes);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19BBC8);
    }
  }
}

id sub_1C1192F10(void *a1, _OWORD *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  sub_1BFE47054(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v56 - v11;
  v62[3] = &type metadata for ArticleThumbnailViewLayoutAttributes;
  v62[4] = &protocol witness table for ArticleThumbnailViewLayoutAttributes;
  uint64_t v13 = swift_allocObject();
  v62[0] = v13;
  long long v14 = a2[1];
  *(_OWORD *)(v13 + 16) = *a2;
  *(_OWORD *)(v13 + 32) = v14;
  *(_OWORD *)(v13 + 48) = a2[2];
  *(_OWORD *)(v13 + 57) = *(_OWORD *)((char *)a2 + 41);
  char v15 = (double *)__swift_project_boxed_opaque_existential_1(v62, (uint64_t)&type metadata for ArticleThumbnailViewLayoutAttributes);
  uint64_t v16 = *a3;
  id v17 = (id)FCThumbnailForHeadlineMinimumSize();
  if (!v17)
  {
    sub_1BFE470B8(a5, (uint64_t)&v58, (unint64_t *)&qword_1EB882B80, (uint64_t (*)(uint64_t))sub_1C0090C94);
    if (v59)
    {
      uint64_t v42 = type metadata accessor for ThumbnailProcessorRequest();
      sub_1BFC773DC(&v58, (uint64_t)v61);
      sub_1BFC66384((uint64_t)v61, (uint64_t)&v58);
      double v43 = *v15;
      double v44 = v15[1];
      double v45 = v15[2];
      double v46 = v15[3];
      uint64_t v47 = *(void *)(v13 + 64);
      uint64_t v48 = *(void *)(v13 + 56);
      uint64_t v49 = type metadata accessor for ImageRequestOptions();
      uint64_t v50 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABC10];
      sub_1BFE470B8((uint64_t)a3 + *(int *)(v49 + 24), (uint64_t)v12, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10]);
      uint64_t v52 = v59;
      uint64_t v51 = v60;
      uint64_t v53 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v58, v59);
      uint64_t v41 = sub_1C02694B8(v53, v47, (uint64_t)v12, v43, v44, v45, v46, 0.0, 0.0, 1.0, 1.0, v42, v52, v51, v54, v55, v16, v48);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
      swift_unknownObjectRelease();
      sub_1BFE46FE4(a5, (unint64_t *)&qword_1EB882B80, (uint64_t (*)(uint64_t))sub_1C0090C94);
      sub_1BFE46FE4(a4, (unint64_t *)&qword_1EB871510, v50);
      sub_1BFE299DC((uint64_t)a3, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    }
    else
    {
      swift_unknownObjectRelease();
      sub_1BFE46FE4(a5, (unint64_t *)&qword_1EB882B80, (uint64_t (*)(uint64_t))sub_1C0090C94);
      sub_1BFE46FE4(a4, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10]);
      sub_1BFE299DC((uint64_t)a3, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
      sub_1BFE46FE4((uint64_t)&v58, (unint64_t *)&qword_1EB882B80, (uint64_t (*)(uint64_t))sub_1C0090C94);
      uint64_t v41 = 0;
    }
    goto LABEL_7;
  }
  uint64_t v57 = v16;
  id v18 = v17;
  id result = objc_msgSend(v18, sel_thumbnailAssetHandle);
  if (result)
  {
    uint64_t v20 = result;
    double v21 = v15[1];
    double v56 = *v15;
    double v22 = v15[2];
    double v23 = v15[3];
    objc_msgSend(a1, sel_thumbnailFocalFrame);
    double v25 = v24;
    double v27 = v26;
    double v29 = v28;
    double v31 = v30;
    uint64_t v32 = *(void *)(v13 + 64);
    uint64_t v33 = *(void *)(v13 + 56);
    uint64_t v34 = type metadata accessor for ImageRequestOptions();
    int v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABC10];
    sub_1BFE470B8((uint64_t)a3 + *(int *)(v34 + 24), (uint64_t)v12, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10]);
    type metadata accessor for ThumbnailProcessorRequest();
    uint64_t v36 = swift_allocObject();
    uint64_t v41 = sub_1BFE46AB4(v20, v32, (uint64_t)v12, v36, v56, v21, v22, v23, v25, v27, v29, v31, v37, v38, v39, v40, v57, v33);
    swift_unknownObjectRelease();

    sub_1BFE46FE4(a5, (unint64_t *)&qword_1EB882B80, (uint64_t (*)(uint64_t))sub_1C0090C94);
    sub_1BFE46FE4(a4, (unint64_t *)&qword_1EB871510, v35);
    sub_1BFE299DC((uint64_t)a3, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    return (id)v41;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C11933E0()
{
  unint64_t result = qword_1EA1AC670;
  if (!qword_1EA1AC670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC670);
  }
  return result;
}

unint64_t sub_1C1193438()
{
  unint64_t result = qword_1EA1AC678;
  if (!qword_1EA1AC678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC678);
  }
  return result;
}

uint64_t sub_1C119348C()
{
  return swift_deallocObject();
}

uint64_t sub_1C119349C()
{
  return swift_deallocObject();
}

uint64_t sub_1C11934AC@<X0>(void *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x80000001C1636300;
  type metadata accessor for FeedGroupEmitterOutput();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C1193530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for FeedGroupEmitterCachedOutput();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
      break;
    case 3u:
      uint64_t v6 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v8 = (long long *)(a1 + *(int *)(TupleTypeMetadata2 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
      sub_1BFC773DC(v8, a3 + *(int *)(TupleTypeMetadata2 + 48));
      break;
    default:
      sub_1BFEFE510();
      uint64_t v9 = swift_getTupleTypeMetadata2();
      uint64_t v10 = a1 + *(int *)(v9 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
      sub_1BFFBE2FC(v10, a3 + *(int *)(v9 + 48));
      break;
  }
  type metadata accessor for FeedGroupEmitterOutput();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C11937B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  char v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v2 + 16))(v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 5u:
      (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, a1);
      goto LABEL_8;
    case 4u:
      uint64_t v7 = *v4;
      uint64_t v8 = v4[1];
      if (v7 == 0xD000000000000026 && v8 == 0x80000001C1636300)
      {
        swift_bridgeObjectRelease_n();
        char v9 = 1;
      }
      else
      {
        char v9 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return v9 & 1;
    case 6u:
      uint64_t v10 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      uint64_t v11 = (uint64_t)v4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v10 - 8) + 8))(v4, v10);
      __swift_destroy_boxed_opaque_existential_1(v11);
      goto LABEL_8;
    default:
      uint64_t v5 = *(void *)(a1 + 16);
      sub_1BFEFE510();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      sub_1BFEFE4A0((uint64_t)v4 + *(int *)(TupleTypeMetadata2 + 48));
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
LABEL_8:
      char v9 = 0;
      return v9 & 1;
  }
}

uint64_t sub_1C1193A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedGroupEmitterCachedOutput();
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for FeedGroupEmitterOutput();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      sub_1BFEFE510();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v11 = a1 + *(int *)(TupleTypeMetadata2 + 48);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(v8, a1, a2);
      sub_1BFFBE2FC(v11, (uint64_t)&v8[*(int *)(TupleTypeMetadata2 + 48)]);
      goto LABEL_8;
    case 2u:
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(v8, a1, a2);
      goto LABEL_8;
    case 6u:
      uint64_t v14 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      uint64_t v15 = swift_getTupleTypeMetadata2();
      uint64_t v16 = (long long *)(a1 + *(int *)(v15 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v8, a1, v14);
      sub_1BFC773DC(v16, (uint64_t)&v8[*(int *)(v15 + 48)]);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a3, v8, v6);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v6);
      break;
    default:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
      uint64_t result = v12(a3, 1, 1, v6);
      break;
  }
  return result;
}

uint64_t sub_1C1193DF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](a1);
  char v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v8, v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
      uint64_t v14 = 0x756F72477473616CLL;
      unint64_t v15 = 0xEA00000000002870;
      sub_1C151811C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v11 = v14;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      uint64_t v14 = 0x28656E6F6ELL;
      unint64_t v15 = 0xE500000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      return v14;
    }
  }
  else
  {
    sub_1BFEFE510();
    uint64_t v12 = (uint64_t)&v8[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    uint64_t v14 = 0x756F72477478656ELL;
    unint64_t v15 = 0xEA00000000002870;
    sub_1C151811C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v11 = v14;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_1BFEFE4A0(v12);
  }
  return v11;
}

uint64_t sub_1C11940D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  __n128 v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v4 + 16))(v7, v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, a1);
      goto LABEL_4;
    case 6u:
      uint64_t v11 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      sub_1BFC773DC((long long *)&v7[*(int *)(TupleTypeMetadata2 + 48)], a2);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v7, v11);
      break;
    default:
      uint64_t v9 = *(void *)(a1 + 16);
      sub_1BFEFE510();
      uint64_t v10 = swift_getTupleTypeMetadata2();
      sub_1BFEFE4A0((uint64_t)&v7[*(int *)(v10 + 48)]);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
LABEL_4:
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      break;
  }
  return result;
}

uint64_t sub_1C119430C()
{
  swift_getWitnessTable();
  return sub_1C15186EC();
}

uint64_t static FeedGroupEmitterOutput.error(groupName:reason:log:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, void *a4@<X8>)
{
  if (a3)
  {
    id v8 = a3;
  }
  else
  {
    if (qword_1EB87B060 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EB93C700;
  }
  sub_1BFFDEB20();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1BFE9C558();
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  id v12 = a3;
  swift_bridgeObjectRetain();
  sub_1C152036C();
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 72) = 0;
  *(void *)(v9 + 80) = 0xE000000000000000;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  sub_1C15200FC();
  sub_1C151E80C();
  sub_1C151E80C();
  sub_1C151E80C();
  sub_1C152036C();
  *a4 = 0;
  a4[1] = 0xE000000000000000;
  type metadata accessor for FeedGroupEmitterOutput();
  return swift_storeEnumTagMultiPayload();
}

uint64_t FeedGroupEmitterEmbeddedOutput.shortDescription.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C119463C(v2, *(void *)(a1 + 16));
  type metadata accessor for FeedGroupEmitterOutput();
  a2[3] = sub_1C151870C();
  a2[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_0(a2);
  return sub_1C15186FC();
}

unint64_t sub_1C119463C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
  __n128 v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)&v23[-v9];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v11 + 16))(&v23[-v9], a1, v7, v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v4 + 32))(v6, v10, a2);
      sub_1BFED9C78();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      *(void *)(inited + 32) = 0x6F7267207473616CLL;
      *(void *)(inited + 40) = 0xEA00000000007075;
      *(void *)(inited + 72) = a2;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 48));
      (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v4 + 16))(boxed_opaque_existential_0, v6, a2);
      unint64_t v15 = sub_1BFF99224(inited);
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, a2);
    }
    else
    {
      uint64_t v19 = *v10;
      uint64_t v20 = v10[1];
      sub_1BFED9C78();
      uint64_t v21 = swift_initStackObject();
      *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
      *(void *)(v21 + 32) = 1701736302;
      *(void *)(v21 + 40) = 0xE400000000000000;
      *(void *)(v21 + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(v21 + 48) = v19;
      *(void *)(v21 + 56) = v20;
      return sub_1BFF99224(v21);
    }
  }
  else
  {
    sub_1BFEFE510();
    uint64_t v16 = (uint64_t)v10 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v4 + 32))(v6, v10, a2);
    sub_1BFED9C78();
    uint64_t v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
    *(void *)(v17 + 32) = 0x6F7267207478656ELL;
    *(void *)(v17 + 40) = 0xEA00000000007075;
    *(void *)(v17 + 72) = a2;
    uint64_t v18 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v17 + 48));
    (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v4 + 16))(v18, v6, a2);
    unint64_t v15 = sub_1BFF99224(v17);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, a2);
    sub_1BFEFE4A0(v16);
  }
  return v15;
}

uint64_t sub_1C119496C()
{
  swift_getWitnessTable();
  return sub_1C15186EC();
}

uint64_t FeedGroupEmitterCachedOutput.group.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - v9;
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v14, v3, a1, v12);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v19 = *(void *)(v6 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a2, v14, v6);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(a2, 0, 1, v6);
      break;
    case 3u:
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      uint64_t v20 = (uint64_t)&v14[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v22 = *(void *)(v6 - 8);
          (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(a2, v10, v6);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a2, 0, 1, v6);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 1, 1, v6);
        }
      }
      else
      {
        sub_1BFEFE510();
        uint64_t v23 = (uint64_t)&v10[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        uint64_t v24 = *(void *)(v6 - 8);
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(a2, v10, v6);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(a2, 0, 1, v6);
        sub_1BFEFE4A0(v23);
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v20);
      break;
    default:
      sub_1BFEFE510();
      uint64_t v16 = (uint64_t)&v14[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v17 = *(void *)(v6 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v14, v6);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v6);
      uint64_t result = sub_1BFEFE4A0(v16);
      break;
  }
  return result;
}

uint64_t sub_1C1194E5C()
{
  return swift_getWitnessTable();
}

unsigned __int8 *sub_1C1194F44(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    if (v8 <= 0x10) {
      unint64_t v9 = 16;
    }
    else {
      unint64_t v9 = v8;
    }
    if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v9) {
      unint64_t v10 = v9;
    }
    else {
      unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 7;
    if (v11 >= 7)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_19;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_19;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_19;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_19:
          int v15 = (v14 | (v12 << (8 * v10))) + 7;
          unsigned int v11 = v14 + 7;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v16 = v9 + 1;
    switch(v11)
    {
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        break;
      case 6u:
        unsigned int v18 = a1[v9];
        unsigned int v19 = v18 - 3;
        if (v18 >= 3)
        {
          if (v9 <= 3) {
            uint64_t v20 = v9;
          }
          else {
            uint64_t v20 = 4;
          }
          switch(v20)
          {
            case 1:
              int v21 = *a1;
              goto LABEL_35;
            case 2:
              int v21 = *(unsigned __int16 *)a1;
              goto LABEL_35;
            case 3:
              int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_35;
            case 4:
              int v21 = *(_DWORD *)a1;
LABEL_35:
              if (v9 < 4) {
                unsigned int v18 = (v21 | (v19 << (8 * v9))) + 3;
              }
              else {
                unsigned int v18 = v21 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v18 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v18 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
          unint64_t v22 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v22 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v22);
          }
        }
        unint64_t v17 = (unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        goto LABEL_45;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        unint64_t v17 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v17 + 24) >= 0xFFFFFFFFuLL) {
LABEL_45:
        }
          __swift_destroy_boxed_opaque_existential_1(v17);
        break;
    }
    unsigned int v23 = a2[v10];
    unsigned int v24 = v23 - 7;
    if (v23 >= 7)
    {
      if (v10 <= 3) {
        uint64_t v25 = v10;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *a2;
          goto LABEL_55;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          goto LABEL_55;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_55;
        case 4:
          int v26 = *(_DWORD *)a2;
LABEL_55:
          int v27 = (v26 | (v24 << (8 * v10))) + 7;
          unsigned int v23 = v26 + 7;
          if (v10 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    switch(v23)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        unint64_t v31 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v32 = (unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v33 = *(void *)(v32 + 24);
        if (v33 < 0xFFFFFFFF)
        {
          long long v41 = *(_OWORD *)(v32 + 16);
          *(_OWORD *)unint64_t v31 = *(_OWORD *)v32;
          *(_OWORD *)(v31 + 16) = v41;
        }
        else
        {
          *(void *)(v31 + 24) = v33;
          (**(void (***)(void))(v33 - 8))();
        }
        char v34 = 1;
        goto LABEL_92;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        char v34 = 2;
        goto LABEL_92;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        char v35 = 3;
        goto LABEL_68;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        char v35 = 4;
        goto LABEL_68;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        char v35 = 5;
LABEL_68:
        a1[v10] = v35;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unsigned int v36 = a2[v9];
        unsigned int v37 = v36 - 3;
        if (v36 >= 3)
        {
          if (v9 <= 3) {
            uint64_t v38 = v9;
          }
          else {
            uint64_t v38 = 4;
          }
          switch(v38)
          {
            case 1:
              int v39 = *a2;
              goto LABEL_80;
            case 2:
              int v39 = *(unsigned __int16 *)a2;
              goto LABEL_80;
            case 3:
              int v39 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_80;
            case 4:
              int v39 = *(_DWORD *)a2;
LABEL_80:
              if (v9 < 4) {
                unsigned int v36 = (v39 | (v37 << (8 * v9))) + 3;
              }
              else {
                unsigned int v36 = v39 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v36 == 2)
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          a1[v9] = 2;
          swift_bridgeObjectRetain();
        }
        else if (v36 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
          a1[v9] = 1;
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
          unint64_t v42 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v43 = (unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v44 = *(void *)(v43 + 24);
          if (v44 < 0xFFFFFFFF)
          {
            long long v45 = *(_OWORD *)(v43 + 16);
            *(_OWORD *)unint64_t v42 = *(_OWORD *)v43;
            *(_OWORD *)(v42 + 16) = v45;
          }
          else
          {
            *(void *)(v42 + 24) = v44;
            (**(void (***)(void))(v44 - 8))();
          }
          a1[v9] = 0;
        }
        unint64_t v46 = (unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v47 = (unint64_t)&a2[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        uint64_t v48 = *(void *)(v47 + 24);
        *(void *)(v46 + 24) = v48;
        *(void *)(v46 + 32) = *(void *)(v47 + 32);
        (**(void (***)(void))(v48 - 8))();
        char v34 = 6;
LABEL_92:
        a1[v10] = v34;
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        unint64_t v28 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v29 = (unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v30 = *(void *)(v29 + 24);
        if (v30 < 0xFFFFFFFF)
        {
          long long v40 = *(_OWORD *)(v29 + 16);
          *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
          *(_OWORD *)(v28 + 16) = v40;
        }
        else
        {
          *(void *)(v28 + 24) = v30;
          (**(void (***)(void))(v30 - 8))();
        }
        a1[v10] = 0;
        break;
    }
  }
  return a1;
}

_OWORD *sub_1C1195660(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 7;
  if (v10 >= 7)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_18;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_18;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_18:
        int v14 = (v13 | (v11 << (8 * v9))) + 7;
        unsigned int v10 = v13 + 7;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  unint64_t v15 = v8 + 1;
  switch(v10)
  {
    case 1u:
      (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
      uint64_t v20 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      long long v21 = v20[1];
      unint64_t v22 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v22 = *v20;
      v22[1] = v21;
      char v16 = 1;
      break;
    case 2u:
      (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
      char v16 = 2;
      break;
    case 3u:
      *a1 = *(_OWORD *)a2;
      char v16 = 3;
      break;
    case 4u:
      *a1 = *(_OWORD *)a2;
      char v16 = 4;
      break;
    case 5u:
      *a1 = *(_OWORD *)a2;
      char v16 = 5;
      break;
    case 6u:
      unsigned int v23 = a2[v8];
      unsigned int v24 = v23 - 3;
      if (v23 >= 3)
      {
        if (v8 <= 3) {
          uint64_t v25 = v8;
        }
        else {
          uint64_t v25 = 4;
        }
        switch(v25)
        {
          case 1:
            int v26 = *a2;
            goto LABEL_36;
          case 2:
            int v26 = *(unsigned __int16 *)a2;
            goto LABEL_36;
          case 3:
            int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_36;
          case 4:
            int v26 = *(_DWORD *)a2;
LABEL_36:
            if (v8 < 4) {
              unsigned int v23 = (v26 | (v24 << (8 * v8))) + 3;
            }
            else {
              unsigned int v23 = v26 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v23 == 2)
      {
        *a1 = *(_OWORD *)a2;
        char v27 = 2;
      }
      else if (v23 == 1)
      {
        (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
        char v27 = 1;
      }
      else
      {
        (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
        char v27 = 0;
        unint64_t v28 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
        long long v29 = v28[1];
        unint64_t v30 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v30 = *v28;
        v30[1] = v29;
      }
      *((unsigned char *)a1 + v8) = v27;
      unint64_t v31 = ((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v32 = (unint64_t)&a2[v15 + 7] & 0xFFFFFFFFFFFFFFF8;
      long long v33 = *(_OWORD *)v32;
      long long v34 = *(_OWORD *)(v32 + 16);
      *(void *)(v31 + 32) = *(void *)(v32 + 32);
      *(_OWORD *)unint64_t v31 = v33;
      *(_OWORD *)(v31 + 16) = v34;
      char v16 = 6;
      break;
    default:
      (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
      char v16 = 0;
      unint64_t v17 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      long long v18 = v17[1];
      unsigned int v19 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v19 = *v17;
      v19[1] = v18;
      break;
  }
  *((unsigned char *)a1 + v9) = v16;
  return a1;
}

unsigned __int8 *sub_1C11959F0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    if (v8 <= 0x10) {
      unint64_t v9 = 16;
    }
    else {
      unint64_t v9 = v8;
    }
    if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v9) {
      unint64_t v10 = v9;
    }
    else {
      unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 7;
    if (v11 >= 7)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_19;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_19;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_19;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_19:
          int v15 = (v14 | (v12 << (8 * v10))) + 7;
          unsigned int v11 = v14 + 7;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v16 = v9 + 1;
    switch(v11)
    {
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        break;
      case 6u:
        unsigned int v18 = a1[v9];
        unsigned int v19 = v18 - 3;
        if (v18 >= 3)
        {
          if (v9 <= 3) {
            uint64_t v20 = v9;
          }
          else {
            uint64_t v20 = 4;
          }
          switch(v20)
          {
            case 1:
              int v21 = *a1;
              goto LABEL_35;
            case 2:
              int v21 = *(unsigned __int16 *)a1;
              goto LABEL_35;
            case 3:
              int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_35;
            case 4:
              int v21 = *(_DWORD *)a1;
LABEL_35:
              if (v9 < 4) {
                unsigned int v18 = (v21 | (v19 << (8 * v9))) + 3;
              }
              else {
                unsigned int v18 = v21 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v18 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v18 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
          unint64_t v22 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v22 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v22);
          }
        }
        unint64_t v17 = (unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        goto LABEL_45;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        unint64_t v17 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v17 + 24) >= 0xFFFFFFFFuLL) {
LABEL_45:
        }
          __swift_destroy_boxed_opaque_existential_1(v17);
        break;
    }
    unsigned int v23 = a2[v10];
    unsigned int v24 = v23 - 7;
    if (v23 >= 7)
    {
      if (v10 <= 3) {
        uint64_t v25 = v10;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *a2;
          goto LABEL_55;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          goto LABEL_55;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_55;
        case 4:
          int v26 = *(_DWORD *)a2;
LABEL_55:
          int v27 = (v26 | (v24 << (8 * v10))) + 7;
          unsigned int v23 = v26 + 7;
          if (v10 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    switch(v23)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        unint64_t v32 = (_OWORD *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
        long long v33 = v32[1];
        long long v34 = (_OWORD *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
        *long long v34 = *v32;
        v34[1] = v33;
        char v28 = 1;
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        char v28 = 2;
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v28 = 3;
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v28 = 4;
        break;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v28 = 5;
        break;
      case 6u:
        unsigned int v35 = a2[v9];
        unsigned int v36 = v35 - 3;
        if (v35 >= 3)
        {
          if (v9 <= 3) {
            uint64_t v37 = v9;
          }
          else {
            uint64_t v37 = 4;
          }
          switch(v37)
          {
            case 1:
              int v38 = *a2;
              goto LABEL_73;
            case 2:
              int v38 = *(unsigned __int16 *)a2;
              goto LABEL_73;
            case 3:
              int v38 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_73;
            case 4:
              int v38 = *(_DWORD *)a2;
LABEL_73:
              if (v9 < 4) {
                unsigned int v35 = (v38 | (v36 << (8 * v9))) + 3;
              }
              else {
                unsigned int v35 = v38 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v35 == 2)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          char v39 = 2;
        }
        else if (v35 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
          char v39 = 1;
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
          char v39 = 0;
          long long v40 = (_OWORD *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
          long long v41 = v40[1];
          unint64_t v42 = (_OWORD *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v42 = *v40;
          v42[1] = v41;
        }
        a1[v9] = v39;
        unint64_t v43 = (unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v44 = (unint64_t)&a2[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        long long v45 = *(_OWORD *)v44;
        long long v46 = *(_OWORD *)(v44 + 16);
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        *(_OWORD *)unint64_t v43 = v45;
        *(_OWORD *)(v43 + 16) = v46;
        char v28 = 6;
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        char v28 = 0;
        long long v29 = (_OWORD *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
        long long v30 = v29[1];
        unint64_t v31 = (_OWORD *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v31 = *v29;
        v31[1] = v30;
        break;
    }
    a1[v10] = v28;
  }
  return a1;
}

uint64_t sub_1C1195FEC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v3 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v3 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v3 <= 0x10) {
    unint64_t v3 = 16;
  }
  unint64_t v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (v4 <= v3) {
    unint64_t v4 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_26;
  }
  unint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 249) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v9 < 2)
    {
LABEL_26:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 7) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_26;
  }
LABEL_18:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 250;
}

void sub_1C1196144(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  if ((v5 & 0xFFFFFFFFFFFFFFF8) + 48 > v5) {
    unint64_t v5 = (v5 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFA)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 249) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xF9)
  {
    unsigned int v8 = a2 - 250;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x1C1196330);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_26;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      default:
LABEL_26:
        if (a2) {
LABEL_27:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C1196358(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v2 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unint64_t v3 = (v2 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (v3 <= v2) {
    unint64_t v3 = v2;
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 7;
  if (v4 >= 7)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_16;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_16:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 7;
        LODWORD(v4) = v7 + 7;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1C1196434(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v4 <= 0x10) {
    unint64_t v4 = 16;
  }
  if ((v4 & 0xFFFFFFFFFFFFFFF8) + 48 <= v4) {
    size_t v5 = v4;
  }
  else {
    size_t v5 = (v4 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if (a2 > 6)
  {
    unsigned int v6 = a2 - 7;
    if (v5 < 4)
    {
      unsigned int v7 = v6 >> (8 * v5);
      int v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 7;
      bzero(a1, v5);
      if (v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if (v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 7;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

void *sub_1C1196530(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v7 <= 0x10) {
    uint64_t v8 = 16;
  }
  else {
    uint64_t v8 = v7;
  }
  int v9 = *(_DWORD *)(v5 + 80);
  if ((v9 & 0x1000F8) != 0 || (unint64_t)(v8 + 1) > 0x18)
  {
    uint64_t v11 = *(void *)a2;
    *unint64_t v4 = *(void *)a2;
    unint64_t v4 = (void *)(v11 + ((unsigned __int16)((v9 & 0xF8) + 23) & (unsigned __int16)~(v9 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v12 = a2[v8];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3)
    {
      if (v8 <= 3) {
        uint64_t v14 = v8;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_21;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_21:
          int v16 = (v15 | (v13 << (8 * v8))) + 3;
          unsigned int v12 = v15 + 3;
          if (v8 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    if (v12 == 2)
    {
      uint64_t v17 = *((void *)a2 + 1);
      *unint64_t v4 = *(void *)a2;
      v4[1] = v17;
      *((unsigned char *)v4 + v8) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v12 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      *((unsigned char *)v4 + v8) = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      unint64_t v18 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v19 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v20 = *(void *)(v19 + 24);
      if (v20 < 0xFFFFFFFF)
      {
        long long v21 = *(_OWORD *)(v19 + 16);
        *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
        *(_OWORD *)(v18 + 16) = v21;
      }
      else
      {
        *(void *)(v18 + 24) = v20;
        (**(void (***)(void))(v20 - 8))();
      }
      *((unsigned char *)v4 + v8) = 0;
    }
  }
  return v4;
}

unint64_t sub_1C119675C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_14;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_14:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else if (v6 == 1)
  {
    uint64_t v11 = *(uint64_t (**)(void))(v3 + 8);
    return v11();
  }
  else
  {
    (*(void (**)(unsigned __int8 *))(v3 + 8))(a1);
    unint64_t result = (unint64_t)&a1[v4 + 7] & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(result + 24) >= 0xFFFFFFFFuLL) {
      return __swift_destroy_boxed_opaque_existential_1(result);
    }
  }
  return result;
}

void *sub_1C1196900(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v7 <= 0x10) {
    uint64_t v8 = 16;
  }
  else {
    uint64_t v8 = v7;
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 3;
  if (v9 >= 3)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_15;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_15:
        int v13 = (v12 | (v10 << (8 * v8))) + 3;
        unsigned int v9 = v12 + 3;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 2)
  {
    uint64_t v14 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v14;
    *((unsigned char *)a1 + v8) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v9 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
    *((unsigned char *)a1 + v8) = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
    unint64_t v15 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = *(void *)(v16 + 24);
    if (v17 < 0xFFFFFFFF)
    {
      long long v18 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
      *(_OWORD *)(v15 + 16) = v18;
    }
    else
    {
      *(void *)(v15 + 24) = v17;
      (**(void (***)(void))(v17 - 8))();
    }
    *((unsigned char *)a1 + v8) = 0;
  }
  return a1;
}

unsigned __int8 *sub_1C1196AEC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    if (v8 <= 0x10) {
      uint64_t v9 = 16;
    }
    else {
      uint64_t v9 = v8;
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 3;
    if (v10 >= 3)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_16;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_16:
          int v14 = (v13 | (v11 << (8 * v9))) + 3;
          unsigned int v10 = v13 + 3;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 2)
    {
      swift_bridgeObjectRelease();
    }
    else if (v10 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      unint64_t v15 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v15 + 24) >= 0xFFFFFFFFuLL) {
        __swift_destroy_boxed_opaque_existential_1(v15);
      }
    }
    unsigned int v16 = a2[v9];
    unsigned int v17 = v16 - 3;
    if (v16 >= 3)
    {
      if (v9 <= 3) {
        uint64_t v18 = v9;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_33;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_33:
          int v20 = (v19 | (v17 << (8 * v9))) + 3;
          unsigned int v16 = v19 + 3;
          if (v9 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 2)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      a1[v9] = 2;
      swift_bridgeObjectRetain();
    }
    else if (v16 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v9] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      unint64_t v21 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v22 = (unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v23 = *(void *)(v22 + 24);
      if (v23 < 0xFFFFFFFF)
      {
        long long v24 = *(_OWORD *)(v22 + 16);
        *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
        *(_OWORD *)(v21 + 16) = v24;
      }
      else
      {
        *(void *)(v21 + 24) = v23;
        (**(void (***)(void))(v23 - 8))();
      }
      a1[v9] = 0;
    }
  }
  return a1;
}

_OWORD *sub_1C1196DF8(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v7 <= 0x10) {
    uint64_t v8 = 16;
  }
  else {
    uint64_t v8 = v7;
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 3;
  if (v9 >= 3)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_15;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_15:
        int v13 = (v12 | (v10 << (8 * v8))) + 3;
        unsigned int v9 = v12 + 3;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 2)
  {
    *a1 = *(_OWORD *)a2;
    char v14 = 2;
  }
  else if (v9 == 1)
  {
    (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
    char v14 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
    char v14 = 0;
    unint64_t v15 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    long long v16 = v15[1];
    unsigned int v17 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v17 = *v15;
    v17[1] = v16;
  }
  *((unsigned char *)a1 + v8) = v14;
  return a1;
}

unsigned __int8 *sub_1C1196F9C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    if (v8 <= 0x10) {
      uint64_t v9 = 16;
    }
    else {
      uint64_t v9 = v8;
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 3;
    if (v10 >= 3)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_16;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_16:
          int v14 = (v13 | (v11 << (8 * v9))) + 3;
          unsigned int v10 = v13 + 3;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 2)
    {
      swift_bridgeObjectRelease();
    }
    else if (v10 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      unint64_t v15 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v15 + 24) >= 0xFFFFFFFFuLL) {
        __swift_destroy_boxed_opaque_existential_1(v15);
      }
    }
    unsigned int v16 = a2[v9];
    unsigned int v17 = v16 - 3;
    if (v16 >= 3)
    {
      if (v9 <= 3) {
        uint64_t v18 = v9;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_33;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_33:
          int v20 = (v19 | (v17 << (8 * v9))) + 3;
          unsigned int v16 = v19 + 3;
          if (v9 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v21 = 2;
    }
    else if (v16 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v21 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v21 = 0;
      unint64_t v22 = (_OWORD *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      long long v23 = v22[1];
      long long v24 = (_OWORD *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      *long long v24 = *v22;
      v24[1] = v23;
    }
    a1[v9] = v21;
  }
  return a1;
}

uint64_t sub_1C1197258(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v3 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v3 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v4 = 16;
  if (v3 > 0x10) {
    uint64_t v4 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_24;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v9 < 2)
    {
LABEL_24:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_24;
  }
LABEL_16:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1C11973A0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_36:
        __break(1u);
        JUMPOUT(0x1C119757CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C11975A4(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v2 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v3 = 16;
  if (v2 > 0x10) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_14;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_14:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 3;
        LODWORD(v4) = v7 + 3;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1C1197670(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v4 <= 0x10) {
    size_t v5 = 16;
  }
  else {
    size_t v5 = v4;
  }
  if (a2 > 2)
  {
    unsigned int v6 = a2 - 3;
    if (v5 < 4)
    {
      unsigned int v7 = v6 >> (8 * v5);
      int v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 3;
      bzero(a1, v5);
      if (v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if (v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 3;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t sub_1C119775C()
{
  uint64_t v0 = swift_checkMetadataState();
  uint64_t v1 = v0;
  if (v2 <= 0x3F)
  {
    uint64_t v3 = *(void *)(v0 - 8) + 64;
    swift_getTupleTypeLayout2();
    int v9 = &v8;
    swift_getTupleTypeLayout2();
    unsigned int v10 = &v7;
    uint64_t v11 = v3;
    uint64_t v1 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
    if (v4 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v12 = &v6;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v1;
}

void *sub_1C1197894(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v7 <= 0x10) {
    uint64_t v8 = 16;
  }
  else {
    uint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  int v10 = *(_DWORD *)(v5 + 80);
  if ((v10 & 0x1000F8) != 0 || v9 + 1 > 0x18)
  {
    uint64_t v12 = *(void *)a2;
    *unint64_t v4 = *(void *)a2;
    unint64_t v4 = (void *)(v12 + ((unsigned __int16)((v10 & 0xF8) + 23) & (unsigned __int16)~(v10 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v14 = a2[v9];
    unsigned int v15 = v14 - 4;
    if (v14 >= 4)
    {
      if (v9 <= 3) {
        uint64_t v16 = v9;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_25;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_25;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_25;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_25:
          int v18 = (v17 | (v15 << (8 * v9))) + 4;
          unsigned int v14 = v17 + 4;
          if (v9 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v19 = v8 + 1;
    switch(v14)
    {
      case 1u:
        (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
        unint64_t v23 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v24 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v25 = *(void *)(v24 + 24);
        if (v25 < 0xFFFFFFFF)
        {
          long long v31 = *(_OWORD *)(v24 + 16);
          *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
          *(_OWORD *)(v23 + 16) = v31;
        }
        else
        {
          *(void *)(v23 + 24) = v25;
          (**(void (***)(void))(v25 - 8))();
        }
        *((unsigned char *)v4 + v9) = 1;
        break;
      case 2u:
        (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
        *((unsigned char *)v4 + v9) = 2;
        break;
      case 3u:
        unsigned int v26 = a2[v8];
        unsigned int v27 = v26 - 3;
        if (v26 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v28 = v8;
          }
          else {
            uint64_t v28 = 4;
          }
          switch(v28)
          {
            case 1:
              int v29 = *a2;
              goto LABEL_46;
            case 2:
              int v29 = *(unsigned __int16 *)a2;
              goto LABEL_46;
            case 3:
              int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_46;
            case 4:
              int v29 = *(_DWORD *)a2;
LABEL_46:
              if (v8 < 4) {
                unsigned int v26 = (v29 | (v27 << (8 * v8))) + 3;
              }
              else {
                unsigned int v26 = v29 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v26 == 2)
        {
          uint64_t v32 = *((void *)a2 + 1);
          *unint64_t v4 = *(void *)a2;
          v4[1] = v32;
          *((unsigned char *)v4 + v8) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v26 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
          *((unsigned char *)v4 + v8) = 1;
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
          unint64_t v33 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v34 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v35 = *(void *)(v34 + 24);
          if (v35 < 0xFFFFFFFF)
          {
            long long v36 = *(_OWORD *)(v34 + 16);
            *(_OWORD *)unint64_t v33 = *(_OWORD *)v34;
            *(_OWORD *)(v33 + 16) = v36;
          }
          else
          {
            *(void *)(v33 + 24) = v35;
            (**(void (***)(void))(v35 - 8))();
          }
          *((unsigned char *)v4 + v8) = 0;
        }
        unint64_t v37 = ((unint64_t)v4 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v38 = (unint64_t)&a2[v19 + 7] & 0xFFFFFFFFFFFFFFF8;
        uint64_t v39 = *(void *)(v38 + 24);
        *(void *)(v37 + 24) = v39;
        *(void *)(v37 + 32) = *(void *)(v38 + 32);
        (**(void (***)(void))(v39 - 8))();
        *((unsigned char *)v4 + v9) = 3;
        break;
      default:
        (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
        unint64_t v20 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v21 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v22 = *(void *)(v21 + 24);
        if (v22 < 0xFFFFFFFF)
        {
          long long v30 = *(_OWORD *)(v21 + 16);
          *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
          *(_OWORD *)(v20 + 16) = v30;
        }
        else
        {
          *(void *)(v20 + 24) = v22;
          (**(void (***)(void))(v22 - 8))();
        }
        *((unsigned char *)v4 + v9) = 0;
        break;
    }
  }
  return v4;
}

uint64_t sub_1C1197D24(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  if (v5 <= 0x10) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = v5;
  }
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 48 > v5) {
    unint64_t v5 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v7 = a1[v5];
  unsigned int v8 = v7 - 4;
  if (v7 >= 4)
  {
    if (v5 <= 3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_17;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_17:
        int v11 = (v10 | (v8 << (8 * v5))) + 4;
        unsigned int v7 = v10 + 4;
        if (v5 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  switch(v7)
  {
    case 2u:
      int v13 = *(uint64_t (**)(void))(v3 + 8);
      uint64_t result = v13();
      break;
    case 3u:
      unsigned int v14 = a1[v6];
      unsigned int v15 = v14 - 3;
      if (v14 >= 3)
      {
        if (v6 <= 3) {
          uint64_t v16 = v6;
        }
        else {
          uint64_t v16 = 4;
        }
        switch(v16)
        {
          case 1:
            int v17 = *a1;
            goto LABEL_34;
          case 2:
            int v17 = *(unsigned __int16 *)a1;
            goto LABEL_34;
          case 3:
            int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_34;
          case 4:
            int v17 = *(_DWORD *)a1;
LABEL_34:
            int v18 = (v17 | (v15 << (8 * v6))) + 3;
            unsigned int v14 = v17 + 3;
            if (v6 < 4) {
              unsigned int v14 = v18;
            }
            break;
          default:
            break;
        }
      }
      if (v14 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v14 == 1)
      {
        (*(void (**)(unsigned __int8 *))(v3 + 8))(a1);
      }
      else
      {
        (*(void (**)(unsigned __int8 *))(v3 + 8))(a1);
        unint64_t v19 = (unint64_t)&a1[v4 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v19 + 24) >= 0xFFFFFFFFuLL) {
          __swift_destroy_boxed_opaque_existential_1(v19);
        }
      }
      uint64_t result = (unint64_t)&a1[v6 + 8] & 0xFFFFFFFFFFFFFFF8;
      goto LABEL_43;
    default:
      (*(void (**)(unsigned __int8 *))(v3 + 8))(a1);
      uint64_t result = (unint64_t)&a1[v4 + 7] & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(result + 24) >= 0xFFFFFFFFuLL) {
LABEL_43:
      }
        uint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
      break;
  }
  return result;
}

void *sub_1C1197FEC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v7 <= 0x10) {
    uint64_t v8 = 16;
  }
  else {
    uint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 4;
  if (v10 >= 4)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_18;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_18;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_18:
        int v14 = (v13 | (v11 << (8 * v9))) + 4;
        unsigned int v10 = v13 + 4;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v15 = v8 + 1;
  switch(v10)
  {
    case 1u:
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      unint64_t v20 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v21 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v22 = *(void *)(v21 + 24);
      if (v22 < 0xFFFFFFFF)
      {
        long long v28 = *(_OWORD *)(v21 + 16);
        *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
        *(_OWORD *)(v20 + 16) = v28;
      }
      else
      {
        *(void *)(v20 + 24) = v22;
        (**(void (***)(void))(v22 - 8))();
      }
      char v19 = 1;
      break;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      char v19 = 2;
      break;
    case 3u:
      unsigned int v23 = a2[v8];
      unsigned int v24 = v23 - 3;
      if (v23 >= 3)
      {
        if (v8 <= 3) {
          uint64_t v25 = v8;
        }
        else {
          uint64_t v25 = 4;
        }
        switch(v25)
        {
          case 1:
            int v26 = *a2;
            if (v8 >= 4) {
              goto LABEL_48;
            }
            goto LABEL_39;
          case 2:
            int v26 = *(unsigned __int16 *)a2;
            if (v8 >= 4) {
              goto LABEL_48;
            }
            goto LABEL_39;
          case 3:
            int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v8 < 4) {
              goto LABEL_39;
            }
            goto LABEL_48;
          case 4:
            int v26 = *(_DWORD *)a2;
            if (v8 < 4)
            {
LABEL_39:
              unsigned int v23 = (v26 | (v24 << (8 * v8))) + 3;
              break;
            }
LABEL_48:
            unsigned int v23 = v26 + 3;
            if (v23 == 2) {
              goto LABEL_49;
            }
            goto LABEL_41;
          default:
            break;
        }
      }
      if (v23 == 2)
      {
LABEL_49:
        uint64_t v33 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v33;
        *((unsigned char *)a1 + v8) = 2;
        swift_bridgeObjectRetain();
      }
      else
      {
LABEL_41:
        if (v23 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
          *((unsigned char *)a1 + v8) = 1;
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
          unint64_t v29 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v30 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v31 = *(void *)(v30 + 24);
          if (v31 < 0xFFFFFFFF)
          {
            long long v32 = *(_OWORD *)(v30 + 16);
            *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
            *(_OWORD *)(v29 + 16) = v32;
          }
          else
          {
            *(void *)(v29 + 24) = v31;
            (**(void (***)(void))(v31 - 8))();
          }
          *((unsigned char *)a1 + v8) = 0;
        }
      }
      unint64_t v34 = ((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v35 = (unint64_t)&a2[v15 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v36 = *(void *)(v35 + 24);
      *(void *)(v34 + 24) = v36;
      *(void *)(v34 + 32) = *(void *)(v35 + 32);
      (**(void (***)(void))(v36 - 8))();
      char v19 = 3;
      break;
    default:
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      unint64_t v16 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v17 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v18 = *(void *)(v17 + 24);
      if (v18 < 0xFFFFFFFF)
      {
        char v19 = 0;
        long long v27 = *(_OWORD *)(v17 + 16);
        *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
        *(_OWORD *)(v16 + 16) = v27;
      }
      else
      {
        *(void *)(v16 + 24) = v18;
        (**(void (***)(void))(v18 - 8))();
        char v19 = 0;
      }
      break;
  }
  *((unsigned char *)a1 + v9) = v19;
  return a1;
}

unsigned __int8 *sub_1C1198454(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    if (v8 <= 0x10) {
      uint64_t v9 = 16;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 4;
    if (v11 >= 4)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_19;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_19;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_19;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_19:
          int v15 = (v14 | (v12 << (8 * v10))) + 4;
          unsigned int v11 = v14 + 4;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = v9 + 1;
    switch(v11)
    {
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        goto LABEL_45;
      case 3u:
        unsigned int v18 = a1[v9];
        unsigned int v19 = v18 - 3;
        if (v18 < 3) {
          goto LABEL_36;
        }
        if (v9 <= 3) {
          uint64_t v20 = v9;
        }
        else {
          uint64_t v20 = 4;
        }
        switch(v20)
        {
          case 1:
            int v21 = *a1;
            break;
          case 2:
            int v21 = *(unsigned __int16 *)a1;
            break;
          case 3:
            int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            break;
          case 4:
            int v21 = *(_DWORD *)a1;
            break;
          default:
            goto LABEL_36;
        }
        if (v9 < 4)
        {
          int v23 = v21 | (v19 << (8 * v9));
          unsigned int v18 = v23 + 3;
          if (v23 != -1)
          {
LABEL_37:
            if (v18 == 1)
            {
              (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
            }
            else
            {
              (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
              unint64_t v22 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v22 + 24) >= 0xFFFFFFFFuLL) {
                __swift_destroy_boxed_opaque_existential_1(v22);
              }
            }
            goto LABEL_43;
          }
        }
        else
        {
          unsigned int v18 = v21 + 3;
LABEL_36:
          if (v18 != 2) {
            goto LABEL_37;
          }
        }
        swift_bridgeObjectRelease();
LABEL_43:
        unint64_t v17 = (unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        goto LABEL_44;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        unint64_t v17 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v17 + 24) >= 0xFFFFFFFFuLL) {
LABEL_44:
        }
          __swift_destroy_boxed_opaque_existential_1(v17);
LABEL_45:
        unsigned int v24 = a2[v10];
        unsigned int v25 = v24 - 4;
        if (v24 >= 4)
        {
          if (v10 <= 3) {
            uint64_t v26 = v10;
          }
          else {
            uint64_t v26 = 4;
          }
          switch(v26)
          {
            case 1:
              int v27 = *a2;
              goto LABEL_54;
            case 2:
              int v27 = *(unsigned __int16 *)a2;
              goto LABEL_54;
            case 3:
              int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_54;
            case 4:
              int v27 = *(_DWORD *)a2;
LABEL_54:
              int v28 = (v27 | (v25 << (8 * v10))) + 4;
              unsigned int v24 = v27 + 4;
              if (v10 < 4) {
                unsigned int v24 = v28;
              }
              break;
            default:
              goto LABEL_56;
          }
        }
        break;
    }
LABEL_56:
    switch(v24)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        unint64_t v33 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v34 = (unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v35 = *(void *)(v34 + 24);
        if (v35 < 0xFFFFFFFF)
        {
          long long v41 = *(_OWORD *)(v34 + 16);
          *(_OWORD *)unint64_t v33 = *(_OWORD *)v34;
          *(_OWORD *)(v33 + 16) = v41;
        }
        else
        {
          *(void *)(v33 + 24) = v35;
          (**(void (***)(void))(v35 - 8))();
        }
        char v32 = 1;
        goto LABEL_86;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        char v32 = 2;
        goto LABEL_86;
      case 3u:
        unsigned int v36 = a2[v9];
        unsigned int v37 = v36 - 3;
        if (v36 < 3) {
          goto LABEL_76;
        }
        if (v9 <= 3) {
          uint64_t v38 = v9;
        }
        else {
          uint64_t v38 = 4;
        }
        switch(v38)
        {
          case 1:
            int v39 = *a2;
            break;
          case 2:
            int v39 = *(unsigned __int16 *)a2;
            break;
          case 3:
            int v39 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            break;
          case 4:
            int v39 = *(_DWORD *)a2;
            break;
          default:
            goto LABEL_76;
        }
        if (v9 < 4)
        {
          int v45 = v39 | (v37 << (8 * v9));
          unsigned int v36 = v45 + 3;
          if (v45 != -1)
          {
LABEL_77:
            if (v36 == 1)
            {
              (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
              a1[v9] = 1;
            }
            else
            {
              (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
              unint64_t v42 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
              unint64_t v43 = (unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
              unint64_t v44 = *(void *)(v43 + 24);
              if (v44 < 0xFFFFFFFF)
              {
                long long v46 = *(_OWORD *)(v43 + 16);
                *(_OWORD *)unint64_t v42 = *(_OWORD *)v43;
                *(_OWORD *)(v42 + 16) = v46;
              }
              else
              {
                *(void *)(v42 + 24) = v44;
                (**(void (***)(void))(v44 - 8))();
              }
              a1[v9] = 0;
            }
            goto LABEL_85;
          }
        }
        else
        {
          unsigned int v36 = v39 + 3;
LABEL_76:
          if (v36 != 2) {
            goto LABEL_77;
          }
        }
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[v9] = 2;
        swift_bridgeObjectRetain();
LABEL_85:
        unint64_t v47 = (unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v48 = (unint64_t)&a2[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        uint64_t v49 = *(void *)(v48 + 24);
        *(void *)(v47 + 24) = v49;
        *(void *)(v47 + 32) = *(void *)(v48 + 32);
        (**(void (***)(void))(v49 - 8))();
        char v32 = 3;
LABEL_86:
        a1[v10] = v32;
        return a1;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        unint64_t v29 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v30 = (unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v31 = *(void *)(v30 + 24);
        if (v31 < 0xFFFFFFFF)
        {
          char v32 = 0;
          long long v40 = *(_OWORD *)(v30 + 16);
          *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
          *(_OWORD *)(v29 + 16) = v40;
        }
        else
        {
          *(void *)(v29 + 24) = v31;
          (**(void (***)(void))(v31 - 8))();
          char v32 = 0;
        }
        goto LABEL_86;
    }
  }
  return a1;
}

_OWORD *sub_1C1198B04(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v7 <= 0x10) {
    uint64_t v8 = 16;
  }
  else {
    uint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 4;
  if (v10 >= 4)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_18;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_18;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_18:
        int v14 = (v13 | (v11 << (8 * v9))) + 4;
        unsigned int v10 = v13 + 4;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v15 = v8 + 1;
  switch(v10)
  {
    case 1u:
      (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
      uint64_t v20 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      long long v21 = v20[1];
      unint64_t v22 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v22 = *v20;
      v22[1] = v21;
      char v16 = 1;
      break;
    case 2u:
      (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
      char v16 = 2;
      break;
    case 3u:
      unsigned int v23 = a2[v8];
      unsigned int v24 = v23 - 3;
      if (v23 >= 3)
      {
        if (v8 <= 3) {
          uint64_t v25 = v8;
        }
        else {
          uint64_t v25 = 4;
        }
        switch(v25)
        {
          case 1:
            int v26 = *a2;
            if (v8 >= 4) {
              goto LABEL_40;
            }
            goto LABEL_34;
          case 2:
            int v26 = *(unsigned __int16 *)a2;
            if (v8 >= 4) {
              goto LABEL_40;
            }
            goto LABEL_34;
          case 3:
            int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v8 < 4) {
              goto LABEL_34;
            }
            goto LABEL_40;
          case 4:
            int v26 = *(_DWORD *)a2;
            if (v8 < 4)
            {
LABEL_34:
              unsigned int v23 = (v26 | (v24 << (8 * v8))) + 3;
              break;
            }
LABEL_40:
            unsigned int v23 = v26 + 3;
            if (v23 == 2) {
              goto LABEL_41;
            }
            goto LABEL_36;
          default:
            break;
        }
      }
      if (v23 == 2)
      {
LABEL_41:
        *a1 = *(_OWORD *)a2;
        char v27 = 2;
      }
      else
      {
LABEL_36:
        if (v23 == 1)
        {
          (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
          char v27 = 1;
        }
        else
        {
          (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
          char v27 = 0;
          int v28 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
          long long v29 = v28[1];
          unint64_t v30 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v30 = *v28;
          v30[1] = v29;
        }
      }
      *((unsigned char *)a1 + v8) = v27;
      unint64_t v31 = ((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v32 = (unint64_t)&a2[v15 + 7] & 0xFFFFFFFFFFFFFFF8;
      long long v33 = *(_OWORD *)v32;
      long long v34 = *(_OWORD *)(v32 + 16);
      *(void *)(v31 + 32) = *(void *)(v32 + 32);
      *(_OWORD *)unint64_t v31 = v33;
      *(_OWORD *)(v31 + 16) = v34;
      char v16 = 3;
      break;
    default:
      (*(void (**)(_OWORD *, unsigned __int8 *))(v5 + 32))(a1, a2);
      char v16 = 0;
      unint64_t v17 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      long long v18 = v17[1];
      unsigned int v19 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v19 = *v17;
      v19[1] = v18;
      break;
  }
  *((unsigned char *)a1 + v9) = v16;
  return a1;
}

unsigned __int8 *sub_1C1198E70(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    if (v8 <= 0x10) {
      uint64_t v9 = 16;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 4;
    if (v11 >= 4)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_19;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_19;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_19;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_19:
          int v15 = (v14 | (v12 << (8 * v10))) + 4;
          unsigned int v11 = v14 + 4;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = v9 + 1;
    switch(v11)
    {
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        goto LABEL_45;
      case 3u:
        unsigned int v18 = a1[v9];
        unsigned int v19 = v18 - 3;
        if (v18 < 3) {
          goto LABEL_36;
        }
        if (v9 <= 3) {
          uint64_t v20 = v9;
        }
        else {
          uint64_t v20 = 4;
        }
        switch(v20)
        {
          case 1:
            int v21 = *a1;
            break;
          case 2:
            int v21 = *(unsigned __int16 *)a1;
            break;
          case 3:
            int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            break;
          case 4:
            int v21 = *(_DWORD *)a1;
            break;
          default:
            goto LABEL_36;
        }
        if (v9 < 4)
        {
          int v23 = v21 | (v19 << (8 * v9));
          unsigned int v18 = v23 + 3;
          if (v23 != -1)
          {
LABEL_37:
            if (v18 == 1)
            {
              (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
            }
            else
            {
              (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
              unint64_t v22 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v22 + 24) >= 0xFFFFFFFFuLL) {
                __swift_destroy_boxed_opaque_existential_1(v22);
              }
            }
            goto LABEL_43;
          }
        }
        else
        {
          unsigned int v18 = v21 + 3;
LABEL_36:
          if (v18 != 2) {
            goto LABEL_37;
          }
        }
        swift_bridgeObjectRelease();
LABEL_43:
        unint64_t v17 = (unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        goto LABEL_44;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        unint64_t v17 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v17 + 24) >= 0xFFFFFFFFuLL) {
LABEL_44:
        }
          __swift_destroy_boxed_opaque_existential_1(v17);
LABEL_45:
        unsigned int v24 = a2[v10];
        unsigned int v25 = v24 - 4;
        if (v24 >= 4)
        {
          if (v10 <= 3) {
            uint64_t v26 = v10;
          }
          else {
            uint64_t v26 = 4;
          }
          switch(v26)
          {
            case 1:
              int v27 = *a2;
              goto LABEL_54;
            case 2:
              int v27 = *(unsigned __int16 *)a2;
              goto LABEL_54;
            case 3:
              int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_54;
            case 4:
              int v27 = *(_DWORD *)a2;
LABEL_54:
              int v28 = (v27 | (v25 << (8 * v10))) + 4;
              unsigned int v24 = v27 + 4;
              if (v10 < 4) {
                unsigned int v24 = v28;
              }
              break;
            default:
              goto LABEL_56;
          }
        }
        break;
    }
LABEL_56:
    switch(v24)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        long long v33 = (_OWORD *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
        long long v34 = v33[1];
        unint64_t v35 = (_OWORD *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v35 = *v33;
        v35[1] = v34;
        char v29 = 1;
        goto LABEL_78;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        char v29 = 2;
        goto LABEL_78;
      case 3u:
        unsigned int v36 = a2[v9];
        unsigned int v37 = v36 - 3;
        if (v36 < 3) {
          goto LABEL_71;
        }
        if (v9 <= 3) {
          uint64_t v38 = v9;
        }
        else {
          uint64_t v38 = 4;
        }
        switch(v38)
        {
          case 1:
            int v39 = *a2;
            break;
          case 2:
            int v39 = *(unsigned __int16 *)a2;
            break;
          case 3:
            int v39 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            break;
          case 4:
            int v39 = *(_DWORD *)a2;
            break;
          default:
            goto LABEL_71;
        }
        if (v9 < 4)
        {
          int v44 = v39 | (v37 << (8 * v9));
          unsigned int v36 = v44 + 3;
          if (v44 != -1)
          {
LABEL_72:
            if (v36 == 1)
            {
              (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
              char v40 = 1;
            }
            else
            {
              (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
              char v40 = 0;
              long long v41 = (_OWORD *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
              long long v42 = v41[1];
              unint64_t v43 = (_OWORD *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
              *unint64_t v43 = *v41;
              v43[1] = v42;
            }
            goto LABEL_77;
          }
        }
        else
        {
          unsigned int v36 = v39 + 3;
LABEL_71:
          if (v36 != 2) {
            goto LABEL_72;
          }
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v40 = 2;
LABEL_77:
        a1[v9] = v40;
        unint64_t v45 = (unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v46 = (unint64_t)&a2[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
        long long v47 = *(_OWORD *)v46;
        long long v48 = *(_OWORD *)(v46 + 16);
        *(void *)(v45 + 32) = *(void *)(v46 + 32);
        *(_OWORD *)unint64_t v45 = v47;
        *(_OWORD *)(v45 + 16) = v48;
        char v29 = 3;
LABEL_78:
        a1[v10] = v29;
        return a1;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        char v29 = 0;
        unint64_t v30 = (_OWORD *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
        long long v31 = v30[1];
        unint64_t v32 = (_OWORD *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v32 = *v30;
        v32[1] = v31;
        goto LABEL_78;
    }
  }
  return a1;
}

uint64_t sub_1C1199420(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v3 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v3 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v4 = 16;
  if (v3 > 0x10) {
    uint64_t v4 = v3;
  }
  unint64_t v5 = (v4 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (v5 <= v3) {
    unint64_t v5 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_26;
  }
  unint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 252) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v10 < 2)
    {
LABEL_26:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 4) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_26;
  }
LABEL_18:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 253;
}

void sub_1C1199578(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v6 = 16;
  if (v5 > 0x10) {
    uint64_t v6 = v5;
  }
  unint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (v7 > v5) {
    unint64_t v5 = v7;
  }
  size_t v8 = v5 + 1;
  if (a3 < 0xFD)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << (8 * v8)) - 252) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v10 = a2 - 253;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v5 != -1)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x1C1199764);
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_26;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      default:
LABEL_26:
        if (a2) {
LABEL_27:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C119978C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v2 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v3 = 16;
  if (v2 > 0x10) {
    uint64_t v3 = v2;
  }
  unint64_t v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (v4 <= v2) {
    unint64_t v4 = v2;
  }
  uint64_t v5 = a1[v4];
  int v6 = v5 - 4;
  if (v5 >= 4)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_16;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_16:
        unsigned int v9 = (v8 | (v6 << (8 * v4))) + 4;
        LODWORD(v5) = v8 + 4;
        if (v4 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v9;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_1C1199868(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v5 = 16;
  if (v4 > 0x10) {
    uint64_t v5 = v4;
  }
  unint64_t v6 = (v5 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (v6 <= v4) {
    size_t v7 = v4;
  }
  else {
    size_t v7 = v6;
  }
  if (a2 > 3)
  {
    unsigned int v8 = a2 - 4;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 4;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 4;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    a1[v7] = a2;
  }
}

uint64_t type metadata accessor for FeedGroupEmitterCachedOutput()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t static FormatEquation.== infix(_:_:)()
{
  type metadata accessor for FormatEquationToken();
  swift_getWitnessTable();
  return sub_1C151ED6C();
}

uint64_t FormatEquation.value(contextLayoutOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v64 = a3;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v68 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = sub_1C151FD8C();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v69 = (char *)&v62 - v8;
  uint64_t v70 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v67 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v77 = (char *)&v62 - v12;
  uint64_t v88 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v76 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = v5;
  uint64_t v15 = type metadata accessor for FormatEquationToken();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  char v84 = (unsigned __int8 *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v17;
  MEMORY[0x1F4188790](v18);
  v90 = (char *)&v62 - v19;
  uint64_t v20 = *v3;
  uint64_t v80 = sub_1C1518E5C();
  uint64_t v21 = swift_allocBox();
  uint64_t v79 = v22;
  uint64_t v81 = AssociatedTypeWitness;
  sub_1C1518E4C();
  sub_1BFE956BC(0, &qword_1EB871448, (uint64_t)&type metadata for FormatEquationOperator, MEMORY[0x1E4FAB048]);
  uint64_t v23 = swift_allocBox();
  uint64_t v89 = v24;
  sub_1C1518E4C();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = MEMORY[0x1C18C6870](v25, v15);
  uint64_t v91 = v6;
  uint64_t v85 = v21;
  uint64_t v86 = v23;
  if (v26)
  {
    uint64_t v27 = v6;
    uint64_t v28 = 0;
    uint64_t v82 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    char v83 = (void (**)(char *, uint64_t *, uint64_t))(v16 + 16);
    uint64_t v74 = v27 + 72;
    uint64_t v75 = (void (**)(char *, unsigned __int8 *, uint64_t))(v88 + 32);
    uint64_t v71 = (void (**)(char *, uint64_t))(v70 + 8);
    uint64_t v72 = (void (**)(char *, uint64_t))(v88 + 8);
    char v29 = v84;
    uint64_t v73 = v20;
    while (1)
    {
      char v31 = sub_1C151ECDC();
      sub_1C151EC7C();
      if (v31)
      {
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v16 + 16))(v90, v20+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v28, v15);
      }
      else
      {
        uint64_t v88 = v28;
        uint64_t result = sub_1C152016C();
        if (v63 != 8) {
          goto LABEL_50;
        }
        v92[0] = result;
        (*v83)(v90, v92, v15);
        uint64_t result = swift_unknownObjectRelease();
        uint64_t v28 = v88;
      }
      uint64_t v88 = v28 + 1;
      uint64_t v33 = v91;
      if (__OFADD__(v28, 1))
      {
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      (*v82)((char *)v29, v90, v15);
      if (swift_getEnumCaseMultiPayload() == 1) {
        break;
      }
      uint64_t v39 = v16;
      char v40 = v76;
      uint64_t v41 = v81;
      long long v42 = v29;
      uint64_t v43 = v87;
      (*v75)(v76, v42, v87);
      int v44 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 72))(v78, v43, v33);
      if (v4)
      {
        (*v72)(v40, v43);
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      sub_1C1518E1C();
      swift_endAccess();
      (*v71)(v44, v41);
      (*v72)(v40, v43);
      uint64_t v20 = v73;
      uint64_t v16 = v39;
LABEL_6:
      uint64_t v30 = MEMORY[0x1C18C6870](v20, v15);
      uint64_t v28 = v88;
      char v29 = v84;
      if (v88 == v30)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = v85;
        uint64_t v23 = v86;
        goto LABEL_35;
      }
    }
    uint64_t v34 = (char)*v29;
    unsigned int v35 = *v29;
    swift_beginAccess();
    sub_1C1518E0C();
    swift_endAccess();
    if (v93 == 6)
    {
LABEL_3:
      char v93 = v35;
LABEL_4:
      swift_beginAccess();
      sub_1C1518E1C();
LABEL_5:
      swift_endAccess();
      goto LABEL_6;
    }
    if (v35 >= 4)
    {
      if (v35 == 4)
      {
        char v93 = 4;
        goto LABEL_4;
      }
      int v36 = 1;
      if (v93 <= 3)
      {
LABEL_14:
        unint64_t v37 = qword_1C15D13C8[v93];
        if (v35 > 3)
        {
LABEL_15:
          unint64_t v38 = 2;
LABEL_23:
          if (((v37 >= v38) & ~v36) == 0)
          {
            while (1)
            {
              swift_beginAccess();
              sub_1C1518E0C();
              swift_endAccess();
              if ((unint64_t)v93 > 3 || qword_1C15D13C8[v93] >= v38) {
                break;
              }
              sub_1C119AA3C(v85, v20, v86, v87, v91);
              if (v4)
              {
                swift_release();
                swift_release();
                return swift_bridgeObjectRelease();
              }
            }
            if (v35 == 5)
            {
              swift_beginAccess();
              sub_1C1518E0C();
              swift_endAccess();
              if (v93 != 4)
              {
                swift_bridgeObjectRelease();
                type metadata accessor for FormatLayoutError();
                sub_1BFE7E51C();
                swift_allocError();
                uint64_t v60 = v59;
                v92[0] = v20;
                *uint64_t v59 = FormatEquation.description.getter(v68);
                v60[1] = v61;
                goto LABEL_41;
              }
              swift_beginAccess();
              sub_1C1518DFC();
              goto LABEL_5;
            }
          }
          goto LABEL_3;
        }
LABEL_22:
        unint64_t v38 = qword_1C15D13C8[v34];
        goto LABEL_23;
      }
    }
    else
    {
      int v36 = 0;
      if (v93 <= 3) {
        goto LABEL_14;
      }
    }
    unint64_t v37 = 2;
    if (v35 > 3) {
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
LABEL_35:
  uint64_t v45 = v87;
  while (1)
  {
    swift_beginAccess();
    char v46 = sub_1C1518E2C();
    swift_endAccess();
    if (v46) {
      break;
    }
    sub_1C119AA3C(v21, v20, v23, v45, v91);
    if (v4) {
      goto LABEL_47;
    }
  }
  uint64_t v47 = v20;
  swift_beginAccess();
  long long v48 = v69;
  sub_1C1518DFC();
  swift_endAccess();
  uint64_t v49 = v70;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v48, 1, v81) == 1)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v48, v66);
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    uint64_t v51 = v50;
    v92[0] = v47;
    *uint64_t v50 = FormatEquation.description.getter(v68);
    v51[1] = v52;
LABEL_41:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
    uint64_t v54 = v67;
    v53(v67, v48, v81);
    swift_beginAccess();
    char v55 = sub_1C1518E2C();
    swift_endAccess();
    if (v55)
    {
      v53(v64, v54, v81);
    }
    else
    {
      type metadata accessor for FormatLayoutError();
      sub_1BFE7E51C();
      swift_allocError();
      uint64_t v57 = v56;
      v92[0] = v47;
      *double v56 = FormatEquation.description.getter(v68);
      v57[1] = v58;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v54, v81);
    }
  }
LABEL_47:
  swift_release();
  return swift_release();
}

uint64_t FormatEquation.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *(void *)(a2 - 8);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, a1, AssociatedTypeWitness, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 64))(v11, a2, a3);
  type metadata accessor for FormatEquationToken();
  sub_1C152089C();
  swift_allocObject();
  uint64_t v17 = sub_1C151EC6C();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v18, v16, a2);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = sub_1BFE94A38(v17);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, AssociatedTypeWitness);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, a2);
  *a4 = v19;
  return result;
}

uint64_t FormatEquation.optionIdentifiers.getter()
{
  type metadata accessor for FormatEquationToken();
  sub_1C151ED5C();
  sub_1BFE956BC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C151E9DC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C119A868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatEquationToken();
  __n128 v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v17 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))((char *)v17 - v12, a2, v10, v11);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, a3);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
    if (v16) {
      sub_1BFEF95B8(v16);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a3);
  }
  return result;
}

uint64_t sub_1C119AA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v65 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v55 = *(void *)(AssociatedConformanceWitness + 8);
  uint64_t v61 = *(void *)(v55 + 16);
  uint64_t v60 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v60);
  uint64_t v59 = (char *)v52 - v8;
  uint64_t v9 = sub_1C151FD8C();
  uint64_t v63 = *(void *)(v9 - 8);
  uint64_t v64 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v62 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v52 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v54 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  double v56 = (char *)v52 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v58 = (char *)v52 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v52 - v22;
  uint64_t v24 = sub_1C1518E5C();
  uint64_t v25 = swift_projectBox();
  sub_1BFE956BC(0, &qword_1EB871448, (uint64_t)&type metadata for FormatEquationOperator, MEMORY[0x1E4FAB048]);
  uint64_t v57 = v26;
  uint64_t v27 = swift_projectBox();
  swift_beginAccess();
  sub_1C1518DFC();
  swift_endAccess();
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v28(v13, 1, AssociatedTypeWitness) == 1) {
    goto LABEL_4;
  }
  v52[1] = v27;
  v52[0] = *(void *)(v14 + 32);
  ((void (*)(char *, char *, uint64_t))v52[0])(v23, v13, AssociatedTypeWitness);
  swift_beginAccess();
  uint64_t v13 = v62;
  sub_1C1518DFC();
  swift_endAccess();
  if (v28(v13, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, AssociatedTypeWitness);
LABEL_4:
    (*(void (**)(char *, uint64_t))(v63 + 8))(v13, v64);
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    uint64_t v30 = v29;
    uint64_t v68 = v65;
    uint64_t v31 = type metadata accessor for FormatEquation();
    *uint64_t v30 = FormatEquation.description.getter(v31);
    v30[1] = v32;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v63 = v25;
  uint64_t v64 = v24;
  uint64_t v34 = v13;
  unsigned int v35 = v58;
  ((void (*)(char *, char *, uint64_t))v52[0])(v58, v34, AssociatedTypeWitness);
  swift_beginAccess();
  sub_1C1518DFC();
  swift_endAccess();
  uint64_t v36 = v14;
  switch(v69)
  {
    case 1:
      unint64_t v37 = v56;
      sub_1C152043C();
      goto LABEL_11;
    case 2:
      unint64_t v37 = v56;
      sub_1C151F08C();
      goto LABEL_11;
    case 3:
      uint64_t v67 = swift_getAssociatedConformanceWitness();
      sub_1C1520CBC();
      unint64_t v38 = v56;
      sub_1C1520A6C();
      char v39 = sub_1C151E5CC();
      char v40 = v23;
      uint64_t v41 = AssociatedTypeWitness;
      long long v42 = *(void (**)(char *, uint64_t))(v36 + 8);
      v42(v38, v41);
      if (v39)
      {
        sub_1C1520CBC();
        uint64_t v43 = v54;
        sub_1C1520A6C();
      }
      else
      {
        uint64_t v43 = v54;
        (*(void (**)(char *, char *, uint64_t))(AssociatedConformanceWitness + 16))(v35, v40, v41);
      }
      swift_beginAccess();
      sub_1C1518E1C();
      swift_endAccess();
      v42(v43, v41);
      v42(v35, v41);
      return ((uint64_t (*)(char *, uint64_t))v42)(v40, v41);
    case 4:
    case 5:
    case 6:
      type metadata accessor for FormatLayoutError();
      sub_1BFE7E51C();
      swift_allocError();
      uint64_t v45 = v23;
      uint64_t v46 = AssociatedTypeWitness;
      long long v48 = v47;
      uint64_t v68 = v65;
      uint64_t v49 = type metadata accessor for FormatEquation();
      *long long v48 = FormatEquation.description.getter(v49);
      v48[1] = v50;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      uint64_t v51 = *(void (**)(char *, uint64_t))(v14 + 8);
      v51(v35, v46);
      return ((uint64_t (*)(char *, uint64_t))v51)(v45, v46);
    default:
      unint64_t v37 = v56;
      sub_1C152042C();
LABEL_11:
      swift_beginAccess();
      sub_1C1518E1C();
      swift_endAccess();
      int v44 = *(void (**)(char *, uint64_t))(v14 + 8);
      v44(v37, AssociatedTypeWitness);
      v44(v35, AssociatedTypeWitness);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v44)(v23, AssociatedTypeWitness);
      break;
  }
  return result;
}

uint64_t sub_1C119B26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return FormatEquation.init(value:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C119B278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return FormatEquation.value(contextLayoutOptions:)(a1, a2, a3);
}

uint64_t sub_1C119B294()
{
  return static FormatEquation.== infix(_:_:)();
}

uint64_t sub_1C119B2A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C119B2D8(uint64_t a1, uint64_t a2)
{
  return sub_1C119A868(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C119B2F4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1C119B310(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  a1[3] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  return result;
}

uint64_t sub_1C119B3B0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C119B3EC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v55 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_1C151FD8C();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v51 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v40 - v21;
  MEMORY[0x1F4188790](v23);
  char v40 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_1C151E95C();
  uint64_t v61 = sub_1C151E30C();
  uint64_t v56 = sub_1C15202DC();
  sub_1C152027C();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_1C151E8FC();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1C151FE0C();
      uint64_t result = (*v33)(v22, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v22, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v22, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v22, AssociatedTypeWitness);
      sub_1C15202BC();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_1C151FE0C();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    unint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    unint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    char v39 = v41;
    unint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_1C15202BC();
      sub_1C151FE0C();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t Sequence<>.scoredItems(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[2] = a1;
  return sub_1C119B3EC((void (*)(char *, char *))sub_1C119BD18, (uint64_t)v9, a2, (char *)&type metadata for FeedScoredItem, MEMORY[0x1E4FBC248], a3, MEMORY[0x1E4FBC278], a8);
}

uint64_t FeedScoredItem.identifier.getter()
{
  id v1 = objc_msgSend(*v0, sel_itemID);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

id FeedScoredItem.score.getter()
{
  return objc_msgSend(*(id *)(v0 + 8), sel_sortingScore);
}

void *FeedScoredItem.feedContext.getter()
{
  id v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t FeedScoredItem.publisherID.getter()
{
  id v1 = objc_msgSend(*v0, sel_publisherID);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1C151E62C();

  return v3;
}

uint64_t FeedScoredItem.date.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_publishDate);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1C15162BC();

    uint64_t v5 = sub_1C151631C();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1C151631C();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

id sub_1C119BD18@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = *(void **)(v2 + 16);
  *a2 = *a1;
  a2[1] = v3;
  a2[2] = 0;
  swift_unknownObjectRetain();
  return v3;
}

uint64_t Sequence<>.headlines.getter()
{
  return sub_1C151E97C();
}

uint64_t sub_1C119BDBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_dynamicCastObjCProtocolConditional();
  uint64_t v3 = result;
  if (result) {
    uint64_t result = swift_unknownObjectRetain();
  }
  *a1 = v3;
  return result;
}

uint64_t Sequence<>.feedItems.getter()
{
  return sub_1C151E97C();
}

uint64_t sub_1C119BE98@<X0>(uint64_t *a1@<X8>)
{
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  uint64_t v3 = result;
  if (result) {
    uint64_t result = swift_unknownObjectRetain();
  }
  *a1 = v3;
  return result;
}

uint64_t Sequence<>.feedItemScoreProfiles.getter()
{
  objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 0, 0);
  sub_1BFC39268(0, &qword_1EB860D30);
  sub_1C151E9DC();
  return v1;
}

void sub_1C119BFA8(void **a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  uint64_t v3 = *a1;
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4) {
    swift_unknownObjectRetain();
  }
  objc_msgSend(v3, sel_setObject_forKey_, v2, v4);
}

uint64_t Sequence<>.feedContextByFeedID.getter()
{
  sub_1C119C608();
  sub_1C151E9DC();
  return v1;
}

void sub_1C119C0A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + 16);
  if (v2)
  {
    uint64_t v4 = *(void **)a2;
    id v5 = v2;
    id v6 = objc_msgSend(v4, sel_sourceFeedID);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_1C151E62C();
      uint64_t v10 = v9;

      id v11 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = *a1;
      *a1 = 0x8000000000000000;
      sub_1C1069FF0((uint64_t)v11, v8, v10, isUniquelyReferenced_nonNull_native);
      *a1 = v13;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t Sequence<>.filteredFeedItemScoreProfiles(filteredFeedItems:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6)
  {
LABEL_12:
    sub_1BFEF4060(v7);
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 0, 0);
    MEMORY[0x1F4188790](v21);
    sub_1BFC39268(0, &qword_1EB860D30);
    sub_1C151E9DC();
    swift_bridgeObjectRelease();
    return v22;
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BFF661B8(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = a2;
    uint64_t v20 = a3;
    uint64_t v9 = 0;
    uint64_t v7 = v23;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1C18C7CB0](v9, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      id v11 = v10;
      id v12 = objc_msgSend(v10, sel_identifier, v19, v20);
      uint64_t v13 = sub_1C151E62C();
      uint64_t v15 = v14;

      uint64_t v22 = v7;
      unint64_t v17 = *(void *)(v7 + 16);
      unint64_t v16 = *(void *)(v7 + 24);
      if (v17 >= v16 >> 1) {
        sub_1BFF661B8(v16 > 1, v17 + 1, 1);
      }
      ++v9;
      *(void *)(v7 + 16) = v17 + 1;
      uint64_t v18 = v7 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
    }
    while (v6 != v9);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1C119C3CC(void **a1, uint64_t a2, uint64_t a3)
{
  id v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  id v7 = *(id *)(a2 + 16);
  swift_unknownObjectRetain();
  id v8 = v6;
  id v9 = objc_msgSend(v5, sel_itemID);
  uint64_t v10 = sub_1C151E62C();
  uint64_t v12 = v11;

  swift_unknownObjectRelease();
  LOBYTE(a3) = sub_1BFF896B4(v10, v12, a3);
  swift_bridgeObjectRelease();
  if (a3)
  {
    uint64_t v13 = *a1;
    self;
    uint64_t v14 = (void *)swift_dynamicCastObjCClass();
    if (v14) {
      swift_unknownObjectRetain();
    }
    objc_msgSend(v13, sel_setObject_forKey_, v8, v14);
  }
}

uint64_t _s8NewsFeed0B10ScoredItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  id v5 = objc_msgSend(*(id *)a1, sel_itemID);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(v3, sel_itemID);
  uint64_t v10 = sub_1C151E62C();
  uint64_t v12 = v11;

  if (v6 == v10 && v8 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
  id v16 = v2;
  id v17 = v4;
  char v18 = sub_1C151FB6C();

  return v18 & 1;
}

void sub_1C119C608()
{
  if (!qword_1EA1AC688)
  {
    sub_1BFC39268(255, &qword_1EB85DFA0);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AC688);
    }
  }
}

void sub_1C119C680(void **a1, uint64_t a2)
{
  sub_1C119C3CC(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_1C119C69C(uint64_t a1)
{
  unint64_t result = sub_1C119C6C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C119C6C4()
{
  unint64_t result = qword_1EA1AC698;
  if (!qword_1EA1AC698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC698);
  }
  return result;
}

void *assignWithCopy for FeedScoredItem(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a1[2];
  uint64_t v8 = (void *)a2[2];
  a1[2] = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for FeedScoredItem(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t FormatPrintNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1C119E208(a2);
}

uint64_t FormatPrintNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPrintNode.values.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPrintNodeValue.rawValue.getter()
{
  uint64_t result = 0x736E6F6974706FLL;
  switch(*v0)
  {
    case 1:
    case 2:
      uint64_t result = 0x40736E6F6974706FLL;
      break;
    case 3:
      uint64_t result = 0x726F73727563;
      break;
    case 4:
      uint64_t result = 0x6574616C706D6574;
      break;
    case 5:
      uint64_t result = 0x747865746E6F63;
      break;
    case 6:
      uint64_t result = 0x73676E69646E6962;
      break;
    case 7:
      uint64_t result = 7105633;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatPrintNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPrintNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatPrintNode.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPrintNode.values.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPrintNode.values.modify())()
{
  return j_j__swift_endAccess;
}

void *FormatPrintNode.__allocating_init(identifier:message:values:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  swift_beginAccess();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  swift_beginAccess();
  v10[6] = a5;
  return v10;
}

void *FormatPrintNode.init(identifier:message:values:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  swift_beginAccess();
  v5[6] = a5;
  return v5;
}

uint64_t FormatPrintNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPrintNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void *sub_1C119CC70@<X0>(void *a1@<X8>)
{
  uint64_t result = _s8NewsFeed15FormatPrintNodeC7defaultACXDvgZ_0();
  *a1 = result;
  return result;
}

void *sub_1C119CC98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C08A4548(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C119CCC4(void *a1)
{
  return FormatPrintNode.encode(to:)(a1);
}

uint64_t sub_1C119CCE8(void **a1, void **a2)
{
  return _s8NewsFeed15FormatPrintNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C119CCF4(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a2 + 40))
  {
    uint64_t v4 = a3[8];
    uint64_t v5 = a3[9];
    __swift_project_boxed_opaque_existential_1(a3 + 5, v4);
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v5 + 8))(0x4C5B20746E697250, 0xEF205D74756F7961, v4, v5);
    swift_bridgeObjectRelease();
  }
  if (sub_1C119D5B8((uint64_t)&unk_1F1B8A268))
  {
    uint64_t v6 = a3[8];
    uint64_t v7 = a3[9];
    __swift_project_boxed_opaque_existential_1(a3 + 5, v6);
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C1517EFC();
    swift_retain();
    swift_release();
    sub_1C1243BAC();
    swift_release();
    sub_1C119EB08();
    sub_1C1520CDC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 8))(0xD000000000000017, 0x80000001C16363E0, v6, v7);
    swift_bridgeObjectRelease();
  }
  if (sub_1C119D5B8((uint64_t)&unk_1F1B8A290))
  {
    uint64_t v8 = a3[8];
    uint64_t v9 = a3[9];
    __swift_project_boxed_opaque_existential_1(a3 + 5, v8);
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C119EAA4(0, &qword_1EA1AC6D8, MEMORY[0x1E4FABA48]);
    sub_1C1517CAC();
    sub_1C119EAA4(0, &qword_1EA19B5D0, MEMORY[0x1E4FAB928]);
    sub_1C1520CDC();
    swift_release();
    swift_release();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v9 + 8))(0xD000000000000016, 0x80000001C16363C0, v8, v9);
    swift_bridgeObjectRelease();
  }
  if (sub_1C119D5B8((uint64_t)&unk_1F1B8A2B8))
  {
    uint64_t v13 = a3[9];
    uint64_t v14 = a3[8];
    __swift_project_boxed_opaque_existential_1(a3 + 5, v14);
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C119EAA4(0, &qword_1EA1AC6D8, MEMORY[0x1E4FABA48]);
    sub_1C1517CCC();
    sub_1C1520CDC();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 8))(0xD000000000000018, 0x80000001C16363A0, v14);
    swift_bridgeObjectRelease();
  }
  if (sub_1C119D5B8((uint64_t)&unk_1F1B8A2E0))
  {
    uint64_t v10 = a3[8];
    uint64_t v11 = a3[9];
    __swift_project_boxed_opaque_existential_1(a3 + 5, v10);
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C119EAA4(0, &qword_1EA1AC6D8, MEMORY[0x1E4FABA48]);
    sub_1C1517CBC();
    sub_1C151761C();
    sub_1C1520CDC();
    swift_release();
    swift_release();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v11 + 8))(0xD000000000000017, 0x80000001C1636380, v10, v11);
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1C119D5B8((uint64_t)&unk_1F1B8A308);
  if (result)
  {
    uint64_t v15 = a3[9];
    uint64_t v16 = a3[8];
    __swift_project_boxed_opaque_existential_1(a3 + 5, v16);
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1520CDC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 8))(0xD000000000000018, 0x80000001C1636360, v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C119D5B8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 48);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 48);
  if (*(void *)(v4 + 16))
  {
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v5 = sub_1C1520E0C();
    uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v8 = ~v6;
      while (2)
      {
        switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
        {
          case 7:
            goto LABEL_44;
          default:
            char v9 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            if (v9) {
              goto LABEL_45;
            }
            unint64_t v7 = (v7 + 1) & v8;
            if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return 0;
  }
  uint64_t v25 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v24 = (uint64_t *)(v1 + 48);
  while (1)
  {
    uint64_t v12 = *v3;
    if (!*(void *)(*v3 + 16)) {
      goto LABEL_11;
    }
    uint64_t v13 = *(unsigned __int8 *)(v25 + v11);
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1C1520E0C();
    uint64_t v15 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v16 = v14 & ~v15;
    if ((*(void *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16)) {
      break;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v3 = v24;
LABEL_11:
    if (++v11 == v10)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v17 = ~v15;
  while (2)
  {
    unint64_t v18 = 0xE700000000000000;
    uint64_t v19 = 0x736E6F6974706FLL;
    switch(*(unsigned char *)(*(void *)(v12 + 48) + v16))
    {
      case 1:
        uint64_t v19 = 0x40736E6F6974706FLL;
        unint64_t v18 = 0xEC000000646E6962;
        break;
      case 2:
        uint64_t v19 = 0x40736E6F6974706FLL;
        unint64_t v18 = 0xEE0074756F79616CLL;
        break;
      case 3:
        unint64_t v18 = 0xE600000000000000;
        uint64_t v19 = 0x726F73727563;
        break;
      case 4:
        unint64_t v18 = 0xE800000000000000;
        uint64_t v19 = 0x6574616C706D6574;
        break;
      case 5:
        uint64_t v19 = 0x747865746E6F63;
        break;
      case 6:
        unint64_t v18 = 0xE800000000000000;
        uint64_t v19 = 0x73676E69646E6962;
        break;
      case 7:
        unint64_t v18 = 0xE300000000000000;
        uint64_t v19 = 7105633;
        break;
      default:
        break;
    }
    unint64_t v20 = 0xE700000000000000;
    uint64_t v21 = 0x736E6F6974706FLL;
    switch(v13)
    {
      case 1:
        unint64_t v20 = 0xEC000000646E6962;
        if (v19 == 0x40736E6F6974706FLL) {
          goto LABEL_36;
        }
        goto LABEL_37;
      case 2:
        unint64_t v20 = 0xEE0074756F79616CLL;
        if (v19 != 0x40736E6F6974706FLL) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 3:
        unint64_t v20 = 0xE600000000000000;
        if (v19 != 0x726F73727563) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 4:
        unint64_t v20 = 0xE800000000000000;
        if (v19 != 0x6574616C706D6574) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 5:
        if (v19 != 0x747865746E6F63) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 6:
        unint64_t v20 = 0xE800000000000000;
        uint64_t v21 = 0x73676E69646E6962;
        goto LABEL_35;
      case 7:
        unint64_t v20 = 0xE300000000000000;
        if (v19 != 7105633) {
          goto LABEL_37;
        }
        goto LABEL_36;
      default:
LABEL_35:
        if (v19 != v21) {
          goto LABEL_37;
        }
LABEL_36:
        if (v18 == v20)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
LABEL_37:
        char v22 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0)
        {
          unint64_t v16 = (v16 + 1) & v17;
          if (((*(void *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
            goto LABEL_10;
          }
          continue;
        }
LABEL_44:
        swift_bridgeObjectRelease();
LABEL_45:
        swift_bridgeObjectRelease();
        return 1;
    }
  }
}

uint64_t sub_1C119DC5C(uint64_t a1, uint64_t a2)
{
  return sub_1C119E208(a2);
}

NewsFeed::FormatPrintNodeValue_optional __swiftcall FormatPrintNodeValue.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C119DCE0(unsigned __int8 *a1, char *a2)
{
  return sub_1C14876B0(*a1, *a2);
}

uint64_t sub_1C119DCEC()
{
  return sub_1C044C04C();
}

uint64_t sub_1C119DCF8()
{
  return sub_1C04472E4();
}

uint64_t sub_1C119DD00()
{
  return sub_1C044C04C();
}

NewsFeed::FormatPrintNodeValue_optional sub_1C119DD08(Swift::String *a1)
{
  return FormatPrintNodeValue.init(rawValue:)(*a1);
}

void sub_1C119DD14(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x736E6F6974706FLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC000000646E6962;
      uint64_t v3 = 0x40736E6F6974706FLL;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "options@layout");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x726F73727563;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      *(void *)a1 = 0x6574616C706D6574;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 5:
      *(void *)a1 = 0x747865746E6F63;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 6:
      *(void *)a1 = 0x73676E69646E6962;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 7:
      *(void *)a1 = 7105633;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C119DE34()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C119DE94(void *a1)
{
  return FormatPrintNodeValue.encode(to:)(a1);
}

BOOL sub_1C119DEB4(char *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  char v5 = *a1;
  unsigned __int8 v4 = v2;
  return (_s8NewsFeed20FormatPrintNodeValueO1loiySbAC_ACtFZ_0(&v4, &v5) & 1) == 0;
}

BOOL sub_1C119DEF4(unsigned __int8 *a1, char *a2)
{
  char v2 = *a2;
  unsigned __int8 v5 = *a1;
  char v4 = v2;
  return (_s8NewsFeed20FormatPrintNodeValueO1loiySbAC_ACtFZ_0(&v5, &v4) & 1) == 0;
}

uint64_t sub_1C119DF34(char *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  char v5 = *a1;
  unsigned __int8 v4 = v2;
  return _s8NewsFeed20FormatPrintNodeValueO1loiySbAC_ACtFZ_0(&v4, &v5) & 1;
}

uint64_t _s8NewsFeed20FormatPrintNodeValueO1loiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x736E6F6974706FLL;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x736E6F6974706FLL;
  switch(v3)
  {
    case 1:
      uint64_t v5 = 0x40736E6F6974706FLL;
      unint64_t v4 = 0xEC000000646E6962;
      break;
    case 2:
      uint64_t v5 = 0x40736E6F6974706FLL;
      unint64_t v4 = 0xEE0074756F79616CLL;
      break;
    case 3:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x726F73727563;
      break;
    case 4:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v5 = 0x6574616C706D6574;
      break;
    case 5:
      uint64_t v5 = 0x747865746E6F63;
      break;
    case 6:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v5 = 0x73676E69646E6962;
      break;
    case 7:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v5 = 7105633;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xEC000000646E6962;
      if (v5 == 0x40736E6F6974706FLL) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xEE0074756F79616CLL;
      if (v5 != 0x40736E6F6974706FLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x726F73727563) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6574616C706D6574) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      if (v5 != 0x747865746E6F63) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x73676E69646E6962;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7105633) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v4 == v6) {
        char v7 = 0;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1C119E208(uint64_t a1)
{
  if (*(void *)(v1 + 40))
  {
    uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger);
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    __swift_project_boxed_opaque_existential_1(v3, v4);
    strcpy((char *)v10, "Print [Bind] ");
    HIWORD(v10[1]) = -4864;
    sub_1C151E80C();
    (*(void (**)(void, void, uint64_t, uint64_t))(v5 + 8))(v10[0], v10[1], v4, v5);
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1C119D5B8((uint64_t)&unk_1F1B6D758);
  if (result)
  {
    uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger + 24);
    uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger + 32);
    __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger), v7);
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C1517EFC();
    swift_retain();
    swift_release();
    uint64_t v9 = sub_1C1243BAC();
    swift_release();
    v10[3] = v9;
    sub_1C119EB08();
    sub_1C1520CDC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v8 + 8))(0xD000000000000015, 0x80000001C1636400, v7, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s8NewsFeed15FormatPrintNodeC7defaultACXDvgZ_0()
{
  uint64_t v0 = sub_1C151635C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C151634C();
  uint64_t v4 = sub_1C151633C();
  uint64_t v6 = v5;
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = sub_1C00BA434((uint64_t)&unk_1F1B865A0);
  type metadata accessor for FormatPrintNode();
  uint64_t v8 = (void *)swift_allocObject();
  swift_beginAccess();
  v8[2] = v4;
  v8[3] = v6;
  void v8[4] = 0;
  v8[5] = 0;
  swift_beginAccess();
  v8[6] = v7;
  return v8;
}

uint64_t sub_1C119E578(uint64_t a1)
{
  uint64_t result = sub_1C119E6B0(&qword_1EA1AC6A0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatPrintNode()
{
  return self;
}

uint64_t sub_1C119E5E0(void *a1)
{
  a1[1] = sub_1C119E6B0(&qword_1EA19DF58);
  a1[2] = sub_1C119E6B0(&qword_1EA1A0AA0);
  uint64_t result = sub_1C119E6B0(&qword_1EA1AC6A8);
  a1[3] = result;
  return result;
}

uint64_t sub_1C119E66C(uint64_t a1)
{
  uint64_t result = sub_1C119E6B0(&qword_1EA1AC6B0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C119E6B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatPrintNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C119E6F4()
{
  unint64_t result = qword_1EA1AC6B8;
  if (!qword_1EA1AC6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC6B8);
  }
  return result;
}

unint64_t sub_1C119E748(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C119E778();
  unint64_t result = sub_1C119E7CC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C119E778()
{
  unint64_t result = qword_1EA1AC6C0;
  if (!qword_1EA1AC6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC6C0);
  }
  return result;
}

unint64_t sub_1C119E7CC()
{
  unint64_t result = qword_1EA1AC6C8;
  if (!qword_1EA1AC6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC6C8);
  }
  return result;
}

unint64_t sub_1C119E820(uint64_t a1)
{
  unint64_t result = sub_1C119E848();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C119E848()
{
  unint64_t result = qword_1EA1AC6D0;
  if (!qword_1EA1AC6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC6D0);
  }
  return result;
}

unint64_t sub_1C119E89C(void *a1)
{
  a1[1] = sub_1C08F3954();
  a1[2] = sub_1C08A4E28();
  unint64_t result = sub_1C119E6F4();
  a1[3] = result;
  return result;
}

uint64_t sub_1C119E8D4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C119E924@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatPrintNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPrintNode);
}

uint64_t dispatch thunk of FormatPrintNode.__allocating_init(identifier:message:values:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unsigned char *storeEnumTagSinglePayload for FormatPrintNodeValue(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C119EA6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPrintNodeValue()
{
  return &type metadata for FormatPrintNodeValue;
}

void sub_1C119EAA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFF597F8();
    unint64_t v7 = a3(a1, &type metadata for FormatLayout, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C119EB08()
{
  if (!qword_1EA1AC6E0)
  {
    type metadata accessor for FormatScopedOption();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AC6E0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for WebEmbedDataSourceCacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C119EC2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDataSourceCacheError()
{
  return &type metadata for WebEmbedDataSourceCacheError;
}

unint64_t sub_1C119EC68()
{
  unint64_t result = qword_1EA1AC6E8;
  if (!qword_1EA1AC6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC6E8);
  }
  return result;
}

void static FormatCodingEqualOperatorStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t _s8NewsFeed33FormatCodingEqualOperatorStrategyV12shouldEncode12wrappedValueSbAA0cF0O_tFZ_0(unsigned char *a1)
{
  switch(*a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
      char v2 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      char v1 = v2 ^ 1;
      break;
    default:
      swift_bridgeObjectRelease();
      char v1 = 0;
      break;
  }
  return v1 & 1;
}

unint64_t sub_1C119EE44(uint64_t a1)
{
  unint64_t result = sub_1C119EE6C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C119EE6C()
{
  unint64_t result = qword_1EA1AC6F0;
  if (!qword_1EA1AC6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC6F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingEqualOperatorStrategy()
{
  return &type metadata for FormatCodingEqualOperatorStrategy;
}

uint64_t static FormatDerivedDataOptionStatement.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1C00E0518(v2, v3);
}

uint64_t sub_1C119EF4C()
{
  if (*v0) {
    return 0x7265696669646F6DLL;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C119EF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C119F928(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C119EFB8(uint64_t a1)
{
  unint64_t v2 = sub_1C119F1EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C119EFF4(uint64_t a1)
{
  unint64_t v2 = sub_1C119F1EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatDerivedDataOptionStatement.encode(to:)(void *a1)
{
  sub_1C119F604(0, &qword_1EA1AC6F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v10 - v6;
  uint64_t v11 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C119F1EC();
  sub_1C1520F0C();
  char v15 = 0;
  uint64_t v8 = v12;
  sub_1C15207CC();
  if (!v8 && *(void *)(v11 + 16))
  {
    char v14 = 1;
    uint64_t v13 = v11;
    sub_1C119F240();
    sub_1C119F2B4();
    sub_1C08F47A8();
    sub_1C1520BAC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C119F1EC()
{
  unint64_t result = qword_1EA1AC700;
  if (!qword_1EA1AC700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC700);
  }
  return result;
}

unint64_t sub_1C119F240()
{
  unint64_t result = qword_1EA1AC708;
  if (!qword_1EA1AC708)
  {
    sub_1C119F604(255, &qword_1EA1AC6F8, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC708);
  }
  return result;
}

void sub_1C119F2B4()
{
  if (!qword_1EB861430)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB861430);
    }
  }
}

uint64_t FormatDerivedDataOptionStatement.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v22 = a2;
  sub_1BFCF8600();
  uint64_t v5 = v4;
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C119F604(0, &qword_1EA1AC710, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C119F1EC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v23;
  char v26 = 0;
  uint64_t v13 = sub_1C152069C();
  uint64_t v16 = v15;
  uint64_t v20 = v13;
  char v25 = 1;
  swift_bridgeObjectRetain();
  char v17 = sub_1C152071C();
  if (v17)
  {
    char v24 = 1;
    sub_1C08A0AF8();
    sub_1C15206EC();
    uint64_t v18 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  }
  else
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = v22;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v9);
  *uint64_t v19 = v20;
  v19[1] = v16;
  v19[2] = v18;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C119F604(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C119F1EC();
    unint64_t v7 = a3(a1, &type metadata for FormatDerivedDataOptionStatement.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C119F668@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatDerivedDataOptionStatement.init(from:)(a1, a2);
}

uint64_t sub_1C119F680(void *a1)
{
  return FormatDerivedDataOptionStatement.encode(to:)(a1);
}

uint64_t sub_1C119F698(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1C00E0518(v2, v3);
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionStatement()
{
  return &type metadata for FormatDerivedDataOptionStatement;
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataOptionStatement.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C119F7E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionStatement.CodingKeys()
{
  return &type metadata for FormatDerivedDataOptionStatement.CodingKeys;
}

unint64_t sub_1C119F824()
{
  unint64_t result = qword_1EA1AC718;
  if (!qword_1EA1AC718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC718);
  }
  return result;
}

unint64_t sub_1C119F87C()
{
  unint64_t result = qword_1EA1AC720;
  if (!qword_1EA1AC720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC720);
  }
  return result;
}

unint64_t sub_1C119F8D4()
{
  unint64_t result = qword_1EA1AC728;
  if (!qword_1EA1AC728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC728);
  }
  return result;
}

uint64_t sub_1C119F928(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265696669646F6DLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t initializeWithCopy for SportsDataVisualizationResponseBracketItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsDataVisualizationResponseBracketItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationResponseBracketItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseBracketItem()
{
  return &type metadata for SportsDataVisualizationResponseBracketItem;
}

uint64_t sub_1C119FC3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  sub_1C11A0A60();
  uint64_t v46 = v3;
  uint64_t v44 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDFB688();
  uint64_t v7 = v6;
  uint64_t v45 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11A0BC8(0, &qword_1EB86BED0, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v10;
  uint64_t v48 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v34 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11A0B2C();
  uint64_t v14 = (uint64_t)v49;
  sub_1C1520EBC();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v9;
  uint64_t v42 = v5;
  uint64_t v49 = a1;
  LOBYTE(v50) = 0;
  uint64_t v17 = sub_1C152069C();
  uint64_t v43 = v18;
  uint64_t v19 = v11;
  uint64_t v20 = v17;
  LOBYTE(v50) = 1;
  uint64_t v21 = sub_1C152060C();
  uint64_t v41 = v22;
  uint64_t v38 = v21;
  LOBYTE(v50) = 2;
  uint64_t v40 = 0;
  uint64_t v36 = sub_1C152060C();
  uint64_t v39 = v23;
  LOBYTE(v50) = 3;
  if (sub_1C152071C())
  {
    char v51 = 3;
    sub_1C11A0B80((unint64_t *)&qword_1EB87C778, (void (*)(uint64_t))sub_1BFDFB688);
    sub_1C15206EC();
    uint64_t v35 = v20;
    uint64_t v37 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v7);
  }
  else
  {
    uint64_t v35 = v20;
    uint64_t v37 = MEMORY[0x1E4FBC860];
  }
  LOBYTE(v50) = 5;
  char v24 = sub_1C152071C();
  uint64_t v25 = v48;
  if (v24)
  {
    char v51 = 5;
    sub_1C11A0B80(&qword_1EB86BD18, (void (*)(uint64_t))sub_1C11A0A60);
    char v26 = v42;
    uint64_t v27 = v46;
    sub_1C15206EC();
    uint64_t v45 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v27);
  }
  else
  {
    uint64_t v45 = MEMORY[0x1E4FBC860];
  }
  uint64_t v28 = v47;
  sub_1C0A90988(0, (unint64_t *)&qword_1EB86B2E8, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, MEMORY[0x1E4FBB320]);
  char v51 = 4;
  sub_1C0A90A3C((unint64_t *)&unk_1EB86B2F0, (void (*)(void))sub_1C01CBB4C);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v19);
  uint64_t v29 = v50;
  uint64_t v30 = v43;
  *(void *)uint64_t v28 = v35;
  *(void *)(v28 + 8) = v30;
  uint64_t v31 = v39;
  uint64_t v32 = v41;
  *(void *)(v28 + 16) = v38;
  *(void *)(v28 + 24) = v32;
  uint64_t v33 = v37;
  *(void *)(v28 + 32) = v36;
  *(void *)(v28 + 40) = v31;
  *(void *)(v28 + 48) = v33;
  *(void *)(v28 + 56) = v29;
  *(void *)(v28 + 64) = v45;
  *(unsigned char *)(v28 + 72) = 3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11A04BC(void *a1)
{
  sub_1C11A0BC8(0, &qword_1EA1AC730, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = v1[2];
  uint64_t v22 = v1[3];
  uint64_t v23 = v8;
  uint64_t v9 = v1[4];
  uint64_t v20 = v1[5];
  uint64_t v21 = v9;
  uint64_t v10 = v1[6];
  uint64_t v18 = v1[7];
  uint64_t v19 = v10;
  uint64_t v17 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11A0B2C();
  sub_1C1520F0C();
  LOBYTE(v25) = 0;
  uint64_t v11 = v24;
  sub_1C15207CC();
  if (!v11)
  {
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    uint64_t v25 = v23;
    uint64_t v26 = v22;
    char v27 = 1;
    uint64_t v14 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
    sub_1C0A90988(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    sub_1C0A909D4((unint64_t *)&qword_1EB85C2F0, (unint64_t *)&qword_1EB879C00, v14);
    sub_1C152080C();
    uint64_t v25 = v13;
    uint64_t v26 = v12;
    char v27 = 2;
    sub_1C152080C();
    uint64_t v25 = v19;
    char v27 = 3;
    uint64_t v15 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C0A90988(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C0A909D4((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v15);
    sub_1C152080C();
    uint64_t v25 = v18;
    char v27 = 4;
    sub_1C0A90988(0, (unint64_t *)&qword_1EB86B2E8, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, MEMORY[0x1E4FBB320]);
    sub_1C0A90A3C(&qword_1EA197EC0, (void (*)(void))sub_1C01CBC70);
    sub_1C152080C();
    uint64_t v25 = v17;
    char v27 = 5;
    sub_1C11A0C2C();
    sub_1C11A0C84();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C11A0880(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x615465756761656CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x736449676174;
      break;
    case 4:
      unint64_t result = 0x53617461446C7275;
      break;
    case 5:
      unint64_t result = 0x73746E657665;
      break;
    case 6:
      unint64_t result = 0x72756F5361746164;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C11A0988()
{
  return sub_1C11A0880(*v0);
}

uint64_t sub_1C11A0990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C11A0F30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11A09B8(uint64_t a1)
{
  unint64_t v2 = sub_1C11A0B2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11A09F4(uint64_t a1)
{
  unint64_t v2 = sub_1C11A0B2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11A0A30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C119FC3C(a1, a2);
}

uint64_t sub_1C11A0A48(void *a1)
{
  return sub_1C11A04BC(a1);
}

void sub_1C11A0A60()
{
  if (!qword_1EB86BD20)
  {
    type metadata accessor for SportsDataVisualizationResponseScoreItem();
    sub_1C11A0B80(&qword_1EB86BDA8, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1C11A0B80(&qword_1EB86BDA0, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86BD20);
    }
  }
}

unint64_t sub_1C11A0B2C()
{
  unint64_t result = qword_1EB86BDB0;
  if (!qword_1EB86BDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BDB0);
  }
  return result;
}

uint64_t sub_1C11A0B80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C11A0BC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C11A0B2C();
    unint64_t v7 = a3(a1, &type metadata for SportsDataVisualizationResponseBracketItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C11A0C2C()
{
  if (!qword_1EA1AC738)
  {
    type metadata accessor for SportsDataVisualizationResponseScoreItem();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AC738);
    }
  }
}

unint64_t sub_1C11A0C84()
{
  unint64_t result = qword_1EA1AC740;
  if (!qword_1EA1AC740)
  {
    sub_1C11A0C2C();
    sub_1C11A0B80(&qword_1EB86BDA0, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC740);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseBracketItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11A0DF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseBracketItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseBracketItem.CodingKeys;
}

unint64_t sub_1C11A0E2C()
{
  unint64_t result = qword_1EA1AC748;
  if (!qword_1EA1AC748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC748);
  }
  return result;
}

unint64_t sub_1C11A0E84()
{
  unint64_t result = qword_1EB86BDC0;
  if (!qword_1EB86BDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BDC0);
  }
  return result;
}

unint64_t sub_1C11A0EDC()
{
  unint64_t result = qword_1EB86BDB8;
  if (!qword_1EB86BDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BDB8);
  }
  return result;
}

uint64_t sub_1C11A0F30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6E6143636D75 && a2 == 0xEE0064496C616369;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615465756761656CLL && a2 == 0xEB00000000644967 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1636420 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736449676174 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x53617461446C7275 && a2 == 0xEE0073656372756FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x72756F5361746164 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t FormatResizeAutoMask.rawValue.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
    case 4:
      unint64_t result = 0x656C626978656C66;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C11A1340@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatResizeAutoMask.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C11A1368(char *a1, char *a2)
{
  return sub_1C147EB24(*a1, *a2);
}

uint64_t sub_1C11A1374()
{
  return sub_1C015E538();
}

uint64_t sub_1C11A137C()
{
  return sub_1C04471D8();
}

uint64_t sub_1C11A1384()
{
  return sub_1C151EAEC();
}

BOOL sub_1C11A13DC(char *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  char v5 = *a1;
  unsigned __int8 v4 = v2;
  return (_s8NewsFeed20FormatResizeAutoMaskO1loiySbAC_ACtFZ_0(&v4, &v5) & 1) == 0;
}

BOOL sub_1C11A141C(unsigned __int8 *a1, char *a2)
{
  char v2 = *a2;
  unsigned __int8 v5 = *a1;
  char v4 = v2;
  return (_s8NewsFeed20FormatResizeAutoMaskO1loiySbAC_ACtFZ_0(&v5, &v4) & 1) == 0;
}

uint64_t sub_1C11A145C(char *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  char v5 = *a1;
  unsigned __int8 v4 = v2;
  return _s8NewsFeed20FormatResizeAutoMaskO1loiySbAC_ACtFZ_0(&v4, &v5) & 1;
}

uint64_t _s8NewsFeed20FormatResizeAutoMaskO1loiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = 0xD000000000000012;
  unint64_t v4 = 0x80000001C1600030;
  switch(v2)
  {
    case 1:
      unint64_t v3 = 0x656C626978656C66;
      unint64_t v4 = 0xED00006874646957;
      break;
    case 2:
      unint64_t v3 = 0xD000000000000013;
      char v5 = "flexibleRightMargin";
      goto LABEL_7;
    case 3:
      unint64_t v4 = 0x80000001C1600080;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v3 = 0x656C626978656C66;
      unint64_t v4 = 0xEE00746867696548;
      break;
    case 5:
      unint64_t v3 = 0xD000000000000014;
      char v5 = "flexibleBottomMargin";
LABEL_7:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD000000000000012;
  unint64_t v7 = 0x80000001C1600030;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0x656C626978656C66;
      unint64_t v7 = 0xED00006874646957;
      break;
    case 2:
      unint64_t v6 = 0xD000000000000013;
      uint64_t v8 = "flexibleRightMargin";
      goto LABEL_14;
    case 3:
      unint64_t v7 = 0x80000001C1600080;
      unint64_t v6 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v6 = 0x656C626978656C66;
      unint64_t v7 = 0xEE00746867696548;
      break;
    case 5:
      unint64_t v6 = 0xD000000000000014;
      uint64_t v8 = "flexibleBottomMargin";
LABEL_14:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v3 == v6 && v4 == v7) {
    char v9 = 0;
  }
  else {
    char v9 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

unint64_t sub_1C11A16B0(void *a1)
{
  a1[1] = sub_1C0077294();
  a1[2] = sub_1C0077390();
  unint64_t result = sub_1C00772E8();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatResizeAutoMask()
{
  return &type metadata for FormatResizeAutoMask;
}

void sub_1C11A1720(void *a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  uint64_t v24 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v23 = *(void *)(a2 + 16);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 25);
  uint64_t v8 = *(void **)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  objc_msgSend(a1, sel_setActionAtItemEnd_, v7);
  objc_msgSend(a1, sel_setPreventsDisplaySleepDuringVideoPlayback_, v5);
  objc_msgSend(a1, sel_setMuted_, v6);
  id v9 = objc_msgSend(v2, sel_layer);
  self;
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setPlayer_, a1);

  id v10 = objc_msgSend(v2, sel_layer);
  self;
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setVideoGravity_, v4);

  uint64_t v11 = 256;
  if (!v6) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = &v2[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties];
  uint64_t v13 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties];
  uint64_t v14 = *(void *)&v2[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 8];
  uint64_t v15 = v11 | v5;
  uint64_t v16 = *(void *)&v2[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 16];
  uint64_t v17 = *(void *)&v2[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 24];
  uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 32];
  *(void *)uint64_t v12 = v4;
  *((void *)v12 + 1) = v24;
  *((void *)v12 + 2) = v23;
  *((void *)v12 + 3) = v15;
  *((void *)v12 + 4) = v8;
  *((void *)v12 + 5) = v7;
  id v19 = v4;
  id v20 = v8;
  sub_1C01D6E14(v13, v14, v16, v17, v18);
  uint64_t v21 = *(void *)&v2[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
  swift_beginAccess();
  int v22 = *(unsigned __int8 *)(v21 + 16);
  *(unsigned char *)(v21 + 16) = 1;
  if (v22 != 1) {
    LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
  }
}

char *sub_1C11A1924(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = &v4[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_identifier];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0xE000000000000000;
  uint64_t v12 = &v4[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_assets];
  uint64_t v13 = type metadata accessor for FormatVideoData.Assets(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator;
  type metadata accessor for LayeredMediaViewDisplayStateCoordinator();
  swift_allocObject();
  uint64_t v15 = v5;
  *(void *)&v5[v14] = LayeredMediaViewDisplayStateCoordinator.init()();
  uint64_t v16 = &v15[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties];
  *((_OWORD *)v16 + 1) = 0u;
  *((_OWORD *)v16 + 2) = 0u;
  *(_OWORD *)uint64_t v16 = 0u;

  v23.receiver = v15;
  v23.super_class = ObjectType;
  uint64_t v17 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
  swift_beginAccess();
  char v19 = *(unsigned char *)(v18 + 16);
  *(unsigned char *)(v18 + 16) = 0;
  if (v19) {
    *(_WORD *)(v18 + 56) = 2;
  }
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  uint64_t v21 = *(void *)(v18 + 24);
  *(void *)(v18 + 24) = sub_1C11A2014;
  *(void *)(v18 + 32) = v20;
  sub_1BFC3E5C0(v21);
  return v17;
}

void sub_1C11A1ADC(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2 = *a1;
  unsigned __int8 v3 = a1[1];
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1C18C9C60](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = (void *)(v5 + OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties);
    uint64_t v8 = *(void **)(v5 + OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties);
    if (!v8)
    {
LABEL_6:

      return;
    }
    uint64_t v9 = v7[2];
    uint64_t v18 = v7[1];
    uint64_t v11 = v7[3];
    id v10 = (void *)v7[4];
    id v12 = v8;
    id v13 = v10;
    id v14 = objc_msgSend(v6, sel_layer);
    self;
    id v15 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_player);

    if (v15)
    {
      id v16 = objc_msgSend(v6, sel_layer);
      self;
      uint64_t v17 = (void *)swift_dynamicCastObjCClassUnconditional();
      if ((v2 ^ 1 | v3))
      {
        objc_msgSend(v17, sel_pause);
        sub_1C01D6E14(v8, v18, v9, v11, v10);

        goto LABEL_6;
      }
      objc_msgSend(v17, sel_playWithPlaybackKind_looping_, v9, v18 & 1);

      sub_1C01D6E14(v8, v18, v9, v11, v10);
    }
    else
    {

      sub_1C01D6E14(v8, v18, v9, v11, v10);
    }
  }
}

uint64_t sub_1C11A1EDC()
{
  return type metadata accessor for FormatVideoView();
}

uint64_t sub_1C11A1EE4()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed15FormatVideoView_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1C11A1F24()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator);
  swift_beginAccess();
  int v2 = *(unsigned __int8 *)(v1 + 17);
  *(unsigned char *)(v1 + 17) = 1;
  if ((v2 & 0xFFFFFFC1) != 1) {
    LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
  }
}

void sub_1C11A1F84()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator);
  swift_beginAccess();
  int v2 = *(unsigned __int8 *)(v1 + 17);
  *(unsigned char *)(v1 + 17) = 0;
  if ((v2 & 0xFFFFFFC1) != 0) {
    LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
  }
}

uint64_t sub_1C11A1FDC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C11A2014(unsigned __int8 *a1)
{
  sub_1C11A1ADC(a1, v1);
}

unint64_t sub_1C11A201C()
{
  unint64_t result = qword_1EB85DFA8;
  if (!qword_1EB85DFA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB85DFA8);
  }
  return result;
}

uint64_t sub_1C11A205C(uint64_t a1)
{
  sub_1C007FC48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1C11A20B8()
{
  uint64_t v0 = sub_1C151631C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned __int8 v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151635C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E4A8]), sel_init);
  sub_1C151634C();
  sub_1C151633C();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  id v10 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setArticleID_, v10);

  sub_1C1518F3C();
  uint64_t v11 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setTitle_, v11);

  sub_1C1518F3C();
  id v12 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setShortExcerpt_, v12);

  sub_1C1518F3C();
  id v13 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setSourceName_, v13);

  sub_1C1518F0C();
  id v14 = (void *)sub_1C151621C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v8, sel_setPublishDate_, v14);

  sub_1C151634C();
  sub_1C151633C();
  v9(v7, v4);
  sub_1C1518F3C();
  id v15 = objc_allocWithZone(MEMORY[0x1E4F7E818]);
  id v16 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v15, sel_initForTestingWithTagType_identifier_name_, 2, v16, v17);

  objc_msgSend(v8, sel_setSourceChannel_, v18);
  objc_msgSend(v8, sel_setHasThumbnail_, 1);
  id v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StubAssetHandle()), sel_init);
  id v20 = objc_msgSend(self, sel_headlineThumbnailWithAssetHandle_thumbnailSize_, v19, 1000.0, 1000.0);

  objc_msgSend(v8, sel_setThumbnail_, v20);
  sub_1C1518F3C();
  uint64_t v21 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setAccessoryText_, v21);

  return v8;
}

id sub_1C11A24DC()
{
  uint64_t v0 = sub_1C151631C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned __int8 v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151635C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E4A8]), sel_init);
  sub_1C151634C();
  sub_1C151633C();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  id v10 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setArticleID_, v10);

  sub_1C1518F3C();
  uint64_t v11 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setTitle_, v11);

  sub_1C1518F3C();
  id v12 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setShortExcerpt_, v12);

  sub_1C1518F3C();
  id v13 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setSourceName_, v13);

  sub_1C1518F0C();
  id v14 = (void *)sub_1C151621C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v8, sel_setPublishDate_, v14);

  sub_1C151634C();
  sub_1C151633C();
  v9(v7, v4);
  sub_1C1518F3C();
  id v15 = objc_allocWithZone(MEMORY[0x1E4F7E818]);
  id v16 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v15, sel_initForTestingWithTagType_identifier_name_, 2, v16, v17);

  objc_msgSend(v8, sel_setSourceChannel_, v18);
  objc_msgSend(v8, sel_setHasThumbnail_, 1);
  id v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StubAssetHandle()), sel_init);
  id v20 = objc_msgSend(self, sel_headlineThumbnailWithAssetHandle_thumbnailSize_, v19, 1000.0, 1000.0);

  objc_msgSend(v8, sel_setThumbnail_, v20);
  sub_1C1518F3C();
  uint64_t v21 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setAccessoryText_, v21);

  objc_msgSend(v8, sel_setHasThumbnail_, 0);
  objc_msgSend(v8, sel_setThumbnail_, 0);
  return v8;
}

id static Random.headline(modifier:)(void (*a1)(id *), uint64_t a2)
{
  v25[1] = a2;
  uint64_t v26 = a1;
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151635C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E4A8]), sel_init);
  id v10 = v27;
  sub_1C151634C();
  sub_1C151633C();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v7 + 8);
  v11(v9, v6);
  id v12 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setArticleID_, v12);

  sub_1C1518F3C();
  id v13 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setTitle_, v13);

  sub_1C1518F3C();
  id v14 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setShortExcerpt_, v14);

  sub_1C1518F3C();
  id v15 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setSourceName_, v15);

  sub_1C1518F0C();
  id v16 = (void *)sub_1C151621C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v10, sel_setPublishDate_, v16);

  sub_1C151634C();
  sub_1C151633C();
  v11(v9, v6);
  sub_1C1518F3C();
  id v17 = objc_allocWithZone(MEMORY[0x1E4F7E818]);
  id v18 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v19 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v17, sel_initForTestingWithTagType_identifier_name_, 2, v18, v19);

  objc_msgSend(v10, sel_setSourceChannel_, v20);
  objc_msgSend(v10, sel_setHasThumbnail_, 1);
  id v21 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StubAssetHandle()), sel_init);
  id v22 = objc_msgSend(self, sel_headlineThumbnailWithAssetHandle_thumbnailSize_, v21, 1000.0, 1000.0);

  objc_msgSend(v10, sel_setThumbnail_, v22);
  sub_1C1518F3C();
  uint64_t v23 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setAccessoryText_, v23);

  v26(&v27);
  return v27;
}

void static Random.issue(with:isCurrent:publicationDate:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v88 = a3;
  uint64_t v89 = a1;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v87 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151635C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v69 - v13;
  uint64_t v15 = sub_1C151631C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = a2;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C1518F1C();
  uint64_t v83 = v20;
  uint64_t v84 = v19;
  uint64_t v79 = v16;
  uint64_t v21 = v16 + 16;
  id v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v85 = v18;
  uint64_t v86 = a4;
  uint64_t v23 = v15;
  uint64_t v76 = v22;
  uint64_t v77 = v21;
  v22(v18, a4, v15);
  uint64_t v24 = sub_1C1518F1C();
  uint64_t v81 = v25;
  uint64_t v82 = v24;
  id v80 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E268]), sel_init);
  id v78 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StubAssetHandle()), sel_init);
  sub_1C1518F2C();
  uint64_t v26 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v27 = self;
  id v75 = objc_msgSend(v27, sel_colorWithHexString_, v26);

  sub_1C1518F2C();
  uint64_t v28 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v74 = objc_msgSend(v27, sel_colorWithHexString_, v28);

  sub_1C1518F2C();
  uint64_t v29 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v73 = objc_msgSend(v27, sel_colorWithHexString_, v29);

  sub_1C1518F2C();
  uint64_t v30 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v72 = objc_msgSend(v27, sel_colorWithHexString_, v30);

  sub_1C1518F2C();
  uint64_t v31 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v71 = objc_msgSend(v27, sel_colorWithHexString_, v31);

  sub_1BFEF9A78();
  uint64_t v32 = swift_allocObject();
  long long v91 = xmmword_1C1529AE0;
  *(_OWORD *)(v32 + 16) = xmmword_1C1529AE0;
  sub_1C151634C();
  uint64_t v33 = sub_1C151633C();
  uint64_t v35 = v34;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v9 + 8);
  v36(v14, v8);
  *(void *)(v32 + 32) = v33;
  *(void *)(v32 + 40) = v35;
  sub_1C151634C();
  uint64_t v70 = sub_1C151633C();
  uint64_t v69 = v37;
  v36(v11, v8);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v91;
  *(void *)(v38 + 32) = sub_1C151E62C();
  *(void *)(v38 + 40) = v39;
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v91;
  sub_1C151634C();
  uint64_t v41 = sub_1C151633C();
  uint64_t v43 = v42;
  v36(v14, v8);
  *(void *)(v40 + 32) = v41;
  *(void *)(v40 + 40) = v43;
  sub_1C151634C();
  sub_1C151633C();
  v36(v14, v8);
  sub_1C1518F1C();
  id v44 = objc_allocWithZone((Class)_s9RandomTagCMa_0());
  swift_bridgeObjectRetain();
  uint64_t v45 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v46 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v47 = objc_msgSend(v44, sel_initForTestingWithTagType_identifier_name_, 2, v45, v46);

  if (v47)
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_1C1518F3C();
    uint64_t v50 = v49;
    uint64_t v51 = sub_1C1518F3C();
    uint64_t v53 = v52;
    uint64_t v54 = (uint64_t)v87;
    v76(v87, v86, v23);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v54, 0, 1, v23);
    id v55 = objc_allocWithZone(MEMORY[0x1E4F7E4F8]);
    uint64_t v67 = v51;
    uint64_t v68 = v53;
    uint64_t v66 = v50;
    uint64_t v65 = v40;
    uint64_t v64 = v38;
    uint64_t v63 = v32;
    id v56 = v71;
    id v57 = v72;
    id v58 = v73;
    id v59 = v74;
    id v60 = v75;
    id v61 = v78;
    id v62 = v80;
    sub_1C11A4778(0.75, 0.75, v89, v90, 0, v84, v83, (uint64_t)v85, v82, v81, (uint64_t)v80, (uint64_t)v78, (uint64_t)v75, (uint64_t)v74, (uint64_t)v73, (uint64_t)v72, 0, 0xE000000000000000, (uint64_t)v71,
      v88 & 1,
      0,
      0,
      v63,
      v70,
      v69,
      v64,
      MEMORY[0x1E4FBC860],
      v65,
      (uint64_t)v47,
      v48,
      v66,
      v67,
      v68,
      v54,
      v55);
  }
  else
  {
    __break(1u);
  }
}

id static Random.headline(identifier:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  id v4 = sub_1C11A4BA8(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

id static Random.scoredHeadline(scoreProfile:modifier:)@<X0>(void *a1@<X0>, void (*a2)(id *)@<X1>, uint64_t a3@<X2>, id *a4@<X8>)
{
  *a4 = static Random.headline(modifier:)(a2, a3);
  a4[1] = a1;
  return a1;
}

void static Random.channel(with:)()
{
  sub_1C1518F1C();
  id v0 = objc_allocWithZone((Class)_s9RandomTagCMa_0());
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v0, sel_initForTestingWithTagType_identifier_name_, 2, v1, v2);

  if (!v3) {
    __break(1u);
  }
}

unint64_t static Random.tagType()()
{
  unint64_t result = sub_1C11A46EC(5uLL);
  if (result <= 4) {
    return qword_1F1B8A330[result + 4];
  }
  __break(1u);
  return result;
}

void static Random.tag(with:tagType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1518F1C();
  id v4 = objc_allocWithZone((Class)_s9RandomTagCMa());
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_initForTestingWithTagType_identifier_name_, a3, v5, v6);

  if (!v7) {
    __break(1u);
  }
}

id static Random.fcColor()()
{
  return sub_1C11A366C((Class *)0x1E4F7E328);
}

id static Random.color()()
{
  return sub_1C11A366C((Class *)0x1E4FB1618);
}

id sub_1C11A366C(Class *a1)
{
  double v2 = (double)sub_1C11A46EC(0x20000000000001uLL) * 1.11022302e-16 + 0.0;
  double v3 = (double)sub_1C11A46EC(0x20000000000001uLL) * 1.11022302e-16 + 0.0;
  double v4 = (double)sub_1C11A46EC(0x20000000000001uLL) * 1.11022302e-16 + 0.0;
  double v5 = (double)sub_1C11A46EC(0x20000000000001uLL) * 1.11022302e-16 + 0.0;
  id v6 = objc_allocWithZone(*a1);
  return objc_msgSend(v6, sel_initWithRed_green_blue_alpha_, v2, v3, v4, v5);
}

id sub_1C11A3814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), SEL *a7)
{
  if (!a4)
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
    if (a5) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v14 = 0;
    uint64_t v16 = 0;
    return sub_1C11A4358(a3, v11, v13, v14, v16, a6, a7);
  }
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;
  if (!a5) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v14 = sub_1C151E62C();
  uint64_t v16 = v15;
  return sub_1C11A4358(a3, v11, v13, v14, v16, a6, a7);
}

id sub_1C11A38E4()
{
  return sub_1C11A4688((uint64_t (*)(void))_s9RandomTagCMa);
}

id sub_1C11A3A5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  v10.receiver = a1;
  v10.super_class = (Class)a6(0);
  return objc_msgSendSuper2(&v10, sel_initWithTagRecord_assetManager_interestToken_, a3, a4, a5);
}

id sub_1C11A3AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  if (a3)
  {
    uint64_t v13 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    if (a5) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v14 = 0;
    if (a7) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t v13 = 0;
  if (!a5) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v14 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  if (a7)
  {
LABEL_4:
    uint64_t v15 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v15 = 0;
LABEL_8:
  v18.receiver = v8;
  v18.super_class = (Class)a8(0);
  id v16 = objc_msgSendSuper2(&v18, sel_initForTestingWithTagType_identifier_name_umcCanonicalID_, a1, v13, v14, v15);

  if (v16) {
  return v16;
  }
}

id sub_1C11A3C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v9 = a5;
  if (a4)
  {
    uint64_t v11 = sub_1C151E62C();
    uint64_t v13 = v12;
    if (v9) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v15 = 0;
    if (a6) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    return sub_1C11A3AE4(a3, v11, v13, v9, v15, v16, v18, a7);
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
  if (!a5) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v9 = sub_1C151E62C();
  uint64_t v15 = v14;
  if (!a6) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;
  return sub_1C11A3AE4(a3, v11, v13, v9, v15, v16, v18, a7);
}

id sub_1C11A3CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(void))
{
  if (a2)
  {
    uint64_t v15 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v15 = 0;
    if (a4)
    {
LABEL_3:
      uint64_t v16 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      if (a6) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  uint64_t v16 = 0;
  if (a6)
  {
LABEL_4:
    uint64_t v17 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    uint64_t v18 = a10;
    uint64_t v19 = a11;
    if (a8) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t v20 = 0;
    if (v18) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t v17 = 0;
  uint64_t v18 = a10;
  uint64_t v19 = a11;
  if (!a8) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v20 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  if (v18)
  {
LABEL_6:
    uint64_t v21 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v21 = 0;
LABEL_12:
  v24.receiver = v11;
  v24.super_class = (Class)v19(0);
  id v22 = objc_msgSendSuper2(&v24, sel_initChannelForTestingWithIdentifier_name_defaultSection_publisherAuthorizationURL_publisherVerificationURL_, v15, v16, v17, v20, v21);

  if (v22) {
  return v22;
  }
}

id sub_1C11A3E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t (*a8)(void))
{
  uint64_t v11 = a4;
  if (a3)
  {
    uint64_t v27 = sub_1C151E62C();
    uint64_t v13 = v12;
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v13 = 0;
    if (a4)
    {
LABEL_3:
      uint64_t v11 = sub_1C151E62C();
      uint64_t v15 = v14;
      if (a5) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  uint64_t v15 = 0;
  if (a5)
  {
LABEL_4:
    uint64_t v16 = sub_1C151E62C();
    uint64_t v18 = v17;
    if (a6) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t v20 = 0;
    id v21 = a7;
    if (v21) {
      goto LABEL_6;
    }
LABEL_11:
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    return sub_1C11A3CDC(v27, v13, v11, v15, v16, v18, a6, v20, v23, v25, a8);
  }
LABEL_9:
  uint64_t v16 = 0;
  uint64_t v18 = 0;
  if (!a6) {
    goto LABEL_10;
  }
LABEL_5:
  a6 = sub_1C151E62C();
  uint64_t v20 = v19;
  id v21 = a7;
  if (!v21) {
    goto LABEL_11;
  }
LABEL_6:
  id v22 = v21;
  uint64_t v23 = sub_1C151E62C();
  uint64_t v25 = v24;

  return sub_1C11A3CDC(v27, v13, v11, v15, v16, v18, a6, v20, v23, v25, a8);
}

id sub_1C11A3F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  if (a2)
  {
    objc_super v10 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v11 = 0;
    if (a5) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  objc_super v10 = 0;
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v11 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  if (a5)
  {
LABEL_4:
    uint64_t v12 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v12 = 0;
LABEL_8:
  v15.receiver = v6;
  v15.super_class = (Class)a6(0);
  id v13 = objc_msgSendSuper2(&v15, sel_initChannelForTestingWithIdentifier_name_publisherPaidBundlePurchaseIDs_, v10, v11, v12);

  if (v13) {
  return v13;
  }
}

id sub_1C11A40BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v8 = a4;
  if (a3)
  {
    uint64_t v9 = sub_1C151E62C();
    uint64_t v11 = v10;
    if (v8) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v13 = 0;
    if (a5) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v14 = 0;
    return sub_1C11A3F98(v9, v11, v8, v13, v14, a6);
  }
  uint64_t v9 = 0;
  uint64_t v11 = 0;
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v8 = sub_1C151E62C();
  uint64_t v13 = v12;
  if (!a5) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v14 = sub_1C151EBCC();
  return sub_1C11A3F98(v9, v11, v8, v13, v14, a6);
}

id sub_1C11A4178(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a2 >> 60 == 15) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = (void *)sub_1C151605C();
  }
  v13.receiver = v4;
  v13.super_class = (Class)a4(0);
  id v10 = objc_msgSendSuper2(&v13, sel_initWithData_context_, v9, a3);
  swift_unknownObjectRelease();
  sub_1BFE95878(a1, a2);
  id v11 = v10;

  if (v11) {
  return v11;
  }
}

id sub_1C11A4250(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  id v7 = a3;
  if (a3)
  {
    swift_unknownObjectRetain();
    id v8 = v7;
    id v7 = (void *)sub_1C151606C();
    unint64_t v10 = v9;
  }
  else
  {
    swift_unknownObjectRetain();
    unint64_t v10 = 0xF000000000000000;
  }
  return sub_1C11A4178((uint64_t)v7, v10, a4, a5);
}

id sub_1C11A42F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  v10.receiver = a1;
  v10.super_class = (Class)a6(0);
  return objc_msgSendSuper2(&v10, sel_initWithTagMetadata_assetManager_isSports_, a3, a4, a5);
}

id sub_1C11A4358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), SEL *a7)
{
  if (a3)
  {
    uint64_t v12 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    if (a5)
    {
LABEL_3:
      objc_super v13 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v12 = 0;
    if (a5) {
      goto LABEL_3;
    }
  }
  objc_super v13 = 0;
LABEL_6:
  v16.receiver = v7;
  v16.super_class = (Class)a6(0);
  id v14 = objc_msgSendSuper2(&v16, *a7, a1, v12, v13);

  if (v14) {
  return v14;
  }
}

id sub_1C11A445C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t (*a7)(void))
{
  if (a2)
  {
    uint64_t v12 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    if (a4)
    {
LABEL_3:
      objc_super v13 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v12 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  objc_super v13 = 0;
LABEL_6:
  v17.receiver = v7;
  v17.super_class = (Class)a7(0);
  id v14 = objc_msgSendSuper2(&v17, sel_initChannelFromNotificationWithIdentifier_name_nameImageAssetHandle_nameImageMaskAssetHandle_, v12, v13, a5, a6);

  id v15 = v14;
  if (v15) {

  }
  return v15;
}

id sub_1C11A4560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t (*a7)(void))
{
  uint64_t v10 = a4;
  if (!a3)
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v15 = 0;
    goto LABEL_6;
  }
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v10 = sub_1C151E62C();
  uint64_t v15 = v14;
LABEL_6:
  id v16 = a5;
  id v17 = a6;
  return sub_1C11A445C(v11, v13, v10, v15, a5, a6, a7);
}

id sub_1C11A4628(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  v4.receiver = a1;
  v4.super_class = (Class)a3(0);
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_1C11A4670()
{
  return sub_1C11A4688((uint64_t (*)(void))_s9RandomTagCMa_0);
}

id sub_1C11A4688(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t _s9RandomTagCMa_0()
{
  return self;
}

unint64_t sub_1C11A46EC(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x1C18C9B20](&v3, 8);
    unint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x1C18C9B20](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C11A4778(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35)
{
  uint64_t v54 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v53 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v57 = a8;
  uint64_t v52 = (void *)sub_1C151621C();
  uint64_t v51 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v48 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v50 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v47 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  if (a26)
  {
    uint64_t v49 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v49 = 0;
  }
  if (a27)
  {
    uint64_t v38 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = 0;
  }
  uint64_t v39 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  uint64_t v40 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v41 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v42 = sub_1C151631C();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v58 = v42;
  id v44 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v43 + 48))(a34, 1) != 1)
  {
    id v44 = (void *)sub_1C151621C();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(a34, v58);
  }
  BYTE2(v46) = a21 & 1;
  LOWORD(v46) = a20 & 0x101;
  id v56 = objc_msgSend(a35, sel_initWithIdentifier_type_title_publicationDate_coverDate_metadataJSONAssetHandle_coverImageAssetHandle_coverImageAspectRatio_coverImagePrimaryColor_coverImageBackgroundColor_coverImageTextColor_coverImageAccentColor_layeredCoverJSON_layeredCoverAspectRatio_layeredCoverPrimaryColor_isCurrent_isDraft_isPaid_minimumNewsVersion_allArticleIDs_coverArticleID_allowedStorefrontIDs_blockedStorefrontIDs_topicTagIDs_sourceChannel_notificationDescription_issueDescription_sortDate_, v54, a5, v53, v52, v51, a11, a1, a2, a12, a13, a14, a15, a16, v48, a19, v46, a22,
          v50,
          v47,
          v49,
          v38,
          v39,
          a29,
          v40,
          v41,
          v44);

  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v57, v58);
  return v56;
}

id sub_1C11A4BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151635C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_allocWithZone(MEMORY[0x1E4F7E4A8]);
  id v11 = objc_msgSend(v10, sel_init, v27, v28);
  sub_1C151634C();
  sub_1C151633C();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v7 + 8);
  v12(v9, v6);
  uint64_t v13 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setArticleID_, v13);

  sub_1C1518F3C();
  uint64_t v14 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setTitle_, v14);

  sub_1C1518F3C();
  uint64_t v15 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setShortExcerpt_, v15);

  sub_1C1518F3C();
  id v16 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setSourceName_, v16);

  sub_1C1518F0C();
  id v17 = (void *)sub_1C151621C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v11, sel_setPublishDate_, v17);

  sub_1C151634C();
  sub_1C151633C();
  v12(v9, v6);
  sub_1C1518F3C();
  id v18 = objc_allocWithZone(MEMORY[0x1E4F7E818]);
  uint64_t v19 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v18, sel_initForTestingWithTagType_identifier_name_, 2, v19, v20);

  objc_msgSend(v11, sel_setSourceChannel_, v21);
  objc_msgSend(v11, sel_setHasThumbnail_, 1);
  id v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StubAssetHandle()), sel_init);
  id v23 = objc_msgSend(self, sel_headlineThumbnailWithAssetHandle_thumbnailSize_, v22, 1000.0, 1000.0);

  objc_msgSend(v11, sel_setThumbnail_, v23);
  sub_1C1518F3C();
  uint64_t v24 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setAccessoryText_, v24);

  uint64_t v25 = (void *)sub_1C151E5EC();
  objc_msgSend(v11, sel_setArticleID_, v25);

  return v11;
}

uint64_t _s9RandomTagCMa()
{
  return self;
}

uint64_t sub_1C11A501C()
{
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C15198DC();
  return __swift_project_value_buffer(v0, (uint64_t)qword_1EB93C7A8);
}

uint64_t sub_1C11A5080(uint64_t a1)
{
  return sub_1BFCCB4A8(a1, 0x6F4374616D726F46, 0xEE0072656C69706DLL, &qword_1EA2B5350);
}

uint64_t sub_1C11A50AC(uint64_t a1)
{
  return sub_1BFCCB4A8(a1, 0x656E696C64616548, 0xEF65636976726553, &qword_1EB93CBC8);
}

uint64_t sub_1C11A50D8(uint64_t a1)
{
  return sub_1BFCCB4A8(a1, 0x676E6970756F7247, 0xE800000000000000, &qword_1EB93C330);
}

uint64_t sub_1C11A50F8(uint64_t a1)
{
  return sub_1BFCCB4A8(a1, 0x4D6465726579614CLL, 0xEC00000061696465, &qword_1EB93C270);
}

uint64_t sub_1C11A5120(uint64_t a1)
{
  return sub_1BFCCB4A8(a1, 0x6F74636570736E49, 0xE900000000000072, &qword_1EA2B5358);
}

uint64_t sub_1C11A5144(uint64_t a1)
{
  return sub_1BFCCB4A8(a1, 0x7374726F7053, 0xE600000000000000, &qword_1EB93C5E8);
}

uint64_t sub_1C11A5160(uint64_t a1)
{
  return sub_1BFCCB4A8(a1, 0x7069726373627553, 0xED0000736E6F6974, &qword_1EB93CBB8);
}

uint64_t sub_1C11A518C(uint64_t a1)
{
  return sub_1BFCCB4A8(a1, 0xD000000000000011, 0x80000001C1636680, &qword_1EB93C4D0);
}

uint64_t sub_1C11A51B0(uint64_t a1)
{
  return sub_1BFC83B0C(a1, qword_1EB863FB8);
}

uint64_t static Logger.sports.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C15198DC();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB863FB8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1C11A5274(uint64_t a1)
{
  return sub_1BFC83B0C(a1, qword_1EA2B5360);
}

uint64_t sub_1C11A52A0(uint64_t a1)
{
  return sub_1BFC83B0C(a1, qword_1EB93C608);
}

uint64_t sub_1C11A52CC(uint64_t a1)
{
  return sub_1BFC83B0C(a1, qword_1EA2B5378);
}

uint64_t sub_1C11A52EC()
{
  uint64_t v0 = sub_1C15198DC();
  __swift_allocate_value_buffer(v0, qword_1EA2B5390);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA2B5390);
  if (qword_1EA194B10 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EA2B5350;
  return sub_1C15198EC();
}

uint64_t sub_1C11A5378(uint64_t a1)
{
  return sub_1BFC83B0C(a1, qword_1EA2B53A8);
}

uint64_t sub_1C11A53A0(uint64_t a1)
{
  return sub_1BFC83B0C(a1, qword_1EB93C348);
}

uint64_t sub_1C11A53C0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v40 = a1;
  uint64_t v3 = sub_1C151661C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1C151586C();
  uint64_t v38 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *a2;
  if (qword_1EB86AD90 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB86AD78);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_1C003272C(0, (unint64_t *)&qword_1EB87A578, MEMORY[0x1E4F27C88]);
  uint64_t v10 = sub_1C15165FC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v39 = v3;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C152C7F0;
  unint64_t v15 = v14 + v13;
  id v16 = *(void (**)(unint64_t, void, uint64_t))(v11 + 104);
  v16(v15, *MEMORY[0x1E4F27C10], v10);
  v16(v15 + v12, *MEMORY[0x1E4F27C48], v10);
  v16(v15 + 2 * v12, *MEMORY[0x1E4F27C50], v10);
  sub_1C00B78C4(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C151652C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v39);
  uint64_t v17 = sub_1C151583C();
  if ((v18 & 1) != 0
    || (uint64_t v19 = v17, v20 = sub_1C151582C(), (v21 & 1) != 0)
    || (uint64_t v22 = v20, v23 = sub_1C15157DC(), (v24 & 1) != 0))
  {
    uint64_t v25 = v41;
    if (qword_1EB87B060 != -1) {
      swift_once();
    }
    id v28 = (id)qword_1EB93C700;
    sub_1C151F36C();
    sub_1C003272C(0, (unint64_t *)&qword_1EB895EB0, (void (*)(uint64_t))sub_1C0062478);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
    sub_1C11A58F0();
    uint64_t v30 = sub_1C152088C();
    uint64_t v32 = v31;
    *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v29 + 64) = sub_1BFE9C558();
    *(void *)(v29 + 32) = v30;
    *(void *)(v29 + 40) = v32;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    char v33 = 0;
  }
  else
  {
    uint64_t v25 = v41;
    uint64_t v26 = v23;
    switch(v37)
    {
      case 1:
        id v27 = objc_msgSend(v36, sel_afternoonTimeOfDayConfiguration);
        break;
      case 2:
        id v27 = objc_msgSend(v36, sel_eveningTimeOfDayConfiguration);
        break;
      case 3:
        id v27 = objc_msgSend(v36, sel_nightTimeOfDayConfiguration);
        break;
      default:
        id v27 = objc_msgSend(v36, sel_morningTimeOfDayConfiguration);
        break;
    }
    id v35 = v27;
    char v33 = sub_1C00325F4(v26, v22, v19);
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v25);
  return v33 & 1;
}

unint64_t sub_1C11A58F0()
{
  unint64_t result = qword_1EA1AC758;
  if (!qword_1EA1AC758)
  {
    sub_1C151586C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC758);
  }
  return result;
}

uint64_t FormatShineOptions.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatShineOptions.color.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

void FormatShineOptions.sizer.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

double FormatShineOptions.rotateRadians.getter()
{
  return *(double *)(v0 + 32);
}

__n128 FormatShineOptions.motion.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  char v3 = *(unsigned char *)(v1 + 80);
  __n128 result = *(__n128 *)(v1 + 40);
  long long v5 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  return result;
}

uint64_t FormatShineOptions.blends.getter()
{
  return swift_bridgeObjectRetain();
}

double FormatShineOptions.scale.getter()
{
  return *(double *)(v0 + 96);
}

uint64_t sub_1C11A59D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatShineOptions.init(from:)(a1, a2);
}

uint64_t sub_1C11A59E8(void *a1)
{
  return FormatShineOptions.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatShineOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a1 + 24);
  double v4 = *(double *)(a1 + 32);
  long long v25 = *(_OWORD *)(a1 + 56);
  long long v26 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 72);
  char v6 = *(unsigned char *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  double v8 = *(double *)(a1 + 96);
  uint64_t v9 = *(void *)(a2 + 16);
  int v10 = *(unsigned __int8 *)(a2 + 24);
  double v11 = *(double *)(a2 + 32);
  long long v23 = *(_OWORD *)(a2 + 56);
  long long v24 = *(_OWORD *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 72);
  char v13 = *(unsigned char *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 88);
  double v15 = *(double *)(a2 + 96);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v16 = sub_1C1520A9C(), uint64_t result = 0, (v16 & 1) != 0))
  {
    *(void *)&v30[0] = v2;
    *(void *)&v27[0] = v9;
    if ((static FormatColor.== infix(_:_:)((uint64_t *)v30, (unint64_t *)v27) & 1) == 0) {
      return 0;
    }
    if (v3) {
      uint64_t v18 = 0x7473756A64616E75;
    }
    else {
      uint64_t v18 = 1702521203;
    }
    if (v3) {
      unint64_t v19 = 0xEA00000000006465;
    }
    else {
      unint64_t v19 = 0xE400000000000000;
    }
    if (v10) {
      uint64_t v20 = 0x7473756A64616E75;
    }
    else {
      uint64_t v20 = 1702521203;
    }
    if (v10) {
      unint64_t v21 = 0xEA00000000006465;
    }
    else {
      unint64_t v21 = 0xE400000000000000;
    }
    if (v18 == v20 && v19 == v21)
    {
      swift_bridgeObjectRelease_n();
      if (v4 != v11) {
        return 0;
      }
LABEL_23:
      v30[0] = v26;
      v30[1] = v25;
      uint64_t v31 = v5;
      char v32 = v6;
      v27[0] = v24;
      v27[1] = v23;
      uint64_t v28 = v12;
      char v29 = v13;
      if (_s8NewsFeed12FormatMotionO2eeoiySbAC_ACtFZ_0((uint64_t)v30, (uint64_t)v27)) {
        return sub_1C00EB218(v7, v14) & (v8 == v15);
      }
      return 0;
    }
    char v22 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v22 & 1) != 0 && v4 == v11) {
      goto LABEL_23;
    }
  }
  return result;
}

unint64_t sub_1C11A5BE4(uint64_t a1)
{
  unint64_t result = sub_1C11A5C0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11A5C0C()
{
  unint64_t result = qword_1EA1AC760;
  if (!qword_1EA1AC760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC760);
  }
  return result;
}

unint64_t sub_1C11A5C60(void *a1)
{
  a1[1] = sub_1C11A5C98();
  a1[2] = sub_1C11A5CEC();
  unint64_t result = sub_1C11A5D40();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11A5C98()
{
  unint64_t result = qword_1EA1AC768;
  if (!qword_1EA1AC768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC768);
  }
  return result;
}

unint64_t sub_1C11A5CEC()
{
  unint64_t result = qword_1EA1AC770;
  if (!qword_1EA1AC770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC770);
  }
  return result;
}

unint64_t sub_1C11A5D40()
{
  unint64_t result = qword_1EA1AC778;
  if (!qword_1EA1AC778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC778);
  }
  return result;
}

uint64_t destroy for FormatShineOptions()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatShineOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatShineOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  *(_OWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 40) = v4;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

uint64_t assignWithTake for FormatShineOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

ValueMetadata *type metadata accessor for FormatShineOptions()
{
  return &type metadata for FormatShineOptions;
}

uint64_t FeedGroupLocalClusteringKnobs.allowSports.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupLocalClusteringKnobs.bundleArticleQuotas.getter()
{
  return swift_retain();
}

uint64_t FeedGroupLocalClusteringKnobs.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t FeedGroupLocalClusteringKnobs.forbiddenChannels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupLocalClusteringKnobs.minBodyTextLength.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t FeedGroupLocalClusteringKnobs.positionFromEnd.getter()
{
  return swift_retain();
}

uint64_t FeedGroupLocalClusteringKnobs.prioritizePromotedHeadlines.getter()
{
  return swift_retain();
}

uint64_t FeedGroupLocalClusteringKnobs.tagTimeouts.getter()
{
  return swift_bridgeObjectRetain();
}

void FeedGroupLocalClusteringKnobs.init(allowSports:bundleArticleQuotas:enabled:forbiddenChannels:minBodyTextLength:positionFromEnd:prioritizePromotedHeadlines:tagTimeouts:)(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unint64_t a10)
{
  HIDWORD(v25) = a6;
  uint64_t v26 = a5;
  uint64_t v17 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    a1 = sub_1C018F4A8(MEMORY[0x1E4FBC860]);
  }
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (a2)
  {
    if (a7) {
      goto LABEL_5;
    }
  }
  else
  {
    if (qword_1EB8654A0 != -1) {
      swift_once();
    }
    uint64_t v24 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB865488);
    sub_1C00C8F70(v24, (uint64_t)v19);
    sub_1C00C8FD4();
    a2 = swift_allocObject();
    sub_1C11A6DE4((uint64_t)v19, a2 + *(void *)(*(void *)a2 + 112));
    *(void *)(a2 + *(void *)(*(void *)a2 + 120)) = v20;
    if (a7)
    {
LABEL_5:
      unint64_t v21 = a10;
      if (a8) {
        goto LABEL_6;
      }
LABEL_17:
      sub_1BFDC6F40();
      a8 = swift_allocObject();
      *(unsigned char *)(a8 + 16) = 1;
      *(void *)(a8 + 24) = v20;
      if (v21) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  sub_1BFDC6E38();
  a7 = swift_allocObject();
  *(void *)(a7 + 16) = 1;
  *(void *)(a7 + 24) = v20;
  unint64_t v21 = a10;
  if (!a8) {
    goto LABEL_17;
  }
LABEL_6:
  if (v21) {
    goto LABEL_7;
  }
LABEL_18:
  unint64_t v21 = sub_1C018F4DC(MEMORY[0x1E4FBC860]);
LABEL_7:
  uint64_t v22 = v26;
  if ((v25 & 0x100000000) != 0) {
    uint64_t v22 = 0;
  }
  if (a4) {
    uint64_t v23 = a4;
  }
  else {
    uint64_t v23 = v20;
  }
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = (a3 == 2) | a3 & 1;
  *(void *)(a9 + 24) = v23;
  *(void *)(a9 + 32) = v22;
  *(void *)(a9 + 40) = a7;
  *(void *)(a9 + 48) = a8;
  *(void *)(a9 + 56) = v21;
}

uint64_t FeedGroupLocalClusteringKnobs.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C11A70E8(0, &qword_1EB86FDB8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11A6E48();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1C11A6E9C();
    LOBYTE(v32) = 0;
    sub_1C11A6F04();
    sub_1C152065C();
    unint64_t v10 = v39;
    sub_1C00C8FD4();
    LOBYTE(v31) = 1;
    sub_1C11A71F4(&qword_1EB865338, (void (*)(uint64_t))sub_1C00C8FD4);
    sub_1C152065C();
    uint64_t v11 = v32;
    LOBYTE(v31) = 2;
    int v26 = sub_1C152061C();
    sub_1BFED9C20();
    LOBYTE(v30) = 3;
    sub_1BFD4A88C((unint64_t *)&qword_1EB879F50);
    sub_1C152065C();
    uint64_t v25 = v31;
    LOBYTE(v30) = 4;
    uint64_t v13 = sub_1C152063C();
    int v23 = v14;
    uint64_t v24 = v13;
    sub_1BFDC6E38();
    LOBYTE(v29) = 5;
    sub_1C11A71F4(&qword_1EB8866D8, (void (*)(uint64_t))sub_1BFDC6E38);
    sub_1C152065C();
    uint64_t v22 = v30;
    sub_1BFDC6F40();
    LOBYTE(v28) = 6;
    sub_1C11A71F4(&qword_1EB8866B8, (void (*)(uint64_t))sub_1BFDC6F40);
    sub_1C152065C();
    uint64_t v21 = v29;
    sub_1C026BF58();
    char v27 = 7;
    sub_1C11A723C(&qword_1EB86FD60);
    sub_1C152065C();
    FeedGroupLocalClusteringKnobs.init(allowSports:bundleArticleQuotas:enabled:forbiddenChannels:minBodyTextLength:positionFromEnd:prioritizePromotedHeadlines:tagTimeouts:)(v10, v11, v26, v25, v24, v23 & 1, v22, v21, (uint64_t)&v33, v28);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v15 = v34;
    uint64_t v16 = v35;
    uint64_t v17 = v36;
    uint64_t v18 = v38;
    long long v19 = v37;
    *(_OWORD *)a2 = v33;
    *(unsigned char *)(a2 + 16) = v15;
    *(void *)(a2 + 24) = v16;
    *(void *)(a2 + 32) = v17;
    *(_OWORD *)(a2 + 40) = v19;
    *(void *)(a2 + 56) = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1C11A67BC(char a1)
{
  unint64_t result = 0x6F7053776F6C6C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x64656C62616E65;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x6E6F697469736F70;
      break;
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
      unint64_t result = 0x6F656D6954676174;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C11A68D8()
{
  return sub_1C11A67BC(*v0);
}

uint64_t sub_1C11A68E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C11A76F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11A6908(uint64_t a1)
{
  unint64_t v2 = sub_1C11A6E48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11A6944(uint64_t a1)
{
  unint64_t v2 = sub_1C11A6E48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupLocalClusteringKnobs.encode(to:)(void *a1)
{
  sub_1C11A70E8(0, &qword_1EB86FDE8, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = *v1;
  uint64_t v24 = v1[1];
  int v23 = *((unsigned __int8 *)v1 + 16);
  uint64_t v9 = v1[3];
  uint64_t v21 = v1[4];
  uint64_t v22 = v9;
  uint64_t v10 = v1[5];
  uint64_t v11 = v1[7];
  uint64_t v19 = v1[6];
  uint64_t v20 = v10;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1;
  uint64_t v15 = v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_1C11A6E48();
  sub_1C1520F0C();
  uint64_t v26 = v8;
  char v25 = 0;
  sub_1C11A6E9C();
  sub_1C11A714C();
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v16 = v22;
    uint64_t v26 = v24;
    char v25 = 1;
    sub_1C00C8FD4();
    sub_1C11A71F4(&qword_1EB865330, (void (*)(uint64_t))sub_1C00C8FD4);
    sub_1C152080C();
    LOBYTE(v26) = 2;
    sub_1C15207DC();
    uint64_t v26 = v16;
    char v25 = 3;
    sub_1BFED9C20();
    sub_1BFD4A88C((unint64_t *)&qword_1EB85DF50);
    sub_1C152080C();
    LOBYTE(v26) = 4;
    sub_1C15207FC();
    uint64_t v26 = v20;
    char v25 = 5;
    sub_1BFDC6E38();
    sub_1C11A71F4(qword_1EB865388, (void (*)(uint64_t))sub_1BFDC6E38);
    sub_1C152080C();
    uint64_t v26 = v19;
    char v25 = 6;
    sub_1BFDC6F40();
    sub_1C11A71F4(&qword_1EB865378, (void (*)(uint64_t))sub_1BFDC6F40);
    sub_1C152080C();
    uint64_t v26 = v11;
    char v25 = 7;
    sub_1C026BF58();
    sub_1C11A723C(&qword_1EB86FD58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v15);
}

uint64_t sub_1C11A6DB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupLocalClusteringKnobs.init(from:)(a1, a2);
}

uint64_t sub_1C11A6DC8(void *a1)
{
  return FeedGroupLocalClusteringKnobs.encode(to:)(a1);
}

uint64_t sub_1C11A6DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedGroupBundleArticleQuotas();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C11A6E48()
{
  unint64_t result = qword_1EB86FB08;
  if (!qword_1EB86FB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FB08);
  }
  return result;
}

void sub_1C11A6E9C()
{
  if (!qword_1EB86FD40)
  {
    sub_1BFDC6F40();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86FD40);
    }
  }
}

unint64_t sub_1C11A6F04()
{
  unint64_t result = qword_1EB86FD50;
  if (!qword_1EB86FD50)
  {
    sub_1C11A6E9C();
    sub_1C11A71F4(&qword_1EB8866B8, (void (*)(uint64_t))sub_1BFDC6F40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FD50);
  }
  return result;
}

uint64_t _s8NewsFeed0B25GroupLocalClusteringKnobsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a2 + 8);
  int v8 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v10 = *(void **)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v15 = *(void *)(a2 + 48);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  if ((sub_1C02B1AF0(*(void *)a1, *(void *)a2) & 1) == 0
    || (sub_1C03BF1D8(v2, v7) & 1) == 0
    || ((v3 ^ v8) & 1) != 0
    || (sub_1BFE9E788(v5, v10) & 1) == 0
    || v4 != v9
    || *(void *)(v6 + 16) != *(void *)(v11 + 16)
    || (sub_1C00F2DD4(*(void *)(v6 + 24), *(void *)(v11 + 24)) & 1) == 0
    || *(unsigned __int8 *)(v16 + 16) != *(unsigned __int8 *)(v15 + 16)
    || (sub_1C00F369C(*(void *)(v16 + 24), *(void *)(v15 + 24)) & 1) == 0)
  {
    return 0;
  }
  return sub_1C02B1CD8(v14, v13);
}

void sub_1C11A70E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C11A6E48();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupLocalClusteringKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C11A714C()
{
  unint64_t result = qword_1EB86FD48;
  if (!qword_1EB86FD48)
  {
    sub_1C11A6E9C();
    sub_1C11A71F4(&qword_1EB865378, (void (*)(uint64_t))sub_1BFDC6F40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FD48);
  }
  return result;
}

uint64_t sub_1C11A71F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C11A723C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C026BF58();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for FeedGroupLocalClusteringKnobs()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedGroupLocalClusteringKnobs(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedGroupLocalClusteringKnobs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedGroupLocalClusteringKnobs(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupLocalClusteringKnobs()
{
  return &type metadata for FeedGroupLocalClusteringKnobs;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupLocalClusteringKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11A75B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupLocalClusteringKnobs.CodingKeys()
{
  return &type metadata for FeedGroupLocalClusteringKnobs.CodingKeys;
}

unint64_t sub_1C11A75F4()
{
  unint64_t result = qword_1EA1AC780;
  if (!qword_1EA1AC780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC780);
  }
  return result;
}

unint64_t sub_1C11A764C()
{
  unint64_t result = qword_1EB86FB18;
  if (!qword_1EB86FB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FB18);
  }
  return result;
}

unint64_t sub_1C11A76A4()
{
  unint64_t result = qword_1EB86FB10;
  if (!qword_1EB86FB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FB10);
  }
  return result;
}

uint64_t sub_1C11A76F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F7053776F6C6C61 && a2 == 0xEB00000000737472;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C15FC9D0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1636790 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16367B0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xEF646E456D6F7246 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C16367D0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F656D6954676174 && a2 == 0xEB00000000737475)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

NewsFeed::FormatLocalizationCollection __swiftcall FormatLocalizationCollection.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  int v3 = (void *)sub_1BFD8C2A8(MEMORY[0x1E4FBC860]);
  *uint64_t v1 = v2;
  v1[1] = v3;
  result.stringsByIdentifier._rawValue = v4;
  result.localizations._rawValue = v3;
  return result;
}

uint64_t FormatLocalizationCollection.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFDDC374();
  sub_1BFDDC404(&qword_1EB85C360, &qword_1EB85B670);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatLocalizationCollection.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

unint64_t sub_1C11A7B80@<X0>(void *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1BFD8C2A8(MEMORY[0x1E4FBC860]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatLocalizationCollection()
{
  return &type metadata for FormatLocalizationCollection;
}

void sub_1C11A7BC4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_21;
    }
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v6) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v2 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v6) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v2 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v6) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v2 + 8 * v7);
        if (!v11) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_21:
    id v13 = *(id *)(*(void *)(v1 + 56) + 8 * v9);
    if (objc_msgSend(v13, sel_isValid)) {
      objc_msgSend(v13, sel_invalidate);
    }
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v6)
  {
LABEL_23:
    swift_release();
    swift_beginAccess();
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1BFC40618(v14);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = v15;
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v2 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
}

void FormatTimer.deinit()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_21;
    }
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v6) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v2 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v6) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v2 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v6) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v2 + 8 * v7);
        if (!v11) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_21:
    id v13 = *(id *)(*(void *)(v1 + 56) + 8 * v9);
    if (objc_msgSend(v13, sel_isValid)) {
      objc_msgSend(v13, sel_invalidate);
    }
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v6)
  {
LABEL_23:
    swift_release();
    *(void *)(v0 + 16) = sub_1C01914B0(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v2 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t FormatTimer.__deallocating_deinit()
{
  FormatTimer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C11A7F88(double a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 24);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 24);
  if (!*(void *)(v4 + 16)) {
    return swift_endAccess();
  }
  unint64_t v5 = sub_1BFE6E400(a1);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  unint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_5;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_17:
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1BFE6E4E0(v13, isUniquelyReferenced_nonNull_native, a1);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C15204BC();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_5:
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        uint64_t v11 = MEMORY[0x1C18C7CB0](i, v7);
      }
      else
      {
        uint64_t v11 = *(void *)(v7 + 8 * i + 32);
        swift_retain();
      }
      int64_t v12 = (void *)MEMORY[0x1C18C9C60](v11 + 16);

      if (v12)
      {
        (*(void (**)(void))(v11 + 24))();
        sub_1C152025C();
        sub_1C152029C();
        sub_1C15202AC();
        sub_1C152026C();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = v16;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C11A8180(double a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C11A7F88(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C11A81E8()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatTimer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatTimer);
}

uint64_t sub_1C11A8240()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C11A8278()
{
  return sub_1C11A8180(*(double *)(v0 + 24));
}

uint64_t sub_1C11A8298()
{
  swift_release();
  return swift_deallocObject();
}

BOOL static FormatBindingShareAttributionExpressionLogic.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatBindingShareAttributionExpressionLogic.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatBindingShareAttributionExpressionLogic.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C11A836C()
{
  unint64_t result = qword_1EA1AC788;
  if (!qword_1EA1AC788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC788);
  }
  return result;
}

unint64_t sub_1C11A83C0(uint64_t a1)
{
  unint64_t result = sub_1C11A83E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11A83E8()
{
  unint64_t result = qword_1EA1AC790[0];
  if (!qword_1EA1AC790[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1AC790);
  }
  return result;
}

unint64_t sub_1C11A843C(void *a1)
{
  a1[1] = sub_1C01FC4A8();
  a1[2] = sub_1C01FC500();
  unint64_t result = sub_1C11A836C();
  a1[3] = result;
  return result;
}

uint64_t sub_1C11A8474@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatBindingShareAttributionExpressionLogic.init(from:)(a1, a2);
}

uint64_t sub_1C11A848C(void *a1)
{
  return FormatBindingShareAttributionExpressionLogic.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatBindingShareAttributionExpressionLogic(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11A8570);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingShareAttributionExpressionLogic()
{
  return &type metadata for FormatBindingShareAttributionExpressionLogic;
}

uint64_t FeedItemFilterMatcherApplicator.matches(_:)()
{
  return (*v0)() & 1;
}

uint64_t type metadata accessor for FeedItemFilterMatcherApplicator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C11A85EC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FormatSlotItemCountLimit.identifier.getter()
{
  uint64_t v1 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v1);
  int v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C11AA758(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C11A9DBC((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      return 1953459315;
    }
    else
    {
      return 0x73626F6E6BLL;
    }
  }
  else
  {
    uint64_t v6 = *v3;
    uint64_t v7 = v3[1];
    uint64_t v10 = 0x2D746E756F63;
    unint64_t v11 = 0xE600000000000000;
    uint64_t v9 = v6;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v9 = v7;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    return v10;
  }
}

uint64_t sub_1C11A8778(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (unint64_t)&v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFE79D20(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v37[-v12];
  uint64_t v14 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = &v37[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C11AA758(v2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return *(void *)v16;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C11AA838((uint64_t)v16, v10, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    uint64_t v13 = *(unsigned char **)(v10 + 48);
    uint64_t v18 = *((void *)v13 + 2);
    if (!v18)
    {
      uint64_t v26 = 0;
LABEL_21:
      long long v33 = type metadata accessor for FormatSlotDefinition;
      uint64_t v34 = v10;
      goto LABEL_27;
    }
    uint64_t v19 = (uint64_t)&v13[(*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)];
    uint64_t v20 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    unint64_t v21 = 0;
    int v22 = 0;
    uint64_t v23 = v18 - 1;
    do
    {
      sub_1C11AA758(v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      int v24 = *(_DWORD *)v7;
      sub_1C11A9DBC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      if (v22 == 0x7FFFFFFF || v24 == 0x7FFFFFFF)
      {
        if (v23 == v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v26 = 0x7FFFFFFFLL;
          goto LABEL_21;
        }
        int v22 = 0x7FFFFFFF;
      }
      else
      {
        BOOL v25 = __OFADD__(v22, v24);
        v22 += v24;
        if (v25) {
          goto LABEL_23;
        }
        if (v23 == v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v26 = v22;
          goto LABEL_21;
        }
      }
      ++v21;
      v19 += v20;
    }
    while (v21 < *((void *)v13 + 2));
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1C0076DAC(a1, (uint64_t)v13);
  uint64_t v27 = type metadata accessor for FormatTransformKnobs();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v13, 1, v27) != 1)
  {
    unint64_t v28 = &v13[*(int *)(v27 + 20)];
    uint64_t v29 = v28[3];
    uint64_t v30 = v28[4];
    __swift_project_boxed_opaque_existential_1(v28, v29);
    uint64_t v7 = (unsigned char *)(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    unint64_t v10 = *((void *)v7 + 3);
    if (!(v10 >> 62))
    {
      if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_25:
        uint64_t v26 = *((void *)v7 + 2);
        swift_release();
        goto LABEL_26;
      }
LABEL_18:
      uint64_t v31 = *(void *)&v13[*(int *)(type metadata accessor for FeedContext() + 40)];
      uint64_t v32 = *((void *)v7 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1C00C9BB4(v32, v10, v31);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_26:
      long long v33 = type metadata accessor for FormatTransformKnobs;
      uint64_t v34 = (uint64_t)v13;
LABEL_27:
      sub_1C11A9DBC(v34, (uint64_t (*)(void))v33);
      return v26;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v35) {
      goto LABEL_25;
    }
    goto LABEL_18;
  }
  sub_1C11AA7C0((uint64_t)v13);
  return 0;
}

uint64_t sub_1C11A8BE8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (unint64_t)&v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFE79D20(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v37[-v12];
  uint64_t v14 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = &v37[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C11AA758(v2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return *((void *)v16 + 1);
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C11AA838((uint64_t)v16, v10, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    uint64_t v13 = *(unsigned char **)(v10 + 48);
    uint64_t v18 = *((void *)v13 + 2);
    if (!v18)
    {
      uint64_t v26 = 0;
LABEL_21:
      long long v33 = type metadata accessor for FormatSlotDefinition;
      uint64_t v34 = v10;
      goto LABEL_27;
    }
    uint64_t v19 = (uint64_t)&v13[(*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)];
    uint64_t v20 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    unint64_t v21 = 0;
    int v22 = 0;
    uint64_t v23 = v18 - 1;
    do
    {
      sub_1C11AA758(v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      int v24 = *((_DWORD *)v7 + 1);
      sub_1C11A9DBC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      if (v22 == 0x7FFFFFFF || v24 == 0x7FFFFFFF)
      {
        if (v23 == v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v26 = 0x7FFFFFFFLL;
          goto LABEL_21;
        }
        int v22 = 0x7FFFFFFF;
      }
      else
      {
        BOOL v25 = __OFADD__(v22, v24);
        v22 += v24;
        if (v25) {
          goto LABEL_23;
        }
        if (v23 == v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v26 = v22;
          goto LABEL_21;
        }
      }
      ++v21;
      v19 += v20;
    }
    while (v21 < *((void *)v13 + 2));
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1C0076DAC(a1, (uint64_t)v13);
  uint64_t v27 = type metadata accessor for FormatTransformKnobs();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v13, 1, v27) != 1)
  {
    unint64_t v28 = &v13[*(int *)(v27 + 20)];
    uint64_t v29 = v28[3];
    uint64_t v30 = v28[4];
    __swift_project_boxed_opaque_existential_1(v28, v29);
    uint64_t v7 = (unsigned char *)(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
    unint64_t v10 = *((void *)v7 + 3);
    if (!(v10 >> 62))
    {
      if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_25:
        uint64_t v26 = *((void *)v7 + 2);
        swift_release();
        goto LABEL_26;
      }
LABEL_18:
      uint64_t v31 = *(void *)&v13[*(int *)(type metadata accessor for FeedContext() + 40)];
      uint64_t v32 = *((void *)v7 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1C00C9BB4(v32, v10, v31);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_26:
      long long v33 = type metadata accessor for FormatTransformKnobs;
      uint64_t v34 = (uint64_t)v13;
LABEL_27:
      sub_1C11A9DBC(v34, (uint64_t (*)(void))v33);
      return v26;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v35) {
      goto LABEL_25;
    }
    goto LABEL_18;
  }
  sub_1C11AA7C0((uint64_t)v13);
  return 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t FormatSlotItemCountLimit.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (long long *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C11AA758(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C11AA838((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      *(void *)&long long v11 = 0x20746F6C73;
      *((void *)&v11 + 1) = 0xE500000000000000;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v9 = v11;
      sub_1C11A9DBC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    }
    else
    {
      return 0x73626F6E6BLL;
    }
  }
  else
  {
    long long v11 = *v7;
    return FormatCountLimit.description.getter();
  }
  return v9;
}

uint64_t sub_1C11A920C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v76 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v73 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v75 = (uint64_t)&v65 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v74 = (uint64_t)&v65 - v17;
  MEMORY[0x1F4188790](v18);
  id v78 = (int *)((char *)&v65 - v19);
  uint64_t v20 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v77 = (uint64_t)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v22);
  int v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1C11A8778(a2);
  uint64_t v26 = a1;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27 >= v25)
  {
    sub_1C11AA758(v2, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      uint64_t v31 = v77;
      sub_1C11AA838((uint64_t)v24, v77, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      uint64_t v32 = *(void *)(v31 + 48);
      uint64_t v33 = v73;
      uint64_t v34 = *(unsigned __int8 *)(v73 + 80);
      uint64_t v35 = *(void *)(v32 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v70 = v35;
      uint64_t v72 = v32;
      if (v35)
      {
        uint64_t v65 = v27;
        uint64_t v36 = v33;
        uint64_t v37 = 0;
        uint64_t v38 = v32 + ((v34 + 32) & ~v34);
        uint64_t v39 = *(void *)(v36 + 72);
        uint64_t v40 = v78;
        uint64_t v41 = v76;
        uint64_t v67 = v39;
        uint64_t v68 = v38;
        while (1)
        {
          uint64_t v73 = v37;
          uint64_t v42 = v38 + v39 * v37;
          uint64_t v43 = v75;
          sub_1C11AA758(v42, v75, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v44 = v43;
          uint64_t v45 = v74;
          sub_1C11AA838(v44, v74, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t result = sub_1C11AA838(v45, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v46 = *(void *)(v26 + 16);
          uint64_t v47 = *v40;
          if (v46 < v47) {
            break;
          }
          if ((v47 & 0x80000000) != 0)
          {
            __break(1u);
LABEL_33:
            __break(1u);
            return result;
          }
          uint64_t v48 = v26 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
          uint64_t v66 = v48;
          uint64_t v71 = v47;
          if (v47)
          {
            uint64_t v69 = v26;
            swift_bridgeObjectRetain_n();
            uint64_t v49 = *(void *)(v41 + 72);
            uint64_t v50 = v47;
            while (1)
            {
              sub_1C11AA758(v48, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
              sub_1C11AA758((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
              sub_1C11A9DBC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
              uint64_t v51 = FormatContentSlotItemObject.Resolved.kinds.getter();
              sub_1C11A9DBC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
              uint64_t v52 = *(void *)(v51 + 16);
              sub_1C11AA758((uint64_t)v78, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
              if (!v52) {
                break;
              }
              uint64_t v53 = *((void *)v13 + 1);
              swift_bridgeObjectRetain();
              char v54 = sub_1C11C4768(v51, v53);
              swift_bridgeObjectRelease();
              sub_1C11A9DBC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
              if (v54)
              {
                swift_bridgeObjectRelease();
                goto LABEL_29;
              }
              swift_bridgeObjectRelease();
              v48 += v49;
              if (!--v50)
              {
                uint64_t v26 = v69;
                uint64_t result = swift_bridgeObjectRelease();
                uint64_t v55 = *(void *)(v26 + 16);
                uint64_t v56 = v55;
                uint64_t v46 = v55;
                uint64_t v40 = v78;
                if (v55 >= v71) {
                  goto LABEL_16;
                }
                goto LABEL_17;
              }
            }
            swift_bridgeObjectRelease();
            sub_1C11A9DBC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
LABEL_29:
            type metadata accessor for FormatServiceError();
            sub_1C11AA8A0(&qword_1EB8601C0, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
            swift_allocError();
            uint64_t v60 = (uint64_t)v78;
            *id v61 = *((void *)v78 + 1);
            v61[1] = v51;
            swift_storeEnumTagMultiPayload();
            swift_bridgeObjectRetain();
            swift_willThrow();
            swift_bridgeObjectRelease_n();
            sub_1C11A9DBC(v60, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            swift_unknownObjectRelease();
            uint64_t v62 = v77;
            return sub_1C11A9DBC(v62, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
          }
          uint64_t result = swift_bridgeObjectRetain();
          uint64_t v55 = 0;
          uint64_t v56 = 0;
          if (v46) {
            goto LABEL_17;
          }
LABEL_16:
          uint64_t v56 = v71;
          uint64_t v46 = v55;
          if (v55 < v71) {
            goto LABEL_33;
          }
LABEL_17:
          sub_1C1520B6C();
          swift_unknownObjectRetain_n();
          uint64_t v57 = swift_dynamicCastClass();
          if (!v57)
          {
            swift_bridgeObjectRelease();
            uint64_t v57 = MEMORY[0x1E4FBC860];
          }
          uint64_t v58 = *(void *)(v57 + 16);
          swift_release();
          if (v58 == v46 - v56)
          {
            uint64_t v59 = swift_dynamicCastClass();
            uint64_t v31 = v77;
            if (!v59)
            {
              swift_bridgeObjectRelease();
              uint64_t v59 = MEMORY[0x1E4FBC860];
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v59 = sub_1C00B1F14(v26, v66, v56, (2 * v46) | 1);
            uint64_t v31 = v77;
          }
          uint64_t v37 = v73 + 1;
          swift_bridgeObjectRelease_n();
          sub_1C11A9DBC((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
          uint64_t v26 = v59;
          uint64_t v41 = v76;
          uint64_t v39 = v67;
          uint64_t v38 = v68;
          if (v37 == v70) {
            goto LABEL_25;
          }
        }
        swift_bridgeObjectRelease();
        type metadata accessor for FormatServiceError();
        sub_1C11AA8A0(&qword_1EB8601C0, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
        swift_allocError();
        uint64_t v63 = v65;
        *uint64_t v64 = *v40;
        v64[1] = v63;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1C11A9DBC((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
        swift_unknownObjectRelease();
        uint64_t v62 = v31;
        return sub_1C11A9DBC(v62, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      }
      else
      {
LABEL_25:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return sub_1C11A9DBC(v31, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      }
    }
  }
  else
  {
    uint64_t v28 = v25;
    type metadata accessor for FormatServiceError();
    sub_1C11AA8A0(&qword_1EB8601C0, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
    swift_allocError();
    *uint64_t v29 = v28;
    v29[1] = v27;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

BOOL _s8NewsFeed24FormatSlotItemCountLimitO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v24 - v11);
  sub_1C11AA6F4();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v15[*(int *)(v16 + 56)];
  sub_1C11AA758(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
  sub_1C11AA758(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C11AA758((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C11AA838((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
        BOOL v19 = _s8NewsFeed20FormatSlotDefinitionV2eeoiySbAC_ACtFZ_0(v9, v6);
        sub_1C11A9DBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
        sub_1C11A9DBC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
        uint64_t v20 = (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit;
        goto LABEL_17;
      }
      sub_1C11A9DBC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
    }
    else
    {
      int v22 = swift_getEnumCaseMultiPayload();
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit;
      if (v22 == 2)
      {
        BOOL v19 = 1;
        goto LABEL_17;
      }
    }
LABEL_16:
    BOOL v19 = 0;
    uint64_t v20 = (uint64_t (*)(void))sub_1C11AA6F4;
    goto LABEL_17;
  }
  sub_1C11AA758((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
  if (swift_getEnumCaseMultiPayload()) {
    goto LABEL_16;
  }
  BOOL v19 = *v12 == *(void *)v17 && v12[1] == *((void *)v17 + 1);
  uint64_t v20 = (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit;
LABEL_17:
  sub_1C11A9DBC((uint64_t)v15, v20);
  return v19;
}

uint64_t sub_1C11A9DBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C11A9E1C(uint64_t a1)
{
  uint64_t result = sub_1C11AA8A0(&qword_1EA1AC818, (void (*)(uint64_t))type metadata accessor for FormatSlotItemCountLimit);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C11A9E74(void *a1)
{
  a1[1] = sub_1C11AA8A0(&qword_1EB87FB78, (void (*)(uint64_t))type metadata accessor for FormatSlotItemCountLimit);
  a1[2] = sub_1C11AA8A0(&qword_1EB8606D8, (void (*)(uint64_t))type metadata accessor for FormatSlotItemCountLimit);
  uint64_t result = sub_1C11AA8A0(&qword_1EA1AC820, (void (*)(uint64_t))type metadata accessor for FormatSlotItemCountLimit);
  a1[3] = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatSlotItemCountLimit(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      uint64_t v9 = a2[5];
      a1[4] = a2[4];
      a1[5] = v9;
      uint64_t v10 = a2[7];
      a1[6] = a2[6];
      a1[7] = v10;
      a1[8] = a2[8];
      uint64_t v11 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
      __dst = (char *)a1 + v11;
      uint64_t v12 = (char *)a2 + v11;
      uint64_t v13 = sub_1C1518CDC();
      uint64_t v17 = *(void *)(v13 - 8);
      uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18(v12, 1, v13))
      {
        sub_1BFE79D20(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(__dst, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

void *assignWithCopy for FormatSlotItemCountLimit(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C11A9DBC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      uint64_t v6 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
      __dst = (char *)a1 + v6;
      uint64_t v7 = (char *)a2 + v6;
      uint64_t v8 = sub_1C1518CDC();
      uint64_t v11 = *(void *)(v8 - 8);
      uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12(v7, 1, v8))
      {
        sub_1BFE79D20(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(__dst, v7, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v8);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FormatSlotItemCountLimit(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    long long v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    *((void *)a1 + 8) = *((void *)a2 + 8);
    uint64_t v8 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1518CDC();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1BFE79D20(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for FormatSlotItemCountLimit(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C11A9DBC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      long long v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      uint64_t v8 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C1518CDC();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1BFE79D20(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1C11AA6F4()
{
  if (!qword_1EA1AC828)
  {
    type metadata accessor for FormatSlotItemCountLimit();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1AC828);
    }
  }
}

uint64_t sub_1C11AA758(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C11AA7C0(uint64_t a1)
{
  sub_1BFE79D20(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C11AA838(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C11AA8A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 FeedJournalGroup.init(result:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)(a2 + 192) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(a2 + 208) = v2;
  *(_OWORD *)(a2 + 224) = *(_OWORD *)(a1 + 224);
  *(void *)(a2 + 240) = *(void *)(a1 + 240);
  long long v3 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 144) = v3;
  long long v4 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(a2 + 160) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a2 + 176) = v4;
  long long v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 112) = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v7;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v9 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v9;
  return result;
}

uint64_t assignWithCopy for FeedJournalGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  else if (v4)
  {
    *(void *)(a1 + 56) = v4;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
LABEL_8:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v9;
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  if (a1 != a2)
  {
    sub_1BFD7EAE0(a1 + 128);
    switch(*(unsigned char *)(a2 + 192))
    {
      case 1:
        uint64_t v11 = *(void *)(a2 + 152);
        *(void *)(a1 + 152) = v11;
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 128, a2 + 128);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(unsigned char *)(a1 + 192) = 1;
        break;
      case 2:
        uint64_t v12 = *(void *)(a2 + 152);
        *(void *)(a1 + 152) = v12;
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 128, a2 + 128);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(unsigned char *)(a1 + 192) = 2;
        break;
      case 3:
        uint64_t v13 = *(void *)(a2 + 152);
        *(void *)(a1 + 152) = v13;
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 128, a2 + 128);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        char v14 = 3;
        goto LABEL_17;
      case 4:
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        char v14 = 4;
        goto LABEL_17;
      case 5:
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        char v14 = 5;
        goto LABEL_17;
      case 6:
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        char v14 = 6;
LABEL_17:
        *(unsigned char *)(a1 + 192) = v14;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v10 = *(void *)(a2 + 152);
        *(void *)(a1 + 152) = v10;
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 128, a2 + 128);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(unsigned char *)(a1 + 192) = 0;
        break;
    }
  }
  uint64_t v15 = (_OWORD *)(a1 + 200);
  uint64_t v17 = (_OWORD *)(a2 + 200);
  uint64_t v16 = *(void *)(a2 + 200);
  if (*(void *)(a1 + 200))
  {
    if (v16)
    {
      *(void *)(a1 + 200) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v18 = (unint64_t *)(a1 + 208);
      unint64_t v19 = *(void *)(a2 + 208);
      if (*(void *)(a1 + 208) >= 2uLL)
      {
        if (v19 >= 2)
        {
          *uint64_t v18 = v19;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1C03FB13C(a1 + 208);
          *uint64_t v18 = *(void *)(a2 + 208);
        }
      }
      else
      {
        *uint64_t v18 = v19;
        if (v19 >= 2) {
          swift_bridgeObjectRetain();
        }
      }
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
    }
    else
    {
      sub_1C0CE9B38(a1 + 200);
      uint64_t v21 = *(void *)(a2 + 216);
      _OWORD *v15 = *v17;
      *(void *)(a1 + 216) = v21;
    }
  }
  else if (v16)
  {
    *(void *)(a1 + 200) = v16;
    unint64_t v20 = *(void *)(a2 + 208);
    swift_bridgeObjectRetain();
    if (v20 >= 2) {
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 208) = v20;
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
  }
  else
  {
    long long v22 = *v17;
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    _OWORD *v15 = v22;
  }
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  uint64_t v23 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v23;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t LayeredMediaLayerProcessorRequest.__allocating_init(assetHandle:size:scale:)(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v12 = sub_1C11AB1D4(v11, a2, a3, a4, v4, v9, v10);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v12;
}

uint64_t LayeredMediaLayerProcessorRequest.cacheIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double LayeredMediaLayerProcessorRequest.size.getter()
{
  return *(double *)(v0 + 32);
}

double LayeredMediaLayerProcessorRequest.scale.getter()
{
  return *(double *)(v0 + 48);
}

uint64_t LayeredMediaLayerProcessorRequest.assetHandles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LayeredMediaLayerProcessorRequest.init(assetHandle:size:scale:)(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1(a1, v9);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  char v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v15 + 16))(v14, v12);
  uint64_t v16 = sub_1C11AB01C((uint64_t)v14, v4, v9, v10, a2, a3, a4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v16;
}

uint64_t LayeredMediaLayerProcessorRequest.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return v0;
}

uint64_t LayeredMediaLayerProcessorRequest.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t sub_1C11AB010()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11AB01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7)
{
  v16[3] = a3;
  v16[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  sub_1BFC66384((uint64_t)v16, a2 + 64);
  sub_1C0F131C8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = 0x616D497265766F63;
  *(void *)(inited + 40) = 0xEF726579614C6567;
  sub_1BFC66384((uint64_t)v16, inited + 48);
  *(void *)(a2 + 56) = sub_1BFF59AB8(inited);
  *(double *)(a2 + 32) = a5;
  *(double *)(a2 + 40) = a6;
  *(double *)(a2 + 48) = a7;
  sub_1C151A72C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  type metadata accessor for CGSize(0);
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return a2;
}

uint64_t sub_1C11AB1D4(uint64_t a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a6);
  return sub_1C11AB01C((uint64_t)v15, v16, a6, a7, a2, a3, a4);
}

uint64_t type metadata accessor for LayeredMediaLayerProcessorRequest()
{
  return self;
}

uint64_t method lookup function for LayeredMediaLayerProcessorRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaLayerProcessorRequest);
}

uint64_t dispatch thunk of LayeredMediaLayerProcessorRequest.__allocating_init(assetHandle:size:scale:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

NewsFeed::ShareAttributionViewAlignment_optional __swiftcall ShareAttributionViewAlignment.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (NewsFeed::ShareAttributionViewAlignment_optional)rawValue;
}

uint64_t ShareAttributionViewAlignment.rawValue.getter()
{
  return *v0;
}

NewsFeed::ShareAttributionViewAlignment_optional sub_1C11AB354(Swift::Int *a1)
{
  return ShareAttributionViewAlignment.init(rawValue:)(*a1);
}

BOOL static ShareAttributionViewStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ShareAttributionViewStyle.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t ShareAttributionViewStyle.hashValue.getter()
{
  return sub_1C1520E0C();
}

Swift::Void __swiftcall SLAttributionView.update(_:)(NewsFeed::ShareAttributionViewAlignment a1)
{
  objc_msgSend(v1, sel_updateAlignment_, *(unsigned __int8 *)a1);
}

Swift::Void __swiftcall SLAttributionView.update(_:)(NewsFeed::ShareAttributionViewStyle a1)
{
  unsigned int v2 = *(unsigned __int8 *)a1;
  if (v2 >= 2)
  {
    objc_msgSend(v1, sel_updateBackgroundStyle_, 0);
    if (v2 == 2) {
      objc_msgSend(v1, sel_updateInterfaceStyle_, 0);
    }
    else {
      objc_msgSend(v1, sel_updateInterfaceStyle_, 1);
    }
    id v3 = objc_msgSend(self, sel_blackColor);
    id v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);

    id v4 = v5;
  }
  else
  {
    objc_msgSend(v1, sel_updateBackgroundStyle_, -1);
    objc_msgSend(v1, sel_updateInterfaceStyle_, v2 != 0);
    id v4 = 0;
  }
  id v6 = v4;
  objc_msgSend(v1, sel_updateBackgroundColor_);
}

id SLAttributionView.prepareLayout(with:)()
{
  return objc_msgSend(v0, sel_prepareLayoutWithMaxWidth_);
}

void *SLAttributionView.replyContextMenuItem.getter()
{
  return sub_1C11AB5CC(MEMORY[0x1E4FA5690]);
}

unint64_t sub_1C11AB580()
{
  unint64_t result = qword_1EA196BB0;
  if (!qword_1EA196BB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA196BB0);
  }
  return result;
}

void *SLAttributionView.hideContextMenuItem.getter()
{
  return sub_1C11AB5CC(MEMORY[0x1E4FA5688]);
}

void *sub_1C11AB5CC(void *a1)
{
  id v3 = objc_msgSend(v1, sel_contextMenuItems);
  if (v3)
  {
    id v4 = v3;
    sub_1C11AB580();
    unint64_t v5 = sub_1C151EBCC();

    if (v5 >> 62) {
      goto LABEL_21;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; uint64_t v6 = sub_1C15204BC())
    {
      a1 = (void *)*a1;
      uint64_t v7 = 4;
      while (1)
      {
        id v8 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C18C7CB0](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
        uint64_t v9 = v8;
        uint64_t v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        id v11 = objc_msgSend(v8, sel_identifier);
        uint64_t v12 = sub_1C151E62C();
        uint64_t v14 = v13;

        if (v12 == sub_1C151E62C() && v14 == v15)
        {
          swift_bridgeObjectRelease_n();
LABEL_18:
          swift_bridgeObjectRelease_n();
          return v9;
        }
        char v17 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_18;
        }

        ++v7;
        if (v10 == v6) {
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_21:
      swift_bridgeObjectRetain();
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

unint64_t sub_1C11AB788()
{
  unint64_t result = qword_1EA1AC830;
  if (!qword_1EA1AC830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC830);
  }
  return result;
}

unint64_t sub_1C11AB7E0()
{
  unint64_t result = qword_1EA1AC838;
  if (!qword_1EA1AC838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC838);
  }
  return result;
}

id sub_1C11AB834(unsigned __int8 *a1)
{
  return objc_msgSend(v1, sel_updateAlignment_, *a1);
}

id sub_1C11AB84C()
{
  return objc_msgSend(v0, sel_prepareLayoutWithMaxWidth_);
}

unsigned char *storeEnumTagSinglePayload for ShareAttributionViewAlignment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11AB930);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareAttributionViewAlignment()
{
  return &type metadata for ShareAttributionViewAlignment;
}

unsigned char *storeEnumTagSinglePayload for ShareAttributionViewStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11ABA34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareAttributionViewStyle()
{
  return &type metadata for ShareAttributionViewStyle;
}

uint64_t dispatch thunk of ShareAttributionView.update(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ShareAttributionView.prepareLayout(with:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ShareAttributionView.replyContextMenuItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ShareAttributionView.hideContextMenuItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1C11ABAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v176 = a2;
  uint64_t v180 = a1;
  unsigned int v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFF2EC78(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v174 = (uint64_t)&v167 - v6;
  uint64_t v7 = sub_1C151631C();
  uint64_t v178 = *(void *)(v7 - 8);
  uint64_t v179 = v7;
  MEMORY[0x1F4188790](v7);
  v177 = (char *)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2EC78(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v4);
  MEMORY[0x1F4188790](v9 - 8);
  v170 = (char *)&v167 - v10;
  uint64_t v171 = sub_1C1515FDC();
  uint64_t v169 = *(void *)(v171 - 8);
  MEMORY[0x1F4188790](v171);
  v167 = (char *)&v167 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v168 = (char *)&v167 - v13;
  uint64_t v14 = type metadata accessor for FeedHeadline(0);
  v173 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (id *)((char *)&v167 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  *(void *)&double v172 = (char *)&v167 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v175 = (uint64_t)&v167 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v167 - v22;
  sub_1BFF2EC78(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v4);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v167 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v167 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v167 - v31;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v167 - v34;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v167 - v37;
  *(void *)&double v40 = MEMORY[0x1F4188790](v39).n128_u64[0];
  uint64_t v42 = (char *)&v167 - v41;
  uint64_t v44 = *(uint64_t *)a3;
  uint64_t v43 = *(void *)(a3 + 8);
  uint64_t v45 = *(void *)(a3 + 24);
  uint64_t v46 = *(void *)(a3 + 32);
  uint64_t v47 = *(void *)(a3 + 40);
  switch(*(unsigned char *)(a3 + 48))
  {
    case 1:
      uint64_t v169 = *(void *)(a3 + 16);
      v170 = (char *)v43;
      uint64_t v174 = v47;
      uint64_t v176 = v46;
      uint64_t v171 = v45;
      double v172 = *(double *)&v44;
      uint64_t v58 = v180;
      id v59 = objc_msgSend(*(id *)(v180 + 40), sel_displayDate, v40);
      if (v59)
      {
        uint64_t v60 = v59;
        id v61 = v177;
        sub_1C15162BC();

        uint64_t v63 = v178;
        uint64_t v62 = v179;
        (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v38, v61, v179);
        uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
        uint64_t v65 = v38;
        uint64_t v66 = 0;
      }
      else
      {
        uint64_t v63 = v178;
        uint64_t v62 = v179;
        uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v178 + 56);
        uint64_t v65 = v38;
        uint64_t v66 = 1;
      }
      v173 = v64;
      v64(v65, v66, 1, v62);
      uint64_t v99 = v175;
      sub_1BFF96680(v58, v175);
      v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
      if (v100(v38, 1, v62) == 1)
      {
        id v101 = objc_msgSend(*(id *)(v99 + 40), sel_publishDate);
        if (v101)
        {
          v102 = v101;
          sub_1C15162BC();

          uint64_t v103 = 0;
        }
        else
        {
          uint64_t v103 = 1;
        }
        uint64_t v104 = v179;
        v173(v32, v103, 1, v179);
        sub_1BFCB311C((uint64_t)v32, (uint64_t)v42);
        sub_1BFF5141C((uint64_t)v38, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      }
      else
      {
        uint64_t v104 = v62;
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v42, v38, v62);
        v173(v42, 0, 1, v62);
      }
      sub_1BFF2F7F4(v99);
      sub_1BFF97B80((uint64_t)v42, (uint64_t)v29);
      if (v100(v29, 1, v104) == 1)
      {
        uint64_t v107 = 0;
      }
      else
      {
        uint64_t v109 = (uint64_t)v177;
        uint64_t v108 = v178;
        (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v177, v29, v104);
        uint64_t v110 = *(void *)&v172;
        uint64_t v111 = (uint64_t)v170;
        double v181 = v172;
        unint64_t v182 = (unint64_t)v170;
        uint64_t v112 = v169;
        uint64_t v113 = v171;
        uint64_t v183 = v169;
        uint64_t v184 = v171;
        uint64_t v114 = v176;
        uint64_t v115 = v174;
        uint64_t v185 = v176;
        uint64_t v186 = v174;
        sub_1BFF2B138(*(uint64_t *)&v172, (uint64_t)v170, v169, v171, v176, v174, 1u);
        uint64_t v180 = FormatDateFormat.format(_:)(v109);
        (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v109, v179);
        uint64_t v116 = v113;
        uint64_t v107 = v180;
        sub_1BFF01064(v110, v111, v112, v116, v114, v115, 1u);
      }
      sub_1BFF5141C((uint64_t)v42, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      return v107;
    case 2:
      uint64_t v67 = v180;
      uint64_t v68 = *(void **)(v180 + *(int *)(v14 + 56));
      if (!v68) {
        return 0;
      }
      uint64_t v69 = *(void *)a3;
      objc_msgSend(v68, sel_duration, v40);
      double v71 = v70;
      double v72 = 0.0;
      if (v176)
      {
        swift_getObjectType();
        uint64_t v73 = qword_1EB885308;
        swift_retain();
        if (v73 != -1) {
          swift_once();
        }
        uint64_t v74 = v67;
        uint64_t v75 = v174;
        sub_1BFF96680(v74, v174);
        (*((void (**)(uint64_t, void, uint64_t, uint64_t))v173 + 7))(v75, 0, 1, v14);
        sub_1C0088B70();
        sub_1C151AD7C();
        sub_1BFF5141C(v75, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
        swift_release();
        if ((v182 & 0x100) == 0)
        {
          if (v182) {
            double v72 = 0.0;
          }
          else {
            double v72 = v181;
          }
        }
      }
      double v181 = COERCE_DOUBLE(sub_1C13949D8((v69 & 1) != 0, v72, v71));
      unint64_t v182 = v106;
      uint64_t v189 = 44;
      unint64_t v190 = 0xE100000000000000;
      uint64_t v187 = 0;
      unint64_t v188 = 0xE000000000000000;
      sub_1BFF27ECC();
      uint64_t v107 = sub_1C151FEBC();
      swift_bridgeObjectRelease();
      return v107;
    case 3:
      uint64_t v76 = v180;
      uint64_t v77 = *(void **)(v180 + *(int *)(v14 + 56));
      if (!v77) {
        return 0;
      }
      objc_msgSend(v77, sel_duration, v40);
      double v79 = v78;
      if (v176)
      {
        swift_getObjectType();
        uint64_t v80 = qword_1EB885308;
        swift_retain();
        if (v80 != -1) {
          swift_once();
        }
        uint64_t v81 = v76;
        uint64_t v82 = v174;
        sub_1BFF96680(v81, v174);
        (*((void (**)(uint64_t, void, uint64_t, uint64_t))v173 + 7))(v82, 0, 1, v14);
        sub_1C0088B70();
        sub_1C151AD7C();
        sub_1BFF5141C(v82, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
        swift_release();
        if ((v182 & 0x100) == 0 && (v182 & 1) == 0) {
          double v79 = v79 - v181;
        }
      }
      double v83 = 0.0;
      if (v79 < 0.0) {
        goto LABEL_25;
      }
      if (v79 >= 3600.0)
      {
        uint64_t v84 = 224;
        if (qword_1EB85EC70 == -1) {
          goto LABEL_26;
        }
        goto LABEL_54;
      }
      double v83 = v79;
LABEL_25:
      uint64_t v84 = 192;
      double v79 = v83;
      if (qword_1EB85EC70 != -1) {
LABEL_54:
      }
        swift_once();
LABEL_26:
      objc_msgSend((id)qword_1EB85D748, sel_setAllowedUnits_, v84);
      if (qword_1EB85EC70 != -1) {
        swift_once();
      }
      id v85 = objc_msgSend((id)qword_1EB85D748, sel_stringFromTimeInterval_, v79);
      if (!v85) {
        return 0;
      }
      uint64_t v86 = v85;
      sub_1C151E62C();

      *(void *)&double v181 = 45;
      unint64_t v182 = 0xE100000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      return *(void *)&v181;
    case 4:
      uint64_t v87 = *(void *)(a3 + 16) | v43;
      if (!(v87 | v44 | v45 | v46 | v47))
      {
        id v105 = objc_msgSend(*(id *)(v180 + 40), sel_identifier, v40);
LABEL_62:
        v117 = v105;
        uint64_t v107 = sub_1C151E62C();

        return v107;
      }
      uint64_t v88 = v87 | v45 | v46 | v47;
      if (v44 == 1 && !v88)
      {
        id v89 = objc_msgSend(*(id *)(v180 + 40), sel_title, v40);
        goto LABEL_61;
      }
      if (v44 == 2 && !v88)
      {
        id v89 = objc_msgSend(*(id *)(v180 + 40), sel_titleCompact, v40);
        goto LABEL_61;
      }
      if (v44 == 3 && !v88)
      {
        id v89 = objc_msgSend(*(id *)(v180 + 40), sel_excerpt, v40);
        goto LABEL_61;
      }
      if (v44 == 4 && !v88)
      {
        id v89 = objc_msgSend(*(id *)(v180 + 40), sel_shortExcerpt, v40);
        goto LABEL_61;
      }
      if (v44 == 5 && !v88)
      {
        id v118 = objc_msgSend(*(id *)(v180 + 40), sel_authors, v40);
        if (v118)
        {
          v119 = v118;
          uint64_t v120 = sub_1C151EBCC();

          uint64_t v107 = Array<A>.localizedOxfordCommaSeparatedList.getter(v120);
          uint64_t v122 = v121;
          swift_bridgeObjectRelease();
          if (v122) {
            return v107;
          }
        }
        goto LABEL_67;
      }
      if (v44 == 6 && !v88)
      {
        uint64_t v124 = v180;
        id v125 = objc_msgSend(*(id *)(v180 + 40), sel_authors, v40);
        if (v125)
        {
          v126 = v125;
          uint64_t v127 = sub_1C151EBCC();

          uint64_t v107 = Array<A>.localizedOxfordCommaSeparatedList.getter(v127);
          uint64_t v129 = v128;
          swift_bridgeObjectRelease();
          uint64_t v130 = *(void *)&v172;
          sub_1BFF96680(v124, *(uint64_t *)&v172);
          if (v129)
          {
LABEL_90:
            sub_1BFF2F7F4(v130);
            return v107;
          }
        }
        else
        {
          uint64_t v130 = *(void *)&v172;
          sub_1BFF96680(v124, *(uint64_t *)&v172);
        }
        id v133 = objc_msgSend(*(id *)(v130 + 40), sel_accessoryText);
        if (v133)
        {
          v134 = v133;
          uint64_t v107 = sub_1C151E62C();
        }
        else
        {
          uint64_t v107 = 0;
        }
        goto LABEL_90;
      }
      if (v44 == 7 && !v88)
      {
        id v89 = objc_msgSend(*(id *)(v180 + 40), sel_accessoryText, v40);
        goto LABEL_61;
      }
      if (v44 == 8 && !v88)
      {
        id v131 = objc_msgSend(*(id *)(v180 + 40), sel_sourceChannel, v40);
        if (v131)
        {
          id v132 = objc_msgSend(v131, sel_name);
          swift_unknownObjectRelease();
LABEL_82:
          uint64_t v107 = sub_1C151E62C();

          return v107;
        }
        return 0;
      }
      if (v44 != 9 || v88)
      {
        if (v44 == 10 && !v88)
        {
          v135 = *(void **)(v180 + 40);
          if ((char *)objc_msgSend(v135, sel_storyType, v40) - 1 < (char *)4)
          {
            id v136 = objc_msgSend(v135, sel_storyStyle);
            if (v136)
            {
              v137 = v136;
              id v132 = objc_msgSend(v136, sel_label);

              if (v132) {
                goto LABEL_82;
              }
            }
          }
          return 0;
        }
        if (v44 != 11 || v88)
        {
          uint64_t v138 = v171;
          if (v44 == 12 && !v88)
          {
            sub_1BFF96680(v180, (uint64_t)v23);
            v139 = (void *)swift_unknownObjectRetain();
            ArticleAutomation.init(headline:)(v139, (uint64_t)&v181);
            sub_1BFF2F7F4((uint64_t)v23);
            uint64_t v140 = *(void *)&v181;
            unint64_t v141 = v182;
            char v142 = v183;
            char v143 = BYTE1(v183);
            char v144 = BYTE2(v183);
            char v145 = BYTE3(v183);
            char v146 = BYTE4(v183);
            double v181 = 9.53372586e-307;
            unint64_t v182 = 0xE700000000000000;
            uint64_t v183 = v140;
            uint64_t v184 = v141;
            LOBYTE(v185) = v142;
            BYTE1(v185) = v143;
            BYTE2(v185) = v144;
            BYTE3(v185) = v145;
            BYTE4(v185) = v146;
            uint64_t v186 = MEMORY[0x1E4FBC870];
            sub_1C151536C();
            swift_allocObject();
            sub_1C151535C();
            sub_1BFFB5058();
            sub_1C11AFBB4(&qword_1EB889588, (void (*)(uint64_t))sub_1BFFB5058);
            uint64_t v161 = sub_1C151A4CC();
            uint64_t v163 = v162;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            sub_1BFF96680(v180, (uint64_t)v16);
            if (!v163)
            {
              id v147 = objc_msgSend(v16[5], sel_identifier);
              uint64_t v161 = sub_1C151E62C();
            }
            sub_1BFF2F7F4((uint64_t)v16);
            return v161;
          }
          if (v44 == 13 && !v88)
          {
            id v148 = objc_msgSend(*(id *)(v180 + 40), sel_narrators, v40);
            if (v148)
            {
              v149 = v148;
              uint64_t v150 = sub_1C151EBCC();

              uint64_t v107 = Array<A>.localizedOxfordCommaSeparatedList.getter(v150);
              uint64_t v152 = v151;
              swift_bridgeObjectRelease();
              if (v152) {
                return v107;
              }
            }
LABEL_67:
            swift_bridgeObjectRelease();
            return 0;
          }
          if (v44 == 14 && !v88)
          {
            id v153 = objc_msgSend(*(id *)(v180 + 40), sel_routeURL, v40);
            if (v153)
            {
              v154 = v153;
              v155 = v167;
              sub_1C1515F1C();

              uint64_t v156 = v169;
              v157 = *(void (**)(uint64_t, char *, uint64_t))(v169 + 32);
              uint64_t v158 = (uint64_t)v170;
              v157((uint64_t)v170, v155, v138);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v156 + 56))(v158, 0, 1, v138);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48))(v158, 1, v138) != 1)
              {
                v157((uint64_t)v168, v170, v138);
                v159 = (void *)sub_1C1515E9C();
                unsigned int v160 = objc_msgSend(v159, sel_nss_isNewsURL);

                if (v160)
                {
                  (*(void (**)(char *, uint64_t))(v169 + 8))(v168, v138);
                  return 1937204590;
                }
                else
                {
                  v164 = v168;
                  v165 = (void *)sub_1C1515E9C();
                  unsigned int v166 = objc_msgSend(v165, sel_nss_isStocksURL);

                  (*(void (**)(char *, uint64_t))(v169 + 8))(v164, v138);
                  if (v166) {
                    return 0x736B636F7473;
                  }
                  else {
                    return 0x6E776F6E6B6E75;
                  }
                }
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v169 + 56))(v170, 1, 1, v138);
            }
            sub_1BFF5141C((uint64_t)v170, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            return 0;
          }
          id v89 = objc_msgSend(*(id *)(v180 + 40), sel_videoType, v40);
        }
        else
        {
          id v89 = objc_msgSend(*(id *)(v180 + 40), sel_language, v40);
        }
      }
      else
      {
        id v89 = objc_msgSend(*(id *)(v180 + 40), sel_sponsoredBy, v40);
      }
LABEL_61:
      id v105 = v89;
      if (!v105) {
        return 0;
      }
      goto LABEL_62;
    default:
      uint64_t v48 = *(void *)(a3 + 16);
      unint64_t v49 = *(void *)(a3 + 8);
      uint64_t v174 = *(void *)(a3 + 40);
      uint64_t v176 = v46;
      uint64_t v50 = v45;
      uint64_t v51 = v44;
      id v52 = objc_msgSend(*(id *)(v180 + 40), sel_publishDate, v40);
      if (v52)
      {
        uint64_t v53 = v52;
        sub_1C15162BC();

        uint64_t v54 = v178;
        uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v178 + 56);
        uint64_t v56 = v35;
        uint64_t v57 = 0;
      }
      else
      {
        uint64_t v54 = v178;
        uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v178 + 56);
        uint64_t v56 = v35;
        uint64_t v57 = 1;
      }
      uint64_t v90 = v179;
      v55(v56, v57, 1, v179);
      sub_1BFF97B80((uint64_t)v35, (uint64_t)v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v26, 1, v90) == 1)
      {
        sub_1BFF5141C((uint64_t)v35, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        return 0;
      }
      uint64_t v91 = (uint64_t)v177;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v177, v26, v90);
      uint64_t v92 = v54;
      double v181 = *(double *)&v51;
      unint64_t v182 = v49;
      uint64_t v93 = v49;
      uint64_t v94 = v48;
      uint64_t v183 = v48;
      uint64_t v184 = v50;
      uint64_t v95 = v176;
      uint64_t v96 = v174;
      uint64_t v185 = v176;
      uint64_t v186 = v174;
      sub_1BFF2B138(v51, v93, v94, v50, v176, v174, 0);
      uint64_t v97 = FormatDateFormat.format(_:)(v91);
      uint64_t v98 = v91;
      uint64_t v107 = v97;
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v98, v179);
      sub_1BFF01064(v51, v93, v94, v50, v95, v96, 0);
      sub_1BFF5141C((uint64_t)v35, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      return v107;
  }
}

BOOL static FormatHeadlineTrackDurationFormat.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C11AD07C(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C004741C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C004741C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C11AD108()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C004741C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C11AD16C()
{
  sub_1C004741C(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11AD1C0()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C004741C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

void sub_1C11AD220(void *a1@<X8>)
{
  *a1 = &unk_1F1B65658;
}

uint64_t static FormatHeadlineTrackProgressFormat.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1C11AD23C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*a1)
  {
    case 1:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 1;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v16);
      unint64_t v14 = 0x656C746954;
      unint64_t v12 = 0xE500000000000000;
      break;
    case 2:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v17 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 2;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v18);
      unint64_t v14 = 0x6F4320656C746954;
      unsigned int v19 = 1667330157;
      goto LABEL_10;
    case 3:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v20 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v21 = *(void *)(v20 + 72);
      unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1527210;
      uint64_t v23 = (void *)(v11 + v22);
      sub_1BFF96680(a2, (uint64_t)v8);
      v66[0] = 0uLL;
      v66[1] = 1uLL;
      v66[2] = 0uLL;
      char v67 = 0;
      sub_1C11AE83C(0xD000000000000014, 0x80000001C161DC50, (uint64_t)v8, (uint64_t)v66, v23);
      uint64_t v24 = (char *)v23 + v21;
      sub_1BFF96680(a2, (uint64_t)v8);
      v66[0] = 0uLL;
      v66[1] = 2uLL;
      v66[2] = 0uLL;
      char v67 = 0;
      uint64_t v25 = "Publish Date, Long";
      goto LABEL_7;
    case 4:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v26 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v27 = *(void *)(v26 + 72);
      unint64_t v28 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1527210;
      uint64_t v29 = (void *)(v11 + v28);
      sub_1BFF96680(a2, (uint64_t)v8);
      v66[0] = 0uLL;
      v66[1] = 1uLL;
      v66[2] = 0uLL;
      char v67 = 1;
      sub_1C11AE83C(0xD000000000000014, 0x80000001C1636940, (uint64_t)v8, (uint64_t)v66, v29);
      uint64_t v24 = (char *)v29 + v27;
      sub_1BFF96680(a2, (uint64_t)v8);
      v66[0] = 0uLL;
      v66[1] = 2uLL;
      v66[2] = 0uLL;
      char v67 = 1;
      uint64_t v25 = "Display Date, Long";
LABEL_7:
      unint64_t v12 = (unint64_t)(v25 - 32) | 0x8000000000000000;
      uint64_t v13 = v24;
      unint64_t v14 = 0xD000000000000012;
      break;
    case 5:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v30 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 3;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v31);
      unint64_t v14 = 0x74707265637845;
      unint64_t v12 = 0xE700000000000000;
      break;
    case 6:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v32 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 4;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v33);
      unint64_t v14 = 0x78452074726F6853;
      unsigned int v19 = 1886545251;
LABEL_10:
      unint64_t v12 = v19 | 0xED00007400000000;
      break;
    case 7:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v34 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 5;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v35);
      unint64_t v14 = 0x4E20726F68747541;
      unint64_t v12 = 0xEB00000000656D61;
      break;
    case 8:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v36 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v38 = (void *)(v11 + v37);
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 6;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      unint64_t v14 = 0xD000000000000018;
      uint64_t v39 = "Author Name Or Accessory";
      goto LABEL_23;
    case 9:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v40 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 8;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v41);
      unint64_t v14 = 0x656873696C627550;
      unint64_t v12 = 0xEE00656D614E2072;
      break;
    case 0xA:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v42 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 9;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v43);
      unint64_t v14 = 0x65726F736E6F7053;
      unint64_t v12 = 0xEC00000079422064;
      break;
    case 0xB:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v44 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 10;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v45);
      uint64_t v46 = 0x2079726F7453;
      goto LABEL_25;
    case 0xC:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v47 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v48 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 11;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v48);
      unint64_t v14 = 0x65676175676E614CLL;
      unint64_t v12 = 0xE800000000000000;
      break;
    case 0xD:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v49 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v50 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 12;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      unint64_t v12 = 0xEA00000000006E6FLL;
      uint64_t v13 = (void *)(v11 + v50);
      unint64_t v14 = 0x6974616D6F747541;
      break;
    case 0xE:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v51 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v52 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 7;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      unint64_t v12 = 0xE900000000000079;
      uint64_t v13 = (void *)(v11 + v52);
      unint64_t v14 = 0x726F737365636341;
      break;
    case 0xF:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v53 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v54 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 13;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v54);
      unint64_t v14 = 0x726F74617272614ELL;
      unint64_t v12 = 0xE900000000000073;
      break;
    case 0x10:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v55 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v56 = *(void *)(v55 + 72);
      unint64_t v57 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1527210;
      uint64_t v58 = (void *)(v11 + v57);
      sub_1BFF96680(a2, (uint64_t)v8);
      memset(v66, 0, sizeof(v66));
      char v67 = 2;
      sub_1C11AE83C(0xD000000000000017, 0x80000001C16368E0, (uint64_t)v8, (uint64_t)v66, v58);
      uint64_t v38 = (void *)((char *)v58 + v56);
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 1;
      memset((char *)v66 + 8, 0, 40);
      unint64_t v14 = 0xD00000000000001DLL;
      char v67 = 2;
      uint64_t v39 = "Track Duration, Accessibility";
      goto LABEL_23;
    case 0x11:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v59 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v60 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      memset(v66, 0, sizeof(v66));
      char v67 = 3;
      uint64_t v13 = (void *)(v11 + v60);
      unint64_t v14 = 0x7250206B63617254;
      unint64_t v12 = 0xEE0073736572676FLL;
      break;
    case 0x12:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v61 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v62 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      uint64_t v38 = (void *)(v11 + v62);
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 14;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      unint64_t v14 = 0xD000000000000018;
      uint64_t v39 = "Redirect App Destination";
LABEL_23:
      unint64_t v12 = (unint64_t)(v39 - 32) | 0x8000000000000000;
      uint64_t v13 = v38;
      break;
    case 0x13:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v63 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      *(void *)&v66[0] = 15;
      memset((char *)v66 + 8, 0, 40);
      char v67 = 4;
      uint64_t v13 = (void *)(v11 + v64);
      uint64_t v46 = 0x206F65646956;
LABEL_25:
      unint64_t v14 = v46 & 0xFFFFFFFFFFFFLL | 0x7954000000000000;
      unint64_t v12 = 0xEA00000000006570;
      break;
    default:
      sub_1BFF2EC78(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v9 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
      sub_1BFF96680(a2, (uint64_t)v8);
      memset(v66, 0, sizeof(v66));
      char v67 = 4;
      unint64_t v12 = 0xEA00000000007265;
      uint64_t v13 = (void *)(v11 + v10);
      unint64_t v14 = 0x696669746E656449;
      break;
  }
  uint64_t result = sub_1C11AE83C(v14, v12, (uint64_t)v8, (uint64_t)v66, v13);
  *a3 = v11;
  return result;
}

uint64_t sub_1C11AE83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v7 = *(void *)(a4 + 8);
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(a4 + 32);
  uint64_t v11 = *(void *)(a4 + 40);
  unsigned __int8 v12 = *(unsigned char *)(a4 + 48);
  *(void *)&long long v21 = *(void *)a4;
  uint64_t v6 = v21;
  *((void *)&v21 + 1) = v7;
  *(void *)&long long v22 = v8;
  *((void *)&v22 + 1) = v9;
  uint64_t v23 = v10;
  uint64_t v24 = v11;
  unsigned __int8 v25 = v12;
  uint64_t v13 = sub_1C11ABAD0(a3, 0, (uint64_t)&v21);
  unint64_t v15 = v14;
  sub_1BFF01064(v6, v7, v8, v9, v10, v11, v12);
  uint64_t v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    *(void *)&long long v21 = v13;
    *((void *)&v21 + 1) = v15;
    *((void *)&v22 + 1) = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v21 = 0u;
    long long v22 = 0u;
  }
  sub_1C042F9B0(a1, a2, (uint64_t)&v21, a5);
  return sub_1BFF2F7F4(a3);
}

uint64_t FormatHeadlineTrackDurationFormat.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatHeadlineTrackDurationFormat.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11AE9B4(void *a1)
{
  return FormatHeadlineTrackDurationFormat.encode(to:)(a1);
}

uint64_t FormatHeadlineTrackProgressFormat.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatHeadlineTrackProgressFormat.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11AEA38(void *a1)
{
  return FormatHeadlineTrackProgressFormat.init(from:)(a1);
}

uint64_t sub_1C11AEA50(void *a1)
{
  return FormatHeadlineTrackProgressFormat.encode(to:)(a1);
}

BOOL _s8NewsFeed21FormatHeadlineBindingV4TextO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  int v14 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v63 = v4;
  uint64_t v64 = v2;
  switch(*(unsigned char *)(a1 + 48))
  {
    case 1:
      if (v14 != 1) {
        goto LABEL_6;
      }
      uint64_t v71 = *(void *)a1;
      uint64_t v72 = v2;
      uint64_t v73 = v4;
      uint64_t v74 = v5;
      uint64_t v22 = v7;
      uint64_t v75 = v7;
      uint64_t v76 = v6;
      uint64_t v65 = v9;
      uint64_t v66 = v8;
      uint64_t v67 = v10;
      uint64_t v68 = v11;
      uint64_t v69 = v13;
      uint64_t v70 = v12;
      uint64_t v59 = v11;
      uint64_t v60 = v5;
      uint64_t v23 = v4;
      uint64_t v24 = v11;
      uint64_t v25 = v13;
      uint64_t v26 = v13;
      uint64_t v57 = v13;
      uint64_t v27 = v12;
      uint64_t v28 = v6;
      uint64_t v56 = v27;
      uint64_t v29 = v2;
      uint64_t v30 = v10;
      uint64_t v52 = v10;
      sub_1BFF2B138(v9, v8, v10, v24, v26, v27, 1u);
      sub_1BFF2B138(v3, v29, v23, v60, v22, v28, 1u);
      sub_1BFF2B138(v9, v8, v30, v59, v25, v27, 1u);
      uint64_t v31 = v22;
      uint64_t v54 = v22;
      sub_1BFF2B138(v3, v64, v23, v60, v22, v28, 1u);
      BOOL v21 = _s8NewsFeed010FormatDateC0O2eeoiySbAC_ACtFZ_0(&v71, &v65);
      sub_1BFF01064(v3, v64, v23, v60, v31, v28, 1u);
      sub_1BFF01064(v9, v8, v52, v59, v57, v56, 1u);
      sub_1BFF01064(v9, v8, v52, v59, v57, v56, 1u);
      sub_1BFF01064(v3, v64, v63, v60, v54, v28, 1u);
      return v21;
    case 2:
      unsigned __int8 v61 = *(unsigned char *)(a1 + 48);
      uint64_t v62 = *(void *)a1;
      if (v14 != 2) {
        goto LABEL_105;
      }
      uint64_t v38 = *(void *)(a2 + 16);
      sub_1BFF01064(v3, v2, v4, *(void *)(a1 + 24), v7, v6, 2u);
      sub_1BFF01064(v9, v8, v38, v11, v13, v12, 2u);
      return ((v9 ^ v3) & 1) == 0;
    case 3:
      unsigned __int8 v61 = *(unsigned char *)(a1 + 48);
      uint64_t v62 = *(void *)a1;
      if (v14 != 3) {
        goto LABEL_105;
      }
      uint64_t v39 = *(void *)(a2 + 16);
      sub_1BFF01064(v3, v2, v4, *(void *)(a1 + 24), v7, v6, 3u);
      uint64_t v40 = v9;
      uint64_t v41 = v8;
      uint64_t v42 = v39;
      uint64_t v43 = v11;
      uint64_t v44 = v13;
      uint64_t v45 = v12;
      unsigned __int8 v46 = 3;
      goto LABEL_104;
    case 4:
      unsigned __int8 v61 = *(unsigned char *)(a1 + 48);
      uint64_t v62 = *(void *)a1;
      if (!(v4 | v2 | v3 | v5 | v7 | v6))
      {
        if (v14 != 4 || v10 | v8 | v9 | v11 | v13 | v12) {
          goto LABEL_105;
        }
        sub_1BFF01064(0, 0, 0, v5, v7, v6, 4u);
        uint64_t v40 = 0;
        goto LABEL_103;
      }
      uint64_t v47 = v4 | v2 | v5 | v7 | v6;
      if (v3 != 1 || v47)
      {
        if (v3 != 2 || v47)
        {
          if (v3 != 3 || v47)
          {
            if (v3 != 4 || v47)
            {
              if (v3 != 5 || v47)
              {
                if (v3 != 6 || v47)
                {
                  if (v3 != 7 || v47)
                  {
                    if (v3 != 8 || v47)
                    {
                      if (v3 != 9 || v47)
                      {
                        if (v3 != 10 || v47)
                        {
                          if (v3 != 11 || v47)
                          {
                            if (v3 != 12 || v47)
                            {
                              if (v3 != 13 || v47)
                              {
                                if (v3 != 14 || v47)
                                {
                                  if (v14 != 4 || v9 != 15 || v10 | v8 | v11 | v13 | v12) {
                                    goto LABEL_105;
                                  }
                                  sub_1BFF01064(15, 0, 0, v5, v7, v6, 4u);
                                  uint64_t v40 = 15;
                                }
                                else
                                {
                                  if (v14 != 4 || v9 != 14 || v10 | v8 | v11 | v13 | v12) {
                                    goto LABEL_105;
                                  }
                                  sub_1BFF01064(14, 0, 0, v5, v7, v6, 4u);
                                  uint64_t v40 = 14;
                                }
                              }
                              else
                              {
                                if (v14 != 4 || v9 != 13 || v10 | v8 | v11 | v13 | v12) {
                                  goto LABEL_105;
                                }
                                sub_1BFF01064(13, 0, 0, v5, v7, v6, 4u);
                                uint64_t v40 = 13;
                              }
                            }
                            else
                            {
                              if (v14 != 4 || v9 != 12 || v10 | v8 | v11 | v13 | v12) {
                                goto LABEL_105;
                              }
                              sub_1BFF01064(12, 0, 0, v5, v7, v6, 4u);
                              uint64_t v40 = 12;
                            }
                          }
                          else
                          {
                            if (v14 != 4 || v9 != 11 || v10 | v8 | v11 | v13 | v12) {
                              goto LABEL_105;
                            }
                            sub_1BFF01064(11, 0, 0, v5, v7, v6, 4u);
                            uint64_t v40 = 11;
                          }
                        }
                        else
                        {
                          if (v14 != 4 || v9 != 10 || v10 | v8 | v11 | v13 | v12) {
                            goto LABEL_105;
                          }
                          sub_1BFF01064(10, 0, 0, v5, v7, v6, 4u);
                          uint64_t v40 = 10;
                        }
                      }
                      else
                      {
                        if (v14 != 4 || v9 != 9 || v10 | v8 | v11 | v13 | v12) {
                          goto LABEL_105;
                        }
                        sub_1BFF01064(9, 0, 0, v5, v7, v6, 4u);
                        uint64_t v40 = 9;
                      }
                    }
                    else
                    {
                      if (v14 != 4 || v9 != 8 || v10 | v8 | v11 | v13 | v12) {
                        goto LABEL_105;
                      }
                      sub_1BFF01064(8, 0, 0, v5, v7, v6, 4u);
                      uint64_t v40 = 8;
                    }
                  }
                  else
                  {
                    if (v14 != 4 || v9 != 7 || v10 | v8 | v11 | v13 | v12) {
                      goto LABEL_105;
                    }
                    sub_1BFF01064(7, 0, 0, v5, v7, v6, 4u);
                    uint64_t v40 = 7;
                  }
                }
                else
                {
                  if (v14 != 4 || v9 != 6 || v10 | v8 | v11 | v13 | v12) {
                    goto LABEL_105;
                  }
                  sub_1BFF01064(6, 0, 0, v5, v7, v6, 4u);
                  uint64_t v40 = 6;
                }
              }
              else
              {
                if (v14 != 4 || v9 != 5 || v10 | v8 | v11 | v13 | v12) {
                  goto LABEL_105;
                }
                sub_1BFF01064(5, 0, 0, v5, v7, v6, 4u);
                uint64_t v40 = 5;
              }
            }
            else
            {
              if (v14 != 4 || v9 != 4 || v10 | v8 | v11 | v13 | v12) {
                goto LABEL_105;
              }
              sub_1BFF01064(4, 0, 0, v5, v7, v6, 4u);
              uint64_t v40 = 4;
            }
          }
          else
          {
            if (v14 != 4 || v9 != 3 || v10 | v8 | v11 | v13 | v12) {
              goto LABEL_105;
            }
            sub_1BFF01064(3, 0, 0, v5, v7, v6, 4u);
            uint64_t v40 = 3;
          }
        }
        else
        {
          if (v14 != 4 || v9 != 2 || v10 | v8 | v11 | v13 | v12) {
            goto LABEL_105;
          }
          sub_1BFF01064(2, 0, 0, v5, v7, v6, 4u);
          uint64_t v40 = 2;
        }
LABEL_103:
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        uint64_t v43 = v11;
        uint64_t v44 = v13;
        uint64_t v45 = v12;
        unsigned __int8 v46 = 4;
LABEL_104:
        sub_1BFF01064(v40, v41, v42, v43, v44, v45, v46);
        return 1;
      }
      if (v14 == 4 && v9 == 1 && !(v10 | v8 | v11 | v13 | v12))
      {
        BOOL v21 = 1;
        sub_1BFF01064(1, 0, 0, v5, v7, v6, 4u);
        sub_1BFF01064(1, 0, 0, v11, v13, v12, 4u);
        return v21;
      }
LABEL_105:
      uint64_t v48 = v6;
      uint64_t v49 = v10;
      sub_1BFF2B138(v9, v8, v10, v11, v13, v12, v14);
      sub_1BFF01064(v62, v64, v63, v5, v7, v48, v61);
      sub_1BFF01064(v9, v8, v49, v11, v13, v12, v14);
      return 0;
    default:
      if (!*(unsigned char *)(a2 + 48))
      {
        uint64_t v71 = *(void *)a1;
        uint64_t v72 = v2;
        uint64_t v73 = v4;
        uint64_t v74 = v5;
        uint64_t v53 = v7;
        uint64_t v55 = v12;
        uint64_t v75 = v7;
        uint64_t v76 = v6;
        uint64_t v65 = v9;
        uint64_t v66 = v8;
        uint64_t v67 = v10;
        uint64_t v68 = v11;
        uint64_t v69 = v13;
        uint64_t v70 = v12;
        uint64_t v15 = v4;
        uint64_t v58 = v11;
        uint64_t v16 = v12;
        uint64_t v17 = v6;
        uint64_t v18 = v2;
        uint64_t v19 = v10;
        uint64_t v51 = v10;
        sub_1BFF2B138(v9, v8, v10, v11, v13, v16, 0);
        sub_1BFF2B138(v3, v18, v15, v5, v53, v17, 0);
        sub_1BFF2B138(v9, v8, v19, v11, v13, v55, 0);
        uint64_t v20 = v15;
        sub_1BFF2B138(v3, v18, v15, v5, v53, v17, 0);
        BOOL v21 = _s8NewsFeed010FormatDateC0O2eeoiySbAC_ACtFZ_0(&v71, &v65);
        sub_1BFF01064(v3, v18, v20, v5, v53, v17, 0);
        sub_1BFF01064(v9, v8, v51, v58, v13, v55, 0);
        sub_1BFF01064(v9, v8, v51, v58, v13, v55, 0);
        sub_1BFF01064(v3, v18, v63, v5, v53, v17, 0);
        return v21;
      }
LABEL_6:
      unsigned __int8 v61 = *(unsigned char *)(a1 + 48);
      uint64_t v62 = *(void *)a1;
      uint64_t v32 = *(void *)(a1 + 24);
      uint64_t v33 = *(void *)(a1 + 32);
      uint64_t v34 = *(void *)(a1 + 40);
      uint64_t v35 = *(void *)a2;
      uint64_t v36 = *(void *)(a2 + 8);
      uint64_t v37 = *(void *)(a2 + 16);
      sub_1BFF523A4(*(void *)a1, v2, v4);
      uint64_t v10 = v37;
      uint64_t v8 = v36;
      uint64_t v9 = v35;
      uint64_t v6 = v34;
      uint64_t v7 = v33;
      uint64_t v5 = v32;
      goto LABEL_105;
  }
}

unint64_t sub_1C11AF4D0(uint64_t a1)
{
  unint64_t result = sub_1C11AF4F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11AF4F8()
{
  unint64_t result = qword_1EA1AC840;
  if (!qword_1EA1AC840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC840);
  }
  return result;
}

uint64_t sub_1C11AF54C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C11AF808(a1, a2, a3, (uint64_t (*)(void))sub_1BFE032DC, (uint64_t (*)(void))sub_1BFE004AC, (uint64_t (*)(void))sub_1C11AF58C);
}

unint64_t sub_1C11AF58C()
{
  unint64_t result = qword_1EA1AC848;
  if (!qword_1EA1AC848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC848);
  }
  return result;
}

unint64_t sub_1C11AF5E4()
{
  unint64_t result = qword_1EA1AC850;
  if (!qword_1EA1AC850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC850);
  }
  return result;
}

unint64_t sub_1C11AF638(uint64_t a1)
{
  unint64_t result = sub_1C11AF660();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11AF660()
{
  unint64_t result = qword_1EA1AC858;
  if (!qword_1EA1AC858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC858);
  }
  return result;
}

uint64_t sub_1C11AF6B4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C11AF808(a1, a2, a3, (uint64_t (*)(void))sub_1BFDEB094, (uint64_t (*)(void))sub_1C08F2BCC, (uint64_t (*)(void))sub_1C11AF5E4);
}

unint64_t sub_1C11AF6F8()
{
  unint64_t result = qword_1EA1AC860;
  if (!qword_1EA1AC860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC860);
  }
  return result;
}

unint64_t sub_1C11AF74C(uint64_t a1)
{
  unint64_t result = sub_1C11AF774();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11AF774()
{
  unint64_t result = qword_1EA1AC868;
  if (!qword_1EA1AC868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC868);
  }
  return result;
}

uint64_t sub_1C11AF7C8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C11AF808(a1, a2, a3, (uint64_t (*)(void))sub_1C088E744, (uint64_t (*)(void))sub_1C08F9450, (uint64_t (*)(void))sub_1C11AF6F8);
}

uint64_t sub_1C11AF808(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

uint64_t _s4TextOwxx(uint64_t a1)
{
  return sub_1BFF01064(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t _s4TextOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_1BFF2B138(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s4TextOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_1BFF2B138(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  unsigned __int8 v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1BFF01064(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s4TextOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1BFF01064(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t sub_1C11AF9D8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 3u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1C11AF9F0(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.Text()
{
  return &type metadata for FormatHeadlineBinding.Text;
}

ValueMetadata *type metadata accessor for FormatHeadlineTrackDurationFormat()
{
  return &type metadata for FormatHeadlineTrackDurationFormat;
}

unsigned char *storeEnumTagSinglePayload for FormatHeadlineTrackProgressFormat(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C11AFAFCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineTrackProgressFormat()
{
  return &type metadata for FormatHeadlineTrackProgressFormat;
}

ValueMetadata *_s4TextO10CodingTypeOMa_6()
{
  return &_s4TextO10CodingTypeON_6;
}

uint64_t sub_1C11AFB6C()
{
  return sub_1C11AFBB4(&qword_1EA1AC870, (void (*)(uint64_t))sub_1C11AFBFC);
}

uint64_t sub_1C11AFBB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C11AFBFC()
{
  if (!qword_1EA1AC878)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AC878);
    }
  }
}

unint64_t sub_1C11AFC58()
{
  unint64_t result = qword_1EA1AC880;
  if (!qword_1EA1AC880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC880);
  }
  return result;
}

NewsFeed::WebArchiveRequest __swiftcall WebArchiveRequest.init(resourceID:params:)(Swift::String resourceID, Swift::String_optional params)
{
  v2->value = resourceID;
  v2[1] = params;
  result.params = params;
  result.resourceID = resourceID;
  return result;
}

uint64_t WebArchiveServiceType.resolve(webArchives:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = FCCurrentQoSOrUtilityIfMain();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 16);
  return v7(a1, v6, a2, a3);
}

uint64_t WebArchiveServiceType.resolve(webArchive:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  v8[0] = *(void *)a1;
  v8[1] = v5;
  long long v9 = *(_OWORD *)(a1 + 16);
  uint64_t v6 = FCCurrentQoSOrUtilityIfMain();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(a3 + 8))(v8, v6, a2, a3);
}

uint64_t WebArchiveService.__allocating_init(resourceService:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1BFC773DC(a1, v2 + 16);
  return v2;
}

uint64_t WebArchiveRequest.resourceID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WebArchiveRequest.params.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WebArchive.params.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WebArchive.archiveBaseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebArchive() + 24);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t WebArchive.archiveIndexFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebArchive() + 28);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t WebArchive.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WebArchive.init(resourceID:params:archiveBaseURL:archiveIndexFileURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  uint64_t v10 = type metadata accessor for WebArchive();
  unsigned __int8 v11 = (char *)a7 + *(int *)(v10 + 24);
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t))v15)((void *)(v12 - 8), v11, a5, v12);
  uint64_t v13 = (char *)a7 + *(int *)(v10 + 28);
  return v15(v13, a6, v12);
}

uint64_t WebArchiveService.init(resourceService:)(long long *a1)
{
  sub_1BFC773DC(a1, v1 + 16);
  return v1;
}

uint64_t type metadata accessor for WebArchive()
{
  uint64_t result = qword_1EB873BB0;
  if (!qword_1EB873BB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WebArchiveService.resolve(webArchive:qualityOfService:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  sub_1C11B0904(0, (unint64_t *)&unk_1EB879BC0, (void (*)(uint64_t))type metadata accessor for WebArchive);
  sub_1C151932C();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v4;
  v5[5] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1C1518E7C();
  type metadata accessor for WebArchive();
  uint64_t v7 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v7;
}

uint64_t sub_1C11B01C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C11B2578(0, &qword_1EB85C708, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
  *(void *)(v12 + 32) = a2;
  *(void *)(v12 + 40) = a3;
  *(void *)(v12 + 48) = a4;
  *(void *)(v12 + 56) = a5;
  sub_1C11B0904(0, (unint64_t *)&qword_1EB879BE0, (void (*)(uint64_t))sub_1C02509F8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151932C();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a1;
  v13[4] = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v14 = (void *)sub_1C1518E7C();
  sub_1C11B0904(0, (unint64_t *)&unk_1EB879BC0, (void (*)(uint64_t))type metadata accessor for WebArchive);
  uint64_t v15 = sub_1C1518FFC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_1C11B0378()
{
  return sub_1C11B1A90();
}

uint64_t WebArchiveService.resolve(webArchives:qualityOfService:)(uint64_t a1, uint64_t a2)
{
  sub_1C11B0904(0, (unint64_t *)&qword_1EB879BE0, (void (*)(uint64_t))sub_1C02509F8);
  sub_1C151932C();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = v2;
  v5[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = (void *)sub_1C1518E7C();
  sub_1C11B0904(0, (unint64_t *)&unk_1EB879BC0, (void (*)(uint64_t))type metadata accessor for WebArchive);
  uint64_t v7 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v7;
}

uint64_t sub_1C11B04BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C11B245C(0, &qword_1EB873BF0, (uint64_t (*)(uint64_t))type metadata accessor for WebArchive, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = *a1;
  if (!*(void *)(v11 + 16))
  {
    uint64_t v20 = type metadata accessor for WebArchive();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
LABEL_7:
    sub_1C11B23EC((uint64_t)v10, &qword_1EB873BF0, (uint64_t (*)(uint64_t))type metadata accessor for WebArchive);
    sub_1C11B24C0();
    swift_allocError();
    *(void *)uint64_t v21 = a2;
    *(void *)(v21 + 8) = a3;
    *(unsigned char *)(v21 + 16) = 1;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  if (v13)
  {
    unint64_t v14 = v12;
    uint64_t v15 = *(void *)(v11 + 56);
    uint64_t v16 = type metadata accessor for WebArchive();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v24 = a2;
    uint64_t v18 = a4;
    uint64_t v19 = v17;
    sub_1C11B2514(v15 + *(void *)(v17 + 72) * v14, (uint64_t)v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v16);
    a4 = v18;
    a2 = v24;
  }
  else
  {
    uint64_t v16 = type metadata accessor for WebArchive();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for WebArchive();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v10, 1, v16) == 1) {
    goto LABEL_7;
  }
  return sub_1C11B2388((uint64_t)v10, a4);
}

uint64_t sub_1C11B0784@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C11B04BC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C11B07A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFC66384(a1 + 16, (uint64_t)v17);
  uint64_t v6 = v18;
  uint64_t v5 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  int64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v7, 0);
    uint64_t v8 = v20;
    uint64_t v9 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      uint64_t v20 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
      {
        sub_1BFF661B8(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v20;
      }
      v9 += 4;
      *(void *)(v8 + 16) = v13 + 1;
      uint64_t v14 = v8 + 16 * v13;
      *(void *)(v14 + 32) = v10;
      *(void *)(v14 + 40) = v11;
      --v7;
    }
    while (v7);
  }
  uint64_t v15 = ResourceServiceType.fetchResources(identifiers:qualityOfService:)(v8, a3, v6, v5);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v15;
}

uint64_t sub_1C11B08E4()
{
  return sub_1C11B07A4(v0[2], v0[3], v0[4]);
}

void sub_1C11B0904(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151E41C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C11B0968@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *a1;
  sub_1C11B2578(0, &qword_1EB87B068, MEMORY[0x1E4FBB320]);
  sub_1C11B1AB8();
  uint64_t v8 = sub_1C151E92C();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C11B1B2C(v8, v7, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C11B245C(0, &qword_1EB879D00, (uint64_t (*)(uint64_t))type metadata accessor for WebArchive, MEMORY[0x1E4FBB320]);
  sub_1C11B22A8();
  sub_1C11B2330();
  uint64_t v9 = sub_1C151E91C();
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v9;
  return result;
}

uint64_t sub_1C11B0ADC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C11B0968(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1C11B0AFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v63 = a3;
  uint64_t v69 = a2;
  v70[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v58 - v9;
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)v58 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v58 - v15;
  uint64_t v18 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v19 = a1[3];
  uint64_t v60 = a1[2];
  uint64_t v61 = v19;
  swift_bridgeObjectRetain();
  sub_1C1515EFC();
  uint64_t v64 = v18;
  uint64_t v67 = v17;
  sub_1C1515EDC();
  uint64_t v62 = v5;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v20 = v5 + 8;
  uint64_t v65 = v4;
  uint64_t v66 = v21;
  v21(v13, v4);
  uint64_t v68 = v10;
  sub_1C1515EEC();
  sub_1C1515EDC();
  uint64_t v22 = self;
  id v23 = objc_msgSend(v22, sel_defaultManager);
  sub_1C1515E0C();
  uint64_t v24 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  LODWORD(a1) = objc_msgSend(v23, sel_fileExistsAtPath_, v24);

  if (a1)
  {
    uint64_t v25 = v65;
    v66(v68, v65);
    uint64_t v26 = type metadata accessor for WebArchive();
    uint64_t v27 = v63;
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
    v28(&v63[*(int *)(v26 + 24)], v16, v25);
    v28(&v27[*(int *)(v26 + 28)], v7, v25);
    uint64_t v29 = v27;
LABEL_3:
    uint64_t v30 = v67;
    *(void *)uint64_t v29 = v64;
    *((void *)v29 + 1) = v30;
    uint64_t v31 = v61;
    *((void *)v29 + 2) = v60;
    *((void *)v29 + 3) = v31;
    return swift_bridgeObjectRetain();
  }
  v58[1] = v20;
  uint64_t v59 = v7;
  uint64_t v33 = v22;
  id v34 = objc_msgSend(v22, sel_defaultManager);
  uint64_t v35 = (void *)sub_1C1515E9C();
  uint64_t v36 = v68;
  uint64_t v37 = (void *)sub_1C1515E9C();
  v70[0] = 0;
  unsigned int v38 = objc_msgSend(v34, sel_copyItemAtURL_toURL_error_, v35, v37, v70);

  id v39 = v70[0];
  if (v38)
  {
    id v40 = objc_allocWithZone(MEMORY[0x1E4F81BC8]);
    id v41 = v39;
    id v42 = objc_msgSend(v40, sel_init);
    uint64_t v43 = v36;
    uint64_t v44 = (void *)sub_1C1515E9C();
    uint64_t v45 = (void *)sub_1C1515E9C();
    unsigned int v46 = objc_msgSend(v42, sel_unarchive_toLocation_, v44, v45);

    id v47 = objc_msgSend(v33, sel_defaultManager);
    sub_1C1515E0C();
    uint64_t v48 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    unsigned int v49 = objc_msgSend(v47, sel_fileExistsAtPath_, v48);

    if (v46 && v49)
    {

      uint64_t v50 = v65;
      v66(v43, v65);
      uint64_t v51 = type metadata accessor for WebArchive();
      uint64_t v29 = v63;
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
      v52(&v63[*(int *)(v51 + 24)], v16, v50);
      v52(&v29[*(int *)(v51 + 28)], v59, v50);
      goto LABEL_3;
    }
    sub_1C11B24C0();
    swift_allocError();
    uint64_t v54 = v67;
    *(void *)uint64_t v55 = v64;
    *(void *)(v55 + 8) = v54;
    *(unsigned char *)(v55 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    uint64_t v43 = v36;
    id v53 = v70[0];
    swift_bridgeObjectRelease();
    sub_1C1515D3C();

    swift_willThrow();
  }
  uint64_t v56 = v65;
  uint64_t v57 = v66;
  v66(v59, v65);
  v57(v43, v56);
  return ((uint64_t (*)(char *, uint64_t))v57)(v16, v56);
}

uint64_t WebArchiveService.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t WebArchiveService.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1C11B1094(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  sub_1C11B0904(0, (unint64_t *)&unk_1EB879BC0, (void (*)(uint64_t))type metadata accessor for WebArchive);
  sub_1C151932C();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v4;
  v5[5] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1C1518E7C();
  type metadata accessor for WebArchive();
  uint64_t v7 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v7;
}

uint64_t sub_1C11B11AC(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *v2;
  sub_1C11B0904(0, (unint64_t *)&qword_1EB879BE0, (void (*)(uint64_t))sub_1C02509F8);
  sub_1C151932C();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = v9;
  v5[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = (void *)sub_1C1518E7C();
  sub_1C11B0904(0, (unint64_t *)&unk_1EB879BC0, (void (*)(uint64_t))type metadata accessor for WebArchive);
  uint64_t v7 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v7;
}

uint64_t dispatch thunk of WebArchiveServiceType.resolve(webArchive:qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of WebArchiveServiceType.resolve(webArchives:qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

ValueMetadata *type metadata accessor for WebArchiveRequest()
{
  return &type metadata for WebArchiveRequest;
}

char *initializeBufferWithCopyOfBuffer for WebArchive(char *a1, char *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_1C1515FDC();
    unint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v13(&v4[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v12);
  }
  return v4;
}

uint64_t destroy for WebArchive(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  return v8(v6, v5);
}

char *initializeWithCopy for WebArchive(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v12(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v11);
  return a1;
}

char *assignWithCopy for WebArchive(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v9);
  return a1;
}

char *initializeWithTake for WebArchive(char *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v10);
  return a1;
}

char *assignWithTake for WebArchive(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebArchive(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11B1844);
}

uint64_t sub_1C11B1844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WebArchive(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11B1908);
}

uint64_t sub_1C11B1908(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C11B19B0()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for WebArchiveService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WebArchiveService);
}

uint64_t dispatch thunk of WebArchiveService.__allocating_init(resourceService:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for WebArchiveService.Errors()
{
  return &type metadata for WebArchiveService.Errors;
}

uint64_t sub_1C11B1A90()
{
  return sub_1C11B01C8(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

unint64_t sub_1C11B1AB8()
{
  unint64_t result = qword_1EB87BD30;
  if (!qword_1EB87BD30)
  {
    sub_1C11B2578(255, &qword_1EB87B068, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87BD30);
  }
  return result;
}

unint64_t sub_1C11B1B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a4;
  uint64_t v58 = a3;
  uint64_t v71 = a2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C11B245C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v54 - v8;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v61 = (char *)v54 - v14;
  sub_1C11B245C(0, &qword_1EB873BF0, (uint64_t (*)(uint64_t))type metadata accessor for WebArchive, v6);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v74 = (char *)v54 - v16;
  uint64_t v76 = type metadata accessor for WebArchive();
  MEMORY[0x1F4188790](v76);
  uint64_t v75 = (uint64_t)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v69 = (uint64_t)v54 - v20;
  uint64_t v21 = *(void *)(a1 + 16);
  if (!v21) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v65 = v9;
  id v66 = v4;
  uint64_t v63 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v64 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v60 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v57 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v68 = v19;
  uint64_t v72 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v73 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  swift_bridgeObjectRetain();
  unint64_t v22 = MEMORY[0x1E4FBC860];
  v54[1] = a1;
  id v23 = (uint64_t *)(a1 + 56);
  long long v55 = xmmword_1C1529AE0;
  uint64_t v24 = v71;
  uint64_t v67 = v10;
  do
  {
    unint64_t v78 = v22;
    uint64_t v26 = *(v23 - 3);
    uint64_t v25 = *(v23 - 2);
    uint64_t v27 = *(v23 - 1);
    uint64_t v28 = *v23;
    uint64_t v29 = *(void *)(v24 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v29) {
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1BFEF2D8C(v26, v25);
    if ((v31 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_14:
      uint64_t v47 = 1;
LABEL_17:
      uint64_t v43 = v74;
      goto LABEL_18;
    }
    id v32 = *(id *)(*(void *)(v24 + 56) + 8 * v30);
    swift_bridgeObjectRelease();
    id v70 = v32;
    id v33 = objc_msgSend(v32, sel_fileURL);
    if (!v33)
    {
      uint64_t v37 = (uint64_t)v65;
      (*v64)(v65, 1, 1, v67);
LABEL_16:

      sub_1C11B23EC(v37, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v47 = 1;
      uint64_t v24 = v71;
      goto LABEL_17;
    }
    id v34 = v33;
    uint64_t v35 = v62;
    sub_1C1515F1C();

    uint64_t v36 = *v63;
    uint64_t v37 = (uint64_t)v65;
    unsigned int v38 = v35;
    uint64_t v39 = v67;
    (*v63)(v65, v38, v67);
    (*v64)((char *)v37, 0, 1, v39);
    if ((*v60)(v37, 1, v39) == 1) {
      goto LABEL_16;
    }
    uint64_t v40 = (uint64_t)v61;
    uint64_t v41 = v37;
    uint64_t v42 = v67;
    v36(v61, (char *)v41, v67);
    v77[0] = v26;
    v77[1] = v25;
    v77[2] = v27;
    v77[3] = v28;
    uint64_t v43 = v74;
    id v44 = v66;
    sub_1C11B0AFC(v77, v40, v74);
    id v66 = v44;
    if (v44)
    {
      if (qword_1EB87B060 != -1) {
        swift_once();
      }
      id v45 = (id)qword_1EB93C700;
      int v56 = sub_1C151F36C();
      sub_1C11B245C(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v55;
      *(void *)(v46 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v46 + 64) = sub_1BFE9C558();
      *(void *)(v46 + 32) = v26;
      *(void *)(v46 + 40) = v25;
      swift_bridgeObjectRetain();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      (*v57)(v61, v42);
      id v66 = 0;
      uint64_t v47 = 1;
      uint64_t v24 = v71;
    }
    else
    {
      (*v57)(v61, v42);

      uint64_t v47 = 0;
      uint64_t v24 = v71;
    }
LABEL_18:
    uint64_t v48 = v76;
    (*v73)(v43, v47, 1, v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*v72)(v43, 1, v48) == 1)
    {
      sub_1C11B23EC((uint64_t)v43, &qword_1EB873BF0, (uint64_t (*)(uint64_t))type metadata accessor for WebArchive);
      unint64_t v22 = v78;
    }
    else
    {
      uint64_t v49 = (uint64_t)v43;
      uint64_t v50 = v69;
      sub_1C11B2388(v49, v69);
      sub_1C11B2388(v50, v75);
      unint64_t v22 = v78;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v22 = sub_1C0EE89B0(0, *(void *)(v22 + 16) + 1, 1, v22);
      }
      unint64_t v52 = *(void *)(v22 + 16);
      unint64_t v51 = *(void *)(v22 + 24);
      if (v52 >= v51 >> 1) {
        unint64_t v22 = sub_1C0EE89B0(v51 > 1, v52 + 1, 1, v22);
      }
      *(void *)(v22 + 16) = v52 + 1;
      sub_1C11B2388(v75, v22+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v52);
      uint64_t v24 = v71;
    }
    v23 += 4;
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  return v22;
}

unint64_t sub_1C11B22A8()
{
  unint64_t result = qword_1EB879D08;
  if (!qword_1EB879D08)
  {
    sub_1C11B245C(255, &qword_1EB879D00, (uint64_t (*)(uint64_t))type metadata accessor for WebArchive, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879D08);
  }
  return result;
}

unint64_t sub_1C11B2330()
{
  unint64_t result = qword_1EB873BA8;
  if (!qword_1EB873BA8)
  {
    type metadata accessor for WebArchive();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873BA8);
  }
  return result;
}

uint64_t sub_1C11B2388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebArchive();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C11B23EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C11B245C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C11B245C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C11B24C0()
{
  unint64_t result = qword_1EA1AC888;
  if (!qword_1EA1AC888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC888);
  }
  return result;
}

uint64_t sub_1C11B2514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebArchive();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C11B2578(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for WebArchiveRequest);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C11B25CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C11B0784(a1, a2);
}

uint64_t sub_1C11B25E4()
{
  return sub_1C11B08E4();
}

uint64_t sub_1C11B2600@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C11B0ADC(a1, a2);
}

uint64_t sub_1C11B2618()
{
  uint64_t result = type metadata accessor for FeedGroupEmitTaskResult();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1C11B26AC(char *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if ((((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    unint64_t v10 = 8;
  }
  else {
    unint64_t v10 = (((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
  }
        + 8;
  int v11 = *(_DWORD *)(v5 + 80);
  if ((v11 & 0x1000F8) != 0 || (v10 | 1) > 0x18)
  {
    uint64_t v18 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    a1 = &v18[(unsigned __int16)((v11 & 0xF8) + 23) & (unsigned __int16)~(v11 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v12 = a2[v10];
    if ((v10 & 0xFFFFFFF8) != 0 && v12 >= 2) {
      unsigned int v12 = *(_DWORD *)a2 + 2;
    }
    if (v12 == 1)
    {
      uint64_t v19 = *(char **)a2;
      uint64_t v20 = v19;
      *(void *)a1 = v19;
      a1[v10] = 1;
    }
    else if (v12)
    {
      memcpy(a1, a2, v10 | 1);
    }
    else
    {
      unsigned int v14 = a2[v9];
      unsigned int v15 = v14 - 7;
      if (v14 >= 7)
      {
        if (v9 <= 3) {
          uint64_t v16 = v9;
        }
        else {
          uint64_t v16 = 4;
        }
        switch(v16)
        {
          case 1:
            int v17 = *a2;
            goto LABEL_34;
          case 2:
            int v17 = *(unsigned __int16 *)a2;
            goto LABEL_34;
          case 3:
            int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_34;
          case 4:
            int v17 = *(_DWORD *)a2;
LABEL_34:
            if (v9 < 4) {
              unsigned int v14 = (v17 | (v15 << (8 * v9))) + 7;
            }
            else {
              unsigned int v14 = v17 + 7;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v21 = v8 + 1;
      unint64_t v22 = v9 + 1;
      switch(v14)
      {
        case 1u:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          unint64_t v26 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v27 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v28 = *(void *)(v27 + 24);
          if (v28 < 0xFFFFFFFF)
          {
            long long v39 = *(_OWORD *)(v27 + 16);
            *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
            *(_OWORD *)(v26 + 16) = v39;
          }
          else
          {
            *(void *)(v26 + 24) = v28;
            (**(void (***)(void))(v28 - 8))();
          }
          char v29 = 1;
          goto LABEL_72;
        case 2u:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          char v29 = 2;
          goto LABEL_72;
        case 3u:
          uint64_t v30 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v30;
          char v31 = 3;
          goto LABEL_48;
        case 4u:
          uint64_t v32 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v32;
          char v31 = 4;
          goto LABEL_48;
        case 5u:
          uint64_t v33 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v33;
          char v31 = 5;
LABEL_48:
          a1[v9] = v31;
          swift_bridgeObjectRetain();
          break;
        case 6u:
          unsigned int v34 = a2[v8];
          unsigned int v35 = v34 - 3;
          if (v34 >= 3)
          {
            if (v8 <= 3) {
              uint64_t v36 = v8;
            }
            else {
              uint64_t v36 = 4;
            }
            switch(v36)
            {
              case 1:
                int v37 = *a2;
                goto LABEL_60;
              case 2:
                int v37 = *(unsigned __int16 *)a2;
                goto LABEL_60;
              case 3:
                int v37 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                goto LABEL_60;
              case 4:
                int v37 = *(_DWORD *)a2;
LABEL_60:
                if (v8 < 4) {
                  unsigned int v34 = (v37 | (v35 << (8 * v8))) + 3;
                }
                else {
                  unsigned int v34 = v37 + 3;
                }
                break;
              default:
                break;
            }
          }
          if (v34 == 2)
          {
            uint64_t v40 = *((void *)a2 + 1);
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = v40;
            a1[v8] = 2;
            swift_bridgeObjectRetain();
          }
          else if (v34 == 1)
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
            a1[v8] = 1;
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
            unint64_t v41 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
            unint64_t v42 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
            unint64_t v43 = *(void *)(v42 + 24);
            if (v43 < 0xFFFFFFFF)
            {
              long long v44 = *(_OWORD *)(v42 + 16);
              *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
              *(_OWORD *)(v41 + 16) = v44;
            }
            else
            {
              *(void *)(v41 + 24) = v43;
              (**(void (***)(void))(v43 - 8))();
            }
            a1[v8] = 0;
          }
          unint64_t v45 = (unint64_t)&a1[v21 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v46 = (unint64_t)&a2[v21 + 7] & 0xFFFFFFFFFFFFFFF8;
          uint64_t v47 = *(void *)(v46 + 24);
          *(void *)(v45 + 24) = v47;
          *(void *)(v45 + 32) = *(void *)(v46 + 32);
          (**(void (***)(void))(v47 - 8))();
          char v29 = 6;
LABEL_72:
          a1[v9] = v29;
          break;
        default:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          unint64_t v23 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v24 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v25 = *(void *)(v24 + 24);
          if (v25 < 0xFFFFFFFF)
          {
            long long v38 = *(_OWORD *)(v24 + 16);
            *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
            *(_OWORD *)(v23 + 16) = v38;
          }
          else
          {
            *(void *)(v23 + 24) = v25;
            (**(void (***)(void))(v25 - 8))();
          }
          a1[v9] = 0;
          break;
      }
      uint64_t v48 = (void *)((unint64_t)&a1[v22 + 7] & 0xFFFFFFFFFFFFFFF8);
      uint64_t v49 = (void *)((unint64_t)&a2[v22 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v48 = *v49;
      uint64_t v50 = (void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v51 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v50 = *v51;
      unint64_t v52 = (_OWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
      id v53 = (long long *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v54 = *v53;
      long long v55 = v53[1];
      *(_OWORD *)((char *)v52 + 26) = *(long long *)((char *)v53 + 26);
      *unint64_t v52 = v54;
      v52[1] = v55;
      *(void *)(((unint64_t)v52 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v53 + 49) & 0xFFFFFFFFFFFFFFF8);
      a1[v10] = 0;
      swift_retain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

void sub_1C11B2CF8(unsigned __int8 *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 > v5) {
    unint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v5 <= 0x10) {
    unint64_t v6 = 16;
  }
  else {
    unint64_t v6 = v5;
  }
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 48 <= v6) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unint64_t v8 = (((((((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if ((((((((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    unint64_t v8 = 8;
  }
  uint64_t v9 = v8 & 0xFFFFFFF8;
  unsigned int v10 = a1[v8];
  if (v10 >= 2 && v9 != 0) {
    unsigned int v10 = *(_DWORD *)a1 + 2;
  }
  if (v10 == 1)
  {
    uint64_t v16 = *(void **)a1;
  }
  else if (!v10)
  {
    unsigned int v12 = a1[v7];
    unsigned int v13 = v12 - 7;
    if (v12 >= 7)
    {
      if (v7 <= 3) {
        uint64_t v14 = v7;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a1;
          if (v7 < 4) {
            goto LABEL_32;
          }
          goto LABEL_34;
        case 2:
          int v15 = *(unsigned __int16 *)a1;
          if (v7 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_32;
        case 3:
          int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v7 < 4) {
            goto LABEL_32;
          }
          goto LABEL_34;
        case 4:
          int v15 = *(_DWORD *)a1;
          if (v7 < 4) {
LABEL_32:
          }
            unsigned int v12 = (v15 | (v13 << (8 * v7))) + 7;
          else {
LABEL_34:
          }
            unsigned int v12 = v15 + 7;
          break;
        default:
          break;
      }
    }
    switch(v12)
    {
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        break;
      case 6u:
        unsigned int v18 = a1[v6];
        unsigned int v19 = v18 - 3;
        if (v18 >= 3)
        {
          if (v6 <= 3) {
            uint64_t v20 = v6;
          }
          else {
            uint64_t v20 = 4;
          }
          switch(v20)
          {
            case 1:
              int v21 = *a1;
              goto LABEL_49;
            case 2:
              int v21 = *(unsigned __int16 *)a1;
              goto LABEL_49;
            case 3:
              int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_49;
            case 4:
              int v21 = *(_DWORD *)a1;
LABEL_49:
              if (v6 < 4) {
                unsigned int v18 = (v21 | (v19 << (8 * v6))) + 3;
              }
              else {
                unsigned int v18 = v21 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v18 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v18 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
          unint64_t v22 = (unint64_t)&a1[v4 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v22 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v22);
          }
        }
        unint64_t v17 = (unint64_t)&a1[v6 + 8] & 0xFFFFFFFFFFFFFFF8;
        goto LABEL_59;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
        unint64_t v17 = (unint64_t)&a1[v4 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v17 + 24) >= 0xFFFFFFFFuLL) {
LABEL_59:
        }
          __swift_destroy_boxed_opaque_existential_1(v17);
        break;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void *sub_1C11B3104(void *a1, _DWORD *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if ((((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    unint64_t v10 = 8;
  }
  else {
    unint64_t v10 = (((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
  }
        + 8;
  unsigned int v11 = *((unsigned __int8 *)a2 + v10);
  if (v11 >= 2 && (v10 & 0xFFFFFFF8) != 0) {
    unsigned int v11 = *a2 + 2;
  }
  if (v11 == 1)
  {
    unint64_t v17 = *(void **)a2;
    id v18 = v17;
    *a1 = v17;
    *((unsigned char *)a1 + v10) = 1;
  }
  else if (v11)
  {
    memcpy(a1, a2, v10 | 1);
  }
  else
  {
    unsigned int v13 = *((unsigned __int8 *)a2 + v9);
    unsigned int v14 = v13 - 7;
    if (v13 >= 7)
    {
      if (v9 <= 3) {
        uint64_t v15 = v9;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *(unsigned __int8 *)a2;
          if (v9 < 4) {
            goto LABEL_29;
          }
          goto LABEL_33;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v9 < 4) {
            goto LABEL_29;
          }
          goto LABEL_33;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          if (v9 < 4) {
            goto LABEL_29;
          }
          goto LABEL_33;
        case 4:
          int v16 = *a2;
          if (v9 < 4) {
LABEL_29:
          }
            unsigned int v13 = (v16 | (v14 << (8 * v9))) + 7;
          else {
LABEL_33:
          }
            unsigned int v13 = v16 + 7;
          break;
        default:
          break;
      }
    }
    unint64_t v19 = v8 + 1;
    unint64_t v20 = v9 + 1;
    switch(v13)
    {
      case 1u:
        (*(void (**)(void *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v24 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v25 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v26 = *(void *)(v25 + 24);
        if (v26 < 0xFFFFFFFF)
        {
          long long v37 = *(_OWORD *)(v25 + 16);
          *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
          *(_OWORD *)(v24 + 16) = v37;
        }
        else
        {
          *(void *)(v24 + 24) = v26;
          (**(void (***)(void))(v26 - 8))();
        }
        char v27 = 1;
        goto LABEL_69;
      case 2u:
        (*(void (**)(void *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        char v27 = 2;
        goto LABEL_69;
      case 3u:
        uint64_t v28 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v28;
        char v29 = 3;
        goto LABEL_45;
      case 4u:
        uint64_t v30 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v30;
        char v29 = 4;
        goto LABEL_45;
      case 5u:
        uint64_t v31 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v31;
        char v29 = 5;
LABEL_45:
        *((unsigned char *)a1 + v9) = v29;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unsigned int v32 = *((unsigned __int8 *)a2 + v8);
        unsigned int v33 = v32 - 3;
        if (v32 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v34 = v8;
          }
          else {
            uint64_t v34 = 4;
          }
          switch(v34)
          {
            case 1:
              int v35 = *(unsigned __int8 *)a2;
              goto LABEL_57;
            case 2:
              int v35 = *(unsigned __int16 *)a2;
              goto LABEL_57;
            case 3:
              int v35 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
              goto LABEL_57;
            case 4:
              int v35 = *a2;
LABEL_57:
              if (v8 < 4) {
                unsigned int v32 = (v35 | (v33 << (8 * v8))) + 3;
              }
              else {
                unsigned int v32 = v35 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v32 == 2)
        {
          uint64_t v38 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v38;
          *((unsigned char *)a1 + v8) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v32 == 1)
        {
          (*(void (**)(void *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          *((unsigned char *)a1 + v8) = 1;
        }
        else
        {
          (*(void (**)(void *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          unint64_t v39 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v40 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v41 = *(void *)(v40 + 24);
          if (v41 < 0xFFFFFFFF)
          {
            long long v42 = *(_OWORD *)(v40 + 16);
            *(_OWORD *)unint64_t v39 = *(_OWORD *)v40;
            *(_OWORD *)(v39 + 16) = v42;
          }
          else
          {
            *(void *)(v39 + 24) = v41;
            (**(void (***)(void))(v41 - 8))();
          }
          *((unsigned char *)a1 + v8) = 0;
        }
        unint64_t v43 = ((unint64_t)a1 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v44 = ((unint64_t)a2 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v45 = *(void *)(v44 + 24);
        *(void *)(v43 + 24) = v45;
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        (**(void (***)(void))(v45 - 8))();
        char v27 = 6;
LABEL_69:
        *((unsigned char *)a1 + v9) = v27;
        break;
      default:
        (*(void (**)(void *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v21 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v22 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v23 = *(void *)(v22 + 24);
        if (v23 < 0xFFFFFFFF)
        {
          long long v36 = *(_OWORD *)(v22 + 16);
          *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
          *(_OWORD *)(v21 + 16) = v36;
        }
        else
        {
          *(void *)(v21 + 24) = v23;
          (**(void (***)(void))(v23 - 8))();
        }
        *((unsigned char *)a1 + v9) = 0;
        break;
    }
    unint64_t v46 = (void *)(((unint64_t)a1 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v47 = (void *)(((unint64_t)a2 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v46 = *v47;
    uint64_t v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v49 = (void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v48 = *v49;
    uint64_t v50 = (_OWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v51 = (long long *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v52 = *v51;
    long long v53 = v51[1];
    *(_OWORD *)((char *)v50 + 26) = *(long long *)((char *)v51 + 26);
    *uint64_t v50 = v52;
    v50[1] = v53;
    *(void *)(((unint64_t)v50 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v51 + 49) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)a1 + v10) = 0;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unsigned __int8 *sub_1C11B3710(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = AssociatedTypeWitness;
    uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8) {
      unint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    if (v8 <= 0x10) {
      unint64_t v9 = 16;
    }
    else {
      unint64_t v9 = v8;
    }
    if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v9) {
      unint64_t v10 = v9;
    }
    else {
      unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
    if ((((((((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
      unint64_t v11 = 8;
    }
    else {
      unint64_t v11 = (((((((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
    }
          + 8;
    unsigned int v12 = a1[v11];
    if (v12 >= 2 && (v11 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = *(_DWORD *)a1 + 2;
    }
    unint64_t v65 = v9 + 1;
    unint64_t v14 = v10 + 1;
    if (v12 == 1)
    {
    }
    else if (!v12)
    {
      unsigned int v15 = a1[v10];
      unsigned int v16 = v15 - 7;
      if (v15 >= 7)
      {
        if (v10 <= 3) {
          uint64_t v17 = v10;
        }
        else {
          uint64_t v17 = 4;
        }
        switch(v17)
        {
          case 1:
            int v18 = *a1;
            if (v10 < 4) {
              goto LABEL_29;
            }
            goto LABEL_33;
          case 2:
            int v18 = *(unsigned __int16 *)a1;
            if (v10 < 4) {
              goto LABEL_29;
            }
            goto LABEL_33;
          case 3:
            int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v10 < 4) {
              goto LABEL_29;
            }
            goto LABEL_33;
          case 4:
            int v18 = *(_DWORD *)a1;
            if (v10 < 4) {
LABEL_29:
            }
              unsigned int v15 = (v18 | (v16 << (8 * v10))) + 7;
            else {
LABEL_33:
            }
              unsigned int v15 = v18 + 7;
            break;
          default:
            break;
        }
      }
      uint64_t v64 = AssociatedTypeWitness;
      switch(v15)
      {
        case 2u:
          uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
          (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          break;
        case 3u:
        case 4u:
        case 5u:
          uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
          swift_bridgeObjectRelease();
          break;
        case 6u:
          unsigned int v21 = a1[v9];
          unsigned int v22 = v21 - 3;
          if (v21 >= 3)
          {
            if (v9 <= 3) {
              uint64_t v23 = v9;
            }
            else {
              uint64_t v23 = 4;
            }
            switch(v23)
            {
              case 1:
                int v24 = *a1;
                goto LABEL_48;
              case 2:
                int v24 = *(unsigned __int16 *)a1;
                goto LABEL_48;
              case 3:
                int v24 = *(unsigned __int16 *)a1 | (a1[2] << 16);
                goto LABEL_48;
              case 4:
                int v24 = *(_DWORD *)a1;
LABEL_48:
                if (v9 < 4) {
                  unsigned int v21 = (v24 | (v22 << (8 * v9))) + 3;
                }
                else {
                  unsigned int v21 = v24 + 3;
                }
                break;
              default:
                break;
            }
          }
          if (v21 == 2)
          {
            swift_bridgeObjectRelease();
          }
          else if (v21 == 1)
          {
            (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          }
          else
          {
            (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
            unint64_t v25 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
            if (*(void *)(v25 + 24) >= 0xFFFFFFFFuLL) {
              __swift_destroy_boxed_opaque_existential_1(v25);
            }
          }
          uint64_t v19 = v6;
          unint64_t v20 = (unint64_t)&a1[v65 + 7] & 0xFFFFFFFFFFFFFFF8;
          goto LABEL_58;
        default:
          uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
          (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          unint64_t v20 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v20 + 24) >= 0xFFFFFFFFuLL) {
LABEL_58:
          }
            __swift_destroy_boxed_opaque_existential_1(v20);
          break;
      }
      swift_release();
      unint64_t v14 = v10 + 1;
      swift_bridgeObjectRelease();
      uint64_t v6 = v19;
      uint64_t v5 = v64;
    }
    unsigned int v26 = a2[v11];
    if ((v11 & 0xFFFFFFF8) != 0 && v26 >= 2) {
      unsigned int v26 = *(_DWORD *)a2 + 2;
    }
    if (v26 == 1)
    {
      unsigned int v32 = *(void **)a2;
      id v33 = v32;
      *(void *)a1 = v32;
      a1[v11] = 1;
    }
    else if (v26)
    {
      memcpy(a1, a2, v11 | 1);
    }
    else
    {
      unsigned int v28 = a2[v10];
      unsigned int v29 = v28 - 7;
      if (v28 >= 7)
      {
        if (v10 <= 3) {
          uint64_t v30 = v10;
        }
        else {
          uint64_t v30 = 4;
        }
        switch(v30)
        {
          case 1:
            int v31 = *a2;
            if (v10 < 4) {
              goto LABEL_78;
            }
            goto LABEL_82;
          case 2:
            int v31 = *(unsigned __int16 *)a2;
            if (v10 < 4) {
              goto LABEL_78;
            }
            goto LABEL_82;
          case 3:
            int v31 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v10 < 4) {
              goto LABEL_78;
            }
            goto LABEL_82;
          case 4:
            int v31 = *(_DWORD *)a2;
            if (v10 < 4) {
LABEL_78:
            }
              unsigned int v28 = (v31 | (v29 << (8 * v10))) + 7;
            else {
LABEL_82:
            }
              unsigned int v28 = v31 + 7;
            break;
          default:
            break;
        }
      }
      switch(v28)
      {
        case 1u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
          unint64_t v37 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v38 = (unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v39 = *(void *)(v38 + 24);
          if (v39 < 0xFFFFFFFF)
          {
            long long v47 = *(_OWORD *)(v38 + 16);
            *(_OWORD *)unint64_t v37 = *(_OWORD *)v38;
            *(_OWORD *)(v37 + 16) = v47;
          }
          else
          {
            *(void *)(v37 + 24) = v39;
            (**(void (***)(void))(v39 - 8))();
          }
          char v40 = 1;
          goto LABEL_118;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
          char v40 = 2;
          goto LABEL_118;
        case 3u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          char v41 = 3;
          goto LABEL_94;
        case 4u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          char v41 = 4;
          goto LABEL_94;
        case 5u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          char v41 = 5;
LABEL_94:
          a1[v10] = v41;
          swift_bridgeObjectRetain();
          break;
        case 6u:
          unsigned int v42 = a2[v9];
          unsigned int v43 = v42 - 3;
          if (v42 >= 3)
          {
            if (v9 <= 3) {
              uint64_t v44 = v9;
            }
            else {
              uint64_t v44 = 4;
            }
            switch(v44)
            {
              case 1:
                int v45 = *a2;
                goto LABEL_106;
              case 2:
                int v45 = *(unsigned __int16 *)a2;
                goto LABEL_106;
              case 3:
                int v45 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                goto LABEL_106;
              case 4:
                int v45 = *(_DWORD *)a2;
LABEL_106:
                if (v9 < 4) {
                  unsigned int v42 = (v45 | (v43 << (8 * v9))) + 3;
                }
                else {
                  unsigned int v42 = v45 + 3;
                }
                break;
              default:
                break;
            }
          }
          if (v42 == 2)
          {
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            a1[v9] = 2;
            swift_bridgeObjectRetain();
          }
          else if (v42 == 1)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
            a1[v9] = 1;
          }
          else
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
            unint64_t v48 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
            unint64_t v49 = (unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
            unint64_t v50 = *(void *)(v49 + 24);
            if (v50 < 0xFFFFFFFF)
            {
              long long v51 = *(_OWORD *)(v49 + 16);
              *(_OWORD *)unint64_t v48 = *(_OWORD *)v49;
              *(_OWORD *)(v48 + 16) = v51;
            }
            else
            {
              *(void *)(v48 + 24) = v50;
              (**(void (***)(void))(v50 - 8))();
            }
            a1[v9] = 0;
          }
          unint64_t v52 = (unint64_t)&a1[v65 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v53 = (unint64_t)&a2[v65 + 7] & 0xFFFFFFFFFFFFFFF8;
          uint64_t v54 = *(void *)(v53 + 24);
          *(void *)(v52 + 24) = v54;
          *(void *)(v52 + 32) = *(void *)(v53 + 32);
          (**(void (***)(void))(v54 - 8))();
          char v40 = 6;
LABEL_118:
          a1[v10] = v40;
          break;
        default:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
          unint64_t v34 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v35 = (unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v36 = *(void *)(v35 + 24);
          if (v36 < 0xFFFFFFFF)
          {
            long long v46 = *(_OWORD *)(v35 + 16);
            *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
            *(_OWORD *)(v34 + 16) = v46;
          }
          else
          {
            *(void *)(v34 + 24) = v36;
            (**(void (***)(void))(v36 - 8))();
          }
          a1[v10] = 0;
          break;
      }
      long long v55 = (void *)((unint64_t)&a1[v14 + 7] & 0xFFFFFFFFFFFFFFF8);
      int v56 = (void *)((unint64_t)&a2[v14 + 7] & 0xFFFFFFFFFFFFFFF8);
      *long long v55 = *v56;
      uint64_t v57 = (void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v58 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v57 = *v58;
      uint64_t v59 = (_OWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v60 = (long long *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v61 = *v60;
      long long v62 = v60[1];
      *(_OWORD *)((char *)v59 + 26) = *(long long *)((char *)v60 + 26);
      *uint64_t v59 = v61;
      v59[1] = v62;
      *(void *)(((unint64_t)v59 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v60 + 49) & 0xFFFFFFFFFFFFFFF8);
      a1[v11] = 0;
      swift_retain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

void *sub_1C11B4048(void *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if ((((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    unint64_t v10 = 8;
  }
  else {
    unint64_t v10 = (((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
  }
        + 8;
  unsigned int v11 = a2[v10];
  if (v11 >= 2 && (v10 & 0xFFFFFFF8) != 0) {
    unsigned int v11 = *(_DWORD *)a2 + 2;
  }
  if (v11 == 1)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v10) = 1;
  }
  else if (v11)
  {
    memcpy(a1, a2, v10 | 1);
  }
  else
  {
    unsigned int v13 = a2[v9];
    unsigned int v14 = v13 - 7;
    if (v13 >= 7)
    {
      if (v9 <= 3) {
        uint64_t v15 = v9;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v9 < 4) {
            goto LABEL_31;
          }
          goto LABEL_33;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v9 >= 4) {
            goto LABEL_33;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v9 < 4) {
            goto LABEL_31;
          }
          goto LABEL_33;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v9 < 4) {
LABEL_31:
          }
            unsigned int v13 = (v16 | (v14 << (8 * v9))) + 7;
          else {
LABEL_33:
          }
            unsigned int v13 = v16 + 7;
          break;
        default:
          break;
      }
    }
    unint64_t v17 = v8 + 1;
    unint64_t v18 = v9 + 1;
    switch(v13)
    {
      case 1u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        uint64_t v23 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
        long long v24 = v23[1];
        unint64_t v25 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v25 = *v23;
        v25[1] = v24;
        char v19 = 1;
        break;
      case 2u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        char v19 = 2;
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v19 = 3;
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v19 = 4;
        break;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v19 = 5;
        break;
      case 6u:
        unsigned int v26 = a2[v8];
        unsigned int v27 = v26 - 3;
        if (v26 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v28 = v8;
          }
          else {
            uint64_t v28 = 4;
          }
          switch(v28)
          {
            case 1:
              int v29 = *a2;
              goto LABEL_50;
            case 2:
              int v29 = *(unsigned __int16 *)a2;
              goto LABEL_50;
            case 3:
              int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_50;
            case 4:
              int v29 = *(_DWORD *)a2;
LABEL_50:
              if (v8 < 4) {
                unsigned int v26 = (v29 | (v27 << (8 * v8))) + 3;
              }
              else {
                unsigned int v26 = v29 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v26 == 2)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          char v30 = 2;
        }
        else if (v26 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
          char v30 = 1;
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
          char v30 = 0;
          int v31 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
          long long v32 = v31[1];
          id v33 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
          *id v33 = *v31;
          v33[1] = v32;
        }
        *((unsigned char *)a1 + v8) = v30;
        unint64_t v34 = ((unint64_t)a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v35 = (unint64_t)&a2[v17 + 7] & 0xFFFFFFFFFFFFFFF8;
        long long v36 = *(_OWORD *)v35;
        long long v37 = *(_OWORD *)(v35 + 16);
        *(void *)(v34 + 32) = *(void *)(v35 + 32);
        *(_OWORD *)unint64_t v34 = v36;
        *(_OWORD *)(v34 + 16) = v37;
        char v19 = 6;
        break;
      default:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        char v19 = 0;
        unint64_t v20 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
        long long v21 = v20[1];
        unsigned int v22 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v22 = *v20;
        v22[1] = v21;
        break;
    }
    *((unsigned char *)a1 + v9) = v19;
    unint64_t v38 = (void *)(((unint64_t)a1 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v39 = (void *)((unint64_t)&a2[v18 + 7] & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v38 = *v39;
    char v40 = (void *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v41 = (void *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
    *char v40 = *v41;
    unsigned int v42 = (_OWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v43 = (long long *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v44 = *v43;
    long long v45 = v43[1];
    *(_OWORD *)((char *)v42 + 26) = *(long long *)((char *)v43 + 26);
    *unsigned int v42 = v44;
    v42[1] = v45;
    *(void *)(((unint64_t)v42 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v43 + 49) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)a1 + v10) = 0;
  }
  return a1;
}

unsigned __int8 *sub_1C11B4540(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = AssociatedTypeWitness;
    uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8) {
      unint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    if (v8 <= 0x10) {
      unint64_t v9 = 16;
    }
    else {
      unint64_t v9 = v8;
    }
    if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v9) {
      unint64_t v10 = v9;
    }
    else {
      unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
    }
    if ((((((((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
      unint64_t v11 = 8;
    }
    else {
      unint64_t v11 = (((((((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
    }
          + 8;
    unsigned int v12 = a1[v11];
    if (v12 >= 2 && (v11 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = *(_DWORD *)a1 + 2;
    }
    unint64_t v62 = v9 + 1;
    unint64_t v14 = v10 + 1;
    if (v12 == 1)
    {
    }
    else if (!v12)
    {
      unsigned int v15 = a1[v10];
      unsigned int v16 = v15 - 7;
      if (v15 >= 7)
      {
        if (v10 <= 3) {
          uint64_t v17 = v10;
        }
        else {
          uint64_t v17 = 4;
        }
        switch(v17)
        {
          case 1:
            int v18 = *a1;
            if (v10 < 4) {
              goto LABEL_31;
            }
            goto LABEL_33;
          case 2:
            int v18 = *(unsigned __int16 *)a1;
            if (v10 >= 4) {
              goto LABEL_33;
            }
            goto LABEL_31;
          case 3:
            int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v10 < 4) {
              goto LABEL_31;
            }
            goto LABEL_33;
          case 4:
            int v18 = *(_DWORD *)a1;
            if (v10 < 4) {
LABEL_31:
            }
              unsigned int v15 = (v18 | (v16 << (8 * v10))) + 7;
            else {
LABEL_33:
            }
              unsigned int v15 = v18 + 7;
            break;
          default:
            break;
        }
      }
      uint64_t v61 = AssociatedTypeWitness;
      switch(v15)
      {
        case 2u:
          unint64_t v19 = v10 + 1;
          uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
          (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          break;
        case 3u:
        case 4u:
        case 5u:
          unint64_t v19 = v10 + 1;
          uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
          swift_bridgeObjectRelease();
          break;
        case 6u:
          unsigned int v22 = a1[v9];
          unsigned int v23 = v22 - 3;
          if (v22 >= 3)
          {
            if (v9 <= 3) {
              uint64_t v24 = v9;
            }
            else {
              uint64_t v24 = 4;
            }
            switch(v24)
            {
              case 1:
                int v25 = *a1;
                goto LABEL_48;
              case 2:
                int v25 = *(unsigned __int16 *)a1;
                goto LABEL_48;
              case 3:
                int v25 = *(unsigned __int16 *)a1 | (a1[2] << 16);
                goto LABEL_48;
              case 4:
                int v25 = *(_DWORD *)a1;
LABEL_48:
                if (v9 < 4) {
                  unsigned int v22 = (v25 | (v23 << (8 * v9))) + 3;
                }
                else {
                  unsigned int v22 = v25 + 3;
                }
                break;
              default:
                break;
            }
          }
          if (v22 == 2)
          {
            unint64_t v19 = v10 + 1;
            swift_bridgeObjectRelease();
          }
          else if (v22 == 1)
          {
            unint64_t v19 = v10 + 1;
            (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          }
          else
          {
            unint64_t v19 = v10 + 1;
            (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
            unint64_t v26 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
            if (*(void *)(v26 + 24) >= 0xFFFFFFFFuLL) {
              __swift_destroy_boxed_opaque_existential_1(v26);
            }
          }
          uint64_t v20 = v6;
          unint64_t v21 = (unint64_t)&a1[v62 + 7] & 0xFFFFFFFFFFFFFFF8;
          goto LABEL_58;
        default:
          unint64_t v19 = v10 + 1;
          uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
          (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          unint64_t v21 = (unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v21 + 24) >= 0xFFFFFFFFuLL) {
LABEL_58:
          }
            __swift_destroy_boxed_opaque_existential_1(v21);
          break;
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v6 = v20;
      unint64_t v14 = v19;
      uint64_t v5 = v61;
    }
    unsigned int v27 = a2[v11];
    if ((v11 & 0xFFFFFFF8) != 0 && v27 >= 2) {
      unsigned int v27 = *(_DWORD *)a2 + 2;
    }
    if (v27 == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[v11] = 1;
    }
    else if (v27)
    {
      memcpy(a1, a2, v11 | 1);
    }
    else
    {
      unsigned int v29 = a2[v10];
      unsigned int v30 = v29 - 7;
      if (v29 >= 7)
      {
        if (v10 <= 3) {
          uint64_t v31 = v10;
        }
        else {
          uint64_t v31 = 4;
        }
        switch(v31)
        {
          case 1:
            int v32 = *a2;
            if (v10 < 4) {
              goto LABEL_80;
            }
            goto LABEL_82;
          case 2:
            int v32 = *(unsigned __int16 *)a2;
            if (v10 >= 4) {
              goto LABEL_82;
            }
            goto LABEL_80;
          case 3:
            int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v10 < 4) {
              goto LABEL_80;
            }
            goto LABEL_82;
          case 4:
            int v32 = *(_DWORD *)a2;
            if (v10 < 4) {
LABEL_80:
            }
              unsigned int v29 = (v32 | (v30 << (8 * v10))) + 7;
            else {
LABEL_82:
            }
              unsigned int v29 = v32 + 7;
            break;
          default:
            break;
        }
      }
      switch(v29)
      {
        case 1u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
          long long v37 = (_OWORD *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
          long long v38 = v37[1];
          unint64_t v39 = (_OWORD *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v39 = *v37;
          v39[1] = v38;
          char v33 = 1;
          break;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
          char v33 = 2;
          break;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          char v33 = 3;
          break;
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          char v33 = 4;
          break;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          char v33 = 5;
          break;
        case 6u:
          unsigned int v40 = a2[v9];
          unsigned int v41 = v40 - 3;
          if (v40 >= 3)
          {
            if (v9 <= 3) {
              uint64_t v42 = v9;
            }
            else {
              uint64_t v42 = 4;
            }
            switch(v42)
            {
              case 1:
                int v43 = *a2;
                goto LABEL_99;
              case 2:
                int v43 = *(unsigned __int16 *)a2;
                goto LABEL_99;
              case 3:
                int v43 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                goto LABEL_99;
              case 4:
                int v43 = *(_DWORD *)a2;
LABEL_99:
                if (v9 < 4) {
                  unsigned int v40 = (v43 | (v41 << (8 * v9))) + 3;
                }
                else {
                  unsigned int v40 = v43 + 3;
                }
                break;
              default:
                break;
            }
          }
          if (v40 == 2)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            char v44 = 2;
          }
          else if (v40 == 1)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
            char v44 = 1;
          }
          else
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
            char v44 = 0;
            long long v45 = (_OWORD *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
            long long v46 = v45[1];
            long long v47 = (_OWORD *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
            *long long v47 = *v45;
            v47[1] = v46;
          }
          a1[v9] = v44;
          unint64_t v48 = (unint64_t)&a1[v62 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v49 = (unint64_t)&a2[v62 + 7] & 0xFFFFFFFFFFFFFFF8;
          long long v50 = *(_OWORD *)v49;
          long long v51 = *(_OWORD *)(v49 + 16);
          *(void *)(v48 + 32) = *(void *)(v49 + 32);
          *(_OWORD *)unint64_t v48 = v50;
          *(_OWORD *)(v48 + 16) = v51;
          char v33 = 6;
          break;
        default:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
          char v33 = 0;
          unint64_t v34 = (_OWORD *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
          long long v35 = v34[1];
          long long v36 = (_OWORD *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
          *long long v36 = *v34;
          v36[1] = v35;
          break;
      }
      a1[v10] = v33;
      unint64_t v52 = (void *)((unint64_t)&a1[v14 + 7] & 0xFFFFFFFFFFFFFFF8);
      unint64_t v53 = (void *)((unint64_t)&a2[v14 + 7] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v52 = *v53;
      uint64_t v54 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v55 = (void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v54 = *v55;
      int v56 = (_OWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v57 = (long long *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v58 = *v57;
      long long v59 = v57[1];
      *(_OWORD *)((char *)v56 + 26) = *(long long *)((char *)v57 + 26);
      *int v56 = v58;
      v56[1] = v59;
      *(void *)(((unint64_t)v56 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v57 + 49) & 0xFFFFFFFFFFFFFFF8);
      a1[v11] = 0;
    }
  }
  return a1;
}

uint64_t sub_1C11B4D5C(unsigned __int8 *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v4 <= 0x10) {
    unint64_t v4 = 16;
  }
  if ((v4 & 0xFFFFFFFFFFFFFFF8) + 48 > v4) {
    unint64_t v4 = (v4 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unint64_t v5 = (((((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v6 = 8;
  if (v5) {
    uint64_t v6 = v5;
  }
  if ((v6 & 0xFFFFFFF8) != 0) {
    int v7 = -253;
  }
  else {
    int v7 = -252;
  }
  if ((v6 & 0xFFFFFFF8) != 0) {
    unsigned int v8 = 253;
  }
  else {
    unsigned int v8 = 252;
  }
  if (!a2) {
    return 0;
  }
  if (v8 >= a2) {
    goto LABEL_32;
  }
  uint64_t v9 = v6 | 1;
  char v10 = 8 * (v6 | 1);
  if ((v6 | 1) <= 3)
  {
    unsigned int v11 = (v7 + a2 + ~(-1 << v10)) >> v10;
    if (v11 > 0xFFFE)
    {
      int v12 = *(_DWORD *)&a1[v9];
      if (!v12) {
        goto LABEL_32;
      }
      goto LABEL_25;
    }
    if (v11 > 0xFE)
    {
      int v12 = *(unsigned __int16 *)&a1[v9];
      if (!*(_WORD *)&a1[v9]) {
        goto LABEL_32;
      }
      goto LABEL_25;
    }
    if (!v11) {
      goto LABEL_32;
    }
  }
  int v12 = a1[v9];
  if (!a1[v9])
  {
LABEL_32:
    unsigned int v16 = a1[v6] ^ 0xFF;
    if (v8 > v16) {
      return v16 + 1;
    }
    else {
      return 0;
    }
  }
LABEL_25:
  int v14 = (v12 - 1) << v10;
  if (v9 >= 4) {
    int v14 = 0;
  }
  if (v9 == 1) {
    int v15 = *a1;
  }
  else {
    int v15 = *(_DWORD *)a1;
  }
  return v8 + (v15 | v14) + 1;
}

void sub_1C11B4F2C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v6 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v6 <= 0x10) {
    unint64_t v6 = 16;
  }
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 48 > v6) {
    unint64_t v6 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unint64_t v7 = (((((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (!v7) {
    unint64_t v7 = 8;
  }
  if ((v7 & 0xFFFFFFF8) != 0) {
    int v8 = -253;
  }
  else {
    int v8 = -252;
  }
  if ((v7 & 0xFFFFFFF8) != 0) {
    unsigned int v9 = 253;
  }
  else {
    unsigned int v9 = 252;
  }
  size_t v10 = v7 | 1;
  if (v9 >= a3)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = (v8 + a3 + ~(-1 << (8 * v10))) >> (8 * v10);
    if (v14 > 0xFFFE)
    {
      int v11 = 4;
    }
    else if (v14 >= 0xFF)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 != 0;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v12 = ~v9 + a2;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      v12 &= ~(-1 << (8 * v10));
      bzero(a1, v10);
      if (v10 == 1)
      {
        *a1 = v12;
LABEL_32:
        switch(v11)
        {
          case 1:
            a1[v10] = v13;
            return;
          case 2:
            *(_WORD *)&a1[v10] = v13;
            return;
          case 3:
            goto LABEL_42;
          case 4:
            *(_DWORD *)&a1[v10] = v13;
            return;
          default:
            return;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      int v13 = 1;
    }
    *(_DWORD *)a1 = v12;
    goto LABEL_32;
  }
  switch(v11)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1C11B51ACLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_35;
    default:
LABEL_35:
      if (a2) {
LABEL_36:
      }
        a1[v7] = -(char)a2;
      return;
  }
}

uint64_t sub_1C11B51D4(_DWORD *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v2 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  if ((v2 & 0xFFFFFFFFFFFFFFF8) + 48 > v2) {
    unint64_t v2 = (v2 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unint64_t v3 = (((((((v2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (!v3) {
    unint64_t v3 = 8;
  }
  uint64_t result = *((unsigned __int8 *)a1 + v3);
  if (result >= 2 && (v3 & 0xFFFFFFF8) != 0) {
    return (*a1 + 2);
  }
  return result;
}

void sub_1C11B52F4(unsigned int *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v4 <= 0x10) {
    unint64_t v4 = 16;
  }
  if ((v4 & 0xFFFFFFFFFFFFFFF8) + 48 > v4) {
    unint64_t v4 = (v4 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unint64_t v5 = (((((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v5) {
    size_t v6 = v5;
  }
  else {
    size_t v6 = 8;
  }
  if (a2 > 1)
  {
    if (v6) {
      char v7 = 2;
    }
    else {
      char v7 = a2;
    }
    if (v6) {
      unsigned int v8 = a2 - 2;
    }
    else {
      unsigned int v8 = 0;
    }
    *((unsigned char *)a1 + v6) = v7;
    bzero(a1, v6);
    *a1 = v8;
  }
  else
  {
    *((unsigned char *)a1 + v6) = a2;
  }
}

uint64_t type metadata accessor for FeedGroupEmitTaskGroupResult()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKeyMenu()
{
  return &type metadata for DebugFormatTemplateKeyMenu;
}

uint64_t sub_1C11B5458(uint64_t a1)
{
  unint64_t v2 = sub_1C11B5638();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11B5494(uint64_t a1)
{
  unint64_t v2 = sub_1C11B5638();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11B54D0(void *a1)
{
  sub_1C11B55DC();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  size_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11B5638();
  sub_1C1520F0C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1C11B55DC()
{
  if (!qword_1EA1AC890)
  {
    sub_1C11B5638();
    unint64_t v0 = sub_1C152083C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AC890);
    }
  }
}

unint64_t sub_1C11B5638()
{
  unint64_t result = qword_1EA1AC898;
  if (!qword_1EA1AC898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC898);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKeyMenu.CodingKeys()
{
  return &type metadata for DebugFormatTemplateKeyMenu.CodingKeys;
}

unint64_t sub_1C11B56A0()
{
  unint64_t result = qword_1EA1AC8A0;
  if (!qword_1EA1AC8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC8A0);
  }
  return result;
}

unint64_t sub_1C11B56F8()
{
  unint64_t result = qword_1EA1AC8A8;
  if (!qword_1EA1AC8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC8A8);
  }
  return result;
}

uint64_t sub_1C11B574C(void *a1, uint64_t a2)
{
  sub_1C11B63B0(0, &qword_1EA1AC8C8, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11B62B0();
  sub_1C1520F0C();
  v10[1] = a2;
  sub_1C11B6304();
  sub_1C11B6414(&qword_1EA1AC8D8, (void (*)(void))sub_1C11B635C);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C11B58DC()
{
  return 0x696F706B61657262;
}

uint64_t sub_1C11B58FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x696F706B61657262 && a2 == 0xEB0000000073746ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C11B59AC(uint64_t a1)
{
  unint64_t v2 = sub_1C11B62B0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11B59E8(uint64_t a1)
{
  unint64_t v2 = sub_1C11B62B0();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1C11B5A24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C11B5F74(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C11B5A50(void *a1)
{
  return sub_1C11B574C(a1, *v1);
}

uint64_t sub_1C11B5A6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  type metadata accessor for FormatJSONEncoder();
  swift_allocObject();
  sub_1C0EA5D40(MEMORY[0x1E4FBC860]);
  uint64_t v20 = a1;
  sub_1C11B5EC8();
  uint64_t v4 = sub_1C151533C();
  unint64_t v6 = v5;
  swift_release();
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v4 >> 32 < (int)v4) {
        __break(1u);
      }
      sub_1BFE95820(v4, v6);
      swift_retain();
      uint64_t v9 = sub_1C037F8CC((int)v4, v4 >> 32, v6 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
      uint64_t v11 = v10;
      sub_1BFE95664(v4, v6);
      if (v11) {
        goto LABEL_15;
      }
      goto LABEL_7;
    case 2uLL:
      uint64_t v12 = *(void *)(v4 + 16);
      uint64_t v13 = *(void *)(v4 + 24);
      sub_1BFE95820(v4, v6);
      swift_retain();
      swift_retain();
      uint64_t v9 = sub_1C037F8CC(v12, v13, v6 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C037FB34);
      uint64_t v11 = v14;
      swift_release();
      swift_release();
      if (v11) {
        goto LABEL_15;
      }
LABEL_7:
      uint64_t v18 = v4;
      unint64_t v19 = v6;
      sub_1BFE95820(v4, v6);
      sub_1C00C2AD4();
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(v16, (uint64_t)&v20);
        __swift_project_boxed_opaque_existential_1(&v20, v22);
        if (sub_1C152054C())
        {
          __swift_project_boxed_opaque_existential_1(&v20, v22);
          sub_1C152053C();
          sub_1BFE95664(v4, v6);
          uint64_t v11 = *((void *)&v16[0] + 1);
          uint64_t v9 = *(void *)&v16[0];
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
          goto LABEL_16;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
      }
      else
      {
        uint64_t v17 = 0;
        memset(v16, 0, sizeof(v16));
        sub_1C0FAA434((uint64_t)v16);
      }
      uint64_t v7 = sub_1C037F818(v4, v6);
LABEL_14:
      uint64_t v9 = v7;
      uint64_t v11 = v8;
LABEL_15:
      sub_1BFE95664(v4, v6);
LABEL_16:
      a2[3] = MEMORY[0x1E4FBB1A0];
      uint64_t result = sub_1BFE95664(v4, v6);
      *a2 = v9;
      a2[1] = v11;
      return result;
    case 3uLL:
      *(void *)((char *)v16 + 6) = 0;
      *(void *)&v16[0] = 0;
      sub_1C037FB34(&v20);
      sub_1BFE95664(v4, v6);
      uint64_t v9 = v20;
      uint64_t v11 = v21;
      goto LABEL_16;
    default:
      uint64_t v20 = v4;
      LOWORD(v21) = v6;
      BYTE2(v21) = BYTE2(v6);
      BYTE3(v21) = BYTE3(v6);
      BYTE4(v21) = BYTE4(v6);
      BYTE5(v21) = BYTE5(v6);
      uint64_t v7 = sub_1C151E75C();
      goto LABEL_14;
  }
}

uint64_t sub_1C11B5E34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C11B6144(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C11B5E5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C11B5A6C(*v1, a1);
}

uint64_t sub_1C11B5E64(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00DEBB4(*a1, *a2);
}

unint64_t sub_1C11B5E74()
{
  unint64_t result = qword_1EA1AC8B0;
  if (!qword_1EA1AC8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC8B0);
  }
  return result;
}

unint64_t sub_1C11B5EC8()
{
  unint64_t result = qword_1EA1AC8B8;
  if (!qword_1EA1AC8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC8B8);
  }
  return result;
}

void sub_1C11B5F1C()
{
  if (!qword_1EA1A2000)
  {
    sub_1C00C2AD4();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2000);
    }
  }
}

void *sub_1C11B5F74(void *a1)
{
  sub_1C11B63B0(0, &qword_1EA1AC8E8, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11B62B0();
  sub_1C1520EBC();
  if (!v1)
  {
    sub_1C11B6304();
    sub_1C11B6414(&qword_1EA1AC8F0, (void (*)(void))sub_1C11B6480);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = (void *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

uint64_t sub_1C11B6144(uint64_t a1)
{
  sub_1BFF6A008(a1, (uint64_t)v8);
  if (swift_dynamicCast())
  {
    uint64_t v1 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v1 = v6 & 0xFFFFFFFFFFFFLL;
    }
    if (v1)
    {
      uint64_t v2 = sub_1C02D2A68(v6, v7);
      unint64_t v4 = v3;
      type metadata accessor for FormatJSONDecoder();
      swift_allocObject();
      sub_1C06599C4(MEMORY[0x1E4FBC860]);
      sub_1C11B624C();
      sub_1C1517D9C();
      sub_1BFE95664(v2, v4);
      swift_release();
      return v8[0];
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

unint64_t sub_1C11B624C()
{
  unint64_t result = qword_1EA1AC8C0;
  if (!qword_1EA1AC8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC8C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatDebuggerBreakpoints()
{
  return &type metadata for DebugFormatDebuggerBreakpoints;
}

unint64_t sub_1C11B62B0()
{
  unint64_t result = qword_1EA1AC8D0;
  if (!qword_1EA1AC8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC8D0);
  }
  return result;
}

void sub_1C11B6304()
{
  if (!qword_1EA1AA548)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AA548);
    }
  }
}

unint64_t sub_1C11B635C()
{
  unint64_t result = qword_1EA1AC8E0;
  if (!qword_1EA1AC8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC8E0);
  }
  return result;
}

void sub_1C11B63B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C11B62B0();
    unint64_t v7 = a3(a1, &type metadata for DebugFormatDebuggerBreakpoints.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C11B6414(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C11B6304();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C11B6480()
{
  unint64_t result = qword_1EA1AC8F8;
  if (!qword_1EA1AC8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC8F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatDebuggerBreakpoints.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C11B6570);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatDebuggerBreakpoints.CodingKeys()
{
  return &type metadata for DebugFormatDebuggerBreakpoints.CodingKeys;
}

unint64_t sub_1C11B65AC()
{
  unint64_t result = qword_1EA1AC900;
  if (!qword_1EA1AC900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC900);
  }
  return result;
}

unint64_t sub_1C11B6604()
{
  unint64_t result = qword_1EA1AC908;
  if (!qword_1EA1AC908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC908);
  }
  return result;
}

unint64_t sub_1C11B665C()
{
  unint64_t result = qword_1EA1AC910;
  if (!qword_1EA1AC910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC910);
  }
  return result;
}

uint64_t FormatAudioTrack.Resolved.identifier.getter()
{
  type metadata accessor for FormatAudioTrack.Resolved();
  sub_1BFEC84E0();
  sub_1C151948C();
  id v0 = objc_msgSend(v3, sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v1 = sub_1C151E62C();

  return v1;
}

uint64_t FormatAudioTrack.Resolved.headline.getter()
{
  type metadata accessor for FormatAudioTrack.Resolved();
  sub_1BFEC84E0();
  sub_1C151948C();
  return v1;
}

uint64_t type metadata accessor for FormatAudioTrack.Resolved()
{
  uint64_t result = qword_1EB870AF0;
  if (!qword_1EB870AF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FormatAudioTrack.Resolved.title.getter()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = type metadata accessor for FormatAudioTrack.Resolved();
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  uint64_t v6 = *(void *)(v1 + 8);
  sub_1C11B68F4(v1, (uint64_t)v4);
  if (!v6)
  {
    sub_1BFEC84E0();
    sub_1C151948C();
    id v7 = objc_msgSend(v9[1], sel_title);
    swift_unknownObjectRelease();
    if (v7)
    {
      uint64_t v5 = sub_1C151E62C();
    }
    else
    {
      uint64_t v5 = 0;
    }
  }
  swift_bridgeObjectRetain();
  sub_1C11B6958((uint64_t)v4);
  return v5;
}

uint64_t sub_1C11B68F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatAudioTrack.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C11B6958(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatAudioTrack.Resolved();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id FormatAudioTrack.Resolved.featureName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatAudioTrack.Resolved();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(id *)(v0 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  sub_1C11B68F4(v1, (uint64_t)v4);
  if (!v6)
  {
    sub_1BFEC84E0();
    sub_1C151948C();
    id v5 = objc_msgSend(v9[1], sel_sourceChannel);
    swift_unknownObjectRelease();
    if (v5)
    {
      id v7 = objc_msgSend(v5, sel_name);
      swift_unknownObjectRelease();
      id v5 = (id)sub_1C151E62C();
    }
  }
  swift_bridgeObjectRetain();
  sub_1C11B6958((uint64_t)v4);
  return v5;
}

uint64_t FormatAudioTrack.Resolved.init(headline:overrides:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_1C151829C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2[1];
  v18[0] = *a2;
  uint64_t v11 = a2[2];
  uint64_t v12 = a2[3];
  type metadata accessor for FormatAudioTrack.Resolved();
  v18[1] = a1;
  uint64_t v13 = qword_1EB85E870;
  swift_unknownObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB85AB00);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
  MEMORY[0x1F4188790](v15);
  v18[-2] = sub_1BFF91B1C();
  swift_getKeyPath();
  sub_1C151947C();
  uint64_t result = swift_unknownObjectRelease();
  if (v10 == 1)
  {
    uint64_t v17 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v17 = v18[0];
  }
  *a3 = v17;
  a3[1] = v10;
  a3[2] = v11;
  a3[3] = v12;
  return result;
}

uint64_t sub_1C11B6CC8()
{
  if (*v0) {
    return 0x6E696C646165685FLL;
  }
  else {
    return 0x656469727265766FLL;
  }
}

uint64_t sub_1C11B6D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C11B7C6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11B6D30(uint64_t a1)
{
  unint64_t v2 = sub_1C11B7390();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11B6D6C(uint64_t a1)
{
  unint64_t v2 = sub_1C11B7390();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatAudioTrack.Resolved.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C11B73E4(0, &qword_1EB85C670, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11B7390();
  sub_1C1520F0C();
  long long v10 = v3[1];
  long long v13 = *v3;
  long long v14 = v10;
  v12[15] = 0;
  sub_1C0369E60();
  sub_1C152080C();
  if (!v2)
  {
    type metadata accessor for FormatAudioTrack.Resolved();
    LOBYTE(v13) = 1;
    sub_1BFEC84E0();
    sub_1BFDE0048((unint64_t *)&qword_1EB85ABF0);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatAudioTrack.Resolved.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  sub_1BFEC84E0();
  uint64_t v23 = v4;
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11B73E4(0, &qword_1EB85C5D0, MEMORY[0x1E4FBBDC0]);
  uint64_t v24 = v7;
  uint64_t v22 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = type metadata accessor for FormatAudioTrack.Resolved();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11B7390();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v19 = v10;
  long long v13 = v12;
  uint64_t v15 = v22;
  uint64_t v14 = v23;
  char v27 = 0;
  sub_1C0369F60();
  uint64_t v16 = v24;
  sub_1C15206EC();
  long long v17 = v26;
  *(_OWORD *)long long v13 = v25;
  *((_OWORD *)v13 + 1) = v17;
  LOBYTE(v25) = 1;
  sub_1BFDE0048((unint64_t *)&qword_1EB85AC00);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v13[*(int *)(v19 + 20)], v6, v14);
  sub_1C11B68F4((uint64_t)v13, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C11B6958((uint64_t)v13);
}

uint64_t sub_1C11B72BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAudioTrack.Resolved.init(from:)(a1, a2);
}

uint64_t sub_1C11B72D4(void *a1)
{
  return FormatAudioTrack.Resolved.encode(to:)(a1);
}

uint64_t sub_1C11B72EC()
{
  sub_1BFEC84E0();
  sub_1C151948C();
  id v0 = objc_msgSend(v3, sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v1 = sub_1C151E62C();

  return v1;
}

uint64_t sub_1C11B7378()
{
  return 8;
}

void *sub_1C11B7384(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1C11B7390()
{
  unint64_t result = qword_1EB85B808;
  if (!qword_1EB85B808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B808);
  }
  return result;
}

void sub_1C11B73E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C11B7390();
    unint64_t v7 = a3(a1, &_s8ResolvedV10CodingKeysON_2, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t *_s8ResolvedVwCP_2(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  id v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *id v3 = *a2;
    id v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1BFEC84E0();
    uint64_t v11 = v10;
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v8, v9, v11);
  }
  return v3;
}

uint64_t _s8ResolvedVwxx_3(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1BFEC84E0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *_s8ResolvedVwcp_3(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1BFEC84E0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v7, v8, v10);
  return a1;
}

void *_s8ResolvedVwca_3(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1BFEC84E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s8ResolvedVwtk_2(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_1BFEC84E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *_s8ResolvedVwta_3(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  sub_1BFEC84E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t _s8ResolvedVwet_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11B7850);
}

uint64_t sub_1C11B7850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1BFEC84E0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t _s8ResolvedVwst_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11B7920);
}

uint64_t sub_1C11B7920(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    sub_1BFEC84E0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C11B79C8()
{
  sub_1BFEC84E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *_s8ResolvedV10CodingKeysOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11B7B2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa_2()
{
  return &_s8ResolvedV10CodingKeysON_2;
}

unint64_t sub_1C11B7B68()
{
  unint64_t result = qword_1EA1AC918;
  if (!qword_1EA1AC918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC918);
  }
  return result;
}

unint64_t sub_1C11B7BC0()
{
  unint64_t result = qword_1EB85B820;
  if (!qword_1EB85B820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B820);
  }
  return result;
}

unint64_t sub_1C11B7C18()
{
  unint64_t result = qword_1EB85B818;
  if (!qword_1EB85B818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B818);
  }
  return result;
}

uint64_t sub_1C11B7C6C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E696C646165685FLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id static FeedScaling.scale(font:scaleValue:)(void *a1)
{
  sub_1C151793C();
  if (byte_1EA2B53C0 == 1)
  {
    double v2 = v1;
    objc_msgSend(a1, sel_pointSize);
    double v4 = round(v2 * (v3 * 4.0) * 0.25);
    if (byte_1EA2B53C0) {
      double v3 = v4;
    }
    id v5 = objc_msgSend(a1, sel_fontWithSize_, v3);
    return v5;
  }
  else
  {
    return a1;
  }
}

double static FeedScaling.scale(value:scaleValue:)(double result, double a2)
{
  double v2 = round(result * 4.0 * a2 * 0.25);
  if (byte_1EA2B53C0) {
    return v2;
  }
  return result;
}

double static FeedScaling.scale(value:scaleValue:)(double a1)
{
  sub_1C151793C();
  double v3 = 1.0;
  if (byte_1EA2B53C0) {
    double v3 = v2;
  }
  return v3 * a1;
}

double static FeedScaling.scale(value:scaleValue:)(double a1, double a2, double a3)
{
  if (!byte_1EA2B53C0) {
    a3 = 1.0;
  }
  return a3 * a1;
}

uint64_t FeedScaling.deinit()
{
  return v0;
}

uint64_t FeedScaling.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedScaling(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedScaling);
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatMicaData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  double v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *double v4 = *a2;
    double v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C151A8EC();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_retain();
    if (v12(v9, 1, v10))
    {
      sub_1BFF9F1E8();
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)v4 + v15;
    long long v17 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
  }
  return v4;
}

void *initializeWithCopy for FormatMicaData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151A8EC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  if (v11(v8, 1, v9))
  {
    sub_1BFF9F1E8();
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  return a1;
}

void *assignWithCopy for FormatMicaData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151A8EC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFF9F1E8();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  long long v17 = (char *)a2 + v15;
  int v18 = *(_DWORD *)v17;
  v16[4] = v17[4];
  *(_DWORD *)uint64_t v16 = v18;
  return a1;
}

void *initializeWithTake for FormatMicaData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151A8EC();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BFF9F1E8();
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_DWORD *)int v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  return a1;
}

void *assignWithTake for FormatMicaData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151A8EC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFF9F1E8();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  long long v17 = (char *)a2 + v15;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMicaData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11B86B0);
}

uint64_t sub_1C11B86B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFF9F1E8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 4);
    if (v12 > 2) {
      return (v12 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for FormatMicaData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11B8788);
}

void sub_1C11B8788(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1BFF9F1E8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 4) = -(char)a2;
  }
}

uint64_t sub_1C11B884C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C11B8B2C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40));
  v13[0] = sub_1C151B17C();
  v13[1] = v9;
  uint64_t v10 = sub_1C15164AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_1BFF27ECC();
  uint64_t v11 = sub_1C151FEFC();
  sub_1C11B8B84((uint64_t)v8);
  swift_bridgeObjectRelease();
  if ((unint64_t)(v11 + 1) < 3) {
    return (3u >> ((v11 + 1) & 7)) & 1;
  }
  type metadata accessor for ComparisonResult(0);
  uint64_t v14 = v11;
  uint64_t result = sub_1C1520CAC();
  __break(1u);
  return result;
}

uint64_t sub_1C11B89BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C11B8B2C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40));
  v13[0] = sub_1C151B17C();
  v13[1] = v9;
  uint64_t v10 = sub_1C15164AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_1BFF27ECC();
  uint64_t v11 = sub_1C151FEFC();
  sub_1C11B8B84((uint64_t)v8);
  swift_bridgeObjectRelease();
  if ((unint64_t)(v11 + 1) < 3) {
    return (6u >> ((v11 + 1) & 7)) & 1;
  }
  type metadata accessor for ComparisonResult(0);
  uint64_t v14 = v11;
  uint64_t result = sub_1C1520CAC();
  __break(1u);
  return result;
}

void sub_1C11B8B2C()
{
  if (!qword_1EB85C770)
  {
    sub_1C15164AC();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C770);
    }
  }
}

uint64_t sub_1C11B8B84(uint64_t a1)
{
  sub_1C11B8B2C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatBindingSection()
{
  return &type metadata for DebugFormatBindingSection;
}

uint64_t InternalErrorViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t InternalErrorViewLayout.iconImageViewFrame.getter()
{
  return swift_retain();
}

uint64_t InternalErrorViewLayout.titleLabelFrame.getter()
{
  return swift_retain();
}

uint64_t InternalErrorViewLayout.errorLabelFrame.getter()
{
  return swift_retain();
}

uint64_t InternalErrorViewLayout.subtitleLabelFrame.getter()
{
  return swift_retain();
}

uint64_t InternalErrorViewLayout.footerLabelFrame.getter()
{
  return swift_retain();
}

uint64_t InternalErrorViewLayout.buttonFrame.getter()
{
  return swift_retain();
}

uint64_t InternalErrorViewLayout.attachmentLabelFrame.getter()
{
  return swift_retain();
}

uint64_t InternalErrorViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v3 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v4 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v5 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v6 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v7 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v8 = sub_1C15172BC();
  swift_allocObject();
  uint64_t result = sub_1C15172BC();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = result;
  return result;
}

double InternalErrorViewLayout.Attributes.frame.getter()
{
  return *(double *)v0;
}

double InternalErrorViewLayout.Attributes.iconImageViewFrame.getter()
{
  return *(double *)(v0 + 32);
}

double InternalErrorViewLayout.Attributes.errorLabelFrame.getter()
{
  return *(double *)(v0 + 64);
}

double InternalErrorViewLayout.Attributes.titleLabelFrame.getter()
{
  return *(double *)(v0 + 96);
}

double InternalErrorViewLayout.Attributes.subtitleLabelFrame.getter()
{
  return *(double *)(v0 + 128);
}

double InternalErrorViewLayout.Attributes.footerLabelFrame.getter()
{
  return *(double *)(v0 + 160);
}

double InternalErrorViewLayout.Attributes.buttonFrame.getter()
{
  return *(double *)(v0 + 192);
}

double InternalErrorViewLayout.Attributes.attachmentLabelFrame.getter()
{
  return *(double *)(v0 + 224);
}

uint64_t sub_1C11B8E50(char a1)
{
  uint64_t result = 0x656D617266;
  switch(a1)
  {
    case 1:
    case 4:
      uint64_t result = 0xD000000000000012;
      break;
    case 2:
      uint64_t v3 = 0x4C726F727265;
      goto LABEL_4;
    case 3:
      uint64_t v3 = 0x4C656C746974;
LABEL_4:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6261000000000000;
      break;
    case 5:
      uint64_t result = 0xD000000000000010;
      break;
    case 6:
      uint64_t result = 0x72466E6F74747562;
      break;
    case 7:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C11B8F5C()
{
  return sub_1C11B8E50(*v0);
}

uint64_t sub_1C11B8F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C11BE4B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11B8F8C(uint64_t a1)
{
  unint64_t v2 = sub_1C11BCE28();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11B8FC8(uint64_t a1)
{
  unint64_t v2 = sub_1C11BCE28();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t InternalErrorViewLayout.Attributes.encode(to:)(void *a1)
{
  sub_1C11BE9A0(0, &qword_1EA1AC920, (uint64_t (*)(void))sub_1C11BCE28, (uint64_t)&type metadata for InternalErrorViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v25 - v7;
  long long v48 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v11 = *((void *)v1 + 4);
  uint64_t v46 = *((void *)v1 + 5);
  uint64_t v47 = v11;
  uint64_t v12 = *((void *)v1 + 6);
  uint64_t v44 = *((void *)v1 + 7);
  uint64_t v45 = v12;
  uint64_t v13 = *((void *)v1 + 8);
  uint64_t v42 = *((void *)v1 + 9);
  uint64_t v43 = v13;
  uint64_t v39 = *((void *)v1 + 10);
  uint64_t v38 = *((void *)v1 + 11);
  long long v35 = v1[6];
  uint64_t v37 = *((void *)v1 + 14);
  uint64_t v36 = *((void *)v1 + 15);
  long long v32 = v1[8];
  uint64_t v34 = *((void *)v1 + 18);
  uint64_t v33 = *((void *)v1 + 19);
  long long v29 = v1[10];
  uint64_t v31 = *((void *)v1 + 22);
  uint64_t v30 = *((void *)v1 + 23);
  uint64_t v41 = *((void *)v1 + 24);
  uint64_t v14 = *((void *)v1 + 26);
  uint64_t v40 = *((void *)v1 + 25);
  uint64_t v15 = *((void *)v1 + 27);
  uint64_t v16 = *((void *)v1 + 28);
  uint64_t v18 = *((void *)v1 + 29);
  uint64_t v17 = *((void *)v1 + 30);
  uint64_t v19 = *((void *)v1 + 31);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11BCE28();
  sub_1C1520F0C();
  long long v49 = v48;
  uint64_t v50 = v9;
  uint64_t v51 = v10;
  char v52 = 0;
  type metadata accessor for CGRect(0);
  sub_1BFE13360(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v20 = v42;
    uint64_t v21 = v43;
    uint64_t v28 = v15;
    *(void *)&long long v48 = v14;
    uint64_t v22 = v40;
    uint64_t v23 = v41;
    uint64_t v26 = v19;
    uint64_t v27 = v17;
    *(void *)&long long v49 = v47;
    *((void *)&v49 + 1) = v46;
    uint64_t v50 = v45;
    uint64_t v51 = v44;
    char v52 = 1;
    sub_1C152080C();
    *(void *)&long long v49 = v21;
    *((void *)&v49 + 1) = v20;
    uint64_t v50 = v39;
    uint64_t v51 = v38;
    char v52 = 2;
    sub_1C152080C();
    long long v49 = v35;
    uint64_t v50 = v37;
    uint64_t v51 = v36;
    char v52 = 3;
    sub_1C152080C();
    long long v49 = v32;
    uint64_t v50 = v34;
    uint64_t v51 = v33;
    char v52 = 4;
    sub_1C152080C();
    long long v49 = v29;
    uint64_t v50 = v31;
    uint64_t v51 = v30;
    char v52 = 5;
    sub_1C152080C();
    *(void *)&long long v49 = v23;
    *((void *)&v49 + 1) = v22;
    uint64_t v50 = v48;
    uint64_t v51 = v28;
    char v52 = 6;
    sub_1C152080C();
    *(void *)&long long v49 = v16;
    *((void *)&v49 + 1) = v18;
    uint64_t v50 = v27;
    uint64_t v51 = v26;
    char v52 = 7;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t InternalErrorViewLayout.Attributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C11BE9A0(0, &qword_1EB8710A8, (uint64_t (*)(void))sub_1C11BCE28, (uint64_t)&type metadata for InternalErrorViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = a1[3];
  int v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1C11BCE28();
  sub_1C1520EBC();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    char v59 = 0;
    sub_1BFE13360(&qword_1EB87A290, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v11 = v57;
    long long v12 = v58;
    char v59 = 1;
    sub_1C15206EC();
    long long v13 = v57;
    long long v14 = v58;
    char v59 = 2;
    sub_1C15206EC();
    uint64_t v52 = *((void *)&v14 + 1);
    uint64_t v53 = v14;
    uint64_t v54 = *((void *)&v13 + 1);
    uint64_t v55 = v13;
    long long v15 = v57;
    long long v16 = v58;
    char v59 = 3;
    sub_1C15206EC();
    uint64_t v48 = *((void *)&v16 + 1);
    uint64_t v49 = v16;
    uint64_t v50 = *((void *)&v15 + 1);
    uint64_t v51 = v15;
    long long v17 = v57;
    long long v18 = v58;
    char v59 = 4;
    sub_1C15206EC();
    uint64_t v44 = *((void *)&v18 + 1);
    uint64_t v45 = v18;
    uint64_t v46 = *((void *)&v17 + 1);
    uint64_t v47 = v17;
    long long v19 = v57;
    long long v20 = v58;
    char v59 = 5;
    sub_1C15206EC();
    uint64_t v40 = *((void *)&v20 + 1);
    uint64_t v41 = v20;
    uint64_t v42 = *((void *)&v19 + 1);
    uint64_t v43 = v19;
    long long v21 = v57;
    long long v22 = v58;
    char v59 = 6;
    sub_1C15206EC();
    uint64_t v38 = *((void *)&v57 + 1);
    uint64_t v39 = v57;
    uint64_t v36 = *((void *)&v58 + 1);
    uint64_t v37 = v58;
    char v59 = 7;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v12;
    uint64_t v24 = v54;
    *(void *)(a2 + 32) = v55;
    *(void *)(a2 + 40) = v24;
    uint64_t v25 = v52;
    *(void *)(a2 + 48) = v53;
    *(void *)(a2 + 56) = v25;
    uint64_t v26 = v50;
    *(void *)(a2 + 64) = v51;
    *(void *)(a2 + 72) = v26;
    uint64_t v27 = v48;
    *(void *)(a2 + 80) = v49;
    *(void *)(a2 + 88) = v27;
    uint64_t v28 = v46;
    *(void *)(a2 + 96) = v47;
    *(void *)(a2 + 104) = v28;
    uint64_t v29 = v44;
    *(void *)(a2 + 112) = v45;
    *(void *)(a2 + 120) = v29;
    uint64_t v30 = v42;
    *(void *)(a2 + 128) = v43;
    *(void *)(a2 + 136) = v30;
    uint64_t v31 = v40;
    *(void *)(a2 + 144) = v41;
    *(void *)(a2 + 152) = v31;
    *(_OWORD *)(a2 + 160) = v21;
    *(_OWORD *)(a2 + 176) = v22;
    uint64_t v32 = v38;
    *(void *)(a2 + 192) = v39;
    *(void *)(a2 + 200) = v32;
    uint64_t v33 = v36;
    *(void *)(a2 + 208) = v37;
    *(void *)(a2 + 216) = v33;
    long long v34 = v58;
    *(_OWORD *)(a2 + 224) = v57;
    *(_OWORD *)(a2 + 240) = v34;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
}

uint64_t sub_1C11B9A40(uint64_t a1)
{
  unint64_t v2 = sub_1C11BEC14();
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1C11B9A7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InternalErrorViewLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1C11B9A94(void *a1)
{
  return InternalErrorViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1C11B9AAC()
{
  sub_1C11BE908();
  return sub_1C151798C();
}

uint64_t InternalErrorViewLayout.Context.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalErrorViewLayout.Context.key.getter()
{
  return swift_retain();
}

id InternalErrorViewLayout.Context.title.getter()
{
  return *(id *)(v0 + 24);
}

void *InternalErrorViewLayout.Context.errorMessage.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

id InternalErrorViewLayout.Context.subtitle.getter()
{
  return *(id *)(v0 + 40);
}

id InternalErrorViewLayout.Context.footer.getter()
{
  return *(id *)(v0 + 48);
}

id InternalErrorViewLayout.Context.buttonTitle.getter()
{
  return *(id *)(v0 + 56);
}

id InternalErrorViewLayout.Context.attachmentTitle.getter()
{
  return *(id *)(v0 + 64);
}

id sub_1C11B9BB0()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.756862745, 0.431372549, 1.0, 1.0);
  qword_1EB93CB70 = (uint64_t)result;
  return result;
}

uint64_t sub_1C11B9C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEC1280(0, (unint64_t *)&qword_1EB85B950, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  v126 = (id *)((char *)&v125 - v12);
  id v127 = (id)type metadata accessor for InternalErrorViewModel();
  MEMORY[0x1F4188790](v127);
  uint64_t v128 = (id *)((char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v140 = sub_1C151772C();
  uint64_t v14 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  long long v16 = (char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v17 - 8);
  long long v19 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC1280(0, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, v10);
  MEMORY[0x1F4188790](v20 - 8);
  long long v22 = (uint64_t *)((char *)&v125 - v21);
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a4;
  uint64_t v23 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
  unint64_t v141 = a5;
  uint64_t v133 = a3;
  sub_1C11BEB4C(a3, (uint64_t)a5 + v23, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
  id v24 = objc_allocWithZone(MEMORY[0x1E4FB0848]);
  swift_retain();
  id v25 = objc_msgSend(v24, sel_init);
  objc_msgSend(v25, sel_setAlignment_, 1);
  sub_1BFEC1280(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
  uint64_t v138 = v26;
  uint64_t inited = swift_initStackObject();
  long long v137 = xmmword_1C152C7F0;
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  uint64_t v28 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  id v129 = v28;
  uint64_t v132 = a4;
  sub_1C0D88764(v22);
  uint64_t v29 = type metadata accessor for DebugGroupLayoutKey();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v22, 1, v29) == 1)
  {
    sub_1C11BEADC((uint64_t)v22, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey);
  }
  else
  {
    sub_1C11BEB4C((uint64_t)v22 + *(int *)(v29 + 28), (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    sub_1C11BEBB4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
    uint64_t v30 = v140;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v140);
    sub_1C11BEBB4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v31 = (void *)sub_1C151769C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v30);
    id v32 = objc_msgSend(v31, sel_horizontalSizeClass);

    if (v32 == (id)2)
    {
      uint64_t v33 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
      uint64_t v34 = sub_1C151F87C();
      goto LABEL_6;
    }
  }
  uint64_t v33 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  uint64_t v35 = (void *)sub_1C151E5EC();
  uint64_t v34 = sub_1C151F87C();

LABEL_6:
  *(void *)(inited + 40) = v34;
  uint64_t v36 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v33;
  *(void *)(inited + 72) = v36;
  uint64_t v37 = self;
  id v38 = v36;
  id v136 = v37;
  id v39 = objc_msgSend(v37, sel_whiteColor);
  uint64_t v40 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v39;
  uint64_t v41 = (void *)*MEMORY[0x1E4FB0738];
  uint64_t v135 = v40;
  *(void *)(inited + 104) = v40;
  *(void *)(inited + 112) = v41;
  uint64_t v134 = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(inited + 144) = v134;
  *(void *)(inited + 120) = v25;
  id v131 = v41;
  id v130 = v25;
  sub_1BFF991DC(inited);
  id v42 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v43 = (void *)sub_1C151E5EC();
  type metadata accessor for Key(0);
  uint64_t v45 = v44;
  uint64_t v46 = sub_1BFE13360((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
  uint64_t v47 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v42, sel_initWithString_attributes_, v43, v47);

  uint64_t v49 = v141;
  v141[3] = v48;
  uint64_t v50 = v128;
  sub_1C11BEB4C(v133, (uint64_t)v128, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v139 = v46;
  uint64_t v140 = v45;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v52 = v38;
    unint64_t v53 = 0x1E4F28000uLL;
    uint64_t v54 = type metadata accessor for InternalErrorViewModel;
    uint64_t v55 = (uint64_t)v50;
LABEL_13:
    sub_1C11BEBB4(v55, (uint64_t (*)(void))v54);
    goto LABEL_14;
  }
  int v56 = (char *)v50[1];
  id v142 = *v50;
  id v57 = v142;
  id v58 = v142;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  uint64_t v59 = type metadata accessor for FormatLayoutError();
  uint64_t v60 = v126;
  int v61 = swift_dynamicCast();
  unint64_t v62 = *(void (**)(id *, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56);
  if (v61)
  {
    v62(v60, 0, 1, v59);
    if (swift_getEnumCaseMultiPayload() == 64)
    {
      id v127 = *v60;
      id v63 = v60[2];
      id v125 = v60[1];

      uint64_t v64 = swift_initStackObject();
      *(_OWORD *)(v64 + 16) = v137;
      unint64_t v65 = v129;
      *(void *)(v64 + 32) = v129;
      id v66 = v65;
      sub_1C11BAA68((void *)(v64 + 40));
      *(void *)(v64 + 72) = v38;
      uint64_t v128 = (id *)v56;
      uint64_t v52 = v38;
      id v67 = v38;
      *(void *)(v64 + 80) = objc_msgSend(v136, sel_whiteColor);
      uint64_t v68 = v131;
      *(void *)(v64 + 104) = v135;
      *(void *)(v64 + 112) = v68;
      *(void *)(v64 + 144) = v134;
      uint64_t v69 = v130;
      *(void *)(v64 + 120) = v130;
      id v70 = v69;
      id v71 = v68;
      sub_1BFF991DC(v64);
      unint64_t v53 = 0x1E4F28000uLL;
      id v72 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v73 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      uint64_t v74 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      id v75 = objc_msgSend(v72, sel_initWithString_attributes_, v73, v74);

      uint64_t v49 = v141;
      swift_release();
      goto LABEL_15;
    }
    uint64_t v52 = v38;
    unint64_t v53 = 0x1E4F28000uLL;

    swift_release();
    uint64_t v54 = type metadata accessor for FormatLayoutError;
    uint64_t v55 = (uint64_t)v60;
    goto LABEL_13;
  }
  uint64_t v52 = v38;
  unint64_t v53 = 0x1E4F28000;
  v62(v60, 1, 1, v59);
  swift_release();

  sub_1C11BEADC((uint64_t)v60, (unint64_t *)&qword_1EB85B950, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError);
LABEL_14:
  id v75 = 0;
  unint64_t v65 = v129;
LABEL_15:
  v49[4] = v75;
  uint64_t v76 = swift_initStackObject();
  *(_OWORD *)(v76 + 16) = v137;
  *(void *)(v76 + 32) = v65;
  id v129 = v65;
  sub_1C11BAD70((void *)(v76 + 40));
  *(void *)(v76 + 72) = v52;
  uint64_t v128 = v52;
  id v77 = v136;
  *(void *)(v76 + 80) = objc_msgSend(v136, sel_whiteColor);
  uint64_t v78 = v134;
  uint64_t v79 = v135;
  uint64_t v80 = v130;
  uint64_t v81 = v131;
  *(void *)(v76 + 104) = v135;
  *(void *)(v76 + 112) = v81;
  *(void *)(v76 + 144) = v78;
  *(void *)(v76 + 120) = v80;
  id v130 = v80;
  id v127 = v81;
  sub_1BFF991DC(v76);
  id v82 = objc_allocWithZone(*(Class *)(v53 + 2840));
  double v83 = (void *)sub_1C151E5EC();
  uint64_t v84 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v85 = objc_msgSend(v82, sel_initWithString_attributes_, v83, v84);

  v141[5] = v85;
  uint64_t v86 = swift_initStackObject();
  *(_OWORD *)(v86 + 16) = v137;
  uint64_t v87 = v129;
  *(void *)(v86 + 32) = v129;
  id v129 = v87;
  sub_1C11BB084((void *)(v86 + 40));
  uint64_t v88 = v128;
  *(void *)(v86 + 72) = v128;
  id v89 = v88;
  *(void *)(v86 + 80) = objc_msgSend(v77, sel_whiteColor);
  uint64_t v90 = v127;
  *(void *)(v86 + 104) = v79;
  *(void *)(v86 + 112) = v90;
  *(void *)(v86 + 144) = v78;
  uint64_t v91 = v130;
  *(void *)(v86 + 120) = v130;
  id v131 = v91;
  id v130 = v90;
  sub_1BFF991DC(v86);
  id v92 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v93 = (void *)sub_1C151E5EC();
  uint64_t v94 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v95 = objc_msgSend(v92, sel_initWithString_attributes_, v93, v94);

  v141[6] = v95;
  uint64_t v96 = swift_initStackObject();
  *(_OWORD *)(v96 + 16) = xmmword_1C1527210;
  uint64_t v97 = v129;
  *(void *)(v96 + 32) = v129;
  uint64_t v98 = self;
  double v99 = *MEMORY[0x1E4FB09D0];
  id v100 = v97;
  id v101 = objc_msgSend(v98, sel_systemFontOfSize_weight_, 17.0, v99);
  uint64_t v102 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(v96 + 40) = v101;
  *(void *)(v96 + 64) = v102;
  *(void *)(v96 + 72) = v89;
  uint64_t v103 = qword_1EB893368;
  uint64_t v104 = v89;
  if (v103 != -1) {
    swift_once();
  }
  id v105 = (void *)qword_1EB93CB70;
  uint64_t v106 = v135;
  *(void *)(v96 + 104) = v135;
  *(void *)(v96 + 80) = v105;
  id v107 = v105;
  sub_1BFF991DC(v96);
  id v108 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v109 = (void *)sub_1C151E5EC();
  uint64_t v110 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v111 = objc_msgSend(v108, sel_initWithString_attributes_, v109, v110);

  uint64_t v112 = v141;
  v141[7] = v111;
  uint64_t v113 = swift_initStackObject();
  *(_OWORD *)(v113 + 16) = v137;
  *(void *)(v113 + 32) = v100;
  id v114 = v100;
  sub_1C11BB398((void *)(v113 + 40));
  *(void *)(v113 + 72) = v104;
  uint64_t v115 = v104;
  *(void *)(v113 + 80) = objc_msgSend(v136, sel_whiteColor);
  *(void *)(v113 + 104) = v106;
  uint64_t v116 = v130;
  *(void *)(v113 + 144) = v134;
  v117 = v131;
  *(void *)(v113 + 112) = v116;
  *(void *)(v113 + 120) = v117;
  id v118 = v117;
  id v119 = v116;
  sub_1BFF991DC(v113);
  id v120 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v121 = (void *)sub_1C151E5EC();
  uint64_t v122 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v123 = objc_msgSend(v120, sel_initWithString_attributes_, v121, v122);

  swift_release();
  uint64_t result = sub_1C11BEBB4(v133, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
  v112[8] = v123;
  return result;
}

uint64_t sub_1C11BAA68@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1C151772C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC1280(0, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v18 - v10;
  sub_1C0D88764((uint64_t *)((char *)&v18 - v10));
  uint64_t v12 = type metadata accessor for DebugGroupLayoutKey();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_1C11BEADC((uint64_t)v11, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey);
    double v13 = 13.0;
  }
  else
  {
    sub_1C11BEB4C((uint64_t)&v11[*(int *)(v12 + 28)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    sub_1C11BEBB4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1C11BEBB4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v14 = (void *)sub_1C151769C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v15 = (unint64_t)objc_msgSend(v14, sel_horizontalSizeClass);

    double v13 = 13.0;
    if (v15 <= 2) {
      double v13 = dbl_1C15D3960[v15];
    }
  }
  id v16 = objc_msgSend(self, sel_italicSystemFontOfSize_, v13);
  uint64_t result = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  a1[3] = result;
  *a1 = v16;
  return result;
}

uint64_t sub_1C11BAD70@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1C151772C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC1280(0, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v18 - v10;
  sub_1C0D88764((uint64_t *)((char *)&v18 - v10));
  uint64_t v12 = type metadata accessor for DebugGroupLayoutKey();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_1C11BEADC((uint64_t)v11, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey);
    double v13 = 15.0;
  }
  else
  {
    sub_1C11BEB4C((uint64_t)&v11[*(int *)(v12 + 28)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    sub_1C11BEBB4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1C11BEBB4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v14 = (void *)sub_1C151769C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v15 = (unint64_t)objc_msgSend(v14, sel_horizontalSizeClass);

    double v13 = 15.0;
    if (v15 <= 2) {
      double v13 = dbl_1C15D3948[v15];
    }
  }
  id v16 = objc_msgSend(self, sel_systemFontOfSize_weight_, v13, *MEMORY[0x1E4FB09D0]);
  uint64_t result = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  a1[3] = result;
  *a1 = v16;
  return result;
}

uint64_t sub_1C11BB084@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1C151772C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC1280(0, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v18 - v10;
  sub_1C0D88764((uint64_t *)((char *)&v18 - v10));
  uint64_t v12 = type metadata accessor for DebugGroupLayoutKey();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_1C11BEADC((uint64_t)v11, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey);
    double v13 = 13.0;
  }
  else
  {
    sub_1C11BEB4C((uint64_t)&v11[*(int *)(v12 + 28)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    sub_1C11BEBB4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1C11BEBB4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v14 = (void *)sub_1C151769C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v15 = (unint64_t)objc_msgSend(v14, sel_horizontalSizeClass);

    double v13 = 13.0;
    if (v15 <= 2) {
      double v13 = dbl_1C15D3960[v15];
    }
  }
  id v16 = objc_msgSend(self, sel_systemFontOfSize_weight_, v13, *MEMORY[0x1E4FB09D0]);
  uint64_t result = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  a1[3] = result;
  *a1 = v16;
  return result;
}

uint64_t sub_1C11BB398@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1C151772C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC1280(0, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v18 - v10;
  sub_1C0D88764((uint64_t *)((char *)&v18 - v10));
  uint64_t v12 = type metadata accessor for DebugGroupLayoutKey();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_1C11BEADC((uint64_t)v11, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey);
    double v13 = 13.0;
  }
  else
  {
    sub_1C11BEB4C((uint64_t)&v11[*(int *)(v12 + 28)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    sub_1C11BEBB4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1C11BEBB4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v14 = (void *)sub_1C151769C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v15 = (unint64_t)objc_msgSend(v14, sel_horizontalSizeClass);

    double v13 = 13.0;
    if (v15 <= 2) {
      double v13 = dbl_1C15D3960[v15];
    }
  }
  id v16 = objc_msgSend(self, sel_systemFontOfSize_weight_, v13, *MEMORY[0x1E4FB09B8]);
  uint64_t result = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  a1[3] = result;
  *a1 = v16;
  return result;
}

uint64_t sub_1C11BB6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C11BE9A0(0, &qword_1EB8707B8, (uint64_t (*)(void))sub_1C11BE81C, (uint64_t)&type metadata for InternalErrorViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = &v29[-v10];
  uint64_t v32 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v8 + 104))(&v29[-v10], *MEMORY[0x1E4FAB9E0], v7, v9);
  sub_1C11BE870();
  sub_1C11BE9A0(0, &qword_1EB870798, (uint64_t (*)(void))sub_1C11BE81C, (uint64_t)&type metadata for InternalErrorViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
  uint64_t v17 = (void *)(v16 + v15);
  uint64_t v18 = sub_1C151766C();
  MEMORY[0x1C18C6DE0](v18, 0.0, v19, v20, v21, v22);
  sub_1C151F2DC();
  *uint64_t v17 = v23;
  v17[1] = v24;
  void v17[2] = v25;
  void v17[3] = v26;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E4FAB5D8], v13);
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C11BEA10(0, &qword_1EB8707A8, MEMORY[0x1E4FAB6F0]);
  sub_1C11BE95C(&qword_1EB8707A0, &qword_1EB8707A8, v27);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1C11BB9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a3;
  sub_1C11BE9A0(0, &qword_1EB8707B8, (uint64_t (*)(void))sub_1C11BE81C, (uint64_t)&type metadata for InternalErrorViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v25 = a1;
  sub_1C11BBD14((uint64_t *)((char *)&v22 - v7));
  sub_1C11BE870();
  sub_1C11BE9A0(0, &qword_1EB870798, (uint64_t (*)(void))sub_1C11BE81C, (uint64_t)&type metadata for InternalErrorViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1527210;
  unint64_t v15 = (char *)(v14 + v13);
  *(void *)unint64_t v15 = 0x4071800000000000;
  uint64_t v16 = *(void (**)(char *, void, uint64_t))(v11 + 104);
  v16(v15, *MEMORY[0x1E4FAB660], v10);
  uint64_t v17 = &v15[v12];
  uint64_t v18 = *MEMORY[0x1E4FAB5F8];
  sub_1C11BE9A0(0, &qword_1EB893200, (uint64_t (*)(void))sub_1C11BE81C, (uint64_t)&type metadata for InternalErrorViewLayout, MEMORY[0x1E4FAB618]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
  v16(v17, *MEMORY[0x1E4FAB620], v10);
  uint64_t v24 = v23;
  double v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11BEA10(0, &qword_1EB870790, MEMORY[0x1E4FAB4D0]);
  sub_1C11BE95C(&qword_1EB870788, &qword_1EB870790, v20);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C11BBD14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1C151769C();
  id v3 = objc_msgSend(v2, sel_horizontalSizeClass);

  if (v3) {
    BOOL v4 = v3 == (id)2;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4 || v3 != (id)1)
  {
    uint64_t v6 = swift_allocObject();
    sub_1C151764C();
    *(double *)(v6 + 16) = v7 * 0.6;
    *a1 = v6;
    uint64_t v5 = (unsigned int *)MEMORY[0x1E4FABA00];
  }
  else
  {
    uint64_t v5 = (unsigned int *)MEMORY[0x1E4FAB9E0];
  }
  uint64_t v8 = *v5;
  sub_1C11BE9A0(0, &qword_1EB8707B8, (uint64_t (*)(void))sub_1C11BE81C, (uint64_t)&type metadata for InternalErrorViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v10 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);
  return v10(a1, v8, v9);
}

uint64_t sub_1C11BBE3C(uint64_t a1, void *a2)
{
  uint64_t v113 = a2;
  uint64_t v127 = a1;
  id v123 = sub_1C11BE81C;
  sub_1C11BE9A0(0, &qword_1EB8707B8, (uint64_t (*)(void))sub_1C11BE81C, (uint64_t)&type metadata for InternalErrorViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v7 = (uint64_t *)((char *)&v105 - v6);
  uint64_t v132 = a1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0x4038000000000000;
  *double v7 = v8;
  unsigned int v129 = *MEMORY[0x1E4FABA08];
  uint64_t v128 = *(void (**)(uint64_t *))(v5 + 104);
  uint64_t v131 = v5 + 104;
  v128(v7);
  uint64_t v9 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11BEA10(0, &qword_1EB870790, MEMORY[0x1E4FAB4D0]);
  uint64_t v130 = v10;
  uint64_t v112 = sub_1C11BE95C(&qword_1EB870788, &qword_1EB870790, v9);
  sub_1C151738C();
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  uint64_t v126 = v5 + 8;
  id v111 = v11;
  v11(v7, v4);
  uint64_t v132 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v13 = v12;
  uint64_t v14 = swift_allocBox();
  uint64_t v16 = v15;
  uint64_t v17 = (uint64_t *)((char *)v15 + *(int *)(v13 + 48));
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0x4040000000000000;
  *uint64_t v16 = v18;
  uint64_t v19 = *MEMORY[0x1E4FAB798];
  uint64_t v20 = sub_1C151786C();
  double v21 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);
  v21(v16, v19, v20);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0x4040000000000000;
  *uint64_t v17 = v22;
  v21(v17, v19, v20);
  *double v7 = v14;
  uint64_t v23 = v128;
  ((void (*)(uint64_t *, void, uint64_t))v128)(v7, *MEMORY[0x1E4FAB9E8], v4);
  sub_1C11BE870();
  uint64_t v124 = v24;
  uint64_t v25 = (uint64_t (*)(void))v123;
  sub_1C11BE9A0(0, &qword_1EB870798, (uint64_t (*)(void))v123, (uint64_t)&type metadata for InternalErrorViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v125 = v26;
  uint64_t v27 = *(unsigned __int8 *)(*(void *)(v26 - 8) + 80);
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v29 = (v27 + 32) & ~v27;
  uint64_t v106 = *(void *)(v28 + 72);
  uint64_t v110 = v29 + v106;
  uint64_t v121 = v27 | 7;
  uint64_t v122 = v29;
  uint64_t v30 = swift_allocObject();
  long long v109 = xmmword_1C1529AE0;
  *(_OWORD *)(v30 + 16) = xmmword_1C1529AE0;
  uint64_t v31 = v30 + v29;
  unsigned int v120 = *MEMORY[0x1E4FAB5F8];
  uint64_t v32 = v120;
  sub_1C11BE9A0(0, &qword_1EB893200, v25, (uint64_t)&type metadata for InternalErrorViewLayout, MEMORY[0x1E4FAB618]);
  uint64_t v119 = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(void (**)(uint64_t, void, uint64_t))(v34 + 104);
  uint64_t v117 = v34 + 104;
  id v118 = v35;
  v35(v31, v32, v33);
  unsigned int v116 = *MEMORY[0x1E4FAB620];
  uint64_t v36 = *(void (**)(void))(v28 + 104);
  id v123 = (unint64_t (*)())(v28 + 104);
  uint64_t v115 = (void (*)(uint64_t, void, uint64_t))v36;
  v36(v31);
  uint64_t v114 = sub_1BFE13360(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = v111;
  v111(v7, v4);
  uint64_t v38 = v127;
  uint64_t v132 = v127;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = 0x4020000000000000;
  *double v7 = v39;
  ((void (*)(uint64_t *, void, uint64_t))v23)(v7, v129, v4);
  sub_1C151738C();
  v37(v7, v4);
  uint64_t v132 = v38;
  swift_getKeyPath();
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v113;
  id v42 = (void *)v113[3];
  *(void *)(v40 + 16) = v42;
  *double v7 = v40;
  LODWORD(KeyPath) = *MEMORY[0x1E4FAB968];
  v23(v7);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v109;
  uint64_t v44 = v43 + v122;
  v118(v43 + v122, v120, v119);
  v115(v44, v116, v125);
  id v45 = v42;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v107 = v4;
  v111(v7, v4);
  uint64_t v46 = (void *)v41[4];
  if (v46)
  {
    uint64_t v47 = v127;
    uint64_t v132 = v127;
    swift_getKeyPath();
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v46;
    *double v7 = v48;
    uint64_t v49 = v107;
    uint64_t v50 = v128;
    ((void (*)(uint64_t *, void, uint64_t))v128)(v7, KeyPath, v107);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = v109;
    uint64_t v52 = v51 + v122;
    v118(v51 + v122, v120, v119);
    v115(v52, v116, v125);
    id v105 = v46;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v53 = v111;
    v111(v7, v49);
    uint64_t v132 = v47;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0x4020000000000000;
    *double v7 = v54;
    ((void (*)(uint64_t *, void, uint64_t))v50)(v7, v129, v49);
    sub_1C151738C();

    v53(v7, v49);
  }
  uint64_t v55 = v127;
  uint64_t v132 = v127;
  swift_getKeyPath();
  uint64_t v56 = swift_allocObject();
  id v57 = (void *)v113[5];
  *(void *)(v56 + 16) = v57;
  *double v7 = v56;
  uint64_t v58 = v107;
  uint64_t v59 = v128;
  ((void (*)(uint64_t *, void, uint64_t))v128)(v7, KeyPath, v107);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v109;
  uint64_t v61 = v60 + v122;
  v118(v60 + v122, v120, v119);
  v115(v61, v116, v125);
  id v62 = v57;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  id v63 = v111;
  v111(v7, v58);
  uint64_t v132 = v55;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = 0x4030000000000000;
  *double v7 = v64;
  ((void (*)(uint64_t *, void, uint64_t))v59)(v7, v129, v58);
  sub_1C151738C();
  v63(v7, v58);
  uint64_t v132 = v55;
  id v105 = (id)swift_getKeyPath();
  uint64_t v65 = swift_allocObject();
  id v66 = (void *)v113[7];
  *(void *)(v65 + 16) = v66;
  *double v7 = v65;
  ((void (*)(uint64_t *, void, uint64_t))v59)(v7, KeyPath, v58);
  uint64_t v67 = v106;
  uint64_t v68 = 2 * v106;
  uint64_t v69 = v122;
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1C152C7F0;
  id v71 = (void *)(v70 + v69);
  *id v71 = 0x406B800000000000;
  uint64_t v72 = v125;
  uint64_t v73 = (void (*)(char *, void, uint64_t))v115;
  v115((uint64_t)v71, *MEMORY[0x1E4FAB660], v125);
  uint64_t v74 = (void *)((char *)v71 + v67);
  char *v74 = 0x4030000000000000;
  uint64_t v75 = *MEMORY[0x1E4FAB7E8];
  uint64_t v76 = sub_1C15178EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 104))((char *)v74, v75, v76);
  uint64_t v77 = *MEMORY[0x1E4FAB858];
  uint64_t v78 = sub_1C15179EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 104))((char *)v74, v77, v78);
  v73((char *)v74, *MEMORY[0x1E4FAB560], v72);
  uint64_t v79 = (char *)v71 + v68;
  v118((uint64_t)v79, v120, v119);
  v73(v79, v116, v72);
  id v80 = v66;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v81 = v107;
  id v82 = v111;
  v111(v7, v107);
  uint64_t v83 = v127;
  uint64_t v132 = v127;
  uint64_t v84 = swift_allocObject();
  *(void *)(v84 + 16) = 0x4030000000000000;
  *double v7 = v84;
  id v85 = v128;
  ((void (*)(uint64_t *, void, uint64_t))v128)(v7, v129, v81);
  sub_1C151738C();
  v82(v7, v81);
  uint64_t v86 = v82;
  uint64_t v132 = v83;
  swift_getKeyPath();
  uint64_t v87 = swift_allocObject();
  uint64_t v88 = (void *)v113[6];
  *(void *)(v87 + 16) = v88;
  *double v7 = v87;
  ((void (*)(uint64_t *, void, uint64_t))v85)(v7, KeyPath, v81);
  uint64_t v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = v109;
  uint64_t v90 = v89 + v122;
  v118(v89 + v122, v120, v119);
  v115(v90, v116, v125);
  id v91 = v88;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  v82(v7, v81);
  uint64_t v92 = v127;
  uint64_t v132 = v127;
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = 0x4030000000000000;
  *double v7 = v93;
  uint64_t v94 = v81;
  uint64_t v95 = v81;
  uint64_t v96 = v128;
  ((void (*)(uint64_t *, void, uint64_t))v128)(v7, v129, v94);
  sub_1C151738C();
  uint64_t v97 = v95;
  v86(v7, v95);
  uint64_t v132 = v92;
  swift_getKeyPath();
  uint64_t v98 = swift_allocObject();
  double v99 = (void *)v113[8];
  *(void *)(v98 + 16) = v99;
  *double v7 = v98;
  ((void (*)(uint64_t *, void, uint64_t))v96)(v7, KeyPath, v97);
  uint64_t v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = v109;
  uint64_t v101 = v100 + v122;
  v118(v100 + v122, v120, v119);
  v115(v101, v116, v125);
  id v102 = v99;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  v86(v7, v97);
  uint64_t v132 = v127;
  uint64_t v103 = swift_allocObject();
  *(void *)(v103 + 16) = 0x4030000000000000;
  *double v7 = v103;
  ((void (*)(uint64_t *, void, uint64_t))v128)(v7, v129, v97);
  sub_1C151738C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v86)(v7, v97);
}

unint64_t sub_1C11BCE28()
{
  unint64_t result = qword_1EB870DA8;
  if (!qword_1EB870DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870DA8);
  }
  return result;
}

unint64_t sub_1C11BCE80()
{
  unint64_t result = qword_1EB870DC8;
  if (!qword_1EB870DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870DC8);
  }
  return result;
}

unint64_t sub_1C11BCED8()
{
  unint64_t result = qword_1EA1AC928;
  if (!qword_1EA1AC928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC928);
  }
  return result;
}

unint64_t sub_1C11BCF30()
{
  unint64_t result = qword_1EB870DE0;
  if (!qword_1EB870DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870DE0);
  }
  return result;
}

unint64_t sub_1C11BCF88()
{
  unint64_t result = qword_1EB870DD8;
  if (!qword_1EB870DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870DD8);
  }
  return result;
}

unint64_t sub_1C11BCFE0()
{
  unint64_t result = qword_1EB870DC0;
  if (!qword_1EB870DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870DC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalErrorViewLayout()
{
  return &type metadata for InternalErrorViewLayout;
}

uint64_t getEnumTagSinglePayload for InternalErrorViewLayout.Attributes(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 256)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for InternalErrorViewLayout.Attributes(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 256) = v3;
  return result;
}

ValueMetadata *type metadata accessor for InternalErrorViewLayout.Attributes()
{
  return &type metadata for InternalErrorViewLayout.Attributes;
}

uint64_t *initializeBufferWithCopyOfBuffer for InternalErrorViewLayout.Context(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *char v3 = *a2;
    char v3 = (uint64_t *)(v22 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = (void *)a2[3];
    a1[2] = a2[2];
    a1[3] = (uint64_t)v6;
    double v7 = (void *)a2[4];
    uint64_t v8 = (void *)a2[5];
    a1[4] = (uint64_t)v7;
    a1[5] = (uint64_t)v8;
    uint64_t v9 = (void *)a2[6];
    uint64_t v10 = (void *)a2[7];
    a1[6] = (uint64_t)v9;
    a1[7] = (uint64_t)v10;
    uint64_t v11 = *(int *)(a3 + 48);
    uint64_t v48 = (void *)a2[8];
    uint64_t v49 = (uint64_t *)((char *)a1 + v11);
    uint64_t v12 = (char *)a2 + v11;
    a1[8] = (uint64_t)v48;
    type metadata accessor for InternalErrorViewModel();
    swift_bridgeObjectRetain();
    swift_retain();
    id v13 = v6;
    id v14 = v7;
    id v15 = v8;
    id v16 = v9;
    id v17 = v10;
    id v18 = v48;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = *((void *)v12 + 1);
      *uint64_t v49 = *(void *)v12;
      v49[1] = v19;
      unint64_t v20 = *((void *)v12 + 2);
      swift_bridgeObjectRetain();
      if (v20 >= 0xB)
      {
        uint64_t v26 = *((void *)v12 + 3);
        uint64_t v27 = *((void *)v12 + 4);
        v49[2] = v20;
        v49[3] = v26;
        uint64_t v28 = *((void *)v12 + 5);
        uint64_t v29 = *((void *)v12 + 6);
        v49[4] = v27;
        v49[5] = v28;
        v49[6] = v29;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v21 = *((_OWORD *)v12 + 2);
        *((_OWORD *)v49 + 1) = *((_OWORD *)v12 + 1);
        *((_OWORD *)v49 + 2) = v21;
        v49[6] = *((void *)v12 + 6);
      }
      uint64_t v30 = *((void *)v12 + 8);
      v49[7] = *((void *)v12 + 7);
      v49[8] = v30;
      v49[9] = *((void *)v12 + 9);
      sub_1C0AEFBB4();
      uint64_t v32 = *(int *)(v31 + 80);
      uint64_t v33 = (char *)v49 + v32;
      uint64_t v34 = &v12[v32];
      *uint64_t v33 = v12[v32];
      uint64_t v35 = (uint64_t)v49 + v32 + 8;
      long long v36 = *((_OWORD *)v34 + 2);
      *((_OWORD *)v33 + 2) = v36;
      uint64_t v37 = v36;
      uint64_t v38 = **(void (***)(uint64_t, char *, uint64_t))(v36 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v35, v34 + 8, v37);
      uint64_t v39 = *((void *)v34 + 7);
      *((void *)v33 + 6) = *((void *)v34 + 6);
      *((void *)v33 + 7) = v39;
      uint64_t v40 = *((void *)v34 + 9);
      *((void *)v33 + 8) = *((void *)v34 + 8);
      *((void *)v33 + 9) = v40;
      *((void *)v33 + 10) = *((void *)v34 + 10);
      v33[88] = v34[88];
      *((void *)v33 + 12) = *((void *)v34 + 12);
      uint64_t v41 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v42 = v41[13];
      uint64_t v46 = &v34[v42];
      uint64_t v47 = &v33[v42];
      uint64_t v43 = sub_1C151787C();
      id v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v47, v46, v43);
      *(void *)&v33[v41[14]] = *(void *)&v34[v41[14]];
      *(void *)&v33[v41[15]] = *(void *)&v34[v41[15]];
      v33[v41[16]] = v34[v41[16]];
      *(void *)&v33[v41[17]] = *(void *)&v34[v41[17]];
      *(void *)&v33[v41[18]] = *(void *)&v34[v41[18]];
      *(void *)&v33[v41[19]] = *(void *)&v34[v41[19]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v23 = *(void *)v12;
      id v24 = *(id *)v12;
      uint64_t v25 = *((void *)v12 + 1);
      *uint64_t v49 = v23;
      v49[1] = v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for InternalErrorViewLayout.Context(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();

  int v4 = (char *)a1 + *(int *)(a2 + 48);
  type metadata accessor for InternalErrorViewModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    if (*((void *)v4 + 2) >= 0xBuLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0AEFBB4();
    uint64_t v6 = &v4[*(int *)(v5 + 80)];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v6 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v7 = &v6[*(int *)(type metadata accessor for GroupLayoutBindingContext() + 52)];
    uint64_t v8 = sub_1C151787C();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {

    return swift_release();
  }
}

void *initializeWithCopy for InternalErrorViewLayout.Context(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  int v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  uint64_t v6 = (void *)a2[5];
  a1[4] = v5;
  a1[5] = v6;
  double v7 = (void *)a2[6];
  uint64_t v8 = (void *)a2[7];
  a1[6] = v7;
  a1[7] = v8;
  uint64_t v9 = (void *)a2[8];
  uint64_t v10 = *(int *)(a3 + 48);
  uint64_t v48 = (void *)((char *)a1 + v10);
  uint64_t v11 = (char *)a2 + v10;
  a1[8] = v9;
  type metadata accessor for InternalErrorViewModel();
  swift_bridgeObjectRetain();
  swift_retain();
  id v12 = v4;
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  id v16 = v8;
  id v17 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = *((void *)v11 + 1);
    *uint64_t v48 = *(void *)v11;
    v48[1] = v18;
    unint64_t v19 = *((void *)v11 + 2);
    swift_bridgeObjectRetain();
    if (v19 >= 0xB)
    {
      uint64_t v25 = *((void *)v11 + 3);
      uint64_t v26 = *((void *)v11 + 4);
      v48[2] = v19;
      v48[3] = v25;
      uint64_t v27 = *((void *)v11 + 5);
      uint64_t v28 = *((void *)v11 + 6);
      v48[4] = v26;
      v48[5] = v27;
      v48[6] = v28;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v20 = *((_OWORD *)v11 + 2);
      *((_OWORD *)v48 + 1) = *((_OWORD *)v11 + 1);
      *((_OWORD *)v48 + 2) = v20;
      v48[6] = *((void *)v11 + 6);
    }
    uint64_t v29 = *((void *)v11 + 8);
    v48[7] = *((void *)v11 + 7);
    v48[8] = v29;
    v48[9] = *((void *)v11 + 9);
    sub_1C0AEFBB4();
    uint64_t v31 = *(int *)(v30 + 80);
    uint64_t v32 = (char *)v48 + v31;
    uint64_t v33 = &v11[v31];
    *uint64_t v32 = v11[v31];
    uint64_t v34 = (uint64_t)v48 + v31 + 8;
    long long v35 = *((_OWORD *)v33 + 2);
    *((_OWORD *)v32 + 2) = v35;
    uint64_t v36 = v35;
    uint64_t v37 = **(void (***)(uint64_t, char *, uint64_t))(v35 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v34, v33 + 8, v36);
    uint64_t v38 = *((void *)v33 + 7);
    *((void *)v32 + 6) = *((void *)v33 + 6);
    *((void *)v32 + 7) = v38;
    uint64_t v39 = *((void *)v33 + 9);
    *((void *)v32 + 8) = *((void *)v33 + 8);
    *((void *)v32 + 9) = v39;
    *((void *)v32 + 10) = *((void *)v33 + 10);
    v32[88] = v33[88];
    *((void *)v32 + 12) = *((void *)v33 + 12);
    uint64_t v40 = (int *)type metadata accessor for GroupLayoutBindingContext();
    uint64_t v41 = v40[13];
    id v45 = &v33[v41];
    uint64_t v46 = &v32[v41];
    uint64_t v42 = sub_1C151787C();
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v24 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44(v46, v45, v42);
    *(void *)&v32[v40[14]] = *(void *)&v33[v40[14]];
    *(void *)&v32[v40[15]] = *(void *)&v33[v40[15]];
    v32[v40[16]] = v33[v40[16]];
    *(void *)&v32[v40[17]] = *(void *)&v33[v40[17]];
    *(void *)&v32[v40[18]] = *(void *)&v33[v40[18]];
    *(void *)&v32[v40[19]] = *(void *)&v33[v40[19]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v21 = *(void *)v11;
    id v22 = *(id *)v11;
    uint64_t v23 = *((void *)v11 + 1);
    *uint64_t v48 = v21;
    v48[1] = v23;
    swift_retain();
    id v24 = a1;
  }
  swift_storeEnumTagMultiPayload();
  return v24;
}

void *assignWithCopy for InternalErrorViewLayout.Context(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a2[3];
  double v7 = (void *)a1[3];
  a1[3] = v6;
  id v8 = v6;

  uint64_t v9 = (void *)a1[4];
  uint64_t v10 = (void *)a2[4];
  a1[4] = v10;
  id v11 = v10;

  id v12 = (void *)a2[5];
  id v13 = (void *)a1[5];
  a1[5] = v12;
  id v14 = v12;

  id v15 = (void *)a2[6];
  id v16 = (void *)a1[6];
  a1[6] = v15;
  id v17 = v15;

  uint64_t v18 = (void *)a2[7];
  unint64_t v19 = (void *)a1[7];
  a1[7] = v18;
  id v20 = v18;

  uint64_t v21 = (void *)a2[8];
  id v22 = (void *)a1[8];
  a1[8] = v21;
  id v23 = v21;

  if (a1 != a2)
  {
    uint64_t v24 = *(int *)(a3 + 48);
    uint64_t v25 = (void *)((char *)a1 + v24);
    uint64_t v26 = (char *)a2 + v24;
    sub_1C11BEBB4((uint64_t)a1 + v24, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
    type metadata accessor for InternalErrorViewModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v25 = *(void *)v26;
      v25[1] = *((void *)v26 + 1);
      unint64_t v27 = *((void *)v26 + 2);
      swift_bridgeObjectRetain();
      if (v27 >= 0xB)
      {
        void v25[2] = v27;
        v25[3] = *((void *)v26 + 3);
        v25[4] = *((void *)v26 + 4);
        v25[5] = *((void *)v26 + 5);
        v25[6] = *((void *)v26 + 6);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v28 = *((_OWORD *)v26 + 1);
        long long v29 = *((_OWORD *)v26 + 2);
        v25[6] = *((void *)v26 + 6);
        *((_OWORD *)v25 + 1) = v28;
        *((_OWORD *)v25 + 2) = v29;
      }
      v25[7] = *((void *)v26 + 7);
      v25[8] = *((void *)v26 + 8);
      v25[9] = *((void *)v26 + 9);
      sub_1C0AEFBB4();
      uint64_t v33 = *(int *)(v32 + 80);
      uint64_t v34 = (char *)v25 + v33;
      long long v35 = &v26[v33];
      *uint64_t v34 = v26[v33];
      uint64_t v45 = (uint64_t)&v26[v33 + 8];
      uint64_t v46 = (uint64_t)v25 + v33 + 8;
      uint64_t v36 = *(void *)&v26[v33 + 32];
      *((void *)v34 + 4) = v36;
      *((void *)v34 + 5) = *(void *)&v26[v33 + 40];
      uint64_t v37 = **(void (***)(uint64_t, uint64_t, uint64_t))(v36 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37(v46, v45, v36);
      *((void *)v34 + 6) = *((void *)v35 + 6);
      *((void *)v34 + 7) = *((void *)v35 + 7);
      *((void *)v34 + 8) = *((void *)v35 + 8);
      *((void *)v34 + 9) = *((void *)v35 + 9);
      *((void *)v34 + 10) = *((void *)v35 + 10);
      v34[88] = v35[88];
      *((void *)v34 + 12) = *((void *)v35 + 12);
      uint64_t v38 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v39 = v38[13];
      uint64_t v43 = &v35[v39];
      uint64_t v44 = &v34[v39];
      uint64_t v40 = sub_1C151787C();
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(v44, v43, v40);
      *(void *)&v34[v38[14]] = *(void *)&v35[v38[14]];
      *(void *)&v34[v38[15]] = *(void *)&v35[v38[15]];
      v34[v38[16]] = v35[v38[16]];
      *(void *)&v34[v38[17]] = *(void *)&v35[v38[17]];
      *(void *)&v34[v38[18]] = *(void *)&v35[v38[18]];
      *(void *)&v34[v38[19]] = *(void *)&v35[v38[19]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v30 = *(void *)v26;
      id v31 = *(id *)v26;
      *uint64_t v25 = v30;
      v25[1] = *((void *)v26 + 1);
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for InternalErrorViewLayout.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 48);
  double v7 = (_OWORD *)(a1 + v6);
  id v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for InternalErrorViewModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v10 = v8[1];
    *double v7 = *v8;
    v7[1] = v10;
    v7[2] = v8[2];
    uint64_t v11 = *((void *)v8 + 7);
    *((void *)v7 + 6) = *((void *)v8 + 6);
    *((void *)v7 + 7) = v11;
    v7[4] = v8[4];
    sub_1C0AEFBB4();
    uint64_t v13 = *(int *)(v12 + 80);
    id v14 = (char *)v7 + v13;
    id v15 = (char *)v8 + v13;
    *id v14 = *((unsigned char *)v8 + v13);
    *((void *)v14 + 5) = *(void *)((char *)v8 + v13 + 40);
    *(_OWORD *)(v14 + 24) = *(_OWORD *)((char *)v8 + v13 + 24);
    *(_OWORD *)(v14 + 8) = *(_OWORD *)((char *)v8 + v13 + 8);
    long long v16 = *(_OWORD *)((char *)v8 + v13 + 64);
    *((_OWORD *)v14 + 3) = *(_OWORD *)((char *)v8 + v13 + 48);
    *((_OWORD *)v14 + 4) = v16;
    *((void *)v14 + 10) = *(void *)((char *)v8 + v13 + 80);
    v14[88] = *((unsigned char *)v8 + v13 + 88);
    *((void *)v14 + 12) = *(void *)((char *)v8 + v13 + 96);
    id v17 = (int *)type metadata accessor for GroupLayoutBindingContext();
    uint64_t v18 = v17[13];
    unint64_t v19 = &v14[v18];
    id v20 = &v15[v18];
    uint64_t v21 = sub_1C151787C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    *(void *)&v14[v17[14]] = *(void *)&v15[v17[14]];
    *(void *)&v14[v17[15]] = *(void *)&v15[v17[15]];
    v14[v17[16]] = v15[v17[16]];
    *(void *)&v14[v17[17]] = *(void *)&v15[v17[17]];
    *(void *)&v14[v17[18]] = *(void *)&v15[v17[18]];
    *(void *)&v14[v17[19]] = *(void *)&v15[v17[19]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for InternalErrorViewLayout.Context(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  double v7 = (void *)a1[3];
  a1[3] = a2[3];

  id v8 = (void *)a1[4];
  a1[4] = a2[4];

  uint64_t v9 = (void *)a1[5];
  a1[5] = a2[5];

  long long v10 = (void *)a1[6];
  a1[6] = a2[6];

  uint64_t v11 = (void *)a1[7];
  a1[7] = a2[7];

  uint64_t v12 = (void *)a1[8];
  a1[8] = a2[8];

  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 48);
    id v14 = (char *)a1 + v13;
    id v15 = (char *)a2 + v13;
    sub_1C11BEBB4((uint64_t)a1 + v13, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
    uint64_t v16 = type metadata accessor for InternalErrorViewModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v17 = *((_OWORD *)v15 + 1);
      *(_OWORD *)id v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v17;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      uint64_t v18 = *((void *)v15 + 7);
      *((void *)v14 + 6) = *((void *)v15 + 6);
      *((void *)v14 + 7) = v18;
      *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
      sub_1C0AEFBB4();
      uint64_t v20 = *(int *)(v19 + 80);
      uint64_t v21 = &v14[v20];
      id v22 = &v15[v20];
      *uint64_t v21 = v15[v20];
      *((void *)v21 + 5) = *(void *)&v15[v20 + 40];
      *(_OWORD *)(v21 + 24) = *(_OWORD *)&v15[v20 + 24];
      *(_OWORD *)(v21 + 8) = *(_OWORD *)&v15[v20 + 8];
      long long v23 = *(_OWORD *)&v15[v20 + 64];
      *((_OWORD *)v21 + 3) = *(_OWORD *)&v15[v20 + 48];
      *((_OWORD *)v21 + 4) = v23;
      *((void *)v21 + 10) = *(void *)&v15[v20 + 80];
      v21[88] = v15[v20 + 88];
      *((void *)v21 + 12) = *(void *)&v15[v20 + 96];
      uint64_t v24 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v25 = v24[13];
      uint64_t v26 = &v21[v25];
      unint64_t v27 = &v22[v25];
      uint64_t v28 = sub_1C151787C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      *(void *)&v21[v24[14]] = *(void *)&v22[v24[14]];
      *(void *)&v21[v24[15]] = *(void *)&v22[v24[15]];
      v21[v24[16]] = v22[v24[16]];
      *(void *)&v21[v24[17]] = *(void *)&v22[v24[17]];
      *(void *)&v21[v24[18]] = *(void *)&v22[v24[18]];
      *(void *)&v21[v24[19]] = *(void *)&v22[v24[19]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalErrorViewLayout.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11BE138);
}

uint64_t sub_1C11BE138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for InternalErrorViewModel();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for InternalErrorViewLayout.Context(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11BE1FC);
}

uint64_t sub_1C11BE1FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for InternalErrorViewModel();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InternalErrorViewLayout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11BE370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalErrorViewLayout.Attributes.CodingKeys()
{
  return &type metadata for InternalErrorViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1C11BE3AC()
{
  unint64_t result = qword_1EA1AC930;
  if (!qword_1EA1AC930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC930);
  }
  return result;
}

unint64_t sub_1C11BE404()
{
  unint64_t result = qword_1EB870DB8;
  if (!qword_1EB870DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870DB8);
  }
  return result;
}

unint64_t sub_1C11BE45C()
{
  unint64_t result = qword_1EB870DB0;
  if (!qword_1EB870DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870DB0);
  }
  return result;
}

uint64_t sub_1C11BE4B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C1636A50 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x62614C726F727265 && a2 == 0xEF656D6172466C65 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x62614C656C746974 && a2 == 0xEF656D6172466C65 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C1636A70 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1636A90 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x72466E6F74747562 && a2 == 0xEB00000000656D61 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1636AB0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unint64_t sub_1C11BE81C()
{
  unint64_t result = qword_1EB870DF0;
  if (!qword_1EB870DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870DF0);
  }
  return result;
}

void sub_1C11BE870()
{
  if (!qword_1EB8710B0)
  {
    sub_1C11BE9A0(255, &qword_1EB870798, (uint64_t (*)(void))sub_1C11BE81C, (uint64_t)&type metadata for InternalErrorViewLayout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8710B0);
    }
  }
}

uint64_t sub_1C11BE900(uint64_t a1)
{
  return sub_1C11BB9CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C11BE908()
{
  unint64_t result = qword_1EB870DD0;
  if (!qword_1EB870DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870DD0);
  }
  return result;
}

uint64_t sub_1C11BE95C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C11BEA10(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C11BE9A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C11BEA08(uint64_t a1)
{
  return sub_1C11BBE3C(a1, *(void **)(v1 + 16));
}

void sub_1C11BEA10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for InternalErrorViewLayout;
    v8[1] = &type metadata for InternalErrorViewLayout.Attributes;
    void v8[2] = sub_1C11BE81C();
    v8[3] = sub_1C11BE908();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C11BEA94()
{
  return swift_deallocObject();
}

uint64_t sub_1C11BEAA4()
{
  return swift_deallocObject();
}

uint64_t sub_1C11BEADC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEC1280(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C11BEB4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C11BEBB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C11BEC14()
{
  unint64_t result = qword_1EA1AC938;
  if (!qword_1EA1AC938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC938);
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V11()
{
  return &type metadata for A12_V11;
}

uint64_t sub_1C11BEC78(void *a1)
{
  uint64_t v3 = v1;
  sub_1C11C2500(0, &qword_1EA1AC9F0, (uint64_t (*)(void))sub_1C11C24AC, (uint64_t)&type metadata for A12_V11.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11C24AC();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C11C2568(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C11BEEC0(uint64_t a1)
{
  unint64_t v2 = sub_1C11C24AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11BEEFC(uint64_t a1)
{
  unint64_t v2 = sub_1C11C24AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C11BEF38@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C11C21FC(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C11BEF80(void *a1)
{
  return sub_1C11BEC78(a1);
}

uint64_t sub_1C11BEF98()
{
  sub_1C11C1E8C();
  return sub_1C151798C();
}

uint64_t sub_1C11BF014@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C11C2500(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C11BF0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  unint64_t v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  long long v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  uint64_t v74 = &type metadata for A12_V11;
  unint64_t v20 = sub_1C0186824();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *uint64_t v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  uint64_t v74 = &type metadata for A12_V11;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C00191E0(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  id v31 = (void *)(v30 + 16);
  swift_beginAccess();
  uint64_t v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    *id v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    uint64_t v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    *id v31 = v32;
  }
  v32[2] = v35 + 1;
  uint64_t v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  uint64_t v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B83508, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    uint64_t v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      uint64_t v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      void *v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      uint64_t v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      void *v41 = v42;
    }
    v42[2] = v45 + 1;
    uint64_t v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B83530, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A12_V11.Bound();
    uint64_t v51 = v53;
    v53[3] = v50;
    v51[4] = sub_1C11C2568(&qword_1EA1AC950, (void (*)(uint64_t))type metadata accessor for A12_V11.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

double sub_1C11BF874@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v35 = sub_1C1517A9C();
  *(void *)&long long v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  v33[0] = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00191E0(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = type metadata accessor for A12_V11.Bound();
  uint64_t v6 = v1 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = v6;
  v33[1] = v6;
  uint64_t v10 = *(void *)(v6 + v8);
  uint64_t v11 = *(void *)(v10 + 16);
  double v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BFC66384(v11 + 16, (uint64_t)&v43);
  sub_1BFC66384(v11 + 56, (uint64_t)v42);
  double v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v43, v14 + 16);
  sub_1BFC773DC(v42, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v41[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v41, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v10 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v42);
  sub_1BFC66384(v15 + 56, (uint64_t)v41);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v42, v17 + 16);
  sub_1BFC773DC(v41, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v40[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v40, (uint64_t *)&v43);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v18 = sub_1BFEB3714((uint64_t)&v43, *(void *)(*(void *)(v2 + *(int *)(v5 + 28)) + 16) - 1);
  *(void *)&long long v43 = inited;
  sub_1BFEB37F8(v18);
  uint64_t v19 = v43;
  v39[2] = v2;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C06472C0(v20, v19, (void (*)(char *, uint64_t))sub_1C11C1E28, (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *MEMORY[0x1E4FAB6D8];
  uint64_t v23 = sub_1C151759C();
  uint64_t v24 = v33[0];
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v33[0], v22, v23);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v24, *MEMORY[0x1E4FAB8F0], v35);
  uint64_t v37 = v21;
  uint64_t v38 = v2;
  sub_1C11C1F44(0, &qword_1EA1AC970, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v35 = sub_1C1517BEC();
  uint64_t v25 = sub_1C1517BFC();
  long long v34 = v43;
  uint64_t v26 = v44;
  uint64_t v27 = v45;
  *(void *)&long long v43 = v21;
  *(void *)&v42[0] = v46;
  MEMORY[0x1F4188790](v25);
  sub_1C00191E0(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v43 = v28;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v29 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v36;
  *uint64_t v36 = 0;
  double result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v27;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  *((void *)v30 + 5) = v29;
  *((void *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1C11BFE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C11BFEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C11C2500(0, &qword_1EA1AC988, (uint64_t (*)(void))sub_1C11C1E38, (uint64_t)&type metadata for A12_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 12;
  uint64_t *v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C11C1F44(0, &qword_1EA1AC990, MEMORY[0x1E4FAB6F0]);
  sub_1C11C1F00(&qword_1EA1AC998, &qword_1EA1AC990, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C11C00E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a3;
  uint64_t v62 = a2;
  uint64_t v58 = sub_1C11C1E38;
  sub_1C11C2500(0, &qword_1EA1AC988, (uint64_t (*)(void))sub_1C11C1E38, (uint64_t)&type metadata for A12_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v45 - v7);
  uint64_t v65 = a1;
  uint64_t v9 = a1;
  uint64_t v46 = a1;
  uint64_t v10 = sub_1C151729C();
  uint64_t v11 = swift_allocBox();
  unsigned int v56 = *MEMORY[0x1E4FAB4E8];
  uint64_t v52 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v55 = *(void (**)(uint64_t))(v12 + 104);
  uint64_t v57 = v12 + 104;
  v55(v13);
  *uint64_t v8 = v11;
  unsigned int v54 = *MEMORY[0x1E4FAB940];
  uint64_t v14 = *(void (**)(uint64_t *))(v6 + 104);
  v14(v8);
  v45[1] = v6 + 104;
  uint64_t v15 = v14;
  uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11C1F44(0, &qword_1EA1AC9A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v18 = v17;
  v45[2] = sub_1C11C1F00(&qword_1EA1AC9A8, &qword_1EA1AC9A0, v16);
  sub_1C151738C();
  uint64_t v60 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  uint64_t v61 = v6 + 8;
  v60(v8, v5);
  uint64_t v65 = v9;
  sub_1C0386118();
  uint64_t v20 = v19;
  uint64_t v21 = swift_allocBox();
  uint64_t v23 = (char *)v22 + *(int *)(v20 + 48);
  *uint64_t v22 = 7;
  unsigned int v50 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = v50;
  uint64_t v49 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v49 - 8);
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 104);
  uint64_t v51 = v25 + 104;
  v48(v23, v24, v49);
  *uint64_t v8 = v21;
  unsigned int v47 = *MEMORY[0x1E4FAB960];
  uint64_t v26 = v5;
  uint64_t v27 = v15;
  v15(v8);
  uint64_t v64 = v62;
  uint64_t v53 = v18;
  sub_1C151731C();
  uint64_t v28 = v60;
  v60(v8, v26);
  uint64_t v29 = v46;
  uint64_t v65 = v46;
  uint64_t v30 = v52;
  uint64_t v31 = swift_allocBox();
  ((void (*)(uint64_t, void, uint64_t))v55)(v32, v56, v30);
  *uint64_t v8 = v31;
  ((void (*)(uint64_t *, void, uint64_t))v27)(v8, v54, v26);
  sub_1C151738C();
  v28(v8, v26);
  uint64_t v65 = v29;
  uint64_t v33 = swift_allocBox();
  uint64_t v35 = (char *)v34 + *(int *)(v20 + 48);
  *long long v34 = 2;
  v48(v35, v50, v49);
  *uint64_t v8 = v33;
  uint64_t v36 = v26;
  ((void (*)(uint64_t *, void, uint64_t))v27)(v8, v47, v26);
  sub_1C11C1FD0();
  sub_1C11C2500(0, &qword_1EA1AC9B8, (uint64_t (*)(void))v58, (uint64_t)&type metadata for A12_V11.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v38 = v37;
  uint64_t v39 = *(void *)(v37 - 8);
  unint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1C1529AE0;
  uint64_t v42 = (double *)(v41 + v40);
  uint64_t v43 = v59 + *(int *)(type metadata accessor for A12_V11.Bound() + 24);
  *uint64_t v42 = *(double *)(v43 + *(int *)(type metadata accessor for GroupLayoutContext() + 32)) * 135.0;
  (*(void (**)(double *, void, uint64_t))(v39 + 104))(v42, *MEMORY[0x1E4FAB670], v38);
  uint64_t v63 = v62;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v60)(v8, v36);
}

uint64_t sub_1C11C06D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11C2500(0, &qword_1EA1AC988, (uint64_t (*)(void))sub_1C11C1E38, (uint64_t)&type metadata for A12_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v30 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAB9E0], v12);
  if (*(void *)(a2 + 16))
  {
    sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v29 = KeyPath;
    uint64_t v18 = qword_1F1B8A398;
    uint64_t v19 = (char *)v6 + v4[5];
    uint64_t v20 = *MEMORY[0x1E4FAB8C8];
    uint64_t v21 = sub_1C1517A7C();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v28 = v12;
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v21);
    uint64_t v24 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = v18;
    *(uint64_t *)((char *)v6 + v4[6]) = 0;
    *(uint64_t *)((char *)v6 + v4[7]) = (uint64_t)v24;
    id v25 = v24;
    sub_1C04B9C70((uint64_t)v10, (uint64_t)v6);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C11C1F44(0, &qword_1EA1AC9A0, MEMORY[0x1E4FAB4D0]);
    sub_1C11C1F00(&qword_1EA1AC9A8, &qword_1EA1AC9A0, v26);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C11C0AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C11C2500(0, &qword_1EA1AC988, (uint64_t (*)(void))sub_1C11C1E38, (uint64_t)&type metadata for A12_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11C1F44(0, &qword_1EA1AC9A0, MEMORY[0x1E4FAB4D0]);
  sub_1C11C1F00(&qword_1EA1AC9A8, &qword_1EA1AC9A0, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C11C0D64(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = sub_1C1517A9C();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v43 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151794C();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11C2500(0, &qword_1EA1AC988, (uint64_t (*)(void))sub_1C11C1E38, (uint64_t)&type metadata for A12_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v39 - v23;
  uint64_t v46 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E4FAB9E0], v21);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v39 = KeyPath;
  uint64_t v40 = v21;
  sub_1BFF1AFA4(a2+ *(void *)(v17 + 72)+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v19, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v26 = (char *)v15 + v13[5];
  uint64_t v27 = *MEMORY[0x1E4FAB8C8];
  uint64_t v28 = sub_1C1517A7C();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v26, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  uint64_t v30 = (void **)MEMORY[0x1E4FB27D0];
  void *v15 = 0;
  *(void *)((char *)v15 + v13[6]) = 0;
  uint64_t v31 = *v30;
  *(void *)((char *)v15 + v13[7]) = v31;
  uint64_t v2 = *MEMORY[0x1E4FB2848];
  uint64_t v3 = *(void *)(MEMORY[0x1E4FB2848] + 8);
  uint64_t v4 = *(void *)(MEMORY[0x1E4FB2848] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x1E4FB2848] + 24);
  uint64_t v32 = qword_1EB87CC48;
  id v33 = v31;
  if (v32 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v34 = swift_release();
  __n128 v35 = MEMORY[0x1F4188790](v34);
  *(&v39 - 8) = v2;
  *(&v39 - 7) = v3;
  *(&v39 - 6) = v4;
  *(&v39 - 5) = v5;
  *(&v39 - 4) = (uint64_t)v12;
  *(&v39 - 3) = (uint64_t)v19;
  unint64_t v38 = (unint64_t)v15;
  (*(void (**)(char *, void, uint64_t, __n128))(v41 + 104))(v43, *MEMORY[0x1E4FAB8F8], v42, v35);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v45);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v19, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v36 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11C1F44(0, &qword_1EA1AC9A0, MEMORY[0x1E4FAB4D0]);
  sub_1C11C1F00(&qword_1EA1AC9A8, &qword_1EA1AC9A0, v36);
  unint64_t v38 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v40);
}

uint64_t sub_1C11C1364(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = sub_1C1517A9C();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v43 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151794C();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11C2500(0, &qword_1EA1AC988, (uint64_t (*)(void))sub_1C11C1E38, (uint64_t)&type metadata for A12_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v39 - v23;
  uint64_t v46 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E4FAB9E0], v21);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v39 = KeyPath;
  uint64_t v40 = v21;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ 2 * *(void *)(v17 + 72), (uint64_t)v19, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v26 = (char *)v15 + v13[5];
  uint64_t v27 = *MEMORY[0x1E4FAB8C8];
  uint64_t v28 = sub_1C1517A7C();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v26, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  uint64_t v30 = (void **)MEMORY[0x1E4FB27D0];
  void *v15 = 0;
  *(void *)((char *)v15 + v13[6]) = 0;
  uint64_t v31 = *v30;
  *(void *)((char *)v15 + v13[7]) = v31;
  uint64_t v2 = *MEMORY[0x1E4FB2848];
  uint64_t v3 = *(void *)(MEMORY[0x1E4FB2848] + 8);
  uint64_t v4 = *(void *)(MEMORY[0x1E4FB2848] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x1E4FB2848] + 24);
  uint64_t v32 = qword_1EB87CC48;
  id v33 = v31;
  if (v32 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v34 = swift_release();
  __n128 v35 = MEMORY[0x1F4188790](v34);
  *(&v39 - 8) = v2;
  *(&v39 - 7) = v3;
  *(&v39 - 6) = v4;
  *(&v39 - 5) = v5;
  *(&v39 - 4) = (uint64_t)v12;
  *(&v39 - 3) = (uint64_t)v19;
  unint64_t v38 = (unint64_t)v15;
  (*(void (**)(char *, void, uint64_t, __n128))(v41 + 104))(v43, *MEMORY[0x1E4FAB8F8], v42, v35);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v45);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v19, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v36 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11C1F44(0, &qword_1EA1AC9A0, MEMORY[0x1E4FAB4D0]);
  sub_1C11C1F00(&qword_1EA1AC9A8, &qword_1EA1AC9A0, v36);
  unint64_t v38 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v40);
}

uint64_t sub_1C11C1964@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V11.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C11C1A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C11BF0D0(a1, a2, a3);
}

uint64_t sub_1C11C1A6C()
{
  return sub_1C12BC370();
}

unint64_t sub_1C11C1A7C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C11C1AAC();
  unint64_t result = sub_1C11C1B00();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C11C1AAC()
{
  unint64_t result = qword_1EA1AC940;
  if (!qword_1EA1AC940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC940);
  }
  return result;
}

unint64_t sub_1C11C1B00()
{
  unint64_t result = qword_1EA1AC948;
  if (!qword_1EA1AC948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC948);
  }
  return result;
}

uint64_t type metadata accessor for A12_V11.Bound()
{
  uint64_t result = qword_1EA1AC958;
  if (!qword_1EA1AC958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C11C1BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11C1BB4);
}

uint64_t sub_1C11C1BB4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C11C1C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11C1C78);
}

void *sub_1C11C1C78(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C11C1D20()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C11C1DD0(uint64_t a1)
{
  uint64_t result = sub_1C11C2568(&qword_1EA1AC968, (void (*)(uint64_t))type metadata accessor for A12_V11.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C11C1E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C11BFE20(a1, a2, a3);
}

uint64_t sub_1C11C1E30(uint64_t a1)
{
  return sub_1C11BFEF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C11C1E38()
{
  unint64_t result = qword_1EA1AC978;
  if (!qword_1EA1AC978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC978);
  }
  return result;
}

unint64_t sub_1C11C1E8C()
{
  unint64_t result = qword_1EA1AC980;
  if (!qword_1EA1AC980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC980);
  }
  return result;
}

uint64_t sub_1C11C1EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C11C1964(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C11C1EE8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11C1EF8(uint64_t a1)
{
  return sub_1C11C00E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C11C1F00(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C11C1F44(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C11C1F44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V11.Layout;
    v8[1] = &type metadata for A12_V11.Layout.Attributes;
    void v8[2] = sub_1C11C1E38();
    v8[3] = sub_1C11C1E8C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C11C1FC8(uint64_t a1)
{
  return sub_1C11C06D0(a1, *(void *)(v1 + 16));
}

void sub_1C11C1FD0()
{
  if (!qword_1EA1AC9B0)
  {
    sub_1C11C2500(255, &qword_1EA1AC9B8, (uint64_t (*)(void))sub_1C11C1E38, (uint64_t)&type metadata for A12_V11.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AC9B0);
    }
  }
}

uint64_t sub_1C11C2060(uint64_t a1)
{
  return sub_1C11C0AC0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C11C2068(uint64_t a1)
{
  return sub_1C11C0D64(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C11C2070(uint64_t a1)
{
  return sub_1C11C1364(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V11.Layout.Attributes()
{
  return &type metadata for A12_V11.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V11.Layout()
{
  return &type metadata for A12_V11.Layout;
}

unint64_t sub_1C11C20A0()
{
  unint64_t result = qword_1EA1AC9C0;
  if (!qword_1EA1AC9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC9C0);
  }
  return result;
}

unint64_t sub_1C11C20F8()
{
  unint64_t result = qword_1EA1AC9C8;
  if (!qword_1EA1AC9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC9C8);
  }
  return result;
}

unint64_t sub_1C11C2150()
{
  unint64_t result = qword_1EA1AC9D0;
  if (!qword_1EA1AC9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC9D0);
  }
  return result;
}

unint64_t sub_1C11C21A8()
{
  unint64_t result = qword_1EA1AC9D8;
  if (!qword_1EA1AC9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC9D8);
  }
  return result;
}

uint64_t sub_1C11C21FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C11C2500(0, &qword_1EA1AC9E0, (uint64_t (*)(void))sub_1C11C24AC, (uint64_t)&type metadata for A12_V11.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11C24AC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C11C2568(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  void *v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  v10[3] = v14;
  void v10[4] = v15;
  return result;
}

unint64_t sub_1C11C24AC()
{
  unint64_t result = qword_1EA1AC9E8;
  if (!qword_1EA1AC9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC9E8);
  }
  return result;
}

void sub_1C11C2500(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C11C2568(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V11.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11C267CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V11.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V11.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C11C26B8()
{
  unint64_t result = qword_1EA1AC9F8;
  if (!qword_1EA1AC9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC9F8);
  }
  return result;
}

unint64_t sub_1C11C2710()
{
  unint64_t result = qword_1EA1ACA00;
  if (!qword_1EA1ACA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA00);
  }
  return result;
}

unint64_t sub_1C11C2768()
{
  unint64_t result = qword_1EA1ACA08;
  if (!qword_1EA1ACA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA08);
  }
  return result;
}

uint64_t FormatGroupItemKind.rawValue.getter()
{
  uint64_t result = 6775156;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x72656874616577;
      break;
    case 2:
      uint64_t result = 0x6C6C6177796170;
      break;
    case 3:
      uint64_t result = 0x656E696C64616568;
      break;
    case 4:
      uint64_t result = 0x6575737369;
      break;
    case 5:
      uint64_t result = 0x6465626D45626577;
      break;
    case 6:
      uint64_t result = 1684366694;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C11C288C(unsigned __int8 *a1, char *a2)
{
  return sub_1C1489DE0(*a1, *a2);
}

void sub_1C11C2898(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 6775156;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x72656874616577;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C6C6177796170;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x656E696C64616568;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x6575737369;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 0x6465626D45626577;
      a1[1] = 0xE800000000000000;
      break;
    case 6:
      *a1 = 1684366694;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C11C2980()
{
  return sub_1BFC60774();
}

uint64_t sub_1C11C298C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

BOOL sub_1C11C2A98(char *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  char v5 = *a1;
  unsigned __int8 v4 = v2;
  return (_s8NewsFeed19FormatGroupItemKindO1loiySbAC_ACtFZ_0(&v4, &v5) & 1) == 0;
}

BOOL sub_1C11C2AD8(unsigned __int8 *a1, char *a2)
{
  char v2 = *a2;
  unsigned __int8 v5 = *a1;
  char v4 = v2;
  return (_s8NewsFeed19FormatGroupItemKindO1loiySbAC_ACtFZ_0(&v5, &v4) & 1) == 0;
}

uint64_t sub_1C11C2B18(char *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  char v5 = *a1;
  unsigned __int8 v4 = v2;
  return _s8NewsFeed19FormatGroupItemKindO1loiySbAC_ACtFZ_0(&v4, &v5) & 1;
}

uint64_t _s8NewsFeed19FormatGroupItemKindO1loiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 6775156;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 6775156;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v5 = 0x72656874616577;
      break;
    case 2:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v5 = 0x6C6C6177796170;
      break;
    case 3:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v5 = 0x656E696C64616568;
      break;
    case 4:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v5 = 0x6575737369;
      break;
    case 5:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v5 = 0x6465626D45626577;
      break;
    case 6:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v5 = 1684366694;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x72656874616577) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6C6C6177796170) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x656E696C64616568) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6575737369) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x6465626D45626577;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1684366694) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v4 == v6) {
        char v7 = 0;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

unint64_t sub_1C11C2D7C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C11C2DAC();
  unint64_t result = sub_1BFC3F074();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C11C2DAC()
{
  unint64_t result = qword_1EA1ACA10;
  if (!qword_1EA1ACA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA10);
  }
  return result;
}

unint64_t sub_1C11C2E00(uint64_t a1)
{
  unint64_t result = sub_1C11C2E28();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11C2E28()
{
  unint64_t result = qword_1EA1ACA18;
  if (!qword_1EA1ACA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA18);
  }
  return result;
}

unint64_t sub_1C11C2E7C(void *a1)
{
  a1[1] = sub_1C007A284();
  a1[2] = sub_1C007A380();
  unint64_t result = sub_1C007A2D8();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupItemKind()
{
  return &type metadata for FormatGroupItemKind;
}

uint64_t FormatItemNodeDataLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatItemNodeDataLayoutAttributes.frame.getter()
{
  return *(double *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                   + 16);
}

uint64_t FormatItemNodeDataLayoutAttributes.data.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFEAF890(*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)+ *(void *)(**(void **)(v1+ OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)+ 144), a1, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
}

uint64_t FormatItemNodeDataLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeDataLayoutAttributes.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeDataLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeDataLayoutAttributes.dataLayoutValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeDataLayoutAttributes.resizingIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeDataLayoutAttributes.formatImageRequests(options:inventory:)()
{
  return sub_1BFE4A140();
}

uint64_t FormatItemNodeDataLayoutAttributes.issueCoverImageRequests(options:inventory:)(double *a1, uint64_t a2)
{
  return sub_1BFD573F4(a1, a2);
}

uint64_t FormatItemNodeDataLayoutAttributes.isResizing.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 112);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  while (2)
  {
    unint64_t v6 = *(void *)(v1 + 8 * v3++ + 32);
    switch((v6 >> 59) & 0x1E | (v6 >> 2) & 1)
    {
      case 5uLL:
        uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        if ((*(unsigned char *)(v7 + 169) & 1) == 0) {
          goto LABEL_4;
        }
        goto LABEL_9;
      case 0x10uLL:
        sub_1C017C364();
        swift_projectBox();
        swift_retain();
        uint64_t v4 = swift_retain();
        char v5 = FormatItemNodeDataLayoutAttributes.isResizing.getter(v4);
        swift_release();
        swift_release();
        if ((v5 & 1) == 0) {
          goto LABEL_4;
        }
        goto LABEL_10;
      case 0x11uLL:
        uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        if ((*(unsigned char *)(v7 + 217) & 1) == 0) {
          goto LABEL_4;
        }
LABEL_9:
        if (CGRectGetHeight(*(CGRect *)(v7 + 64)) <= 1.0)
        {
LABEL_10:
          uint64_t v8 = 1;
          goto LABEL_12;
        }
LABEL_4:
        if (v2 != v3) {
          continue;
        }
        uint64_t v8 = 0;
LABEL_12:
        swift_bridgeObjectRelease();
        break;
      default:
        goto LABEL_4;
    }
    return v8;
  }
}

uint64_t FormatItemNodeDataLayoutAttributes.renderKeyIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeDataLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatItemNodeDataLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatItemNodeDataLayoutAttributes.resizingGroupIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeDataLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatItemNodeDataLayoutAttributes.columnSystemKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 72);
}

uint64_t FormatItemNodeDataLayoutAttributes.feedItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFEAF890(v1 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_feedItem, a1, type metadata accessor for FeedItem);
}

uint64_t FormatItemNodeDataLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_zIndex);
}

unint64_t FormatItemNodeDataLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_visibility);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatItemNodeDataLayoutAttributes.dataAccessibilityValues.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatItemNodeDataLayoutAttributes.accessibilityRole.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + *(void *)(**(void **)(v1
                                           + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                             + 152));
}

uint64_t FormatItemNodeDataLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFEE6798(v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_feedItem);
  sub_1BFF0056C(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_visibility));
  swift_release();
  return v0;
}

uint64_t FormatItemNodeDataLayoutAttributes.__deallocating_deinit()
{
  FormatItemNodeDataLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C11C3480()
{
  uint64_t v1 = *(void *)(*(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C11C34C0()
{
  return FormatItemNodeDataLayoutAttributes.isResizing.getter() & 1;
}

uint64_t FormatItemNodeDataLayoutAttributes.auxiliaryFeedItems.getter()
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*(void *)(*(void *)(v0
                                         + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                             + 112)
                 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      uint64_t v4 = sub_1C11C7084();
      sub_1C104A2D4(v4);
    }
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1C11C3578()
{
  return type metadata accessor for FormatItemNodeDataLayoutAttributes();
}

uint64_t method lookup function for FormatItemNodeDataLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatItemNodeDataLayoutAttributes);
}

char *sub_1C11C3598(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)&v4[v9] = v10;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_separatorView;
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  uint64_t v13 = v4;
  *(void *)&v4[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_editor] = a1;
  uint64_t v14 = (objc_class *)type metadata accessor for DebugNavigationController();
  id v15 = objc_allocWithZone(v14);
  swift_retain();
  id v16 = objc_msgSend(v15, sel_initWithRootViewController_, a2);
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_logViewController] = v16;
  id v17 = objc_msgSend(objc_allocWithZone(v14), sel_initWithRootViewController_, a3);
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_debuggerPaneViewController] = v17;

  v23.receiver = v13;
  v23.super_class = ObjectType;
  uint64_t v18 = (char *)objc_msgSendSuper2(&v23, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v19 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_logViewController];
  uint64_t v20 = v18;
  objc_msgSend(v19, sel_setNavigationBarHidden_animated_, 1, 0);
  objc_msgSend(v19, sel_setToolbarHidden_animated_, 0, 0);
  id v21 = *(id *)&v20[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_debuggerPaneViewController];
  objc_msgSend(v21, sel_setToolbarHidden_animated_, 0, 0);

  swift_release();
  return v20;
}

id sub_1C11C3830()
{
  uint64_t v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v32, sel_viewDidLoad);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_debuggerPaneViewController];
  objc_msgSend(v1, sel_addChildViewController_, v2);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = result;
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = result;
  objc_msgSend(v4, sel_addSubview_, result);

  objc_msgSend(v2, sel_didMoveToParentViewController_, v1);
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v6 = result;
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = result;
  objc_msgSend(result, sel_bounds);
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;

  objc_msgSend(v6, sel_setFrame_, v9, v11, v13, v15);
  id v16 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_logViewController];
  objc_msgSend(v1, sel_addChildViewController_, v16);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v17 = result;
  id result = objc_msgSend(v16, sel_view);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v18 = result;
  objc_msgSend(v17, sel_addSubview_, result);

  objc_msgSend(v16, sel_didMoveToParentViewController_, v1);
  id result = objc_msgSend(v16, sel_view);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v19 = result;
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v20 = result;
  objc_msgSend(result, sel_bounds);
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;

  objc_msgSend(v19, sel_setFrame_, v22, v24, v26, v28);
  uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_separatorView];
  id v30 = objc_msgSend(self, sel_separatorColor);
  objc_msgSend(v29, sel_setBackgroundColor_, v30);

  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v31 = result;
    objc_msgSend(result, sel_addSubview_, v29);

    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C15170CC();
    return (id)swift_release();
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1C11C3B9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_editor);
  type metadata accessor for DebugFormatConsoleAnimator();
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 16) = v1;
  swift_unknownObjectWeakAssign();
  swift_retain();
  sub_1C0192730();
  return swift_release();
}

void sub_1C11C3D24()
{
  uint64_t v1 = v0;
  *(void *)&v45[1] = v0;
  *(void *)&v45[9] = swift_getObjectType();
  objc_msgSendSuper2((objc_super *)&v45[1], sel_viewWillLayoutSubviews);
  id v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_debuggerPaneViewController], sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  swift_retain();
  sub_1C151709C();
  swift_release();
  double v4 = sub_1C11C4080(v45[0], v0);
  id v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v6 = v5;
  objc_msgSend(v5, sel_bounds);
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;

  v46.origin.x = v8;
  v46.origin.y = v10;
  v46.size.width = v12;
  v46.size.height = v14;
  objc_msgSend(v3, sel_setFrame_, 0.0, 0.0, v4, CGRectGetHeight(v46));

  double v15 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_separatorView];
  swift_retain();
  sub_1C151709C();
  swift_release();
  double v16 = sub_1C11C427C(v45[0], v1);
  id v17 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v17, sel_displayScale);
  double v19 = v18;

  id v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  double v21 = v20;
  if (v19 < 1.0) {
    double v22 = 1.0;
  }
  else {
    double v22 = 1.0 / v19;
  }
  objc_msgSend(v20, sel_bounds);
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  CGFloat v30 = v29;

  v47.origin.x = v24;
  v47.origin.y = v26;
  v47.size.width = v28;
  v47.size.height = v30;
  objc_msgSend(v15, sel_setFrame_, v16, 0.0, v22, CGRectGetHeight(v47));
  id v31 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed36DebugFormatConsolePaneViewController_logViewController], sel_view);
  if (!v31) {
    goto LABEL_13;
  }
  objc_super v32 = v31;
  swift_retain();
  sub_1C151709C();
  swift_release();
  double v33 = sub_1C11C427C(v45[0], v1);
  double v34 = sub_1C11C4180(v45[0], v1);
  id v35 = objc_msgSend(v1, sel_view);
  if (v35)
  {
    uint64_t v36 = v35;
    objc_msgSend(v35, sel_bounds);
    CGFloat v38 = v37;
    CGFloat v40 = v39;
    CGFloat v42 = v41;
    CGFloat v44 = v43;

    v48.origin.x = v38;
    v48.origin.y = v40;
    v48.size.width = v42;
    v48.size.height = v44;
    objc_msgSend(v32, sel_setFrame_, v33, 0.0, v34, CGRectGetHeight(v48));

    return;
  }
LABEL_14:
  __break(1u);
}

CGFloat sub_1C11C4080(unsigned __int8 a1, id a2)
{
  unsigned int v2 = a1;
  id v3 = objc_msgSend(a2, sel_view);
  id v5 = v3;
  if (v2 <= 1)
  {
    if (v3)
    {
      objc_msgSend(v3, sel_bounds);
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      CGFloat v13 = v12;

      v27.origin.x = v7;
      v27.origin.y = v9;
      v27.size.width = v11;
      v27.size.height = v13;
      return CGRectGetWidth(v27) * 0.5;
    }
    __break(1u);
    goto LABEL_9;
  }
  if (!v3)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  objc_msgSend(v3, sel_bounds);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;

  uint64_t v22 = v15;
  uint64_t v23 = v17;
  uint64_t v24 = v19;
  uint64_t v25 = v21;
  return CGRectGetWidth(*(CGRect *)&v22);
}

CGFloat sub_1C11C4180(unsigned __int8 a1, id a2)
{
  int v2 = a1;
  id v3 = objc_msgSend(a2, sel_view);
  id v5 = v3;
  if (v2)
  {
    if (v3)
    {
      objc_msgSend(v3, sel_bounds);
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      CGFloat v13 = v12;

      v27.origin.x = v7;
      v27.origin.y = v9;
      v27.size.width = v11;
      v27.size.height = v13;
      return CGRectGetWidth(v27) * 0.5;
    }
    __break(1u);
    goto LABEL_9;
  }
  if (!v3)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  objc_msgSend(v3, sel_bounds);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;

  uint64_t v22 = v15;
  uint64_t v23 = v17;
  uint64_t v24 = v19;
  uint64_t v25 = v21;
  return CGRectGetWidth(*(CGRect *)&v22);
}

CGFloat sub_1C11C427C(char a1, id a2)
{
  if (!a1) {
    return 0.0;
  }
  if (a1 == 1)
  {
    id v2 = objc_msgSend(a2, sel_view);
    if (v2)
    {
      double v4 = v2;
      objc_msgSend(v2, sel_bounds);
      CGFloat v6 = v5;
      CGFloat v8 = v7;
      CGFloat v10 = v9;
      CGFloat v12 = v11;

      v28.origin.x = v6;
      v28.origin.y = v8;
      v28.size.width = v10;
      v28.size.height = v12;
      return CGRectGetWidth(v28) * 0.5;
    }
    __break(1u);
    goto LABEL_11;
  }
  id v13 = objc_msgSend(a2, sel_view);
  if (!v13)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v14 = v13;
  objc_msgSend(v13, sel_bounds);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;

  uint64_t v23 = v16;
  uint64_t v24 = v18;
  uint64_t v25 = v20;
  uint64_t v26 = v22;
  return CGRectGetWidth(*(CGRect *)&v23);
}

uint64_t type metadata accessor for DebugFormatConsolePaneViewController()
{
  return self;
}

uint64_t FormatSelector.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FormatSelector.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

NewsFeed::FormatSelector __swiftcall FormatSelector.init(stringLiteral:)(NewsFeed::FormatSelector stringLiteral)
{
  *uint64_t v1 = stringLiteral;
  return stringLiteral;
}

uint64_t FormatSelector.matches(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  v15[0] = v3;
  v15[1] = v4;
  uint64_t v5 = sub_1BFEF53C0(v15);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
LABEL_10:
    uint64_t v13 = 0;
    goto LABEL_11;
  }
  double v7 = (uint64_t *)(v5 + 64);
  while (1)
  {
    uint64_t v8 = *(v7 - 1);
    uint64_t v9 = *v7;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1BFF365E8(a1, v8, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1BFEFB09C);
    char v11 = sub_1BFEFAE14(v10, v8);
    swift_release();
    if (v11) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    v7 += 5;
    if (!--v6) {
      goto LABEL_10;
    }
  }
  char v12 = sub_1BFEFB810(a1, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v13 = 1;
LABEL_11:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C11C4648(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  v12[0] = v4;
  v12[1] = v5;
  uint64_t v6 = sub_1BFEF53C0(v12);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    for (uint64_t i = (uint64_t *)(v6 + 64); ; i += 5)
    {
      uint64_t v9 = *(i - 1);
      uint64_t v10 = *i;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C0AB1A88(a1, v9, v10);
      if (v2) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v7) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11C4768(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v35 = v4;
  uint64_t v36 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v33 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    do
    {
      while (1)
      {
        int64_t v11 = v10;
        if (!v8) {
          break;
        }
        unint64_t v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v13 = v12 | (v10 << 6);
        if (*(void *)(v5 + 16)) {
          goto LABEL_31;
        }
      }
      int64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
        goto LABEL_87;
      }
      if (v14 >= v33) {
        goto LABEL_83;
      }
      unint64_t v15 = *(void *)(v36 + 8 * v14);
      ++v10;
      if (!v15)
      {
        int64_t v10 = v11 + 2;
        if (v11 + 2 >= v33) {
          goto LABEL_83;
        }
        unint64_t v15 = *(void *)(v36 + 8 * v10);
        if (!v15)
        {
          int64_t v10 = v11 + 3;
          if (v11 + 3 >= v33) {
            goto LABEL_83;
          }
          unint64_t v15 = *(void *)(v36 + 8 * v10);
          if (!v15)
          {
            int64_t v16 = v11 + 4;
            if (v11 + 4 >= v33)
            {
LABEL_83:
              swift_bridgeObjectRelease();
              uint64_t v29 = 1;
              goto LABEL_81;
            }
            unint64_t v15 = *(void *)(v36 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                int64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  break;
                }
                if (v10 >= v33) {
                  goto LABEL_83;
                }
                unint64_t v15 = *(void *)(v36 + 8 * v10);
                ++v16;
                if (v15) {
                  goto LABEL_30;
                }
              }
LABEL_87:
              __break(1u);
              JUMPOUT(0x1C11C4D24);
            }
            int64_t v10 = v11 + 4;
          }
        }
      }
LABEL_30:
      unint64_t v8 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    while (!*(void *)(v5 + 16));
LABEL_31:
    uint64_t v17 = (uint64_t *)(*(void *)(v35 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    sub_1C1520DBC();
    unint64_t v34 = v8;
    switch(v19)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
      case 8uLL:
      case 9uLL:
      case 0xAuLL:
      case 0xBuLL:
      case 0xCuLL:
      case 0xDuLL:
      case 0xEuLL:
        sub_1C1520DCC();
        break;
      default:
        sub_1C1520DCC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        break;
    }
    uint64_t v20 = sub_1C1520E0C();
    uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v22 = v20 & ~v21;
    if ((*(void *)(v9 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22)) {
      break;
    }
LABEL_13:
    sub_1BFF8F648(v18, v19);
    unint64_t v8 = v34;
  }
  uint64_t v23 = ~v21;
  while (2)
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v26 = *v24;
    unint64_t v25 = v24[1];
    switch(v25)
    {
      case 0uLL:
        if (!v19) {
          goto LABEL_77;
        }
        goto LABEL_73;
      case 1uLL:
        if (v19 == 1) {
          goto LABEL_77;
        }
        goto LABEL_73;
      case 2uLL:
        if (v19 == 2) {
          goto LABEL_77;
        }
        goto LABEL_73;
      case 3uLL:
        if (v19 == 3) {
          goto LABEL_77;
        }
        goto LABEL_73;
      case 4uLL:
        if (v19 == 4) {
          goto LABEL_77;
        }
        goto LABEL_73;
      case 5uLL:
        if (v19 == 5) {
          goto LABEL_77;
        }
        goto LABEL_73;
      case 6uLL:
        if (v19 == 6) {
          goto LABEL_77;
        }
        goto LABEL_73;
      case 7uLL:
        if (v19 == 7) {
          goto LABEL_77;
        }
        goto LABEL_73;
      case 8uLL:
        if (v19 == 8) {
          goto LABEL_77;
        }
        goto LABEL_73;
      case 9uLL:
        if (v19 != 9) {
          goto LABEL_73;
        }
LABEL_77:
        uint64_t v31 = *v24;
        unint64_t v32 = v24[1];
        goto LABEL_78;
      case 0xAuLL:
        if (v19 != 10) {
          goto LABEL_73;
        }
        unint64_t v25 = 10;
        uint64_t v31 = *v24;
        unint64_t v32 = 10;
        goto LABEL_78;
      case 0xBuLL:
        if (v19 != 11) {
          goto LABEL_73;
        }
        unint64_t v25 = 11;
        uint64_t v31 = *v24;
        unint64_t v32 = 11;
        goto LABEL_78;
      case 0xCuLL:
        if (v19 != 12) {
          goto LABEL_73;
        }
        unint64_t v25 = 12;
        uint64_t v31 = *v24;
        unint64_t v32 = 12;
        goto LABEL_78;
      case 0xDuLL:
        if (v19 != 13) {
          goto LABEL_73;
        }
        unint64_t v25 = 13;
        uint64_t v31 = *v24;
        unint64_t v32 = 13;
        goto LABEL_78;
      case 0xEuLL:
        if (v19 != 14) {
          goto LABEL_73;
        }
        unint64_t v25 = 14;
        uint64_t v31 = *v24;
        unint64_t v32 = 14;
LABEL_78:
        sub_1BFF8F648(v31, v32);
        goto LABEL_79;
      default:
        if (v19 < 0xF)
        {
LABEL_73:
          sub_1BFE74E64(v18, v19);
          sub_1BFE74E64(v26, v25);
          sub_1BFF8F648(v26, v25);
          sub_1BFF8F648(v18, v19);
LABEL_74:
          unint64_t v22 = (v22 + 1) & v23;
          if (((*(void *)(v9 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            goto LABEL_13;
          }
          continue;
        }
        if (v26 != v18 || v25 != v19)
        {
          char v28 = sub_1C1520A9C();
          sub_1BFE74E64(v18, v19);
          sub_1BFE74E64(v26, v25);
          sub_1BFF8F648(v26, v25);
          sub_1BFF8F648(v18, v19);
          if (v28) {
            goto LABEL_80;
          }
          goto LABEL_74;
        }
        sub_1BFE74E64(v18, v19);
        sub_1BFE74E64(v18, v19);
        sub_1BFF8F648(v18, v19);
        unint64_t v25 = v19;
LABEL_79:
        sub_1BFF8F648(v18, v25);
        unint64_t v19 = v25;
LABEL_80:
        swift_bridgeObjectRelease();
        sub_1BFF8F648(v18, v19);
        uint64_t v29 = 0;
LABEL_81:
        sub_1BFEFB808();
        return v29;
    }
  }
}

uint64_t sub_1C11C4D9C(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return 1;
  }
  int64_t v4 = 0;
  if (v2 >= v3) {
    uint64_t v5 = result;
  }
  else {
    uint64_t v5 = a2;
  }
  if (v2 >= v3) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = result;
  }
  uint64_t v7 = v5 + 56;
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  if (-v8 < 64) {
    uint64_t v9 = ~(-1 << -(char)v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 56);
  int64_t v11 = (unint64_t)(63 - v8) >> 6;
  uint64_t v12 = v6 + 56;
  while (1)
  {
    while (1)
    {
      int64_t v13 = v4;
      if (!v10) {
        break;
      }
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v4 << 6);
      if (*(void *)(v6 + 16))
      {
LABEL_29:
        uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
        CGFloat result = sub_1C1520DAC();
        uint64_t v20 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v21 = result & ~v20;
        if ((*(void *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
        {
          uint64_t v22 = *(void *)(v6 + 48);
          if (*(void *)(v22 + 8 * v21) == v19)
          {
LABEL_34:
            swift_bridgeObjectRetain();
            uint64_t v24 = 0;
LABEL_35:
            sub_1BFEFB808();
            return v24;
          }
          uint64_t v23 = ~v20;
          while (1)
          {
            unint64_t v21 = (v21 + 1) & v23;
            if (((*(void *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              break;
            }
            if (*(void *)(v22 + 8 * v21) == v19) {
              goto LABEL_34;
            }
          }
        }
      }
    }
    int64_t v16 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v11) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v16);
    ++v4;
    if (!v17)
    {
      int64_t v4 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_38;
      }
      unint64_t v17 = *(void *)(v7 + 8 * v4);
      if (!v17)
      {
        int64_t v4 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_38;
        }
        unint64_t v17 = *(void *)(v7 + 8 * v4);
        if (!v17)
        {
          int64_t v18 = v13 + 4;
          if (v13 + 4 >= v11)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            uint64_t v24 = 1;
            goto LABEL_35;
          }
          unint64_t v17 = *(void *)(v7 + 8 * v18);
          int64_t v4 = v13 + 4;
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v4 << 6);
    if (*(void *)(v6 + 16)) {
      goto LABEL_29;
    }
  }
  while (1)
  {
    int64_t v4 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v4 >= v11) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v4);
    ++v18;
    if (v17) {
      goto LABEL_28;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t FormatSelector.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v5 = sub_1C1520ABC();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C11C5088()
{
  return 0;
}

uint64_t FormatSelector.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSelector.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11C51B4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11C5200()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11C5248(uint64_t a1)
{
  return sub_1C11C4648(a1);
}

uint64_t sub_1C11C5260()
{
  return sub_1C11C5088();
}

unint64_t sub_1C11C5268(uint64_t a1)
{
  unint64_t result = sub_1C086DF2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11C5290(void *a1)
{
  a1[1] = sub_1BFE9420C();
  a1[2] = sub_1BFE79808();
  unint64_t result = sub_1C00818D8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11C52CC()
{
  unint64_t result = qword_1EA1ACA48;
  if (!qword_1EA1ACA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA48);
  }
  return result;
}

uint64_t sub_1C11C5320()
{
  return MEMORY[0x1E4FBB220];
}

unint64_t sub_1C11C5330()
{
  unint64_t result = qword_1EA1ACA50;
  if (!qword_1EA1ACA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA50);
  }
  return result;
}

uint64_t sub_1C11C5384()
{
  return MEMORY[0x1E4FBB230];
}

uint64_t sub_1C11C5390()
{
  return MEMORY[0x1E4FBB228];
}

ValueMetadata *type metadata accessor for FormatSelector()
{
  return &type metadata for FormatSelector;
}

uint64_t sub_1C11C53AC(uint64_t a1, uint64_t a2)
{
  return sub_1BFF365E8(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1C12F4BAC);
}

uint64_t sub_1C11C5420()
{
  uint64_t v1 = *v0;
  uint64_t v2 = 0;
  switch(((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1)
  {
    case 4uLL:
      uint64_t v3 = *(void *)(*(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 64);
      goto LABEL_7;
    case 5uLL:
      int64_t v4 = (uint64_t *)(*(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) + 192);
      goto LABEL_9;
    case 0xDuLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EA1AE190, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionData, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
      int64_t v4 = (uint64_t *)(*(void *)(swift_projectBox() + *(int *)(v5 + 48)) + 64);
      goto LABEL_9;
    case 0xEuLL:
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EA19BBC8, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
      int64_t v4 = (uint64_t *)(*(void *)(swift_projectBox() + *(int *)(v6 + 48)) + 160);
      goto LABEL_9;
    case 0x10uLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      uint64_t v3 = *(void *)(*(void *)(swift_projectBox() + *(int *)(v7 + 48))
                     + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
LABEL_7:
      int64_t v4 = (uint64_t *)(v3 + 96);
      goto LABEL_9;
    case 0x11uLL:
      int64_t v4 = (uint64_t *)(*(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) + 240);
LABEL_9:
      uint64_t v2 = *v4;
      swift_bridgeObjectRetain();
      break;
    default:
      return v2;
  }
  return v2;
}

void *FormatDataLayoutValue.formatImageRequests(options:inventory:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *v2;
  switch((*v2 >> 59) & 0x1E | (*v2 >> 2) & 1)
  {
    case 1uLL:
    case 2uLL:
    case 5uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
      goto LABEL_2;
    case 3uLL:
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
      uint64_t v16 = swift_projectBox() + *(int *)(v15 + 48);
      uint64_t v17 = *(void *)(v16 + 16);
      uint64_t v18 = *(void *)(v16 + 24);
      goto LABEL_7;
    case 4uLL:
      uint64_t v19 = v8 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v17 = *(void *)(v19 + 32);
      uint64_t v18 = *(void *)(v19 + 40);
LABEL_7:
      swift_retain();
      swift_retain();
      sub_1C017C3D4(v17, v18);
      swift_retain();
      uint64_t v20 = sub_1BFE4A430(a1, a2);
      swift_release();
      swift_release();
      swift_release();
      uint64_t v21 = v17;
      uint64_t v22 = v18;
      goto LABEL_9;
    case 6uLL:
      uint64_t v23 = v8 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v24 = *(void *)(v23 + 40);
      uint64_t v25 = *(void *)(v23 + 48);
      swift_retain();
      swift_retain();
      sub_1C017C3D4(v24, v25);
      uint64_t v20 = FormatStateViewNodeDataLayoutAttributes.formatImageRequests(options:inventory:)(a1, a2);
      swift_release();
      swift_release();
      uint64_t v21 = v24;
      uint64_t v22 = v25;
LABEL_9:
      sub_1C017C418(v21, v22);
      goto LABEL_12;
    case 0xEuLL:
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EA19BBC8, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
      uint64_t v27 = v26;
      uint64_t v28 = swift_projectBox();
      uint64_t v29 = v28 + *(int *)(v27 + 48);
      uint64_t v30 = *(void *)(v29 + 16);
      uint64_t v31 = *(void *)(v29 + 24);
      sub_1C11C81A4(v28, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
      *(void *)&v39[0] = *(void *)&v7[*(int *)(v5 + 40)];
      swift_retain();
      swift_retain();
      sub_1C017C3D4(v30, v31);
      swift_retain();
      unint64_t v32 = sub_1C11ED0EC(a1, a2, (unint64_t *)v39);
      swift_release();
      swift_release();
      sub_1C017C418(v30, v31);
      swift_release();
      sub_1C11C820C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
      return v32;
    case 0x10uLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      swift_projectBox();
      swift_retain();
      uint64_t v20 = sub_1BFFCDAA8(a1, a2);
      swift_release();
LABEL_12:
      unint64_t result = (void *)v20;
      break;
    default:
      unint64_t v10 = *(void *)(v8 + 16);
      uint64_t v11 = *(void *)(v8 + 24);
      uint64_t v12 = *(void *)(v8 + 40);
      uint64_t v13 = *(void *)(v8 + 48);
      if (v10 >> 61 == 5)
      {
        uint64_t v35 = *(void *)(v8 + 32);
        uint64_t v14 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v36 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain();
        swift_retain();
        sub_1C017C3D4(v12, v13);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1BFE4A144(a1, a2, &v36, v14, (uint64_t)&v37);
        swift_release();
        swift_release();
      }
      else
      {
        uint64_t v36 = *(void *)(v8 + 16);
        uint64_t v33 = *(void *)(v11 + 96);
        swift_retain();
        swift_retain();
        sub_1C017C3D4(v12, v13);
        swift_retain();
        sub_1BFE4A144(a1, a2, &v36, v33, (uint64_t)&v37);
      }
      if (v38)
      {
        sub_1BFC773DC(&v37, (uint64_t)v39);
        sub_1BFE4610C(0, (unint64_t *)&qword_1EB87A5B0, (uint64_t (*)(uint64_t))sub_1BFD05974, MEMORY[0x1E4FBBE00]);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_1C1529AE0;
        sub_1BFC773DC(v39, v34 + 32);
        swift_release();
        swift_release();
        swift_release();
        sub_1C017C418(v12, v13);
        unint64_t result = (void *)v34;
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        sub_1C017C418(v12, v13);
        sub_1BFE4601C((uint64_t)&v37);
LABEL_2:
        unint64_t result = 0;
      }
      break;
  }
  return result;
}

uint64_t FormatDataLayoutValue.issueCoverImageRequests(options:inventory:)(double *a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  switch(((unint64_t)*v2 >> 59) & 0x1E | (*v2 >> 2) & 1)
  {
    case 3uLL:
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
      uint64_t v24 = swift_projectBox() + *(int *)(v23 + 48);
      uint64_t v8 = *(void *)(v24 + 16);
      uint64_t v9 = *(void *)(v24 + 24);
      goto LABEL_9;
    case 4uLL:
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v8 = *(void *)(v7 + 32);
      uint64_t v9 = *(void *)(v7 + 40);
LABEL_9:
      swift_retain();
      swift_retain();
      sub_1C017C3D4(v8, v9);
      swift_retain();
      uint64_t v22 = sub_1BFD5796C(a1, a2);
      swift_release();
      swift_release();
      swift_release();
      uint64_t v25 = v8;
      uint64_t v26 = v9;
      goto LABEL_11;
    case 6uLL:
      uint64_t v27 = v3 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v28 = *(void *)(v27 + 40);
      uint64_t v29 = *(void *)(v27 + 48);
      swift_retain();
      swift_retain();
      sub_1C017C3D4(v28, v29);
      uint64_t v22 = FormatStateViewNodeDataLayoutAttributes.issueCoverImageRequests(options:inventory:)(a1, a2);
      swift_release();
      swift_release();
      uint64_t v25 = v28;
      uint64_t v26 = v29;
LABEL_11:
      sub_1C017C418(v25, v26);
      return v22;
    case 0xCuLL:
      uint64_t v10 = v3 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v11 = *(void **)(v10 + 16);
      uint64_t v12 = *(void *)(v10 + 24);
      uint64_t v14 = *(void **)(v10 + 32);
      uint64_t v13 = *(void *)(v10 + 40);
      uint64_t v16 = *(void **)(v10 + 48);
      uint64_t v15 = *(void *)(v10 + 56);
      uint64_t v17 = *(void **)(v10 + 64);
      uint64_t v18 = *(void *)(v10 + 80);
      if (!*(unsigned char *)(v10 + 72))
      {
        char v54 = 0;
        unsigned int v56 = *(void **)(v10 + 16);
        uint64_t v57 = *(void *)(v10 + 104);
        uint64_t v30 = *(void *)(v10 + 24);
        uint64_t v31 = *(void **)(v10 + 48);
        CGRect v47 = v31;
        unint64_t v32 = *(void **)(v10 + 64);
        uint64_t v53 = v32;
        uint64_t v33 = *(void *)(v10 + 96);
        sub_1C00FA170(v11, v30, v14, v13, v31, v15, v32, 0);
        sub_1C00FA170(v56, v30, v14, v13, v31, v15, v32, 0);
        swift_retain();
        swift_retain();
        sub_1C017C3D4(v33, v57);
        uint64_t v16 = v56;
        uint64_t v20 = v14;
        uint64_t v51 = v15;
        uint64_t v52 = v14;
        uint64_t v49 = v30;
        uint64_t v50 = v13;
        uint64_t v48 = v33;
        uint64_t v21 = v56;
        goto LABEL_14;
      }
      if (*(unsigned char *)(v10 + 72) == 1)
      {
        char v54 = 1;
        uint64_t v55 = *(void **)(v10 + 16);
        uint64_t v57 = *(void *)(v10 + 104);
        uint64_t v19 = *(void *)(v10 + 96);
        sub_1C00FA170(v11, v12, v14, v13, v16, v15, v17, 1);
        sub_1C00FA170(v55, v12, v14, v13, v16, v15, v17, 1);
        swift_retain();
        swift_retain();
        uint64_t v20 = v17;
        uint64_t v21 = v55;
        sub_1C017C3D4(v19, v57);
        swift_bridgeObjectRelease();

        CGRect v47 = v16;
        uint64_t v48 = v19;
        uint64_t v51 = v15;
        uint64_t v52 = v14;
        uint64_t v53 = v20;
        uint64_t v49 = v12;
        uint64_t v50 = v13;
LABEL_14:
        sub_1BFE4610C(0, (unint64_t *)&qword_1EB87A5B0, (uint64_t (*)(uint64_t))sub_1BFD05974, MEMORY[0x1E4FBBE00]);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_1C1529AE0;
        double v35 = *(double *)(v18 + 200);
        uint64_t v36 = *(void *)(v18 + 208);
        double v37 = *a1;
        id v38 = v20;
        sub_1C151F72C();
        double v40 = v39;
        double v42 = v41;
        if (v35 > 0.0) {
          uint64_t v43 = *(void *)&v35;
        }
        else {
          uint64_t v43 = 0;
        }
        if (v35 <= 0.0) {
          uint64_t v36 = 0;
        }
        uint64_t v44 = type metadata accessor for IssueCoverImageProcessorRequest();
        uint64_t v45 = swift_allocObject();
        uint64_t v46 = sub_1C017C088(v38, v43, v36, v35 <= 0.0, v45, v40, v42, v37);

        *(void *)(v34 + 56) = v44;
        *(void *)(v34 + 64) = sub_1C00FA6C4();
        *(void *)(v34 + 32) = v46;
        swift_release();
        swift_release();
        sub_1C017C418(v48, v57);
        sub_1C00FA1F0(v21, v49, v52, v50, v47, v51, v53, v54);
        return v34;
      }
      sub_1C00FA1F0(v11, v12, v14, v13, v16, v15, v17, 2);
      return 0;
    case 0x10uLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      swift_projectBox();
      swift_retain();
      uint64_t v22 = sub_1BFD573F4(a1, a2);
      swift_release();
      return v22;
    default:
      return 0;
  }
}

uint64_t FormatDataLayoutValue.isResizing.getter()
{
  uint64_t v1 = *v0;
  uint64_t result = 0;
  switch(((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1)
  {
    case 5uLL:
      uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (*(unsigned char *)(v4 + 169)) {
        goto LABEL_4;
      }
      goto LABEL_6;
    case 0x10uLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      swift_projectBox();
      swift_retain();
      char v3 = FormatItemNodeDataLayoutAttributes.isResizing.getter();
      swift_release();
      uint64_t result = v3 & 1;
      break;
    case 0x11uLL:
      uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (*(unsigned char *)(v4 + 217)) {
LABEL_4:
      }
        uint64_t result = CGRectGetHeight(*(CGRect *)(v4 + 64)) <= 1.0;
      else {
LABEL_6:
      }
        uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatDataLayoutValue.identifier.getter()
{
  uint64_t v0 = sub_1BFE67B44();
  swift_bridgeObjectRetain();
  return v0;
}

double sub_1C11C64F0()
{
  uint64_t v1 = *v0;
  switch(((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1)
  {
    case 1uLL:
    case 5uLL:
    case 7uLL:
    case 0x11uLL:
      v1 &= 0xFFFFFFFFFFFFFFBuLL;
      goto LABEL_3;
    case 2uLL:
      char v3 = &qword_1EB887678;
      uint64_t v4 = (unint64_t *)&unk_1EB88F820;
      uint64_t v5 = (void (*)(uint64_t))type metadata accessor for FormatViewData;
      uint64_t v6 = type metadata accessor for FormatViewNodeLayoutAttributes;
      goto LABEL_16;
    case 3uLL:
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
      uint64_t v8 = *(void *)(swift_projectBox() + *(int *)(v7 + 48));
      goto LABEL_8;
    case 4uLL:
      uint64_t v9 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 72;
      return *(double *)v9;
    case 6uLL:
      uint64_t v8 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
LABEL_8:
      uint64_t v10 = *(void *)(v8 + 16);
      goto LABEL_19;
    case 8uLL:
      sub_1C0498748();
      uint64_t v9 = swift_projectBox() + *(int *)(v11 + 48) + 48;
      return *(double *)v9;
    case 9uLL:
      uint64_t v12 = &qword_1EA1A5A90;
      uint64_t v13 = type metadata accessor for FormatMicaData;
      uint64_t v14 = type metadata accessor for FormatMicaNodeLayoutAttributes;
      goto LABEL_21;
    case 0xAuLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
      break;
    case 0xBuLL:
      char v3 = (unint64_t *)&unk_1EA1A5A80;
      uint64_t v4 = &qword_1EA19BBF8;
      uint64_t v5 = (void (*)(uint64_t))type metadata accessor for FormatVideoData;
      uint64_t v6 = type metadata accessor for FormatVideoNodeLayoutAttributes;
      goto LABEL_16;
    case 0xCuLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
      break;
    case 0xDuLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EA1AE190, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionData, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
      uint64_t v9 = *(void *)(swift_projectBox() + *(int *)(v15 + 48)) + 80;
      return *(double *)v9;
    case 0xEuLL:
      char v3 = (unint64_t *)&qword_1EA19BBC8;
      uint64_t v4 = (unint64_t *)&unk_1EA1A5A70;
      uint64_t v5 = (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData;
      uint64_t v6 = type metadata accessor for FormatVideoPlayerNodeLayoutAttributes;
LABEL_16:
      sub_1BFE6B6A0(0, v3, v5, v4, (uint64_t (*)(uint64_t))v6);
      goto LABEL_22;
    case 0xFuLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      break;
    case 0x10uLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      uint64_t v10 = *(void *)(*(void *)(swift_projectBox() + *(int *)(v17 + 48))
                      + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
LABEL_19:
      uint64_t v9 = v10 + 16;
      return *(double *)v9;
    case 0x12uLL:
      uint64_t v12 = (unint64_t *)&unk_1EB884B38;
      uint64_t v13 = type metadata accessor for FormatSponsoredBannerData;
      uint64_t v14 = type metadata accessor for FormatSponsoredBannerLayoutAttributes;
LABEL_21:
      sub_1C049850C(0, v12, (void (*)(uint64_t))v13, (void (*)(uint64_t))v14);
LABEL_22:
      uint64_t v2 = *(void *)(swift_projectBox() + *(int *)(v16 + 48));
      break;
    default:
LABEL_3:
      uint64_t v2 = *(void *)(v1 + 24);
      break;
  }
  uint64_t v9 = v2 + 64;
  return *(double *)v9;
}

uint64_t sub_1C11C68EC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  switch(((unint64_t)*v1 >> 59) & 0x1E | (*v1 >> 2) & 1)
  {
    case 1uLL:
    case 5uLL:
      v3 &= 0xFFFFFFFFFFFFFFBuLL;
      goto LABEL_3;
    case 2uLL:
      sub_1BFE6B6A0(0, &qword_1EB887678, (void (*)(uint64_t))type metadata accessor for FormatViewData, (unint64_t *)&unk_1EB88F820, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
      goto LABEL_11;
    case 3uLL:
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
      uint64_t v4 = (void *)(*(void *)(swift_projectBox() + *(int *)(v6 + 48)) + 32);
      break;
    case 4uLL:
      uint64_t v4 = (void *)(*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 104);
      break;
    case 6uLL:
      uint64_t v4 = (void *)(*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18) + 32);
      break;
    case 7uLL:
      uint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      goto LABEL_23;
    case 8uLL:
      sub_1C0498748();
      uint64_t v4 = (void *)(swift_projectBox() + *(int *)(v8 + 48) + 80);
      break;
    case 9uLL:
      sub_1C049850C(0, &qword_1EA1A5A90, (void (*)(uint64_t))type metadata accessor for FormatMicaData, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
LABEL_11:
      uint64_t v4 = (void *)(*(void *)(swift_projectBox() + *(int *)(v5 + 48)) + 104);
      break;
    case 0xAuLL:
      uint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
      goto LABEL_23;
    case 0xBuLL:
      uint64_t v9 = (unint64_t *)&unk_1EA1A5A80;
      uint64_t v10 = &qword_1EA19BBF8;
      uint64_t v11 = (void (*)(uint64_t))type metadata accessor for FormatVideoData;
      uint64_t v12 = type metadata accessor for FormatVideoNodeLayoutAttributes;
      goto LABEL_17;
    case 0xCuLL:
      uint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
      goto LABEL_23;
    case 0xDuLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EA1AE190, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionData, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
      uint64_t v4 = (void *)(*(void *)(swift_projectBox() + *(int *)(v13 + 48)) + 112);
      break;
    case 0xEuLL:
      uint64_t v9 = (unint64_t *)&qword_1EA19BBC8;
      uint64_t v10 = (unint64_t *)&unk_1EA1A5A70;
      uint64_t v11 = (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData;
      uint64_t v12 = type metadata accessor for FormatVideoPlayerNodeLayoutAttributes;
LABEL_17:
      sub_1BFE6B6A0(0, v9, v11, v10, (uint64_t (*)(uint64_t))v12);
      goto LABEL_22;
    case 0xFuLL:
      uint64_t v4 = (void *)(*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x20) + 104);
      break;
    case 0x10uLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      uint64_t v4 = (void *)(*(void *)(swift_projectBox() + *(int *)(v15 + 48)) + 40);
      break;
    case 0x11uLL:
      uint64_t v4 = (void *)(*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18) + 160);
      break;
    case 0x12uLL:
      sub_1C049850C(0, (unint64_t *)&unk_1EB884B38, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerData, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
LABEL_22:
      uint64_t v7 = *(void *)(swift_projectBox() + *(int *)(v14 + 48));
LABEL_23:
      uint64_t v4 = (void *)(v7 + 96);
      break;
    default:
LABEL_3:
      uint64_t v4 = (void *)(*(void *)(v3 + 24) + 104);
      break;
  }
  *a1 = *v4;
  return swift_retain();
}

uint64_t FormatDataLayoutValue.nodeIdentifier.getter()
{
  uint64_t v0 = sub_1C11C7D04();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C11C6D94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  long long v4 = 0uLL;
  char v5 = 1;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(((unint64_t)*v1 >> 59) & 0x1E | (*v1 >> 2) & 1)
  {
    case 4uLL:
      uint64_t v8 = *(void *)(*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 160);
      if (v8)
      {
        char v5 = 0;
        uint64_t v9 = *(void *)(v8 + 16);
        uint64_t v6 = *(void *)(v9 + 48);
        uint64_t v7 = *(void *)(v9 + 56);
        long long v4 = *(_OWORD *)(v9 + 64);
      }
      else
      {
        char v5 = 1;
      }
      break;
    case 5uLL:
      uint64_t v10 = *(double **)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x40))
      {
        uint64_t v11 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
        uint64_t v12 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
        CGFloat v13 = v10[8];
        CGFloat v14 = v10[9];
        CGFloat v15 = v10[10];
        CGFloat v16 = v10[11];
        swift_retain();
        swift_retain();
        sub_1C017C3D4(v12, v11);
        swift_retain();
        v33.origin.x = v13;
        v33.origin.y = v14;
        v33.size.width = v15;
        v33.size.height = v16;
        CGRectGetMinX(v33);
        sub_1C151F73C();
        v34.origin.x = v13;
        v34.origin.y = v14;
        v34.size.width = v15;
        v34.size.height = v16;
        CGRectGetMinY(v34);
        sub_1C151F74C();
        uint64_t v6 = v17;
        uint64_t v7 = v18;
        uint64_t v31 = v20;
        uint64_t v32 = v19;
        swift_release();
        swift_release();
        swift_release();
        uint64_t result = sub_1C017C418(v12, v11);
        goto LABEL_9;
      }
      long long v4 = *((_OWORD *)v10 + 5);
      goto LABEL_13;
    case 0x11uLL:
      uint64_t v22 = *(double **)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x20))
      {
        CGFloat v23 = v22[8];
        CGFloat v24 = v22[9];
        CGFloat v25 = v22[10];
        CGFloat v26 = v22[11];
        swift_retain();
        swift_retain();
        v35.origin.x = v23;
        v35.origin.y = v24;
        v35.size.width = v25;
        v35.size.height = v26;
        CGRectGetMinX(v35);
        sub_1C151F73C();
        v36.origin.x = v23;
        v36.origin.y = v24;
        v36.size.width = v25;
        v36.size.height = v26;
        CGRectGetMinY(v36);
        sub_1C151F74C();
        uint64_t v6 = v27;
        uint64_t v7 = v28;
        uint64_t v31 = v30;
        uint64_t v32 = v29;
        swift_release();
        uint64_t result = swift_release();
LABEL_9:
        *(void *)&long long v4 = v32;
        *((void *)&v4 + 1) = v31;
      }
      else
      {
        long long v4 = *((_OWORD *)v22 + 5);
      }
LABEL_13:
      char v5 = 0;
      break;
    default:
      break;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1C11C7084()
{
  uint64_t v1 = type metadata accessor for FormatItemNodeData();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  int v5 = ((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (((1 << v5) & 0x6FFEF) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFLL;
    if (v5 == 4)
    {
      uint64_t v9 = (void *)(v8 & 0xFFFFFFFFFFFFFFFBLL);
      uint64_t v10 = v9[4];
      uint64_t v11 = v9[5];
      uint64_t v12 = *(void *)(*(void *)(v9[2] + 64) + 112);
      uint64_t v22 = MEMORY[0x1E4FBC860];
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        swift_retain();
        swift_retain();
        sub_1C017C3D4(v10, v11);
        uint64_t v14 = swift_bridgeObjectRetain();
        uint64_t v15 = 0;
        do
        {
          uint64_t v16 = *(void *)(v12 + 8 * v15++ + 32);
          uint64_t v21 = v16;
          uint64_t v17 = sub_1C11C7084(v14);
          uint64_t v14 = sub_1C104A2D4(v17);
        }
        while (v13 != v15);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1C017C418(v10, v11);
        return v22;
      }
    }
    else
    {
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      uint64_t v18 = swift_projectBox();
      sub_1C11C81A4(v18, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
      sub_1BFE4610C(0, &qword_1EB861B10, type metadata accessor for FeedItem, MEMORY[0x1E4FBBE00]);
      uint64_t v19 = *(void *)(type metadata accessor for FeedItem(0) - 8);
      unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
      sub_1C11C81A4((uint64_t)v3, v6 + v20, type metadata accessor for FeedItem);
      sub_1C11C820C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
    }
  }
  return v6;
}

uint64_t sub_1C11C7390()
{
  uint64_t v0 = sub_1BFE67B44();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1C11C7414@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(*(void *)a2 + 208);
  if (*(void *)(v6 + 16))
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    *(void *)(v10 + 24) = v6;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v13;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    uint64_t v10 = a1;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = v11;
  *(unsigned char *)(a4 + 32) = v12;
  return sub_1BFFCC7B0(a1);
}

unint64_t sub_1C11C7520@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(*(void *)a2 + 144);
  if (*(void *)(v6 + 16))
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    *(void *)(v10 + 24) = v6;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v13;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    uint64_t v10 = a1;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = v11;
  *(unsigned char *)(a4 + 32) = v12;
  return sub_1BFFCC7B0(a1);
}

unint64_t sub_1C11C762C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 160);
  if (*(void *)(v6 + 16))
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    *(void *)(v10 + 24) = v6;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v13;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    uint64_t v10 = a1;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = v11;
  *(unsigned char *)(a4 + 32) = v12;
  return sub_1BFFCC7B0(a1);
}

unint64_t sub_1C11C7734@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(*(void *)a2 + 224);
  if (*(void *)(v6 + 16))
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    *(void *)(v10 + 24) = v6;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v13;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    uint64_t v10 = a1;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = v11;
  *(unsigned char *)(a4 + 32) = v12;
  return sub_1BFFCC7B0(a1);
}

unint64_t sub_1C11C7840@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 168);
  if (*(void *)(v6 + 16))
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    *(void *)(v10 + 24) = v6;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v13;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    uint64_t v10 = a1;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = v11;
  *(unsigned char *)(a4 + 32) = v12;
  return sub_1BFFCC7B0(a1);
}

unint64_t sub_1C11C7948@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(*(void *)a2 + 184);
  if (*(void *)(v6 + 16))
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    *(void *)(v10 + 24) = v6;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v13;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    uint64_t v10 = a1;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = v11;
  *(unsigned char *)(a4 + 32) = v12;
  return sub_1BFFCC7B0(a1);
}

unint64_t sub_1C11C7A54@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(*(void *)a2 + 200);
  if (*(void *)(v6 + 16))
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    *(void *)(v10 + 24) = v6;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v13;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    uint64_t v10 = a1;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = v11;
  *(unsigned char *)(a4 + 32) = v12;
  return sub_1BFFCC7B0(a1);
}

unint64_t sub_1C11C7B60@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 256);
  if (*(void *)(v6 + 16))
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    *(void *)(v10 + 24) = v6;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = a3;
    uint64_t v7 = sub_1BFFCCCC4();
    uint64_t v9 = v13;
    sub_1BFFCC8CC((uint64_t)&v15);
    uint64_t v11 = v15;
    char v12 = v16;
    swift_bridgeObjectRetain();
    uint64_t v10 = a1;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = v11;
  *(unsigned char *)(a4 + 32) = v12;
  return sub_1BFFCC7B0(a1);
}

uint64_t sub_1C11C7D04()
{
  uint64_t v1 = *v0;
  switch(((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1)
  {
    case 1uLL:
    case 5uLL:
    case 7uLL:
    case 0x11uLL:
      v1 &= 0xFFFFFFFFFFFFFFBuLL;
      goto LABEL_3;
    case 2uLL:
      uint64_t v3 = &qword_1EB887678;
      uint64_t v4 = (unint64_t *)&unk_1EB88F820;
      int v5 = (void (*)(uint64_t))type metadata accessor for FormatViewData;
      uint64_t v6 = type metadata accessor for FormatViewNodeLayoutAttributes;
      goto LABEL_16;
    case 3uLL:
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
      uint64_t v8 = *(void *)(swift_projectBox() + *(int *)(v7 + 48));
      goto LABEL_8;
    case 4uLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      break;
    case 6uLL:
      uint64_t v8 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
LABEL_8:
      uint64_t v9 = *(void *)(v8 + 16);
      goto LABEL_19;
    case 8uLL:
      sub_1C0498748();
      uint64_t v11 = swift_projectBox() + *(int *)(v10 + 48) + 32;
      return *(void *)v11;
    case 9uLL:
      char v12 = &qword_1EA1A5A90;
      uint64_t v13 = type metadata accessor for FormatMicaData;
      uint64_t v14 = type metadata accessor for FormatMicaNodeLayoutAttributes;
      goto LABEL_21;
    case 0xAuLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
      break;
    case 0xBuLL:
      uint64_t v3 = (unint64_t *)&unk_1EA1A5A80;
      uint64_t v4 = &qword_1EA19BBF8;
      int v5 = (void (*)(uint64_t))type metadata accessor for FormatVideoData;
      uint64_t v6 = type metadata accessor for FormatVideoNodeLayoutAttributes;
      goto LABEL_16;
    case 0xCuLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
      break;
    case 0xDuLL:
      char v12 = (unint64_t *)&qword_1EA1AE190;
      uint64_t v13 = type metadata accessor for FormatShareAttributionData;
      uint64_t v14 = type metadata accessor for FormatShareAttributionNodeLayoutAttributes;
      goto LABEL_21;
    case 0xEuLL:
      uint64_t v3 = (unint64_t *)&qword_1EA19BBC8;
      uint64_t v4 = (unint64_t *)&unk_1EA1A5A70;
      int v5 = (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData;
      uint64_t v6 = type metadata accessor for FormatVideoPlayerNodeLayoutAttributes;
LABEL_16:
      sub_1BFE6B6A0(0, v3, v5, v4, (uint64_t (*)(uint64_t))v6);
      goto LABEL_22;
    case 0xFuLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      break;
    case 0x10uLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      uint64_t v9 = *(void *)(*(void *)(swift_projectBox() + *(int *)(v16 + 48))
                     + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
LABEL_19:
      uint64_t v11 = v9 + 80;
      return *(void *)v11;
    case 0x12uLL:
      char v12 = (unint64_t *)&unk_1EB884B38;
      uint64_t v13 = type metadata accessor for FormatSponsoredBannerData;
      uint64_t v14 = type metadata accessor for FormatSponsoredBannerLayoutAttributes;
LABEL_21:
      sub_1C049850C(0, v12, (void (*)(uint64_t))v13, (void (*)(uint64_t))v14);
LABEL_22:
      uint64_t v2 = *(void *)(swift_projectBox() + *(int *)(v15 + 48));
      break;
    default:
LABEL_3:
      uint64_t v2 = *(void *)(v1 + 24);
      break;
  }
  uint64_t v11 = v2 + 48;
  return *(void *)v11;
}

uint64_t getEnumTagSinglePayload for FormatDataLayoutValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x6E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 110);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x6D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatDataLayoutValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x6D)
  {
    *(void *)uint64_t result = a2 - 110;
    if (a3 >= 0x6E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x6E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDataLayoutValue()
{
  return &type metadata for FormatDataLayoutValue;
}

uint64_t sub_1C11C815C()
{
  if (*(void *)(v0 + 16) >= 0x13uLL) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C11C81A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C11C820C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C11C826C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatURL();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FormatPostPurchase();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11C9CBC(v4, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 2, v9);
  if (v16)
  {
    uint64_t v17 = v21;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, v16, 2, v5);
  }
  sub_1BFFAF2C0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1C003B0FC(v20, (uint64_t)v8);
  uint64_t result = sub_1BFEFED48((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatURL);
  if (!v3)
  {
    uint64_t v17 = v21;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v21, v8, v5);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, v16, 2, v5);
  }
  return result;
}

uint64_t FormatPostPurchase.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1BFEFF658(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (char *)&v36 - v5;
  uint64_t v6 = type metadata accessor for FormatURL();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  CGRect v36 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - v9;
  sub_1BFEFF658(0, &qword_1EB890368, (uint64_t (*)(void))sub_1C08E5544, (uint64_t)&type metadata for FormatPostPurchase.LegacyCodingKeys, v3);
  uint64_t v12 = v11;
  uint64_t v42 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = type metadata accessor for FormatPostPurchase();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v37 = (uint64_t)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1C08E5544();
  uint64_t v18 = v45;
  sub_1C1520EBC();
  if (!v18)
  {
    uint64_t v19 = v42;
    sub_1C11C9C74(&qword_1EB879A28, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v12);
    uint64_t v29 = v37;
    sub_1BFFAF2C0((uint64_t)v10, v37, (uint64_t (*)(void))type metadata accessor for FormatURL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v29, 0, 2, v6);
    uint64_t v30 = v39;
    uint64_t v31 = v44;
LABEL_16:
    sub_1BFFAF2C0(v29, v30, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  uint64_t v31 = v44;
  __swift_project_boxed_opaque_existential_1(v44, v44[3]);
  sub_1BFEB6A24();
  uint64_t v20 = v43;
  sub_1C1520EBC();
  __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  uint64_t v21 = sub_1C1520EAC();
  char v22 = Dictionary<>.errorOnUnknownKeys.getter(v21);
  swift_bridgeObjectRelease();
  uint64_t v23 = v41;
  uint64_t v24 = v6;
  if ((v22 & 1) == 0)
  {
LABEL_9:
    sub_1C11C8BC8();
    long long v46 = 0uLL;
    sub_1C15206EC();
    if (v47)
    {
      if (v47 == 1)
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v23);

        uint64_t v29 = v37;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v37, 2, 2, v6);
      }
      else
      {
        long long v46 = xmmword_1C152C800;
        sub_1C11C9C74(&qword_1EB879A28, (void (*)(uint64_t))type metadata accessor for FormatURL);
        uint64_t v34 = (uint64_t)v36;
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v23);

        uint64_t v29 = v37;
        sub_1BFFAF2C0(v34, v37, (uint64_t (*)(void))type metadata accessor for FormatURL);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v29, 0, 2, v24);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v23);

      uint64_t v29 = v37;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v37, 1, 2, v6);
    }
    uint64_t v30 = v39;
    goto LABEL_16;
  }
  uint64_t v25 = sub_1C152070C();
  uint64_t v26 = *(void *)(v25 + 16);
  if (!v26)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v27 = (unint64_t *)(v25 + 40);
  while (1)
  {
    unint64_t v28 = *v27;
    if (*v27 >= 4) {
      break;
    }
    v27 += 2;
    if (!--v26) {
      goto LABEL_8;
    }
  }
  uint64_t v32 = *(v27 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1C02570B4();
  swift_allocError();
  *(void *)uint64_t v33 = v32;
  *(void *)(v33 + 8) = v28;
  *(void *)(v33 + 16) = &unk_1F1B89250;
  *(_OWORD *)(v33 + 24) = xmmword_1C15363B0;
  swift_willThrow();
  sub_1C0257108(v32, v28);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v23);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

unint64_t sub_1C11C8BC8()
{
  unint64_t result = qword_1EB87EBA8;
  if (!qword_1EB87EBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87EBA8);
  }
  return result;
}

uint64_t FormatPostPurchase.encode(to:)(void *a1)
{
  sub_1C08E54A8();
  uint64_t v72 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v76 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11C96B0();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatURL();
  uint64_t v7 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v77 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v72 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v78 = (char *)&v72 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v74 = (char *)&v72 - v18;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  unsigned __int8 v73 = (char *)&v72 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v72 - v25;
  uint64_t v27 = type metadata accessor for FormatPostPurchase();
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11C9CBC((uint64_t)v80, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  int v30 = v7[6](v29, 2, v6);
  if (v30)
  {
    if (v30 == 1)
    {
      uint64_t v31 = a1[3];
      uint64_t v32 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v31);
      sub_1BFEB6A24();
      sub_1BFEFBB88((uint64_t)&type metadata for FormatCodingKeys, v33, v31, (uint64_t)&type metadata for FormatVersions.StarSkyC, v32, (uint64_t)&off_1F1C39A28, (uint64_t)v26);
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1C151928C();
      uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1EB93CAE0);
      uint64_t v36 = (uint64_t)v74;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v74, v35, v34);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v37 = 0;
    }
    else
    {
      uint64_t v53 = a1[3];
      uint64_t v54 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v53);
      sub_1BFEB6A24();
      uint64_t v26 = v73;
      sub_1BFEFBB88((uint64_t)&type metadata for FormatCodingKeys, v55, v53, (uint64_t)&type metadata for FormatVersions.StarSkyC, v54, (uint64_t)&off_1F1C39A28, (uint64_t)v73);
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_1C151928C();
      uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)qword_1EB93CAE0);
      uint64_t v36 = (uint64_t)v78;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v78, v57, v56);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v37 = 1;
    }
    sub_1C07347A4(v37, v36);
    sub_1BFEFED48(v36, type metadata accessor for FormatVersionRequirement);
    uint64_t v58 = (uint64_t (*)(void))sub_1BFEFF7D8;
    uint64_t v59 = (uint64_t)v26;
  }
  else
  {
    uint64_t v74 = (char *)v7;
    uint64_t v78 = v14;
    uint64_t v38 = (uint64_t)v75;
    uint64_t v39 = (uint64_t)v76;
    id v80 = v11;
    uint64_t v40 = (uint64_t)v29;
    uint64_t v41 = v77;
    sub_1BFFAF2C0(v40, v77, (uint64_t (*)(void))type metadata accessor for FormatURL);
    uint64_t v42 = a1[3];
    uint64_t v43 = a1[4];
    uint64_t v44 = __swift_project_boxed_opaque_existential_1(a1, v42);
    char v45 = sub_1BFDCC904((uint64_t)v44, v42, (uint64_t)&type metadata for FormatVersions.StarSkyC, v43, (uint64_t)&off_1F1C39A28);
    uint64_t v47 = a1[3];
    uint64_t v46 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v47);
    if (v45)
    {
      sub_1BFEB6A24();
      sub_1BFEFBB88((uint64_t)&type metadata for FormatCodingKeys, v48, v47, (uint64_t)&type metadata for FormatVersions.StarSkyC, v46, (uint64_t)&off_1F1C39A28, (uint64_t)v21);
      sub_1C11C9CBC(v41, v38, (uint64_t (*)(void))type metadata accessor for FormatURL);
      (*((void (**)(uint64_t, void, uint64_t, uint64_t))v74 + 7))(v38, 0, 1, v6);
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_1C151928C();
      uint64_t v50 = __swift_project_value_buffer(v49, (uint64_t)qword_1EB93CAE0);
      uint64_t v51 = (uint64_t)v78;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v78, v50, v49);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C073CD38(2, v38, v51);
      sub_1BFEFED48(v51, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFED48(v38, (uint64_t (*)(void))sub_1C11C96B0);
      uint64_t v52 = sub_1BFEFF7D8;
    }
    else
    {
      sub_1C08E5544();
      uint64_t v21 = (char *)v39;
      sub_1BFEFBB88((uint64_t)&type metadata for FormatPostPurchase.LegacyCodingKeys, v60, v47, (uint64_t)&type metadata for FormatVersions.AzdenE, v46, (uint64_t)&off_1F1C39B08, v39);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C151928C();
      uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93CA50);
      uint64_t v63 = (uint64_t)v80;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v80, v62, v61);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = (uint64_t *)(v39 + *(int *)(v72 + 44));
      uint64_t v66 = *v64;
      uint64_t v65 = v64[1];
      uint64_t v67 = swift_allocObject();
      *(void *)(v67 + 16) = v66;
      *(void *)(v67 + 24) = v65;
      MEMORY[0x1F4188790](v67);
      *(&v72 - 4) = (uint64_t)sub_1C01B158C;
      *(&v72 - 3) = 0;
      *(&v72 - 2) = (uint64_t)sub_1C08E5628;
      *(&v72 - 1) = v68;
      swift_retain();
      uint64_t v69 = v79;
      sub_1C0810394(v63, (uint64_t)sub_1C08659A0, (uint64_t)(&v72 - 6));
      if (v69)
      {
        swift_release();
        uint64_t v70 = v63;
      }
      else
      {
        sub_1BFEFF658(0, &qword_1EA1A06B8, (uint64_t (*)(void))sub_1C08E5544, (uint64_t)&type metadata for FormatPostPurchase.LegacyCodingKeys, MEMORY[0x1E4FBBDE0]);
        sub_1C11C964C((unint64_t *)&qword_1EA1A06C0, &qword_1EA1A06B8, (uint64_t (*)(void))sub_1C08E5544, (uint64_t)&type metadata for FormatPostPurchase.LegacyCodingKeys);
        sub_1C11C9C74(&qword_1EB85C2C8, (void (*)(uint64_t))type metadata accessor for FormatURL);
        sub_1C1520BAC();
        swift_release();
        uint64_t v70 = (uint64_t)v80;
      }
      sub_1BFEFED48(v70, type metadata accessor for FormatVersionRequirement);
      uint64_t v52 = sub_1C08E54A8;
    }
    sub_1BFEFED48((uint64_t)v21, (uint64_t (*)(void))v52);
    uint64_t v58 = (uint64_t (*)(void))type metadata accessor for FormatURL;
    uint64_t v59 = v41;
  }
  return sub_1BFEFED48(v59, v58);
}

uint64_t sub_1C11C964C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEFF658(255, a2, a3, a4, MEMORY[0x1E4FBBDE0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C11C96B0()
{
  if (!qword_1EB879A70)
  {
    type metadata accessor for FormatURL();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879A70);
    }
  }
}

uint64_t sub_1C11C9708(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148A8D0(*a1, *a2);
}

uint64_t sub_1C11C9714()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11C97B4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11C9840()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11C98DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C11CB288();
  *a1 = result;
  return result;
}

void sub_1C11C990C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xEE00776F6C46676ELL;
  uint64_t v5 = 0x696472616F626E6FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 7107189;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701736302;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C11C9968()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C11C99C8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C11C9A18()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11C9A64()
{
  return sub_1C151E77C();
}

uint64_t sub_1C11C9A74()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11C9ABC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C11C9B10(void *a1@<X8>)
{
  *a1 = 7107189;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1C11C9B24()
{
  return 7107189;
}

uint64_t sub_1C11C9B34@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C11C9B8C(uint64_t a1)
{
  unint64_t v2 = sub_1C08E5544();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11C9BC8(uint64_t a1)
{
  unint64_t v2 = sub_1C08E5544();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11C9C08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPostPurchase.init(from:)(a1, a2);
}

uint64_t sub_1C11C9C20(void *a1)
{
  return FormatPostPurchase.encode(to:)(a1);
}

uint64_t sub_1C11C9C3C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C11C9C74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C11C9CBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s8NewsFeed18FormatPostPurchaseO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatPostPurchase();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11CB2D4();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v14 + 56)];
  sub_1C11C9CBC(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  sub_1C11C9CBC(a2, v15, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v17 = v16(v13, 2, v4);
  if (!v17)
  {
    sub_1C11C9CBC((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatPostPurchase);
    if (!v16((char *)v15, 2, v4))
    {
      sub_1BFFAF2C0(v15, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
      char v21 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v10, (uint64_t)v7);
      sub_1BFEFED48((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatURL);
      sub_1BFEFED48((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatURL);
      uint64_t v19 = (uint64_t (*)(void))type metadata accessor for FormatPostPurchase;
      goto LABEL_11;
    }
    sub_1BFEFED48((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    int v18 = v16((char *)v15, 2, v4);
    uint64_t v19 = (uint64_t (*)(void))type metadata accessor for FormatPostPurchase;
    if (v18 == 1) {
      goto LABEL_8;
    }
LABEL_9:
    char v21 = 0;
    uint64_t v19 = (uint64_t (*)(void))sub_1C11CB2D4;
    goto LABEL_11;
  }
  int v20 = v16((char *)v15, 2, v4);
  uint64_t v19 = (uint64_t (*)(void))type metadata accessor for FormatPostPurchase;
  if (v20 != 2) {
    goto LABEL_9;
  }
LABEL_8:
  char v21 = 1;
LABEL_11:
  sub_1BFEFED48((uint64_t)v13, v19);
  return v21 & 1;
}

uint64_t sub_1C11CA02C(void *a1)
{
  a1[1] = sub_1C11C9C74(&qword_1EB87EBB0, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  a1[2] = sub_1C11C9C74(&qword_1EA1A0A38, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  uint64_t result = sub_1C11C9C74(&qword_1EA1ACA58, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  a1[3] = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatPostPurchase(uint64_t *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for FormatURL();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v12 = *(void *)a2;
        uint64_t v13 = *((void *)a2 + 1);
        uint64_t v14 = *((void *)a2 + 2);
        char v15 = a2[24];
        sub_1BFE86E48(v12, v13, v14, v15);
        *a1 = v12;
        a1[1] = v13;
        a1[2] = v14;
        *((unsigned char *)a1 + 24) = v15;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v11 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v11;
          a1[2] = *((void *)a2 + 2);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v16 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
          uint64_t v17 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)a1 + *(int *)(v17 + 20)) = *(void *)&a2[*(int *)(v17 + 20)];
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for FormatPostPurchase(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatURL();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v5 = *(void *)a1;
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = *(void *)(a1 + 16);
      char v8 = *(unsigned char *)(a1 + 24);
      return sub_1BFD7418C(v5, v6, v7, v8);
    }
    else
    {
      if (result == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (result) {
          return result;
        }
        uint64_t v4 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        type metadata accessor for FormatAbsoluteURL();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t *initializeWithCopy for FormatPostPurchase(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatURL();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      uint64_t v12 = a2[2];
      char v13 = *((unsigned char *)a2 + 24);
      sub_1BFE86E48(v10, v11, v12, v13);
      *a1 = v10;
      a1[1] = v11;
      a1[2] = v12;
      *((unsigned char *)a1 + 24) = v13;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v14 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)a1 + *(int *)(v15 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

uint64_t assignWithCopy for FormatPostPurchase(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatURL();
  uint64_t v7 = *(void *)(v6 - 8);
  char v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v13 = *(void *)a2;
        uint64_t v14 = *(void *)(a2 + 8);
        uint64_t v15 = *(void *)(a2 + 16);
        char v16 = *(unsigned char *)(a2 + 24);
        sub_1BFE86E48(v13, v14, v15, v16);
        *(void *)a1 = v13;
        *(void *)(a1 + 8) = v14;
        *(void *)(a1 + 16) = v15;
        *(unsigned char *)(a1 + 24) = v16;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v17 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
          uint64_t v18 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(a1 + *(int *)(v18 + 20)) = *(void *)(a2 + *(int *)(v18 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
      return a1;
    }
LABEL_9:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_1BFEFED48(a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_1BFEFED48(a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
    int v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 2)
    {
      uint64_t v20 = *(void *)a2;
      uint64_t v21 = *(void *)(a2 + 8);
      uint64_t v22 = *(void *)(a2 + 16);
      char v23 = *(unsigned char *)(a2 + 24);
      sub_1BFE86E48(v20, v21, v22, v23);
      *(void *)a1 = v20;
      *(void *)(a1 + 8) = v21;
      *(void *)(a1 + 16) = v22;
      *(unsigned char *)(a1 + 24) = v23;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v12 == 1)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v24 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v25 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(a1 + *(int *)(v25 + 20)) = *(void *)(a2 + *(int *)(v25 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for FormatPostPurchase(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatURL();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v8 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *assignWithTake for FormatPostPurchase(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatURL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1BFEFED48((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v15 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&a1[*(int *)(v16 + 20)] = *(void *)&a2[*(int *)(v16 + 20)];
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v11 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1BFEFED48((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatURL);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    uint64_t v12 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
    uint64_t v13 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&a1[*(int *)(v13 + 20)] = *(void *)&a2[*(int *)(v13 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPostPurchase(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11CAD20);
}

uint64_t sub_1C11CAD20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FormatPostPurchase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11CADA0);
}

uint64_t sub_1C11CADA0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for FormatURL();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C11CAE24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatURL();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_1C11CAE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

unsigned char *storeEnumTagSinglePayload for FormatPostPurchase.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11CAFC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPostPurchase.CodingType()
{
  return &type metadata for FormatPostPurchase.CodingType;
}

unsigned char *storeEnumTagSinglePayload for FormatPostPurchase.LegacyCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C11CB09CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPostPurchase.LegacyCodingKeys()
{
  return &type metadata for FormatPostPurchase.LegacyCodingKeys;
}

unint64_t sub_1C11CB0D8()
{
  unint64_t result = qword_1EA1ACA60;
  if (!qword_1EA1ACA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA60);
  }
  return result;
}

unint64_t sub_1C11CB130()
{
  unint64_t result = qword_1EA1ACA68;
  if (!qword_1EA1ACA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA68);
  }
  return result;
}

unint64_t sub_1C11CB188()
{
  unint64_t result = qword_1EB888818;
  if (!qword_1EB888818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888818);
  }
  return result;
}

unint64_t sub_1C11CB1E0()
{
  unint64_t result = qword_1EB888810;
  if (!qword_1EB888810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888810);
  }
  return result;
}

unint64_t sub_1C11CB234()
{
  unint64_t result = qword_1EB87EBA0;
  if (!qword_1EB87EBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87EBA0);
  }
  return result;
}

uint64_t sub_1C11CB288()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void sub_1C11CB2D4()
{
  if (!qword_1EA1ACA70)
  {
    type metadata accessor for FormatPostPurchase();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1ACA70);
    }
  }
}

ValueMetadata *type metadata accessor for FormatMenuGroupable()
{
  return &type metadata for FormatMenuGroupable;
}

uint64_t sub_1C11CB348@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1080798();
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a3 >> 61)
  {
    case 1uLL:
      uint64_t v68 = a4;
      uint64_t v69 = a2;
      uint64_t v87 = v4;
      uint64_t v29 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v30 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v31 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v32 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v33 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v34 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v35 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      char v36 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
      uint64_t v37 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      uint64_t v70 = v29;
      uint64_t v71 = v30;
      uint64_t v72 = v31;
      uint64_t v73 = v32;
      uint64_t v74 = v33;
      uint64_t v75 = v34;
      uint64_t v76 = v35;
      LOBYTE(v77) = v36;
      uint64_t v78 = v37;
      uint64_t v67 = v37;
      sub_1C05DD234(v29, v30, v31, v32);
      sub_1C05DD254(v33, v34, v35);
      swift_bridgeObjectRetain();
      uint64_t v38 = v87;
      sub_1C1087188((uint64_t)a1, v69, (uint64_t)&v79);
      sub_1C05DD214(v29, v30, v31, v32);
      sub_1C05DD1F8(v33, v34, v35);
      uint64_t result = swift_bridgeObjectRelease();
      if (!v38)
      {
        uint64_t v39 = v79;
        uint64_t v40 = v80;
        char v41 = v81;
        uint64_t v42 = v82;
        char v43 = v83;
        uint64_t v44 = v84;
        char v45 = v85;
        uint64_t v46 = v86;
        uint64_t v47 = swift_allocObject();
        *(void *)(v47 + 16) = v39;
        *(void *)(v47 + 24) = v40;
        *(unsigned char *)(v47 + 32) = v41;
        *(void *)(v47 + 40) = v42;
        *(unsigned char *)(v47 + 48) = v43;
        *(void *)(v47 + 56) = v44;
        *(unsigned char *)(v47 + 64) = v45;
        uint64_t result = v47 | 0x2000000000000000;
        *(void *)(v47 + 72) = v46;
        goto LABEL_14;
      }
      break;
    case 2uLL:
      uint64_t v48 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v49 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1C125B8E4(a2, (uint64_t)a1, v48, v49);
      sub_1C11CB348(a1, a2, v50);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      break;
    case 3uLL:
      uint64_t v51 = a3 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v52 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v53 = *(void *)(v51 + 24);
      uint64_t v54 = *(void *)(v51 + 32);
      MEMORY[0x1F4188790](v14);
      *(&v66 - 2) = (uint64_t)a1;
      *(&v66 - 1) = a2;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1C125C6A4((uint64_t)a1, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C11CC354, (uint64_t)(&v66 - 4), v52, v53, v54);
      if (!v5)
      {
        uint64_t v59 = v55;
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v60 = swift_allocObject();
        *(void *)(v60 + 16) = v59;
        uint64_t result = v60 | 0x4000000000000000;
        goto LABEL_15;
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      break;
    case 4uLL:
      char v56 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t result = sub_1BFF23670(*(uint64_t *)((char *)a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v12);
      if (!v4)
      {
        LOBYTE(v70) = v56;
        sub_1C139F9C4((uint64_t)v12, (uint64_t)v16);
        sub_1BFF2F7F4((uint64_t)v12);
        uint64_t v57 = swift_allocBox();
        sub_1C11CC2F0((uint64_t)v16, v58);
        uint64_t result = v57 | 0x6000000000000000;
        goto LABEL_15;
      }
      break;
    default:
      uint64_t v68 = a4;
      uint64_t v69 = a2;
      uint64_t v17 = *(void *)(a3 + 16);
      uint64_t v18 = *(void *)(a3 + 24);
      uint64_t v19 = *(void *)(a3 + 32);
      uint64_t v20 = *(void *)(a3 + 40);
      uint64_t v21 = *(void *)(a3 + 48);
      uint64_t v22 = *(void *)(a3 + 56);
      uint64_t v87 = v4;
      uint64_t v24 = *(void *)(a3 + 64);
      uint64_t v23 = *(void *)(a3 + 72);
      uint64_t v70 = v17;
      uint64_t v71 = v18;
      uint64_t v72 = v19;
      uint64_t v73 = v20;
      uint64_t v25 = v21;
      uint64_t v67 = v21;
      uint64_t v74 = v21;
      uint64_t v75 = v22;
      uint64_t v76 = v24;
      uint64_t v77 = v23;
      sub_1C0007DB4(v17, v18, v19, v20);
      sub_1C0007EEC(v25, v22, v24);
      swift_retain();
      uint64_t v26 = v87;
      sub_1C0D0DE68(a1, v69, (uint64_t)&v79);
      sub_1C0007E38(v17, v18, v19, v20);
      sub_1C0007E9C(v67, v22, v24);
      uint64_t result = swift_release();
      if (!v26)
      {
        uint64_t v28 = v84;
        if (v84 == 1)
        {
          uint64_t result = 0x8000000000000000;
        }
        else
        {
          char v61 = v83;
          uint64_t v62 = v82;
          char v63 = v81;
          uint64_t v65 = v79;
          uint64_t v64 = v80;
          uint64_t result = swift_allocObject();
          *(void *)(result + 16) = v65;
          *(void *)(result + 24) = v64;
          *(unsigned char *)(result + 32) = v63 & 1;
          *(void *)(result + 40) = v62;
          *(unsigned char *)(result + 48) = v61 & 1;
          *(void *)(result + 56) = v28;
        }
LABEL_14:
        a4 = v68;
LABEL_15:
        *a4 = result;
      }
      break;
  }
  return result;
}

uint64_t sub_1C11CB840(unint64_t a1, unint64_t a2)
{
  switch(a1 >> 61)
  {
    case 1uLL:
      if (a2 >> 61 != 1) {
        goto LABEL_19;
      }
      uint64_t v12 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      char v13 = *(unsigned char *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
      uint64_t v14 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v15 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      char v16 = *(unsigned char *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
      uint64_t v17 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      long long v18 = *(_OWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      long long v37 = *(_OWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      long long v38 = v18;
      long long v39 = *(_OWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      *(void *)&long long v40 = v14;
      BYTE8(v40) = v13;
      uint64_t v41 = v12;
      long long v19 = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      long long v32 = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      long long v33 = v19;
      long long v34 = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      *(void *)&long long v35 = v15;
      BYTE8(v35) = v16;
      uint64_t v36 = v17;
      char v6 = sub_1C1087518((uint64_t)&v37, (uint64_t)&v32);
      return v6 & 1;
    case 2uLL:
      if (a2 >> 61 != 2) {
        goto LABEL_19;
      }
      uint64_t v7 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v9 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((sub_1C00EAE40(v7, v9) & 1) == 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      char v11 = sub_1C11CB840(v8, v10);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3uLL:
      if (a2 >> 61 != 3) {
        goto LABEL_19;
      }
      uint64_t v20 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v22 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v23 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v25 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v26 = *(void *)(v20 + 32);
      __int16 v27 = *(_WORD *)(v20 + 40);
      uint64_t v28 = *(void *)(v23 + 32);
      __int16 v29 = *(_WORD *)(v23 + 40);
      long long v37 = *(_OWORD *)(v20 + 16);
      *(void *)&long long v38 = v26;
      WORD4(v38) = v27;
      long long v32 = *(_OWORD *)(v23 + 16);
      *(void *)&long long v33 = v28;
      WORD4(v33) = v29;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (static FormatCommandBinding.== infix(_:_:)(&v37, &v32) & 1) != 0 && (sub_1C00EAA90(v21, v24))
      {
        char v30 = sub_1C11CB840(v22, v25);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        if (v30)
        {
LABEL_16:
          char v6 = 1;
          return v6 & 1;
        }
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
LABEL_19:
      char v6 = 0;
      return v6 & 1;
    case 4uLL:
      if (a2 >> 61 != 4) {
        goto LABEL_19;
      }
      char v6 = *(unsigned char *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) ^ *(unsigned char *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) ^ 1;
      return v6 & 1;
    default:
      if (a2 >> 61) {
        goto LABEL_19;
      }
      long long v2 = *(_OWORD *)(a1 + 32);
      long long v37 = *(_OWORD *)(a1 + 16);
      long long v38 = v2;
      long long v3 = *(_OWORD *)(a1 + 64);
      long long v39 = *(_OWORD *)(a1 + 48);
      long long v40 = v3;
      long long v4 = *(_OWORD *)(a2 + 32);
      long long v32 = *(_OWORD *)(a2 + 16);
      long long v33 = v4;
      long long v5 = *(_OWORD *)(a2 + 64);
      long long v34 = *(_OWORD *)(a2 + 48);
      long long v35 = v5;
      char v6 = sub_1C0D0E4C8(&v37, &v32);
      return v6 & 1;
  }
}

unint64_t sub_1C11CBB68@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1C089A4D0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C11CBB94(void *a1)
{
  return sub_1C078B0C0(a1, *v1);
}

uint64_t sub_1C11CBBB0(unint64_t *a1, unint64_t *a2)
{
  return sub_1C11CB840(*a1, *a2);
}

unint64_t sub_1C11CBBBC(void *a1)
{
  a1[1] = sub_1C0079C9C();
  a1[2] = sub_1C08E53F4();
  unint64_t result = sub_1C11CBBF4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11CBBF4()
{
  unint64_t result = qword_1EA1ACA78;
  if (!qword_1EA1ACA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA78);
  }
  return result;
}

unint64_t sub_1C11CBC48(uint64_t a1)
{
  unint64_t result = sub_1C08E45F0();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C11CBC70(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = a1;
  switch(a4 >> 61)
  {
    case 1uLL:
      uint64_t v20 = *(void *)((a4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v22 = *(void *)((a4 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v21 = *(void *)((a4 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v23 = *(void *)((a4 & 0x1FFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v50 = *(void *)((a4 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v52 = *(void *)((a4 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v24 = *(void *)((a4 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v25 = *(void *)((a4 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      sub_1C0D0E698();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v44 = v20;
      char v47 = v21;
      uint64_t v49 = v22;
      sub_1C05DD234(v20, v50, v22, v21);
      uint64_t v43 = v23;
      uint64_t v45 = v24;
      sub_1C05DD254(v52, v23, v24);
      swift_bridgeObjectRetain_n();
      __int16 v27 = sub_1C11CC130(v25, v6, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v28 = v27[2];
      if (v28)
      {
        swift_bridgeObjectRetain();
        __int16 v29 = v27 + 5;
        uint64_t v30 = v28;
        do
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v29 += 3;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease();
        char v31 = 0;
        long long v32 = (char *)(v27 + 6);
        do
        {
          char v33 = *v32;
          v32 += 24;
          v31 |= v33;
          --v28;
        }
        while (v28);
        uint64_t v34 = v43;
        uint64_t v35 = v44;
        uint64_t v36 = v50;
      }
      else
      {
        uint64_t v36 = v50;
        char v31 = 0;
        uint64_t v34 = v43;
        uint64_t v35 = v44;
      }
      swift_bridgeObjectRelease();
      *(void *)(inited + 32) = 0;
      *(void *)(inited + 40) = 0xE000000000000000;
      *(unsigned char *)(inited + 48) = v31 & 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = 0;
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      sub_1C05DD214(v35, v36, v49, v47);
      sub_1C05DD1F8(v52, v34, v45);
      swift_bridgeObjectRelease();
      break;
    case 2uLL:
      uint64_t v37 = *(void *)(*(void *)((a4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) + 16);
      if (!v37) {
        goto LABEL_2;
      }
      swift_retain();
      swift_bridgeObjectRetain_n();
      uint64_t v38 = swift_bridgeObjectRetain();
      uint64_t v39 = 32;
      do
      {
        sub_1BFF273E0(v38);
        char v41 = v40;
        uint64_t v38 = sub_1BFF27F20();
        if (v41) {
          break;
        }
        v39 += 16;
        --v37;
      }
      while (v37);
      swift_release();
      swift_bridgeObjectRelease_n();
      break;
    case 3uLL:
    case 4uLL:
LABEL_2:
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v7 = *(void *)(a4 + 16);
      uint64_t v8 = *(void *)(a4 + 24);
      uint64_t v9 = *(void *)(a4 + 32);
      uint64_t v11 = *(void *)(a4 + 48);
      uint64_t v10 = *(void *)(a4 + 56);
      uint64_t v51 = *(void *)(a4 + 40);
      uint64_t v12 = *(void *)(a4 + 64);
      sub_1C0D0E698();
      uint64_t v13 = swift_initStackObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
      uint64_t v48 = v7;
      uint64_t v14 = v7;
      uint64_t v15 = v8;
      uint64_t v16 = v8;
      uint64_t v17 = v9;
      sub_1C0007DB4(v14, v15, v9, v51);
      sub_1C0007EEC(v11, v10, v12);
      swift_retain();
      *(void *)(v13 + 32) = sub_1C0D0E204(a1, a2, a3);
      *(void *)(v13 + 40) = v18;
      *(unsigned char *)(v13 + 48) = v19 & 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = 0;
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      sub_1C0007E38(v48, v16, v17, v51);
      sub_1C0007E9C(v11, v10, v12);
      swift_release();
      break;
  }
  return v6;
}

void *sub_1C11CC130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  long long v5 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v26 = v4;
    uint64_t v7 = v5[4];
    uint64_t v8 = v5[2];
    uint64_t v9 = v5[3];
    uint64_t v10 = *v5;
    uint64_t v23 = *(v5 - 2);
    uint64_t v24 = *(v5 - 1);
    uint64_t v25 = v5[1];
    sub_1C0007DB4(v23, v24, *v5, v25);
    sub_1C0007EEC(v8, v9, v7);
    swift_retain();
    uint64_t v11 = sub_1C0D0E204(a2, a3, a4);
    uint64_t v22 = v12;
    char v21 = v13;
    sub_1C0007E38(v23, v24, v10, v25);
    sub_1C0007E9C(v8, v9, v7);
    swift_release();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_1C0EE1BAC(0, v6[2] + 1, 1, v6);
    }
    unint64_t v15 = v6[2];
    unint64_t v14 = v6[3];
    if (v15 >= v14 >> 1) {
      uint64_t v6 = sub_1C0EE1BAC((void *)(v14 > 1), v15 + 1, 1, v6);
    }
    v5 += 8;
    _OWORD v6[2] = v15 + 1;
    uint64_t v16 = &v6[3 * v15];
    v16[4] = v11;
    uint64_t v16[5] = v22;
    *((unsigned char *)v16 + 48) = v21 & 1;
    uint64_t v4 = v26 - 1;
  }
  while (v26 != 1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C11CC2F0(uint64_t a1, uint64_t a2)
{
  sub_1C1080798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C11CC354(void *a1)
{
  return sub_1C11CB348(*(void *)(v1 + 16), *(void *)(v1 + 24), *a1);
}

uint64_t sub_1C11CC378()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C11CC3B0()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255) {
    sub_1C04B5360(*(void *)(v0 + 16), *(void *)(v0 + 24), v1 & 1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 48);
  if (v2 != 255) {
    sub_1C01DD018(*(void **)(v0 + 40), v2 & 1);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C11CC418()
{
  sub_1C04B5360(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_1C01DD018(*(void **)(v0 + 40), *(unsigned char *)(v0 + 48));
  swift_release();
  return swift_deallocObject();
}

void FormatFontAttributes.width.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FormatFontAttributes.slant.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FormatFontAttributes.grade.getter()
{
  return *(void *)(v0 + 24);
}

void FormatFontAttributes.design.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

uint64_t sub_1C11CC4A0(void *a1)
{
  return FormatFontAttributes.encode(to:)(a1);
}

uint64_t _s8NewsFeed20FormatFontAttributesV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  int v4 = *(unsigned __int8 *)a1;
  double v5 = a1[1];
  unsigned __int8 v6 = *((unsigned char *)a1 + 16);
  uint64_t v7 = *((void *)a1 + 3);
  unsigned __int8 v8 = *((unsigned char *)a1 + 32);
  int v9 = *((unsigned __int8 *)a1 + 33);
  int v10 = *(unsigned __int8 *)a2;
  double v11 = a2[1];
  int v12 = *((unsigned __int8 *)a2 + 16);
  uint64_t v13 = *((void *)a2 + 3);
  int v14 = *((unsigned __int8 *)a2 + 32);
  int v15 = *((unsigned __int8 *)a2 + 33);
  if (v4 != 10)
  {
    if (v10 == 10 || (sub_1C1491ED0(v4, v10) & 1) == 0) {
      return 0;
    }
LABEL_6:
    if (v6)
    {
      if (!v12) {
        return 0;
      }
    }
    else
    {
      if (v5 == v11) {
        char v16 = v12;
      }
      else {
        char v16 = 1;
      }
      if (v16) {
        return 0;
      }
    }
    if (v8)
    {
      if (!v14) {
        return 0;
      }
    }
    else
    {
      if (v7 == v13) {
        char v17 = v14;
      }
      else {
        char v17 = 1;
      }
      if (v17) {
        return 0;
      }
    }
    if (v9 == 4)
    {
      if (v15 != 4) {
        return 0;
      }
    }
    else if (v15 == 4 || (sub_1C1491D48(v9, v15) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (v10 == 10) {
    goto LABEL_6;
  }
  return 0;
}

unint64_t sub_1C11CC5B8(uint64_t a1)
{
  unint64_t result = sub_1C11CC5E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11CC5E0()
{
  unint64_t result = qword_1EA1ACA80;
  if (!qword_1EA1ACA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA80);
  }
  return result;
}

unint64_t sub_1C11CC634(void *a1)
{
  a1[1] = sub_1BFDEE33C();
  a1[2] = sub_1C08ED09C();
  unint64_t result = sub_1C11CC66C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11CC66C()
{
  unint64_t result = qword_1EA1ACA88;
  if (!qword_1EA1ACA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA88);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatFontAttributes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 252);
  }
  if (*(unsigned __int8 *)(a1 + 33) <= 4u) {
    int v3 = 4;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 33);
  }
  int v4 = v3 - 5;
  if (*(unsigned __int8 *)(a1 + 33) < 4u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FormatFontAttributes()
{
  return &type metadata for FormatFontAttributes;
}

uint64_t sub_1C11CC724(void *a1, double *a2)
{
  double v2 = *a2;
  double v3 = a2[1];
  uint64_t v5 = *((void *)a2 + 2);
  uint64_t v4 = *((void *)a2 + 3);
  unsigned int v6 = *((unsigned __int16 *)a2 + 16);
  id v7 = objc_msgSend(a1, sel_legibilityWeight);
  uint64_t v8 = MEMORY[0x1E4FBC868];
  if (v7 == (id)-1)
  {
    if (!UIAccessibilityIsBoldTextEnabled()) {
      goto LABEL_10;
    }
  }
  else if (!v7 || v7 != (id)1 && !UIAccessibilityIsBoldTextEnabled())
  {
    goto LABEL_10;
  }
  id v9 = objc_msgSend(self, sel_ts_fontLegibilityWeightAttributeName);
  if (!v9)
  {
    sub_1C151E62C();
    id v9 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 1);
  unint64_t v49 = sub_1BFFBE2BC();
  *(void *)&long long v48 = v10;
  sub_1BFF993A8(&v48, v47);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C1065750(v47, v9, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
LABEL_10:
  if ((v6 & 0xFF00) != 0x500)
  {
    int v12 = (double *)MEMORY[0x1E4F24738];
    uint64_t v13 = MEMORY[0x1E4FBC868];
    switch(LOBYTE(v2))
    {
      case 1:
        int v12 = (double *)MEMORY[0x1E4F24700];
        goto LABEL_21;
      case 2:
        int v12 = (double *)MEMORY[0x1E4F246E8];
        goto LABEL_21;
      case 3:
        int v12 = (double *)MEMORY[0x1E4F24708];
        goto LABEL_21;
      case 4:
        int v12 = (double *)MEMORY[0x1E4F246F0];
        goto LABEL_21;
      case 5:
        int v12 = (double *)MEMORY[0x1E4F24718];
        goto LABEL_21;
      case 6:
        int v12 = (double *)MEMORY[0x1E4F24728];
        goto LABEL_21;
      case 7:
        int v12 = (double *)MEMORY[0x1E4F24720];
        goto LABEL_21;
      case 8:
        int v12 = (double *)MEMORY[0x1E4F246F8];
        goto LABEL_21;
      case 9:
        int v12 = (double *)MEMORY[0x1E4F24710];
        goto LABEL_21;
      case 0xA:
        goto LABEL_22;
      default:
LABEL_21:
        double v14 = *v12;
        uint64_t v15 = sub_1C151E62C();
        uint64_t v17 = v16;
        id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v14);
        unint64_t v49 = sub_1BFFBE2BC();
        *(void *)&long long v48 = v18;
        sub_1BFF993A8(&v48, v47);
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        sub_1BFFB4A24(v47, v15, v17, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_22:
        if ((v5 & 1) == 0)
        {
          uint64_t v20 = sub_1C151E62C();
          uint64_t v22 = v21;
          id v23 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v3);
          unint64_t v49 = sub_1BFFBE2BC();
          *(void *)&long long v48 = v23;
          sub_1BFF993A8(&v48, v47);
          char v24 = swift_isUniquelyReferenced_nonNull_native();
          sub_1BFFB4A24(v47, v20, v22, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if ((v6 & 1) == 0)
        {
          id v25 = objc_msgSend(self, sel_ts_fontSystemFontGradeTraitKey);
          uint64_t v26 = sub_1C151E62C();
          uint64_t v28 = v27;

          id v29 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, v4);
          unint64_t v49 = sub_1BFFBE2BC();
          *(void *)&long long v48 = v29;
          sub_1BFF993A8(&v48, v47);
          char v30 = swift_isUniquelyReferenced_nonNull_native();
          sub_1BFFB4A24(v47, v26, v28, v30);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        char v31 = (void **)MEMORY[0x1E4FB0928];
        switch(v6 >> 8)
        {
          case 1u:
            char v31 = (void **)MEMORY[0x1E4FB0938];
            goto LABEL_30;
          case 2u:
            char v31 = (void **)MEMORY[0x1E4FB0940];
            goto LABEL_30;
          case 3u:
            char v31 = (void **)MEMORY[0x1E4FB0930];
            goto LABEL_30;
          case 4u:
            goto LABEL_31;
          default:
LABEL_30:
            long long v32 = *v31;
            char v33 = self;
            id v34 = v32;
            id v35 = objc_msgSend(v33, sel_ts_fontSystemFontDesignTraitKey);
            uint64_t v36 = sub_1C151E62C();
            uint64_t v38 = v37;

            type metadata accessor for SystemDesign(0);
            unint64_t v49 = v39;
            *(void *)&long long v48 = v34;
            sub_1BFF993A8(&v48, v47);
            id v40 = v34;
            char v41 = swift_isUniquelyReferenced_nonNull_native();
            sub_1BFFB4A24(v47, v36, v38, v41);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_31:
            if (*(void *)(v13 + 16))
            {
              uint64_t v42 = (void *)*MEMORY[0x1E4FB0950];
              sub_1BFFB4FA4();
              unint64_t v49 = v43;
              *(void *)&long long v48 = v13;
              sub_1BFF993A8(&v48, v47);
              id v44 = v42;
              char v45 = swift_isUniquelyReferenced_nonNull_native();
              sub_1C1065750(v47, v44, v45);
            }
            swift_bridgeObjectRelease();
            break;
        }
        break;
    }
  }
  return v8;
}

unint64_t destroy for FeedConfigCoderError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8NewsFeed20FeedConfigCoderErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for FeedConfigCoderError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedConfigCoderError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedConfigCoderError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedConfigCoderError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void *sub_1C11CCF44(void *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *unint64_t result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedConfigCoderError()
{
  return &type metadata for FeedConfigCoderError;
}

ValueMetadata *type metadata accessor for SportsEventStatusRequest()
{
  return &type metadata for SportsEventStatusRequest;
}

uint64_t SportsDataServiceContext.hash(into:)()
{
  return sub_1C1520DCC();
}

BOOL static SportsDataServiceContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SportsDataServiceContext.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t SportsDataServiceContext.description.getter()
{
  uint64_t v1 = 0x68736572666572;
  if (*v0 != 1) {
    uint64_t v1 = 0x6863746566657270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746C7561666564;
  }
}

unint64_t sub_1C11CD070()
{
  unint64_t result = qword_1EA1ACA90;
  if (!qword_1EA1ACA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA90);
  }
  return result;
}

uint64_t sub_1C11CD0C4()
{
  uint64_t v1 = 0x68736572666572;
  if (*v0 != 1) {
    uint64_t v1 = 0x6863746566657270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746C7561666564;
  }
}

unsigned char *storeEnumTagSinglePayload for SportsDataServiceContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11CD1ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataServiceContext()
{
  return &type metadata for SportsDataServiceContext;
}

BOOL static FormatBindingShareAttributionExpression.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_1C11CD23C(uint64_t a1)
{
  unint64_t result = sub_1C11CD264();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11CD264()
{
  unint64_t result = qword_1EA1ACA98;
  if (!qword_1EA1ACA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACA98);
  }
  return result;
}

unint64_t sub_1C11CD2B8(void *a1)
{
  a1[1] = sub_1BFDECAE0();
  a1[2] = sub_1C08FF7D0();
  unint64_t result = sub_1C11CD2F0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11CD2F0()
{
  unint64_t result = qword_1EA1ACAA0;
  if (!qword_1EA1ACAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACAA0);
  }
  return result;
}

uint64_t sub_1C11CD344(void *a1)
{
  return FormatBindingShareAttributionExpression.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatBindingShareAttributionExpression()
{
  return &type metadata for FormatBindingShareAttributionExpression;
}

ValueMetadata *type metadata accessor for A12_V14()
{
  return &type metadata for A12_V14;
}

uint64_t sub_1C11CD3A4(void *a1)
{
  uint64_t v3 = v1;
  sub_1C11D0A68(0, &qword_1EA1ACB58, (uint64_t (*)(void))sub_1C11D0A14, (uint64_t)&type metadata for A12_V14.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11D0A14();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C11D0AD0(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C11CD5EC(uint64_t a1)
{
  unint64_t v2 = sub_1C11D0A14();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11CD628(uint64_t a1)
{
  unint64_t v2 = sub_1C11D0A14();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C11CD664@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C11D0764(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C11CD6AC(void *a1)
{
  return sub_1C11CD3A4(a1);
}

uint64_t sub_1C11CD6C4()
{
  sub_1C11D03F8();
  return sub_1C151798C();
}

uint64_t sub_1C11CD740@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C11D0A68(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C11CD7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v74 = a2;
  char v61 = a3;
  uint64_t v5 = sub_1C151635C();
  uint64_t v56 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v62 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v49 - v11;
  uint64_t v13 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  *(void *)&long long v70 = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)&v70))
  {
    sub_1C0020AF0();
    swift_allocError();
    *(_OWORD *)uint64_t v19 = 0u;
    *(_OWORD *)(v19 + 16) = 0u;
    *(void *)(v19 + 32) = 0;
    *(unsigned char *)(v19 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    uint64_t v55 = a1;
    uint64_t v52 = v15;
    sub_1BFF1AFA4(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    uint64_t v54 = type metadata accessor for GroupLayoutContext;
    uint64_t v53 = v12;
    sub_1BFF1AFA4(v74, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v21 = v17;
    uint64_t v22 = v17;
    unsigned __int8 v23 = v18;
    sub_1BFFFC7A0(v22, v18);
    sub_1C151634C();
    uint64_t v51 = sub_1C151633C();
    uint64_t v50 = v24;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v5);
    uint64_t v72 = &type metadata for A12_V14;
    unint64_t v25 = sub_1C0186974();
    unint64_t v73 = v25;
    LOBYTE(v70) = v16;
    *((void *)&v70 + 1) = v21;
    unsigned __int8 v71 = v18;
    type metadata accessor for GroupLayoutKey();
    uint64_t v26 = swift_allocObject();
    sub_1BFFFC7A0(v21, v18);
    uint64_t v64 = sub_1C1520FAC();
    uint64_t v65 = v27;
    uint64_t v68 = 95;
    unint64_t v69 = 0xE100000000000000;
    uint64_t v66 = 45;
    unint64_t v67 = 0xE100000000000000;
    sub_1BFF27ECC();
    uint64_t v28 = sub_1C151FEBC();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *(void *)(v26 + 16) = v28;
    *(void *)(v26 + 24) = v30;
    char v31 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    uint64_t v32 = v50;
    *char v31 = v51;
    v31[1] = v32;
    sub_1BFC66384((uint64_t)&v70, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    uint64_t v33 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BFF2389C((uint64_t)v52, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v33, 0, 1, v58);
    uint64_t v34 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BFF2389C((uint64_t)v53, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v34, 0, 1, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    sub_1BFFFC630(v21, v18);
    uint64_t v72 = &type metadata for A12_V14;
    unint64_t v73 = v25;
    LOBYTE(v70) = v16;
    *((void *)&v70 + 1) = v21;
    unsigned __int8 v71 = v18;
    uint64_t v35 = v62;
    sub_1BFF1AFA4(v74, v62, (uint64_t (*)(void))v54);
    sub_1C00192A8(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v37 = (void *)(v36 + 16);
    swift_beginAccess();
    uint64_t v38 = *(void **)(v36 + 16);
    sub_1BFFFC7A0(v21, v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v36 + 16) = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v38 = sub_1BFFB83AC(0, v38[2] + 1, 1, v38);
      *uint64_t v37 = v38;
    }
    id v40 = v61;
    uint64_t v41 = v63;
    unint64_t v43 = v38[2];
    unint64_t v42 = v38[3];
    if (v43 >= v42 >> 1)
    {
      uint64_t v38 = sub_1BFFB83AC((void *)(v42 > 1), v43 + 1, 1, v38);
      *uint64_t v37 = v38;
    }
    v38[2] = v43 + 1;
    id v44 = &v38[2 * v43];
    v44[4] = sub_1C064667C;
    v44[5] = 0;
    swift_endAccess();
    uint64_t v45 = sub_1C001E608((uint64_t)&unk_1F1B835A8, 0, 0, v36, 0, 0, 0, 0);
    if (v41)
    {
      swift_release();
      swift_release();
      sub_1BFF1F104(v35, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    }
    else
    {
      uint64_t v46 = v45;
      swift_release();
      uint64_t v47 = type metadata accessor for A12_V14.Bound();
      v40[3] = v47;
      v40[4] = sub_1C11D0AD0(&qword_1EA1ACAB8, (void (*)(uint64_t))type metadata accessor for A12_V14.Bound);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
      uint64_t *boxed_opaque_existential_0 = v26;
      sub_1BFC773DC(&v70, (uint64_t)(boxed_opaque_existential_0 + 1));
      uint64_t result = sub_1BFF2389C(v35, (uint64_t)boxed_opaque_existential_0 + *(int *)(v47 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v47 + 28)) = v46;
    }
  }
  return result;
}

double sub_1C11CDEEC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + *(int *)(type metadata accessor for A12_V14.Bound() + 28));
  uint64_t v23 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0182EAC((void (*)(uint64_t))sub_1C11D037C, (uint64_t)v22, v8, (uint64_t)v29);
  swift_bridgeObjectRelease();
  uint64_t v10 = *MEMORY[0x1E4FAB6D8];
  uint64_t v11 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v7, v10, v11);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
  uint64_t v21 = v9;
  sub_1C11D04B0(0, &qword_1EA1ACAD8, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v20 = sub_1C1517BEC();
  uint64_t v12 = sub_1C1517BFC();
  *(_OWORD *)uint64_t v19 = v25;
  uint64_t v13 = v26;
  uint64_t v14 = v27;
  uint64_t v24 = v28;
  *(void *)&long long v25 = v9;
  MEMORY[0x1F4188790](v12);
  sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v25 = v15;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v16 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  double result = v19[0];
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v19;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = v14;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 40) = v16;
  *(void *)(a1 + 48) = v18;
  return result;
}

uint64_t sub_1C11CE2C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *a2;
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  uint64_t v10 = (char *)a2 + *(int *)(type metadata accessor for A12_V14.Bound() + 24);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(void *)(*(void *)&v10[*(int *)(v11 + 40)] + 16);
  double v13 = *(double *)&v10[*(int *)(v11 + 32)];
  sub_1BFC66384(v12 + 16, (uint64_t)v19);
  sub_1BFC66384(v12 + 56, (uint64_t)v18);
  double v14 = v13 * *(double *)(v12 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v19, inited + 16);
  sub_1BFC773DC(v18, inited + 56);
  *(double *)(inited + 96) = v14;
  char v21 = 2;
  swift_retain();
  FeedLayoutStylerFactory.styler(withHeading:)(&v21, v20);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v20, a3);
}

uint64_t sub_1C11CE450(uint64_t a1, uint64_t a2)
{
  sub_1C11D0A68(0, &qword_1EA1ACAF0, (uint64_t (*)(void))sub_1C11D03A4, (uint64_t)&type metadata for A12_V14.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 12;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C11D04B0(0, &qword_1EA1ACAF8, MEMORY[0x1E4FAB6F0]);
  sub_1C11D046C(&qword_1EA1ACB00, &qword_1EA1ACAF8, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C11CE63C(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2;
  uint64_t v22 = sub_1C11D03A4;
  sub_1C11D0A68(0, &qword_1EA1ACAF0, (uint64_t (*)(void))sub_1C11D03A4, (uint64_t)&type metadata for A12_V14.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (void *)((char *)v21 - v6);
  uint64_t v25 = a1;
  uint64_t v8 = sub_1C151729C();
  uint64_t v9 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, *MEMORY[0x1E4FAB4E8], v8);
  *uint64_t v7 = v9;
  uint64_t v11 = *(void (**)(uint64_t *, void, uint64_t))(v5 + 104);
  v11(v7, *MEMORY[0x1E4FAB940], v4);
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11D04B0(0, &qword_1EA1ACB08, MEMORY[0x1E4FAB4D0]);
  v21[1] = v13;
  sub_1C11D046C(&qword_1EA1ACB10, &qword_1EA1ACB08, v12);
  sub_1C151738C();
  uint64_t v14 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v14(v7, v4);
  uint64_t v25 = a1;
  v11(v7, *MEMORY[0x1E4FABA28], v4);
  sub_1C11D0534();
  sub_1C11D0A68(0, &qword_1EA1ACB20, (uint64_t (*)(void))v22, (uint64_t)&type metadata for A12_V14.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x1E4FAB638], v16);
  uint64_t v24 = v23;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v7, v4);
}

uint64_t sub_1C11CE9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  sub_1C11D0A68(0, &qword_1EA1ACAF0, (uint64_t (*)(void))sub_1C11D03A4, (uint64_t)&type metadata for A12_V14.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v18 - v7);
  uint64_t v25 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 4;
  *uint64_t v8 = v9;
  unsigned int v21 = *MEMORY[0x1E4FABA10];
  uint64_t v10 = *(void (**)(uint64_t *))(v6 + 104);
  v10(v8);
  unint64_t v18 = v10;
  uint64_t v24 = a2;
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11D04B0(0, &qword_1EA1ACB08, MEMORY[0x1E4FAB4D0]);
  sub_1C11D046C(&qword_1EA1ACB10, &qword_1EA1ACB08, v11);
  sub_1C151734C();
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v12(v8, v5);
  uint64_t v13 = v20;
  uint64_t v25 = v20;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 4;
  *uint64_t v8 = v14;
  ((void (*)(uint64_t *, void, uint64_t))v10)(v8, v21, v5);
  uint64_t v15 = v19;
  uint64_t v23 = v19;
  sub_1C151734C();
  v12(v8, v5);
  uint64_t v25 = v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 4;
  *uint64_t v8 = v16;
  ((void (*)(uint64_t *, void, uint64_t))v18)(v8, v21, v5);
  uint64_t v22 = v15;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v12)(v8, v5);
}

uint64_t sub_1C11CECE8(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11D0A68(0, &qword_1EA1ACAF0, (uint64_t (*)(void))sub_1C11D03A4, (uint64_t)&type metadata for A12_V14.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B8A3C0;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  uint64_t *v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11D04B0(0, &qword_1EA1ACB08, MEMORY[0x1E4FAB4D0]);
  sub_1C11D046C(&qword_1EA1ACB10, &qword_1EA1ACB08, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C11CF2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11D0A68(0, &qword_1EA1ACAF0, (uint64_t (*)(void))sub_1C11D03A4, (uint64_t)&type metadata for A12_V14.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2+ *(void *)(v12 + 72)+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B8A3E8;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  uint64_t *v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11D04B0(0, &qword_1EA1ACB08, MEMORY[0x1E4FAB4D0]);
  sub_1C11D046C(&qword_1EA1ACB10, &qword_1EA1ACB08, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C11CF8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11D0A68(0, &qword_1EA1ACAF0, (uint64_t (*)(void))sub_1C11D03A4, (uint64_t)&type metadata for A12_V14.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 2 * *(void *)(v12 + 72), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B8A410;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  uint64_t *v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C11D04B0(0, &qword_1EA1ACB08, MEMORY[0x1E4FAB4D0]);
  sub_1C11D046C(&qword_1EA1ACB10, &qword_1EA1ACB08, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C11CFEB8@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V14.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C11CFFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C11CD7FC(a1, a2, a3);
}

uint64_t sub_1C11CFFC0()
{
  return sub_1C12BC34C();
}

unint64_t sub_1C11CFFD0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C11D0000();
  unint64_t result = sub_1C11D0054();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C11D0000()
{
  unint64_t result = qword_1EA1ACAA8;
  if (!qword_1EA1ACAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACAA8);
  }
  return result;
}

unint64_t sub_1C11D0054()
{
  unint64_t result = qword_1EA1ACAB0;
  if (!qword_1EA1ACAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACAB0);
  }
  return result;
}

uint64_t type metadata accessor for A12_V14.Bound()
{
  uint64_t result = qword_1EA1ACAC0;
  if (!qword_1EA1ACAC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C11D00F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11D0108);
}

uint64_t sub_1C11D0108(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C11D01B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11D01CC);
}

void *sub_1C11D01CC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C11D0274()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C11D0324(uint64_t a1)
{
  uint64_t result = sub_1C11D0AD0(&qword_1EA1ACAD0, (void (*)(uint64_t))type metadata accessor for A12_V14.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C11D037C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C11CE2C4(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1C11D039C(uint64_t a1)
{
  return sub_1C11CE450(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C11D03A4()
{
  unint64_t result = qword_1EA1ACAE0;
  if (!qword_1EA1ACAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACAE0);
  }
  return result;
}

unint64_t sub_1C11D03F8()
{
  unint64_t result = qword_1EA1ACAE8;
  if (!qword_1EA1ACAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACAE8);
  }
  return result;
}

uint64_t sub_1C11D044C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C11CFEB8(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C11D0454()
{
  return swift_deallocObject();
}

uint64_t sub_1C11D0464(uint64_t a1)
{
  return sub_1C11CE63C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C11D046C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C11D04B0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C11D04B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V14.Layout;
    v8[1] = &type metadata for A12_V14.Layout.Attributes;
    void v8[2] = sub_1C11D03A4();
    v8[3] = sub_1C11D03F8();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C11D0534()
{
  if (!qword_1EA1ACB18)
  {
    sub_1C11D0A68(255, &qword_1EA1ACB20, (uint64_t (*)(void))sub_1C11D03A4, (uint64_t)&type metadata for A12_V14.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ACB18);
    }
  }
}

uint64_t sub_1C11D05C4(uint64_t a1)
{
  return sub_1C11CE9A8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C11D05CC(uint64_t a1)
{
  return sub_1C11CECE8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C11D05D4(uint64_t a1)
{
  return sub_1C11CF2D0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C11D05DC(uint64_t a1)
{
  return sub_1C11CF8C4(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V14.Layout.Attributes()
{
  return &type metadata for A12_V14.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V14.Layout()
{
  return &type metadata for A12_V14.Layout;
}

unint64_t sub_1C11D0608()
{
  unint64_t result = qword_1EA1ACB28;
  if (!qword_1EA1ACB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACB28);
  }
  return result;
}

unint64_t sub_1C11D0660()
{
  unint64_t result = qword_1EA1ACB30;
  if (!qword_1EA1ACB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACB30);
  }
  return result;
}

unint64_t sub_1C11D06B8()
{
  unint64_t result = qword_1EA1ACB38;
  if (!qword_1EA1ACB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACB38);
  }
  return result;
}

unint64_t sub_1C11D0710()
{
  unint64_t result = qword_1EA1ACB40;
  if (!qword_1EA1ACB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACB40);
  }
  return result;
}

uint64_t sub_1C11D0764@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C11D0A68(0, &qword_1EA1ACB48, (uint64_t (*)(void))sub_1C11D0A14, (uint64_t)&type metadata for A12_V14.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11D0A14();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C11D0AD0(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  void *v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  v10[3] = v14;
  void v10[4] = v15;
  return result;
}

unint64_t sub_1C11D0A14()
{
  unint64_t result = qword_1EA1ACB50;
  if (!qword_1EA1ACB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACB50);
  }
  return result;
}

void sub_1C11D0A68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C11D0AD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V14.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11D0BE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V14.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V14.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C11D0C20()
{
  unint64_t result = qword_1EA1ACB60;
  if (!qword_1EA1ACB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACB60);
  }
  return result;
}

unint64_t sub_1C11D0C78()
{
  unint64_t result = qword_1EA1ACB68;
  if (!qword_1EA1ACB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACB68);
  }
  return result;
}

unint64_t sub_1C11D0CD0()
{
  unint64_t result = qword_1EA1ACB70;
  if (!qword_1EA1ACB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACB70);
  }
  return result;
}

uint64_t FormatSizeColumn.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FormatSizeColumn.alignOrigin.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 36)) = result;
  return result;
}

uint64_t (*FormatSizeColumn.alignOrigin.modify())(void)
{
  return nullsub_1;
}

uint64_t static FormatSizeColumn.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (sub_1C151E5CC())
  {
    uint64_t v4 = type metadata accessor for FormatSizeColumn();
    char v5 = *(unsigned char *)(a1 + *(int *)(v4 + 36)) ^ *(unsigned char *)(a2 + *(int *)(v4 + 36)) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C11D0E00(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C11D0E3C(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1C11D0EBC(uint64_t a1, uint64_t a2)
{
  return static FormatSizeColumn.== infix(_:_:)(a1, a2);
}

uint64_t sub_1C11D0EC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FormatSizeColumn();
  uint64_t result = FormatSizeColumn.alignOrigin.getter(v2);
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C11D0F08(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = type metadata accessor for FormatSizeColumn();
  return FormatSizeColumn.alignOrigin.setter(v1, v2);
}

uint64_t sub_1C11D0F48()
{
  return 16;
}

__n128 sub_1C11D0F54(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

id PuzzleHistoryModel.historyItem.getter()
{
  return *v0;
}

uint64_t PuzzleHistoryModel.puzzle.getter()
{
  return swift_unknownObjectRetain();
}

void *PuzzleHistoryServiceChange.historyModel.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *a1 = *(void *)v1;
  a1[1] = v3;
  return sub_1C11D0FB8(v2, v3, *(unsigned char *)(v1 + 16));
}

void *sub_1C11D0FB8(void *result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u)
  {
    id v4 = result;
    return (void *)swift_unknownObjectRetain();
  }
  return result;
}

uint64_t PuzzleHistoryServiceChange.debugDescription.getter()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    if (*(unsigned char *)(v0 + 16) == 1)
    {
      id v3 = v2;
      swift_unknownObjectRetain();
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v12 = 0x286465676E616863;
      id v4 = objc_msgSend(v3, sel_puzzleID);
      sub_1C151E62C();

      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      objc_msgSend(v3, sel_progressLevel);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      char v5 = v2;
      uint64_t v6 = v1;
      unsigned __int8 v7 = 1;
    }
    else
    {
      uint64_t v12 = 0x286465766F6D6572;
      sub_1C11D0FB8(v2, v1, 2u);
      id v10 = objc_msgSend(v2, sel_puzzleID);
      sub_1C151E62C();

      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      char v5 = v2;
      uint64_t v6 = v1;
      unsigned __int8 v7 = 2;
    }
  }
  else
  {
    id v8 = v2;
    swift_unknownObjectRetain();
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    uint64_t v12 = 0x286465646461;
    id v9 = objc_msgSend(v8, sel_puzzleID);
    sub_1C151E62C();

    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    objc_msgSend(v8, sel_progressLevel);
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    char v5 = v2;
    uint64_t v6 = v1;
    unsigned __int8 v7 = 0;
  }
  sub_1C02B137C(v5, v6, v7);
  return v12;
}

void *initializeBufferWithCopyOfBuffer for PuzzleHistoryModel(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for PuzzleHistoryModel(id *a1)
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for PuzzleHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

id *assignWithTake for PuzzleHistoryModel(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleHistoryModel()
{
  return &type metadata for PuzzleHistoryModel;
}

void *destroy for PuzzleHistoryServiceChange(uint64_t a1)
{
  return sub_1C02B137C(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed26PuzzleHistoryServiceChangeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C11D0FB8(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PuzzleHistoryServiceChange(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C11D0FB8(*(void **)a2, v4, v5);
  id v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C02B137C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PuzzleHistoryServiceChange(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C02B137C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleHistoryServiceChange()
{
  return &type metadata for PuzzleHistoryServiceChange;
}

uint64_t dispatch thunk of PuzzleHistoryObserver.historyService(_:observedChanges:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PuzzlePlayStateProvider.hasPuzzleBeenPlayed(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PuzzlePlayStateProvider.hasPuzzleBeenCompleted(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PuzzlePlayStateProvider.hasPuzzleEverBeenCompleted(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of PuzzlePlayStateProvider.puzzleHasFirstCompletedDate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of PuzzlePlayStateProvider.puzzleUsedReveal(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PuzzlePlayStateProvider.puzzleHistoryItem(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of PuzzleHistoryServiceType.syncHistory()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C014AF5C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PuzzleHistoryServiceType.playStarted(for:puzzleTypeID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of PuzzleHistoryServiceType.updateProgress(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of PuzzleHistoryServiceType.removeHistory(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PuzzleHistoryServiceType.setPuzzleStreakEligible(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PuzzleHistoryServiceType.sortedPuzzleIDs(for:fromDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of PuzzleHistoryServiceType.allSortedPuzzleIDs(fromDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of PuzzleHistoryServiceType.isPuzzleHistoryEmpty()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of PuzzleHistoryServiceType.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of PuzzleHistoryServiceType.updateStatsInfo(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_1C11D17F4()
{
  sub_1BFEEA1C8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v1 - 8);
  char v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unsigned __int8 v6 = (char *)&v15 - v5;
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  uint64_t v8 = (void *)sub_1C151E5EC();
  id v9 = objc_msgSend(v7, sel_puzzleHistoryItemForPuzzleID_, v8);

  if (!v9)
  {
    uint64_t v12 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
LABEL_7:
    uint64_t v13 = 0;
    goto LABEL_8;
  }
  id v10 = objc_msgSend(v9, sel_firstCompletedDate);

  if (v10)
  {
    sub_1C15162BC();

    uint64_t v11 = sub_1C151631C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 0, 1, v11);
  }
  else
  {
    uint64_t v11 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
  }
  sub_1BFCB311C((uint64_t)v3, (uint64_t)v6);
  sub_1C151631C();
  uint64_t v13 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v6, 1, v11) == 1) {
    goto LABEL_7;
  }
LABEL_8:
  sub_1BFF97BE4((uint64_t)v6);
  return v13;
}

void sub_1C11D1A40(uint64_t *a1, void *a2)
{
  uint64_t v36 = sub_1C151631C();
  uint64_t v5 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA1C8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  *(void *)&double v9 = MEMORY[0x1F4188790](v8 - 8).n128_u64[0];
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = *a1;
  uint64_t v39 = a1[1];
  uint64_t v40 = v12;
  LODWORD(v12) = *((unsigned __int8 *)a1 + 16);
  unint64_t v13 = a1[4];
  uint64_t v14 = (void *)a1[5];
  uint64_t v32 = a1[3];
  uint64_t v33 = v14;
  char v15 = *((unsigned char *)a1 + 48);
  uint64_t v16 = a1[7];
  uint64_t v17 = (void *)a1[8];
  int v37 = *((unsigned __int8 *)a1 + 72);
  int v38 = v12;
  id v35 = *(id *)(v2 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  id v18 = objc_msgSend(a2, sel_identifier, v9, v32, v14, v16);
  if (!v18)
  {
    sub_1C151E62C();
    id v18 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v19 = objc_msgSend(objc_msgSend(a2, sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  if (!v19)
  {
    sub_1C151E62C();
    id v19 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  if (v13 >> 60 == 15)
  {
    uint64_t v20 = 0;
    if ((v15 & 1) == 0) {
      goto LABEL_7;
    }
LABEL_10:
    uint64_t v21 = 0;
    if (!v17) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v20 = (void *)sub_1C151605C();
  if (v15) {
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v21 = (void *)sub_1C151F06C();
  if (v17) {
LABEL_11:
  }
    uint64_t v17 = (void *)sub_1C151E5EC();
LABEL_12:
  id v22 = objc_msgSend(a2, sel_difficulty);
  id v34 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v22);
  id v23 = objc_msgSend(a2, sel_publishDate);
  if (v23)
  {
    uint64_t v24 = v23;
    sub_1C15162BC();

    uint64_t v25 = v36;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v7, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v25);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v25) == 1)
    {
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v33 = v21;
      uint64_t v26 = (void *)sub_1C151621C();
      uint64_t v21 = v33;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v25);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v36);
    uint64_t v26 = 0;
  }
  id v27 = objc_msgSend(a2, sel_behaviorFlags);
  id v28 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, v27);
  id v29 = v34;
  LOBYTE(v31) = v38;
  LOBYTE(v30) = v37;
  objc_msgSend(v35, sel_updatePuzzle_puzzleTypeID_progressData_progressLevel_score_rankID_usedReveal_playDuration_isSolved_difficulty_publishDate_behaviorFlags_, v18, v19, v20, v40, v21, v17, v30, v39, v31, v34, v26, v28);
}

void sub_1C11D1E68(void *a1)
{
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA1C8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  *(void *)&double v8 = MEMORY[0x1F4188790](v7 - 8).n128_u64[0];
  uint64_t v10 = (char *)&v19 - v9;
  id v20 = *(id *)(v1 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  id v11 = objc_msgSend(a1, sel_identifier, v8);
  if (!v11)
  {
    sub_1C151E62C();
    id v11 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v12 = objc_msgSend(a1, sel_difficulty);
  id v13 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v12);
  id v14 = objc_msgSend(a1, sel_publishDate);
  if (v14)
  {
    char v15 = v14;
    sub_1C15162BC();

    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v10, v6, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
    {
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = (void *)sub_1C151621C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, 1, 1, v3);
    uint64_t v16 = 0;
  }
  id v17 = objc_msgSend(a1, sel_behaviorFlags);
  id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, v17);
  objc_msgSend(v20, sel_updatePuzzle_difficulty_publishDate_behaviorFlags_, v11, v13, v16, v18);
}

uint64_t sub_1C11D214C(void *a1)
{
  uint64_t v2 = sub_1C151661C();
  v30[0] = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA1C8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v30 - v9;
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)v30 - v12;
  *(void *)&double v15 = MEMORY[0x1F4188790](v14).n128_u64[0];
  id v17 = (char *)v30 - v16;
  id v18 = objc_msgSend(a1, sel_publishDate, v15);
  if (v18)
  {
    uint64_t v19 = v18;
    sub_1C15162BC();

    uint64_t v20 = sub_1C151631C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 0, 1, v20);
  }
  else
  {
    uint64_t v20 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
  }
  sub_1BFCB311C((uint64_t)v10, (uint64_t)v13);
  sub_1C151631C();
  uint64_t v21 = *(void *)(v20 - 8);
  id v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v22(v13, 1, v20) == 1)
  {
    sub_1BFF97BE4((uint64_t)v13);
    uint64_t v23 = 1;
  }
  else
  {
    sub_1C15165BC();
    sub_1C151613C();
    (*(void (**)(char *, uint64_t))(v30[0] + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v20);
    uint64_t v23 = 0;
  }
  uint64_t v24 = v30[1];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v17, v23, 1, v20);
  uint64_t v25 = *(void **)(v24 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  sub_1BFF97B80((uint64_t)v17, (uint64_t)v7);
  if (v22(v7, 1, v20) == 1)
  {
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = (void *)sub_1C151621C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
  }
  id v27 = objc_msgSend(a1, sel_identifier, v30[0]);
  if (!v27)
  {
    sub_1C151E62C();
    id v27 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v28 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  if (!v28)
  {
    sub_1C151E62C();
    id v28 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v25, sel_setFirstCompletedDate_forPuzzleID_puzzleTypeID_, v26, v27, v28);

  return sub_1BFF97BE4((uint64_t)v17);
}

uint64_t sub_1C11D2580(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = sub_1C151E24C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *uint64_t v7 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, unint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  char v8 = sub_1C151E26C();
  (*(void (**)(uint64_t *, unint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C15204BC();
    if (v9) {
      goto LABEL_4;
    }
    goto LABEL_20;
  }
  uint64_t v2 = (unint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistoryObservers);
  swift_beginAccess();
  unint64_t v4 = *v2;
  unint64_t v18 = MEMORY[0x1E4FBC860];
  if (v4 >> 62) {
    goto LABEL_19;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
LABEL_4:
    id v17 = v2;
    unint64_t v10 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v11 = MEMORY[0x1C18C7CB0](v10, v4);
        uint64_t v2 = (unint64_t *)(v10 + 1);
        if (__OFADD__(v10, 1))
        {
LABEL_15:
          __break(1u);
LABEL_16:
          uint64_t v2 = v17;
          unint64_t v14 = v18;
          goto LABEL_21;
        }
      }
      else
      {
        if (v10 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_18;
        }
        uint64_t v11 = *(void *)(v4 + 8 * v10 + 32);
        swift_retain();
        uint64_t v2 = (unint64_t *)(v10 + 1);
        if (__OFADD__(v10, 1)) {
          goto LABEL_15;
        }
      }
      uint64_t v12 = MEMORY[0x1C18C9C60](v11 + 16);
      if (v12 && (uint64_t v13 = v12, swift_unknownObjectRelease(), v13 == a1))
      {
        swift_release();
      }
      else
      {
        sub_1C152025C();
        sub_1C152029C();
        sub_1C15202AC();
        sub_1C152026C();
      }
      ++v10;
      if (v2 == (unint64_t *)v9) {
        goto LABEL_16;
      }
    }
  }
LABEL_20:
  unint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_21:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *uint64_t v2 = v14;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11D2820()
{
  *(void *)(v1 + 24) = *v0;
  return MEMORY[0x1F4188298](sub_1C11D2844, 0, 0);
}

uint64_t sub_1C11D2844()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  type metadata accessor for FCFetchResult(0);
  *uint64_t v3 = v0;
  v3[1] = sub_1C11D294C;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0x74736948636E7973, 0xED0000292879726FLL, sub_1C11D47F4, v2, v4);
}

uint64_t sub_1C11D294C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C11D2A68;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C0121EC4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C11D2A68()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C11D2ACC()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  uint64_t v2 = (void *)sub_1C151E5EC();
  id v3 = (id)sub_1C151E5EC();
  objc_msgSend(v1, sel_addPuzzleToPuzzleHistory_puzzleTypeID_, v2, v3);
}

void sub_1C11D2B58(uint64_t *a1, void *a2)
{
}

void sub_1C11D2B7C()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  id v2 = (id)sub_1C151E5EC();
  objc_msgSend(v1, sel_removePuzzleFromPuzzleHistory_, v2);
}

uint64_t sub_1C11D2BE0(void *a1)
{
  return sub_1C11D214C(a1);
}

uint64_t sub_1C11D2C04()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  id v2 = (void *)sub_1C151621C();
  id v3 = objc_msgSend(v1, sel_allSortedPuzzleIDsSinceLastPlayedDate_, v2);

  uint64_t v4 = sub_1C151EBCC();
  return v4;
}

uint64_t sub_1C11D2C7C(uint64_t a1)
{
  return sub_1C11D2580(a1);
}

void sub_1C11D2CA0(void *a1)
{
}

BOOL sub_1C11D2CC4()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  id v2 = (void *)sub_1C151E5EC();
  id v3 = objc_msgSend(v1, sel_puzzleHistoryItemForPuzzleID_, v2);

  if (v3) {
  return v3 != 0;
  }
}

id sub_1C11D2D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C11D2D44(a1, a2, a3, a4, (SEL *)&selRef_hasPuzzleBeenCompleted_);
}

id sub_1C11D2D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C11D2D44(a1, a2, a3, a4, (SEL *)&selRef_hasPuzzleEverBeenCompleted_);
}

id sub_1C11D2D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v7 = *(void **)(*v5 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  char v8 = (void *)sub_1C151E5EC();
  id v9 = objc_msgSend(v7, *a5, v8);

  return v9;
}

uint64_t sub_1C11D2DA0()
{
  return sub_1C11D17F4() & 1;
}

id sub_1C11D2DC8()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  id v2 = (void *)sub_1C151E5EC();
  id v3 = objc_msgSend(v1, sel_puzzleHistoryItemForPuzzleID_, v2);

  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_usedReveal);

    if (v4)
    {
      id v3 = objc_msgSend(v4, sel_BOOLValue);
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

id sub_1C11D2E6C()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  id v2 = (void *)sub_1C151E5EC();
  id v3 = objc_msgSend(v1, sel_puzzleHistoryItemForPuzzleID_, v2);

  return v3;
}

void sub_1C11D2EC8(uint64_t a1, uint64_t a2)
{
  sub_1C11D47FC();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __n128 v8 = MEMORY[0x1F4188790](v4);
  id v9 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v8);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_1C11D48FC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C11D30E0;
  aBlock[3] = &block_descriptor_92;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_syncWithCompletion_, v12);
  _Block_release(v12);
}

uint64_t sub_1C11D3078(int a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
    sub_1C11D47FC();
    return sub_1C151EDCC();
  }
  else
  {
    sub_1C11D47FC();
    return sub_1C151EDDC();
  }
}

void sub_1C11D30E0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1C11D3158(unint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v48 = a3;
  if (v6)
  {
    uint64_t v49 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1BFF661B8(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
    {
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v9 = 0;
    uint64_t v7 = v49;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1C18C7CB0](v9, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v12 = objc_msgSend(v10, sel_puzzleID, v48);
      uint64_t v13 = sub_1C151E62C();
      uint64_t v15 = v14;

      unint64_t v17 = *(void *)(v49 + 16);
      unint64_t v16 = *(void *)(v49 + 24);
      if (v17 >= v16 >> 1) {
        sub_1BFF661B8(v16 > 1, v17 + 1, 1);
      }
      ++v9;
      *(void *)(v49 + 16) = v17 + 1;
      unint64_t v18 = v49 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
    }
    while (v6 != v9);
    a3 = v48;
  }
  uint64_t v19 = sub_1BFFB9A98(v7, MEMORY[0x1E4FBC870]);
  swift_bridgeObjectRelease();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (v20)
  {
    uint64_t v50 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1BFF661B8(0, v20 & ~(v20 >> 63), 0);
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = 0;
      uint64_t v21 = v50;
      do
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v23 = (id)MEMORY[0x1C18C7CB0](v22, a2);
        }
        else {
          id v23 = *(id *)(a2 + 8 * v22 + 32);
        }
        uint64_t v24 = v23;
        id v25 = objc_msgSend(v23, sel_puzzleID, v48);
        uint64_t v26 = sub_1C151E62C();
        uint64_t v28 = v27;

        unint64_t v30 = *(void *)(v50 + 16);
        unint64_t v29 = *(void *)(v50 + 24);
        if (v30 >= v29 >> 1) {
          sub_1BFF661B8(v29 > 1, v30 + 1, 1);
        }
        ++v22;
        *(void *)(v50 + 16) = v30 + 1;
        unint64_t v31 = v50 + 16 * v30;
        *(void *)(v31 + 32) = v26;
        *(void *)(v31 + 40) = v28;
      }
      while (v20 != v22);
      a3 = v48;
      goto LABEL_25;
    }
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
LABEL_25:
  uint64_t v32 = sub_1BFFB9A98(v21, v19);
  swift_bridgeObjectRelease();
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v34 = MEMORY[0x1E4FBC860];
  if (!v33)
  {
LABEL_36:
    uint64_t v46 = sub_1BFFB9A98(v34, v32);
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_1BFE71F8C(v46);
    swift_bridgeObjectRelease();
    return (uint64_t)v47;
  }
  uint64_t v51 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BFF661B8(0, v33 & ~(v33 >> 63), 0);
  if ((v33 & 0x8000000000000000) == 0)
  {
    uint64_t v35 = 0;
    uint64_t v34 = v51;
    unint64_t v36 = a3 & 0xC000000000000001;
    do
    {
      if (v36) {
        id v37 = (id)MEMORY[0x1C18C7CB0](v35, a3);
      }
      else {
        id v37 = *(id *)(a3 + 8 * v35 + 32);
      }
      int v38 = v37;
      id v39 = objc_msgSend(v37, sel_puzzleID, v48);
      uint64_t v40 = sub_1C151E62C();
      uint64_t v42 = v41;

      unint64_t v44 = *(void *)(v51 + 16);
      unint64_t v43 = *(void *)(v51 + 24);
      if (v44 >= v43 >> 1) {
        sub_1BFF661B8(v43 > 1, v44 + 1, 1);
      }
      ++v35;
      *(void *)(v51 + 16) = v44 + 1;
      unint64_t v45 = v51 + 16 * v44;
      *(void *)(v45 + 32) = v40;
      *(void *)(v45 + 40) = v42;
      a3 = v48;
    }
    while (v33 != v35);
    goto LABEL_36;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C11D3558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a7;
  v8[16] = a8;
  v8[13] = a5;
  v8[14] = a6;
  v8[12] = a4;
  sub_1C151EE6C();
  v8[17] = sub_1C151EE5C();
  uint64_t v10 = sub_1C151EDBC();
  v8[18] = v10;
  v8[19] = v9;
  return MEMORY[0x1F4188298](sub_1C11D35F8, v10, v9);
}

uint64_t sub_1C11D35F8()
{
  uint64_t v1 = (void *)(v0[12] + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleService);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 48) + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[20] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C11D370C;
  uint64_t v5 = v0[13];
  return v7(v5, v2, v3);
}

uint64_t sub_1C11D370C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 168) = a1;
  *(void *)(v4 + 176) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 152);
  uint64_t v6 = *(void *)(v3 + 144);
  if (v1) {
    uint64_t v7 = sub_1C11D4050;
  }
  else {
    uint64_t v7 = sub_1C11D3850;
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

uint64_t sub_1C11D3850()
{
  uint64_t v76 = v0;
  unint64_t isUniquelyReferenced_nonNull_native = v0[21];
  swift_release();
  uint64_t v2 = v0[21];
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain_n();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v2 = v0[21];
    uint64_t v72 = v0;
    if (v3) {
      goto LABEL_3;
    }
LABEL_30:
    uint64_t v19 = (void *)MEMORY[0x1E4FBC868];
LABEL_31:
    unint64_t v27 = v0[15];
    unint64_t v28 = v0[16];
    unint64_t v29 = v0[14];
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1C11D4438(v29, (uint64_t)v19, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_1C11D4438(v27, (uint64_t)v19, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1C11D4438(v28, (uint64_t)v19, 2);
    swift_bridgeObjectRelease_n();
    uint64_t v75 = v30;
    sub_1C104B658((uint64_t)v31);
    sub_1C104B658((uint64_t)v32);
    uint64_t v33 = v30;
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1C15198DC();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain_n();
    uint64_t v35 = sub_1C15198AC();
    os_log_type_t v36 = sub_1C151F38C();
    uint64_t v74 = v33;
    if (os_log_type_enabled(v35, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v75 = (void *)v38;
      *(_DWORD *)id v37 = 136315138;
      uint64_t v39 = swift_bridgeObjectRetain();
      uint64_t v40 = MEMORY[0x1C18C6710](v39, &type metadata for PuzzleHistoryServiceChange);
      unint64_t v42 = v41;
      swift_bridgeObjectRelease();
      v72[11] = sub_1BFDA76EC(v40, v42, (uint64_t *)&v75);
      sub_1C151FE1C();
      uint64_t v0 = v72;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BFC31000, v35, v36, "puzzleHistory: Received changes %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v38, -1, -1);
      MEMORY[0x1C18C9B00](v37, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    unint64_t v43 = (uint64_t *)(v0[12] + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistoryObservers);
    swift_beginAccess();
    uint64_t v44 = *v43;
    unint64_t v45 = (void *)v0[12];
    unint64_t v67 = v43;
    if ((unint64_t)*v43 >> 62)
    {
      id v58 = v45;
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C15204BC();
      uint64_t v46 = result;
      if (!result) {
        goto LABEL_49;
      }
    }
    else
    {
      uint64_t v46 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v47 = v45;
      uint64_t result = swift_bridgeObjectRetain();
      if (!v46) {
        goto LABEL_49;
      }
    }
    if (v46 < 1)
    {
      __break(1u);
      goto LABEL_67;
    }
    uint64_t v48 = 0;
    unint64_t v49 = v44 & 0xC000000000000001;
    unint64_t v69 = v44 & 0xC000000000000001;
    uint64_t v71 = (uint64_t)(v0 + 2);
    do
    {
      if (v49)
      {
        uint64_t v50 = MEMORY[0x1C18C7CB0](v48, v44);
      }
      else
      {
        uint64_t v50 = *(void *)(v44 + 8 * v48 + 32);
        swift_retain();
      }
      uint64_t v51 = MEMORY[0x1C18C9C60](v50 + 32);
      swift_unknownObjectRelease();
      if (v51 && MEMORY[0x1C18C9C60](v50 + 16))
      {
        uint64_t v52 = (void *)v0[12];
        uint64_t v53 = *(void *)(v50 + 24);
        uint64_t ObjectType = swift_getObjectType();
        v0[5] = type metadata accessor for PuzzleHistoryService();
        v0[6] = &off_1F1C1BD50;
        v0[2] = v52;
        uint64_t v55 = v44;
        uint64_t v56 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v53 + 8);
        id v57 = v52;
        v56(v71, v74, ObjectType, v53);
        uint64_t v44 = v55;
        uint64_t v0 = v72;
        unint64_t v49 = v69;
        __swift_destroy_boxed_opaque_existential_1(v71);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
      ++v48;
    }
    while (v46 != v48);
LABEL_49:
    swift_bridgeObjectRelease();
    unint64_t v59 = *v67;
    uint64_t v75 = (void *)MEMORY[0x1E4FBC860];
    if (v59 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C15204BC();
      uint64_t v60 = result;
      if (result)
      {
LABEL_51:
        if (v60 >= 1)
        {
          for (uint64_t i = 0; i != v60; ++i)
          {
            if ((v59 & 0xC000000000000001) != 0)
            {
              uint64_t v62 = MEMORY[0x1C18C7CB0](i, v59);
            }
            else
            {
              uint64_t v62 = *(void *)(v59 + 8 * i + 32);
              swift_retain();
            }
            uint64_t v63 = MEMORY[0x1C18C9C60](v62 + 32);
            swift_unknownObjectRelease();
            if (v63)
            {
              sub_1C152025C();
              sub_1C152029C();
              sub_1C15202AC();
              sub_1C152026C();
            }
            else
            {
              swift_release();
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v64 = (uint64_t)v75;
          goto LABEL_63;
        }
LABEL_67:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v60 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v60) {
        goto LABEL_51;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v64 = MEMORY[0x1E4FBC860];
LABEL_63:
    uint64_t v65 = (void *)v72[12];
    *unint64_t v67 = v64;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v66 = (uint64_t (*)(void))v72[1];
    return v66();
  }
  uint64_t v3 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v72 = v0;
  if (!v3) {
    goto LABEL_30;
  }
LABEL_3:
  uint64_t v4 = 0;
  uint64_t v68 = v2 + 32;
  unint64_t v70 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  uint64_t v5 = MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v70)
    {
      uint64_t v6 = (void *)MEMORY[0x1C18C7CB0](v4, v72[21]);
      uint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v6 = *(void **)(v68 + 8 * v4);
      swift_unknownObjectRetain();
      uint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
    uint64_t v73 = v7;
    uint64_t v8 = v3;
    swift_bridgeObjectRetain();
    uint64_t v0 = v6;
    id v9 = objc_msgSend(v6, sel_identifier);
    uint64_t v10 = sub_1C151E62C();
    uint64_t v12 = v11;

    unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v75 = (void *)v5;
    unint64_t v14 = sub_1BFEF2D8C(v10, v12);
    uint64_t v15 = *(void *)(v5 + 16);
    BOOL v16 = (v13 & 1) == 0;
    uint64_t v17 = v15 + v16;
    if (__OFADD__(v15, v16)) {
      goto LABEL_27;
    }
    char v18 = v13;
    if (*(void *)(v5 + 24) < v17) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v19 = (void *)v5;
      if (v13) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1C106AF38();
      uint64_t v19 = v75;
      if (v18)
      {
LABEL_4:
        unint64_t isUniquelyReferenced_nonNull_native = v19[7];
        swift_unknownObjectRelease();
        *(void *)(isUniquelyReferenced_nonNull_native + 8 * v14) = v0;
        goto LABEL_5;
      }
    }
LABEL_18:
    v19[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = (uint64_t *)(v19[6] + 16 * v14);
    *uint64_t v22 = v10;
    v22[1] = v12;
    *(void *)(v19[7] + 8 * v14) = v0;
    uint64_t v23 = v19[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_28;
    }
    long long v19[2] = v25;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v4;
    uint64_t v5 = (uint64_t)v19;
    uint64_t v3 = v8;
    if (v73 == v8)
    {
      uint64_t v0 = v72;
      goto LABEL_31;
    }
  }
  sub_1C10550A8(v17, isUniquelyReferenced_nonNull_native);
  uint64_t v19 = v75;
  unint64_t v20 = sub_1BFEF2D8C(v10, v12);
  if ((v18 & 1) == (v21 & 1))
  {
    unint64_t v14 = v20;
    if (v18) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  return sub_1C1520CFC();
}

uint64_t sub_1C11D4050()
{
  swift_release();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C7A8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F36C();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[22];
  if (v7)
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)id v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v12;
    sub_1C151FE1C();
    void *v10 = v12;

    _os_log_impl(&dword_1BFC31000, v5, v6, "PuzzleHistoryObserver fetching puzzle error=%@", v9, 0xCu);
    sub_1C01DA31C();
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v10, -1, -1);
    MEMORY[0x1C18C9B00](v9, -1, -1);
  }
  else
  {
  }
  char v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1C11D43F8()
{
  sub_1C019B9B4(v0 + 16);
  sub_1C019B9B4(v0 + 32);
  return swift_deallocClassInstance();
}

void *sub_1C11D4438(unint64_t a1, uint64_t a2, char a3)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C15204BC())
  {
    uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C18C7CB0](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      uint64_t v10 = v5;
      id v11 = objc_msgSend(v7, sel_puzzleID);
      uint64_t v12 = sub_1C151E62C();
      uint64_t v14 = v13;

      if (*(void *)(a2 + 16) && (unint64_t v15 = sub_1BFEF2D8C(v12, v14), (v16 & 1) != 0))
      {
        uint64_t v17 = *(void *)(*(void *)(a2 + 56) + 8 * v15);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = sub_1C0EE89F8(0, v23[2] + 1, 1, v23);
        }
        unint64_t v19 = v23[2];
        unint64_t v18 = v23[3];
        if (v19 >= v18 >> 1) {
          uint64_t v23 = sub_1C0EE89F8((void *)(v18 > 1), v19 + 1, 1, v23);
        }
        v23[2] = v19 + 1;
        unint64_t v20 = &v23[3 * v19];
        v20[4] = v8;
        uint64_t v20[5] = v17;
        *((unsigned char *)v20 + 48) = a3;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      ++v6;
      uint64_t v5 = v10;
      if (v9 == v10) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return v23;
}

char *sub_1C11D4630(void *a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistoryObservers] = MEMORY[0x1E4FBC860];
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory] = a1;
  sub_1BFC66384(a2, (uint64_t)&v3[OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleService]);
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_configurationManager] = a3;
  v14.receiver = v3;
  v14.super_class = ObjectType;
  id v8 = a1;
  swift_unknownObjectRetain();
  uint64_t v9 = (char *)objc_msgSendSuper2(&v14, sel_init);
  uint64_t v10 = *(void **)&v9[OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistory];
  id v11 = v9;
  objc_msgSend(v10, sel_addObserver_, v11, v14.receiver, v14.super_class);
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_configurationManager], sel_addAppConfigObserver_, v11);
  id v12 = objc_msgSend(objc_msgSend(a3, sel_possiblyUnfetchedAppConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  objc_msgSend(v8, sel_setAllowLowerProgressOnCompletedPuzzles_, objc_msgSend(v12, sel_allowLowerProgressOnCompletedPuzzles));

  __swift_destroy_boxed_opaque_existential_1(a2);
  return v11;
}

unint64_t sub_1C11D479C()
{
  unint64_t result = qword_1EB88DD30;
  if (!qword_1EB88DD30)
  {
    type metadata accessor for DisposablePuzzleHistoryObserver();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88DD30);
  }
  return result;
}

void sub_1C11D47F4(uint64_t a1)
{
  sub_1C11D2EC8(a1, *(void *)(v1 + 16));
}

void sub_1C11D47FC()
{
  if (!qword_1EB86B398)
  {
    type metadata accessor for FCFetchResult(255);
    sub_1C017F734();
    unint64_t v0 = sub_1C151EDEC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B398);
    }
  }
}

uint64_t sub_1C11D486C()
{
  sub_1C11D47FC();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C11D48FC(int a1, void *a2)
{
  sub_1C11D47FC();
  return sub_1C11D3078(a1, a2);
}

uint64_t sub_1C11D497C(unint64_t a1, unint64_t a2, unint64_t a3)
{
  sub_1BFEEA1C8(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = sub_1C11D3158(a1, a2, a3);
  if (*(void *)(v10 + 16))
  {
    uint64_t v11 = sub_1C151EE9C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_1C151EE6C();
    id v12 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C151EE5C();
    objc_super v14 = (void *)swift_allocObject();
    uint64_t v15 = MEMORY[0x1E4FBCFD8];
    v14[2] = v13;
    v14[3] = v15;
    v14[4] = v12;
    void v14[5] = v10;
    v14[6] = a1;
    v14[7] = a2;
    v14[8] = a3;
    sub_1C0C833AC((uint64_t)v9, (uint64_t)&unk_1EA1ACCA0, (uint64_t)v14);
    return swift_release();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C11D4B30()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C11D4B90(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1BFC542F4;
  return sub_1C11D3558(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t FormatPlatform.rawValue.getter()
{
  uint64_t v1 = 6578544;
  if (*v0 != 1) {
    uint64_t v1 = 6513005;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656E6F6870;
  }
}

NewsFeed::FormatPlatform_optional __swiftcall FormatPlatform.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C11D4D14(char *a1, unsigned __int8 *a2)
{
  return sub_1C14844F8(*a1, *a2);
}

unint64_t sub_1C11D4D24()
{
  unint64_t result = qword_1EA1ACCA8;
  if (!qword_1EA1ACCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACCA8);
  }
  return result;
}

uint64_t sub_1C11D4D78()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11D4E08()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11D4E84()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatPlatform_optional sub_1C11D4F10(Swift::String *a1)
{
  return FormatPlatform.init(rawValue:)(*a1);
}

void sub_1C11D4F1C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = 6578544;
  if (v2 != 1) {
    uint64_t v4 = 6513005;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x656E6F6870;
  }
  if (!v5) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

unint64_t sub_1C11D4F68(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C11D4F98();
  unint64_t result = sub_1C11D4FEC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C11D4F98()
{
  unint64_t result = qword_1EA1ACCB0;
  if (!qword_1EA1ACCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACCB0);
  }
  return result;
}

unint64_t sub_1C11D4FEC()
{
  unint64_t result = qword_1EA1ACCB8;
  if (!qword_1EA1ACCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACCB8);
  }
  return result;
}

unint64_t sub_1C11D5040(uint64_t a1)
{
  unint64_t result = sub_1C11D5068();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11D5068()
{
  unint64_t result = qword_1EA1ACCC0;
  if (!qword_1EA1ACCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACCC0);
  }
  return result;
}

unint64_t sub_1C11D50BC(void *a1)
{
  a1[1] = sub_1C088C710();
  a1[2] = sub_1C08F9C9C();
  unint64_t result = sub_1C11D4D24();
  a1[3] = result;
  return result;
}

uint64_t sub_1C11D50F4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C11D5154(void *a1)
{
  return FormatPlatform.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatPlatform(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11D5238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPlatform()
{
  return &type metadata for FormatPlatform;
}

void sub_1C11D5270(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, _OWORD *a5@<X8>)
{
  LODWORD(v633) = a4;
  v549 = a5;
  uint64_t v550 = a3;
  uint64_t v557 = a1;
  uint64_t v588 = sub_1C151631C();
  uint64_t v547 = *(void *)(v588 - 8);
  MEMORY[0x1F4188790](v588);
  v565 = (char *)v542 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v574 = (char *)v542 - v8;
  v542[1] = v9;
  MEMORY[0x1F4188790](v10);
  v571 = (char *)v542 - v11;
  sub_1BFEEA21C(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v581 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v567 = (uint64_t)v542 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  v572 = (char *)v542 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v587 = (uint64_t)v542 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v577 = (uint64_t)v542 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v579 = (uint64_t)v542 - v21;
  uint64_t v580 = v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v620 = (uint64_t)v542 - v24;
  uint64_t v614 = type metadata accessor for PuzzleStatsProcessingData();
  uint64_t v616 = *(void *)(v614 - 8);
  MEMORY[0x1F4188790](v614);
  uint64_t v625 = (uint64_t)v542 - ((unint64_t)(v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v631 = v25;
  MEMORY[0x1F4188790](v26);
  v634 = (void *)((char *)v542 - v27);
  uint64_t v636 = sub_1C15198DC();
  uint64_t v573 = *(void *)(v636 - 8);
  MEMORY[0x1F4188790](v636);
  MEMORY[0x1F4188790](v28);
  MEMORY[0x1F4188790](v29);
  v583 = (char *)v542 - v30;
  MEMORY[0x1F4188790](v31);
  v545 = (char *)v542 - v32;
  MEMORY[0x1F4188790](v33);
  v592 = (char *)v542 - v34;
  MEMORY[0x1F4188790](v35);
  v553 = (char *)v542 - v36;
  MEMORY[0x1F4188790](v37);
  v554 = (char *)v542 - v38;
  MEMORY[0x1F4188790](v39);
  v552 = (char *)v542 - v40;
  MEMORY[0x1F4188790](v41);
  v563 = (char *)v542 - v42;
  MEMORY[0x1F4188790](v43);
  v561 = (char *)v542 - v44;
  MEMORY[0x1F4188790](v45);
  v560 = (char *)v542 - v46;
  MEMORY[0x1F4188790](v47);
  v562 = (char *)v542 - v48;
  MEMORY[0x1F4188790](v49);
  v578 = (char *)v542 - v50;
  MEMORY[0x1F4188790](v51);
  v595 = (char *)v542 - v52;
  MEMORY[0x1F4188790](v53);
  v594 = (char *)v542 - v54;
  MEMORY[0x1F4188790](v55);
  v586 = (char *)v542 - v56;
  MEMORY[0x1F4188790](v57);
  uint64_t v58 = *a2;
  uint64_t v546 = a2[5];
  uint64_t v543 = v60;
  uint64_t v544 = v59;
  uint64_t v548 = v58;
  os_log_t v635 = (os_log_t)((char *)v542 - v61);
  if (v58)
  {
    uint64_t v63 = a2[1];
    uint64_t v62 = a2[2];
    uint64_t v65 = a2[3];
    uint64_t v64 = a2[4];
    uint64_t v644 = v58;
    swift_bridgeObjectRetain();
    v643 = v63;
    uint64_t v570 = swift_allocObject();
    *(void *)(v570 + 16) = v62;
    uint64_t v569 = swift_allocObject();
    *(void *)(v569 + 16) = v65;
    uint64_t v568 = swift_allocObject();
    *(void *)(v568 + 16) = v64;
    os_log_t v632 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v66 = (void *)sub_1C01AFF34(0);
    unint64_t v67 = sub_1C01911DC(v66);
    swift_bridgeObjectRelease();
    uint64_t v644 = v67;
    uint64_t v68 = (void *)sub_1C01AFF34(0);
    unint64_t v69 = sub_1C01911DC(v68);
    swift_bridgeObjectRelease();
    os_log_t v632 = v69;
    v643 = v69;
    uint64_t v70 = swift_allocObject();
    uint64_t v71 = sub_1C01AFF0C(0);
    unint64_t v72 = sub_1C0191304(v71);
    swift_bridgeObjectRelease();
    uint64_t v570 = v70;
    *(void *)(v70 + 16) = v72;
    uint64_t v73 = swift_allocObject();
    uint64_t v74 = sub_1C01AFE40(0);
    unint64_t v75 = sub_1C01913D8(v74);
    swift_bridgeObjectRelease();
    uint64_t v569 = v73;
    *(void *)(v73 + 16) = v75;
    uint64_t v76 = swift_allocObject();
    uint64_t v77 = sub_1C01AFF0C(0);
    unint64_t v78 = sub_1C0191304(v77);
    swift_bridgeObjectRelease();
    uint64_t v568 = v76;
    *(void *)(v76 + 16) = v78;
  }
  uint64_t v642 = sub_1BFEACEF4();
  uint64_t v79 = swift_allocObject();
  sub_1BFEBC4B4();
  swift_bridgeObjectRetain();
  uint64_t v80 = 0;
  uint64_t v81 = sub_1C151E36C();
  swift_bridgeObjectRelease();
  *(void *)(v79 + 16) = v81;
  v575 = (uint64_t *)(v79 + 16);
  uint64_t v82 = swift_allocObject();
  swift_bridgeObjectRetain();
  int v83 = (uint64_t *)v82;
  uint64_t v84 = sub_1C151E36C();
  v629 = 0;
  swift_bridgeObjectRelease();
  v83[2] = v84;
  uint64_t v564 = v79;
  v558 = v83;
  v555 = v83 + 2;
  if (v633)
  {
    uint64_t v85 = sub_1C11A501C();
    (*(void (**)(os_log_t, uint64_t, uint64_t))(v573 + 16))(v635, v85, v636);
    uint64_t v86 = swift_allocObject();
    *(void *)(v86 + 16) = sub_1C11E03B4;
    *(void *)(v86 + 24) = v79;
    uint64_t v80 = swift_allocObject();
    v80[2].isa = (Class)sub_1C11E03B4;
    v80[3].isa = (Class)v83;
    swift_retain();
    swift_retain();
    os_log_t v632 = (os_log_t)sub_1C15198AC();
    int v87 = sub_1C151F38C();
    uint64_t v88 = swift_allocObject();
    *(unsigned char *)(v88 + 16) = 32;
    uint64_t v89 = swift_allocObject();
    *(unsigned char *)(v89 + 16) = 8;
    uint64_t v90 = swift_allocObject();
    *(void *)(v90 + 16) = sub_1C11E03B8;
    *(void *)(v90 + 24) = v86;
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 16) = sub_1C11E0A2C;
    *(void *)(v91 + 24) = v90;
    uint64_t v92 = swift_allocObject();
    *(unsigned char *)(v92 + 16) = 32;
    uint64_t v93 = swift_allocObject();
    *(unsigned char *)(v93 + 16) = 8;
    uint64_t v94 = swift_allocObject();
    *(void *)(v94 + 16) = sub_1C11E03B8;
    *(void *)(v94 + 24) = v80;
    uint64_t v95 = swift_allocObject();
    *(void *)(v95 + 16) = sub_1C11E0A2C;
    *(void *)(v95 + 24) = v94;
    sub_1BFEEA21C(0, &qword_1EB863658, (uint64_t (*)(uint64_t))sub_1C11DF680, MEMORY[0x1E4FBBE00]);
    uint64_t v96 = swift_allocObject();
    sub_1C00BC788(v96, 6);
    *uint64_t v97 = sub_1C11E0A4C;
    v97[1] = v88;
    v97[2] = sub_1C11E0A4C;
    v97[3] = v89;
    v97[4] = sub_1C11E0A40;
    v97[5] = v91;
    v97[6] = sub_1C11E0A4C;
    v97[7] = v92;
    v97[8] = sub_1C11E0A4C;
    v97[9] = v93;
    v97[10] = sub_1C11E0A40;
    v97[11] = v95;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v98 = v632;
    swift_bridgeObjectRelease();
    LODWORD(v630) = v87;
    if (os_log_type_enabled(v98, (os_log_type_t)v87))
    {
      double v99 = (uint8_t *)sub_1C0968FB4();
      uint64_t v100 = swift_slowAlloc();
      v639[0] = 0;
      v638[0] = v100;
      uint64_t v101 = v99;
      *(_WORD *)double v99 = 514;
      v640[0] = (uint64_t)(v99 + 2);
      *(void *)&v641[0] = sub_1C11E0A4C;
      *((void *)&v641[0] + 1) = v88;
      uint64_t v80 = v629;
      sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
      if (!v80)
      {
        swift_release();
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v89;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        swift_release();
        *(void *)&v641[0] = sub_1C11E0A40;
        *((void *)&v641[0] + 1) = v91;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        swift_release();
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v92;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        swift_release();
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v93;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        swift_release();
        *(void *)&v641[0] = sub_1C11E0A40;
        *((void *)&v641[0] + 1) = v95;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        v629 = 0;
        swift_release();
        _os_log_impl(&dword_1BFC31000, v632, (os_log_type_t)v630, "PuzzleStatsProcessor: computeStats using initial completedRunningCounts %s startedRunningCounts %s", v101, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v100, -1, -1);
        sub_1C0968FF8();
      }
      goto LABEL_160;
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v102 = v636;
    (*(void (**)(os_log_t, uint64_t))(v573 + 8))(v635, v636);
    char v104 = (char)v633;
    uint64_t v103 = v620;
  }
  else
  {
    uint64_t v102 = v636;
    uint64_t v103 = v620;
    char v104 = (char)v633;
  }
  uint64_t v105 = v557;
  uint64_t v106 = sub_1BFFCDB8C(v557);
  uint64_t v107 = v634;
  uint64_t v613 = v106;
  if (v106)
  {
    v593 = v596 + 2;
    uint64_t v108 = *(unsigned __int8 *)(v616 + 80);
    uint64_t v612 = v105 + ((v108 + 32) & ~v108);
    v628 = (NSObject **)(v573 + 16);
    uint64_t v624 = (v108 + 16) & ~v108;
    v623 = &v631[v624];
    uint64_t v622 = v108 | 7;
    v627 = (void (**)(char *, uint64_t))(v573 + 8);
    v556 = (uint64_t *)(v570 + 16);
    v603 = (uint64_t *)(v569 + 16);
    v551 = (uint64_t *)(v568 + 16);
    v582 = (void (**)(void))(v547 + 32);
    v584 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v547 + 48);
    v585 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v547 + 56);
    v559 = (v547 + 8);
    v542[0] = v547 + 16;
    swift_bridgeObjectRetain();
    long long v109 = 0;
    uint64_t v566 = MEMORY[0x1E4FBC840] + 8;
    while (1)
    {
      if (__OFADD__(v109, 1))
      {
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
        goto LABEL_160;
      }
      v631 = (char *)&v109->isa + 1;
      uint64_t v110 = *(void *)(v616 + 72);
      os_log_t v632 = v109;
      sub_1C11E04BC(v612 + v110 * (void)v109, (uint64_t)v107, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      if (*((unsigned char *)v107 + *(int *)(v614 + 28)) == 1)
      {
        if ((v104 & 1) == 0) {
          goto LABEL_14;
        }
        uint64_t v111 = sub_1C11A501C();
        uint64_t v112 = v586;
        ((void (*)(char *, uint64_t, uint64_t))*v628)(v586, v111, v102);
        uint64_t v113 = v625;
        sub_1C11E04BC((uint64_t)v107, v625, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        uint64_t v114 = swift_allocObject();
        sub_1C11E0524(v113, v114 + v624, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        uint64_t v115 = sub_1C15198AC();
        int v116 = sub_1C151F38C();
        uint64_t v117 = swift_allocObject();
        *(unsigned char *)(v117 + 16) = 32;
        uint64_t v118 = swift_allocObject();
        *(unsigned char *)(v118 + 16) = 8;
        uint64_t v119 = swift_allocObject();
        *(void *)(v119 + 16) = sub_1C11DF84C;
        *(void *)(v119 + 24) = v114;
        uint64_t v120 = v102;
        uint64_t v121 = swift_allocObject();
        *(void *)(v121 + 16) = sub_1C11E0A2C;
        *(void *)(v121 + 24) = v119;
        sub_1BFEEA21C(0, &qword_1EB863658, (uint64_t (*)(uint64_t))sub_1C11DF680, MEMORY[0x1E4FBBE00]);
        uint64_t v122 = swift_allocObject();
        uint64_t v80 = sub_1C00BC788(v122, 3);
        *id v123 = sub_1C11E0A4C;
        v123[1] = v117;
        v123[2] = sub_1C11E0A4C;
        v123[3] = v118;
        v123[4] = sub_1C11E0A40;
        v123[5] = v121;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        LODWORD(v635) = v116;
        if (os_log_type_enabled(v115, (os_log_type_t)v116))
        {
          uint64_t v124 = (uint8_t *)sub_1C0968FB4();
          uint64_t v125 = swift_slowAlloc();
          v639[0] = 0;
          v638[0] = v125;
          *(_WORD *)uint64_t v124 = 258;
          v640[0] = (uint64_t)(v124 + 2);
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v117;
          uint64_t v80 = v629;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          if (!v80)
          {
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v118;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A40;
            *((void *)&v641[0] + 1) = v121;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            v629 = 0;
            swift_release();
            _os_log_impl(&dword_1BFC31000, v115, (os_log_type_t)v635, "PuzzleStatsProcessor: skipping %s - tagged as ignoreFromStatsAndStreaks", v124, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C18C9B00](v125, -1, -1);
            sub_1C0968FF8();
          }
          goto LABEL_160;
        }
        swift_release();
        swift_release();
        swift_release();

        (*v627)(v112, v120);
        uint64_t v107 = v634;
        sub_1C11E058C((uint64_t)v634, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        uint64_t v103 = v620;
        uint64_t v102 = v120;
        char v104 = (char)v633;
        goto LABEL_15;
      }
      uint64_t v126 = v107[1];
      os_log_t v635 = (os_log_t)v107[2];
      uint64_t v127 = *v107;
      sub_1BFF97A80((uint64_t)v107 + *(int *)(v614 + 24), v103, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      uint64_t v128 = v596;
      uint64_t v129 = v596[5];
      uint64_t v130 = v596[6];
      uint64_t v131 = v593;
      __swift_project_boxed_opaque_existential_1(v593, v129);
      uint64_t v132 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 24);
      swift_bridgeObjectRetain();
      LODWORD(v615) = v132(v127, v126, v129, v130);
      uint64_t v133 = v128[5];
      uint64_t v134 = v128[6];
      __swift_project_boxed_opaque_existential_1(v131, v133);
      LODWORD(v630) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 8))(v127, v126, v133, v134);
      uint64_t v135 = v128[5];
      uint64_t v136 = v128[6];
      __swift_project_boxed_opaque_existential_1(v131, v135);
      id v137 = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 48))(v127, v126, v135, v136);
      uint64_t v138 = v128[5];
      uint64_t v139 = v128[6];
      __swift_project_boxed_opaque_existential_1(v131, v138);
      LODWORD(v618) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 40))(v127, v126, v138, v139);
      uint64_t v80 = v128[5];
      uint64_t v140 = v128[6];
      __swift_project_boxed_opaque_existential_1(v131, (uint64_t)v80);
      unint64_t v141 = *(uint64_t (**)(uint64_t, uint64_t, NSObject *, uint64_t))(v140 + 32);
      uint64_t v611 = v127;
      uint64_t v621 = v126;
      uint64_t v142 = v140;
      char v104 = (char)v633;
      int v143 = v141(v127, v126, v80, v142);
      id v626 = v137;
      os_log_t v144 = v635;
      LODWORD(v619) = v143;
      if (v104)
      {
        uint64_t v145 = sub_1C11A501C();
        char v146 = *v628;
        uint64_t v605 = v145;
        v606 = (void (*)(char *, uint64_t, uint64_t))v146;
        ((void (*)(char *))v146)(v594);
        uint64_t v147 = v625;
        sub_1C11E04BC((uint64_t)v634, v625, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        uint64_t v148 = swift_allocObject();
        sub_1C11E0524(v147, v148 + v624, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        uint64_t v149 = swift_allocObject();
        *(void *)(v149 + 16) = v144;
        uint64_t v150 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        uint64_t v151 = v579;
        sub_1BFF97A80(v620, v579, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        unint64_t v152 = (*(unsigned __int8 *)(v581 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v581 + 80);
        uint64_t v153 = swift_allocObject();
        sub_1BFEE9C14(v151, v153 + v152, (unint64_t *)&qword_1EB871180, v150);
        v609 = sub_1C15198AC();
        LODWORD(v617) = sub_1C151F38C();
        v154 = (uint8_t *)swift_allocObject();
        v154[16] = 32;
        uint64_t v155 = swift_allocObject();
        *(unsigned char *)(v155 + 16) = 8;
        uint64_t v156 = swift_allocObject();
        *(void *)(v156 + 16) = sub_1C11DF84C;
        *(void *)(v156 + 24) = v148;
        v157 = swift_allocObject();
        v157[2].isa = (Class)sub_1C11E0A2C;
        v157[3].isa = (Class)v156;
        uint64_t v158 = swift_allocObject();
        *(unsigned char *)(v158 + 16) = 0;
        uint64_t v602 = swift_allocObject();
        *(unsigned char *)(v602 + 16) = 8;
        uint64_t v159 = swift_allocObject();
        *(void *)(v159 + 16) = sub_1C11E0A50;
        *(void *)(v159 + 24) = v149;
        uint64_t v160 = swift_allocObject();
        *(void *)(v160 + 16) = sub_1C11E0A38;
        *(void *)(v160 + 24) = v159;
        uint64_t v161 = swift_allocObject();
        *(unsigned char *)(v161 + 16) = 32;
        uint64_t v162 = swift_allocObject();
        *(unsigned char *)(v162 + 16) = 8;
        uint64_t v163 = swift_allocObject();
        *(void *)(v163 + 16) = sub_1C11E0018;
        *(void *)(v163 + 24) = v153;
        uint64_t v164 = swift_allocObject();
        *(void *)(v164 + 16) = sub_1C11E0A2C;
        *(void *)(v164 + 24) = v163;
        sub_1BFEEA21C(0, &qword_1EB863658, (uint64_t (*)(uint64_t))sub_1C11DF680, MEMORY[0x1E4FBBE00]);
        uint64_t v591 = v165;
        uint64_t v166 = swift_allocObject();
        uint64_t v601 = sub_1C00BC788(v166, 9);
        void *v167 = sub_1C11E0A4C;
        v167[1] = v154;
        v167[2] = sub_1C11E0A4C;
        v167[3] = v155;
        v167[4] = sub_1C11E0A40;
        v167[5] = v157;
        v167[6] = sub_1C11E0A4C;
        v167[7] = v158;
        uint64_t v168 = v602;
        v167[8] = sub_1C11E0A4C;
        v167[9] = v168;
        v167[10] = sub_1C11E0A44;
        v167[11] = v160;
        v167[12] = sub_1C11E0A4C;
        v167[13] = v161;
        v167[14] = sub_1C11E0A4C;
        v167[15] = v162;
        v167[16] = sub_1C11E0A40;
        v167[17] = v164;
        v610 = v154;
        uint64_t v169 = v609;
        swift_retain();
        uint64_t v604 = v155;
        swift_retain();
        os_log_t v607 = v157;
        uint64_t v170 = v168;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v608 = (unsigned char *)v164;
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v169, (os_log_type_t)v617))
        {
          uint64_t v171 = v604;
          uint64_t v172 = v158;
          uint64_t v173 = v170;
          uint64_t v174 = (uint8_t *)sub_1C0968FB4();
          uint64_t v175 = swift_slowAlloc();
          v639[0] = 0;
          uint64_t v601 = v175;
          v638[0] = v175;
          *(_WORD *)uint64_t v174 = 770;
          v640[0] = (uint64_t)(v174 + 2);
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v610;
          uint64_t v80 = v629;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          if (!v80)
          {
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v171;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            v610 = v174;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A40;
            *((void *)&v641[0] + 1) = v607;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v172;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v173;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A44;
            *((void *)&v641[0] + 1) = v160;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            uint64_t v176 = v609;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v161;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v162;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A40;
            *((void *)&v641[0] + 1) = v608;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            v629 = 0;
            swift_release();
            _os_log_impl(&dword_1BFC31000, v176, (os_log_type_t)v617, "PuzzleStatsProcessor: processing %s - difficulty: %lld, publishDate: %s", v610, 0x20u);
            uint64_t v177 = v601;
            swift_arrayDestroy();
            MEMORY[0x1C18C9B00](v177, -1, -1);
            sub_1C0968FF8();
          }
          goto LABEL_160;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v180 = v636;
        (*v627)(v594, v636);
        char v181 = (char)v619;
        v606(v595, v605, v180);
        uint64_t v182 = v625;
        sub_1C11E04BC((uint64_t)v634, v625, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        uint64_t v183 = swift_allocObject();
        sub_1C11E0524(v182, v183 + v624, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        uint64_t v184 = swift_allocObject();
        *(unsigned char *)(v184 + 16) = v615 & 1;
        uint64_t v185 = swift_allocObject();
        *(unsigned char *)(v185 + 16) = v630 & 1;
        uint64_t v186 = swift_allocObject();
        *(unsigned char *)(v186 + 16) = v618 & 1;
        uint64_t v590 = swift_allocObject();
        *(unsigned char *)(v590 + 16) = v181 & 1;
        uint64_t v598 = sub_1C15198AC();
        LODWORD(v602) = sub_1C151F38C();
        v610 = (uint8_t *)swift_allocObject();
        v610[16] = 32;
        v608 = (unsigned char *)swift_allocObject();
        v608[16] = 8;
        uint64_t v187 = swift_allocObject();
        *(void *)(v187 + 16) = sub_1C11DF84C;
        *(void *)(v187 + 24) = v183;
        unint64_t v188 = swift_allocObject();
        v188[2].isa = (Class)sub_1C11E0A2C;
        v188[3].isa = (Class)v187;
        uint64_t v189 = (uint8_t *)swift_allocObject();
        v189[16] = 0;
        v617 = (unsigned char *)swift_allocObject();
        v617[16] = 4;
        uint64_t v190 = swift_allocObject();
        *(void *)(v190 + 16) = sub_1C11E011C;
        *(void *)(v190 + 24) = v184;
        uint64_t v191 = swift_allocObject();
        *(void *)(v191 + 16) = sub_1C11E0BE4;
        *(void *)(v191 + 24) = v190;
        uint64_t v192 = swift_allocObject();
        *(void *)(v192 + 16) = sub_1C11E0A34;
        *(void *)(v192 + 24) = v191;
        uint64_t v193 = swift_allocObject();
        uint64_t v589 = v193;
        *(void *)(v193 + 16) = sub_1C11E0A3C;
        *(void *)(v193 + 24) = v192;
        v606 = (void (*)(char *, uint64_t, uint64_t))swift_allocObject();
        *((unsigned char *)v606 + 16) = 0;
        uint64_t v605 = swift_allocObject();
        *(unsigned char *)(v605 + 16) = 4;
        uint64_t v194 = swift_allocObject();
        *(void *)(v194 + 16) = sub_1C11E0A54;
        *(void *)(v194 + 24) = v185;
        uint64_t v195 = swift_allocObject();
        *(void *)(v195 + 16) = sub_1C11E0BE4;
        *(void *)(v195 + 24) = v194;
        uint64_t v196 = swift_allocObject();
        *(void *)(v196 + 16) = sub_1C11E0A34;
        *(void *)(v196 + 24) = v195;
        v197 = v188;
        os_log_t v607 = v188;
        uint64_t v198 = swift_allocObject();
        *(void *)(v198 + 16) = sub_1C11E0A3C;
        *(void *)(v198 + 24) = v196;
        uint64_t v601 = swift_allocObject();
        *(unsigned char *)(v601 + 16) = 0;
        uint64_t v604 = swift_allocObject();
        *(unsigned char *)(v604 + 16) = 4;
        uint64_t v199 = swift_allocObject();
        *(void *)(v199 + 16) = sub_1C11E0A54;
        *(void *)(v199 + 24) = v186;
        uint64_t v200 = swift_allocObject();
        *(void *)(v200 + 16) = sub_1C11E0BE4;
        *(void *)(v200 + 24) = v199;
        uint64_t v201 = swift_allocObject();
        *(void *)(v201 + 16) = sub_1C11E0A34;
        *(void *)(v201 + 24) = v200;
        uint64_t v202 = swift_allocObject();
        *(void *)(v202 + 16) = sub_1C11E0A3C;
        *(void *)(v202 + 24) = v201;
        uint64_t v599 = swift_allocObject();
        *(unsigned char *)(v599 + 16) = 0;
        uint64_t v597 = swift_allocObject();
        *(unsigned char *)(v597 + 16) = 4;
        uint64_t v203 = swift_allocObject();
        uint64_t v204 = v590;
        *(void *)(v203 + 16) = sub_1C11E0A54;
        *(void *)(v203 + 24) = v204;
        uint64_t v205 = swift_allocObject();
        *(void *)(v205 + 16) = sub_1C11E0BE4;
        *(void *)(v205 + 24) = v203;
        uint64_t v600 = v198;
        uint64_t v206 = swift_allocObject();
        *(void *)(v206 + 16) = sub_1C11E0A34;
        *(void *)(v206 + 24) = v205;
        uint64_t v80 = swift_allocObject();
        v80[2].isa = (Class)sub_1C11E0A3C;
        v80[3].isa = (Class)v206;
        v609 = v189;
        uint64_t v207 = swift_allocObject();
        uint64_t v591 = sub_1C00BC788(v207, 15);
        v208 = v610;
        void *v209 = sub_1C11E0A4C;
        v209[1] = v208;
        v210 = v608;
        v209[2] = sub_1C11E0A4C;
        v209[3] = v210;
        v209[4] = sub_1C11E0A40;
        v209[5] = v197;
        v209[6] = sub_1C11E0A4C;
        v209[7] = v189;
        v211 = (void (*)(void, void))v617;
        v209[8] = sub_1C11E0A4C;
        v209[9] = v211;
        uint64_t v212 = v589;
        v209[10] = sub_1C11E0A48;
        v209[11] = v212;
        v213 = v606;
        v209[12] = sub_1C11E0A4C;
        v209[13] = v213;
        uint64_t v214 = v604;
        uint64_t v215 = v605;
        v209[14] = sub_1C11E0A4C;
        v209[15] = v215;
        v209[16] = sub_1C11E0A48;
        v209[17] = v198;
        uint64_t v216 = v601;
        v209[18] = sub_1C11E0A4C;
        v209[19] = v216;
        v209[20] = sub_1C11E0A4C;
        v209[21] = v214;
        v209[22] = sub_1C11E0A48;
        v209[23] = v202;
        uint64_t v217 = v202;
        uint64_t v218 = v599;
        v209[24] = sub_1C11E0A4C;
        v209[25] = v218;
        uint64_t v219 = v597;
        v209[26] = sub_1C11E0A4C;
        v209[27] = v219;
        v209[28] = sub_1C11E0A48;
        v209[29] = v80;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v220 = v598;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v221 = v604;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v220, (os_log_type_t)v602))
        {
          uint64_t v590 = (uint64_t)v80;
          uint64_t v591 = v217;
          uint64_t v222 = v221;
          v223 = v606;
          os_log_t v224 = v607;
          v225 = v608;
          uint64_t v226 = v605;
          v227 = (uint8_t *)sub_1C0968FB4();
          v228 = (uint8_t *)swift_slowAlloc();
          v639[0] = 0;
          v638[0] = v228;
          v576 = v227;
          *(_WORD *)v227 = 1282;
          v640[0] = (uint64_t)(v227 + 2);
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v610;
          uint64_t v80 = v629;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          if (!v80)
          {
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v225;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A40;
            *((void *)&v641[0] + 1) = v224;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            v610 = v228;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v609;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            v229 = v223;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v617;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            uint64_t v230 = v222;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A48;
            *((void *)&v641[0] + 1) = v212;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            uint64_t v231 = v591;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v229;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v226;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A48;
            *((void *)&v641[0] + 1) = v600;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            uint64_t v232 = v601;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v232;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            v233 = v598;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v230;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A48;
            *((void *)&v641[0] + 1) = v231;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            uint64_t v234 = v597;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v599;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            uint64_t v235 = v590;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v234;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A48;
            *((void *)&v641[0] + 1) = v235;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            v629 = 0;
            swift_release();
            _os_log_impl(&dword_1BFC31000, v233, (os_log_type_t)v602, "PuzzleStatsProcessor: processing %s - wasCompletedAtSomePoint: %{BOOL}d, isStarted: %{BOOL}d, usedReveal: %{BOOL}d, hasFirstCompletedDate: %{BOOL}d", v576, 0x24u);
            v236 = v610;
            swift_arrayDestroy();
            MEMORY[0x1C18C9B00](v236, -1, -1);
            sub_1C0968FF8();
          }
          goto LABEL_160;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v102 = v636;
        (*v627)(v595, v636);
        char v104 = (char)v633;
        uint64_t v107 = v634;
        uint64_t v179 = v603;
        id v137 = v626;
        os_log_t v144 = v635;
        int v178 = (int)v619;
        if ((v619 & 1) == 0) {
          goto LABEL_66;
        }
      }
      else
      {
        int v178 = v143;
        uint64_t v107 = v634;
        uint64_t v179 = v603;
        uint64_t v102 = v636;
        if ((v143 & 1) == 0) {
          goto LABEL_66;
        }
      }
      uint64_t v237 = sub_1C13ECA9C((uint64_t)v144, v644);
      if (!v237) {
        uint64_t v237 = sub_1C01B4D28();
      }
      v640[0] = v237;
      uint64_t v238 = v621;
      swift_bridgeObjectRetain();
      sub_1C03D4308((uint64_t *)v641, v611, v238);
      swift_bridgeObjectRelease();
      uint64_t v80 = v640[0];
      uint64_t v239 = swift_bridgeObjectRetain();
      sub_1C02E7D3C(v239, (uint64_t)v144);
      if (v104)
      {
        uint64_t v240 = sub_1C11A501C();
        ((void (*)(char *, uint64_t, uint64_t))*v628)(v578, v240, v102);
        uint64_t v241 = v625;
        sub_1C11E04BC((uint64_t)v107, v625, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        uint64_t v242 = swift_allocObject();
        sub_1C11E0524(v241, v242 + v624, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
        uint64_t v80 = swift_allocObject();
        v80[2].isa = (Class)v144;
        uint64_t v243 = sub_1C15198AC();
        LODWORD(v617) = sub_1C151F38C();
        uint64_t v244 = swift_allocObject();
        *(unsigned char *)(v244 + 16) = 32;
        uint64_t v245 = swift_allocObject();
        *(unsigned char *)(v245 + 16) = 8;
        uint64_t v246 = swift_allocObject();
        *(void *)(v246 + 16) = sub_1C11DF84C;
        *(void *)(v246 + 24) = v242;
        v247 = (uint8_t *)v243;
        uint64_t v248 = swift_allocObject();
        *(void *)(v248 + 16) = sub_1C11E0A2C;
        *(void *)(v248 + 24) = v246;
        uint64_t v249 = swift_allocObject();
        *(unsigned char *)(v249 + 16) = 0;
        uint64_t v250 = swift_allocObject();
        *(unsigned char *)(v250 + 16) = 8;
        uint64_t v251 = swift_allocObject();
        *(void *)(v251 + 16) = sub_1C11E0A50;
        *(void *)(v251 + 24) = v80;
        uint64_t v252 = swift_allocObject();
        *(void *)(v252 + 16) = sub_1C11E0A38;
        *(void *)(v252 + 24) = v251;
        sub_1BFEEA21C(0, &qword_1EB863658, (uint64_t (*)(uint64_t))sub_1C11DF680, MEMORY[0x1E4FBBE00]);
        uint64_t v253 = swift_allocObject();
        sub_1C00BC788(v253, 6);
        void *v254 = sub_1C11E0A4C;
        v254[1] = v244;
        v254[2] = sub_1C11E0A4C;
        v254[3] = v245;
        v254[4] = sub_1C11E0A40;
        v254[5] = v248;
        v254[6] = sub_1C11E0A4C;
        v254[7] = v249;
        v254[8] = sub_1C11E0A4C;
        v254[9] = v250;
        v254[10] = sub_1C11E0A44;
        v254[11] = v252;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled((os_log_t)v247, (os_log_type_t)v617))
        {
          v255 = (uint8_t *)sub_1C0968FB4();
          uint64_t v256 = swift_slowAlloc();
          v638[0] = 0;
          v609 = v255;
          *(_WORD *)v255 = 514;
          v637[0] = v256;
          v639[0] = v255 + 2;
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v244;
          uint64_t v80 = v629;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          if (!v80)
          {
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v245;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
            v610 = v247;
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A40;
            *((void *)&v641[0] + 1) = v248;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v249;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v250;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
            swift_release();
            *(void *)&v641[0] = sub_1C11E0A44;
            *((void *)&v641[0] + 1) = v252;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
            v629 = 0;
            swift_release();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BFC31000, (os_log_t)v610, (os_log_type_t)v617, "PuzzleStatsProcessor: adding %s to completed puzzles set - difficulty: %lld", (uint8_t *)v609, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C18C9B00](v256, -1, -1);
            sub_1C0968FF8();
          }
          goto LABEL_160;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v102 = v636;
        (*v627)(v578, v636);
        swift_bridgeObjectRelease();
        char v104 = (char)v633;
        uint64_t v107 = v634;
        uint64_t v179 = v603;
        id v137 = v626;
        os_log_t v144 = v635;
        int v178 = (int)v619;
        if (!v626)
        {
LABEL_66:
          if ((v630 & 1) == 0) {
            goto LABEL_86;
          }
          goto LABEL_67;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (!v137) {
          goto LABEL_66;
        }
      }
      id v257 = objc_msgSend(v137, sel_firstPlayDuration);
      if (!v257) {
        goto LABEL_66;
      }
      v258 = v257;
      uint64_t v80 = objc_msgSend(v257, sel_integerValue);

      v259 = v556;
      swift_beginAccess();
      uint64_t v260 = sub_1C13EC894((uint64_t)v144, *v259);
      char v262 = v261;
      swift_endAccess();
      uint64_t v263 = (v262 & 1) != 0 ? 0x7FFFFFFFFFFFFFFFLL : v260;
      uint64_t v264 = sub_1C13DC004(v263, (uint64_t)v80);
      swift_beginAccess();
      sub_1C02E7E20(v264, 0, (uint64_t)v144);
      swift_endAccess();
      v265 = v575;
      swift_beginAccess();
      uint64_t v266 = sub_1C13EC894((uint64_t)v144, *v265);
      char v268 = v267;
      swift_endAccess();
      uint64_t v269 = (v268 & 1) != 0 ? 0 : v266;
      swift_beginAccess();
      double v270 = COERCE_DOUBLE(sub_1C13EC894((uint64_t)v144, *v179));
      char v272 = v271;
      swift_endAccess();
      if (v272)
      {
        swift_beginAccess();
        sub_1C02E7EF0(COERCE__INT64((double)(uint64_t)v80), 0, (uint64_t)v144);
        swift_endAccess();
        uint64_t v273 = v269 + 1;
        if (__OFADD__(v269, 1)) {
          goto LABEL_157;
        }
      }
      else
      {
        uint64_t v273 = v269 + 1;
        if (__OFADD__(v269, 1)) {
          goto LABEL_159;
        }
        swift_beginAccess();
        sub_1C02E7EF0(COERCE__INT64(((double)v269 * v270 + (double)(uint64_t)v80) / (double)v273), 0, (uint64_t)v144);
        swift_endAccess();
      }
      swift_beginAccess();
      sub_1C02E7E20(v273, 0, (uint64_t)v144);
      swift_endAccess();
      uint64_t v102 = v636;
      char v104 = (char)v633;
      if ((v633 & 1) == 0) {
        goto LABEL_66;
      }
      v274 = (uint8_t *)sub_1C11A501C();
      v275 = *v628;
      v610 = v274;
      v617 = v275;
      ((void (*)(char *))v275)(v562);
      uint64_t v276 = v625;
      sub_1C11E04BC((uint64_t)v107, v625, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      uint64_t v277 = swift_allocObject();
      sub_1C11E0524(v276, v277 + v624, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      uint64_t v278 = swift_allocObject();
      *(void *)(v278 + 16) = v80;
      v279 = sub_1C15198AC();
      LODWORD(v608) = sub_1C151F38C();
      uint64_t v280 = swift_allocObject();
      *(unsigned char *)(v280 + 16) = 32;
      uint64_t v281 = swift_allocObject();
      *(unsigned char *)(v281 + 16) = 8;
      uint64_t v282 = swift_allocObject();
      *(void *)(v282 + 16) = sub_1C11DF84C;
      *(void *)(v282 + 24) = v277;
      uint64_t v283 = swift_allocObject();
      *(void *)(v283 + 16) = sub_1C11E0A2C;
      *(void *)(v283 + 24) = v282;
      uint64_t v284 = swift_allocObject();
      *(unsigned char *)(v284 + 16) = 0;
      uint64_t v285 = swift_allocObject();
      *(unsigned char *)(v285 + 16) = 8;
      uint64_t v286 = swift_allocObject();
      *(void *)(v286 + 16) = sub_1C005F468;
      *(void *)(v286 + 24) = v278;
      uint64_t v287 = swift_allocObject();
      *(void *)(v287 + 16) = sub_1C11E0BE0;
      *(void *)(v287 + 24) = v286;
      sub_1BFEEA21C(0, &qword_1EB863658, (uint64_t (*)(uint64_t))sub_1C11DF680, MEMORY[0x1E4FBBE00]);
      v609 = v288;
      uint64_t v289 = swift_allocObject();
      sub_1C00BC788(v289, 6);
      void *v290 = sub_1C11E0A4C;
      v290[1] = v280;
      v290[2] = sub_1C11E0A4C;
      v290[3] = v281;
      v290[4] = sub_1C11E0A40;
      v290[5] = v283;
      v290[6] = sub_1C11E0A4C;
      v290[7] = v284;
      v290[8] = sub_1C11E0A4C;
      v290[9] = v285;
      v290[10] = sub_1C11E0A44;
      v290[11] = v287;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v279, (os_log_type_t)v608))
      {
        os_log_t v607 = v279;
        v291 = (uint8_t *)sub_1C0968FB4();
        uint64_t v292 = swift_slowAlloc();
        v638[0] = 0;
        *(_WORD *)v291 = 514;
        v637[0] = v292;
        v639[0] = v291 + 2;
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v280;
        uint64_t v80 = v629;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
        if (!v80)
        {
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v281;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A40;
          *((void *)&v641[0] + 1) = v283;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v284;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v285;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A44;
          *((void *)&v641[0] + 1) = v287;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          v629 = 0;
          swift_release();
          _os_log_impl(&dword_1BFC31000, v607, (os_log_type_t)v608, "PuzzleStatsProcessor: %s - using playDuration: %ld", v291, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v292, -1, -1);
          sub_1C0968FF8();
        }
        goto LABEL_160;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v293 = v636;
      v608 = *v627;
      ((void (*)(char *, uint64_t))v608)(v562, v636);
      ((void (*)(char *, uint8_t *, uint64_t))v617)(v560, v610, v293);
      uint64_t v294 = swift_allocObject();
      os_log_t v295 = v635;
      *(void *)(v294 + 16) = v635;
      uint64_t v296 = swift_allocObject();
      *(void *)(v296 + 16) = v570;
      *(void *)(v296 + 24) = v295;
      swift_retain();
      os_log_t v607 = (os_log_t)sub_1C15198AC();
      LODWORD(v295) = sub_1C151F38C();
      uint64_t v297 = swift_allocObject();
      *(unsigned char *)(v297 + 16) = 0;
      uint64_t v298 = swift_allocObject();
      *(unsigned char *)(v298 + 16) = 8;
      uint64_t v299 = swift_allocObject();
      *(void *)(v299 + 16) = sub_1C11E0A50;
      *(void *)(v299 + 24) = v294;
      uint64_t v300 = swift_allocObject();
      *(void *)(v300 + 16) = sub_1C11E0A38;
      *(void *)(v300 + 24) = v299;
      uint64_t v301 = swift_allocObject();
      *(unsigned char *)(v301 + 16) = 0;
      uint64_t v302 = swift_allocObject();
      *(unsigned char *)(v302 + 16) = 8;
      uint64_t v303 = swift_allocObject();
      *(void *)(v303 + 16) = sub_1C11DFCD8;
      *(void *)(v303 + 24) = v296;
      uint64_t v304 = swift_allocObject();
      *(void *)(v304 + 16) = sub_1C11E0BE0;
      *(void *)(v304 + 24) = v303;
      uint64_t v305 = swift_allocObject();
      sub_1C00BC788(v305, 6);
      void *v306 = sub_1C11E0A4C;
      v306[1] = v297;
      v306[2] = sub_1C11E0A4C;
      v306[3] = v298;
      v306[4] = sub_1C11E0A44;
      v306[5] = v300;
      v306[6] = sub_1C11E0A4C;
      v306[7] = v301;
      v306[8] = sub_1C11E0A4C;
      v306[9] = v302;
      v306[10] = sub_1C11E0A44;
      v306[11] = v304;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      LODWORD(v606) = v295;
      os_log_type_t v307 = v295;
      v308 = v607;
      if (os_log_type_enabled(v607, v307))
      {
        v309 = (uint8_t *)sub_1C0968FB4();
        v638[0] = 0;
        *(_WORD *)v309 = 512;
        v637[0] = 0;
        v639[0] = v309 + 2;
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v297;
        uint64_t v80 = v629;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
        if (!v80)
        {
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v298;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A44;
          *((void *)&v641[0] + 1) = v300;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v301;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v302;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A44;
          *((void *)&v641[0] + 1) = v304;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          v629 = 0;
          swift_release();
          _os_log_impl(&dword_1BFC31000, v308, (os_log_type_t)v606, "PuzzleStatsProcessor: updating fastestCompletedTimes for difficulty %lld to: %ld", v309, 0x16u);
          sub_1C0968FF8();
        }
        goto LABEL_160;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v310 = v636;
      ((void (*)(char *, uint64_t))v608)(v560, v636);
      ((void (*)(char *, uint8_t *, uint64_t))v617)(v561, v610, v310);
      uint64_t v311 = swift_allocObject();
      os_log_t v312 = v635;
      *(void *)(v311 + 16) = v635;
      uint64_t v313 = swift_allocObject();
      *(void *)(v313 + 16) = v569;
      *(void *)(v313 + 24) = v312;
      swift_retain();
      os_log_t v607 = (os_log_t)sub_1C15198AC();
      LODWORD(v312) = sub_1C151F38C();
      uint64_t v314 = swift_allocObject();
      *(unsigned char *)(v314 + 16) = 0;
      uint64_t v315 = swift_allocObject();
      *(unsigned char *)(v315 + 16) = 8;
      uint64_t v316 = swift_allocObject();
      *(void *)(v316 + 16) = sub_1C11E0A50;
      *(void *)(v316 + 24) = v311;
      uint64_t v317 = swift_allocObject();
      *(void *)(v317 + 16) = sub_1C11E0A38;
      *(void *)(v317 + 24) = v316;
      uint64_t v318 = swift_allocObject();
      *(unsigned char *)(v318 + 16) = 0;
      uint64_t v319 = swift_allocObject();
      *(unsigned char *)(v319 + 16) = 8;
      uint64_t v320 = swift_allocObject();
      *(void *)(v320 + 16) = sub_1C11DFD30;
      *(void *)(v320 + 24) = v313;
      uint64_t v321 = swift_allocObject();
      *(void *)(v321 + 16) = sub_1C11DFD78;
      *(void *)(v321 + 24) = v320;
      uint64_t v322 = swift_allocObject();
      sub_1C00BC788(v322, 6);
      void *v323 = sub_1C11E0A4C;
      v323[1] = v314;
      v323[2] = sub_1C11E0A4C;
      v323[3] = v315;
      v323[4] = sub_1C11E0A44;
      v323[5] = v317;
      v323[6] = sub_1C11E0A4C;
      v323[7] = v318;
      v323[8] = sub_1C11E0A4C;
      v323[9] = v319;
      v323[10] = sub_1C11DFDA0;
      v323[11] = v321;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      LODWORD(v606) = v312;
      os_log_type_t v324 = v312;
      v325 = v607;
      if (os_log_type_enabled(v607, v324))
      {
        v326 = (uint8_t *)sub_1C0968FB4();
        v638[0] = 0;
        *(_WORD *)v326 = 512;
        v637[0] = 0;
        v639[0] = v326 + 2;
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v314;
        uint64_t v80 = v629;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
        if (!v80)
        {
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v315;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A44;
          *((void *)&v641[0] + 1) = v317;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v318;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v319;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11DFDA0;
          *((void *)&v641[0] + 1) = v321;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          v629 = 0;
          swift_release();
          _os_log_impl(&dword_1BFC31000, v325, (os_log_type_t)v606, "PuzzleStatsProcessor: updating averageCompletionTimes for difficulty %lld to: %f", v326, 0x16u);
          sub_1C0968FF8();
        }
        goto LABEL_160;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v327 = v636;
      ((void (*)(char *, uint64_t))v608)(v561, v636);
      uint64_t v328 = v564;
      ((void (*)(char *, uint8_t *, uint64_t))v617)(v563, v610, v327);
      uint64_t v329 = swift_allocObject();
      os_log_t v330 = v635;
      *(void *)(v329 + 16) = v635;
      uint64_t v331 = swift_allocObject();
      *(void *)(v331 + 16) = v328;
      *(void *)(v331 + 24) = v330;
      swift_retain();
      v617 = (unsigned char *)sub_1C15198AC();
      LODWORD(v328) = sub_1C151F38C();
      uint64_t v332 = swift_allocObject();
      *(unsigned char *)(v332 + 16) = 0;
      uint64_t v333 = swift_allocObject();
      *(unsigned char *)(v333 + 16) = 8;
      uint64_t v334 = swift_allocObject();
      *(void *)(v334 + 16) = sub_1C11E0A50;
      *(void *)(v334 + 24) = v329;
      uint64_t v335 = swift_allocObject();
      *(void *)(v335 + 16) = sub_1C11E0A38;
      *(void *)(v335 + 24) = v334;
      uint64_t v336 = swift_allocObject();
      *(unsigned char *)(v336 + 16) = 0;
      uint64_t v337 = swift_allocObject();
      *(unsigned char *)(v337 + 16) = 8;
      uint64_t v338 = swift_allocObject();
      *(void *)(v338 + 16) = sub_1C11DFE08;
      *(void *)(v338 + 24) = v331;
      uint64_t v339 = swift_allocObject();
      *(void *)(v339 + 16) = sub_1C11E0BE0;
      *(void *)(v339 + 24) = v338;
      uint64_t v340 = swift_allocObject();
      uint64_t v80 = sub_1C00BC788(v340, 6);
      void *v341 = sub_1C11E0A4C;
      v341[1] = v332;
      v341[2] = sub_1C11E0A4C;
      v341[3] = v333;
      v341[4] = sub_1C11E0A44;
      v341[5] = v335;
      v341[6] = sub_1C11E0A4C;
      v341[7] = v336;
      v341[8] = sub_1C11E0A4C;
      v341[9] = v337;
      v341[10] = sub_1C11E0A44;
      v341[11] = v339;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      LODWORD(v610) = v328;
      os_log_type_t v342 = v328;
      os_log_t v343 = (os_log_t)v617;
      if (os_log_type_enabled((os_log_t)v617, v342))
      {
        v344 = (uint8_t *)sub_1C0968FB4();
        v638[0] = 0;
        *(_WORD *)v344 = 512;
        v637[0] = 0;
        v639[0] = v344 + 2;
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v332;
        uint64_t v80 = v629;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
        if (!v80)
        {
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v333;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A44;
          *((void *)&v641[0] + 1) = v335;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v336;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v337;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A44;
          *((void *)&v641[0] + 1) = v339;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          v629 = 0;
          swift_release();
          _os_log_impl(&dword_1BFC31000, (os_log_t)v617, (os_log_type_t)v610, "PuzzleStatsProcessor: updating completedRunningCounts for difficulty %lld to: %ld", v344, 0x16u);
          sub_1C0968FF8();
        }
        goto LABEL_160;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v102 = v636;
      ((void (*)(char *, uint64_t))v608)(v563, v636);
      char v104 = (char)v633;
      uint64_t v107 = v634;
      id v137 = v626;
      os_log_t v144 = v635;
      int v178 = (int)v619;
      if ((v630 & 1) == 0) {
        goto LABEL_86;
      }
LABEL_67:
      LODWORD(v617) = v618 ^ 1;
      if (((v618 ^ 1 | v178) & 1) == 0) {
        goto LABEL_98;
      }
      if (!v137)
      {
LABEL_86:
        if ((v178 & 1) == 0) {
          goto LABEL_98;
        }
        goto LABEL_87;
      }
      id v345 = v137;
      id v346 = objc_msgSend(v345, sel_bestScore);
      v610 = (uint8_t *)v345;
      if (v346 || (id v346 = objc_msgSend(v345, sel_score)) != 0)
      {
        char v347 = v104;
        uint64_t v80 = objc_msgSend(v346, sel_integerValue);
      }
      else
      {
        char v347 = v104;
        uint64_t v80 = 0;
      }
      v348 = v551;
      swift_beginAccess();
      uint64_t v349 = sub_1C13EC894((uint64_t)v144, *v348);
      char v351 = v350;
      swift_endAccess();
      if (v351) {
        uint64_t v352 = 0;
      }
      else {
        uint64_t v352 = v349;
      }
      uint64_t v353 = sub_1C13DC010(v352, (uint64_t)v80);
      swift_beginAccess();
      sub_1C02E7E20(v353, 0, (uint64_t)v144);
      swift_endAccess();
      v354 = v555;
      swift_beginAccess();
      uint64_t v355 = sub_1C13EC894((uint64_t)v144, *v354);
      char v357 = v356;
      swift_endAccess();
      if (v357) {
        uint64_t v358 = 0;
      }
      else {
        uint64_t v358 = v355;
      }
      uint64_t v359 = v358 + 1;
      if (__OFADD__(v358, 1)) {
        goto LABEL_158;
      }
      swift_beginAccess();
      sub_1C02E7E20(v359, 0, (uint64_t)v144);
      swift_endAccess();
      if ((v347 & 1) == 0)
      {
        char v104 = v347;

        uint64_t v102 = v636;
        if (v178) {
          goto LABEL_109;
        }
        LOBYTE(v379) = (_BYTE)v617;
        if ((v615 & 1) == 0) {
          goto LABEL_132;
        }
LABEL_100:
        if ((v379 & 1) == 0) {
          goto LABEL_131;
        }
        goto LABEL_108;
      }
      uint64_t v360 = sub_1C11A501C();
      v361 = (uint8_t *)*v628;
      v608 = (unsigned char *)v360;
      v609 = v361;
      ((void (*)(char *))v361)(v552);
      uint64_t v362 = v625;
      sub_1C11E04BC((uint64_t)v107, v625, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      uint64_t v363 = swift_allocObject();
      sub_1C11E0524(v362, v363 + v624, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      uint64_t v364 = swift_allocObject();
      *(void *)(v364 + 16) = v80;
      v365 = sub_1C15198AC();
      LODWORD(v617) = sub_1C151F38C();
      uint64_t v366 = swift_allocObject();
      *(unsigned char *)(v366 + 16) = 32;
      uint64_t v367 = swift_allocObject();
      *(unsigned char *)(v367 + 16) = 8;
      uint64_t v368 = swift_allocObject();
      *(void *)(v368 + 16) = sub_1C11DF84C;
      *(void *)(v368 + 24) = v363;
      uint64_t v369 = swift_allocObject();
      *(void *)(v369 + 16) = sub_1C11E0A2C;
      *(void *)(v369 + 24) = v368;
      uint64_t v370 = swift_allocObject();
      *(unsigned char *)(v370 + 16) = 0;
      uint64_t v371 = swift_allocObject();
      *(unsigned char *)(v371 + 16) = 8;
      uint64_t v372 = swift_allocObject();
      *(void *)(v372 + 16) = sub_1C11E0A50;
      *(void *)(v372 + 24) = v364;
      uint64_t v373 = swift_allocObject();
      *(void *)(v373 + 16) = sub_1C11DFB94;
      *(void *)(v373 + 24) = v372;
      sub_1BFEEA21C(0, &qword_1EB863658, (uint64_t (*)(uint64_t))sub_1C11DF680, MEMORY[0x1E4FBBE00]);
      os_log_t v607 = v374;
      uint64_t v375 = swift_allocObject();
      sub_1C00BC788(v375, 6);
      void *v376 = sub_1C11E0A4C;
      v376[1] = v366;
      v376[2] = sub_1C11E0A4C;
      v376[3] = v367;
      v376[4] = sub_1C11E0A40;
      v376[5] = v369;
      v376[6] = sub_1C11E0A4C;
      v376[7] = v370;
      v376[8] = sub_1C11E0A4C;
      v376[9] = v371;
      v376[10] = sub_1C11DF8D0;
      v376[11] = v373;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v365, (os_log_type_t)v617))
      {
        v606 = (void (*)(char *, uint64_t, uint64_t))v365;
        v377 = (uint8_t *)sub_1C0968FB4();
        uint64_t v378 = swift_slowAlloc();
        v639[0] = 0;
        v638[0] = v378;
        *(_WORD *)v377 = 514;
        v640[0] = (uint64_t)(v377 + 2);
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v366;
        uint64_t v80 = v629;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        if (!v80)
        {
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v367;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A40;
          *((void *)&v641[0] + 1) = v369;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v370;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v371;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11DF8D0;
          *((void *)&v641[0] + 1) = v373;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          v629 = 0;
          swift_release();
          _os_log_impl(&dword_1BFC31000, (os_log_t)v606, (os_log_type_t)v617, "PuzzleStatsProcessor: %s - using bestScore: %ld", v377, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v378, -1, -1);
          sub_1C0968FF8();
        }
        goto LABEL_160;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v380 = v636;
      v617 = *v627;
      ((void (*)(char *, uint64_t))v617)(v552, v636);
      ((void (*)(char *, unsigned char *, uint64_t))v609)(v554, v608, v380);
      uint64_t v381 = swift_allocObject();
      os_log_t v382 = v635;
      *(void *)(v381 + 16) = v635;
      uint64_t v383 = swift_allocObject();
      *(void *)(v383 + 16) = v568;
      *(void *)(v383 + 24) = v382;
      swift_retain();
      v606 = (void (*)(char *, uint64_t, uint64_t))sub_1C15198AC();
      LODWORD(v382) = sub_1C151F38C();
      uint64_t v384 = swift_allocObject();
      *(unsigned char *)(v384 + 16) = 0;
      uint64_t v385 = swift_allocObject();
      *(unsigned char *)(v385 + 16) = 8;
      uint64_t v386 = swift_allocObject();
      *(void *)(v386 + 16) = sub_1C11E0A50;
      *(void *)(v386 + 24) = v381;
      uint64_t v387 = swift_allocObject();
      *(void *)(v387 + 16) = sub_1C11E0A38;
      *(void *)(v387 + 24) = v386;
      uint64_t v388 = swift_allocObject();
      *(unsigned char *)(v388 + 16) = 0;
      uint64_t v389 = swift_allocObject();
      *(unsigned char *)(v389 + 16) = 8;
      uint64_t v390 = swift_allocObject();
      *(void *)(v390 + 16) = sub_1C11E0A30;
      *(void *)(v390 + 24) = v383;
      uint64_t v391 = swift_allocObject();
      *(void *)(v391 + 16) = sub_1C11E0BE0;
      *(void *)(v391 + 24) = v390;
      uint64_t v392 = swift_allocObject();
      sub_1C00BC788(v392, 6);
      void *v393 = sub_1C11E0A4C;
      v393[1] = v384;
      v393[2] = sub_1C11E0A4C;
      v393[3] = v385;
      v393[4] = sub_1C11E0A44;
      v393[5] = v387;
      v393[6] = sub_1C11E0A4C;
      v393[7] = v388;
      v393[8] = sub_1C11E0A4C;
      v393[9] = v389;
      v393[10] = sub_1C11E0A44;
      v393[11] = v391;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      LODWORD(v605) = v382;
      os_log_type_t v394 = v382;
      v395 = v606;
      if (os_log_type_enabled((os_log_t)v606, v394))
      {
        v396 = (uint8_t *)sub_1C0968FB4();
        v639[0] = 0;
        v638[0] = 0;
        *(_WORD *)v396 = 512;
        v640[0] = (uint64_t)(v396 + 2);
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v384;
        uint64_t v80 = v629;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        if (!v80)
        {
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v385;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A44;
          *((void *)&v641[0] + 1) = v387;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v388;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v389;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A44;
          *((void *)&v641[0] + 1) = v391;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          v629 = 0;
          swift_release();
          _os_log_impl(&dword_1BFC31000, v395, (os_log_type_t)v605, "PuzzleStatsProcessor: updating highestScores for difficulty %lld to: %ld", v396, 0x16u);
          sub_1C0968FF8();
        }
        goto LABEL_160;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v397 = v636;
      ((void (*)(char *, uint64_t))v617)(v554, v636);
      v398 = v558;
      ((void (*)(char *, unsigned char *, uint64_t))v609)(v553, v608, v397);
      uint64_t v399 = swift_allocObject();
      os_log_t v400 = v635;
      *(void *)(v399 + 16) = v635;
      uint64_t v401 = swift_allocObject();
      *(void *)(v401 + 16) = v398;
      *(void *)(v401 + 24) = v400;
      swift_retain();
      v609 = sub_1C15198AC();
      int v402 = sub_1C151F38C();
      uint64_t v403 = swift_allocObject();
      *(unsigned char *)(v403 + 16) = 0;
      uint64_t v404 = swift_allocObject();
      *(unsigned char *)(v404 + 16) = 8;
      uint64_t v405 = swift_allocObject();
      *(void *)(v405 + 16) = sub_1C11E0A50;
      *(void *)(v405 + 24) = v399;
      uint64_t v406 = swift_allocObject();
      *(void *)(v406 + 16) = sub_1C11E0A38;
      *(void *)(v406 + 24) = v405;
      uint64_t v407 = swift_allocObject();
      *(unsigned char *)(v407 + 16) = 0;
      uint64_t v408 = swift_allocObject();
      *(unsigned char *)(v408 + 16) = 8;
      uint64_t v409 = swift_allocObject();
      *(void *)(v409 + 16) = sub_1C11E0A30;
      *(void *)(v409 + 24) = v401;
      uint64_t v410 = swift_allocObject();
      *(void *)(v410 + 16) = sub_1C11E0BE0;
      *(void *)(v410 + 24) = v409;
      uint64_t v411 = swift_allocObject();
      sub_1C00BC788(v411, 6);
      void *v412 = sub_1C11E0A4C;
      v412[1] = v403;
      v412[2] = sub_1C11E0A4C;
      v412[3] = v404;
      v412[4] = sub_1C11E0A44;
      v412[5] = v406;
      v412[6] = sub_1C11E0A4C;
      v412[7] = v407;
      v412[8] = sub_1C11E0A4C;
      v412[9] = v408;
      v412[10] = sub_1C11E0A44;
      v412[11] = v410;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v80 = v609;
      swift_bridgeObjectRelease();
      LODWORD(v608) = v402;
      if (os_log_type_enabled(v80, (os_log_type_t)v402))
      {
        v413 = (uint8_t *)sub_1C0968FB4();
        v639[0] = 0;
        v638[0] = 0;
        *(_WORD *)v413 = 512;
        v640[0] = (uint64_t)(v413 + 2);
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v403;
        uint64_t v80 = v629;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        if (!v80)
        {
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v404;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A44;
          *((void *)&v641[0] + 1) = v406;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v407;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v408;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A44;
          *((void *)&v641[0] + 1) = v410;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
          v629 = 0;
          swift_release();
          _os_log_impl(&dword_1BFC31000, v609, (os_log_type_t)v608, "PuzzleStatsProcessor: updating startedRunningCounts for difficulty %lld to: %ld", v413, 0x16u);
          sub_1C0968FF8();
        }
LABEL_160:

        __break(1u);
        __break(1u);
        return;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v102 = v636;
      ((void (*)(char *, uint64_t))v617)(v553, v636);
      char v104 = (char)v633;
      uint64_t v107 = v634;
      id v137 = v626;
      os_log_t v144 = v635;
      if ((v619 & 1) == 0)
      {
LABEL_98:
        if ((v615 & 1) == 0)
        {
          if ((v104 & 1) == 0) {
            goto LABEL_131;
          }
          unsigned int v379 = 0;
LABEL_104:
          uint64_t v414 = sub_1C11A501C();
          ((void (*)(char *, uint64_t, uint64_t))*v628)(v592, v414, v102);
          uint64_t v415 = v625;
          sub_1C11E04BC((uint64_t)v107, v625, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
          uint64_t v416 = swift_allocObject();
          sub_1C11E0524(v415, v416 + v624, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
          uint64_t v417 = swift_allocObject();
          LODWORD(v617) = v379;
          *(unsigned char *)(v417 + 16) = v379 & 1;
          v619 = sub_1C15198AC();
          LODWORD(v618) = sub_1C151F38C();
          uint64_t v418 = swift_allocObject();
          *(unsigned char *)(v418 + 16) = 32;
          uint64_t v419 = swift_allocObject();
          *(unsigned char *)(v419 + 16) = 8;
          uint64_t v420 = swift_allocObject();
          *(void *)(v420 + 16) = sub_1C11DF84C;
          *(void *)(v420 + 24) = v416;
          uint64_t v421 = swift_allocObject();
          *(void *)(v421 + 16) = sub_1C11E0A2C;
          *(void *)(v421 + 24) = v420;
          uint64_t v422 = swift_allocObject();
          *(unsigned char *)(v422 + 16) = 0;
          v423 = v102;
          uint64_t v424 = swift_allocObject();
          *(unsigned char *)(v424 + 16) = 4;
          uint64_t v425 = swift_allocObject();
          *(void *)(v425 + 16) = sub_1C11E0A54;
          *(void *)(v425 + 24) = v417;
          uint64_t v426 = swift_allocObject();
          *(void *)(v426 + 16) = sub_1C11DF964;
          *(void *)(v426 + 24) = v425;
          uint64_t v427 = swift_allocObject();
          *(void *)(v427 + 16) = sub_1C11DF990;
          *(void *)(v427 + 24) = v426;
          uint64_t v80 = v423;
          uint64_t v428 = swift_allocObject();
          *(void *)(v428 + 16) = sub_1C11DF9B8;
          *(void *)(v428 + 24) = v427;
          sub_1BFEEA21C(0, &qword_1EB863658, (uint64_t (*)(uint64_t))sub_1C11DF680, MEMORY[0x1E4FBBE00]);
          uint64_t v429 = swift_allocObject();
          sub_1C00BC788(v429, 6);
          void *v430 = sub_1C11E0A4C;
          v430[1] = v418;
          v430[2] = sub_1C11E0A4C;
          v430[3] = v419;
          v430[4] = sub_1C11E0A40;
          v430[5] = v421;
          v430[6] = sub_1C11E0A4C;
          v430[7] = v422;
          v430[8] = sub_1C11E0A4C;
          v430[9] = v424;
          v430[10] = sub_1C11DF9E8;
          v430[11] = v428;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v431 = v619;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v431, (os_log_type_t)v618))
          {
            v432 = (uint8_t *)sub_1C0968FB4();
            uint64_t v433 = swift_slowAlloc();
            v639[0] = 0;
            v638[0] = v433;
            *(_WORD *)v432 = 514;
            v640[0] = (uint64_t)(v432 + 2);
            *(void *)&v641[0] = sub_1C11E0A4C;
            *((void *)&v641[0] + 1) = v418;
            uint64_t v80 = v629;
            sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
            if (!v80)
            {
              swift_release();
              *(void *)&v641[0] = sub_1C11E0A4C;
              *((void *)&v641[0] + 1) = v419;
              sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
              swift_release();
              *(void *)&v641[0] = sub_1C11E0A40;
              *((void *)&v641[0] + 1) = v421;
              sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
              swift_release();
              *(void *)&v641[0] = sub_1C11E0A4C;
              *((void *)&v641[0] + 1) = v422;
              sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
              swift_release();
              *(void *)&v641[0] = sub_1C11E0A4C;
              *((void *)&v641[0] + 1) = v424;
              sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
              swift_release();
              *(void *)&v641[0] = sub_1C11DF9E8;
              *((void *)&v641[0] + 1) = v428;
              sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
              v629 = 0;
              swift_release();
              _os_log_impl(&dword_1BFC31000, v619, (os_log_type_t)v618, "PuzzleStatsProcessor: %s - will be checked for streaks: %{BOOL}d", v432, 0x12u);
              swift_arrayDestroy();
              MEMORY[0x1C18C9B00](v433, -1, -1);
              sub_1C0968FF8();
            }
            goto LABEL_160;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          (*v627)(v592, (uint64_t)v423);
          uint64_t v102 = (uint64_t)v423;
          char v104 = (char)v633;
          uint64_t v107 = v634;
          id v137 = v626;
          os_log_t v144 = v635;
          if ((v617 & 1) == 0) {
            goto LABEL_131;
          }
          goto LABEL_108;
        }
        unsigned int v379 = v618 ^ 1;
        if (v104) {
          goto LABEL_104;
        }
        goto LABEL_100;
      }
LABEL_87:
      if (v104)
      {
        unsigned int v379 = 1;
        goto LABEL_104;
      }
LABEL_108:
      if (!v137) {
        goto LABEL_131;
      }
LABEL_109:
      v434 = v137;
      id v435 = [v434 firstCompletedDate];
      v436 = v584;
      uint64_t v80 = ((unint64_t)v584 & 0xFFFFFFFFFFFFLL | 0x60F0000000000000);
      v619 = v434;
      if (v435)
      {
        v437 = v435;
        v438 = v574;
        sub_1C15162BC();

        v439 = *v582;
        uint64_t v441 = v587;
        uint64_t v440 = v588;
        ((void (*)(uint64_t, char *, uint64_t))*v582)(v587, v438, v588);
        v442 = *v585;
        (*v585)(v441, 0, 1, v440);
        v443 = *v436;
        if ((*v436)(v441, 1, v440) != 1)
        {
          uint64_t v448 = v577;
          ((void (*)(uint64_t, uint64_t, uint64_t))v439)(v577, v441, v440);
          v442(v448, 0, 1, v440);
          os_log_t v144 = v635;
          v434 = v619;
          goto LABEL_118;
        }
        os_log_t v144 = v635;
        v434 = v619;
      }
      else
      {
        v442 = *v585;
        (*v585)(v587, 1, 1, v588);
      }
      id v444 = [v434 completedDate];
      if (v444)
      {
        v445 = v444;
        uint64_t v446 = (uint64_t)v572;
        sub_1C15162BC();

        uint64_t v447 = 0;
      }
      else
      {
        uint64_t v447 = 1;
        uint64_t v446 = (uint64_t)v572;
      }
      uint64_t v440 = v588;
      v442(v446, v447, 1, v588);
      v449 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      uint64_t v448 = v577;
      sub_1BFEE9C14(v446, v577, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1BFE548F0(v587, (unint64_t *)&qword_1EB871180, v449);
      v443 = *v584;
LABEL_118:
      if (v443(v448, 1, v440) == 1)
      {

        sub_1BFE548F0(v448, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        uint64_t v107 = v634;
        id v137 = v626;
        uint64_t v102 = v636;
        char v104 = (char)v633;
        if ((v630 & 1) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        v450 = *v582;
        v451 = v571;
        ((void (*)(char *, uint64_t, uint64_t))*v582)(v571, v448, v440);
        uint64_t v452 = v567;
        sub_1BFF97A80(v620, v567, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        if (v443(v452, 1, v440) != 1)
        {
          uint64_t v453 = (uint64_t)v565;
          v450();
          char v454 = (char)v633;
          char v455 = sub_1C11DC978(v453, v550, v633 & 1);
          uint64_t v102 = v636;
          if (v455)
          {
            v456 = *(void (**)(uint64_t, char *, uint64_t))v542[0];
            uint64_t v457 = (uint64_t)v574;
            (*(void (**)(char *, uint64_t, uint64_t))v542[0])(v574, v453, v440);
            sub_1C0236164(v457);
            os_log_t v144 = v635;
            if (v454)
            {
              uint64_t v458 = sub_1C11A501C();
              ((void (*)(char *, uint64_t, uint64_t))*v628)(v545, v458, v102);
              uint64_t v459 = v625;
              sub_1C11E04BC((uint64_t)v634, v625, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
              uint64_t v615 = swift_allocObject();
              sub_1C11E0524(v459, v615 + v624, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
              v456(v457, v565, v440);
              unint64_t v460 = (*(unsigned __int8 *)(v547 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v547 + 80);
              uint64_t v461 = swift_allocObject();
              ((void (*)(unint64_t, uint64_t, uint64_t))v450)(v461 + v460, v457, v440);
              uint64_t v462 = swift_allocObject();
              *(void *)(v462 + 16) = sub_1C11DFA84;
              *(void *)(v462 + 24) = v461;
              os_log_t v618 = (os_log_t)sub_1C15198AC();
              LODWORD(v617) = sub_1C151F38C();
              uint64_t v463 = swift_allocObject();
              *(unsigned char *)(v463 + 16) = 32;
              uint64_t v464 = swift_allocObject();
              *(unsigned char *)(v464 + 16) = 8;
              uint64_t v465 = swift_allocObject();
              uint64_t v466 = v615;
              *(void *)(v465 + 16) = sub_1C11DF84C;
              *(void *)(v465 + 24) = v466;
              uint64_t v467 = swift_allocObject();
              *(void *)(v467 + 16) = sub_1C11E0A2C;
              *(void *)(v467 + 24) = v465;
              uint64_t v468 = swift_allocObject();
              *(unsigned char *)(v468 + 16) = 32;
              uint64_t v469 = swift_allocObject();
              *(unsigned char *)(v469 + 16) = 8;
              uint64_t v470 = swift_allocObject();
              *(void *)(v470 + 16) = sub_1C11DFAF8;
              *(void *)(v470 + 24) = v462;
              uint64_t v471 = swift_allocObject();
              *(void *)(v471 + 16) = sub_1C11E0A2C;
              *(void *)(v471 + 24) = v470;
              sub_1BFEEA21C(0, &qword_1EB863658, (uint64_t (*)(uint64_t))sub_1C11DF680, MEMORY[0x1E4FBBE00]);
              uint64_t v472 = swift_allocObject();
              sub_1C00BC788(v472, 6);
              void *v473 = sub_1C11E0A4C;
              v473[1] = v463;
              v473[2] = sub_1C11E0A4C;
              v473[3] = v464;
              v473[4] = sub_1C11E0A40;
              v473[5] = v467;
              v473[6] = sub_1C11E0A4C;
              v473[7] = v468;
              v473[8] = sub_1C11E0A4C;
              v473[9] = v469;
              v473[10] = sub_1C11E0A40;
              v473[11] = v471;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v474 = v618;
              swift_bridgeObjectRelease();
              if (os_log_type_enabled(v474, (os_log_type_t)v617))
              {
                uint64_t v615 = v469;
                v475 = (uint8_t *)sub_1C0968FB4();
                uint64_t v476 = swift_slowAlloc();
                v639[0] = 0;
                v638[0] = v476;
                v610 = v475;
                *(_WORD *)v475 = 514;
                v640[0] = (uint64_t)(v475 + 2);
                *(void *)&v641[0] = sub_1C11E0A4C;
                *((void *)&v641[0] + 1) = v463;
                uint64_t v80 = v629;
                sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
                if (!v80)
                {
                  swift_release();
                  *(void *)&v641[0] = sub_1C11E0A4C;
                  *((void *)&v641[0] + 1) = v464;
                  sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
                  swift_release();
                  *(void *)&v641[0] = sub_1C11E0A40;
                  *((void *)&v641[0] + 1) = v467;
                  sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
                  swift_release();
                  *(void *)&v641[0] = sub_1C11E0A4C;
                  *((void *)&v641[0] + 1) = v468;
                  sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
                  swift_release();
                  *(void *)&v641[0] = sub_1C11E0A4C;
                  *((void *)&v641[0] + 1) = v615;
                  sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
                  swift_release();
                  *(void *)&v641[0] = sub_1C11E0A40;
                  *((void *)&v641[0] + 1) = v471;
                  sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
                  v629 = 0;
                  swift_release();
                  _os_log_impl(&dword_1BFC31000, v618, (os_log_type_t)v617, "PuzzleStatsProcessor: %s - adding to completedByPublishedDate: %s", v610, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x1C18C9B00](v476, -1, -1);
                  sub_1C0968FF8();
                }
                goto LABEL_160;
              }
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();

              uint64_t v102 = v636;
              (*v627)(v545, v636);
              uint64_t v80 = v559;
              isa = (void (*)(char *, uint64_t))v559->isa;
              ((void (*)(char *, uint64_t))v559->isa)(v565, v440);
              isa(v571, v440);
              char v104 = (char)v633;
              uint64_t v107 = v634;
              id v137 = v626;
              if ((v630 & 1) == 0)
              {
LABEL_12:
                swift_bridgeObjectRelease();
LABEL_13:

                uint64_t v103 = v620;
                sub_1BFE548F0(v620, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
LABEL_14:
                sub_1C11E058C((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
                goto LABEL_15;
              }
              goto LABEL_132;
            }

            uint64_t v80 = v559;
            v478 = (void (*)(char *, uint64_t))v559->isa;
            ((void (*)(char *, uint64_t))v559->isa)(v565, v440);
            v478(v571, v440);
            uint64_t v107 = v634;
            id v137 = v626;
            char v104 = (char)v633;
          }
          else
          {

            uint64_t v80 = v559;
            v477 = (void (*)(char *, uint64_t))v559->isa;
            ((void (*)(uint64_t, uint64_t))v559->isa)(v453, v440);
            v477(v451, v440);
            uint64_t v107 = v634;
            id v137 = v626;
            os_log_t v144 = v635;
            char v104 = v454;
          }
LABEL_131:
          if ((v630 & 1) == 0) {
            goto LABEL_12;
          }
          goto LABEL_132;
        }
        ((void (*)(char *, uint64_t))v559->isa)(v451, v440);

        sub_1BFE548F0(v452, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        uint64_t v107 = v634;
        id v137 = v626;
        os_log_t v144 = v635;
        uint64_t v102 = v636;
        char v104 = (char)v633;
        if ((v630 & 1) == 0) {
          goto LABEL_12;
        }
      }
LABEL_132:
      uint64_t v479 = sub_1C13ECA9C((uint64_t)v144, (uint64_t)v643);
      if (!v479) {
        uint64_t v479 = sub_1C01B4D28();
      }
      v640[0] = v479;
      sub_1C03D4308((uint64_t *)v641, v611, v621);
      swift_bridgeObjectRelease();
      sub_1C02E7D3C(v640[0], (uint64_t)v144);
      if ((v104 & 1) == 0) {
        goto LABEL_13;
      }
      uint64_t v480 = sub_1C11A501C();
      ((void (*)(char *, uint64_t, uint64_t))*v628)(v583, v480, v102);
      uint64_t v481 = v625;
      sub_1C11E04BC((uint64_t)v107, v625, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      uint64_t v482 = swift_allocObject();
      sub_1C11E0524(v481, v482 + v624, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      uint64_t v80 = swift_allocObject();
      v80[2].isa = (Class)v144;
      os_log_t v635 = (os_log_t)sub_1C15198AC();
      LODWORD(v630) = sub_1C151F38C();
      uint64_t v483 = swift_allocObject();
      *(unsigned char *)(v483 + 16) = 32;
      uint64_t v484 = swift_allocObject();
      *(unsigned char *)(v484 + 16) = 8;
      uint64_t v485 = swift_allocObject();
      *(void *)(v485 + 16) = sub_1C11DF84C;
      *(void *)(v485 + 24) = v482;
      uint64_t v486 = swift_allocObject();
      *(void *)(v486 + 16) = sub_1C11E0A2C;
      *(void *)(v486 + 24) = v485;
      uint64_t v487 = (uint64_t)v107;
      uint64_t v488 = swift_allocObject();
      *(unsigned char *)(v488 + 16) = 0;
      uint64_t v489 = swift_allocObject();
      *(unsigned char *)(v489 + 16) = 8;
      uint64_t v490 = swift_allocObject();
      *(void *)(v490 + 16) = sub_1C11E0A50;
      *(void *)(v490 + 24) = v80;
      uint64_t v491 = swift_allocObject();
      *(void *)(v491 + 16) = sub_1C11DF8A0;
      *(void *)(v491 + 24) = v490;
      sub_1BFEEA21C(0, &qword_1EB863658, (uint64_t (*)(uint64_t))sub_1C11DF680, MEMORY[0x1E4FBBE00]);
      uint64_t v492 = swift_allocObject();
      sub_1C00BC788(v492, 6);
      void *v493 = sub_1C11E0A4C;
      v493[1] = v483;
      v493[2] = sub_1C11E0A4C;
      v493[3] = v484;
      v493[4] = sub_1C11E0A40;
      v493[5] = v486;
      v493[6] = sub_1C11E0A4C;
      v493[7] = v488;
      v493[8] = sub_1C11E0A4C;
      v493[9] = v489;
      v493[10] = sub_1C11DF8D0;
      v493[11] = v491;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v494 = v635;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v494, (os_log_type_t)v630))
      {
        v495 = (uint8_t *)sub_1C0968FB4();
        uint64_t v496 = swift_slowAlloc();
        v638[0] = 0;
        *(_WORD *)v495 = 514;
        v637[0] = v496;
        v639[0] = v495 + 2;
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v483;
        uint64_t v80 = v629;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
        if (!v80)
        {
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v484;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A40;
          *((void *)&v641[0] + 1) = v486;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v488;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11E0A4C;
          *((void *)&v641[0] + 1) = v489;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          swift_release();
          *(void *)&v641[0] = sub_1C11DF8D0;
          *((void *)&v641[0] + 1) = v491;
          sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v639, (uint64_t)v638, (uint64_t)v637);
          v629 = 0;
          swift_release();
          _os_log_impl(&dword_1BFC31000, v635, (os_log_type_t)v630, "PuzzleStatsProcessor: adding %s to startedByLevel - difficulty %lld", v495, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v496, -1, -1);
          sub_1C0968FF8();
        }
        goto LABEL_160;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      uint64_t v102 = v636;
      (*v627)(v583, v636);
      uint64_t v103 = v620;
      sub_1BFE548F0(v620, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1C11E058C(v487, (uint64_t (*)(void))type metadata accessor for PuzzleStatsProcessingData);
      uint64_t v107 = (void *)v487;
      char v104 = (char)v633;
LABEL_15:
      long long v109 = ((char *)&v632->isa + 1);
      if (v631 == (char *)v613)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_1BFDA7F30(&v642, MEMORY[0x1E4F27928], (uint64_t (*)(uint64_t))sub_1BFDA7FF8, (uint64_t (*)(void *))sub_1BFDA8054);
  unint64_t v498 = sub_1BFDA8BEC(v642);
  swift_bridgeObjectRelease();
  if (v548)
  {
    uint64_t v499 = v546;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v499 = 0;
  }
  v500 = sub_1BFDA9870(v498, v499);
  swift_bridgeObjectRelease();
  if (v104)
  {
    os_log_t v635 = v500;
    uint64_t v501 = sub_1C11A501C();
    v502 = *(void (**)(void))(v573 + 16);
    uint64_t v503 = v543;
    v634 = (void *)v501;
    v633 = (void (*)(uint64_t, void *, uint64_t))v502;
    uint64_t v630 = v573 + 16;
    v502(v543);
    uint64_t v504 = swift_allocObject();
    *(void *)(v504 + 16) = v498;
    uint64_t v505 = swift_allocObject();
    *(void *)(v505 + 16) = sub_1C11DF634;
    *(void *)(v505 + 24) = v504;
    v506 = sub_1C15198AC();
    int v507 = sub_1C151F38C();
    uint64_t v508 = swift_allocObject();
    *(unsigned char *)(v508 + 16) = 32;
    uint64_t v509 = swift_allocObject();
    *(unsigned char *)(v509 + 16) = 8;
    uint64_t v510 = swift_allocObject();
    *(void *)(v510 + 16) = sub_1C11DF640;
    *(void *)(v510 + 24) = v505;
    uint64_t v511 = swift_allocObject();
    *(void *)(v511 + 16) = sub_1C11DF670;
    *(void *)(v511 + 24) = v510;
    sub_1BFEEA21C(0, &qword_1EB863658, (uint64_t (*)(uint64_t))sub_1C11DF680, MEMORY[0x1E4FBBE00]);
    v631 = v512;
    uint64_t inited = swift_initStackObject();
    sub_1C00BC788(inited, 3);
    void *v514 = sub_1C11DF658;
    v514[1] = v508;
    v514[2] = sub_1C11E0A4C;
    v514[3] = v509;
    v514[4] = sub_1C11DF678;
    v514[5] = v511;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    LODWORD(v632) = v507;
    if (os_log_type_enabled(v506, (os_log_type_t)v507))
    {
      v515 = (uint8_t *)sub_1C0968FB4();
      uint64_t v516 = swift_slowAlloc();
      v639[0] = 0;
      v638[0] = v516;
      *(_WORD *)v515 = 258;
      v640[0] = (uint64_t)(v515 + 2);
      *(void *)&v641[0] = sub_1C11DF658;
      *((void *)&v641[0] + 1) = v508;
      uint64_t v80 = v629;
      sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
      if (!v80)
      {
        swift_release();
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v509;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        swift_release();
        *(void *)&v641[0] = sub_1C11DF678;
        *((void *)&v641[0] + 1) = v511;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        v629 = 0;
        swift_release();
        _os_log_impl(&dword_1BFC31000, v506, (os_log_type_t)v632, "PuzzleStatsProcessor: incremental streaks %s", v515, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v516, -1, -1);
        sub_1C0968FF8();
      }
      goto LABEL_160;
    }

    swift_release();
    swift_release();
    swift_release();
    uint64_t v517 = v636;
    os_log_t v632 = *(os_log_t *)(v573 + 8);
    ((void (*)(uint64_t, uint64_t))v632)(v503, v636);
    os_log_t v518 = v635;
    uint64_t v519 = v544;
    v633(v544, v634, v517);
    uint64_t v520 = swift_allocObject();
    *(void *)(v520 + 16) = v518;
    uint64_t v521 = swift_allocObject();
    *(void *)(v521 + 16) = sub_1C11E0BDC;
    *(void *)(v521 + 24) = v520;
    swift_bridgeObjectRetain();
    v522 = sub_1C15198AC();
    os_log_type_t v523 = sub_1C151F38C();
    uint64_t v524 = swift_allocObject();
    *(unsigned char *)(v524 + 16) = 32;
    uint64_t v525 = swift_allocObject();
    *(unsigned char *)(v525 + 16) = 8;
    uint64_t v526 = swift_allocObject();
    *(void *)(v526 + 16) = sub_1C11E0A28;
    *(void *)(v526 + 24) = v521;
    uint64_t v527 = swift_allocObject();
    *(void *)(v527 + 16) = sub_1C11E0A2C;
    *(void *)(v527 + 24) = v526;
    uint64_t v528 = swift_initStackObject();
    sub_1C00BC788(v528, 3);
    void *v529 = sub_1C11E0A4C;
    v529[1] = v524;
    v529[2] = sub_1C11E0A4C;
    v529[3] = v525;
    v529[4] = sub_1C11E0A40;
    v529[5] = v527;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v522, v523))
    {
      v530 = (uint8_t *)sub_1C0968FB4();
      uint64_t v531 = swift_slowAlloc();
      v639[0] = 0;
      v638[0] = v531;
      *(_WORD *)v530 = 258;
      v640[0] = (uint64_t)(v530 + 2);
      *(void *)&v641[0] = sub_1C11E0A4C;
      *((void *)&v641[0] + 1) = v524;
      uint64_t v80 = v629;
      sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
      if (!v80)
      {
        swift_release();
        *(void *)&v641[0] = sub_1C11E0A4C;
        *((void *)&v641[0] + 1) = v525;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        swift_release();
        *(void *)&v641[0] = sub_1C11E0A40;
        *((void *)&v641[0] + 1) = v527;
        sub_1C0968FBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v641, (uint64_t)v640, (uint64_t)v639, (uint64_t)v638);
        swift_release();
        _os_log_impl(&dword_1BFC31000, v522, v523, "PuzzleStatsProcessor: combined streaks %s", v530, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v531, -1, -1);
        sub_1C0968FF8();
      }
      goto LABEL_160;
    }

    swift_release();
    swift_release();
    swift_release();
    ((void (*)(uint64_t, uint64_t))v632)(v519, v636);
    v500 = v635;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v532 = (uint64_t)v643;
  uint64_t v533 = v644;
  uint64_t v534 = v570;
  swift_beginAccess();
  uint64_t v535 = *(void *)(v534 + 16);
  uint64_t v536 = v569;
  swift_beginAccess();
  uint64_t v537 = *(void *)(v536 + 16);
  uint64_t v538 = v568;
  swift_beginAccess();
  sub_1C0318E6C(v533, v532, v535, v537, *(void *)(v538 + 16), (uint64_t)v500, v641);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v539 = v641[1];
  long long v540 = v641[2];
  v541 = v549;
  _OWORD *v549 = v641[0];
  v541[1] = v539;
  v541[2] = v540;
}

void *sub_1C11DC678(void *result, void *a2, void *a3, uint64_t *a4)
{
  uint64_t v4 = *a4;
  *unint64_t result = *a3;
  *a2 = *(void *)(v4 + 16);
  return result;
}

uint64_t sub_1C11DC690(uint64_t a1)
{
  int v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFEEA21C(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  sub_1BFF97A80(a1, (uint64_t)&v10 - v4, (unint64_t *)&qword_1EB871180, v2);
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1BFE548F0((uint64_t)v5, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    return 7104878;
  }
  else
  {
    uint64_t v8 = sub_1C15161EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  return v8;
}

uint64_t sub_1C11DC810(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  if (*(void *)(v4 + 16) && (uint64_t v5 = sub_1C107A920(a2), (v6 & 1) != 0)) {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  }
  else {
    uint64_t v7 = 0x7FFFFFFFFFFFFFFFLL;
  }
  swift_endAccess();
  return v7;
}

double sub_1C11DC884(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  if (*(void *)(v4 + 16) && (uint64_t v5 = sub_1C107A920(a2), (v6 & 1) != 0)) {
    double v7 = *(double *)(*(void *)(v4 + 56) + 8 * v5);
  }
  else {
    double v7 = 1.79769313e308;
  }
  swift_endAccess();
  return v7;
}

uint64_t sub_1C11DC904(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  if (*(void *)(v4 + 16) && (uint64_t v5 = sub_1C107A920(a2), (v6 & 1) != 0)) {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  }
  else {
    uint64_t v7 = 0;
  }
  swift_endAccess();
  return v7;
}

uint64_t sub_1C11DC978(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v79 = a3;
  uint64_t v71 = a2;
  char v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEEA21C(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v72 = (char *)&v67 - v8;
  uint64_t v9 = sub_1C151631C();
  uint64_t v73 = *(void *)(v9 - 8);
  uint64_t v74 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA21C(0, (unint64_t *)&qword_1EB871190, MEMORY[0x1E4F27D68], v6);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v67 - v13;
  uint64_t v15 = sub_1C15166BC();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA21C(0, &qword_1EB85C778, MEMORY[0x1E4F27CA0], v6);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v67 - v20;
  sub_1BFEEA21C(0, &qword_1EA1ACCC8, MEMORY[0x1E4F26F90], v6);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v67 - v23;
  uint64_t v25 = sub_1C151586C();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v77 = v25;
  uint64_t v78 = v26;
  MEMORY[0x1F4188790](v25);
  unint64_t v75 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = a1;
  uint64_t v70 = v4;
  sub_1C15161FC();
  if (v28 > 0.0)
  {
    double v29 = v28;
    if (v28 < 86400.0)
    {
      if ((v79 & 1) == 0) {
        return 1;
      }
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1C15198DC();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EB93C7A8);
      uint64_t v31 = sub_1C15198AC();
      os_log_type_t v32 = sub_1C151F38C();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 134217984;
        double v80 = v29;
        sub_1C151FE1C();
        _os_log_impl(&dword_1BFC31000, v31, v32, "PuzzleStatsProcessor: belongsToStreak: true - intervalSincePublishDate: %f", v33, 0xCu);
        MEMORY[0x1C18C9B00](v33, -1, -1);
      }

      return 1;
    }
  }
  sub_1C151666C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1BFE548F0((uint64_t)v14, (unint64_t *)&qword_1EB871190, MEMORY[0x1E4F27D68]);
    uint64_t v35 = sub_1C151661C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v21, 1, 1, v35);
LABEL_13:
    sub_1BFE548F0((uint64_t)v21, &qword_1EB85C778, MEMORY[0x1E4F27CA0]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v24, 1, 1, v77);
LABEL_14:
    uint64_t v38 = &qword_1EA1ACCC8;
    uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26F90];
    uint64_t v40 = (uint64_t)v24;
LABEL_15:
    sub_1BFE548F0(v40, v38, v39);
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1C15198DC();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EB93C7A8);
    uint64_t v42 = sub_1C15198AC();
    os_log_type_t v43 = sub_1C151F36C();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_1BFC31000, v42, v43, "PuzzleStatsProcessor: belongsToStreak failed to determine startOfDay", v44, 2u);
      MEMORY[0x1C18C9B00](v44, -1, -1);
    }

    return 0;
  }
  unint64_t v69 = v11;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  sub_1C15164EC();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v36 = sub_1C151661C();
  uint64_t v37 = *(void *)(v36 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v21, 0, 1, v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v21, 1, v36) == 1) {
    goto LABEL_13;
  }
  sub_1BFEEA21C(0, (unint64_t *)&qword_1EB87A578, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v46 = sub_1C15165FC();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(void *)(v47 + 72);
  unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v68 = 2 * v48;
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1C152C7F0;
  unint64_t v51 = v50 + v49;
  uint64_t v52 = *(void (**)(unint64_t, void, uint64_t))(v47 + 104);
  v52(v51, *MEMORY[0x1E4F27C20], v46);
  v52(v51 + v48, *MEMORY[0x1E4F27C30], v46);
  v52(v51 + v68, *MEMORY[0x1E4F27BF0], v46);
  sub_1C00B78C4(v50);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C151652C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v36);
  uint64_t v54 = v77;
  uint64_t v53 = v78;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v24, 0, 1, v77);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v24, 1, v54) == 1) {
    goto LABEL_14;
  }
  uint64_t v55 = v75;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v75, v24, v54);
  uint64_t v56 = v72;
  sub_1C151657C();
  uint64_t v58 = v73;
  uint64_t v57 = v74;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v56, 1, v74) == 1)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v54);
    uint64_t v38 = (unint64_t *)&qword_1EB871180;
    uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    uint64_t v40 = (uint64_t)v56;
    goto LABEL_15;
  }
  uint64_t v59 = v69;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v69, v56, v57);
  sub_1C15161FC();
  double v61 = v60;
  BOOL v34 = v60 > 0.0 && v60 < 86400.0;
  if (v79)
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_1C15198DC();
    __swift_project_value_buffer(v62, (uint64_t)qword_1EB93C7A8);
    uint64_t v63 = sub_1C15198AC();
    os_log_type_t v64 = sub_1C151F38C();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)uint64_t v65 = 67109376;
      LODWORD(v80) = v34;
      sub_1C151FE1C();
      *(_WORD *)(v65 + 8) = 2048;
      double v80 = v61;
      uint64_t v55 = v75;
      sub_1C151FE1C();
      _os_log_impl(&dword_1BFC31000, v63, v64, "PuzzleStatsProcessor: belongsToStreak: %{BOOL}d - intervalSinceStartOfDay: %f", (uint8_t *)v65, 0x12u);
      uint64_t v66 = v65;
      uint64_t v53 = v78;
      MEMORY[0x1C18C9B00](v66, -1, -1);
    }
  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v54);
  return v34;
}

uint64_t sub_1C11DD4AC(void (*a1)(__n128))
{
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  sub_1BFE0D898((unint64_t *)&qword_1EB871170);
  uint64_t v7 = sub_1C152088C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7;
}

uint64_t sub_1C11DD5C0(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v5);
  uint64_t v1 = v5;
  uint64_t v2 = type metadata accessor for PuzzleStreak();
  uint64_t v3 = MEMORY[0x1C18C6710](v1, v2);
  swift_bridgeObjectRelease();
  return v3;
}

void sub_1C11DD62C(void *a1)
{
  uint64_t v154 = sub_1C151631C();
  uint64_t v3 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154);
  uint64_t v153 = (char *)&v135 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v152 = (char *)&v135 - v6;
  uint64_t v145 = type metadata accessor for PuzzleStreak();
  uint64_t v7 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  uint64_t v139 = (uint64_t)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v156 = (uint64_t)&v135 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v151 = (uint64_t)&v135 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v150 = (uint64_t)&v135 - v14;
  uint64_t v15 = a1[1];
  uint64_t v16 = sub_1C152086C();
  if (v16 >= v15)
  {
    if (v15 < 0) {
      goto LABEL_141;
    }
    if (v15) {
      sub_1C11DE2B4(0, v15, 1, a1);
    }
    return;
  }
  if (v15 >= 0) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = v15 + 1;
  }
  if (v15 < -1) {
    goto LABEL_149;
  }
  uint64_t v18 = v16;
  uint64_t v143 = v7;
  uint64_t v144 = v1;
  if (v15 < 2)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    unint64_t v142 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    if (v15 != 1)
    {
      unint64_t v25 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v24 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v127 = v24;
      if (v25 >= 2)
      {
        uint64_t v128 = *a1;
        uint64_t v136 = v22;
        do
        {
          unint64_t v129 = v25 - 2;
          if (v25 < 2) {
            goto LABEL_136;
          }
          if (!v128) {
            goto LABEL_148;
          }
          uint64_t v130 = *(void *)&v127[16 * v129 + 32];
          uint64_t v131 = *(void *)&v127[16 * v25 + 24];
          uint64_t v132 = v144;
          sub_1C11DE974(v128 + *(void *)(v143 + 72) * v130, v128 + *(void *)(v143 + 72) * *(void *)&v127[16 * v25 + 16], v128 + *(void *)(v143 + 72) * v131, v142);
          uint64_t v144 = v132;
          if (v132) {
            goto LABEL_115;
          }
          if (v131 < v130) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v127 = sub_1C063604C((uint64_t)v127);
          }
          if (v129 >= *((void *)v127 + 2)) {
            goto LABEL_138;
          }
          uint64_t v133 = &v127[16 * v129 + 32];
          *(void *)uint64_t v133 = v130;
          *((void *)v133 + 1) = v131;
          unint64_t v134 = *((void *)v127 + 2);
          if (v25 > v134) {
            goto LABEL_139;
          }
          memmove(&v127[16 * v25 + 16], &v127[16 * v25 + 32], 16 * (v134 - v25));
          *((void *)v127 + 2) = v134 - 1;
          unint64_t v25 = v134 - 1;
          uint64_t v22 = v136;
        }
        while (v134 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v22 + 16) = 0;
LABEL_117:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v136 = MEMORY[0x1E4FBC860];
    uint64_t v18 = v16;
  }
  else
  {
    uint64_t v19 = v17 >> 1;
    uint64_t v20 = sub_1C151ECCC();
    *(void *)(v20 + 16) = v19;
    unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v136 = v20;
    unint64_t v142 = v20 + v21;
  }
  uint64_t v23 = 0;
  uint64_t v149 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v24 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v141 = a1;
  uint64_t v137 = v18;
  while (1)
  {
    uint64_t v26 = v23;
    uint64_t v27 = v23 + 1;
    uint64_t v140 = v23;
    if (v23 + 1 < v15)
    {
      uint64_t v28 = *a1;
      uint64_t v29 = *(void *)(v143 + 72);
      uint64_t v155 = v23 + 1;
      uint64_t v30 = v28 + v29 * v27;
      uint64_t v31 = v29;
      uint64_t v159 = v29;
      uint64_t v32 = v28;
      uint64_t v138 = v28;
      uint64_t v160 = type metadata accessor for PuzzleStreak;
      uint64_t v33 = v150;
      sub_1C11E04BC(v30, v150, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v34 = v32 + v31 * v23;
      uint64_t v35 = v151;
      sub_1C11E04BC(v34, v151, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v158 = v15;
      uint64_t v36 = v152;
      sub_1C151552C();
      uint64_t v37 = v153;
      sub_1C151552C();
      LODWORD(v157) = sub_1C151623C();
      uint64_t v38 = *v149;
      uint64_t v39 = v154;
      (*v149)(v37, v154);
      uint64_t v40 = v36;
      uint64_t v15 = v158;
      uint64_t v148 = v38;
      v38(v40, v39);
      uint64_t v26 = v140;
      uint64_t v41 = v160;
      sub_1C11E058C(v35, (uint64_t (*)(void))v160);
      sub_1C11E058C(v33, (uint64_t (*)(void))v41);
      uint64_t v27 = v26 + 2;
      if (v26 + 2 < v15)
      {
        uint64_t v135 = v24;
        uint64_t v42 = v138;
        uint64_t v146 = v159 * v27;
        uint64_t v147 = v159 * v155;
        while (1)
        {
          uint64_t v155 = v27;
          uint64_t v43 = v150;
          sub_1C11E04BC(v42 + v146, v150, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          uint64_t v44 = v151;
          sub_1C11E04BC(v42 + v147, v151, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          uint64_t v45 = v152;
          sub_1C151552C();
          uint64_t v46 = v153;
          sub_1C151552C();
          LODWORD(v160) = sub_1C151623C();
          uint64_t v47 = v46;
          uint64_t v48 = v154;
          unint64_t v49 = v148;
          v148(v47, v154);
          v49(v45, v48);
          sub_1C11E058C(v44, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          sub_1C11E058C(v43, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          if ((v157 ^ v160)) {
            break;
          }
          uint64_t v27 = v155 + 1;
          uint64_t v15 = v158;
          v42 += v159;
          if (v158 == v155 + 1)
          {
            uint64_t v27 = v158;
            uint64_t v24 = v135;
            uint64_t v26 = v140;
            goto LABEL_23;
          }
        }
        uint64_t v24 = v135;
        uint64_t v27 = v155;
        uint64_t v26 = v140;
        uint64_t v15 = v158;
      }
LABEL_23:
      uint64_t v18 = v137;
      if (v157)
      {
        uint64_t v50 = v159;
        if (v27 < v26) {
          goto LABEL_142;
        }
        if (v26 < v27)
        {
          uint64_t v135 = v24;
          uint64_t v51 = 0;
          uint64_t v52 = v159 * (v27 - 1);
          uint64_t v53 = v27 * v159;
          uint64_t v54 = v26;
          uint64_t v55 = v26 * v159;
          do
          {
            if (v54 != v27 + v51 - 1)
            {
              uint64_t v56 = v138;
              if (!v138) {
                goto LABEL_147;
              }
              unint64_t v57 = v138 + v55;
              uint64_t v58 = v138 + v52;
              sub_1C11E0524(v138 + v55, v139, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
              if (v55 < v52 || v57 >= v56 + v53)
              {
                swift_arrayInitWithTakeFrontToBack();
                uint64_t v50 = v159;
              }
              else
              {
                uint64_t v50 = v159;
                if (v55 != v52) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_1C11E0524(v139, v58, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
              uint64_t v26 = v140;
            }
            ++v54;
            --v51;
            v52 -= v50;
            v53 -= v50;
            v55 += v50;
          }
          while (v54 < v27 + v51);
          a1 = v141;
          uint64_t v24 = v135;
          uint64_t v18 = v137;
          uint64_t v15 = v158;
        }
      }
    }
    if (v27 >= v15) {
      goto LABEL_55;
    }
    if (__OFSUB__(v27, v26)) {
      goto LABEL_140;
    }
    if (v27 - v26 >= v18) {
      goto LABEL_55;
    }
    if (__OFADD__(v26, v18)) {
      goto LABEL_143;
    }
    uint64_t v59 = v26 + v18 >= v15 ? v15 : v26 + v18;
    if (v59 < v26) {
      break;
    }
    if (v27 != v59)
    {
      uint64_t v135 = v24;
      uint64_t v60 = *(void *)(v143 + 72);
      uint64_t v61 = v60 * (v27 - 1);
      uint64_t v146 = v60;
      uint64_t v62 = v27 * v60;
      uint64_t v138 = v59;
      do
      {
        uint64_t v64 = 0;
        uint64_t v155 = v27;
        uint64_t v147 = v62;
        uint64_t v148 = (void (*)(char *, uint64_t))v61;
        while (1)
        {
          uint64_t v65 = *a1;
          uint64_t v158 = v62 + v64;
          uint64_t v159 = v26;
          uint64_t v66 = v150;
          sub_1C11E04BC(v62 + v64 + v65, v150, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          uint64_t v157 = v61 + v64;
          uint64_t v67 = v61 + v64 + v65;
          uint64_t v68 = v151;
          sub_1C11E04BC(v67, v151, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          unint64_t v69 = v152;
          sub_1C151552C();
          uint64_t v70 = v153;
          sub_1C151552C();
          LODWORD(v160) = sub_1C151623C();
          uint64_t v71 = *v149;
          unint64_t v72 = v70;
          uint64_t v73 = v154;
          (*v149)(v72, v154);
          v71(v69, v73);
          sub_1C11E058C(v68, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          sub_1C11E058C(v66, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          if ((v160 & 1) == 0) {
            break;
          }
          uint64_t v74 = *a1;
          if (!*a1) {
            goto LABEL_145;
          }
          uint64_t v62 = v147;
          uint64_t v61 = (uint64_t)v148;
          uint64_t v75 = (uint64_t)v148 + v74 + v64;
          sub_1C11E0524(v74 + v147 + v64, v156, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C11E0524(v156, v75, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          v64 -= v146;
          uint64_t v26 = v159 + 1;
          uint64_t v63 = v155;
          if (v155 == v159 + 1) {
            goto LABEL_48;
          }
        }
        uint64_t v63 = v155;
        uint64_t v62 = v147;
        uint64_t v61 = (uint64_t)v148;
LABEL_48:
        uint64_t v27 = v63 + 1;
        v61 += v146;
        v62 += v146;
        uint64_t v26 = v140;
      }
      while (v27 != v138);
      uint64_t v27 = v138;
      uint64_t v24 = v135;
    }
LABEL_55:
    if (v27 < v26) {
      goto LABEL_135;
    }
    uint64_t v23 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_1C0634CC8(0, *((void *)v24 + 2) + 1, 1, v24);
    }
    unint64_t v77 = *((void *)v24 + 2);
    unint64_t v76 = *((void *)v24 + 3);
    unint64_t v25 = v77 + 1;
    if (v77 >= v76 >> 1) {
      uint64_t v24 = sub_1C0634CC8((char *)(v76 > 1), v77 + 1, 1, v24);
    }
    *((void *)v24 + 2) = v25;
    uint64_t v78 = v24 + 32;
    int v79 = &v24[16 * v77 + 32];
    *(void *)int v79 = v26;
    *((void *)v79 + 1) = v23;
    if (v77)
    {
      while (1)
      {
        unint64_t v80 = v25 - 1;
        if (v25 >= 4)
        {
          uint64_t v85 = &v78[16 * v25];
          uint64_t v86 = *((void *)v85 - 8);
          uint64_t v87 = *((void *)v85 - 7);
          BOOL v91 = __OFSUB__(v87, v86);
          uint64_t v88 = v87 - v86;
          if (v91) {
            goto LABEL_124;
          }
          uint64_t v90 = *((void *)v85 - 6);
          uint64_t v89 = *((void *)v85 - 5);
          BOOL v91 = __OFSUB__(v89, v90);
          uint64_t v83 = v89 - v90;
          char v84 = v91;
          if (v91) {
            goto LABEL_125;
          }
          unint64_t v92 = v25 - 2;
          uint64_t v93 = &v78[16 * v25 - 32];
          uint64_t v95 = *(void *)v93;
          uint64_t v94 = *((void *)v93 + 1);
          BOOL v91 = __OFSUB__(v94, v95);
          uint64_t v96 = v94 - v95;
          if (v91) {
            goto LABEL_127;
          }
          BOOL v91 = __OFADD__(v83, v96);
          uint64_t v97 = v83 + v96;
          if (v91) {
            goto LABEL_130;
          }
          if (v97 >= v88)
          {
            uint64_t v115 = &v78[16 * v80];
            uint64_t v117 = *(void *)v115;
            uint64_t v116 = *((void *)v115 + 1);
            BOOL v91 = __OFSUB__(v116, v117);
            uint64_t v118 = v116 - v117;
            if (v91) {
              goto LABEL_134;
            }
            BOOL v108 = v83 < v118;
            goto LABEL_92;
          }
        }
        else
        {
          if (v25 != 3)
          {
            uint64_t v109 = *((void *)v24 + 4);
            uint64_t v110 = *((void *)v24 + 5);
            BOOL v91 = __OFSUB__(v110, v109);
            uint64_t v102 = v110 - v109;
            char v103 = v91;
            goto LABEL_86;
          }
          uint64_t v82 = *((void *)v24 + 4);
          uint64_t v81 = *((void *)v24 + 5);
          BOOL v91 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          char v84 = v91;
        }
        if (v84) {
          goto LABEL_126;
        }
        unint64_t v92 = v25 - 2;
        uint64_t v98 = &v78[16 * v25 - 32];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v101 = __OFSUB__(v99, v100);
        uint64_t v102 = v99 - v100;
        char v103 = v101;
        if (v101) {
          goto LABEL_129;
        }
        char v104 = &v78[16 * v80];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v91 = __OFSUB__(v105, v106);
        uint64_t v107 = v105 - v106;
        if (v91) {
          goto LABEL_132;
        }
        if (__OFADD__(v102, v107)) {
          goto LABEL_133;
        }
        if (v102 + v107 >= v83)
        {
          BOOL v108 = v83 < v107;
LABEL_92:
          if (v108) {
            unint64_t v80 = v92;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v103) {
          goto LABEL_128;
        }
        uint64_t v111 = &v78[16 * v80];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v91 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v91) {
          goto LABEL_131;
        }
        if (v114 < v102) {
          goto LABEL_15;
        }
LABEL_94:
        unint64_t v119 = v80 - 1;
        if (v80 - 1 >= v25)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v141) {
          goto LABEL_146;
        }
        uint64_t v120 = v24;
        uint64_t v121 = &v78[16 * v119];
        uint64_t v122 = *(void *)v121;
        id v123 = &v78[16 * v80];
        uint64_t v124 = *((void *)v123 + 1);
        uint64_t v125 = v144;
        sub_1C11DE974(*v141 + *(void *)(v143 + 72) * *(void *)v121, *v141 + *(void *)(v143 + 72) * *(void *)v123, *v141 + *(void *)(v143 + 72) * v124, v142);
        uint64_t v144 = v125;
        if (v125)
        {
LABEL_115:
          swift_bridgeObjectRelease();
          *(void *)(v136 + 16) = 0;
          goto LABEL_117;
        }
        if (v124 < v122) {
          goto LABEL_121;
        }
        if (v80 > *((void *)v120 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v121 = v122;
        *(void *)&v78[16 * v119 + 8] = v124;
        unint64_t v126 = *((void *)v120 + 2);
        if (v80 >= v126) {
          goto LABEL_123;
        }
        uint64_t v24 = v120;
        unint64_t v25 = v126 - 1;
        memmove(&v78[16 * v80], v123 + 16, 16 * (v126 - 1 - v80));
        *((void *)v120 + 2) = v126 - 1;
        if (v126 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v25 = 1;
LABEL_15:
    a1 = v141;
    uint64_t v15 = v141[1];
    uint64_t v18 = v137;
    if (v23 >= v15)
    {
      uint64_t v22 = v136;
      goto LABEL_103;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  sub_1C15203FC();
  __break(1u);
}

void sub_1C11DE2B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v35 = a1;
  uint64_t v42 = sub_1C151631C();
  uint64_t v7 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v40 = (char *)&v33 - v10;
  uint64_t v36 = type metadata accessor for PuzzleStreak();
  MEMORY[0x1F4188790](v36);
  uint64_t v47 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v39 = (char *)&v33 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v38 = (char *)&v33 - v16;
  uint64_t v46 = a3;
  uint64_t v34 = a2;
  if (a3 != a2)
  {
    uint64_t v17 = *(void *)(v15 + 72);
    uint64_t v37 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v18 = v17 * (v46 - 1);
    uint64_t v43 = v17;
    uint64_t v19 = v17 * v46;
    uint64_t v20 = (uint64_t)v38;
    uint64_t v21 = (uint64_t)v39;
    uint64_t v22 = v40;
LABEL_5:
    uint64_t v23 = 0;
    uint64_t v50 = v35;
    uint64_t v44 = v19;
    uint64_t v45 = v18;
    while (1)
    {
      uint64_t v24 = *a4;
      uint64_t v49 = v19 + v23;
      sub_1C11E04BC(v19 + v23 + v24, v20, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v48 = v18 + v23;
      sub_1C11E04BC(v18 + v23 + v24, v21, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      sub_1C151552C();
      unint64_t v25 = v41;
      sub_1C151552C();
      int v51 = sub_1C151623C();
      uint64_t v26 = a4;
      uint64_t v27 = *v37;
      uint64_t v28 = v25;
      uint64_t v29 = v42;
      (*v37)(v28, v42);
      uint64_t v30 = v29;
      uint64_t v19 = v44;
      v27(v22, v30);
      a4 = v26;
      uint64_t v18 = v45;
      sub_1C11E058C(v21, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      sub_1C11E058C(v20, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      if ((v51 & 1) == 0)
      {
LABEL_4:
        v18 += v43;
        v19 += v43;
        if (++v46 == v34) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v31 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v32 = v31 + v18 + v23;
      sub_1C11E0524(v31 + v19 + v23, v47, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C11E0524(v47, v32, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      v23 -= v43;
      if (v46 == ++v50) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

void sub_1C11DE668(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_1C151631C();
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v37 = (char *)&v29 - v10;
  __n128 v13 = MEMORY[0x1F4188790](v11);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void, __n128))(v12 + 16);
    uint64_t v15 = v12 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v32 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = (void (*)(char *, uint64_t, uint64_t))v16;
    uint64_t v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      uint64_t v21 = v36;
      uint64_t v22 = v33;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v33)(v36, v20, v7, v13);
      uint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_1BFE0D898((unint64_t *)&qword_1EB870780);
      LOBYTE(v22) = sub_1C151E57C();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      unint64_t v25 = v21;
      a4 = v34;
      v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = (char *)(v26 + v44 + v18);
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      v28(v27, (uint64_t)v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C11DE974(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v69 = sub_1C151631C();
  uint64_t v8 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v66 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v68 = (char *)&v56 - v11;
  uint64_t v62 = type metadata accessor for PuzzleStreak();
  MEMORY[0x1F4188790](v62);
  uint64_t v67 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v65 = (uint64_t)&v56 - v14;
  uint64_t v16 = *(void *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_61;
  }
  int64_t v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_62;
  }
  uint64_t v18 = (uint64_t)(a2 - a1) / v16;
  unint64_t v72 = a1;
  unint64_t v71 = a4;
  uint64_t v19 = v17 / v16;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      uint64_t v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v38 = a4 + v21;
      unint64_t v70 = a4 + v21;
      unint64_t v72 = a2;
      if (v21 >= 1 && a1 < a2)
      {
        uint64_t v40 = -v16;
        uint64_t v58 = (void (**)(char *, uint64_t))(v8 + 8);
        unint64_t v59 = a1;
        unint64_t v60 = a4;
        uint64_t v57 = v40;
        uint64_t v41 = v68;
        do
        {
          unint64_t v64 = a3 + v40;
          uint64_t v42 = v65;
          sub_1C11E04BC(v38 + v40, v65, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          uint64_t v43 = a2 + v40;
          unint64_t v61 = a2 + v40;
          uint64_t v44 = v67;
          sub_1C11E04BC(v43, v67, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          sub_1C151552C();
          uint64_t v45 = v66;
          sub_1C151552C();
          LODWORD(v63) = sub_1C151623C();
          unint64_t v46 = a2;
          unint64_t v47 = a3;
          uint64_t v48 = *v58;
          uint64_t v49 = v45;
          uint64_t v50 = v69;
          (*v58)(v49, v69);
          v48(v41, v50);
          sub_1C11E058C(v44, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          sub_1C11E058C(v42, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          if (v63)
          {
            uint64_t v40 = v57;
            a3 = v64;
            if (v47 < v46 || v64 >= v46)
            {
              unint64_t v46 = v61;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v53 = v59;
              unint64_t v52 = v60;
            }
            else
            {
              BOOL v51 = v47 == v46;
              unint64_t v53 = v59;
              unint64_t v52 = v60;
              unint64_t v46 = v61;
              if (!v51) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v72 += v40;
          }
          else
          {
            unint64_t v54 = v70;
            v70 += v57;
            uint64_t v40 = v57;
            a3 = v64;
            if (v47 < v54 || v64 >= v54)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v53 = v59;
              unint64_t v52 = v60;
            }
            else
            {
              unint64_t v53 = v59;
              unint64_t v52 = v60;
              if (v47 != v54) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          unint64_t v38 = v70;
          if (v70 <= v52) {
            break;
          }
          a2 = v46;
        }
        while (v46 > v53);
      }
      goto LABEL_59;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v64 = a4 + v20;
    unint64_t v70 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      unint64_t v61 = v8 + 8;
      unint64_t v63 = a3;
      uint64_t v58 = (void (**)(char *, uint64_t))v16;
      uint64_t v23 = v65;
      uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
      do
      {
        sub_1C11E04BC(a2, v23, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        uint64_t v25 = a4;
        uint64_t v26 = v67;
        sub_1C11E04BC(v25, v67, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        uint64_t v27 = v68;
        sub_1C151552C();
        uint64_t v28 = v66;
        sub_1C151552C();
        char v29 = sub_1C151623C();
        uint64_t v30 = *v24;
        uint64_t v31 = v28;
        uint64_t v32 = v69;
        (*v24)(v31, v69);
        v30(v27, v32);
        sub_1C11E058C(v26, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        sub_1C11E058C(v23, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        unint64_t v33 = v72;
        if (v29)
        {
          uint64_t v34 = v58;
          unint64_t v35 = (unint64_t)v58 + a2;
          if (v72 < a2 || v72 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v36 = v63;
          }
          else
          {
            unint64_t v36 = v63;
            if (v72 == a2) {
              unint64_t v33 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v34 = v58;
          unint64_t v37 = (unint64_t)v58 + v71;
          if (v72 < v71 || v72 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v36 = v63;
          }
          else
          {
            unint64_t v36 = v63;
            if (v72 != v71) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v71 = v37;
          unint64_t v35 = a2;
        }
        unint64_t v72 = (unint64_t)v34 + v33;
        a4 = v71;
        if (v71 >= v64) {
          break;
        }
        a2 = v35;
      }
      while (v35 < v36);
    }
LABEL_59:
    sub_1C0635984(&v72, &v71, (uint64_t *)&v70);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C11DEFF4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v57 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v56 = (char *)v50 - v12;
  uint64_t v58 = *(void *)(v13 + 72);
  if (!v58)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v58 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v58 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v58;
  unint64_t v61 = a1;
  unint64_t v60 = a4;
  uint64_t v16 = v14 / v58;
  if (v15 >= v14 / v58)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v58;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v59 = a4 + v18;
      unint64_t v61 = a2;
      unint64_t v53 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v58;
        unint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v50[1] = v37 - 8;
        BOOL v51 = v38;
        unint64_t v54 = -v58;
        uint64_t v55 = v37;
        unint64_t v52 = a4;
        uint64_t v39 = v56;
        uint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v58 = a3 + v36;
          uint64_t v41 = v51;
          v51(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v57;
          v41(v57, v42, v8);
          sub_1BFE0D898((unint64_t *)&qword_1EB870780);
          LOBYTE(v41) = sub_1C151E57C();
          uint64_t v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v58;
            if (v43 < a2 || v58 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v52;
            }
            else
            {
              unint64_t v46 = v52;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v54;
            v61 += v54;
          }
          else
          {
            a3 = v58;
            unint64_t v47 = v59;
            v59 += v54;
            if (v43 < v47 || v58 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v54;
              unint64_t v46 = v52;
            }
            else
            {
              unint64_t v46 = v52;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v54;
            }
          }
          unint64_t v34 = v59;
          if (v59 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v53);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v58;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v54 = a4 + v17;
    unint64_t v59 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v55 = v9 + 16;
      uint64_t v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v56;
        v21(v56, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v57;
        v21(v57, v25, v8);
        sub_1BFE0D898((unint64_t *)&qword_1EB870780);
        char v27 = sub_1C151E57C();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v61;
        if (v27)
        {
          unint64_t v30 = a2 + v58;
          if (v61 < a2 || v61 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v61 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v60 + v58;
          if (v61 < v60 || v61 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v61 != v60) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v60 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v61 = v29 + v58;
        a4 = v60;
        if (v60 >= v54) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_69:
    sub_1C063599C(&v61, &v60, (uint64_t *)&v59);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C11DF5FC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C11DF634@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11DF640()
{
  return sub_1C11DD5C0(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_1C11DF648()
{
  return swift_deallocObject();
}

unsigned char **sub_1C11DF658(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0969424(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_1C11DF660()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF670()
{
  return sub_1C0969004(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C11DF678(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C096902C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

unint64_t sub_1C11DF680()
{
  unint64_t result = qword_1EB863668;
  if (!qword_1EB863668)
  {
    sub_1C11DF7E0(255, &qword_1EB861478);
    sub_1BFEEA21C(255, &qword_1EB8633D8, (uint64_t (*)(uint64_t))sub_1C11DF740, MEMORY[0x1E4FBB718]);
    sub_1C11DF774();
    unint64_t result = swift_getFunctionTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB863668);
  }
  return result;
}

void sub_1C11DF740(uint64_t a1)
{
}

void sub_1C11DF774()
{
  if (!qword_1EB8633E8)
  {
    sub_1C11DF7E0(255, &qword_1EB8633E0);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8633E8);
    }
  }
}

void sub_1C11DF7E0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C151FD6C();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C11DF828()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF838()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF850()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF860()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF870()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF880()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF890()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF8A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1C11DF8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0396390(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1C11DF8DC()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF8EC()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF8FC()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF90C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C11DF944()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF954()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DF964()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1C11DF990()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C11DF9B8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1C11DF9E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0396394(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_1C11DF9F4()
{
  uint64_t v1 = sub_1C151631C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C11DFA84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return v5(a1, v6, v3);
}

uint64_t sub_1C11DFAF8()
{
  return sub_1C11DD4AC(*(void (**)(__n128))(v0 + 16));
}

uint64_t sub_1C11DFB00()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFB10()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFB20()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFB30()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFB44()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFB54()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFB64()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFB74()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFB84()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFB94@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0396454(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1C11DFB9C()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFBAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C11DFBE4()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFBF4()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFC04()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFC14()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFC24()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFC34()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFC44()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFC54()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFC64()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFC78()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFC88()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFC98()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFCA8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFCB8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFCC8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFCD8()
{
  return sub_1C11DC810(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C11DFCE0()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFCF0()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFD00()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFD10()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFD20()
{
  return swift_deallocObject();
}

double sub_1C11DFD30()
{
  return sub_1C11DC884(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C11DFD38()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFD48()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFD58()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFD68()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFD78()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C11DFDA0(uint64_t *a1)
{
  (*(void (**)(void))(v1 + 16))();
  uint64_t v3 = *a1 + 8;
  uint64_t result = sub_1C151FE1C();
  *a1 = v3;
  return result;
}

uint64_t sub_1C11DFDF8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFE08()
{
  return sub_1C11DC904(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C11DFE24()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFE34()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFE44()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFE54()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFE68()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFE78()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFE88()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFE98()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFEA8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFEBC()
{
  return swift_deallocObject();
}

uint64_t sub_1C11DFECC()
{
  sub_1BFEEA21C(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  return swift_deallocObject();
}

uint64_t sub_1C11E0018()
{
  sub_1BFEEA21C(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  return sub_1C11DC690(v2);
}

uint64_t sub_1C11E00A8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E00B8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E00C8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E00D8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E00E8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E00F8()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E010C()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E011C()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1C11E0124()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E0134()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E0144()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E0154()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E0164()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E0174()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E0184()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E0194()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E01A4()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E01B4()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E01C4()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E01D4()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E01E4()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_52Tm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for PuzzleStatsProcessingData() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[8];
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_1C11E0328()
{
  uint64_t v1 = *(void *)(type metadata accessor for PuzzleStatsProcessingData() - 8);
  uint64_t v2 = *(void *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C11E0394()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E03A4()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E03BC@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11E0404()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  uint64_t v1 = sub_1C151E34C();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C11E047C()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E048C()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E049C()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E04AC()
{
  return swift_deallocObject();
}

uint64_t sub_1C11E04BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C11E0524(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C11E058C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C11E05EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151661C();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1C11E0658(uint64_t a1)
{
  uint64_t v2 = sub_1C151661C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1C11E06BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151661C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C11E0720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151661C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C11E0784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151661C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C11E07E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151661C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C11E084C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11E0860);
}

uint64_t sub_1C11E0860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151661C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C11E08CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11E08E0);
}

uint64_t sub_1C11E08E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151661C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PuzzleStatsProcessorContext()
{
  uint64_t result = qword_1EB86D2B8;
  if (!qword_1EB86D2B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C11E099C()
{
  uint64_t result = sub_1C151661C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1C11E0A58(void *a1, void *a2, void *a3, uint64_t *a4)
{
  return sub_1C11DC678(a1, a2, a3, a4);
}

id sub_1C11E0BE8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed24ClearSavedCommandHandler_readingList], sel_removeObserver_, v0);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C11E0D18()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

uint64_t sub_1C11E0E24()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

void sub_1C11E0F60()
{
}

void sub_1C11E1074()
{
  id v1 = v0;
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC8NewsFeed24ClearSavedCommandHandler_sceneProvider], *(void *)&v0[OBJC_IVAR____TtC8NewsFeed24ClearSavedCommandHandler_sceneProvider + 24]);
  uint64_t v2 = (void *)sub_1C151AE2C();
  if (v2)
  {
    objc_super v3 = v2;
    id v4 = objc_msgSend(v2, sel_rootViewController);

    if (v4)
    {
      id v5 = objc_msgSend(v4, sel_traitCollection);
      id v6 = objc_msgSend(v5, sel_horizontalSizeClass);

      BOOL v7 = v6 != (id)1;
      sub_1C11E0D18();
      uint64_t v8 = sub_1C11E0E24();
      unint64_t v10 = v9;
      uint64_t v11 = HIBYTE(v9) & 0xF;
      if ((v9 & 0x2000000000000000) == 0) {
        uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
      }
      if (!v11)
      {
        swift_bridgeObjectRelease();
        unint64_t v10 = 0;
      }
      uint64_t v12 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      if (v10)
      {
        uint64_t v13 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v13 = 0;
      }
      id v14 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v12, v13, v7);

      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      uint64_t v16 = self;
      id v17 = objc_msgSend(v16, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1C1515B8C();

      uint64_t v18 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      uint64_t v19 = self;
      id v20 = objc_msgSend(v19, sel_actionWithTitle_style_handler_, v18, 1, 0, 0x80000001C1636FD0);

      objc_msgSend(v14, sel_addAction_, v20);
      id v21 = objc_msgSend(v16, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1C1515B8C();

      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v1;
      id v23 = v1;
      uint64_t v24 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_1C11E14B4;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BFD34E78;
      aBlock[3] = &block_descriptor_93;
      unint64_t v25 = _Block_copy(aBlock);
      swift_release();
      id v26 = objc_msgSend(v19, sel_actionWithTitle_style_handler_, v24, 0, v25, 0x80000001C1637010);
      _Block_release(v25);

      objc_msgSend(v14, sel_addAction_, v26);
      objc_msgSend(v4, sel_presentViewController_animated_completion_, v14, 1, 0);
    }
  }
}

uint64_t sub_1C11E147C()
{
  return swift_deallocObject();
}

id sub_1C11E14B4()
{
  return objc_msgSend(*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed24ClearSavedCommandHandler_readingList), sel_clearArticlesFromReadingList);
}

uint64_t FeedMode.selectors.getter()
{
  if (*v0) {
    id v1 = &unk_1F1B65190;
  }
  else {
    id v1 = &unk_1F1B65160;
  }
  uint64_t v2 = sub_1C00B818C((uint64_t)v1);
  swift_arrayDestroy();
  return v2;
}

void *static FeedMode.allCases.getter()
{
  return &unk_1F1B8A418;
}

uint64_t FeedMode.rawValue.getter()
{
  if (*v0) {
    return 0x656E696C66666FLL;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_1C11E1574()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11E15EC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11E1648()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11E16BC(uint64_t a1)
{
  unint64_t v2 = sub_1C0086344();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C11E1710(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0086344();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C11E176C(uint64_t a1)
{
  unint64_t v2 = sub_1C0086344();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

void sub_1C11E17C0(void *a1@<X8>)
{
  *a1 = &unk_1F1B69418;
}

uint64_t sub_1C11E17D0()
{
  return sub_1C151EAEC();
}

void FeedModeState.feedMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1 & 1;
}

BOOL FeedModeState.isNotDesired.getter()
{
  return (*v0 & 0xC0) == 64;
}

unint64_t sub_1C11E1858()
{
  unint64_t result = qword_1EA1ACD58;
  if (!qword_1EA1ACD58)
  {
    sub_1C11E18B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACD58);
  }
  return result;
}

void sub_1C11E18B0()
{
  if (!qword_1EA1ACD60)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ACD60);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FeedModeState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 131 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 131) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7D) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7C)
  {
    unsigned int v6 = ((a2 - 125) >> 8) + 1;
    *unint64_t result = a2 - 125;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11E1A08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

void sub_1C11E1B08()
{
  uint64_t v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_navigationItem);
  int v3 = (void *)sub_1C151E5EC();
  objc_msgSend(v2, sel_setTitle_, v3);

  id v4 = objc_msgSend(v1, sel_navigationItem);
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_secondarySystemBackgroundColor);
  sub_1C149EA4C(v4, (uint64_t)v6);

  BOOL v7 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatErrorViewController_tableView];
  sub_1C11E22E4();
  sub_1C151F26C();
  objc_msgSend(v7, sel_setDataSource_, v1);
  objc_msgSend(v7, sel_setDelegate_, v1);
  objc_msgSend(v7, sel_setAllowsSelection_, 0);
  objc_msgSend(v7, sel_setAlwaysBounceVertical_, 1);
  id v8 = objc_msgSend(v5, sel_secondarySystemBackgroundColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v8);

  id v9 = objc_msgSend(v1, sel_view);
  if (v9)
  {
    unint64_t v10 = v9;
    objc_msgSend(v9, sel_addSubview_, v7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for DebugFormatErrorViewController()
{
  return self;
}

unint64_t sub_1C11E1F20()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed30DebugFormatErrorViewController_errorModel + 8);
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (result >= *(void *)(v1 + 16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)(v1 + 24 * result + 48);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (result >= *(void *)(v3 + 16))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1C11E22E4();
  id v4 = (void *)sub_1C151F24C();
  id v5 = objc_msgSend(v4, sel_textLabel);
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = sub_1C0B8495C(1000);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C6220](v7, v9, v11, v13);
    swift_bridgeObjectRelease();
    id v14 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setText_, v14);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v15 = objc_msgSend(v4, sel_textLabel);
  if (v15)
  {
    uint64_t v16 = v15;
    objc_msgSend(v15, sel_setNumberOfLines_, 0);
  }
  id v17 = objc_msgSend(v4, sel_textLabel);
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = objc_msgSend(self, sel_monospacedSystemFontOfSize_weight_, 14.0, *MEMORY[0x1E4FB09D0]);
    objc_msgSend(v18, sel_setFont_, v19);
  }
  swift_bridgeObjectRelease();
  return (unint64_t)v4;
}

unint64_t sub_1C11E22E4()
{
  unint64_t result = qword_1EA1A17E0;
  if (!qword_1EA1A17E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A17E0);
  }
  return result;
}

id sub_1C11E2324(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed30DebugFormatErrorViewController_tableView;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed30DebugFormatErrorViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)&v11[v12] = v13;
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed30DebugFormatErrorViewController_editor] = a1;
  id v14 = &v11[OBJC_IVAR____TtC8NewsFeed30DebugFormatErrorViewController_errorModel];
  *(void *)id v14 = a2;
  *((void *)v14 + 1) = a3;
  swift_retain();
  id v15 = a2;
  swift_bridgeObjectRetain();

  v17.receiver = v11;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1C11E243C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    swift_beginAccess();
    *(void *)(v1 + 24) = MEMORY[0x1E4FBC870];
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C11E256C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C11E25B4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C11E25EC()
{
  return sub_1C11E243C();
}

uint64_t static FormatIssueBinding.LayeredMedia.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatIssueBinding.LayeredMedia.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatIssueBinding.LayeredMedia.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C11E266C()
{
  unint64_t result = qword_1EA1ACD90;
  if (!qword_1EA1ACD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACD90);
  }
  return result;
}

unint64_t sub_1C11E26C0(uint64_t a1)
{
  unint64_t result = sub_1C11E26E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11E26E8()
{
  unint64_t result = qword_1EA1ACD98;
  if (!qword_1EA1ACD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACD98);
  }
  return result;
}

unint64_t sub_1C11E273C(void *a1)
{
  a1[1] = sub_1C0861DF4();
  a1[2] = sub_1C08F65B8();
  unint64_t result = sub_1C11E266C();
  a1[3] = result;
  return result;
}

uint64_t sub_1C11E2774(void *a1)
{
  return FormatIssueBinding.LayeredMedia.init(from:)(a1);
}

uint64_t sub_1C11E278C(void *a1)
{
  return FormatIssueBinding.LayeredMedia.encode(to:)(a1);
}

unsigned char *_s12LayeredMediaOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C11E2840);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueBinding.LayeredMedia()
{
  return &type metadata for FormatIssueBinding.LayeredMedia;
}

unint64_t sub_1C11E2878()
{
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  type metadata accessor for FormatDOMReader();
  uint64_t inited = (uint64_t *)swift_initStackObject();
  uint64_t v5 = inited;
  inited[2] = v3;
  inited[3] = v2;
  inited[5] = v3;
  inited[6] = v2;
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(v2) & 0xF;
  }
  else {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  inited[4] = 15;
  swift_bridgeObjectRetain_n();
  if (!v6)
  {
LABEL_61:
    sub_1C11E2D0C();
    sub_1C11E2D64();
    sub_1C151E73C();
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  unint64_t v7 = 4 * v6;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  unint64_t result = 15;
  while (1)
  {
    uint64_t v10 = v5[2];
    unint64_t v11 = v5[3];
    char v12 = (v11 & 0x1000000000000000) == 0 || (v10 & 0x800000000000000) != 0;
    unint64_t v13 = result & 0xC;
    uint64_t v14 = 4 << v12;
    if ((result & 1) != 0 && v13 != v14) {
      break;
    }
    if (v13 == v14) {
      unint64_t result = sub_1C149BAC0(result, v5[2], v5[3]);
    }
    unint64_t v16 = v10 & 0xFFFFFFFFFFFFLL;
    if ((v11 & 0x2000000000000000) != 0) {
      unint64_t v16 = HIBYTE(v11) & 0xF;
    }
    if (result >> 16 >= v16) {
      goto LABEL_63;
    }
    if ((result & 1) == 0)
    {
      sub_1C149BC4C(result, v10, v11);
      if ((v11 & 0x1000000000000000) != 0) {
        goto LABEL_37;
      }
LABEL_24:
      if ((v11 & 0x2000000000000000) == 0 && (v10 & 0x1000000000000000) == 0) {
        sub_1C152020C();
      }
      if (sub_1C152021C() == 38) {
        goto LABEL_28;
      }
LABEL_38:
      unint64_t result = v5[4];
      if ((result & 0xC) == v14 || (result & 1) == 0)
      {
        if ((result & 0xC) == v14) {
          unint64_t result = sub_1C149BAC0(result, v10, v11);
        }
        unint64_t v27 = v10 & 0xFFFFFFFFFFFFLL;
        if ((v11 & 0x2000000000000000) != 0) {
          unint64_t v27 = HIBYTE(v11) & 0xF;
        }
        if (result >> 16 >= v27) {
          goto LABEL_65;
        }
        if (result) {
          goto LABEL_50;
        }
        sub_1C149BC4C(result, v10, v11);
        if ((v11 & 0x1000000000000000) != 0) {
          goto LABEL_56;
        }
LABEL_51:
        if ((v11 & 0x2000000000000000) == 0 && (v10 & 0x1000000000000000) == 0) {
          sub_1C152020C();
        }
        int v28 = sub_1C152021C();
      }
      else
      {
        unint64_t v26 = v10 & 0xFFFFFFFFFFFFLL;
        if ((v11 & 0x2000000000000000) != 0) {
          unint64_t v26 = HIBYTE(v11) & 0xF;
        }
        if (result >> 16 >= v26) {
          goto LABEL_64;
        }
LABEL_50:
        if ((v11 & 0x1000000000000000) == 0) {
          goto LABEL_51;
        }
LABEL_56:
        int v28 = sub_1C15200EC();
      }
      int v29 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1C0EE22CC(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v31 = *((void *)v8 + 2);
      unint64_t v30 = *((void *)v8 + 3);
      if (v31 >= v30 >> 1) {
        uint64_t v8 = sub_1C0EE22CC((char *)(v30 > 1), v31 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v31 + 1;
      *(_DWORD *)&v8[4 * v31 + 32] = v29;
      sub_1C0266548(1uLL);
      goto LABEL_7;
    }
LABEL_23:
    if ((v11 & 0x1000000000000000) == 0) {
      goto LABEL_24;
    }
LABEL_37:
    if (sub_1C15200EC() != 38) {
      goto LABEL_38;
    }
LABEL_28:
    sub_1C0266548(1uLL);
    uint64_t v17 = sub_1C00B8B50((uint64_t)&unk_1F1B65EA8);
    unint64_t v18 = sub_1C0266ECC(v17);
    if (v1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v20 = v18;
    unint64_t v21 = v19;
    swift_bridgeObjectRelease();
    sub_1C0266548(1uLL);
    uint64_t v22 = sub_1C009C6F4(v20, v21);
    int v23 = v22;
    if ((v22 & 0x100000000) != 0) {
      int v23 = dword_1C15D55CC[(int)v22];
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1C0EE22CC(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v25 = *((void *)v8 + 2);
    unint64_t v24 = *((void *)v8 + 3);
    if (v25 >= v24 >> 1) {
      uint64_t v8 = sub_1C0EE22CC((char *)(v24 > 1), v25 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v25 + 1;
    *(_DWORD *)&v8[4 * v25 + 32] = v23;
LABEL_7:
    unint64_t result = v5[4];
    if (v7 <= result >> 14) {
      goto LABEL_61;
    }
  }
  unint64_t v15 = v10 & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0) {
    unint64_t v15 = HIBYTE(v11) & 0xF;
  }
  if (result >> 16 < v15) {
    goto LABEL_23;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatDOMText()
{
  return self;
}

void sub_1C11E2D0C()
{
  if (!qword_1EB861438)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB861438);
    }
  }
}

unint64_t sub_1C11E2D64()
{
  unint64_t result = qword_1EB863378;
  if (!qword_1EB863378)
  {
    sub_1C11E2D0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863378);
  }
  return result;
}

uint64_t static FormatPackageList.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1C00EBE94(v2, v3);
}

uint64_t FormatPackageList.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPackageList.packages.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C11E2E68(uint64_t a1)
{
  unint64_t result = sub_1C11E2E90();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11E2E90()
{
  unint64_t result = qword_1EA1ACDA0;
  if (!qword_1EA1ACDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACDA0);
  }
  return result;
}

unint64_t sub_1C11E2EE4(void *a1)
{
  a1[1] = sub_1C088441C();
  a1[2] = sub_1C08FBF8C();
  unint64_t result = sub_1C11E2F1C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11E2F1C()
{
  unint64_t result = qword_1EA1ACDA8;
  if (!qword_1EA1ACDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACDA8);
  }
  return result;
}

uint64_t sub_1C11E2F70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPackageList.init(from:)(a1, a2);
}

uint64_t sub_1C11E2F88(void *a1)
{
  return FormatPackageList.encode(to:)(a1);
}

uint64_t sub_1C11E2FA0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1C00EBE94(v2, v3);
}

ValueMetadata *type metadata accessor for FormatPackageList()
{
  return &type metadata for FormatPackageList;
}

void sub_1C11E3080()
{
  v28.receiver = v0;
  v28.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v28, sel_viewDidLoad);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed42DebugFormatUploadHiddenContainerController_rootViewController];
  objc_msgSend(v0, sel_addChildViewController_, v1);
  id v2 = objc_msgSend(v1, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v4;
  objc_msgSend(v4, sel_bounds);
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;

  objc_msgSend(v3, sel_setFrame_, v7, v9, v11, v13);
  id v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v15 = v14;
  id v16 = objc_msgSend(v1, sel_view);
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v17 = v16;
  objc_msgSend(v15, sel_addSubview_, v16);

  objc_msgSend(v1, sel_didMoveToParentViewController_, v0);
  id v18 = objc_msgSend(v0, sel_navigationItem);
  unint64_t v19 = (void *)sub_1C151E5EC();
  objc_msgSend(v18, sel_setTitle_, v19);

  id v20 = objc_msgSend(v0, sel_navigationItem);
  sub_1BFE4DBE0();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C15320E0;
  uint64_t v22 = (void *)sub_1C151E5EC();
  id v23 = objc_msgSend(self, sel_systemImageNamed_, v22);

  if (v23)
  {
    id v24 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    unint64_t v25 = v0;
    id v26 = objc_msgSend(v24, sel_initWithImage_style_target_action_, v23, 0, v25, sel_doDismiss);

    *(void *)(v21 + 32) = v26;
    sub_1C151EBEC();
    sub_1C03E7D9C();
    unint64_t v27 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setRightBarButtonItems_, v27);

    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatUploadHiddenContainerController()
{
  return self;
}

id sub_1C11E3540(uint64_t a1, unint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v6 = MEMORY[0x1E4FBC860];
  unint64_t v22 = MEMORY[0x1E4FBC860];
  double v7 = v2;
  sub_1C152028C();
  double v8 = (objc_class *)type metadata accessor for DebugFormatUploadHiddenViewController();
  int v9 = byte_1F1B89760;
  id v10 = objc_allocWithZone(v8);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1406EA0(a1, a2, v9);
  swift_release();
  sub_1C152025C();
  sub_1C152029C();
  sub_1C15202AC();
  sub_1C152026C();
  int v11 = byte_1F1B89761;
  objc_allocWithZone(v8);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1406EA0(a1, a2, v11);
  swift_release();
  sub_1C152025C();
  sub_1C152029C();
  sub_1C15202AC();
  sub_1C152026C();
  int v12 = byte_1F1B89762;
  objc_allocWithZone(v8);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1406EA0(a1, a2, v12);
  swift_release();
  sub_1C152025C();
  sub_1C152029C();
  sub_1C15202AC();
  sub_1C152026C();
  unint64_t v13 = v22;
  id result = (id)swift_bridgeObjectRelease();
  unint64_t v22 = v6;
  if ((v13 & 0x8000000000000000) == 0 && (v13 & 0x4000000000000000) == 0)
  {
    uint64_t v15 = *(void *)(v13 + 16);
    if (v15) {
      goto LABEL_4;
    }
LABEL_15:
    swift_release();
    unint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_16:
    sub_1C151BA4C();
    sub_1C0235A90(v18);
    swift_release();
    unint64_t v19 = (void *)sub_1C151BA0C();
    id v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v19);

    *(void *)&v7[OBJC_IVAR____TtC8NewsFeed42DebugFormatUploadHiddenContainerController_rootViewController] = v20;
    v21.receiver = v7;
    v21.super_class = ObjectType;
    return objc_msgSendSuper2(&v21, sel_initWithNibName_bundle_, 0, 0);
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C15204BC();
  id result = (id)swift_release();
  if (!v15) {
    goto LABEL_15;
  }
LABEL_4:
  if (v15 >= 1)
  {
    for (uint64_t i = 0; i != v15; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0) {
        uint64_t v17 = (char *)MEMORY[0x1C18C7CB0](i, v13);
      }
      else {
        uint64_t v17 = (char *)*(id *)(v13 + 8 * i + 32);
      }
      if (*(void *)(*(void *)&v17[OBJC_IVAR____TtC8NewsFeed37DebugFormatUploadHiddenViewController_sections] + 16))
      {
        sub_1C152025C();
        sub_1C152029C();
        sub_1C15202AC();
        sub_1C152026C();
      }
      else
      {
      }
    }
    swift_release();
    unint64_t v18 = v22;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed18FormatGroupBindingV4BoolO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unsigned int v3 = *((unsigned __int8 *)a1 + 8);
  uint64_t v4 = *a2;
  unsigned int v5 = *((unsigned __int8 *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  switch((2 * (*((unsigned char *)a1 + 9) & 0x7F)) | (v3 >> 5) & 1)
  {
    case 1u:
      if (((2 * v6) | ((v5 & 0x20) != 0)) != 1) {
        return 0;
      }
      return (v4 ^ v2) == 0;
    case 2u:
      if (((2 * v6) | ((v5 & 0x20) != 0)) == 2) {
        return (v4 ^ v2) == 0;
      }
      return 0;
    case 3u:
      if (((2 * v6) | ((v5 & 0x20) != 0)) != 3) {
        return 0;
      }
      return ((v4 ^ v2) & 1) == 0;
    case 4u:
      if (((2 * v6) | ((v5 & 0x20) != 0)) == 4) {
        return (v4 ^ v2) == 0;
      }
      return 0;
    case 5u:
      if (((2 * v6) | ((v5 & 0x20) != 0)) == 5) {
        return (v4 ^ v2) == 0;
      }
      return 0;
    case 6u:
      if (((2 * v6) | ((v5 & 0x20) != 0)) == 6) {
        return (v4 ^ v2) == 0;
      }
      return 0;
    case 7u:
      if (((2 * v6) | ((v5 & 0x20) != 0)) != 7) {
        return 0;
      }
      if (v3 >> 6)
      {
        if (v3 >> 6 == 1)
        {
          if ((v5 & 0xC0) == 0x40 && v4 == v2) {
            return 1;
          }
        }
        else if ((v5 & 0xC0) == 0x80 && v2 == v4 && ((v5 ^ v3) & 0x1F) == 0)
        {
          return 1;
        }
      }
      else if (v5 <= 0x3F && v4 == v2)
      {
        return 1;
      }
      return 0;
    case 8u:
      if (((2 * v6) | ((v5 & 0x20) != 0)) == 8) {
        return (v4 ^ v2) == 0;
      }
      return 0;
    default:
      if ((2 * v6) | ((v5 & 0x20) != 0)) {
        return 0;
      }
      return (v4 ^ v2) == 0;
  }
}

unint64_t sub_1C11E3A68(uint64_t a1)
{
  unint64_t result = sub_1C11E3A90();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11E3A90()
{
  unint64_t result = qword_1EA1ACDB8;
  if (!qword_1EA1ACDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACDB8);
  }
  return result;
}

unint64_t sub_1C11E3AE4(void *a1)
{
  a1[1] = sub_1BFDAE8A4();
  a1[2] = sub_1BFD7D550();
  unint64_t result = sub_1C11E3B1C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11E3B1C()
{
  unint64_t result = qword_1EA1ACDC0;
  if (!qword_1EA1ACDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACDC0);
  }
  return result;
}

uint64_t _s4BoolOwet_1(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x1F8 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 504);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 5) & 1 | (2 * *(unsigned __int8 *)(a1 + 9))) ^ 0x1FF;
  if (v3 >= 0x1F7) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Bool()
{
  return &type metadata for FormatGroupBinding.Bool;
}

BOOL static FontBookStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FontBookStyle.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FontBookStyle.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t FontBookFactory.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FontBookFactory.init()()
{
  return v0;
}

void FontBookFactory.makeFontBook(fontBookStyle:contentResizeScale:)(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C151794C();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    int v11 = &type metadata for DefaultFontBook;
    int v12 = &protocol witness table for DefaultFontBook;
    goto LABEL_5;
  }
  if (*a1 == 1)
  {
    int v11 = &type metadata for CondensedFontBook;
    int v12 = &protocol witness table for CondensedFontBook;
LABEL_5:
    a3[3] = (uint64_t)v11;
    a3[4] = (uint64_t)v12;
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a2, v6, v8);
  uint64_t v13 = type metadata accessor for ScalingFontBook();
  uint64_t v14 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v14 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale, v10, v6);
  a3[3] = v13;
  a3[4] = (uint64_t)&protocol witness table for ScalingFontBook;
  *a3 = v14;
}

uint64_t FontBookFactory.deinit()
{
  return v0;
}

uint64_t FontBookFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1C11E3DF0()
{
  unint64_t result = qword_1EA1ACDC8;
  if (!qword_1EA1ACDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACDC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FontBookStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11E3F10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontBookStyle()
{
  return &type metadata for FontBookStyle;
}

uint64_t dispatch thunk of FontBookFactoryType.makeFontBook(fontBookStyle:contentResizeScale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for FontBookFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FontBookFactory);
}

uint64_t dispatch thunk of FontBookFactory.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1C11E3F88(uint64_t a1)
{
  uint64_t v4 = *v1 >> 62;
  if (!v4) {
    return sub_1C02A26BC(a1);
  }
  if (v4 != 1) {
    return sub_1C0F4A608(*(void *)((*v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10), *(void *)((*v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18));
  }
  uint64_t v5 = *(void *)((*v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C05A70AC(a1);
  if (!v2)
  {
    sub_1C0558DAC(a1, v5);
    sub_1C11E3F88(a1);
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C11E40BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  __n128 v8 = (uint64_t *)(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
  swift_beginAccess();
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BFF5177C(a2, a3, a1, v10, v9);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v11;
  a4[1] = v13;
  return result;
}

uint64_t sub_1C11E418C(uint64_t a1)
{
  return sub_1C11E3F88(a1);
}

uint64_t _s8NewsFeed26FormatAccessibilityContentO2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  unint64_t v4 = (unint64_t)*a1 >> 62;
  if (!v4)
  {
    if (!(v3 >> 62))
    {
      __int16 v13 = *(_WORD *)(v2 + 64);
      __int16 v14 = *(_WORD *)(v3 + 64);
      long long v15 = *(_OWORD *)(v2 + 32);
      v22[0] = *(_OWORD *)(v2 + 16);
      v22[1] = v15;
      v22[2] = *(_OWORD *)(v2 + 48);
      __int16 v23 = v13;
      long long v16 = *(_OWORD *)(v3 + 32);
      v20[0] = *(_OWORD *)(v3 + 16);
      v20[1] = v16;
      v20[2] = *(_OWORD *)(v3 + 48);
      __int16 v21 = v14;
      swift_retain();
      swift_retain();
      BOOL v17 = _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v20);
      swift_release();
      swift_release();
      return v17;
    }
    return 0;
  }
  if (v4 == 1)
  {
    if (v3 >> 62 == 1)
    {
      uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v6 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v7 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v9 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)(v8 + 24);
      uint64_t v11 = *(void *)(v8 + 32);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      LOBYTE(v6) = sub_1C125C8A8(v7, v5, v6, v9, v10, v11);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return v6 & 1;
    }
    return 0;
  }
  if (v3 >> 62 != 2) {
    return 0;
  }
  uint64_t v18 = v2 & 0x3FFFFFFFFFFFFFFFLL;
  if (*(void *)(v18 + 16) == *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10)
    && *(void *)(v18 + 24) == *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18))
  {
    return 1;
  }
  return sub_1C1520A9C();
}

unint64_t sub_1C11E43B0(uint64_t a1)
{
  unint64_t result = sub_1C006E77C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11E43D8()
{
  unint64_t result = qword_1EB892718;
  if (!qword_1EB892718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB892718);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAccessibilityContent()
{
  return &type metadata for FormatAccessibilityContent;
}

uint64_t sub_1C11E443C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C11E447C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C11E40BC(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1C11E449C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C11E44D4(uint64_t *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  char v5 = *(unsigned char *)(v1 + 40);
  uint64_t v9 = *a1;
  uint64_t v7 = v4;
  char v8 = v5;
  return sub_1BFF4D180(v3, v2, &v7);
}

uint64_t sub_1C11E4524()
{
  sub_1BFF0084C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64), *(unsigned char *)(v0 + 65));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C11E4574@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFF4E948(*(void *)(v2 + 72), a1);
  if (!v3)
  {
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1C11E45B0()
{
  return sub_1C151911C();
}

uint64_t sub_1C11E4648()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C11E4680()
{
  return sub_1C11E45B0();
}

uint64_t sub_1C11E46A0()
{
  return 8;
}

void *sub_1C11E46AC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C11E46B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C11E46F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void *sub_1C11E4738(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1C15204BC())
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C18C7CB0](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_articleID);
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = sub_1C151E62C();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1BFEF9B68(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_1BFEF9B68((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        long long v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C11E48D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v40 = a1 + 64;
  uint64_t v38 = MEMORY[0x1E4FBC868];
  uint64_t v41 = MEMORY[0x1E4FBC868];
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v39 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_23:
    uint64_t v15 = *a2;
    if (*(void *)(*a2 + 16))
    {
      uint64_t v16 = 16 * v10;
      BOOL v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
      uint64_t v18 = (uint64_t *)(*(void *)(a1 + 56) + v16);
      uint64_t v19 = *v17;
      uint64_t v20 = v17[1];
      uint64_t v21 = *v18;
      uint64_t v22 = v18[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1BFEF2D8C(v21, v22);
      if (v24)
      {
        uint64_t v25 = *(void *)(*(void *)(v15 + 56) + 8 * v23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v26 = v38;
        unint64_t v27 = *(void *)(v38 + 16);
        if (*(void *)(v38 + 24) <= v27)
        {
          sub_1C1055474(v27 + 1, 1);
          uint64_t v26 = v41;
        }
        uint64_t v38 = v26;
        sub_1C1520DBC();
        sub_1C151E77C();
        uint64_t result = sub_1C1520E0C();
        uint64_t v28 = v38 + 64;
        uint64_t v29 = -1 << *(unsigned char *)(v38 + 32);
        unint64_t v30 = result & ~v29;
        unint64_t v31 = v30 >> 6;
        if (((-1 << v30) & ~*(void *)(v38 + 64 + 8 * (v30 >> 6))) == 0)
        {
          char v33 = 0;
          unint64_t v34 = (unint64_t)(63 - v29) >> 6;
          while (++v31 != v34 || (v33 & 1) == 0)
          {
            BOOL v35 = v31 == v34;
            if (v31 == v34) {
              unint64_t v31 = 0;
            }
            v33 |= v35;
            uint64_t v36 = *(void *)(v28 + 8 * v31);
            if (v36 != -1)
            {
              unint64_t v32 = __clz(__rbit64(~v36)) + (v31 << 6);
              goto LABEL_38;
            }
          }
          goto LABEL_41;
        }
        unint64_t v32 = __clz(__rbit64((-1 << v30) & ~*(void *)(v38 + 64 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
LABEL_38:
        *(void *)(v28 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
        uint64_t v37 = (void *)(*(void *)(v38 + 48) + 16 * v32);
        *uint64_t v37 = v19;
        v37[1] = v20;
        *(void *)(*(void *)(v38 + 56) + 8 * v32) = v25;
        ++*(void *)(v38 + 16);
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease_n();
      }
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v11 >= v39) {
    goto LABEL_39;
  }
  unint64_t v12 = *(void *)(v40 + 8 * v11);
  int64_t v13 = v8 + 1;
  if (v12) {
    goto LABEL_22;
  }
  int64_t v13 = v8 + 2;
  if (v8 + 2 >= v39) {
    goto LABEL_39;
  }
  unint64_t v12 = *(void *)(v40 + 8 * v13);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v13 = v8 + 3;
  if (v8 + 3 >= v39) {
    goto LABEL_39;
  }
  unint64_t v12 = *(void *)(v40 + 8 * v13);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v13 = v8 + 4;
  if (v8 + 4 >= v39) {
    goto LABEL_39;
  }
  unint64_t v12 = *(void *)(v40 + 8 * v13);
  if (v12)
  {
LABEL_22:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_23;
  }
  int64_t v14 = v8 + 5;
  if (v8 + 5 >= v39)
  {
LABEL_39:
    sub_1BFEFB808();
    return v38;
  }
  unint64_t v12 = *(void *)(v40 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v8 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v39) {
      goto LABEL_39;
    }
    unint64_t v12 = *(void *)(v40 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t HeadlineServiceType.headlines(for:failIfAnyMissing:cachePolicy:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = FCCurrentQoSOrUtilityIfMain();
  int64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8);
  return v13(a1, a2, a3, a4, v12, a5, a6);
}

uint64_t HeadlineServiceType.headline(for:purpose:)()
{
  id v0 = objc_msgSend(self, sel_defaultCachePolicy);
  FCCurrentQoSOrUtilityIfMain();
  uint64_t v1 = HeadlineServiceType.headline(for:cachePolicy:purpose:qualityOfService:)();

  return v1;
}

void *HeadlineService.__allocating_init(tagService:coreConfigurationManager:cloudContext:paidAccessChecker:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v8 = (void *)swift_allocObject();
  sub_1BFC773DC(a1, (uint64_t)(v8 + 2));
  v8[7] = a2;
  v8[8] = a3;
  v8[9] = a4;
  return v8;
}

uint64_t sub_1C11E4DC8(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 32;
    do
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        uint64_t v5 = swift_unknownObjectRetain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 24;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t sub_1C11E4EC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v2 = (id *)(swift_bridgeObjectRetain() + 48);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    if (!*v2) {
      goto LABEL_4;
    }
    uint64_t v4 = *(v2 - 2);
    uint64_t v5 = *(v2 - 1);
    id v6 = *v2;
    swift_unknownObjectRetain();
    id v7 = v5;
    id v8 = v6;
    id v9 = objc_msgSend(v4, sel_sourceFeedID);
    if (v9) {
      break;
    }

    swift_unknownObjectRelease();
LABEL_4:
    v2 += 3;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  unint64_t v10 = v9;
  unint64_t v31 = v7;
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  id v14 = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v17 = sub_1BFEF2D8C(v11, v13);
  uint64_t v18 = v3[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (!__OFADD__(v18, v19))
  {
    char v21 = v16;
    if (v3[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v16 & 1) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_1C1074D84();
        if ((v21 & 1) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      sub_1C10640E8(v20, isUniquelyReferenced_nonNull_native);
      unint64_t v22 = sub_1BFEF2D8C(v11, v13);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_24;
      }
      unint64_t v17 = v22;
      if ((v21 & 1) == 0)
      {
LABEL_16:
        v3[(v17 >> 6) + 8] |= 1 << v17;
        uint64_t v26 = (uint64_t *)(v3[6] + 16 * v17);
        *uint64_t v26 = v11;
        v26[1] = v13;
        *(void *)(v3[7] + 8 * v17) = v14;
        uint64_t v27 = v3[2];
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28) {
          goto LABEL_23;
        }
        v3[2] = v29;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      }
    }
    uint64_t v24 = v3[7];
    uint64_t v25 = 8 * v17;

    *(void *)(v24 + v25) = v14;
LABEL_18:

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t HeadlineServiceType.headlines(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s8NewsFeed19HeadlineServiceTypePAAE9headlines3for7purpose13TeaFoundation7PromiseCySaySo19FCHeadlineProviding_pGGSaySSG_So18FCOperationPurposeatF_0(a1, *MEMORY[0x1E4F7E028], a2, a3);
}

uint64_t HeadlineServiceType.headlines(for:failIfAnyMissing:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return _s8NewsFeed19HeadlineServiceTypePAAE9headlines3for7purpose13TeaFoundation7PromiseCySaySo19FCHeadlineProviding_pGGSaySSG_So18FCOperationPurposeatF_0(a1, a3, a4, a5);
}

uint64_t HeadlineServiceType.headlines(for:failIfAnyMissing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = objc_msgSend(self, sel_defaultCachePolicy);
  uint64_t v8 = *MEMORY[0x1E4F7E028];
  uint64_t v9 = FCCurrentQoSOrUtilityIfMain();
  uint64_t v10 = (*(uint64_t (**)(uint64_t, void, id, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(a1, 0, v7, v8, v9, a3, a4);

  return v10;
}

uint64_t HeadlineServiceType.headlines(for:failIfAnyMissing:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *MEMORY[0x1E4F7E028];
  uint64_t v11 = FCCurrentQoSOrUtilityIfMain();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8);
  return v12(a1, a2, a3, v10, v11, a4, a5);
}

uint64_t HeadlineServiceType.headline(for:)()
{
  id v0 = objc_msgSend(self, sel_defaultCachePolicy);
  FCCurrentQoSOrUtilityIfMain();
  uint64_t v1 = HeadlineServiceType.headline(for:cachePolicy:purpose:qualityOfService:)();

  return v1;
}

uint64_t HeadlineServiceType.headline(for:cachePolicy:purpose:)()
{
  FCCurrentQoSOrUtilityIfMain();
  return HeadlineServiceType.headline(for:cachePolicy:purpose:qualityOfService:)();
}

uint64_t HeadlineServiceType.headline(for:cachePolicy:)()
{
  FCCurrentQoSOrUtilityIfMain();
  return HeadlineServiceType.headline(for:cachePolicy:purpose:qualityOfService:)();
}

uint64_t HeadlineServiceType.headline(for:cachePolicy:qualityOfService:)()
{
  return HeadlineServiceType.headline(for:cachePolicy:purpose:qualityOfService:)();
}

uint64_t HeadlineServiceType.headline(for:cachePolicy:purpose:qualityOfService:)()
{
  sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
  sub_1C151932C();
  id v0 = (void *)sub_1C1518E7C();
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB895E90);
  uint64_t v1 = sub_1C1518FEC();
  swift_release();

  return v1;
}

uint64_t sub_1C11E551C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A890);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  char v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 8);
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(v15, 1, a4, a5, a6, a7, a8);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1C11E5604(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1C11EC320();
    swift_allocError();
    *(void *)uint64_t v4 = 0xD000000000000014;
    *(void *)(v4 + 8) = 0x80000001C1637AF0;
    *(unsigned char *)(v4 + 16) = 1;
    return swift_willThrow();
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C18C7CB0](0, v1);
    goto LABEL_6;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    sub_1BFECEF3C(0, &qword_1EB8714C0, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  __break(1u);
  return result;
}

uint64_t HeadlineServiceType.fetchHeadlines(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(a3 + 16))(a1, *MEMORY[0x1E4F7E028], a2, a3);
}

uint64_t HeadlineServiceType.fetchHeadlines(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(a4 + 24))(a1, a2, *MEMORY[0x1E4F7E028], a3, a4);
}

uint64_t HeadlineServiceType.fetchHeadlines(forTagID:maxCount:dateRange:requestType:includePaidArticles:cachedOnly:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v10 = *a5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, void, uint64_t, uint64_t))(a9 + 32))(a1, a2, a3, a4, &v10, a6, a7, *MEMORY[0x1E4F7E028], a8, a9);
}

uint64_t HeadlineServiceType.fetchHeadlines(forFeedID:maxCount:dateRange:fromFeedBin:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A890);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  uint64_t v14 = *MEMORY[0x1E4F7E028];
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(v13, a3, a4, a5, v14, a6, a7);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t HeadlineServiceType.fetchHeadlines(forFeedID:maxCount:dateRange:fromFeedBin:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A890);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 40);
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(v15, a3, a4, a5, a6, a7, a8);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t HeadlineServiceType.fetchHeadlines(for:feedPersonalizer:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C11E4DC8(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C11E4EC0(v12);
  id v14 = objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 0, 0);
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v24 = v11;
    uint64_t v25 = a3;
    uint64_t v26 = a4;
    uint64_t v27 = a5;
    swift_bridgeObjectRetain();
    uint64_t v16 = (void **)(a1 + 48);
    do
    {
      BOOL v19 = *(v16 - 1);
      uint64_t v20 = *v16;
      self;
      char v21 = (void *)swift_dynamicCastObjCClass();
      if (v21) {
        swift_unknownObjectRetain();
      }
      v16 += 3;
      id v17 = v20;
      swift_unknownObjectRetain();
      id v18 = v19;
      objc_msgSend(v14, sel_setObject_forKey_, v18, v21);

      swift_unknownObjectRelease();
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    a5 = v27;
    a3 = v25;
    a4 = v26;
    uint64_t v11 = v24;
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t, id, uint64_t, void, uint64_t, uint64_t, uint64_t))(a5 + 64))(v11, v13, v14, a2, 0, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v22;
}

uint64_t HeadlineServiceType.fetchFeeds(forFeedIDs:maxCount:dateRange:fromFeedBin:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 48))(a1, a2, a3, a4, 0, a5, 1, a6, a7);
}

uint64_t HeadlineServiceType.cachedHeadline(for:)()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  uint64_t v1 = (uint64_t *)(v0 + 16);
  id v2 = objc_msgSend(self, sel_cachedOnlyCachePolicy);
  FCCurrentQoSOrUtilityIfMain();
  HeadlineServiceType.headline(for:cachePolicy:purpose:qualityOfService:)();

  swift_retain();
  uint64_t v3 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();
  swift_release();
  swift_release();

  swift_beginAccess();
  uint64_t v4 = *v1;
  swift_unknownObjectRetain();
  swift_release();
  return v4;
}

uint64_t sub_1C11E5D34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *(void *)(a2 + 16) = v3;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t HeadlineService.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t HeadlineService.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t HeadlineService.headlines(for:failIfAnyMissing:cachePolicy:purpose:qualityOfService:)(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1C0153EDC();
    swift_allocObject();
    return sub_1C151911C();
  }
  else
  {
    sub_1C0153EDC();
    swift_allocObject();
    return sub_1C151908C();
  }
}

void sub_1C11E5EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = *(void **)(a5 + 64);
  swift_retain();
  id v17 = v16;
  sub_1BFD430AC(a6);
  id v18 = objc_allocWithZone(MEMORY[0x1E4F7E238]);
  BOOL v19 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_1C151EBAC();
  id v21 = objc_msgSend(v18, sel_initWithContext_articleIDs_ignoreCacheForArticleIDs_, v17, v19, v20);

  if (qword_1EB896238 != -1) {
    swift_once();
  }
  uint64_t v22 = (void *)qword_1EB93CBC8;
  sub_1BFFDEB20();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C1527210;
  uint64_t v24 = *(void *)(a6 + 16);
  uint64_t v25 = MEMORY[0x1E4FBB5C8];
  *(void *)(v23 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v23 + 64) = v25;
  *(void *)(v23 + 32) = v24;
  id v26 = v22;
  id v27 = objc_msgSend(v21, sel_shortOperationDescription);
  if (v27)
  {
    BOOL v28 = v27;
    uint64_t v29 = sub_1C151E62C();
    uint64_t v31 = v30;

    *(void *)(v23 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v23 + 104) = sub_1BFE9C558();
    *(void *)(v23 + 72) = v29;
    *(void *)(v23 + 80) = v31;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    if (objc_msgSend(a7, sel_cachePolicy))
    {
      objc_msgSend(v21, sel_setOverrideArticleCachePolicy_, 1);
      objc_msgSend(v21, sel_setArticleCachePolicy_, objc_msgSend(a7, sel_cachePolicy));
      objc_msgSend(a7, sel_maximumCachedAge);
      objc_msgSend(v21, sel_setArticleMaximumCachedAge_);
    }
    objc_msgSend(v21, sel_setQualityOfService_, a8);
    id v32 = v21;
    objc_msgSend(v32, sel_setRelativePriority_, FCInferRelativePriorityFromQualityOfService());

    objc_msgSend(v32, sel_setPurpose_, a9);
    objc_msgSend(v32, sel_setShouldFailOnMissingObjects_, a10 & 1);
    objc_msgSend(v32, sel_setCanSendFetchCompletionSynchronously_, 1);
    uint64_t v33 = swift_allocObject();
    *(unsigned char *)(v33 + 16) = a10 & 1;
    *(void *)(v33 + 24) = sub_1C11EC808;
    *(void *)(v33 + 32) = v15;
    *(void *)(v33 + 40) = a3;
    *(void *)(v33 + 48) = a4;
    aBlock[4] = sub_1C11EC664;
    aBlock[5] = v33;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFD34E78;
    aBlock[3] = &block_descriptor_89;
    unint64_t v34 = _Block_copy(aBlock);
    id v35 = v32;
    swift_retain();
    swift_release();
    objc_msgSend(v35, sel_setFetchCompletionBlock_, v34);
    _Block_release(v34);

    if (objc_msgSend(self, sel_isMainThread) && objc_msgSend(a7, sel_cachePolicy) != (id)3)
    {
      sub_1C15182FC();
      sub_1C15182BC();
      sub_1C15182DC();
      swift_release();
    }
    else
    {
      objc_msgSend(v35, sel_start);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1C11E633C(void *a1, char a2, void (*a3)(), uint64_t a4, void (*a5)(void))
{
  id v9 = objc_msgSend(a1, sel_error);
  if (!v9)
  {
    if (objc_msgSend(a1, sel_fetchedObject))
    {
      sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
      if (swift_dynamicCast())
      {
        a3();
        swift_bridgeObjectRelease();
        return;
      }
    }
    if ((a2 & 1) == 0)
    {
      ((void (*)(void))a3)(MEMORY[0x1E4FBC860]);
      return;
    }
    sub_1C151F36C();
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EB93CBC8;
    sub_1C15197CC();

    sub_1C11EC320();
    uint64_t v15 = (void *)swift_allocError();
    *(void *)uint64_t v19 = 0xD000000000000018;
    *(void *)(v19 + 8) = 0x80000001C1637AA0;
    *(unsigned char *)(v19 + 16) = 1;
    a5();
LABEL_17:

    return;
  }
  id v20 = v9;
  uint64_t v10 = (void *)sub_1C1515D2C();
  unsigned int v11 = objc_msgSend(v10, sel_fc_isUnknownItemError);

  if (!v11 || (a2 & 1) != 0)
  {
    sub_1C151F36C();
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_1EB93CBC8;
    sub_1BFFDEB20();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    id v14 = v12;
    sub_1C152036C();
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v13 + 64) = sub_1BFE9C558();
    *(void *)(v13 + 32) = 0;
    *(void *)(v13 + 40) = 0xE000000000000000;
    sub_1C15197CC();

    swift_bridgeObjectRelease();
    sub_1C11EC320();
    uint64_t v15 = (void *)swift_allocError();
    *(void *)uint64_t v16 = v20;
    *(void *)(v16 + 8) = 0;
    *(unsigned char *)(v16 + 16) = 0;
    id v17 = v20;
    ((void (*)(void *))a5)(v15);

    goto LABEL_17;
  }
  ((void (*)(void))a3)(MEMORY[0x1E4FBC860]);
}

uint64_t HeadlineService.fetchHeadlines(from:purpose:)(uint64_t a1, void *a2)
{
  sub_1BFC9DBE8(0, &qword_1EB87A1E0);
  sub_1C151932C();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  id v5 = a2;
  id v6 = (void *)sub_1C1518E7C();
  sub_1C11EC544(0, &qword_1EB85F228, MEMORY[0x1E4FBAEA0]);
  uint64_t v7 = sub_1C151900C();
  swift_release();
  swift_release();

  return v7;
}

uint64_t sub_1C11E6818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1C11EC4A4();
    swift_allocObject();
    return sub_1C151911C();
  }
  else
  {
    sub_1C018FC4C(MEMORY[0x1E4FBC860]);
    sub_1C11EC4A4();
    swift_allocObject();
    return sub_1C151908C();
  }
}

uint64_t HeadlineService.fetchHeadlines(for:purpose:)()
{
  return sub_1C151911C();
}

uint64_t sub_1C11E6950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = qword_1EB896238;
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  id v18 = (void *)qword_1EB93CBC8;
  sub_1BFFDEB20();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 64) = sub_1BFE9C558();
  *(void *)(v19 + 32) = a5;
  *(void *)(v19 + 40) = a6;
  id v20 = v18;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  id v21 = *(void **)(a7 + 64);
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A890);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
  *(void *)(v22 + 32) = a5;
  *(void *)(v22 + 40) = a6;
  id v23 = objc_allocWithZone(MEMORY[0x1E4F7E508]);
  swift_bridgeObjectRetain();
  id v24 = v21;
  uint64_t v25 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v23, sel_initWithContext_issueIDs_, v24, v25);

  objc_msgSend(v26, sel_setPurpose_, a8);
  id v27 = (void *)swift_allocObject();
  _OWORD v27[2] = sub_1C11EC808;
  v27[3] = v16;
  v27[4] = a3;
  v27[5] = a4;
  aBlock[4] = sub_1C11EC48C;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C11E6F40;
  aBlock[3] = &block_descriptor_70;
  BOOL v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v26, sel_setFetchCompletionHandler_, v28);
  _Block_release(v28);
  sub_1C15182FC();
  sub_1C15182BC();
  if (objc_msgSend(self, sel_isMainThread)) {
    sub_1C15182DC();
  }
  else {
    objc_msgSend(v26, sel_start);
  }

  return swift_release();
}

void sub_1C11E6C54(uint64_t a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(void))
{
  if (a1 && sub_1C0295AD4(a1))
  {
    a3();
    swift_bridgeObjectRelease();
  }
  else if (a2)
  {
    id v8 = a2;
    sub_1C151F36C();
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    id v9 = (void *)qword_1EB93CBC8;
    sub_1BFFDEB20();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    id v11 = v9;
    sub_1C152036C();
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 64) = sub_1BFE9C558();
    *(void *)(v10 + 32) = 0;
    *(void *)(v10 + 40) = 0xE000000000000000;
    sub_1C15197CC();

    swift_bridgeObjectRelease();
    sub_1C11EC320();
    uint64_t v12 = (void *)swift_allocError();
    *(void *)uint64_t v13 = a2;
    *(void *)(v13 + 8) = 0;
    *(unsigned char *)(v13 + 16) = 0;
    id v14 = a2;
    ((void (*)(void *))a5)(v12);
  }
  else
  {
    sub_1C151F36C();
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    id v15 = (id)qword_1EB93CBC8;
    sub_1C15197CC();

    sub_1C11EC320();
    uint64_t v16 = (void *)swift_allocError();
    *(void *)uint64_t v17 = 0xD000000000000030;
    *(void *)(v17 + 8) = 0x80000001C16377D0;
    *(unsigned char *)(v17 + 16) = 1;
    a5();
  }
}

uint64_t sub_1C11E6F40(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87B090);
    sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
    sub_1C00BC034(&qword_1EA1ACDD0, (unint64_t *)&qword_1EB87B090);
    uint64_t v4 = sub_1C151E33C();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t HeadlineService.fetchHeadlines(forTagID:maxCount:dateRange:requestType:includePaidArticles:cachedOnly:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5, char a6, char a7, void *a8)
{
  if (a3 < 1)
  {
    sub_1C0153EDC();
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    char v25 = *a5;
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    id v14 = (void *)qword_1EB93CBC8;
    sub_1BFFDEB20();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 64) = sub_1BFE9C558();
    *(void *)(v15 + 32) = a1;
    *(void *)(v15 + 40) = a2;
    id v16 = v14;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();

    uint64_t v17 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v17);
    id v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
    sub_1BFECEF3C(0, (unint64_t *)&qword_1EB879F90, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, MEMORY[0x1E4FBB320]);
    sub_1C151932C();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a1;
    *(void *)(v19 + 24) = a2;
    *(unsigned char *)(v19 + 32) = v25;
    *(void *)(v19 + 40) = v8;
    *(void *)(v19 + 48) = a3;
    *(void *)(v19 + 56) = a4;
    *(unsigned char *)(v19 + 64) = a6 & 1;
    *(unsigned char *)(v19 + 65) = a7 & 1;
    *(void *)(v19 + 72) = a8;
    swift_bridgeObjectRetain();
    swift_retain();
    id v20 = a4;
    id v21 = a8;
    uint64_t v22 = (void *)sub_1C1518E7C();
    sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, v18);
    uint64_t v23 = sub_1C151900C();
    swift_release();
    swift_release();
  }
  return v23;
}

uint64_t sub_1C11E7334(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v5);
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A890);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
  *(void *)(v7 + 32) = a2;
  *(void *)(v7 + 40) = a3;
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  uint64_t v9 = v8(v7, v5, v6);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1C11E7404(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8, char a9, char a10, void *a11)
{
  uint64_t v14 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    if (result) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v28 = 0xD00000000000002CLL;
    sub_1C11EC320();
    swift_allocError();
    *(void *)uint64_t v30 = 0xD00000000000002CLL;
    *(void *)(v30 + 8) = 0x80000001C1637740;
    *(unsigned char *)(v30 + 16) = 1;
    swift_willThrow();
    return v28;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v15) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v14 & 0xC000000000000001) != 0)
  {
    uint64_t v17 = MEMORY[0x1C18C7CB0](0, v14);
  }
  else
  {
    if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v17 = *(void *)(v14 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  if ((a5 & 1) == 0)
  {
    sub_1BFC9DBE8(0, &qword_1EB87A1E0);
    sub_1C151932C();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = a7;
    *(void *)(v18 + 32) = a8;
    *(unsigned char *)(v18 + 40) = a9 & 1;
    *(unsigned char *)(v18 + 41) = a10 & 1;
    *(void *)(v18 + 48) = a11;
    swift_unknownObjectRetain();
    id v19 = a8;
    id v20 = a11;
    id v21 = (void *)sub_1C1518E7C();
    sub_1C1078AA4();
    type metadata accessor for HeadlineService();
    sub_1C151900C();
    swift_release();
    swift_release();

    *(void *)(swift_allocObject() + 16) = v20;
    id v22 = v20;
    uint64_t v23 = (void *)sub_1C1518E7C();
    sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
    uint64_t v24 = sub_1C151900C();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

    return v24;
  }
  swift_getObjectType();
  uint64_t v25 = FCTagProviding.topKArticleListID.getter();
  if (v26)
  {
    MEMORY[0x1F4188790](v25);
    sub_1C11EC544(0, &qword_1EB85F228, MEMORY[0x1E4FBAEA0]);
    sub_1C151932C();
    swift_bridgeObjectRelease();
    id v27 = (void *)sub_1C1518E7C();
    sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
    uint64_t v28 = sub_1C1518FEC();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_1C15200FC();
    sub_1C151E80C();
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
    sub_1C152036C();
    uint64_t v28 = 0xE000000000000000;
    sub_1C11EC320();
    swift_allocError();
    *(void *)uint64_t v29 = 0;
    *(void *)(v29 + 8) = 0xE000000000000000;
    *(unsigned char *)(v29 + 16) = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  return v28;
}

uint64_t HeadlineService.fetchFeed(for:maxCount:dateRange:coreConfiguration:includePaidArticles:cachedOnly:purpose:filterOptions:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  if (qword_1EB896238 != -1) {
    swift_once();
  }
  id v11 = (void *)qword_1EB93CBC8;
  sub_1BFFDEB20();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  id v13 = v11;
  sub_1C152036C();
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 64) = sub_1BFE9C558();
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 40) = 0xE000000000000000;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(a1, sel_freeFeedIDForBin_, 3);
  if (v14)
  {
    uint64_t v37 = sub_1C151E62C();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v16 = 0;
  }
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E438]), sel_init);
  objc_msgSend(v17, sel_setFeedID_, v14);

  uint64_t v18 = self;
  id v19 = objc_msgSend(v18, sel_feedRangeFromDateRange_, a3);
  objc_msgSend(v17, sel_setFeedRange_, v19);

  if ((a2 & 0x8000000000000000) == 0)
  {
    objc_msgSend(v17, sel_setMaxCount_, a2);
    char v38 = a6;
    objc_msgSend(v17, sel_setCachedOnly_, a6 & 1);
    sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C15320E0;
    *(void *)(v20 + 32) = v17;
    uint64_t v40 = v20;
    sub_1C151EBEC();
    unint64_t v21 = v40;
    if ((a5 & 1) == 0)
    {
      id v27 = v17;
      uint64_t v28 = swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    id v22 = v17;
    id v23 = objc_msgSend(a1, sel_paidFeedIDForBin_, 3);
    if (v23)
    {
      uint64_t v24 = sub_1C151E62C();
      uint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    id v29 = objc_msgSend(a1, sel_asChannel);
    if (v29)
    {
      if (objc_msgSend(*(id *)(v39 + 72), sel_canGetSubscriptionToChannel_, v29))
      {
        if (v26)
        {
          if (v16)
          {
            if (v24 == v37 && v26 == v16)
            {
              swift_unknownObjectRelease();

              swift_bridgeObjectRelease();
LABEL_21:
              uint64_t v28 = swift_bridgeObjectRelease();
              goto LABEL_22;
            }
            char v34 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v34) {
              goto LABEL_31;
            }
LABEL_27:
            id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E438]), sel_init);
            objc_msgSend(v31, sel_setFeedID_, v23);

            id v32 = objc_msgSend(v18, sel_feedRangeFromDateRange_, a3);
            objc_msgSend(v31, sel_setFeedRange_, v32);

            objc_msgSend(v31, sel_setMaxCount_, a2);
            objc_msgSend(v31, sel_setCachedOnly_, v38 & 1);
            id v33 = v31;
            MEMORY[0x1C18C66D0]();
            if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();

            uint64_t v28 = swift_unknownObjectRelease();
            unint64_t v21 = v40;
LABEL_22:
            if (v21 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v35 = sub_1C15204BC();
              uint64_t v28 = swift_bridgeObjectRelease();
              if (v35) {
                goto LABEL_24;
              }
            }
            else if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_24:
              MEMORY[0x1F4188790](v28);
              sub_1C11EBBE4(0, &qword_1EB8707C0, (uint64_t (*)(uint64_t))sub_1C1078AA4, MEMORY[0x1E4FAB088]);
              swift_allocObject();
              uint64_t v30 = sub_1C151911C();
              swift_bridgeObjectRelease();

              return v30;
            }
            sub_1C11EBBE4(0, &qword_1EB8707C0, (uint64_t (*)(uint64_t))sub_1C1078AA4, MEMORY[0x1E4FAB088]);
            swift_allocObject();
            uint64_t v30 = sub_1C151908C();
            swift_bridgeObjectRelease();

            return v30;
          }
        }
        else if (!v16)
        {
LABEL_31:
          swift_unknownObjectRelease();

          goto LABEL_22;
        }
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      swift_unknownObjectRelease();
    }

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C11E7F80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A890);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
  *(void *)(v7 + 32) = a2;
  *(void *)(v7 + 40) = a3;
  sub_1BFC9DBE8(0, &qword_1EB87A1E0);
  swift_bridgeObjectRetain();
  sub_1C151932C();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a4;
  swift_bridgeObjectRetain();
  id v9 = a4;
  uint64_t v10 = (void *)sub_1C1518E7C();
  sub_1C11EC544(0, &qword_1EB85F228, MEMORY[0x1E4FBAEA0]);
  type metadata accessor for HeadlineService();
  uint64_t v11 = sub_1C151900C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1C11E80FC(uint64_t *a1)
{
  return sub_1C151908C();
}

uint64_t HeadlineService.fetchHeadlines(forFeedItems:feedContextByFeedID:feedItemScoreProfiles:feedPersonalizer:configuration:purpose:)(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    a1 = swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    MEMORY[0x1F4188790](a1);
    sub_1C0153EDC();
    swift_allocObject();
    return sub_1C151911C();
  }
  sub_1C0153EDC();
  swift_allocObject();
  return sub_1C151908C();
}

void sub_1C11E82A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  id v19 = objc_allocWithZone(MEMORY[0x1E4F7E410]);
  swift_retain();
  id v20 = objc_msgSend(v19, sel_init);
  objc_msgSend(v20, sel_setPurpose_, a5);
  if (a6)
  {
    id v21 = a6;
  }
  else
  {
    id v21 = objc_msgSend(objc_msgSend(*(id *)(a7 + 64), sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  objc_msgSend(v20, sel_setConfiguration_, v21);
  swift_unknownObjectRelease();
  objc_msgSend(v20, sel_setContext_, *(void *)(a7 + 64));
  objc_msgSend(v20, sel_setPersonalizer_, a8);
  sub_1BFC39268(0, &qword_1EB85DFA0);
  id v22 = (void *)sub_1C151E32C();
  objc_msgSend(v20, sel_setFeedContextByFeedID_, v22);

  sub_1BFC39268(0, &qword_1EB87A0C0);
  id v23 = (void *)sub_1C151EBAC();
  objc_msgSend(v20, sel_setFeedItems_, v23);

  objc_msgSend(v20, sel_setFeedItemScoreProfiles_, a11);
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = sub_1BFD35690;
  v24[3] = v18;
  v24[4] = a3;
  v24[5] = a4;
  aBlock[4] = sub_1C11EC314;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C11E8624;
  aBlock[3] = &block_descriptor_95;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_setHeadlinesCompletionHandler_, v25);
  _Block_release(v25);
  objc_msgSend(v20, sel_start);
}

void sub_1C11E8578(uint64_t a1, id a2, void (*a3)(uint64_t, id), uint64_t a4, void (*a5)(uint64_t))
{
  if (a1)
  {
    a3(a1, a2);
  }
  else
  {
    id v6 = a2;
    if (a2)
    {
      id v7 = a2;
      uint64_t v8 = (uint64_t)v6;
    }
    else
    {
      sub_1C11EC320();
      uint64_t v8 = swift_allocError();
      id v6 = (id)v8;
      *(void *)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      *(unsigned char *)(v9 + 16) = 2;
    }
    a5(v8);
  }
}

uint64_t sub_1C11E8624(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB895E90);
    uint64_t v4 = sub_1C151EBCC();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t HeadlineService.fetchFeeds(forFeedIDs:maxCount:dateRange:fromFeedBin:edgeCacheHint:purpose:filterOptions:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  return sub_1C11EBD9C(a1, a2, a3, a5, a6, a7);
}

id sub_1C11E86D8(uint64_t a1)
{
  id result = objc_msgSend(*(id *)(a1 + 56), sel_configuration);
  if (result)
  {
    sub_1BFECEF3C(0, (unint64_t *)&unk_1EB8714B0, &qword_1EB87A1E0, (uint64_t)&protocolRef_FCCoreConfiguration, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (id)sub_1C151908C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C11E8774(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v7 = a4;
  unint64_t v8 = sub_1C11EB574(a3, (uint64_t)v7, a5);

  if (v8 >> 62)
  {
    uint64_t v9 = sub_1C15204BC();
    if (v9) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1C11EBBE4(v9, &qword_1EB8707C0, (uint64_t (*)(uint64_t))sub_1C1078AA4, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v10 = sub_1C151908C();
    swift_bridgeObjectRelease();
    return v10;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9) {
    goto LABEL_5;
  }
LABEL_3:
  MEMORY[0x1F4188790](v9);
  sub_1C11EBBE4(0, &qword_1EB8707C0, (uint64_t (*)(uint64_t))sub_1C1078AA4, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v10 = sub_1C151911C();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t HeadlineService.fetchHeadlines(forFeedIDs:maxCount:dateRange:fromFeedBin:purpose:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  sub_1C11EBD9C(a1, a2, a3, 0, a5, 1);
  *(void *)(swift_allocObject() + 16) = a5;
  id v6 = a5;
  id v7 = (void *)sub_1C1518E7C();
  sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
  uint64_t v8 = sub_1C151900C();
  swift_release();
  swift_release();

  return v8;
}

id sub_1C11E8A50(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (!v8)
    {
LABEL_14:
      uint64_t v20 = sub_1C11EBC80(v9);
      swift_bridgeObjectRelease();
      return (id)v20;
    }
    uint64_t v25 = MEMORY[0x1E4FBC860];
    id result = (id)sub_1BFF661B8(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v21 = a3;
    uint64_t v22 = a2;
    uint64_t v11 = 0;
    uint64_t v9 = v25;
    unint64_t v23 = v4;
    unint64_t v24 = v7 & 0xC000000000000001;
    while (v8 != v11)
    {
      if (v24) {
        id v12 = (id)MEMORY[0x1C18C7CB0](v11, v7);
      }
      else {
        id v12 = *(id *)(v7 + 8 * v11 + 32);
      }
      id v13 = v12;
      a3 = v7;
      id result = objc_msgSend(v12, sel_articleID, v21, v22, v23);
      if (!result) {
        goto LABEL_18;
      }
      id v14 = result;
      uint64_t v15 = sub_1C151E62C();
      a2 = v16;

      unint64_t v18 = *(void *)(v25 + 16);
      unint64_t v17 = *(void *)(v25 + 24);
      unint64_t v4 = v18 + 1;
      if (v18 >= v17 >> 1) {
        sub_1BFF661B8(v17 > 1, v18 + 1, 1);
      }
      ++v11;
      *(void *)(v25 + 16) = v4;
      unint64_t v19 = v25 + 16 * v18;
      *(void *)(v19 + 32) = v15;
      *(void *)(v19 + 40) = a2;
      uint64_t v7 = a3;
      if (v8 == v11) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C11E8C0C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1C0153EDC();
    swift_allocObject();
    return sub_1C151911C();
  }
  else
  {
    sub_1C0153EDC();
    swift_allocObject();
    return sub_1C151908C();
  }
}

uint64_t sub_1C11E8CE4(uint64_t a1, void *a2)
{
  sub_1BFC9DBE8(0, &qword_1EB87A1E0);
  sub_1C151932C();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  id v5 = a2;
  id v6 = (void *)sub_1C1518E7C();
  sub_1C11EC544(0, &qword_1EB85F228, MEMORY[0x1E4FBAEA0]);
  uint64_t v7 = sub_1C151900C();
  swift_release();
  swift_release();

  return v7;
}

uint64_t sub_1C11E8DFC()
{
  return sub_1C151911C();
}

uint64_t sub_1C11E8E60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5, char a6, char a7, void *a8)
{
  return HeadlineService.fetchHeadlines(forTagID:maxCount:dateRange:requestType:includePaidArticles:cachedOnly:purpose:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C11E8E84(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  sub_1C11EBD9C(a1, a2, a3, 0, a5, 1);
  *(void *)(swift_allocObject() + 16) = a5;
  id v6 = a5;
  uint64_t v7 = (void *)sub_1C1518E7C();
  sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
  uint64_t v8 = sub_1C151900C();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_1C11E8F74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  return sub_1C11EBD9C(a1, a2, a3, a5, a6, a7);
}

uint64_t sub_1C11E8FA4(unint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  return HeadlineService.fetchFeedHeadlines(forTags:maxCount:dateRange:fromFeedBin:cachePolicy:purpose:log:)(a1, a2, a3, a4, a5, a6);
}

uint64_t HeadlineService.fetchFeedHeadlines(forTags:maxCount:dateRange:fromFeedBin:cachePolicy:purpose:log:)(unint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    if (v7)
    {
LABEL_3:
      uint64_t v8 = 0;
      unint64_t v64 = (void *)MEMORY[0x1E4FBC868];
      while (2)
      {
        uint64_t v9 = v8;
        while (1)
        {
          if ((a1 & 0xC000000000000001) != 0)
          {
            uint64_t v10 = (void *)MEMORY[0x1C18C7CB0](v9, a1);
            uint64_t v8 = v9 + 1;
            if (__OFADD__(v9, 1)) {
              goto LABEL_25;
            }
          }
          else
          {
            uint64_t v10 = *(void **)(a1 + 8 * v9 + 32);
            swift_unknownObjectRetain();
            uint64_t v8 = v9 + 1;
            if (__OFADD__(v9, 1))
            {
LABEL_25:
              __break(1u);
              goto LABEL_26;
            }
          }
          id v11 = objc_msgSend(v10, sel_feedIDForBin_, a4, v57);
          if (v11) {
            break;
          }
          sub_1BFFDEB20();
          uint64_t v12 = swift_allocObject();
          *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
          id v13 = objc_msgSend(v10, sel_identifier);
          uint64_t v14 = sub_1C151E62C();
          uint64_t v16 = v15;

          *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v12 + 64) = sub_1BFE9C558();
          *(void *)(v12 + 32) = v14;
          *(void *)(v12 + 40) = v16;
          sub_1C151F38C();
          sub_1C15197BC();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          ++v9;
          if (v8 == v7) {
            goto LABEL_28;
          }
        }
        unint64_t v17 = v11;
        uint64_t v18 = sub_1C151E62C();
        uint64_t v58 = v19;
        uint64_t v59 = v18;

        id v20 = objc_msgSend(v10, sel_identifier);
        uint64_t v21 = sub_1C151E62C();
        uint64_t v23 = v22;

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v57 = v21;
        uint64_t v25 = v21;
        uint64_t v26 = v23;
        unint64_t v28 = sub_1BFEF2D8C(v25, v23);
        uint64_t v29 = v64[2];
        BOOL v30 = (v27 & 1) == 0;
        uint64_t v31 = v29 + v30;
        if (__OFADD__(v29, v30))
        {
          __break(1u);
        }
        else
        {
          char v32 = v27;
          if (v64[3] >= v31)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1C106AFB0();
            }
          }
          else
          {
            sub_1C105548C(v31, isUniquelyReferenced_nonNull_native);
            unint64_t v33 = sub_1BFEF2D8C(v57, v26);
            if ((v32 & 1) != (v34 & 1))
            {
LABEL_34:
              uint64_t result = sub_1C1520CFC();
              __break(1u);
              return result;
            }
            unint64_t v28 = v33;
          }
          if (v32)
          {
            uint64_t v35 = (uint64_t *)(v64[7] + 16 * v28);
            swift_bridgeObjectRelease();
            *uint64_t v35 = v59;
            v35[1] = v58;
            goto LABEL_23;
          }
          v64[(v28 >> 6) + 8] |= 1 << v28;
          uint64_t v36 = (uint64_t *)(v64[6] + 16 * v28);
          *uint64_t v36 = v57;
          v36[1] = v26;
          uint64_t v37 = (uint64_t *)(v64[7] + 16 * v28);
          *uint64_t v37 = v59;
          v37[1] = v58;
          uint64_t v38 = v64[2];
          BOOL v39 = __OFADD__(v38, 1);
          uint64_t v40 = v38 + 1;
          if (!v39)
          {
            v64[2] = v40;
            swift_bridgeObjectRetain();
LABEL_23:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v8 != v7) {
              continue;
            }
            goto LABEL_28;
          }
        }
        break;
      }
      __break(1u);
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
  }
  unint64_t v64 = (void *)MEMORY[0x1E4FBC868];
LABEL_28:
  swift_bridgeObjectRelease();
  sub_1BFFDEB20();
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1C152C7F0;
  uint64_t v42 = MEMORY[0x1E4FBB550];
  uint64_t v43 = MEMORY[0x1E4FBB5C8];
  uint64_t v44 = v64[2];
  *(void *)(v41 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v41 + 64) = v43;
  *(void *)(v41 + 32) = v44;
  objc_msgSend(a3, sel_absoluteTimeInterval);
  uint64_t v45 = MEMORY[0x1E4FBB460];
  *(void *)(v41 + 96) = MEMORY[0x1E4FBB3D0];
  *(void *)(v41 + 104) = v45;
  *(void *)(v41 + 72) = v46;
  *(void *)(v41 + 136) = v42;
  *(void *)(v41 + 144) = v43;
  *(void *)(v41 + 112) = a2;
  sub_1C151F38C();
  sub_1C15197BC();
  uint64_t v47 = swift_bridgeObjectRelease();
  if (v64[2])
  {
    MEMORY[0x1F4188790](v47);
    uint64_t v49 = v48;
    sub_1C1078AA4();
    sub_1C151932C();
    uint64_t v50 = (void *)sub_1C1518E7C();
    sub_1C11EBF98();
    sub_1C151916C();
    swift_release();

    BOOL v51 = (void *)swift_allocObject();
    v51[2] = a5;
    v51[3] = a6;
    v51[4] = v49;
    id v52 = a5;
    id v53 = a6;
    unint64_t v54 = (void *)sub_1C1518E7C();
    sub_1C015192C();
    uint64_t v55 = sub_1C151900C();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C018D180(MEMORY[0x1E4FBC860]);
    sub_1C11EBBE4(0, &qword_1EB885068, (uint64_t (*)(uint64_t))sub_1C015192C, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  return v55;
}

uint64_t sub_1C11E95CC(unint64_t a1)
{
  return HeadlineService.fetchHeadlines(forFeedItems:feedContextByFeedID:feedItemScoreProfiles:feedPersonalizer:configuration:purpose:)(a1);
}

uint64_t sub_1C11E95F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = qword_1EB896238;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_1EB93CBC8;
  sub_1BFFDEB20();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
  id v18 = v16;
  uint64_t v19 = MEMORY[0x1E4FBB1A0];
  uint64_t v20 = MEMORY[0x1C18C6710](a5, MEMORY[0x1E4FBB1A0]);
  uint64_t v22 = v21;
  *(void *)(v17 + 56) = v19;
  *(void *)(v17 + 64) = sub_1BFE9C558();
  *(void *)(v17 + 32) = v20;
  *(void *)(v17 + 40) = v22;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E570]), sel_init);
  unint64_t v24 = (void *)sub_1C151EBAC();
  objc_msgSend(v23, sel_setArticleListIDs_, v24);

  objc_msgSend(v23, sel_setContext_, *(void *)(a6 + 64));
  objc_msgSend(v23, sel_setConfiguration_, a7);
  objc_msgSend(v23, sel_setPurpose_, a8);
  id v25 = objc_msgSend(self, sel_ignoreCacheCachePolicy);
  objc_msgSend(v23, sel_setCachePolicyForArticleLists_, v25);

  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = sub_1BFD35658;
  v26[3] = v14;
  v26[4] = a3;
  v26[5] = a4;
  aBlock[4] = sub_1C11EC51C;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C11EA004;
  aBlock[3] = &block_descriptor_79;
  char v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_setHeadlinesCompletionHandler_, v27);
  _Block_release(v27);
  sub_1C15182FC();
  sub_1C15182BC();
  if (objc_msgSend(self, sel_isMainThread)) {
    sub_1C15182DC();
  }
  else {
    objc_msgSend(v23, sel_start);
  }

  return swift_release();
}

void sub_1C11E9914(uint64_t a1, uint64_t a2, int a3, id a4, void (*a5)(void), uint64_t a6, void (*a7)(void))
{
  if (a1 && a2)
  {
    MEMORY[0x1F4188790](a1);
    uint64_t v18 = sub_1C11EB73C(v10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C11EC528);
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    uint64_t v19 = (void *)qword_1EB93CBC8;
    sub_1BFFDEB20();
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
    sub_1C11EBBE4(0, &qword_1EB860D50, (uint64_t (*)(uint64_t))sub_1C0607734, MEMORY[0x1E4FBB718]);
    uint64_t v22 = v21;
    id v23 = v19;
    uint64_t v24 = MEMORY[0x1C18C6710](v18, v22);
    uint64_t v26 = v25;
    *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v20 + 64) = sub_1BFE9C558();
    *(void *)(v20 + 32) = v24;
    *(void *)(v20 + 40) = v26;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v18 + 16);
    if (v27)
    {
      uint64_t v38 = a5;
      swift_bridgeObjectRetain();
      unint64_t v28 = (uint64_t *)(v18 + 40);
      uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v31 = (void *)*(v28 - 1);
        if (v31)
        {
          uint64_t v32 = *v28;
          id v33 = v31;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v29 = sub_1C0EE8A0C(0, v29[2] + 1, 1, v29);
          }
          unint64_t v35 = v29[2];
          unint64_t v34 = v29[3];
          if (v35 >= v34 >> 1) {
            uint64_t v29 = sub_1C0EE8A0C((void *)(v34 > 1), v35 + 1, 1, v29);
          }
          v29[2] = v35 + 1;
          BOOL v30 = &v29[2 * v35];
          v30[4] = v33;
          v30[5] = v32;
        }
        v28 += 2;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      a5 = v38;
    }
    else
    {
      uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    if (v29[2])
    {
      sub_1C11EC544(0, (unint64_t *)&qword_1EB860D90, MEMORY[0x1E4FBBD58]);
      uint64_t v36 = sub_1C152050C();
    }
    else
    {
      uint64_t v36 = MEMORY[0x1E4FBC868];
    }
    uint64_t v39 = v36;
    uint64_t v37 = (void *)swift_bridgeObjectRetain();
    sub_1C11EB1C4(v37, 1, &v39);
    swift_bridgeObjectRelease();
    a5(v39);
    swift_release();
  }
  else if (a4)
  {
    id v11 = a4;
    sub_1C151F36C();
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_1EB93CBC8;
    sub_1BFFDEB20();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    id v14 = v12;
    sub_1C152036C();
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v13 + 64) = sub_1BFE9C558();
    *(void *)(v13 + 32) = 0;
    *(void *)(v13 + 40) = 0xE000000000000000;
    sub_1C15197CC();

    swift_bridgeObjectRelease();
    ((void (*)(id))a7)(a4);
  }
  else
  {
    sub_1C151F36C();
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    id v15 = (id)qword_1EB93CBC8;
    sub_1C15197CC();

    sub_1C11EC320();
    uint64_t v16 = (void *)swift_allocError();
    *(void *)uint64_t v17 = 0xD00000000000004CLL;
    *(void *)(v17 + 8) = 0x80000001C1637910;
    *(unsigned char *)(v17 + 16) = 1;
    a7();
  }
}

id sub_1C11E9E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1BFEF2D8C(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1C15200FC();
    sub_1C151E80C();
    sub_1C151E80C();
    sub_1C151E80C();
    sub_1BFC39268(0, &qword_1EB85F200);
    sub_1C151E34C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    id v9 = 0;
    sub_1C11EC320();
    swift_allocError();
    *(void *)uint64_t v10 = 0;
    *(void *)(v10 + 8) = 0xE000000000000000;
    *(unsigned char *)(v10 + 16) = 1;
    swift_willThrow();
    return v9;
  }
  id v9 = *(id *)(*(void *)(a4 + 56) + 8 * v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t sub_1C11EA004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = a2;
  id v9 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
    uint64_t v8 = sub_1C151E33C();
  }
  if (a3)
  {
    sub_1BFC39268(0, &qword_1EB85F200);
    a3 = sub_1C151E33C();
  }
  if (a4)
  {
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB895E90);
    a4 = sub_1C151E33C();
  }
  swift_retain();
  id v10 = a5;
  v9(v8, a3, a4, a5);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11EA174(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  swift_bridgeObjectRetain();
  id v10 = sub_1C00B2284(a2);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1C11EBD9C((uint64_t)v10, a3, a4, 0, a6, 1);
  swift_release();
  return v11;
}

uint64_t sub_1C11EA210(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v48 = v5 & 0xC000000000000001;
      unint64_t v7 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v8 = 4;
      uint64_t v46 = v6;
      uint64_t v47 = v5;
      while (1)
      {
        if (v48) {
          id v11 = (id)MEMORY[0x1C18C7CB0](v8 - 4, v5);
        }
        else {
          id v11 = *(id *)(v5 + 8 * v8);
        }
        uint64_t v12 = v11;
        uint64_t v10 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        id v13 = objc_msgSend(v11, sel_identifier);
        uint64_t v14 = sub_1C151E62C();
        uint64_t v16 = v15;

        id v17 = objc_msgSend(v12, sel_feedID);
        if (!v17)
        {
          uint64_t v30 = v14;
          uint64_t v31 = v5;
          swift_bridgeObjectRetain();
          unint64_t v32 = sub_1BFEF2D8C(v30, v16);
          char v34 = v33;
          swift_bridgeObjectRelease();
          if (v34)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1C106AFB0();
            }
            swift_bridgeObjectRelease();
            sub_1C091D5A0(v32, (uint64_t)v7);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
          }
          swift_bridgeObjectRelease();
          uint64_t v5 = v31;
          goto LABEL_6;
        }
        uint64_t v18 = v17;
        uint64_t v49 = v12;
        uint64_t v19 = sub_1C151E62C();
        uint64_t v50 = v20;

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v5 = v14;
        unint64_t v23 = sub_1BFEF2D8C(v14, v16);
        uint64_t v24 = v7[2];
        BOOL v25 = (v22 & 1) == 0;
        uint64_t v26 = v24 + v25;
        if (__OFADD__(v24, v25)) {
          goto LABEL_30;
        }
        char v27 = v22;
        if (v7[3] >= v26)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v22 & 1) == 0) {
              goto LABEL_23;
            }
          }
          else
          {
            sub_1C106AFB0();
            if ((v27 & 1) == 0) {
              goto LABEL_23;
            }
          }
        }
        else
        {
          sub_1C105548C(v26, isUniquelyReferenced_nonNull_native);
          unint64_t v28 = sub_1BFEF2D8C(v14, v16);
          if ((v27 & 1) != (v29 & 1))
          {
            uint64_t result = sub_1C1520CFC();
            __break(1u);
            return result;
          }
          unint64_t v23 = v28;
          if ((v27 & 1) == 0)
          {
LABEL_23:
            v7[(v23 >> 6) + 8] |= 1 << v23;
            unint64_t v35 = (uint64_t *)(v7[6] + 16 * v23);
            *unint64_t v35 = v14;
            v35[1] = v16;
            uint64_t v36 = (uint64_t *)(v7[7] + 16 * v23);
            *uint64_t v36 = v19;
            v36[1] = v50;
            uint64_t v37 = v7[2];
            BOOL v38 = __OFADD__(v37, 1);
            uint64_t v39 = v37 + 1;
            if (v38) {
              goto LABEL_31;
            }
            v7[2] = v39;
            swift_bridgeObjectRetain();
            goto LABEL_5;
          }
        }
        id v9 = (uint64_t *)(v7[7] + 16 * v23);
        swift_bridgeObjectRelease();
        *id v9 = v19;
        v9[1] = v50;
LABEL_5:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = v46;
        uint64_t v5 = v47;
        uint64_t v10 = v8 - 3;
LABEL_6:
        ++v8;
        if (v10 == v6) {
          goto LABEL_34;
        }
      }
    }
  }
  unint64_t v7 = (void *)MEMORY[0x1E4FBC868];
LABEL_34:
  uint64_t v40 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v40);
  sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
  sub_1C151932C();
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v7;
  *(void *)(v41 + 24) = a5;
  swift_bridgeObjectRetain();
  uint64_t v42 = (void *)sub_1C1518E7C();
  sub_1C015192C();
  uint64_t v43 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v43;
}

uint64_t sub_1C11EA68C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C00B152C(a2);
  uint64_t v4 = swift_bridgeObjectRelease();
  if (*(void *)(v3 + 16))
  {
    MEMORY[0x1F4188790](v4);
    sub_1C0153EDC();
    swift_allocObject();
    uint64_t v5 = sub_1C151911C();
  }
  else
  {
    sub_1C0153EDC();
    swift_allocObject();
    uint64_t v5 = sub_1C151908C();
  }
  swift_release();
  return v5;
}

uint64_t sub_1C11EA7BC@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  sub_1BFECEF3C(0, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
  sub_1C0153F9C();
  uint64_t v6 = sub_1C151E93C();
  uint64_t v4 = sub_1C11E48D0(a1, &v6);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1C11EA8A8@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v5 = objc_msgSend(*a1, sel_identifier);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  if (*(void *)(a2 + 16) && (unint64_t v9 = sub_1BFEF2D8C(v6, v8), (v10 & 1) != 0))
  {
    id v11 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v9);
    uint64_t v13 = *v11;
    unint64_t v12 = v11[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v12 = 0xE000000000000000;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v13;
  a3[1] = v12;
  return result;
}

void sub_1C11EA94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = qword_1EB896238;
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_1EB93CBC8;
  sub_1BFFDEB20();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
  uint64_t v20 = sub_1BFC39268(0, &qword_1EB871068);
  id v21 = v18;
  uint64_t v22 = MEMORY[0x1C18C6710](a5, v20);
  uint64_t v24 = v23;
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 64) = sub_1BFE9C558();
  *(void *)(v19 + 32) = v22;
  *(void *)(v19 + 40) = v24;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E440]), sel_init);
  objc_msgSend(v25, sel_setPurpose_, a6);
  uint64_t v26 = *(void *)(a7 + 64);
  objc_msgSend(v25, sel_setContext_, v26);
  objc_msgSend(v25, sel_setConfiguration_, a8);
  char v27 = (void *)sub_1C151EBAC();
  objc_msgSend(v25, sel_setFeedRequests_, v27);

  objc_msgSend(v25, sel_setEdgeCacheHint_, a9);
  objc_msgSend(v25, sel_setOptions_, 14);
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C15320E0;
  *(void *)(v28 + 32) = objc_msgSend(self, sel_transformationWithFilterOptions_configuration_context_, a10, a8, v26);
  sub_1C151EBEC();
  sub_1BFC9DBE8(0, (unint64_t *)&unk_1EB8901D0);
  char v29 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setFeedTransformations_, v29);

  uint64_t v30 = (void *)swift_allocObject();
  void v30[2] = a3;
  v30[3] = a4;
  v30[4] = sub_1C03CD68C;
  v30[5] = v16;
  v30[6] = a5;
  aBlock[4] = sub_1C11EC3BC;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C11EB0E4;
  aBlock[3] = &block_descriptor_49;
  uint64_t v31 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v25, sel_setRequestCompletionHandler_, v31);
  _Block_release(v31);
  objc_msgSend(v25, sel_start);
}

void sub_1C11EAD10(int a1, unint64_t a2, id a3, void (*a4)(void), uint64_t a5, void (*a6)(unint64_t), uint64_t a7, uint64_t a8)
{
  if (a3)
  {
    id v10 = a3;
    sub_1C151F36C();
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    id v11 = (void *)qword_1EB93CBC8;
    sub_1BFFDEB20();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    id v13 = v11;
    sub_1C152036C();
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 64) = sub_1BFE9C558();
    *(void *)(v12 + 32) = 0;
    *(void *)(v12 + 40) = 0xE000000000000000;
    sub_1C15197CC();

    swift_bridgeObjectRelease();
    ((void (*)(id))a4)(a3);
  }
  else if (a2)
  {
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    uint64_t v16 = (void *)qword_1EB93CBC8;
    sub_1BFFDEB20();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
    id v18 = v16;
    sub_1C11E4738(a2);
    uint64_t v19 = MEMORY[0x1E4FBB1A0];
    uint64_t v20 = MEMORY[0x1C18C6710]();
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    *(void *)(v17 + 56) = v19;
    *(void *)(v17 + 64) = sub_1BFE9C558();
    *(void *)(v17 + 32) = v20;
    *(void *)(v17 + 40) = v22;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    a6(a2);
  }
  else
  {
    sub_1C151F36C();
    if (qword_1EB896238 != -1) {
      swift_once();
    }
    id v24 = (id)qword_1EB93CBC8;
    sub_1C15197CC();

    sub_1C15200FC();
    sub_1C151E80C();
    uint64_t v25 = sub_1BFC39268(0, &qword_1EB871068);
    MEMORY[0x1C18C6710](a8, v25);
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C11EC320();
    uint64_t v26 = (void *)swift_allocError();
    *(void *)uint64_t v27 = 0;
    *(void *)(v27 + 8) = 0xE000000000000000;
    *(unsigned char *)(v27 + 16) = 1;
    a4();
  }
}

uint64_t sub_1C11EB0E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BFC39268(0, (unint64_t *)&unk_1EB871078);
    uint64_t v6 = sub_1C151EBCC();
  }
  if (a3)
  {
    sub_1BFC39268(0, &qword_1EB87A0C0);
    a3 = sub_1C151EBCC();
  }
  swift_retain();
  id v8 = a4;
  v7(v6, a3, a4);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C11EB1C4(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = (void *)a1[4];
  uint64_t v8 = a1[5];
  swift_bridgeObjectRetain();
  uint64_t v42 = v7;
  unint64_t v9 = (void *)*a3;
  id v10 = v7;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1C1052958((uint64_t)v10);
  uint64_t v13 = v9[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (v9[3] >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C1074D9C();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    uint64_t v22 = 8 * v12;
    *(void *)(v21[6] + v22) = v10;
    *(void *)(v21[7] + v22) = v8;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v21[2] = v25;
    uint64_t v26 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v27 = a1 + 7;
    while (1)
    {
      uint64_t v28 = *v27;
      uint64_t v42 = (void *)*(v27 - 1);
      char v29 = (void *)*a3;
      id v30 = v42;
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_1C1052958((uint64_t)v30);
      uint64_t v33 = v29[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v24 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v24) {
        break;
      }
      char v36 = v32;
      if (v29[3] < v35)
      {
        sub_1C1064100(v35, 1);
        unint64_t v31 = sub_1C1052958((uint64_t)v30);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      BOOL v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = 8 * v31;
      *(void *)(v38[6] + v39) = v30;
      *(void *)(v38[7] + v39) = v28;
      uint64_t v40 = v38[2];
      BOOL v24 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v24) {
        goto LABEL_24;
      }
      v38[2] = v41;
      v27 += 2;
      if (!--v26) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1C1064100(v15, a2 & 1);
  unint64_t v17 = sub_1C1052958((uint64_t)v10);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1BFC39268(0, &qword_1EB85F200);
  sub_1C1520CFC();
  __break(1u);
LABEL_26:
  sub_1C15200FC();
  sub_1C151E80C();
  sub_1BFC39268(0, &qword_1EB85F200);
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C11EB574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v8 = self;
    uint64_t v9 = a1 + 40;
    while (1)
    {
      id v10 = objc_allocWithZone(MEMORY[0x1E4F7E438]);
      swift_bridgeObjectRetain();
      id v11 = objc_msgSend(v10, sel_init);
      unint64_t v12 = (void *)sub_1C151E5EC();
      objc_msgSend(v11, sel_setFeedID_, v12);

      id v13 = objc_msgSend(v8, sel_feedRangeFromDateRange_, a2);
      objc_msgSend(v11, sel_setFeedRange_, v13);

      if (a3 < 0) {
        break;
      }
      v9 += 16;
      objc_msgSend(v11, sel_setMaxCount_, a3);
      swift_bridgeObjectRelease();
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      if (!--v4) {
        return v14;
      }
    }
    uint64_t result = sub_1C15203FC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C11EB73C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v6 = a1;
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1C05F88D4(0, v4, 0);
  uint64_t v5 = v38;
  uint64_t result = sub_1BFEABF78(v6);
  uint64_t v9 = result;
  uint64_t v10 = 0;
  uint64_t v11 = v6 + 64;
  uint64_t v31 = v6 + 80;
  int64_t v32 = v4;
  uint64_t v34 = v6 + 64;
  uint64_t v35 = v6;
  int v33 = v8;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v6 + 32))
  {
    unint64_t v14 = (unint64_t)v9 >> 6;
    if ((*(void *)(v11 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(v6 + 36) != v8) {
      goto LABEL_26;
    }
    uint64_t v37 = v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v9);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(v6 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = a2(v16, v17, v18);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    uint64_t v21 = v19;
    uint64_t v22 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v24 = *(void *)(v38 + 16);
    unint64_t v23 = *(void *)(v38 + 24);
    if (v24 >= v23 >> 1) {
      uint64_t result = sub_1C05F88D4(v23 > 1, v24 + 1, 1);
    }
    *(void *)(v38 + 16) = v24 + 1;
    uint64_t v25 = v38 + 16 * v24;
    *(void *)(v25 + 32) = v21;
    *(void *)(v25 + 40) = v22;
    uint64_t v6 = v35;
    int64_t v12 = 1 << *(unsigned char *)(v35 + 32);
    if (v9 >= v12) {
      goto LABEL_27;
    }
    uint64_t v11 = v34;
    uint64_t v26 = *(void *)(v34 + 8 * v14);
    if ((v26 & (1 << v9)) == 0) {
      goto LABEL_28;
    }
    int v8 = v33;
    if (*(_DWORD *)(v35 + 36) != v33) {
      goto LABEL_29;
    }
    unint64_t v27 = v26 & (-2 << (v9 & 0x3F));
    if (v27)
    {
      int64_t v12 = __clz(__rbit64(v27)) | v9 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v3 = 0;
      int64_t v13 = v32;
    }
    else
    {
      unint64_t v28 = v14 + 1;
      unint64_t v29 = (unint64_t)(v12 + 63) >> 6;
      uint64_t v3 = 0;
      int64_t v13 = v32;
      if (v14 + 1 < v29)
      {
        unint64_t v30 = *(void *)(v34 + 8 * v28);
        if (v30)
        {
LABEL_21:
          int64_t v12 = __clz(__rbit64(v30)) + (v28 << 6);
        }
        else
        {
          while (v29 - 2 != v14)
          {
            unint64_t v30 = *(void *)(v31 + 8 * v14++);
            if (v30)
            {
              unint64_t v28 = v14 + 1;
              goto LABEL_21;
            }
          }
        }
      }
    }
    uint64_t v10 = v37 + 1;
    uint64_t v9 = v12;
    if (v37 + 1 == v13) {
      return v5;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed19HeadlineServiceTypePAAE9headlines3for7purpose13TeaFoundation7PromiseCySaySo19FCHeadlineProviding_pGGSaySSG_So18FCOperationPurposeatF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(self, sel_defaultCachePolicy);
  uint64_t v9 = FCCurrentQoSOrUtilityIfMain();
  uint64_t v10 = (*(uint64_t (**)(uint64_t, void, id, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(a1, 0, v8, a2, v9, a3, a4);

  return v10;
}

uint64_t sub_1C11EBA60()
{
  return sub_1C11E551C(v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[2], v0[3]);
}

uint64_t sub_1C11EBA88()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C11EBAC0(uint64_t *a1)
{
  return sub_1C11E5D34(a1, v1);
}

id sub_1C11EBAE0()
{
  return sub_1C11E86D8(v0);
}

uint64_t sub_1C11EBB00(uint64_t a1, uint64_t a2)
{
  return sub_1C11E6818(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1C11EBB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C11E6950(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

uint64_t sub_1C11EBB28()
{
  return sub_1C11E7334(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C11EBB48()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C11EBB98(uint64_t *a1, uint64_t a2)
{
  return sub_1C11E7404(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56), *(unsigned char *)(v2 + 64), *(unsigned char *)(v2 + 65), *(void **)(v2 + 72));
}

void sub_1C11EBBE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C11EBC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C11E82A0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64));
}

uint64_t sub_1C11EBC80(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_defaultCachePolicy);
  uint64_t v3 = FCCurrentQoSOrUtilityIfMain();
  if (*(void *)(a1 + 16))
  {
    MEMORY[0x1F4188790](v3);
    sub_1C0153EDC();
    swift_allocObject();
    uint64_t v4 = sub_1C151911C();
  }
  else
  {
    sub_1C0153EDC();
    swift_allocObject();
    uint64_t v4 = sub_1C151908C();
  }

  return v4;
}

uint64_t sub_1C11EBD9C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  if (*(void *)(a1 + 16))
  {
    sub_1BFC9DBE8(0, &qword_1EB87A1E0);
    sub_1C151932C();
    int64_t v12 = (void *)swift_allocObject();
    _OWORD v12[2] = a1;
    v12[3] = a3;
    v12[4] = a2;
    v12[5] = a4;
    v12[6] = a5;
    v12[7] = a6;
    id v13 = a4;
    id v14 = a5;
    swift_bridgeObjectRetain();
    id v15 = a3;
    uint64_t v16 = (void *)sub_1C1518E7C();
    sub_1C1078AA4();
    uint64_t v17 = sub_1C151900C();
    swift_release();
    swift_release();

    return v17;
  }
  else
  {
    sub_1C11EBBE4(0, &qword_1EB8707C0, (uint64_t (*)(uint64_t))sub_1C1078AA4, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
}

id sub_1C11EBF58(uint64_t *a1, uint64_t a2)
{
  return sub_1C11E8A50(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1C11EBF74()
{
  return sub_1C11EA174(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56));
}

unint64_t sub_1C11EBF98()
{
  unint64_t result = qword_1EB8701B8;
  if (!qword_1EB8701B8)
  {
    sub_1C1078AA4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8701B8);
  }
  return result;
}

uint64_t sub_1C11EBFF0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C11EC038(uint64_t *a1, uint64_t a2)
{
  return sub_1C11EA210(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t dispatch thunk of HeadlineServiceType.headlines(for:failIfAnyMissing:cachePolicy:purpose:qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of HeadlineServiceType.fetchHeadlines(from:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of HeadlineServiceType.fetchHeadlines(for:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of HeadlineServiceType.fetchHeadlines(forTagID:maxCount:dateRange:requestType:includePaidArticles:cachedOnly:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 32))();
}

uint64_t dispatch thunk of HeadlineServiceType.fetchHeadlines(forFeedIDs:maxCount:dateRange:fromFeedBin:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 40))();
}

uint64_t dispatch thunk of HeadlineServiceType.fetchFeeds(forFeedIDs:maxCount:dateRange:fromFeedBin:edgeCacheHint:purpose:filterOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 48))();
}

uint64_t dispatch thunk of HeadlineServiceType.fetchFeedHeadlines(forTags:maxCount:dateRange:fromFeedBin:cachePolicy:purpose:log:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 56))();
}

uint64_t dispatch thunk of HeadlineServiceType.fetchHeadlines(forFeedItems:feedContextByFeedID:feedItemScoreProfiles:feedPersonalizer:configuration:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 64))();
}

uint64_t method lookup function for HeadlineService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HeadlineService);
}

uint64_t dispatch thunk of HeadlineService.__allocating_init(tagService:coreConfigurationManager:cloudContext:paidAccessChecker:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C11EC13C()
{
  return swift_deallocObject();
}

uint64_t sub_1C11EC178()
{
  return sub_1C11EA68C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C11EC198()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C11EC1D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C11EA7BC(*(void *)(v1 + 24), a1);
}

uint64_t sub_1C11EC1F4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_1C11EA8A8(a1, *(void *)(v2 + 16), a2);
}

void sub_1C11EC1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C11E5EF8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void **)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(unsigned char *)(v4 + 56));
}

uint64_t sub_1C11EC234()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C11EC284(uint64_t a1, uint64_t a2)
{
  return sub_1C11E8774(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1C11EC2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C11EA94C(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]);
}

uint64_t sub_1C11EC2D8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C11EC314(uint64_t a1, void *a2)
{
  sub_1C11E8578(a1, a2, *(void (**)(uint64_t, id))(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t))(v2 + 32));
}

unint64_t sub_1C11EC320()
{
  unint64_t result = qword_1EB861390;
  if (!qword_1EB861390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB861390);
  }
  return result;
}

uint64_t sub_1C11EC374()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C11EC3BC(int a1, unint64_t a2, void *a3)
{
  sub_1C11EAD10(a1, a2, a3, *(void (**)(void))(v3 + 16), *(void *)(v3 + 24), *(void (**)(unint64_t))(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
}

uint64_t sub_1C11EC3CC()
{
  return sub_1C11E7F80(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1C11EC3EC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C11EC434(uint64_t *a1)
{
  return HeadlineService.fetchFeed(for:maxCount:dateRange:coreConfiguration:includePaidArticles:cachedOnly:purpose:filterOptions:)(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *a1, *(unsigned char *)(v1 + 40), *(unsigned char *)(v1 + 41));
}

void sub_1C11EC48C(uint64_t a1, void *a2)
{
  sub_1C11E6C54(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

uint64_t sub_1C11EC498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C11E95F0(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

void sub_1C11EC4A4()
{
  if (!qword_1EB85F308)
  {
    sub_1C11EC544(255, &qword_1EB85F228, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85F308);
    }
  }
}

void sub_1C11EC51C(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  sub_1C11E9914(a1, a2, a3, a4, *(void (**)(void))(v4 + 16), *(void *)(v4 + 24), *(void (**)(void))(v4 + 32));
}

id sub_1C11EC528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C11E9E6C(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_1C11EC544(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1BFC39268(255, &qword_1EB85F200);
    sub_1BFECEF3C(255, (unint64_t *)&qword_1EB895E80, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, MEMORY[0x1E4FBB320]);
    uint64_t v8 = v7;
    uint64_t v9 = sub_1C00BC034((unint64_t *)&qword_1EB85F230, &qword_1EB85F200);
    unint64_t v10 = a3(a1, v6, v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C11EC624()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C11EC664(void *a1)
{
  sub_1C11E633C(a1, *(unsigned char *)(v1 + 16), *(void (**)())(v1 + 24), *(void *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

id sub_1C11EC678(id result, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return (id)swift_bridgeObjectRetain();
  }
  if (!a3) {
    return result;
  }
  return result;
}

void destroy for HeadlineServiceErrors(uint64_t a1)
{
}

void sub_1C11EC6A8(void *a1, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a3)
  {
  }
}

uint64_t _s8NewsFeed21HeadlineServiceErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C11EC678(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for HeadlineServiceErrors(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C11EC678(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C11EC6A8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for HeadlineServiceErrors(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C11EC6A8(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for HeadlineServiceErrors()
{
  return &type metadata for HeadlineServiceErrors;
}

uint64_t sub_1C11EC7E8(uint64_t a1, uint64_t a2)
{
  return sub_1C11EBB00(a1, a2);
}

id sub_1C11EC80C(uint64_t *a1, uint64_t a2)
{
  return sub_1C11EBF58(a1, a2);
}

uint64_t PuzzleAccessProvider.userHasAccess(puzzle:)(void *a1)
{
  PuzzleAccessProvider.puzzleAccessState(puzzle:)(a1, &v4);
  if (v4 && v4 != 1)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v1 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v2 = v1 ^ 1;
  }
  return v2 & 1;
}

void PuzzleAccessProvider.puzzleAccessState(puzzle:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = (char *)objc_msgSend(*(id *)(v2 + 16), sel_cachedSubscription);
  if (objc_getAssociatedObject(v5, v5 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v20, (uint64_t)v22);
  if (v23)
  {
    sub_1BFFBE2BC();
    if (swift_dynamicCast())
    {
      char v6 = v19;
      unint64_t v7 = (unint64_t)objc_msgSend(v19, sel_integerValue);
      if (v7 == -1) {
        goto LABEL_17;
      }
      goto LABEL_10;
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)v22);
  }
  char v6 = 0;
  unint64_t v7 = 0;
LABEL_10:
  if (objc_getAssociatedObject(v5, (const void *)~v7))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v20, (uint64_t)v22);
  if (v23)
  {
    sub_1BFFBE2BC();
    if (swift_dynamicCast())
    {
      id v8 = v19;
      unsigned __int8 v9 = objc_msgSend(v8, sel_integerValue);

      char v10 = v9 - 59;
      goto LABEL_18;
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)v22);
  }
LABEL_17:

  char v10 = -59;
LABEL_18:
  uint64_t v11 = *(void **)(v2 + 24);
  if ((objc_msgSend(a1, sel_isPaid) & 1) == 0) {
    goto LABEL_39;
  }
  int64_t v12 = (char *)objc_msgSend(objc_msgSend(v11, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v12, v12 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v20, (uint64_t)v22);
  if (!v23)
  {
    sub_1BFEFE4A0((uint64_t)v22);
    goto LABEL_27;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_27:
    id v13 = 0;
    unint64_t v15 = 0;
    goto LABEL_28;
  }
  id v13 = v19;
  id v14 = objc_msgSend(v19, sel_integerValue);
  if (v14 == (id)-1)
  {

    goto LABEL_39;
  }
  unint64_t v15 = (unint64_t)v14;
LABEL_28:
  if (objc_getAssociatedObject(v12, (const void *)~v15))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v20, (uint64_t)v22);
  if (!v23)
  {
    sub_1BFEFE4A0((uint64_t)v22);
LABEL_36:

    if ((v15 & 1) == 0) {
      goto LABEL_37;
    }
LABEL_39:
    char v18 = (((v7 + 1) ^ v10) & 1) == 0;
    goto LABEL_40;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_36;
  }
  id v16 = v19;
  unsigned int v17 = objc_msgSend(v16, sel_integerValue);

  if ((v17 ^ v15)) {
    goto LABEL_39;
  }
LABEL_37:
  char v18 = 2;
LABEL_40:
  *a2 = v18;
}

uint64_t PuzzleAccessProvider.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t PuzzleAccessProvider.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C11ECCD0(void *a1)
{
  return PuzzleAccessProvider.userHasAccess(puzzle:)(a1) & 1;
}

void sub_1C11ECCF8(void *a1@<X0>, char *a2@<X8>)
{
}

uint64_t dispatch thunk of PuzzleAccessProviderType.userHasAccess(puzzle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of PuzzleAccessProviderType.puzzleAccessState(puzzle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for PuzzleAccessProvider()
{
  return self;
}

uint64_t method lookup function for PuzzleAccessProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleAccessProvider);
}

void FCReadingHistory.toggleLikeStatus(for:)(void *a1)
{
}

void FCReadingHistory.toggleDislikeStatus(for:)(void *a1)
{
}

void sub_1C11ECD98(void *a1, SEL *a2)
{
  id v4 = objc_msgSend(a1, sel_articleID);
  if (!v4)
  {
    sub_1C151E62C();
    id v5 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v4 = v5;
  }
  id v6 = v4;
  [v2 *a2];
}

BOOL static FormatScrollingTrait.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatScrollingTrait.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatScrollingTrait.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C11ECEB0()
{
  unint64_t result = qword_1EA1ACDD8;
  if (!qword_1EA1ACDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACDD8);
  }
  return result;
}

unint64_t sub_1C11ECF04(uint64_t a1)
{
  unint64_t result = sub_1C11ECF2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11ECF2C()
{
  unint64_t result = qword_1EA1ACDE0;
  if (!qword_1EA1ACDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACDE0);
  }
  return result;
}

unint64_t sub_1C11ECF80(void *a1)
{
  a1[1] = sub_1C03CD74C();
  a1[2] = sub_1C03CD7A4();
  unint64_t result = sub_1C11ECEB0();
  a1[3] = result;
  return result;
}

uint64_t sub_1C11ECFB8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatScrollingTrait.init(from:)(a1, a2);
}

uint64_t sub_1C11ECFD0(void *a1)
{
  return FormatScrollingTrait.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatScrollingTrait(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11ED0B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatScrollingTrait()
{
  return &type metadata for FormatScrollingTrait;
}

void *sub_1C11ED0EC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = *a3;
  long long v41 = xmmword_1C1527210;
  uint64_t v8 = *(void *)(v3 + 176);
  if (v7 >> 61 == 5)
  {
    uint64_t v9 = v7 & 0x1FFFFFFFFFFFFFFFLL;
    uint64_t v10 = *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v11 = *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
    v39[0] = v10;
    swift_retain();
    swift_retain();
    sub_1BFE4A144(a1, a2, v39, v11, (uint64_t)v42);
    swift_release();
    swift_release();
    uint64_t v12 = *(void *)(v9 + 24);
    v39[0] = *(void *)(v9 + 16);
    swift_retain();
    swift_retain();
    sub_1BFE4A144(a1, a2, v39, v12, (uint64_t)v43);
    swift_release();
    swift_release();
  }
  else
  {
    v39[0] = v7;
    sub_1BFE4A144(a1, a2, v39, *(void *)(v8 + 96), (uint64_t)v42);
    uint64_t v13 = *(void *)(v4 + 192);
    v39[0] = v7;
    sub_1BFE4A144(a1, a2, v39, *(void *)(v13 + 96), (uint64_t)v43);
  }
  uint64_t v40 = (void *)MEMORY[0x1E4FBC860];
  sub_1BFE4D370((uint64_t)v42, (uint64_t)v39);
  sub_1C11EF75C((uint64_t)v39, (uint64_t)&v35);
  if (v36)
  {
    sub_1BFC773DC(&v35, (uint64_t)v38);
    sub_1BFC773DC(v38, (uint64_t)&v35);
    id v14 = (void *)MEMORY[0x1E4FBC860];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      id v14 = sub_1C0EE2540(0, v14[2] + 1, 1, v14);
      uint64_t v40 = v14;
    }
    unint64_t v16 = v14[2];
    unint64_t v15 = v14[3];
    if (v16 >= v15 >> 1) {
      uint64_t v40 = sub_1C0EE2540((void *)(v15 > 1), v16 + 1, 1, v14);
    }
    uint64_t v17 = v36;
    uint64_t v18 = v37;
    uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v35, v36);
    __n128 v20 = MEMORY[0x1F4188790](v19);
    uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v23 + 16))(v22, v20);
    sub_1BFFB628C(v16, (uint64_t)v22, (uint64_t *)&v40, v17, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  }
  else
  {
    sub_1BFE4601C((uint64_t)&v35);
  }
  sub_1BFE4D370((uint64_t)v43, (uint64_t)v39);
  sub_1C11EF75C((uint64_t)v39, (uint64_t)&v35);
  if (v36)
  {
    sub_1BFC773DC(&v35, (uint64_t)v38);
    sub_1BFC773DC(v38, (uint64_t)&v35);
    unint64_t v24 = v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      unint64_t v24 = sub_1C0EE2540(0, v24[2] + 1, 1, v24);
      uint64_t v40 = v24;
    }
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    if (v26 >= v25 >> 1) {
      uint64_t v40 = sub_1C0EE2540((void *)(v25 > 1), v26 + 1, 1, v24);
    }
    uint64_t v27 = v36;
    uint64_t v28 = v37;
    uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v35, v36);
    __n128 v30 = MEMORY[0x1F4188790](v29);
    int64_t v32 = (char *)&v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v33 + 16))(v32, v30);
    sub_1BFFB628C(v26, (uint64_t)v32, (uint64_t *)&v40, v27, v28);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  }
  else
  {
    sub_1BFE4601C((uint64_t)&v35);
  }
  sub_1BFE4D1E4(0, (unint64_t *)&qword_1EB882B88, (unint64_t *)&qword_1EB8715C0);
  swift_arrayDestroy();
  return v40;
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatVideoPlayerNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 104);
}

unint64_t FormatVideoPlayerNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 112);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

void FormatVideoPlayerNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = *(void *)(v1 + 128);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.posterLayoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.logoLayoutAttributes.getter()
{
  return swift_retain();
}

unint64_t sub_1C11ED69C(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x676E697A69736572;
      break;
    case 5:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 6:
      unint64_t result = 0x696C696269736976;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
    case 14:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0x656C797473;
      break;
    case 11:
      unint64_t result = 0x6564496573756572;
      break;
    case 12:
      unint64_t result = 0xD000000000000016;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C11ED874()
{
  return sub_1C11ED69C(*v0);
}

uint64_t sub_1C11ED87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C11EEF58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11ED8A4(uint64_t a1)
{
  unint64_t v2 = sub_1C11EDF9C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11ED8E0(uint64_t a1)
{
  unint64_t v2 = sub_1C11EDF9C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 112));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.__deallocating_deinit()
{
  FormatVideoPlayerNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C11EE988(0, &qword_1EA1ACDE8, (uint64_t (*)(void))sub_1C11EDF9C, (uint64_t)&type metadata for FormatVideoPlayerNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11EDF9C();
  sub_1C1520F0C();
  LOBYTE(v13[0]) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1C15207CC();
    LOBYTE(v13[0]) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    char v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C6E8(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 96);
    char v14 = 4;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v13[0]) = 5;
    sub_1C15207FC();
    *(void *)&v13[0] = *(void *)(v3 + 112);
    char v14 = 6;
    sub_1C009DA10();
    sub_1C152080C();
    LOBYTE(v13[0]) = 7;
    sub_1C15207DC();
    char v11 = *(unsigned char *)(v3 + 136);
    *(void *)&v13[0] = *(void *)(v3 + 128);
    BYTE8(v13[0]) = v11;
    char v14 = 8;
    sub_1BFDD5084();
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 144);
    char v14 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C6E8(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 152);
    char v14 = 10;
    type metadata accessor for FormatVideoPlayerNodeStyle();
    sub_1BFE4C6E8(qword_1EB867F08, 255, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeStyle);
    sub_1C152078C();
    LOBYTE(v13[0]) = 11;
    sub_1C15207CC();
    *(void *)&v13[0] = *(void *)(v3 + 176);
    char v14 = 12;
    type metadata accessor for FormatImageNodeLayoutAttributes();
    sub_1BFE4C6E8(&qword_1EB88DFE0, 255, (void (*)(uint64_t))type metadata accessor for FormatImageNodeLayoutAttributes);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 184);
    char v14 = 13;
    sub_1C11EE988(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C11EE9F0(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 192);
    char v14 = 14;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C11EDF9C()
{
  unint64_t result = qword_1EA1ACDF0;
  if (!qword_1EA1ACDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACDF0);
  }
  return result;
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatVideoPlayerNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatVideoPlayerNodeLayoutAttributes.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C11EE988(0, &qword_1EA1ACDF8, (uint64_t (*)(void))sub_1C11EDF9C, (uint64_t)&type metadata for FormatVideoPlayerNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v17 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11EDF9C();
  __n128 v20 = v7;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    uint64_t v16 = (uint64_t)a1;
  }
  else
  {
    uint64_t v17 = a1;
    uint64_t v8 = v18;
    LOBYTE(v21) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v9;
    LOBYTE(v21) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v21) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    type metadata accessor for CGRect(0);
    char v23 = 3;
    sub_1BFE4C6E8(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v12 = v22;
    *(_OWORD *)(v1 + 64) = v21;
    *(_OWORD *)(v1 + 80) = v12;
    char v23 = 4;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 96) = v21;
    LOBYTE(v21) = 5;
    *(void *)(v1 + 104) = sub_1C15206DC();
    char v23 = 6;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 112) = v21;
    LOBYTE(v21) = 7;
    *(unsigned char *)(v1 + 120) = sub_1C15206AC() & 1;
    char v23 = 8;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v14 = BYTE8(v21);
    *(void *)(v1 + 128) = v21;
    *(unsigned char *)(v1 + 136) = v14;
    type metadata accessor for FormatContextLayoutOptions();
    char v23 = 9;
    sub_1BFE4C6E8(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 144) = v21;
    type metadata accessor for FormatVideoPlayerNodeStyle();
    char v23 = 10;
    sub_1BFE4C6E8(&qword_1EB88C410, 255, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeStyle);
    sub_1C152065C();
    *(void *)(v1 + 152) = v21;
    LOBYTE(v21) = 11;
    *(void *)(v1 + 160) = sub_1C152069C();
    *(void *)(v1 + 168) = v15;
    type metadata accessor for FormatImageNodeLayoutAttributes();
    char v23 = 12;
    sub_1BFE4C6E8(&qword_1EB88DFE8, 255, (void (*)(uint64_t))type metadata accessor for FormatImageNodeLayoutAttributes);
    sub_1C15206EC();
    *(void *)(v1 + 176) = v21;
    sub_1C11EE988(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v23 = 13;
    sub_1C11EE9F0(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    *(void *)(v1 + 184) = v21;
    char v23 = 14;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v20, v19);
    uint64_t v3 = v1;
    *(void *)(v1 + 192) = v21;
    uint64_t v16 = (uint64_t)v17;
  }
  __swift_destroy_boxed_opaque_existential_1(v16);
  return v3;
}

void sub_1C11EE988(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C11EE9F0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C11EE988(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C11EEA94(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C6E8(&qword_1EA1ACE00, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatVideoPlayerNodeLayoutAttributes()
{
  return self;
}

uint64_t sub_1C11EEB00()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11EEB0C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C6E8(&qword_1EA1A9348, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
}

uint64_t sub_1C11EEB54(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C6E8(&qword_1EA1A93A0, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
}

uint64_t sub_1C11EEB9C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C6E8(&qword_1EA1ACE08, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
}

uint64_t sub_1C11EEBE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatVideoPlayerNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C11EEC3C(void *a1)
{
  return FormatVideoPlayerNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C11EEC60(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C6E8(&qword_1EA1A93F0, a2, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
  return sub_1C151798C();
}

uint64_t method lookup function for FormatVideoPlayerNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatVideoPlayerNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatVideoPlayerNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

unsigned char *storeEnumTagSinglePayload for FormatVideoPlayerNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11EEE18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatVideoPlayerNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C11EEE54()
{
  unint64_t result = qword_1EA1ACE10;
  if (!qword_1EA1ACE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE10);
  }
  return result;
}

unint64_t sub_1C11EEEAC()
{
  unint64_t result = qword_1EA1ACE18;
  if (!qword_1EA1ACE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE18);
  }
  return result;
}

unint64_t sub_1C11EEF04()
{
  unint64_t result = qword_1EA1ACE20;
  if (!qword_1EA1ACE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE20);
  }
  return result;
}

uint64_t sub_1C11EEF58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C1637B80 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1608F10 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1637BA0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t sub_1C11EF550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, char a14, uint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v22 = *a7;
  uint64_t v23 = *a13;
  uint64_t v24 = *a15;
  char v25 = *((unsigned char *)a15 + 8);
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = a2;
  *(void *)(v21 + 32) = a3;
  *(void *)(v21 + 40) = a4;
  *(void *)(v21 + 48) = a5;
  *(void *)(v21 + 56) = a6;
  *(double *)(v21 + 64) = a9;
  *(double *)(v21 + 72) = a10;
  *(double *)(v21 + 80) = a11;
  *(double *)(v21 + 88) = a12;
  *(void *)(v21 + 96) = v22;
  *(void *)(v21 + 104) = a8;
  *(void *)(v21 + 112) = v23;
  *(unsigned char *)(v21 + 120) = a14;
  *(void *)(v21 + 128) = v24;
  *(unsigned char *)(v21 + 136) = v25;
  *(void *)(v21 + 144) = a16;
  *(void *)(v21 + 152) = a17;
  *(void *)(v21 + 160) = a18;
  *(void *)(v21 + 168) = a19;
  *(void *)(v21 + 176) = a20;
  if (a17)
  {
    sub_1C11EF6EC();
    uint64_t inited = swift_initStackObject();
    uint64_t v27 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v28 = *(void *)(a17 + 64);
    if ((~v28 & 0xF000000000000007) != 0)
    {
      uint64_t v31 = &protocol witness table for FormatBackground;
      __n128 v30 = &type metadata for FormatBackground;
      uint64_t v29 = *(void *)(a17 + 64);
    }
    else
    {
      uint64_t v29 = 0;
      __n128 v30 = 0;
      uint64_t v31 = 0;
      *(void *)(inited + 40) = 0;
      *(void *)(inited + 48) = 0;
    }
    *(void *)(inited + 32) = v29;
    *(void *)(inited + 56) = v30;
    *(void *)(inited + 64) = v31;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_1BFEF683C(v28);
    uint64_t v32 = sub_1BFE70334(v27);
    swift_setDeallocating();
    sub_1BFE4D1E4(0, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
    swift_arrayDestroy();
    swift_release();
    swift_release_n();
  }
  else
  {
    swift_retain();
    uint64_t v32 = MEMORY[0x1E4FBC870];
  }
  *(void *)(v21 + 184) = v32;
  *(void *)(v21 + 192) = a21;
  return v21;
}

void sub_1C11EF6EC()
{
  if (!qword_1EB87A888)
  {
    sub_1BFE4D1E4(255, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A888);
    }
  }
}

uint64_t sub_1C11EF75C(uint64_t a1, uint64_t a2)
{
  sub_1BFE4D1E4(0, (unint64_t *)&qword_1EB882B88, (unint64_t *)&qword_1EB8715C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for AuthTokenStoreDescriptor()
{
  return &type metadata for AuthTokenStoreDescriptor;
}

uint64_t sub_1C11EF7E8()
{
  return 0x6B6F745F68747561;
}

uint64_t sub_1C11EF808()
{
  return 0x302E302E31;
}

uint64_t sub_1C11EF81C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C15154CC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void *)(v2 + 8);
  swift_bridgeObjectRetain();
  sub_1C15154BC();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      switch(*(unsigned char *)(v11 + i + 32))
      {
        case 1:
          sub_1C151545C();
          break;
        case 2:
          sub_1C151549C();
          break;
        case 3:
          sub_1C151544C();
          break;
        case 4:
          sub_1C151540C();
          break;
        case 5:
          sub_1C151546C();
          break;
        case 6:
          sub_1C151542C();
          break;
        case 7:
          sub_1C151543C();
          break;
        default:
          sub_1C15153DC();
          break;
      }
      sub_1C15154AC();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v10, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
}

uint64_t sub_1C11EFA4C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11EFB2C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11EFBF4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C11EFCD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C11F0FE4();
  *a1 = result;
  return result;
}

void sub_1C11EFD00(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7364726F77;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x65636E65746E6573;
      *(void *)(a1 + 8) = 0xE900000000000073;
      break;
    case 3:
      strcpy((char *)a1, "allCharacters");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C11EFDA0()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C11EFE00()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C11EFE50(unsigned __int8 *a1, char *a2)
{
  return sub_1C147AED0(*a1, *a2);
}

unint64_t sub_1C11EFE5C(char a1)
{
  unint64_t result = 0x6170736574696877;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0x73656E696C77656ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x446C616D69636564;
      break;
    case 5:
      unint64_t result = 0x7372657474656CLL;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C11EFF74(void *a1)
{
  sub_1C11F08D8(0, &qword_1EA1ACE60, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v11 - v7;
  char v9 = *v1;
  v11[0] = *((void *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11F07D8();
  sub_1C1520F0C();
  char v14 = v9;
  char v13 = 0;
  sub_1C11F093C();
  sub_1C152080C();
  if (!v2 && *(void *)(v11[0] + 16))
  {
    char v12 = 1;
    v11[1] = v11[0];
    sub_1C11F0990();
    sub_1C11F0A04();
    sub_1C11F0A5C();
    sub_1C1520BAC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C11F0140@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  sub_1C11F06C8();
  uint64_t v5 = v4;
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C11F08D8(0, &qword_1EA1ACE40, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v20 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11F07D8();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v12 = v20;
    char v24 = 0;
    sub_1C11F082C();
    sub_1C15206EC();
    int v21 = v25;
    char v23 = 1;
    if (sub_1C152071C())
    {
      char v22 = 1;
      sub_1C11F0880();
      sub_1C15206EC();
      uint64_t v13 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
    }
    else
    {
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    uint64_t v14 = v19;
    char v15 = v21;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v9);
    *(unsigned char *)uint64_t v14 = v15;
    *(void *)(v14 + 8) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C11F03FC()
{
  return sub_1C044CC4C();
}

uint64_t sub_1C11F0408()
{
  return sub_1C0447D00();
}

uint64_t sub_1C11F0410()
{
  return sub_1C044CC4C();
}

uint64_t sub_1C11F0418@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C11F1030();
  *a1 = result;
  return result;
}

unint64_t sub_1C11F0448@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C11EFE5C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C11F0474()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C11F04D4()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C11F0524(unsigned __int8 *a1, char *a2)
{
  return sub_1C147AC48(*a1, *a2);
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKeyTextField()
{
  return &type metadata for DebugFormatTemplateKeyTextField;
}

unint64_t sub_1C11F0540()
{
  if (*v0) {
    return 0xD000000000000017;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_1C11F0580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C11F107C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11F05A8(uint64_t a1)
{
  unint64_t v2 = sub_1C11F07D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11F05E4(uint64_t a1)
{
  unint64_t v2 = sub_1C11F07D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11F0620@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C11F0140(a1, a2);
}

uint64_t sub_1C11F0638(void *a1)
{
  return sub_1C11EFF74(a1);
}

uint64_t sub_1C11F0650(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if ((sub_1C147AED0(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v4 = sub_1C00E3118(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1C11F06C8()
{
  if (!qword_1EA1ACE28)
  {
    sub_1C11F0730();
    sub_1C11F0784();
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ACE28);
    }
  }
}

unint64_t sub_1C11F0730()
{
  unint64_t result = qword_1EA1ACE30;
  if (!qword_1EA1ACE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE30);
  }
  return result;
}

unint64_t sub_1C11F0784()
{
  unint64_t result = qword_1EA1ACE38;
  if (!qword_1EA1ACE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE38);
  }
  return result;
}

unint64_t sub_1C11F07D8()
{
  unint64_t result = qword_1EA1ACE48;
  if (!qword_1EA1ACE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE48);
  }
  return result;
}

unint64_t sub_1C11F082C()
{
  unint64_t result = qword_1EA1ACE50;
  if (!qword_1EA1ACE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE50);
  }
  return result;
}

unint64_t sub_1C11F0880()
{
  unint64_t result = qword_1EA1ACE58;
  if (!qword_1EA1ACE58)
  {
    sub_1C11F06C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE58);
  }
  return result;
}

void sub_1C11F08D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C11F07D8();
    unint64_t v7 = a3(a1, &type metadata for DebugFormatTemplateKeyTextField.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C11F093C()
{
  unint64_t result = qword_1EA1ACE68;
  if (!qword_1EA1ACE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE68);
  }
  return result;
}

unint64_t sub_1C11F0990()
{
  unint64_t result = qword_1EA1ACE70;
  if (!qword_1EA1ACE70)
  {
    sub_1C11F08D8(255, &qword_1EA1ACE60, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE70);
  }
  return result;
}

void sub_1C11F0A04()
{
  if (!qword_1EA1ACE78)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ACE78);
    }
  }
}

unint64_t sub_1C11F0A5C()
{
  unint64_t result = qword_1EA1ACE80;
  if (!qword_1EA1ACE80)
  {
    sub_1C11F0A04();
    sub_1C11F0784();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTemplateKeyTextField.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11F0B98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKeyTextField.CodingKeys()
{
  return &type metadata for DebugFormatTemplateKeyTextField.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTemplateKeyTextField.DisallowedCharacterSet(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11F0C9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKeyTextField.DisallowedCharacterSet()
{
  return &type metadata for DebugFormatTemplateKeyTextField.DisallowedCharacterSet;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTemplateKeyTextField.AutocapitalizationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11F0DA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKeyTextField.AutocapitalizationType()
{
  return &type metadata for DebugFormatTemplateKeyTextField.AutocapitalizationType;
}

unint64_t sub_1C11F0DDC()
{
  unint64_t result = qword_1EA1ACE88;
  if (!qword_1EA1ACE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE88);
  }
  return result;
}

unint64_t sub_1C11F0E34()
{
  unint64_t result = qword_1EA1ACE90;
  if (!qword_1EA1ACE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE90);
  }
  return result;
}

unint64_t sub_1C11F0E8C()
{
  unint64_t result = qword_1EA1ACE98;
  if (!qword_1EA1ACE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACE98);
  }
  return result;
}

unint64_t sub_1C11F0EE4()
{
  unint64_t result = qword_1EA1ACEA0;
  if (!qword_1EA1ACEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACEA0);
  }
  return result;
}

unint64_t sub_1C11F0F3C()
{
  unint64_t result = qword_1EA1ACEA8;
  if (!qword_1EA1ACEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACEA8);
  }
  return result;
}

unint64_t sub_1C11F0F90()
{
  unint64_t result = qword_1EA1ACEB0;
  if (!qword_1EA1ACEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACEB0);
  }
  return result;
}

uint64_t sub_1C11F0FE4()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C11F1030()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C11F107C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000001C1637BC0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C1637BE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C11F1168()
{
  unint64_t result = qword_1EA1ACEB8;
  if (!qword_1EA1ACEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACEB8);
  }
  return result;
}

uint64_t static ColumnSystem.Options.default(layoutOptions:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1C11F11FC(MEMORY[0x1E4FAB6D8], a1);
}

uint64_t static ColumnSystem.Options.card(layoutOptions:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1C11F11FC(MEMORY[0x1E4FAB6B0], a1);
}

uint64_t sub_1C11F11FC@<X0>(unsigned int *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_1C151794C();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1C151772C();
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151759C();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v11, *a1, v7, v9);
  sub_1C151B61C();
  sub_1C151F7CC();
  v23[8] = v13;
  v23[9] = v12;
  sub_1C151B54C();
  v23[6] = v15;
  v23[7] = v14;
  sub_1C151B58C();
  v23[4] = v17;
  v23[5] = v16;
  sub_1C151B51C();
  v23[2] = v19;
  v23[3] = v18;
  sub_1C151B59C();
  v23[0] = v21;
  v23[1] = v20;
  sub_1C151B57C();
  sub_1C151B53C();
  sub_1C151B56C();
  sub_1C151B5BC();
  sub_1C151B55C();
  if (qword_1EB87CC48 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1C151763C();
  sub_1C151758C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

unint64_t sub_1C11F1524()
{
  unint64_t result = qword_1EB85C928;
  if (!qword_1EB85C928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C928);
  }
  return result;
}

unint64_t sub_1C11F157C()
{
  unint64_t result = qword_1EB85C920;
  if (!qword_1EB85C920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C920);
  }
  return result;
}

unint64_t sub_1C11F15D4()
{
  unint64_t result = qword_1EB85C918;
  if (!qword_1EB85C918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C918);
  }
  return result;
}

uint64_t sub_1C11F1628()
{
  return sub_1C151EB6C();
}

uint64_t sub_1C11F1688()
{
  return sub_1C151EAFC();
}

unint64_t sub_1C11F16DC()
{
  unint64_t result = qword_1EA1ACEC0;
  if (!qword_1EA1ACEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACEC0);
  }
  return result;
}

uint64_t *sub_1C11F1730()
{
  if (qword_1EB88CB30 != -1) {
    swift_once();
  }
  return &qword_1EB93C930;
}

void sub_1C11F177C(unint64_t a1)
{
  uint64_t v2 = v1;
  switch((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v3 = *(void **)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      goto LABEL_56;
    case 2uLL:
      uint64_t v3 = *(void **)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      goto LABEL_56;
    case 3uLL:
      uint64_t v4 = *(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v38 = v4;
      uint64_t v5 = sub_1C1383DC8;
      goto LABEL_43;
    case 4uLL:
    case 0x11uLL:
      uint64_t v38 = *(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      id v36 = objc_msgSend(v38, sel_layer);
      objc_msgSend(v36, sel_setMask_, 0);

      sub_1C11F1E50(v38);
      goto LABEL_57;
    case 5uLL:
    case 8uLL:
    case 9uLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x12uLL:
    case 0x13uLL:
      return;
    case 6uLL:
      uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      swift_retain();
      sub_1C11F177C(v6);
      uint64_t v8 = v7 + 64;
      uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
      uint64_t v10 = -1;
      if (v9 < 64) {
        uint64_t v10 = ~(-1 << v9);
      }
      unint64_t v11 = v10 & *(void *)(v7 + 64);
      id v39 = (id)((unint64_t)(v9 + 63) >> 6);
      swift_bridgeObjectRetain();
      uint64_t v12 = 0;
      uint64_t v13 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
      uint64_t v14 = &selRef_scrollToRowAtIndexPath_atScrollPosition_animated_;
      break;
    case 7uLL:
      uint64_t v4 = *(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v38 = v4;
      uint64_t v5 = sub_1C10C1D6C;
LABEL_43:
      sub_1C11F2270(v4, v5);
      goto LABEL_57;
    case 0xAuLL:
      uint64_t v3 = *(void **)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      goto LABEL_56;
    case 0xBuLL:
      uint64_t v38 = *(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C11F2480(v38);
      goto LABEL_57;
    case 0xCuLL:
      uint64_t v38 = *(id *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C11F2898(v38);
      goto LABEL_57;
    case 0xDuLL:
      uint64_t v34 = *(unsigned char **)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      if (v34[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content]
        && v34[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] != 1)
      {
        return;
      }
      uint64_t v38 = v34;
      sub_1C11F2688(v38);
      goto LABEL_57;
    case 0x10uLL:
      unint64_t v35 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      if (v35 >> 62)
      {
        uint64_t v3 = (void *)(v35 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_56:
        uint64_t v38 = v3;
        sub_1C11F207C(v38);
LABEL_57:
        uint64_t v37 = v38;
      }
      else
      {
        sub_1C11F207C((id)v35);
        uint64_t v37 = (void *)(v35 & 0x3FFFFFFFFFFFFFFFLL);
      }

      return;
    default:
      uint64_t v3 = *(void **)(a1 + 16);
      goto LABEL_56;
  }
  while (v11)
  {
    unint64_t v21 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v22 = v21 | (v12 << 6);
LABEL_31:
    uint64_t v26 = *(void *)(v7 + 56) + 16 * v22;
    uint64_t v27 = *(unsigned __int8 *)(v26 + 8);
    id v20 = *(id *)v26;
    [v20 (SEL)v13[454]];
    objc_msgSend(v20, v14[316], 0);
    switch(v27)
    {
      case 1:
        uint64_t v28 = (void *)v2[15];
        uint64_t v29 = v28 + 2;
        goto LABEL_35;
      case 2:
      case 3:
      case 5:
        goto LABEL_12;
      case 4:
        uint64_t v28 = (void *)v2[10];
        uint64_t v29 = v28 + 2;
        goto LABEL_35;
      default:
        uint64_t v28 = (void *)v2[14];
        uint64_t v29 = v28 + 2;
LABEL_35:
        swift_beginAccess();
        unint64_t v30 = v28[2];
        if (v30 >> 62)
        {
          id v33 = v20;
          swift_bridgeObjectRetain();
          uint64_t v31 = sub_1C15204BC();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v32 = v20;
        }
        if (v31 >= sub_1C0993CA4(v28[7]))
        {
          sub_1BFEE81C8(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
          uint64_t v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = xmmword_1C1527210;
          uint64_t v17 = v28[3];
          uint64_t v16 = v28[4];
          *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v18 = sub_1BFE9C558();
          *(void *)(v15 + 32) = v17;
          *(void *)(v15 + 40) = v16;
          uint64_t v8 = v7 + 64;
          *(void *)(v15 + 96) = MEMORY[0x1E4FBB550];
          *(void *)(v15 + 104) = MEMORY[0x1E4FBB5C8];
          *(void *)(v15 + 64) = v18;
          *(void *)(v15 + 72) = v31;
          sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_1C151FD3C();
          sub_1C151F38C();
          sub_1C15197BC();

          swift_bridgeObjectRelease();
          id v20 = (id)v19;
        }
        else
        {
          swift_beginAccess();
          id v20 = v20;
          MEMORY[0x1C18C66D0]();
          if (*(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
          swift_endAccess();
        }
        uint64_t v13 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
        uint64_t v14 = &selRef_scrollToRowAtIndexPath_atScrollPosition_animated_;
LABEL_12:

        break;
    }
  }
  uint64_t v23 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_62;
  }
  if (v23 >= (uint64_t)v39) {
    goto LABEL_53;
  }
  unint64_t v24 = *(void *)(v8 + 8 * v23);
  ++v12;
  if (v24) {
    goto LABEL_30;
  }
  uint64_t v12 = v23 + 1;
  if (v23 + 1 >= (uint64_t)v39) {
    goto LABEL_53;
  }
  unint64_t v24 = *(void *)(v8 + 8 * v12);
  if (v24) {
    goto LABEL_30;
  }
  uint64_t v12 = v23 + 2;
  if (v23 + 2 >= (uint64_t)v39) {
    goto LABEL_53;
  }
  unint64_t v24 = *(void *)(v8 + 8 * v12);
  if (v24) {
    goto LABEL_30;
  }
  uint64_t v12 = v23 + 3;
  if (v23 + 3 >= (uint64_t)v39) {
    goto LABEL_53;
  }
  unint64_t v24 = *(void *)(v8 + 8 * v12);
  if (v24)
  {
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v12 << 6);
    goto LABEL_31;
  }
  uint64_t v25 = v23 + 4;
  if (v25 < (uint64_t)v39)
  {
    unint64_t v24 = *(void *)(v8 + 8 * v25);
    if (!v24)
    {
      while (1)
      {
        uint64_t v12 = v25 + 1;
        if (__OFADD__(v25, 1)) {
          break;
        }
        if (v12 >= (uint64_t)v39) {
          goto LABEL_53;
        }
        unint64_t v24 = *(void *)(v8 + 8 * v12);
        ++v25;
        if (v24) {
          goto LABEL_30;
        }
      }
LABEL_62:
      __break(1u);
      JUMPOUT(0x1C11F1DE8);
    }
    uint64_t v12 = v25;
    goto LABEL_30;
  }
LABEL_53:
  swift_release();
  swift_release();
}

void sub_1C11F1E50(void *a1)
{
  swift_beginAccess();
  unint64_t v3 = v1[2];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 >= sub_1C0993CA4(v1[7]))
  {
    sub_1BFEE81C8(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C1527210;
    uint64_t v8 = v1[3];
    uint64_t v7 = v1[4];
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v9 = sub_1BFE9C558();
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v7;
    uint64_t v10 = MEMORY[0x1E4FBB5C8];
    *(void *)(v6 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v6 + 104) = v10;
    *(void *)(v6 + 64) = v9;
    *(void *)(v6 + 72) = v4;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
    swift_bridgeObjectRetain();
    unint64_t v11 = (void *)sub_1C151FD3C();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_msgSend(a1, sel_setUserInteractionEnabled_, 1);
    sub_1C151F91C();
    sub_1BFFCD270(0, 0);
    swift_beginAccess();
    id v5 = a1;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v1[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v1[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
  }
}

void sub_1C11F207C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 2;
  swift_beginAccess();
  unint64_t v5 = v2[2];
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6 >= sub_1C0993CA4(v2[7]))
  {
    sub_1BFEE81C8(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1527210;
    uint64_t v10 = v2[3];
    uint64_t v9 = v2[4];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1BFE9C558();
    *(void *)(v8 + 32) = v10;
    *(void *)(v8 + 40) = v9;
    uint64_t v12 = MEMORY[0x1E4FBB5C8];
    *(void *)(v8 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v8 + 104) = v12;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = v6;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)sub_1C151FD3C();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    id v7 = a1;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
  }
}

void sub_1C11F2270(void *a1, void (*a2)(void))
{
  swift_beginAccess();
  unint64_t v5 = v2[2];
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6 >= sub_1C0993CA4(v2[7]))
  {
    sub_1BFEE81C8(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1527210;
    uint64_t v10 = v2[3];
    uint64_t v9 = v2[4];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1BFE9C558();
    *(void *)(v8 + 32) = v10;
    *(void *)(v8 + 40) = v9;
    uint64_t v12 = MEMORY[0x1E4FBB5C8];
    *(void *)(v8 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v8 + 104) = v12;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = v6;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)sub_1C151FD3C();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    a2();
    swift_beginAccess();
    id v7 = a1;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v2[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
  }
}

void sub_1C11F2480(void *a1)
{
  swift_beginAccess();
  unint64_t v3 = v1[2];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 >= sub_1C0993CA4(v1[7]))
  {
    sub_1BFEE81C8(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C1527210;
    uint64_t v8 = v1[3];
    uint64_t v7 = v1[4];
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v9 = sub_1BFE9C558();
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v7;
    uint64_t v10 = MEMORY[0x1E4FBB5C8];
    *(void *)(v6 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v6 + 104) = v10;
    *(void *)(v6 + 64) = v9;
    *(void *)(v6 + 72) = v4;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
    swift_bridgeObjectRetain();
    unint64_t v11 = (void *)sub_1C151FD3C();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C12E9304();
    swift_beginAccess();
    id v5 = a1;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v1[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v1[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
  }
}

void sub_1C11F2688(void *a1)
{
  swift_beginAccess();
  unint64_t v3 = v1[2];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 >= sub_1C0993CA4(v1[7]))
  {
    sub_1BFEE81C8(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C1527210;
    uint64_t v8 = v1[3];
    uint64_t v7 = v1[4];
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v9 = sub_1BFE9C558();
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v7;
    uint64_t v10 = MEMORY[0x1E4FBB5C8];
    *(void *)(v6 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v6 + 104) = v10;
    *(void *)(v6 + 64) = v9;
    *(void *)(v6 + 72) = v4;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
    swift_bridgeObjectRetain();
    unint64_t v11 = (void *)sub_1C151FD3C();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    IssueCoverView.prepareForReuse(identifier:)((Swift::String_optional)0);
    swift_beginAccess();
    id v5 = a1;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v1[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v1[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
  }
}

void sub_1C11F2898(char *a1)
{
  unint64_t v3 = v1 + 2;
  swift_beginAccess();
  unint64_t v4 = v1[2];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 >= sub_1C0993CA4(v1[7]))
  {
    sub_1BFEE81C8(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1527210;
    uint64_t v12 = v1[3];
    uint64_t v11 = v1[4];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = sub_1BFE9C558();
    *(void *)(v10 + 32) = v12;
    *(void *)(v10 + 40) = v11;
    uint64_t v14 = MEMORY[0x1E4FBB5C8];
    *(void *)(v10 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v10 + 104) = v14;
    *(void *)(v10 + 64) = v13;
    *(void *)(v10 + 72) = v5;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB895EA0);
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)sub_1C151FD3C();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = objc_msgSend(a1, sel_layer);
    self;
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_pause);

    uint64_t v7 = *(void *)&a1[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
    swift_beginAccess();
    int v8 = *(unsigned __int8 *)(v7 + 17);
    *(unsigned char *)(v7 + 17) = 0;
    if ((v8 & 0xFFFFFFC1) != 0) {
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
    }
    swift_beginAccess();
    unint64_t v9 = a1;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
  }
}

uint64_t sub_1C11F2B20()
{
  if (qword_1EB87B060 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EB93C700;
  sub_1C151F38C();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  sub_1C15197BC();

  *(unsigned char *)(v0 + 152) = 0;
  uint64_t v3 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v0 + 40);
  swift_beginAccess();
  *(void *)(v4 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v0 + 32);
  swift_beginAccess();
  *(void *)(v5 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v6 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v0 + 48);
  swift_beginAccess();
  *(void *)(v7 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v0 + 56);
  swift_beginAccess();
  *(void *)(v8 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v0 + 64);
  swift_beginAccess();
  *(void *)(v9 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v0 + 136);
  swift_beginAccess();
  *(void *)(v10 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v0 + 144);
  swift_beginAccess();
  *(void *)(v11 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v0 + 112);
  swift_beginAccess();
  *(void *)(v12 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v0 + 120);
  swift_beginAccess();
  *(void *)(v13 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 88);
  swift_beginAccess();
  *(void *)(v14 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v0 + 96);
  swift_beginAccess();
  *(void *)(v15 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v0 + 80);
  swift_beginAccess();
  *(void *)(v16 + 16) = v2;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v0 + 72);
  swift_beginAccess();
  *(void *)(v17 + 16) = v2;
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + 152) = 1;
  return result;
}

uint64_t sub_1C11F2E28()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C11F2EC8()
{
  sub_1C11F2E28();
  return swift_deallocClassInstance();
}

uint64_t sub_1C11F2EFC()
{
  return 0;
}

uint64_t sub_1C11F33F4()
{
  return sub_1C11F2EFC();
}

id sub_1C11F3418()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatSponsoredBanner);
}

id sub_1C11F3430()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatSplitView);
}

id sub_1C11F3448()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatProgressCircleView);
}

id sub_1C11F3460()
{
  return sub_1BFE6BDF8(MEMORY[0x1E4FAD7F0]);
}

id sub_1C11F3478()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatVideoView);
}

uint64_t sub_1C11F3490()
{
  sub_1C15200FC();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_beginAccess();
  if (*(void *)(v0 + 16) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 0;
}

uint64_t sub_1C11F363C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C11F3674()
{
  if (*(void *)(v0 + 16) >= 4uLL) {
    swift_release();
  }
  if (*(void *)(v0 + 24) >= 4uLL) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1C11F3704(uint64_t a1)
{
  sub_1C11F6DE0();
  uint64_t v56 = v2;
  MEMORY[0x1F4188790](v2);
  BOOL v51 = (void *)((char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v50 - v5);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (void *)((char *)v50 - v8);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v55 = a1 + 64;
  unint64_t v53 = MEMORY[0x1E4FBC868];
  uint64_t v58 = MEMORY[0x1E4FBC868];
  uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
  if (-v11 < 64) {
    uint64_t v12 = ~(-1 << -(char)v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  v50[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v54 = (unint64_t)(63 - v11) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v57 = 0;
  if (!v13) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  unint64_t v16 = v15 | (v57 << 6);
  while (1)
  {
    uint64_t v17 = *(void *)(a1 + 56);
    unint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = (int *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
    uint64_t v22 = v17 + *(void *)(*(void *)v21 + 72) * v16;
    uint64_t v23 = v56;
    sub_1C11F70D4(v22, (uint64_t)v9 + *(int *)(v56 + 48), (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    *uint64_t v9 = v20;
    v9[1] = v19;
    sub_1C11F706C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_1C11F6DE0);
    uint64_t v24 = *(int *)(v23 + 48);
    uint64_t v25 = v21[7];
    uint64_t v26 = *(uint64_t *)((char *)v6 + v24 + v25);
    if (v26)
    {
      long long v52 = *(_OWORD *)((char *)v6 + v24 + v25);
      uint64_t v31 = v51;
      uint64_t v32 = (uint64_t)v51 + v24;
      uint64_t v33 = *v6;
      uint64_t v34 = v6[1];
      *BOOL v51 = *v6;
      v31[1] = v34;
      sub_1C11F706C((uint64_t)v6 + v24, (uint64_t)v31 + v24, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      unint64_t v35 = *(void *)(v53 + 16);
      if (*(void *)(v53 + 24) <= v35)
      {
        unint64_t v53 = v35 + 1;
        swift_bridgeObjectRetain();
        sub_1BFDB3920(v26);
        sub_1C1057698(v53, 1);
        uint64_t v36 = v58;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BFDB3920(v26);
        uint64_t v36 = v53;
      }
      unint64_t v53 = v36;
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v37 = (void *)v53;
      unint64_t v38 = v53 + 64;
      uint64_t v39 = -1 << *(unsigned char *)(v53 + 32);
      unint64_t v40 = result & ~v39;
      unint64_t v41 = v40 >> 6;
      if (((-1 << v40) & ~*(void *)(v53 + 64 + 8 * (v40 >> 6))) == 0)
      {
        char v44 = 0;
        unint64_t v45 = (unint64_t)(63 - v39) >> 6;
        long long v43 = v52;
        while (++v41 != v45 || (v44 & 1) == 0)
        {
          BOOL v46 = v41 == v45;
          if (v41 == v45) {
            unint64_t v41 = 0;
          }
          v44 |= v46;
          uint64_t v47 = *(void *)(v38 + 8 * v41);
          if (v47 != -1)
          {
            unint64_t v42 = __clz(__rbit64(~v47)) + (v41 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v42 = __clz(__rbit64((-1 << v40) & ~*(void *)(v53 + 64 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
      long long v43 = v52;
LABEL_37:
      *(void *)(v38 + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v42;
      uint64_t v48 = 16 * v42;
      uint64_t v49 = (void *)(v37[6] + v48);
      *uint64_t v49 = v33;
      v49[1] = v34;
      *(_OWORD *)(v37[7] + v48) = v43;
      ++v37[2];
      uint64_t result = sub_1C11F713C(v32, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      if (v13) {
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C11F713C((uint64_t)v6, (uint64_t (*)(void))sub_1C11F6DE0);
      if (v13) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v27 = v57 + 1;
    if (__OFADD__(v57, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v27 >= v54) {
      goto LABEL_39;
    }
    unint64_t v28 = *(void *)(v55 + 8 * v27);
    int64_t v29 = v57 + 1;
    if (!v28)
    {
      int64_t v29 = v57 + 2;
      if (v57 + 2 >= v54) {
        goto LABEL_39;
      }
      unint64_t v28 = *(void *)(v55 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v57 + 3;
        if (v57 + 3 >= v54) {
          goto LABEL_39;
        }
        unint64_t v28 = *(void *)(v55 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v57 + 4;
          if (v57 + 4 >= v54) {
            goto LABEL_39;
          }
          unint64_t v28 = *(void *)(v55 + 8 * v29);
          if (!v28) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v28 - 1) & v28;
    unint64_t v16 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v57 = v29;
  }
  int64_t v30 = v57 + 5;
  if (v57 + 5 >= v54)
  {
LABEL_39:
    sub_1BFEFB808();
    return v53;
  }
  unint64_t v28 = *(void *)(v55 + 8 * v30);
  if (v28)
  {
    int64_t v29 = v57 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v29 >= v54) {
      goto LABEL_39;
    }
    unint64_t v28 = *(void *)(v55 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t FormatContentSlot.init(slot:properties:transforms:items:selectors:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t (*FormatContentSlot.transforms.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C11F3C0C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v82 = a5;
  uint64_t v10 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v80 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v93 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v5 + 8);
  uint64_t v17 = *(void *)(v5 + 32);
  uint64_t v18 = *(void *)(v5 + 40);
  uint64_t v81 = *(void *)v5;
  uint64_t v88 = v81;
  uint64_t v89 = v16;
  long long v86 = *(_OWORD *)(v5 + 16);
  long long v90 = v86;
  uint64_t v91 = v17;
  uint64_t v92 = v18;
  uint64_t v19 = (uint64_t)v87;
  uint64_t result = sub_1C11F4554(a1, a2, a3, a4);
  if (v19) {
    return result;
  }
  uint64_t v77 = v18;
  uint64_t v85 = a1;
  uint64_t v87 = v15;
  uint64_t v88 = result;
  uint64_t v75 = 0;
  uint64_t v78 = result;
  uint64_t v79 = v16;
  sub_1BFDB2774(0, (unint64_t *)&qword_1EB87C330, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, MEMORY[0x1E4FBB320]);
  sub_1C0660670();
  sub_1C0075C44(&qword_1EB87C2D0, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution);
  uint64_t v74 = sub_1C151E91C();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v88 = MEMORY[0x1E4FBC860];
  uint64_t v22 = v86;
  uint64_t v23 = *(void *)(v86 + 16);
  if (!v23)
  {
    swift_bridgeObjectRetain();
    uint64_t v88 = v21;
    uint64_t v76 = v21;
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v73 = v22;
  uint64_t v24 = (uint64_t *)(v22 + 48);
  long long v84 = xmmword_1C1529AE0;
  *(void *)&long long v86 = v12;
  do
  {
    uint64_t v32 = *(v24 - 2);
    uint64_t v33 = *(v24 - 1);
    uint64_t v34 = *v24;
    if ((~*v24 & 0xF000000000000007) != 0)
    {
      sub_1BFDB2774(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
      uint64_t v25 = (int *)(type metadata accessor for FormatOption() - 8);
      unint64_t v26 = (*(unsigned __int8 *)(*(void *)v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v25 + 80);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v84;
      unint64_t v28 = (uint64_t *)(v27 + v26);
      *unint64_t v28 = v32;
      v28[1] = v33;
      void v28[2] = v34;
      v28[3] = 1;
      uint64_t v29 = v25[9];
      uint64_t v12 = (char *)v86;
      uint64_t v30 = v27 + v26 + v29;
      uint64_t v31 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
      swift_bridgeObjectRetain();
      goto LABEL_5;
    }
    uint64_t v35 = v85[9];
    if (*(void *)(v35 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v36 = sub_1BFEF2D8C(v32, v33);
      if (v37)
      {
        unint64_t v38 = *(void *)(v35 + 56) + (v36 << 6);
        uint64_t v83 = *(void *)(v38 + 8);
        uint64_t v27 = *(void *)(v38 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = (char *)v86;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = MEMORY[0x1E4FBC860];
LABEL_5:
    v24 += 3;
    sub_1BFDC11A4(v34);
    sub_1BFEDB748(v27);
    --v23;
  }
  while (v23);
  uint64_t v39 = v73;
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(v39 + 16);
  uint64_t v41 = v88;
  uint64_t v88 = MEMORY[0x1E4FBC860];
  unint64_t v42 = v85;
  uint64_t v76 = v41;
  if (!v40)
  {
LABEL_24:
    uint64_t v54 = (uint64_t)v87;
    uint64_t v57 = v80;
    uint64_t v56 = v77;
    swift_bridgeObjectRetain();
    uint64_t v53 = MEMORY[0x1E4FBC860];
    uint64_t v55 = v78;
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v43 = (void *)(v39 + 48);
  uint64_t v44 = MEMORY[0x1E4FBC870];
  do
  {
    uint64_t v45 = v44;
    if ((~*v43 & 0xF000000000000007) == 0)
    {
      uint64_t v46 = v42[9];
      if (*(void *)(v46 + 16))
      {
        uint64_t v47 = *(v43 - 2);
        uint64_t v48 = *(v43 - 1);
        swift_bridgeObjectRetain();
        unint64_t v49 = sub_1BFEF2D8C(v47, v48);
        if (v50)
        {
          BOOL v51 = (void *)(*(void *)(v46 + 56) + (v49 << 6));
          uint64_t v52 = v51[1];
          uint64_t v83 = v51[2];
          *(void *)&long long v84 = v52;
          uint64_t v45 = v51[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v12 = (char *)v86;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v42 = v85;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v45 = v44;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v45 = v44;
      }
    }
    v43 += 3;
    sub_1BFE72794(v45);
    --v40;
  }
  while (v40);
  swift_bridgeObjectRelease();
  uint64_t v54 = (uint64_t)v87;
  uint64_t v53 = v88;
  uint64_t v56 = v77;
  uint64_t v55 = v78;
  uint64_t v57 = v80;
LABEL_25:
  uint64_t v58 = sub_1BFFB9A98(v53, v56);
  swift_bridgeObjectRelease();
  int64_t v59 = *(void *)(v55 + 16);
  if (v59)
  {
    uint64_t v88 = MEMORY[0x1E4FBC860];
    sub_1C05F8244(0, v59, 0);
    uint64_t v60 = v55 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
    uint64_t v61 = *(void *)(v57 + 72);
    uint64_t v62 = v88;
    do
    {
      sub_1C11F70D4(v60, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C11F70D4((uint64_t)v12, v54, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      sub_1C11F713C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F8244(0, *(void *)(v62 + 16) + 1, 1);
        uint64_t v62 = v88;
      }
      uint64_t v63 = v93;
      unint64_t v65 = *(void *)(v62 + 16);
      unint64_t v64 = *(void *)(v62 + 24);
      if (v65 >= v64 >> 1)
      {
        sub_1C05F8244(v64 > 1, v65 + 1, 1);
        uint64_t v63 = v93;
        uint64_t v62 = v88;
      }
      *(void *)(v62 + 16) = v65 + 1;
      uint64_t v54 = (uint64_t)v87;
      sub_1C11F706C((uint64_t)v87, v62+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v65, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      v60 += v61;
      --v59;
    }
    while (v59);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = MEMORY[0x1E4FBC860];
  }
  uint64_t v66 = v74;
  uint64_t v67 = sub_1C11F6218(v74);
  uint64_t v68 = sub_1C11F5F58(v66);
  uint64_t v69 = sub_1C11F3704(v66);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v70 = v82;
  uint64_t v71 = v79;
  *uint64_t v82 = v81;
  v70[1] = v71;
  id v70[2] = v76;
  v70[3] = v58;
  v70[4] = v62;
  v70[5] = v67;
  v70[6] = v68;
  v70[7] = v69;
  return result;
}

uint64_t FormatContentSlot.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlot.transforms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlot.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlot.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlot.slot.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSlot.properties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatContentSlot.properties.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatContentSlot.transforms.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t FormatContentSlot.items.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatContentSlot.items.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatContentSlot.selectors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*FormatContentSlot.selectors.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C11F4554(uint64_t *a1, void *a2, void *a3, void *a4)
{
  unint64_t v119 = a1;
  uint64_t v9 = type metadata accessor for FormatContentSlotItemObject();
  uint64_t v99 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v100 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDB2774(0, (unint64_t *)&unk_1EB882CC0, (uint64_t (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v99 - v12;
  long long v14 = v4[1];
  v124[0] = *v4;
  v124[1] = v14;
  long long v125 = v4[2];
  uint64_t v15 = *((void *)&v14 + 1);
  uint64_t v127 = *((void *)&v14 + 1);
  uint64_t v122 = a4;
  sub_1BFFAF7A4((uint64_t)&v127);
  swift_bridgeObjectRetain();
  sub_1C104AFC8(v15);
  sub_1C11F6E90();
  uint64_t v16 = (void *)sub_1C151EC4C();
  swift_bridgeObjectRelease();
  uint64_t v122 = v16;
  sub_1BFC6CA08(0, &qword_1EB880CF8);
  sub_1C11F6EE4();
  uint64_t v17 = sub_1C151E92C();
  uint64_t v18 = v5;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(int *)(type metadata accessor for FormatServiceOptions() + 40);
  char v103 = a2;
  char v104 = v13;
  sub_1C11F55C0(v17, (uint64_t)a2 + v19, (uint64_t)v13);
  uint64_t v20 = v125;
  uint64_t v126 = v125;
  uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v121 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v109 = *(void *)(v125 + 16);
  if (!v109)
  {
LABEL_62:
    uint64_t v122 = v21;
    uint64_t v94 = *(void *)(v17 + 16);
    if (v94)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v95 = 0;
      uint64_t v96 = v21;
      while (1)
      {
        unint64_t v97 = *(void *)(v17 + 8 * v95 + 32);
        uint64_t v121 = (void *)v97;
        sub_1BFC7E2FC(v97);
        sub_1C11F5CF0(&v122, v103, (uint64_t)a3, (uint64_t)v104, (uint64_t *)v124, (uint64_t *)&v120);
        if (v18) {
          break;
        }
        ++v95;
        sub_1C00544B4(v97);
        swift_bridgeObjectRelease();
        uint64_t v96 = v120;
        uint64_t v122 = v120;
        if (v94 == v95)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_68;
        }
      }
      sub_1C00544B4(v97);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C11F6F4C((uint64_t)v104);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v96 = v21;
LABEL_68:
      sub_1C11F6F4C((uint64_t)v104);
      swift_bridgeObjectRelease();
    }
    return (uint64_t)v96;
  }
  uint64_t v108 = type metadata accessor for FormatContentSlotItem();
  uint64_t v22 = *(void *)(v108 - 8);
  uint64_t v107 = v20 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  sub_1BFFAF7A4((uint64_t)&v126);
  uint64_t v23 = 0;
  uint64_t v106 = *(void *)(v22 + 72);
  long long v117 = xmmword_1C1529AE0;
  uint64_t v105 = a3;
  uint64_t v102 = v5;
  uint64_t v101 = v17;
  uint64_t v24 = (uint64_t)v100;
LABEL_5:
  uint64_t v111 = v23;
  uint64_t v31 = v107 + v106 * v23;
  sub_1C11F70D4(v31, v24, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
  uint64_t v32 = (uint64_t *)(v31 + *(int *)(v108 + 20));
  uint64_t v112 = *v32;
  if (!v112)
  {
    uint64_t v25 = 0;
    unint64_t v26 = 0;
    goto LABEL_4;
  }
  uint64_t v33 = v32[1];
  uint64_t v34 = *(void *)(v33 + 16);
  uint64_t v110 = v33;
  if (!v34)
  {
    uint64_t v59 = v112;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v60 = *(void *)(v59 + 16);
    if (!v60) {
      goto LABEL_59;
    }
LABEL_29:
    swift_bridgeObjectRetain_n();
    uint64_t v61 = (uint64_t *)(v59 + 48);
    unint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v118 = v25;
    while (1)
    {
      uint64_t v62 = *(v61 - 2);
      uint64_t v63 = *(v61 - 1);
      uint64_t v64 = *v61;
      if ((~*v61 & 0xF000000000000007) != 0)
      {
        sub_1BFDB2774(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
        uint64_t v71 = (int *)(type metadata accessor for FormatOption() - 8);
        unint64_t v72 = (*(unsigned __int8 *)(*(void *)v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v71 + 80);
        uint64_t v70 = swift_allocObject();
        *(_OWORD *)(v70 + 16) = v117;
        uint64_t v73 = (uint64_t *)(v70 + v72);
        uint64_t v25 = v118;
        *uint64_t v73 = v62;
        v73[1] = v63;
        v73[2] = v64;
        v73[3] = 1;
        uint64_t v74 = (char *)v73 + v71[9];
        uint64_t v75 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 1, 1, v75);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v65 = v119[9];
        if (*(void *)(v65 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v66 = sub_1BFEF2D8C(v62, v63);
          if (v67)
          {
            uint64_t v68 = (void *)(*(void *)(v65 + 56) + (v66 << 6));
            uint64_t v69 = v68[1];
            uint64_t v115 = v68[2];
            uint64_t v116 = v69;
            uint64_t v114 = v68[3];
            uint64_t v113 = v68[4];
            uint64_t v70 = v68[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v70 = MEMORY[0x1E4FBC860];
      }
LABEL_39:
      uint64_t v76 = *(void *)(v70 + 16);
      int64_t v77 = *(void *)(v26 + 16);
      int64_t v78 = v77 + v76;
      if (__OFADD__(v77, v76)) {
        goto LABEL_73;
      }
      sub_1BFDC11A4(v64);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v78 <= *(void *)(v26 + 24) >> 1)
      {
        if (*(void *)(v70 + 16)) {
          goto LABEL_48;
        }
      }
      else
      {
        if (v77 <= v78) {
          int64_t v80 = v77 + v76;
        }
        else {
          int64_t v80 = v77;
        }
        unint64_t v26 = sub_1BFFE1F7C(isUniquelyReferenced_nonNull_native, v80, 1, v26);
        if (*(void *)(v70 + 16))
        {
LABEL_48:
          uint64_t v81 = *(void *)(v26 + 16);
          uint64_t v82 = (*(void *)(v26 + 24) >> 1) - v81;
          uint64_t v83 = *(void *)(type metadata accessor for FormatOption() - 8);
          uint64_t v84 = *(void *)(v83 + 72);
          if (v82 < v76) {
            goto LABEL_76;
          }
          unint64_t v85 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
          unint64_t v86 = v26 + v85 + v84 * v81;
          unint64_t v87 = v70 + v85;
          uint64_t v88 = v84 * v76;
          unint64_t v89 = v86 + v88;
          unint64_t v90 = v87 + v88;
          BOOL v91 = v87 >= v89 || v86 >= v90;
          uint64_t v25 = v118;
          if (!v91) {
            goto LABEL_79;
          }
          swift_arrayInitWithCopy();
          if (v76)
          {
            uint64_t v92 = *(void *)(v26 + 16);
            BOOL v57 = __OFADD__(v92, v76);
            uint64_t v93 = v92 + v76;
            if (v57) {
              goto LABEL_78;
            }
            *(void *)(v26 + 16) = v93;
          }
          goto LABEL_31;
        }
      }
      if (v76) {
        goto LABEL_74;
      }
LABEL_31:
      v61 += 3;
      swift_bridgeObjectRelease();
      if (!--v60)
      {
        uint64_t v59 = v112;
        swift_bridgeObjectRelease_n();
        uint64_t v18 = v102;
        uint64_t v17 = v101;
        goto LABEL_60;
      }
    }
  }
  uint64_t v35 = v99;
  unint64_t v36 = v33 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
  swift_bridgeObjectRetain();
  sub_1BFDB3920(v112);
  swift_bridgeObjectRetain();
  uint64_t v37 = *(void *)(v35 + 72);
  uint64_t v25 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v122 = 0;
    unint64_t v123 = 0;
    uint64_t v38 = sub_1C0649618(v119, a3, (uint64_t *)&v122);
    uint64_t v39 = *(void *)(v38 + 16);
    int64_t v40 = v25[2];
    int64_t v41 = v40 + v39;
    if (__OFADD__(v40, v39)) {
      break;
    }
    uint64_t v42 = v38;
    int v43 = swift_isUniquelyReferenced_nonNull_native();
    if (v43 && v41 <= v25[3] >> 1)
    {
      if (*(void *)(v42 + 16)) {
        goto LABEL_19;
      }
    }
    else
    {
      if (v40 <= v41) {
        int64_t v44 = v40 + v39;
      }
      else {
        int64_t v44 = v40;
      }
      uint64_t v25 = (void *)sub_1C0EE2804(v43, v44, 1, (unint64_t)v25);
      if (*(void *)(v42 + 16))
      {
LABEL_19:
        uint64_t v45 = v25[2];
        uint64_t v46 = (v25[3] >> 1) - v45;
        uint64_t v47 = *(void *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
        uint64_t v48 = *(void *)(v47 + 72);
        if (v46 < v39) {
          goto LABEL_75;
        }
        unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
        char v50 = (char *)v25 + v49 + v48 * v45;
        unint64_t v51 = v42 + v49;
        uint64_t v52 = v48 * v39;
        uint64_t v53 = &v50[v52];
        unint64_t v54 = v51 + v52;
        if (v51 < (unint64_t)v53 && (unint64_t)v50 < v54) {
          goto LABEL_79;
        }
        swift_arrayInitWithCopy();
        if (v39)
        {
          uint64_t v56 = v25[2];
          BOOL v57 = __OFADD__(v56, v39);
          uint64_t v58 = v56 + v39;
          if (v57) {
            goto LABEL_77;
          }
          void v25[2] = v58;
        }
        goto LABEL_9;
      }
    }
    if (v39) {
      goto LABEL_72;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    v36 += v37;
    if (!--v34)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v18 = v102;
      uint64_t v17 = v101;
      uint64_t v59 = v112;
      uint64_t v60 = *(void *)(v112 + 16);
      if (v60) {
        goto LABEL_29;
      }
LABEL_59:
      unint64_t v26 = MEMORY[0x1E4FBC860];
LABEL_60:
      sub_1BFDB3960(v59);
      uint64_t v24 = (uint64_t)v100;
LABEL_4:
      uint64_t v27 = v111 + 1;
      uint64_t v122 = v25;
      unint64_t v123 = v26;
      uint64_t v28 = (uint64_t)v25;
      uint64_t v29 = v105;
      uint64_t v30 = sub_1C0649618(v119, v105, (uint64_t *)&v122);
      a3 = v29;
      sub_1BFDB3960(v28);
      sub_1C11F713C(v24, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      sub_1C104AF9C(v30);
      uint64_t v23 = v27;
      if (v27 == v109)
      {
        sub_1BFCA59C8((uint64_t)&v126);
        uint64_t v21 = v121;
        goto LABEL_62;
      }
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C11F5070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C11F6BBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11F5098(uint64_t a1)
{
  unint64_t v2 = sub_1BFDB2854();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11F50D4(uint64_t a1)
{
  unint64_t v2 = sub_1BFDB2854();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSlot.encode(to:)(void *a1)
{
  sub_1BFDB2650(0, &qword_1EB85E128, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = v1[2];
  uint64_t v21 = v1[3];
  uint64_t v22 = v8;
  uint64_t v9 = v1[4];
  uint64_t v19 = v1[5];
  uint64_t v20 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDB2854();
  sub_1C1520F0C();
  LOBYTE(v26) = 0;
  uint64_t v10 = v7;
  uint64_t v11 = v23;
  sub_1C15207CC();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v13 = v20;
  uint64_t v14 = v21;
  uint64_t v15 = v19;
  if (*(void *)(v22 + 16))
  {
    LOBYTE(v24) = 1;
    uint64_t v26 = v22;
    sub_1C11F662C();
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
    sub_1BFDB23BC((unint64_t *)&qword_1EB85DEE0, (void (*)(void))sub_1C00FC944);
    sub_1C1520BAC();
  }
  uint64_t v16 = v5;
  if (*(void *)(v14 + 16))
  {
    LOBYTE(v24) = 2;
    uint64_t v26 = v14;
    sub_1C11F662C();
    sub_1BFC6CA08(0, &qword_1EB880CF8);
    sub_1BFDB27D8((unint64_t *)&qword_1EB860CB8, (void (*)(void))sub_1BFD1B910);
    sub_1C1520BAC();
  }
  if (*(void *)(v13 + 16))
  {
    LOBYTE(v24) = 3;
    uint64_t v26 = v13;
    sub_1C11F662C();
    sub_1BFDB2774(0, &qword_1EB890000, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItem, MEMORY[0x1E4FBB320]);
    sub_1BFDB26B4(&qword_1EB86B108, (unint64_t *)&unk_1EB866D00);
    sub_1C1520BAC();
  }
  if (*(void *)(v15 + 16))
  {
    char v25 = 4;
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_1BFE71F8C(v15);
    swift_bridgeObjectRelease();
    uint64_t v24 = v17;
    swift_retain();
    sub_1BFD8BB48((uint64_t *)&v24);
    swift_release();
    uint64_t v26 = (uint64_t)v24;
    sub_1C11F662C();
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
    sub_1BFD8BA00();
    sub_1C1520BAC();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v4);
}

uint64_t sub_1C11F5560(void *a1)
{
  return FormatContentSlot.encode(to:)(a1);
}

uint64_t sub_1C11F557C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatSlotTransform.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C11F55C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v49 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v45 - v9;
  sub_1BFDB2774(0, (unint64_t *)&unk_1EB882CC0, (uint64_t (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v45 - v12;
  uint64_t v14 = type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for FormatTransformData();
  uint64_t v18 = *(int *)(v51 + 40);
  uint64_t v50 = a2;
  sub_1C11F6FD8(a2 + v18, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C11F6F4C((uint64_t)v13);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a3, 1, 1, v14);
  }
  sub_1C11F706C((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
  uint64_t v55 = 0;
  char v56 = 1;
  uint64_t v53 = 0;
  char v54 = 1;
  uint64_t v20 = *(void *)(a1 + 16);
  if (!v20) {
    goto LABEL_45;
  }
  v45[0] = v17;
  uint64_t v46 = v15;
  uint64_t v47 = v14;
  uint64_t v48 = a3;
  uint64_t v21 = a1 + 32;
  v45[1] = a1;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v22 = 0;
  uint64_t v23 = v50;
  uint64_t v24 = (uint64_t)v49;
  uint64_t v52 = v21;
LABEL_16:
  unint64_t v30 = *(void *)(v21 + 8 * v22);
  if (v30 >> 60 != 2)
  {
    if (!(v30 >> 60))
    {
      uint64_t v31 = swift_projectBox();
      sub_1C11F70D4(v31, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
      swift_retain();
      uint64_t v32 = sub_1C11A8778(v23);
      if (v56)
      {
        if (v32 < 0) {
          uint64_t v25 = -1;
        }
        else {
          uint64_t v25 = v32;
        }
      }
      else
      {
        uint64_t v25 = v55;
        if (v32 > v55) {
          uint64_t v25 = v32;
        }
      }
      uint64_t v55 = v25;
      char v56 = 0;
      uint64_t v26 = sub_1C11A8BE8(v23);
      uint64_t v27 = v53;
      if (v26 < v53) {
        uint64_t v27 = v26;
      }
      if (v54) {
        uint64_t v28 = v26;
      }
      else {
        uint64_t v28 = v27;
      }
      uint64_t v53 = v28;
      char v54 = 0;
      uint64_t v29 = (uint64_t)v10;
      goto LABEL_14;
    }
    goto LABEL_15;
  }
  if (*(void *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 0x10) >> 60) {
    goto LABEL_15;
  }
  uint64_t v33 = swift_projectBox();
  sub_1C11F70D4(v33, v24, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
  uint64_t v34 = *(void *)(v23 + *(int *)(v51 + 20));
  if (!*(void *)(v34 + 16))
  {
    swift_retain();
    uint64_t v29 = v24;
    goto LABEL_14;
  }
  sub_1C1520DBC();
  swift_retain();
  sub_1C151E77C();
  uint64_t v35 = sub_1C1520E0C();
  uint64_t v36 = -1 << *(unsigned char *)(v34 + 32);
  unint64_t v37 = v35 & ~v36;
  uint64_t v29 = v24;
  if (((*(void *)(v34 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v38 = ~v36;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v34 + 48) + v37))
    {
      case 1:
        swift_bridgeObjectRelease();
        goto LABEL_32;
      default:
        char v39 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v39 & 1) == 0)
        {
          unint64_t v37 = (v37 + 1) & v38;
          if (((*(void *)(v34 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          {
            uint64_t v24 = (uint64_t)v49;
            uint64_t v29 = (uint64_t)v49;
            uint64_t v23 = v50;
            goto LABEL_14;
          }
          continue;
        }
LABEL_32:
        uint64_t v23 = v50;
        uint64_t v24 = (uint64_t)v49;
        uint64_t v40 = sub_1C11A8778(v50);
        if (v56)
        {
          if (v40 < 0) {
            uint64_t v41 = -1;
          }
          else {
            uint64_t v41 = v40;
          }
        }
        else
        {
          uint64_t v41 = v55;
          if (v40 > v55) {
            uint64_t v41 = v40;
          }
        }
        uint64_t v55 = v41;
        char v56 = 0;
        uint64_t v42 = sub_1C11A8BE8(v23);
        uint64_t v43 = v53;
        if (v42 < v53) {
          uint64_t v43 = v42;
        }
        if (v54) {
          uint64_t v44 = v42;
        }
        else {
          uint64_t v44 = v43;
        }
        uint64_t v53 = v44;
        char v54 = 0;
        uint64_t v29 = v24;
LABEL_14:
        sub_1C11F713C(v29, (uint64_t (*)(void))type metadata accessor for FormatSlotItemCountLimit);
        sub_1C00544B4(v30);
        uint64_t v21 = v52;
LABEL_15:
        if (++v22 != v20) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        a3 = v48;
        uint64_t v14 = v47;
        uint64_t v15 = v46;
        uint64_t v17 = (char *)v45[0];
LABEL_45:
        swift_beginAccess();
        if ((v56 & 1) == 0)
        {
          *(void *)uint64_t v17 = v55;
          v17[8] = 0;
        }
        swift_beginAccess();
        if ((v54 & 1) == 0)
        {
          *((void *)v17 + 2) = v53;
          v17[24] = 0;
        }
        sub_1C11F706C((uint64_t)v17, a3, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v14);
    }
  }
}

uint64_t sub_1C11F5CF0@<X0>(void **a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v9 = (uint64_t)*a1;
  uint64_t v10 = sub_1C0F24664(*a1, a2, a3, a4);
  if (v6)
  {
    type metadata accessor for FormatServiceOptions();
    sub_1C151F36C();
    sub_1BFFDEB20();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C152C7F0;
    uint64_t v13 = *a5;
    uint64_t v12 = a5[1];
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v15 = sub_1BFE9C558();
    *(void *)(v11 + 64) = v15;
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v12;
    swift_bridgeObjectRetain();
    uint64_t v16 = FormatSlotTransform.description.getter();
    *(void *)(v11 + 96) = v14;
    *(void *)(v11 + 104) = v15;
    *(void *)(v11 + 72) = v16;
    *(void *)(v11 + 80) = v17;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    sub_1C152036C();
    *(void *)(v11 + 136) = v14;
    *(void *)(v11 + 144) = v15;
    *(void *)(v11 + 112) = 0;
    *(void *)(v11 + 120) = 0xE000000000000000;
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    uint64_t v19 = v10;
    type metadata accessor for FormatServiceOptions();
    sub_1BFFDEB20();
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C152A660;
    uint64_t v22 = *a5;
    uint64_t v21 = a5[1];
    *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v23 = sub_1BFE9C558();
    *(void *)(v20 + 64) = v23;
    *(void *)(v20 + 32) = v22;
    *(void *)(v20 + 40) = v21;
    uint64_t v24 = *(void *)(v9 + 16);
    uint64_t v25 = MEMORY[0x1E4FBB550];
    uint64_t v26 = MEMORY[0x1E4FBB5C8];
    *(void *)(v20 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v20 + 104) = v26;
    *(void *)(v20 + 72) = v24;
    uint64_t v27 = *(void *)(v19 + 16);
    *(void *)(v20 + 136) = v25;
    *(void *)(v20 + 144) = v26;
    *(void *)(v20 + 112) = v27;
    swift_bridgeObjectRetain();
    uint64_t v28 = FormatSlotTransform.description.getter();
    *(void *)(v20 + 176) = MEMORY[0x1E4FBB1A0];
    *(void *)(v20 + 184) = v23;
    *(void *)(v20 + 152) = v28;
    *(void *)(v20 + 160) = v29;
    sub_1C151F38C();
    sub_1C15197BC();
    uint64_t result = swift_bridgeObjectRelease();
    *a6 = v19;
  }
  return result;
}

uint64_t sub_1C11F5F58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC6764(0);
  uint64_t result = sub_1C15204DC();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v33 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v28 = v9;
  int64_t v29 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v30 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(v33 + 48) + 16 * i);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    sub_1C11F70D4(*(void *)(v33 + 56) + *(void *)(v31 + 72) * i, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    uint64_t v22 = *(void *)&v4[*(int *)(v32 + 28)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C11F713C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    *(void *)(v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    unint64_t v23 = (void *)(v6[6] + 16 * i);
    *unint64_t v23 = v21;
    v23[1] = v20;
    *(void *)(v6[7] + 8 * i) = v22;
    uint64_t v24 = v6[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    _OWORD v6[2] = v26;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_24;
    }
    if (v16 >= v29) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v16);
    ++v7;
    if (!v17)
    {
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v29) {
        return (uint64_t)v6;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v7);
      if (!v17)
      {
        int64_t v7 = v16 + 2;
        if (v16 + 2 >= v29) {
          return (uint64_t)v6;
        }
        unint64_t v17 = *(void *)(v28 + 8 * v7);
        if (!v17) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v13 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v29) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C11F6218(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC6574(0);
  uint64_t result = sub_1C15204DC();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v33 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v28 = v9;
  int64_t v29 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v30 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(v33 + 48) + 16 * i);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    sub_1C11F70D4(*(void *)(v33 + 56) + *(void *)(v31 + 72) * i, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    uint64_t v22 = *(void *)&v4[*(int *)(v32 + 24)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C11F713C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    *(void *)(v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    unint64_t v23 = (void *)(v6[6] + 16 * i);
    *unint64_t v23 = v21;
    v23[1] = v20;
    *(void *)(v6[7] + 8 * i) = v22;
    uint64_t v24 = v6[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    _OWORD v6[2] = v26;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_24;
    }
    if (v16 >= v29) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v16);
    ++v7;
    if (!v17)
    {
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v29) {
        return (uint64_t)v6;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v7);
      if (!v17)
      {
        int64_t v7 = v16 + 2;
        if (v16 + 2 >= v29) {
          return (uint64_t)v6;
        }
        unint64_t v17 = *(void *)(v28 + 8 * v7);
        if (!v17) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v13 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v29) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed17FormatContentSlotV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v10 = sub_1C00E57C0(v2, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v11 = sub_1C00DFA94(v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = sub_1C00E52B8(v3, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1BFEFAE14(v5, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

unint64_t sub_1C11F662C()
{
  unint64_t result = qword_1EB86B8C0;
  if (!qword_1EB86B8C0)
  {
    sub_1BFDB2650(255, &qword_1EB85E128, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B8C0);
  }
  return result;
}

unint64_t sub_1C11F66A0(void *a1)
{
  a1[1] = sub_1C007D080();
  a1[2] = sub_1C0DC595C();
  unint64_t result = sub_1C11F66D8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11F66D8()
{
  unint64_t result = qword_1EA1ACEC8;
  if (!qword_1EA1ACEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACEC8);
  }
  return result;
}

uint64_t sub_1C11F672C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11F6738(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1C11F677C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11F6788(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C11F67CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11F67D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_1C11F681C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11F6828(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 40) = v3;
  return result;
}

uint64_t destroy for FormatContentSlot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatContentSlot(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatContentSlot(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatContentSlot(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatContentSlot()
{
  return &type metadata for FormatContentSlot;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSlot.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11F6B2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSlot.CodingKeys()
{
  return &type metadata for FormatContentSlot.CodingKeys;
}

unint64_t sub_1C11F6B68()
{
  unint64_t result = qword_1EA1ACED0;
  if (!qword_1EA1ACED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACED0);
  }
  return result;
}

uint64_t sub_1C11F6BBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953459315 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F66736E617274 && a2 == 0xEA0000000000736DLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void sub_1C11F6DE0()
{
  if (!qword_1EB88FF28)
  {
    type metadata accessor for FormatContentSlotItemResolution();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB88FF28);
    }
  }
}

uint64_t sub_1C11F6E4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0F259D8(v1);
  *a1 = result;
  return result;
}

unint64_t sub_1C11F6E90()
{
  unint64_t result = qword_1EB88CCA8;
  if (!qword_1EB88CCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88CCA8);
  }
  return result;
}

unint64_t sub_1C11F6EE4()
{
  unint64_t result = qword_1EB88FFE8;
  if (!qword_1EB88FFE8)
  {
    sub_1BFC6CA08(255, &qword_1EB880CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88FFE8);
  }
  return result;
}

uint64_t sub_1C11F6F4C(uint64_t a1)
{
  sub_1BFDB2774(0, (unint64_t *)&unk_1EB882CC0, (uint64_t (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C11F6FD8(uint64_t a1, uint64_t a2)
{
  sub_1BFDB2774(0, (unint64_t *)&unk_1EB882CC0, (uint64_t (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C11F706C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C11F70D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C11F713C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1C11F719C(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1C1519E9C();
    char v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    char v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1C11F7284(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C1519E9C();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1C11F72FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C1519E9C();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1C11F7398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C1519E9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_1C11F7438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1C1519E9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1C11F74BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C1519E9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C11F7550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11F7564);
}

uint64_t sub_1C11F7564(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1519E9C();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C11F7614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11F7628);
}

void *sub_1C11F7628(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1519E9C();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LayeredMediaImageVariant()
{
  uint64_t result = qword_1EB85D820;
  if (!qword_1EB85D820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C11F771C()
{
  uint64_t result = sub_1C1519E9C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t UIUserInterfaceStyle.description.getter(uint64_t a1)
{
  uint64_t v1 = 1802658148;
  uint64_t v2 = 0x6E776F6E6B6E75;
  if (a1 == 1) {
    uint64_t v2 = 0x746867696CLL;
  }
  if (a1 != 2) {
    uint64_t v1 = v2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0x6669636570736E75;
  }
}

uint64_t sub_1C11F7834()
{
  return sub_1C11F7A38(&qword_1EA1ACED8);
}

uint64_t sub_1C11F7868(uint64_t a1)
{
  uint64_t v2 = sub_1C11F7A38(&qword_1EA1ACEE0);
  uint64_t v3 = MEMORY[0x1E4FAB4A0];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C11F78D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C11F7A38(&qword_1EA1ACEE0);
  uint64_t v5 = MEMORY[0x1E4FAB4A0];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C11F7950(uint64_t a1)
{
  uint64_t v2 = sub_1C11F7A38(&qword_1EA1ACEE0);
  uint64_t v3 = MEMORY[0x1E4FAB4A0];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1C11F79C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = 1802658148;
  uint64_t v3 = 0x6E776F6E6B6E75;
  if (*v0 == 1) {
    uint64_t v3 = 0x746867696CLL;
  }
  if (v1 != 2) {
    uint64_t v2 = v3;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0x6669636570736E75;
  }
}

uint64_t sub_1C11F7A38(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UIUserInterfaceStyle(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1C11F7A7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151631C();
    uint64_t v12 = *(void *)(v11 - 8);
    char v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1BFF97C40();
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_1C11F7C10(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C151631C();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1C11F7CE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1BFF97C40();
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_1C11F7E24(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFF97C40();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C11F7FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BFF97C40();
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_1C11F8108(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BFF97C40();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C11F82A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11F82BC);
}

uint64_t sub_1C11F82BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFF97C40();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C11F836C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11F8380);
}

uint64_t sub_1C11F8380(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFF97C40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PuzzleStatsProcessingData()
{
  uint64_t result = qword_1EB86D118;
  if (!qword_1EB86D118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C11F8474()
{
  sub_1BFF97C40();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t FormatSlotDefinition.init(identifier:name:description:items:transforms:properties:editorProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  uint64_t v11 = (uint64_t)a9 + *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  return sub_1BFEF6F58(a11, v11);
}

uint64_t FormatSlotDefinition.transforms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11F8584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v81 = a2;
  sub_1BFE79D74(0, &qword_1EA19A078, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v73 - v7;
  uint64_t v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v78 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v80 = (uint64_t)&v73 - v13;
  MEMORY[0x1F4188790](v14);
  int64_t v16 = (uint64_t *)((char *)&v73 - v15);
  MEMORY[0x1F4188790](v17);
  uint64_t v79 = (uint64_t)&v73 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v73 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v73 - v23;
  unint64_t v25 = v3[6];
  uint64_t v26 = *(void *)(v25 + 16);
  uint64_t v82 = a3;
  if (!v26)
  {
    swift_bridgeObjectRetain();
LABEL_19:
    sub_1BFF23570(v81, (uint64_t)v8, &qword_1EA19A078, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_1BFE306DC((uint64_t)v8, &qword_1EA19A078, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      uint64_t v45 = v78;
      sub_1C034D088(a1, v78);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v25 = sub_1C0EE42D4(0, *(void *)(v25 + 16) + 1, 1, v25);
      }
      unint64_t v47 = *(void *)(v25 + 16);
      unint64_t v46 = *(void *)(v25 + 24);
      if (v47 >= v46 >> 1) {
        unint64_t v25 = sub_1C0EE42D4(v46 > 1, v47 + 1, 1, v25);
      }
      *(void *)(v25 + 16) = v47 + 1;
      sub_1C034CFD8(v45, v25+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v47);
      goto LABEL_31;
    }
    uint64_t v48 = (uint64_t)v8;
    uint64_t v49 = v79;
    sub_1C034CFD8(v48, v79);
    uint64_t v50 = v9;
    uint64_t v51 = *(void *)(a1 + 8);
    sub_1BFE79D74(0, (unint64_t *)&unk_1EA1A88F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, MEMORY[0x1E4FBBE00]);
    uint64_t v52 = *(void *)(v10 + 72);
    uint64_t v53 = *(unsigned __int8 *)(v10 + 80);
    char v54 = (uint64_t *)a1;
    uint64_t v55 = (v53 + 32) & ~v53;
    uint64_t v81 = v52;
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1C1529AE0;
    uint64_t v57 = *v54;
    sub_1C034D088(v49, v56 + v55);
    sub_1BFF23570((uint64_t)v54 + *(int *)(v50 + 36), (uint64_t)v16 + *(int *)(v50 + 36), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    *int64_t v16 = v57;
    uint64_t v58 = MEMORY[0x1E4FBC860];
    v16[1] = v51;
    long long v16[2] = v58;
    v16[3] = v58;
    v16[4] = v56;
    uint64_t v59 = v80;
    sub_1C034D088((uint64_t)v16, v80);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_1C0EE42D4(0, *(void *)(v25 + 16) + 1, 1, v25);
    }
    unint64_t v61 = *(void *)(v25 + 16);
    unint64_t v60 = *(void *)(v25 + 24);
    if (v61 >= v60 >> 1) {
      unint64_t v25 = sub_1C0EE42D4(v60 > 1, v61 + 1, 1, v25);
    }
    *(void *)(v25 + 16) = v61 + 1;
    sub_1C034CFD8(v59, v25 + v55 + v61 * v81);
    sub_1C11F9DF0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
    uint64_t v44 = v49;
LABEL_30:
    sub_1C11F9DF0(v44, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
LABEL_31:
    uint64_t v63 = *v3;
    uint64_t v62 = v3[1];
    uint64_t v65 = v3[2];
    uint64_t v64 = v3[3];
    uint64_t v66 = v3[4];
    uint64_t v67 = v3[5];
    uint64_t v68 = v3[7];
    uint64_t v69 = v3[8];
    uint64_t v70 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
    uint64_t v71 = (uint64_t)v3 + v70;
    unint64_t v72 = v82;
    sub_1BFF23570(v71, (uint64_t)v82 + v70, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    *unint64_t v72 = v63;
    v72[1] = v62;
    v72[2] = v65;
    v72[3] = v64;
    v72[4] = v66;
    v72[5] = v67;
    v72[6] = v25;
    v72[7] = v68;
    v72[8] = v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  uint64_t v76 = v10;
  uint64_t v77 = v9;
  unint64_t v75 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v74 = *(void *)(v10 + 72);
  sub_1C034D088(v25 + v75 + v74 * (v26 - 1), (uint64_t)&v73 - v23);
  uint64_t v27 = *((void *)v24 + 1);
  uint64_t v28 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v29 = (int *)a1;
  char v30 = sub_1C00AC6B0(v27, v28);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
  {
    sub_1C11F9DF0((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
    a1 = (uint64_t)v29;
    uint64_t v10 = v76;
    uint64_t v9 = v77;
    goto LABEL_19;
  }
  int v32 = *(_DWORD *)v24;
  int v33 = *v29;
  int v34 = 0x7FFFFFFF;
  BOOL v35 = *(_DWORD *)v24 == 0x7FFFFFFF || v33 == 0x7FFFFFFF;
  int v36 = 0x7FFFFFFF;
  if (!v35)
  {
    int v36 = v32 + v33;
    if (__OFADD__(v32, v33)) {
      goto LABEL_35;
    }
  }
  int v37 = *((_DWORD *)v24 + 1);
  int v38 = v29[1];
  if (v37 != 0x7FFFFFFF && v38 != 0x7FFFFFFF)
  {
    int v34 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      goto LABEL_36;
    }
  }
  uint64_t v40 = *((void *)v24 + 3);
  uint64_t v41 = *((void *)v24 + 4);
  sub_1BFF23570((uint64_t)&v24[*(int *)(v77 + 36)], (uint64_t)&v21[*(int *)(v77 + 36)], (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v42 = MEMORY[0x1E4FBC860];
  *(_DWORD *)uint64_t v21 = v36;
  *((_DWORD *)v21 + 1) = v34;
  *((void *)v21 + 1) = v27;
  *((void *)v21 + 2) = v42;
  *((void *)v21 + 3) = v40;
  *((void *)v21 + 4) = v41;
  unint64_t v43 = *(void *)(v25 + 16);
  swift_bridgeObjectRetain();
  sub_1BFDB3920(v40);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if (v43) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t result = sub_1C0378EA8(v25);
    unint64_t v25 = result;
    if (v43)
    {
LABEL_15:
      if (v43 <= *(void *)(v25 + 16))
      {
        sub_1C03BC988((uint64_t)v21, v25 + v75 + (v43 - 1) * v74);
        uint64_t v44 = (uint64_t)v24;
        goto LABEL_30;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t FormatSlotDefinition.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSlotDefinition.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSlotDefinition.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSlotDefinition.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotDefinition.transforms.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatSlotDefinition.transforms.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinition.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotDefinition.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatSlotDefinition();
  return sub_1BFF23570(v1 + *(int *)(v3 + 40), a1, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
}

BOOL _s8NewsFeed20FormatSlotDefinitionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFC50CC();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE79D74(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v42 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v42 - v19;
  if (*a1 == *a2 && a1[1] == a2[1] || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v23 = sub_1C1520A9C(), BOOL result = 0, (v23 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5] || (v24 = sub_1C1520A9C(), BOOL result = 0, (v24 & 1) != 0))
      {
        if (sub_1C00DFAB0(a1[6], a2[6]))
        {
          uint64_t v44 = v5;
          uint64_t v45 = v11;
          uint64_t v43 = v4;
          uint64_t v25 = a1[7];
          uint64_t v26 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v27 = sub_1C00DFA94(v25, v26);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v27 & 1) != 0 && (sub_1C00DFB04(a1[8], a2[8]))
          {
            uint64_t v28 = type metadata accessor for FormatSlotDefinition();
            uint64_t v29 = (uint64_t)a1 + *(int *)(v28 + 40);
            char v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFF23570(v29, (uint64_t)v20, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFF23570((uint64_t)a2 + *(int *)(v28 + 40), (uint64_t)v17, (unint64_t *)&qword_1EB884FE0, v30);
            uint64_t v31 = (uint64_t)v45;
            uint64_t v32 = (uint64_t)&v45[*(int *)(v9 + 48)];
            sub_1BFF23570((uint64_t)v20, (uint64_t)v45, (unint64_t *)&qword_1EB884FE0, v30);
            sub_1BFF23570((uint64_t)v17, v32, (unint64_t *)&qword_1EB884FE0, v30);
            uint64_t v33 = v43;
            int v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
            if (v34(v31, 1, v43) == 1)
            {
              BOOL v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE306DC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE306DC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v35);
              if (v34(v32, 1, v33) == 1)
              {
                sub_1BFE306DC((uint64_t)v45, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                return 1;
              }
            }
            else
            {
              sub_1BFF23570(v31, (uint64_t)v14, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              if (v34(v32, 1, v33) != 1)
              {
                uint64_t v37 = v44;
                (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v7, v32, v33);
                sub_1C11F9E50(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                uint64_t v38 = v31;
                char v39 = sub_1C151E5CC();
                uint64_t v40 = *(void (**)(char *, uint64_t))(v37 + 8);
                v40(v7, v33);
                uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFE306DC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFE306DC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v41);
                v40(v14, v33);
                sub_1BFE306DC(v38, (unint64_t *)&qword_1EB884FE0, v41);
                return (v39 & 1) != 0;
              }
              int v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE306DC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE306DC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v36);
              (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v33);
            }
            sub_1C11F9DF0((uint64_t)v45, (uint64_t (*)(void))sub_1BFFC50CC);
          }
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C11F9338(uint64_t a1)
{
  uint64_t result = sub_1C11F9E50(&qword_1EA1ACEE8, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C11F9390(void *a1)
{
  a1[1] = sub_1C11F9E50(&qword_1EB876CB8, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  a1[2] = sub_1C11F9E50(&qword_1EB866AF0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  uint64_t result = sub_1C11F9E50(&qword_1EA1ACEF0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  a1[3] = result;
  return result;
}

uint64_t sub_1C11F943C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11F9448(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 56) = v3;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatSlotDefinition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = *(int *)(a3 + 40);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[8] = a2[8];
    uint64_t v11 = sub_1C1518CDC();
    uint64_t v15 = *(void *)(v11 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v10, 1, v11))
    {
      sub_1BFE79D74(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v11);
    }
  }
  return v3;
}

void *assignWithCopy for FormatSlotDefinition(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFE79D74(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for FormatSlotDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BFE79D74(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *assignWithTake for FormatSlotDefinition(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C1518CDC();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1BFE79D74(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1C11F9C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFE79D74(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C11F9D18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFE79D74(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C11F9DF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C11F9E50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C11F9E98()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C11F9ED0(unsigned __int8 *a1, uint64_t a2, void *a3, void (*a4)(id))
{
  int v6 = *a1;
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = (void *)MEMORY[0x1C18C9C60](v7);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_view);

    if (v10)
    {
      if (v6)
      {
        objc_msgSend(v10, sel_bounds);
        objc_msgSend(a3, sel_setFrame_);
        objc_msgSend(a3, sel_setAutoresizingMask_, 18);
        id v11 = objc_msgSend(v10, sel_addSubview_, a3);
      }
      else
      {
        id v11 = objc_msgSend(a3, sel_removeFromSuperview);
      }
      a4(v11);
    }
  }
}

uint64_t sub_1C11F9FC8()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1C11FA010(unsigned __int8 *a1)
{
  sub_1C11F9ED0(a1, *(void *)(v1 + 40), *(void **)(v1 + 48), *(void (**)(id))(v1 + 56));
}

id sub_1C11FA024(void *a1, id a2)
{
  if (a1)
  {
    id v3 = a1;
LABEL_5:
    id v5 = a1;
    return v3;
  }
  id result = objc_msgSend(a2, sel_view);
  if (result)
  {
    id v3 = result;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C11FA080@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t started = type metadata accessor for StartTimeEndTime(0);
  MEMORY[0x1F4188790](started);
  int v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StartTime(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  unint64_t v11 = 0xA000000000000000;
  switch((int)result)
  {
    case 1:
      sub_1C1201AC0(a1, (uint64_t)v9, type metadata accessor for StartTime);
      sub_1C11FAC10();
      uint64_t v15 = swift_allocBox();
      uint64_t v17 = v16;
      uint64_t v18 = sub_1C151631C();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17, v9, v18);
      unint64_t v11 = v15 | 0x1000000000000000;
      break;
    case 2:
      sub_1C1201AC0(a1, (uint64_t)v9, type metadata accessor for StartTime);
      sub_1C11FAC10();
      uint64_t v19 = swift_allocBox();
      uint64_t v21 = v20;
      uint64_t v22 = sub_1C151631C();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21, v9, v22);
      unint64_t v11 = v19 | 0x2000000000000000;
      break;
    case 3:
      sub_1C1201AC0(a1, (uint64_t)v9, type metadata accessor for StartTime);
      sub_1C11FAC10();
      uint64_t v23 = swift_allocBox();
      uint64_t v25 = v24;
      uint64_t v26 = sub_1C151631C();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v25, v9, v26);
      unint64_t v11 = v23 | 0x3000000000000000;
      break;
    case 4:
      sub_1C1201AC0(a1, (uint64_t)v9, type metadata accessor for StartTime);
      sub_1C11FAC10();
      uint64_t v27 = swift_allocBox();
      uint64_t v29 = v28;
      uint64_t v30 = sub_1C151631C();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v29, v9, v30);
      unint64_t v11 = v27 | 0x4000000000000000;
      break;
    case 5:
      sub_1C1201AC0(a1, (uint64_t)v9, type metadata accessor for StartTime);
      sub_1C11FAC10();
      uint64_t v31 = swift_allocBox();
      uint64_t v33 = v32;
      uint64_t v34 = sub_1C151631C();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v33, v9, v34);
      unint64_t v11 = v31 | 0x5000000000000000;
      break;
    case 6:
      sub_1C1201AC0(a1, (uint64_t)v9, type metadata accessor for StartTime);
      sub_1C11FAC10();
      uint64_t v35 = swift_allocBox();
      uint64_t v37 = v36;
      uint64_t v38 = sub_1C151631C();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v37, v9, v38);
      unint64_t v11 = v35 | 0x6000000000000000;
      break;
    case 7:
      sub_1C1201AC0(a1, (uint64_t)v9, type metadata accessor for StartTime);
      sub_1C11FAC10();
      uint64_t v55 = swift_allocBox();
      uint64_t v57 = v56;
      uint64_t v58 = sub_1C151631C();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v57, v9, v58);
      unint64_t v11 = v55 | 0x7000000000000000;
      break;
    case 8:
      sub_1C1201AC0(a1, (uint64_t)v6, type metadata accessor for StartTimeEndTime);
      sub_1C11FABA8();
      uint64_t v40 = v39;
      uint64_t v41 = swift_allocBox();
      uint64_t v43 = v42;
      uint64_t v44 = v42 + *(int *)(v40 + 48);
      uint64_t v45 = sub_1C151631C();
      unint64_t v46 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v45 - 8) + 32);
      v46(v43, v6, v45);
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v46)(v44, &v6[*(int *)(started + 20)], v45);
      unint64_t v11 = v41 | 0x8000000000000000;
      break;
    case 9:
      sub_1C1201AC0(a1, (uint64_t)v6, type metadata accessor for StartTimeEndTime);
      sub_1C11FABA8();
      uint64_t v48 = v47;
      uint64_t v49 = swift_allocBox();
      uint64_t v51 = v50;
      uint64_t v52 = v50 + *(int *)(v48 + 48);
      uint64_t v53 = sub_1C151631C();
      char v54 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v53 - 8) + 32);
      v54(v51, v6, v53);
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v54)(v52, &v6[*(int *)(started + 20)], v53);
      unint64_t v11 = v49 | 0x9000000000000000;
      break;
    case 10:
      break;
    default:
      sub_1C1201AC0(a1, (uint64_t)v9, type metadata accessor for StartTime);
      sub_1C11FAC10();
      unint64_t v11 = swift_allocBox();
      uint64_t v13 = v12;
      uint64_t v14 = sub_1C151631C();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v13, v9, v14);
      break;
  }
  *a2 = v11;
  return result;
}

uint64_t SportsDataVisualizationEventStatus.isLive.getter()
{
  uint64_t v1 = *v0 >> 60;
  char v2 = 1;
  switch(v1)
  {
    case 2:
    case 3:
    case 7:
      break;
    default:
      char v2 = sub_1C1520A9C();
      break;
  }
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t SportsDataVisualizationEventStatus.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  switch(*v1 >> 60)
  {
    case 8:
    case 9:
      sub_1C11FABA8();
      goto LABEL_4;
    case 0xALL:
      uint64_t v10 = sub_1C151631C();
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
      uint64_t v8 = v10;
      uint64_t v6 = a1;
      uint64_t v7 = 1;
      break;
    default:
      sub_1C11FAC10();
LABEL_4:
      uint64_t v3 = swift_projectBox();
      uint64_t v4 = sub_1C151631C();
      uint64_t v11 = *(void *)(v4 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, v3, v4);
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
      uint64_t v6 = a1;
      uint64_t v7 = 0;
      uint64_t v8 = v4;
      break;
  }
  return v5(v6, v7, 1, v8);
}

uint64_t SportsDataVisualizationEventStatus.endTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151631C();
  __n128 v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 >> 61 == 4)
  {
    uint64_t v14 = v4;
    sub_1C11FABA8();
    uint64_t v9 = v8;
    uint64_t v10 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, v10 + *(int *)(v9 + 48), v3);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v7, v3);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v3);
  }
  else
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
    return v12(a1, 1, 1, v3, v5);
  }
}

uint64_t SportsDataVisualizationEventStatus.isFinalized.getter()
{
  uint64_t v1 = *v0 >> 60;
  char v2 = 1;
  switch(v1)
  {
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
      break;
    default:
      char v2 = sub_1C1520A9C();
      break;
  }
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t SportsDataVisualizationEventStatus.sportEventState.getter()
{
  return byte_1C15D789E[*v0 >> 60];
}

void sub_1C11FABA8()
{
  if (!qword_1EB863680)
  {
    sub_1C151631C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB863680);
    }
  }
}

void sub_1C11FAC10()
{
  if (!qword_1EB863688)
  {
    unint64_t v0 = sub_1C151631C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863688);
    }
  }
}

uint64_t SportsDataVisualizationEventStatus.isUpcoming.getter()
{
  uint64_t v1 = *v0 >> 60;
  char v2 = 1;
  switch(v1)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      char v2 = sub_1C1520A9C();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C11FAD4C(char a1)
{
  uint64_t result = 0x656D6167657270;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6576694C7261656ELL;
      break;
    case 2:
      uint64_t result = 0x6572676F72506E69;
      break;
    case 3:
      uint64_t result = 0x6B61657262;
      break;
    case 4:
      uint64_t result = 0x656E6F7074736F70;
      break;
    case 5:
      uint64_t result = 0x65646E6570737573;
      break;
    case 6:
      uint64_t result = 0x656C6C65636E6163;
      break;
    case 7:
      uint64_t result = 0x646579616C6564;
      break;
    case 8:
      uint64_t result = 0x6C616E6966;
      break;
    case 9:
      uint64_t result = 0x74696566726F66;
      break;
    case 10:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C11FAE90()
{
  return 0x6D69547472617473;
}

uint64_t sub_1C11FAEB0(uint64_t a1)
{
  unint64_t v2 = sub_1C120028C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FAEEC(uint64_t a1)
{
  unint64_t v2 = sub_1C120028C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FAF28(uint64_t a1)
{
  unint64_t v2 = sub_1C1200190();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FAF64(uint64_t a1)
{
  unint64_t v2 = sub_1C1200190();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FAFA0()
{
  return sub_1C11FAD4C(*v0);
}

uint64_t sub_1C11FAFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1201530(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11FAFD0(uint64_t a1)
{
  unint64_t v2 = sub_1C12003DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FB00C(uint64_t a1)
{
  unint64_t v2 = sub_1C12003DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FB048(uint64_t a1)
{
  unint64_t v2 = sub_1C120013C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FB084(uint64_t a1)
{
  unint64_t v2 = sub_1C120013C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FB0C0()
{
  if (*v0) {
    return 0x656D6954646E65;
  }
  else {
    return 0x6D69547472617473;
  }
}

uint64_t sub_1C11FB100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C12019C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11FB128(uint64_t a1)
{
  unint64_t v2 = sub_1C12000E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FB164(uint64_t a1)
{
  unint64_t v2 = sub_1C12000E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FB1A0(uint64_t a1)
{
  unint64_t v2 = sub_1C1200094();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FB1DC(uint64_t a1)
{
  unint64_t v2 = sub_1C1200094();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FB218(uint64_t a1)
{
  unint64_t v2 = sub_1C12002E0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FB254(uint64_t a1)
{
  unint64_t v2 = sub_1C12002E0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FB290(uint64_t a1)
{
  unint64_t v2 = sub_1C1200334();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FB2CC(uint64_t a1)
{
  unint64_t v2 = sub_1C1200334();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FB308(uint64_t a1)
{
  unint64_t v2 = sub_1C1200238();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FB344(uint64_t a1)
{
  unint64_t v2 = sub_1C1200238();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FB380(uint64_t a1)
{
  unint64_t v2 = sub_1C1200388();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FB3BC(uint64_t a1)
{
  unint64_t v2 = sub_1C1200388();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FB3F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C11FB49C(uint64_t a1)
{
  unint64_t v2 = sub_1C12001E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FB4D8(uint64_t a1)
{
  unint64_t v2 = sub_1C12001E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C11FB514(uint64_t a1)
{
  unint64_t v2 = sub_1C1200040();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11FB550(uint64_t a1)
{
  unint64_t v2 = sub_1C1200040();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsDataVisualizationEventStatus.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C1200430(0, &qword_1EB86B9B0, (uint64_t (*)(void))sub_1C1200040, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.UnknownCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v152 = *(void *)(v5 - 8);
  uint64_t v153 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v151 = (char *)&v122 - v6;
  sub_1C1200430(0, &qword_1EB86B9A0, (uint64_t (*)(void))sub_1C1200094, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.ForfeitCodingKeys, v4);
  uint64_t v158 = *(void *)(v7 - 8);
  uint64_t v159 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v157 = (char *)&v122 - v8;
  sub_1C1200430(0, &qword_1EB86B990, (uint64_t (*)(void))sub_1C12000E8, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.FinalCodingKeys, v4);
  uint64_t v155 = *(void *)(v9 - 8);
  uint64_t v156 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v154 = (char *)&v122 - v10;
  sub_1C1200430(0, &qword_1EB86B998, (uint64_t (*)(void))sub_1C120013C, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.DelayedCodingKeys, v4);
  uint64_t v150 = v11;
  uint64_t v149 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v148 = (char *)&v122 - v12;
  sub_1C1200430(0, &qword_1EB86B9C0, (uint64_t (*)(void))sub_1C1200190, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.CancelledCodingKeys, v4);
  uint64_t v147 = v13;
  uint64_t v146 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v145 = (char *)&v122 - v14;
  sub_1C1200430(0, &qword_1EB86B9D0, (uint64_t (*)(void))sub_1C12001E4, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.SuspendedCodingKeys, v4);
  uint64_t v144 = v15;
  uint64_t v143 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v142 = (char *)&v122 - v16;
  sub_1C1200430(0, &qword_1EB86B9C8, (uint64_t (*)(void))sub_1C1200238, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.PostponedCodingKeys, v4);
  uint64_t v141 = v17;
  uint64_t v140 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v139 = (char *)&v122 - v18;
  sub_1C1200430(0, &qword_1EB86B988, (uint64_t (*)(void))sub_1C120028C, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.BreakCodingKeys, v4);
  uint64_t v138 = v19;
  uint64_t v137 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v136 = (char *)&v122 - v20;
  sub_1C1200430(0, &qword_1EB86B9D8, (uint64_t (*)(void))sub_1C12002E0, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.InProgressCodingKeys, v4);
  uint64_t v135 = v21;
  uint64_t v134 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v133 = (char *)&v122 - v22;
  sub_1C1200430(0, &qword_1EB86B9B8, (uint64_t (*)(void))sub_1C1200334, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.NearLiveCodingKeys, v4);
  uint64_t v132 = v23;
  uint64_t v131 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v130 = (char *)&v122 - v24;
  sub_1C1200430(0, &qword_1EB86B9A8, (uint64_t (*)(void))sub_1C1200388, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.PregameCodingKeys, v4);
  uint64_t v129 = v25;
  uint64_t v128 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v127 = (char *)&v122 - v26;
  uint64_t v27 = sub_1C151631C();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v164 = v27;
  uint64_t v165 = v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v162 = (char *)&v122 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v163 = (char *)&v122 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v160 = (char *)&v122 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v161 = (char *)&v122 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v126 = (char *)&v122 - v37;
  MEMORY[0x1F4188790](v38);
  long long v125 = (char *)&v122 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v124 = (char *)&v122 - v41;
  MEMORY[0x1F4188790](v42);
  unint64_t v123 = (char *)&v122 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v122 = (char *)&v122 - v45;
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (char *)&v122 - v47;
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)&v122 - v50;
  MEMORY[0x1F4188790](v52);
  char v54 = (char *)&v122 - v53;
  sub_1C1200430(0, &qword_1EB86B980, (uint64_t (*)(void))sub_1C12003DC, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.CodingKeys, v4);
  uint64_t v169 = v55;
  uint64_t v167 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v57 = (char *)&v122 - v56;
  unint64_t v58 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12003DC();
  uint64_t v166 = v57;
  sub_1C1520F0C();
  switch(v58 >> 60)
  {
    case 1uLL:
      sub_1C11FAC10();
      uint64_t v66 = swift_projectBox();
      uint64_t v68 = v164;
      uint64_t v67 = v165;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v51, v66, v164);
      char v171 = 1;
      sub_1C1200334();
      uint64_t v69 = v130;
      uint64_t v70 = v169;
      uint64_t v71 = v166;
      sub_1C152073C();
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v72 = v132;
      sub_1C152080C();
      (*(void (**)(char *, uint64_t))(v131 + 8))(v69, v72);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v51, v68);
      return (*(uint64_t (**)(char *, uint64_t))(v167 + 8))(v71, v70);
    case 2uLL:
      sub_1C11FAC10();
      uint64_t v73 = swift_projectBox();
      uint64_t v75 = v164;
      uint64_t v74 = v165;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v48, v73, v164);
      char v172 = 2;
      sub_1C12002E0();
      uint64_t v76 = v133;
      uint64_t v63 = v169;
      uint64_t v77 = v166;
      sub_1C152073C();
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v78 = v135;
      sub_1C152080C();
      (*(void (**)(char *, uint64_t))(v134 + 8))(v76, v78);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v48, v75);
      uint64_t v79 = *(uint64_t (**)(char *, uint64_t))(v167 + 8);
      uint64_t v80 = v77;
      goto LABEL_12;
    case 3uLL:
      sub_1C11FAC10();
      uint64_t v81 = swift_projectBox();
      uint64_t v83 = v164;
      uint64_t v82 = v165;
      uint64_t v84 = v122;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v122, v81, v164);
      char v173 = 3;
      sub_1C120028C();
      unint64_t v85 = v136;
      uint64_t v63 = v169;
      uint64_t v64 = v166;
      sub_1C152073C();
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v86 = v138;
      sub_1C152080C();
      unint64_t v87 = &v169;
      goto LABEL_10;
    case 4uLL:
      sub_1C11FAC10();
      uint64_t v88 = swift_projectBox();
      uint64_t v83 = v164;
      uint64_t v82 = v165;
      uint64_t v84 = v123;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v123, v88, v164);
      char v174 = 4;
      sub_1C1200238();
      unint64_t v85 = v139;
      uint64_t v63 = v169;
      uint64_t v64 = v166;
      sub_1C152073C();
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v86 = v141;
      sub_1C152080C();
      unint64_t v87 = &v177;
      goto LABEL_10;
    case 5uLL:
      sub_1C11FAC10();
      uint64_t v89 = swift_projectBox();
      uint64_t v83 = v164;
      uint64_t v82 = v165;
      uint64_t v84 = v124;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v124, v89, v164);
      char v175 = 5;
      sub_1C12001E4();
      unint64_t v85 = v142;
      uint64_t v63 = v169;
      uint64_t v64 = v166;
      sub_1C152073C();
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v86 = v144;
      sub_1C152080C();
      unint64_t v87 = &v186;
      goto LABEL_10;
    case 6uLL:
      sub_1C11FAC10();
      uint64_t v90 = swift_projectBox();
      uint64_t v83 = v164;
      uint64_t v82 = v165;
      uint64_t v84 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v125, v90, v164);
      char v176 = 6;
      sub_1C1200190();
      unint64_t v85 = v145;
      uint64_t v63 = v169;
      uint64_t v64 = v166;
      sub_1C152073C();
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v86 = v147;
      sub_1C152080C();
      unint64_t v87 = &v187;
      goto LABEL_10;
    case 7uLL:
      sub_1C11FAC10();
      uint64_t v91 = swift_projectBox();
      uint64_t v83 = v164;
      uint64_t v82 = v165;
      uint64_t v84 = v126;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v126, v91, v164);
      char v178 = 7;
      sub_1C120013C();
      unint64_t v85 = v148;
      uint64_t v63 = v169;
      uint64_t v64 = v166;
      sub_1C152073C();
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v86 = v150;
      sub_1C152080C();
      unint64_t v87 = &v188;
LABEL_10:
      (*(void (**)(char *, uint64_t))(*(v87 - 32) + 8))(v85, v86);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v83);
      goto LABEL_11;
    case 8uLL:
      sub_1C11FABA8();
      uint64_t v94 = v93;
      uint64_t v95 = swift_projectBox();
      uint64_t v96 = v95 + *(int *)(v94 + 48);
      uint64_t v98 = v164;
      uint64_t v97 = v165;
      uint64_t v99 = *(void (**)(char *, uint64_t, uint64_t))(v165 + 16);
      v99(v161, v95, v164);
      v99(v160, v96, v98);
      char v181 = 8;
      sub_1C12000E8();
      uint64_t v100 = v154;
      uint64_t v70 = v169;
      uint64_t v71 = v166;
      sub_1C152073C();
      char v180 = 0;
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v101 = v156;
      uint64_t v102 = v168;
      sub_1C152080C();
      if (v102)
      {
        (*(void (**)(char *, uint64_t))(v155 + 8))(v100, v101);
        char v103 = *(void (**)(char *, uint64_t))(v97 + 8);
        v103(v160, v98);
        v103(v161, v98);
        return (*(uint64_t (**)(char *, uint64_t))(v167 + 8))(v71, v70);
      }
      char v179 = 1;
      uint64_t v118 = v160;
      sub_1C152080C();
      (*(void (**)(char *, uint64_t))(v155 + 8))(v100, v101);
      unint64_t v119 = *(void (**)(char *, uint64_t))(v97 + 8);
      v119(v118, v98);
      uint64_t v120 = v161;
      goto LABEL_22;
    case 9uLL:
      sub_1C11FABA8();
      uint64_t v105 = v104;
      uint64_t v106 = swift_projectBox();
      uint64_t v107 = v106 + *(int *)(v105 + 48);
      uint64_t v98 = v164;
      uint64_t v108 = v165;
      uint64_t v109 = *(void (**)(char *, uint64_t, uint64_t))(v165 + 16);
      v109(v163, v106, v164);
      v109(v162, v107, v98);
      char v184 = 9;
      sub_1C1200094();
      uint64_t v110 = v157;
      uint64_t v70 = v169;
      uint64_t v71 = v166;
      sub_1C152073C();
      char v183 = 0;
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v111 = v159;
      uint64_t v112 = v168;
      sub_1C152080C();
      if (v112)
      {
        (*(void (**)(char *, uint64_t))(v158 + 8))(v110, v111);
        uint64_t v113 = *(void (**)(char *, uint64_t))(v108 + 8);
        v113(v162, v98);
        v113(v163, v98);
        return (*(uint64_t (**)(char *, uint64_t))(v167 + 8))(v71, v70);
      }
      else
      {
        char v182 = 1;
        uint64_t v121 = v162;
        sub_1C152080C();
        (*(void (**)(char *, uint64_t))(v158 + 8))(v110, v111);
        unint64_t v119 = *(void (**)(char *, uint64_t))(v108 + 8);
        v119(v121, v98);
        uint64_t v120 = v163;
LABEL_22:
        v119(v120, v98);
        uint64_t v79 = *(uint64_t (**)(char *, uint64_t))(v167 + 8);
        uint64_t v80 = v71;
        uint64_t v92 = v169;
        return v79(v80, v92);
      }
    case 0xAuLL:
      char v185 = 10;
      sub_1C1200040();
      uint64_t v115 = v151;
      uint64_t v116 = v169;
      long long v117 = v166;
      sub_1C152073C();
      (*(void (**)(char *, uint64_t))(v152 + 8))(v115, v153);
      return (*(uint64_t (**)(char *, uint64_t))(v167 + 8))(v117, v116);
    default:
      sub_1C11FAC10();
      uint64_t v59 = swift_projectBox();
      uint64_t v61 = v164;
      uint64_t v60 = v165;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v54, v59, v164);
      char v170 = 0;
      sub_1C1200388();
      uint64_t v62 = v127;
      uint64_t v63 = v169;
      uint64_t v64 = v166;
      sub_1C152073C();
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v65 = v129;
      sub_1C152080C();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v62, v65);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v54, v61);
LABEL_11:
      uint64_t v79 = *(uint64_t (**)(char *, uint64_t))(v167 + 8);
      uint64_t v80 = v64;
LABEL_12:
      uint64_t v92 = v63;
      return v79(v80, v92);
  }
}

uint64_t SportsDataVisualizationEventStatus.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v124 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C1200430(0, &qword_1EB86B778, (uint64_t (*)(void))sub_1C1200040, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.UnknownCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v130 = v4;
  uint64_t v106 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v129 = (char *)&v95 - v5;
  sub_1C1200430(0, &qword_1EB86B768, (uint64_t (*)(void))sub_1C1200094, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.ForfeitCodingKeys, v3);
  uint64_t v108 = v6;
  uint64_t v118 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v128 = (char *)&v95 - v7;
  sub_1C1200430(0, &qword_1EB86B758, (uint64_t (*)(void))sub_1C12000E8, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.FinalCodingKeys, v3);
  uint64_t v107 = v8;
  uint64_t v117 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v127 = (char *)&v95 - v9;
  sub_1C1200430(0, &qword_1EB86B760, (uint64_t (*)(void))sub_1C120013C, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.DelayedCodingKeys, v3);
  uint64_t v105 = v10;
  uint64_t v116 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v121 = (char *)&v95 - v11;
  sub_1C1200430(0, &qword_1EB86B788, (uint64_t (*)(void))sub_1C1200190, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.CancelledCodingKeys, v3);
  uint64_t v104 = v12;
  uint64_t v115 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v120 = (char *)&v95 - v13;
  sub_1C1200430(0, &qword_1EB86B798, (uint64_t (*)(void))sub_1C12001E4, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.SuspendedCodingKeys, v3);
  uint64_t v103 = v14;
  uint64_t v114 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v123 = (char *)&v95 - v15;
  sub_1C1200430(0, &qword_1EB86B790, (uint64_t (*)(void))sub_1C1200238, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.PostponedCodingKeys, v3);
  uint64_t v102 = v16;
  uint64_t v113 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v122 = (char *)&v95 - v17;
  sub_1C1200430(0, &qword_1EB86B750, (uint64_t (*)(void))sub_1C120028C, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.BreakCodingKeys, v3);
  uint64_t v101 = v18;
  uint64_t v112 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v126 = (char *)&v95 - v19;
  sub_1C1200430(0, &qword_1EB86B7A0, (uint64_t (*)(void))sub_1C12002E0, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.InProgressCodingKeys, v3);
  uint64_t v100 = v20;
  uint64_t v111 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  long long v125 = (char *)&v95 - v21;
  sub_1C1200430(0, &qword_1EB86B780, (uint64_t (*)(void))sub_1C1200334, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.NearLiveCodingKeys, v3);
  uint64_t v99 = v22;
  uint64_t v110 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  unint64_t v119 = (char *)&v95 - v23;
  sub_1C1200430(0, &qword_1EB86B770, (uint64_t (*)(void))sub_1C1200388, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.PregameCodingKeys, v3);
  uint64_t v25 = v24;
  uint64_t v109 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v95 - v26;
  sub_1C1200430(0, &qword_1EB86B748, (uint64_t (*)(void))sub_1C12003DC, (uint64_t)&type metadata for SportsDataVisualizationEventStatus.CodingKeys, v3);
  uint64_t v29 = v28;
  uint64_t v30 = *((void *)v28 - 1);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = a1[3];
  uint64_t v131 = (uint64_t)a1;
  uint64_t v32 = a1;
  uint64_t v34 = (char *)&v95 - v33;
  __swift_project_boxed_opaque_existential_1(v32, v31);
  sub_1C12003DC();
  uint64_t v35 = v132;
  sub_1C1520EBC();
  if (v35)
  {
LABEL_22:
    uint64_t v78 = v131;
    return __swift_destroy_boxed_opaque_existential_1(v78);
  }
  uint64_t v97 = v27;
  uint64_t v96 = v25;
  uint64_t v37 = v125;
  uint64_t v36 = v126;
  uint64_t v38 = v34;
  uint64_t v40 = v129;
  uint64_t v39 = v130;
  uint64_t v41 = v127;
  uint64_t v98 = 0;
  uint64_t v42 = v128;
  uint64_t v132 = v30;
  uint64_t v43 = sub_1C152070C();
  uint64_t v44 = (char *)v43;
  if (*(void *)(v43 + 16) != 1)
  {
    uint64_t v49 = sub_1C15201EC();
    swift_allocError();
    uint64_t v51 = v50;
    sub_1C01AC8BC();
    *uint64_t v51 = &type metadata for SportsDataVisualizationEventStatus;
    sub_1C15205DC();
    sub_1C15201AC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v49 - 8) + 104))(v51, *MEMORY[0x1E4FBBA70], v49);
    swift_willThrow();
LABEL_29:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v132 + 8))(v38, v29);
    goto LABEL_22;
  }
  switch(*(unsigned char *)(v43 + 32))
  {
    case 1:
      char v134 = 1;
      sub_1C1200334();
      uint64_t v52 = v119;
      uint64_t v53 = v38;
      uint64_t v54 = v98;
      sub_1C15205CC();
      if (v54) {
        goto LABEL_21;
      }
      sub_1C11FAC10();
      uint64_t v55 = swift_allocBox();
      sub_1C151631C();
      sub_1BFE0D898(&qword_1EB871168);
      uint64_t v56 = v99;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v52, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v132 + 8))(v38, v29);
      uint64_t v47 = v55 | 0x1000000000000000;
      goto LABEL_34;
    case 2:
      char v135 = 2;
      sub_1C12002E0();
      uint64_t v53 = v38;
      uint64_t v57 = v98;
      sub_1C15205CC();
      if (v57) {
        goto LABEL_21;
      }
      sub_1C11FAC10();
      uint64_t v58 = swift_allocBox();
      sub_1C151631C();
      sub_1BFE0D898(&qword_1EB871168);
      uint64_t v59 = v100;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v111 + 8))(v37, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v132 + 8))(v38, v29);
      uint64_t v47 = v58 | 0x2000000000000000;
      goto LABEL_34;
    case 3:
      char v136 = 3;
      sub_1C120028C();
      uint64_t v60 = v36;
      uint64_t v53 = v38;
      uint64_t v61 = v98;
      sub_1C15205CC();
      if (v61) {
        goto LABEL_21;
      }
      sub_1C11FAC10();
      uint64_t v62 = swift_allocBox();
      sub_1C151631C();
      sub_1BFE0D898(&qword_1EB871168);
      uint64_t v63 = v101;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v60, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v132 + 8))(v38, v29);
      uint64_t v47 = v62 | 0x3000000000000000;
      goto LABEL_34;
    case 4:
      char v137 = 4;
      sub_1C1200238();
      uint64_t v53 = v38;
      uint64_t v64 = v98;
      sub_1C15205CC();
      if (v64) {
        goto LABEL_21;
      }
      sub_1C11FAC10();
      uint64_t v65 = swift_allocBox();
      sub_1C151631C();
      sub_1BFE0D898(&qword_1EB871168);
      uint64_t v66 = v102;
      uint64_t v67 = v122;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v67, v66);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v132 + 8))(v53, v29);
      uint64_t v90 = v65 | 0x4000000000000000;
      goto LABEL_33;
    case 5:
      char v138 = 5;
      sub_1C12001E4();
      uint64_t v53 = v38;
      uint64_t v68 = v98;
      sub_1C15205CC();
      if (v68) {
        goto LABEL_21;
      }
      sub_1C11FAC10();
      uint64_t v69 = swift_allocBox();
      sub_1C151631C();
      sub_1BFE0D898(&qword_1EB871168);
      uint64_t v70 = v103;
      uint64_t v71 = v123;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v114 + 8))(v71, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v132 + 8))(v53, v29);
      uint64_t v90 = v69 | 0x5000000000000000;
LABEL_33:
      uint64_t v78 = v131;
      *uint64_t v124 = v90;
      return __swift_destroy_boxed_opaque_existential_1(v78);
    case 6:
      char v139 = 6;
      sub_1C1200190();
      uint64_t v72 = v120;
      uint64_t v53 = v38;
      uint64_t v73 = v98;
      sub_1C15205CC();
      if (v73) {
        goto LABEL_21;
      }
      sub_1C11FAC10();
      uint64_t v74 = swift_allocBox();
      sub_1C151631C();
      sub_1BFE0D898(&qword_1EB871168);
      uint64_t v75 = v104;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v72, v75);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v132 + 8))(v38, v29);
      uint64_t v47 = v74 | 0x6000000000000000;
      goto LABEL_34;
    case 7:
      char v140 = 7;
      sub_1C120013C();
      uint64_t v76 = v121;
      uint64_t v53 = v38;
      uint64_t v77 = v98;
      sub_1C15205CC();
      if (v77)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v132 + 8))(v53, v29);
        goto LABEL_22;
      }
      sub_1C11FAC10();
      uint64_t v86 = swift_allocBox();
      sub_1C151631C();
      sub_1BFE0D898(&qword_1EB871168);
      uint64_t v87 = v105;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v116 + 8))(v76, v87);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v132 + 8))(v38, v29);
      uint64_t v47 = v86 | 0x7000000000000000;
LABEL_34:
      uint64_t v78 = v131;
      *uint64_t v124 = v47;
      break;
    case 8:
      char v143 = 8;
      sub_1C12000E8();
      uint64_t v80 = v41;
      uint64_t v81 = v98;
      sub_1C15205CC();
      if (v81)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v132 + 8))(v38, v29);
        uint64_t v78 = v131;
      }
      else
      {
        uint64_t v129 = v44;
        uint64_t v130 = v38;
        uint64_t v126 = v29;
        sub_1C11FABA8();
        uint64_t v88 = swift_allocBox();
        sub_1C151631C();
        char v142 = 0;
        sub_1BFE0D898(&qword_1EB871168);
        uint64_t v89 = v107;
        sub_1C15206EC();
        char v141 = 1;
        sub_1C15206EC();
        uint64_t v92 = v80;
        uint64_t v93 = v132;
        (*(void (**)(char *, uint64_t))(v117 + 8))(v92, v89);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v93 + 8))(v130, v126);
        unint64_t v94 = v88 | 0x8000000000000000;
LABEL_35:
        uint64_t v78 = v131;
        *uint64_t v124 = v94;
      }
      return __swift_destroy_boxed_opaque_existential_1(v78);
    case 9:
      char v146 = 9;
      sub_1C1200094();
      uint64_t v82 = v98;
      sub_1C15205CC();
      if (v82) {
        goto LABEL_29;
      }
      uint64_t v129 = v44;
      uint64_t v130 = v38;
      uint64_t v126 = v29;
      sub_1C11FABA8();
      uint64_t v83 = swift_allocBox();
      sub_1C151631C();
      char v145 = 0;
      sub_1BFE0D898(&qword_1EB871168);
      uint64_t v84 = v108;
      sub_1C15206EC();
      char v144 = 1;
      sub_1C15206EC();
      uint64_t v91 = v132;
      (*(void (**)(char *, uint64_t))(v118 + 8))(v42, v84);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v91 + 8))(v130, v126);
      unint64_t v94 = v83 | 0x9000000000000000;
      goto LABEL_35;
    case 0xA:
      char v147 = 10;
      sub_1C1200040();
      uint64_t v85 = v98;
      sub_1C15205CC();
      if (v85) {
        goto LABEL_29;
      }
      (*(void (**)(char *, char *))(v106 + 8))(v40, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v132 + 8))(v38, v29);
      uint64_t v78 = v131;
      *uint64_t v124 = 0xA000000000000000;
      return __swift_destroy_boxed_opaque_existential_1(v78);
    default:
      char v133 = 0;
      sub_1C1200388();
      uint64_t v45 = v97;
      uint64_t v46 = v98;
      sub_1C15205CC();
      if (v46) {
        goto LABEL_29;
      }
      uint64_t v129 = v44;
      uint64_t v130 = v38;
      sub_1C11FAC10();
      uint64_t v47 = swift_allocBox();
      sub_1C151631C();
      sub_1BFE0D898(&qword_1EB871168);
      uint64_t v48 = v96;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v45, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v132 + 8))(v130, v29);
      goto LABEL_34;
  }
  return __swift_destroy_boxed_opaque_existential_1(v78);
}

uint64_t sub_1C11FE384@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SportsDataVisualizationEventStatus.init(from:)(a1, a2);
}

uint64_t sub_1C11FE39C(void *a1)
{
  return SportsDataVisualizationEventStatus.encode(to:)(a1);
}

uint64_t SportsDataVisualizationEventStatus.description.getter()
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = 0x6E776F6E6B6E75;
  switch(*v0 >> 60)
  {
    case 1:
      sub_1C11FAC10();
      uint64_t v14 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v14, v4);
      uint64_t v13 = 0x6576694C7261656ELL;
      unint64_t v15 = 0xE900000000000028;
      goto LABEL_15;
    case 2:
      sub_1C11FAC10();
      uint64_t v16 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v16, v4);
      uint64_t v13 = 0x6572676F72506E69;
      unint64_t v15 = 0xEB00000000287373;
      goto LABEL_15;
    case 3:
      sub_1C11FAC10();
      uint64_t v17 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v17, v4);
      uint64_t v13 = 0x286B61657262;
      unint64_t v15 = 0xE600000000000000;
      goto LABEL_15;
    case 4:
      sub_1C11FAC10();
      uint64_t v18 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v18, v4);
      uint64_t v13 = 0x656E6F7074736F70;
      goto LABEL_9;
    case 5:
      sub_1C11FAC10();
      uint64_t v19 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v19, v4);
      uint64_t v13 = 0x65646E6570737573;
      goto LABEL_9;
    case 6:
      sub_1C11FAC10();
      uint64_t v20 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v20, v4);
      uint64_t v13 = 0x656C6C65636E6163;
LABEL_9:
      unint64_t v15 = 0xEA00000000002864;
      goto LABEL_15;
    case 7:
      sub_1C11FAC10();
      uint64_t v33 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v33, v4);
      uint64_t v13 = 0x28646579616C6564;
      goto LABEL_14;
    case 8:
      sub_1C11FABA8();
      uint64_t v22 = v21;
      uint64_t v23 = swift_projectBox();
      uint64_t v24 = v23 + *(int *)(v22 + 48);
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v25(v10, v23, v4);
      v25(v7, v24, v4);
      uint64_t v26 = 0x286C616E6966;
      unint64_t v27 = 0xE600000000000000;
      goto LABEL_12;
    case 9:
      sub_1C11FABA8();
      uint64_t v29 = v28;
      uint64_t v30 = swift_projectBox();
      uint64_t v31 = v30 + *(int *)(v29 + 48);
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v25(v10, v30, v4);
      v25(v7, v31, v4);
      uint64_t v26 = 0x2874696566726F66;
      unint64_t v27 = 0xE800000000000000;
LABEL_12:
      uint64_t v35 = v26;
      unint64_t v36 = v27;
      v25(v3, (uint64_t)v7, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      sub_1C11FEFA8((uint64_t)v10, (uint64_t)v3);
      sub_1BFF97BE4((uint64_t)v3);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v11 = v35;
      uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
      v32(v7, v4);
      v32(v10, v4);
      break;
    case 0xALL:
      return v11;
    default:
      sub_1C11FAC10();
      uint64_t v12 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v12, v4);
      uint64_t v13 = 0x28656D6167657270;
LABEL_14:
      unint64_t v15 = 0xE800000000000000;
LABEL_15:
      uint64_t v35 = v13;
      unint64_t v36 = v15;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
      sub_1C11FEFA8((uint64_t)v10, (uint64_t)v3);
      sub_1BFF97BE4((uint64_t)v3);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v11 = v35;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      break;
  }
  return v11;
}

uint64_t SportsDataVisualizationEventStatus.debugDescription.getter()
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = 0x6E776F6E6B6E55;
  switch(*v0 >> 60)
  {
    case 1:
      sub_1C11FAC10();
      uint64_t v14 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v14, v4);
      uint64_t v13 = 0x76694C207261654ELL;
      unint64_t v15 = 0xEA00000000000A65;
      goto LABEL_15;
    case 2:
      sub_1C11FAC10();
      uint64_t v16 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v16, v4);
      uint64_t v13 = 0x72676F7250206E49;
      unint64_t v15 = 0xEC0000000A737365;
      goto LABEL_15;
    case 3:
      sub_1C11FAC10();
      uint64_t v17 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v17, v4);
      uint64_t v13 = 0xA6B61657242;
      unint64_t v15 = 0xE600000000000000;
      goto LABEL_15;
    case 4:
      sub_1C11FAC10();
      uint64_t v18 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v18, v4);
      uint64_t v13 = 0x656E6F7074736F50;
      goto LABEL_9;
    case 5:
      sub_1C11FAC10();
      uint64_t v19 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v19, v4);
      uint64_t v13 = 0x65646E6570737553;
      goto LABEL_9;
    case 6:
      sub_1C11FAC10();
      uint64_t v20 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v20, v4);
      uint64_t v13 = 0x656C6C65636E6143;
LABEL_9:
      unint64_t v15 = 0xEA00000000000A64;
      goto LABEL_15;
    case 7:
      sub_1C11FAC10();
      uint64_t v33 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v33, v4);
      uint64_t v13 = 0xA646579616C6544;
      goto LABEL_14;
    case 8:
      sub_1C11FABA8();
      uint64_t v22 = v21;
      uint64_t v23 = swift_projectBox();
      uint64_t v24 = v23 + *(int *)(v22 + 48);
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v25(v10, v23, v4);
      v25(v7, v24, v4);
      uint64_t v26 = 0xA6C616E6946;
      unint64_t v27 = 0xE600000000000000;
      goto LABEL_12;
    case 9:
      sub_1C11FABA8();
      uint64_t v29 = v28;
      uint64_t v30 = swift_projectBox();
      uint64_t v31 = v30 + *(int *)(v29 + 48);
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v25(v10, v30, v4);
      v25(v7, v31, v4);
      uint64_t v26 = 0xA74696566726F46;
      unint64_t v27 = 0xE800000000000000;
LABEL_12:
      uint64_t v35 = v26;
      unint64_t v36 = v27;
      v25(v3, (uint64_t)v7, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      sub_1C11FEFA8((uint64_t)v10, (uint64_t)v3);
      sub_1BFF97BE4((uint64_t)v3);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v11 = v35;
      uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
      v32(v7, v4);
      v32(v10, v4);
      break;
    case 0xALL:
      return v11;
    default:
      sub_1C11FAC10();
      uint64_t v12 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v12, v4);
      uint64_t v13 = 0xA656D6167657250;
LABEL_14:
      unint64_t v15 = 0xE800000000000000;
LABEL_15:
      uint64_t v35 = v13;
      unint64_t v36 = v15;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
      sub_1C11FEFA8((uint64_t)v10, (uint64_t)v3);
      sub_1BFF97BE4((uint64_t)v3);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v11 = v35;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      break;
  }
  return v11;
}

uint64_t sub_1C11FEFA8(uint64_t a1, uint64_t a2)
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB86EF80 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_1EB86EF78;
  v24[1] = a1;
  uint64_t v8 = (void *)sub_1C151621C();
  id v9 = objc_msgSend(v7, sel_stringFromDate_, v8);

  sub_1C151E62C();
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12((char *)a2, 1, v10) == 1)
  {
    uint64_t v13 = &selRef_setCenter_;
  }
  else
  {
    uint64_t v14 = (void *)qword_1EB86EF78;
    sub_1BFF97B80(a2, (uint64_t)v6);
    uint64_t result = v12(v6, 1, v10);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = (void *)sub_1C151621C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
    uint64_t v13 = &selRef_setCenter_;
    id v17 = objc_msgSend(v14, sel_stringFromDate_, v16);

    sub_1C151E62C();
  }
  if (qword_1EB86F078 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_1EB86F068;
  uint64_t v19 = (void *)sub_1C151621C();
  id v20 = objc_msgSend(v18, v13[10], v19);

  uint64_t v21 = sub_1C151E62C();
  uint64_t v23 = v22;

  uint64_t v25 = v21;
  uint64_t v26 = v23;
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v25;
}

id sub_1C11FF294(uint64_t a1)
{
  return sub_1C11FF2BC(a1, 2, 0, &qword_1EB86F068);
}

id sub_1C11FF2A8(uint64_t a1)
{
  return sub_1C11FF2BC(a1, 0, 1, &qword_1EB86EF78);
}

id sub_1C11FF2BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v7, sel_setDateStyle_, a2);
  id result = objc_msgSend(v7, sel_setTimeStyle_, a3);
  *a4 = v7;
  return result;
}

uint64_t _s8NewsFeed34SportsDataVisualizationEventStatusO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  char v139 = a2;
  uint64_t v3 = sub_1C151631C();
  MEMORY[0x1F4188790](v3);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v7);
  MEMORY[0x1F4188790](v8);
  MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v12);
  char v138 = (char *)&v132 - v13;
  MEMORY[0x1F4188790](v14);
  char v137 = (char *)&v132 - v15;
  MEMORY[0x1F4188790](v16);
  char v136 = (char *)&v132 - v17;
  MEMORY[0x1F4188790](v18);
  char v135 = (char *)&v132 - v19;
  MEMORY[0x1F4188790](v20);
  char v134 = (char *)&v132 - v21;
  MEMORY[0x1F4188790](v22);
  char v133 = (char *)&v132 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v132 = (char *)&v132 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v132 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v132 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v132 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v132 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v132 - v39;
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = (char *)&v132 - v42;
  MEMORY[0x1F4188790](v44);
  uint64_t v46 = (char *)&v132 - v45;
  MEMORY[0x1F4188790](v47);
  uint64_t v60 = (char *)&v132 - v59;
  unint64_t v61 = *a1;
  unint64_t v62 = *v139;
  switch(v61 >> 60)
  {
    case 1uLL:
      if (v62 >> 60 != 1) {
        goto LABEL_29;
      }
      uint64_t v70 = v48;
      uint64_t v71 = v56;
      sub_1C11FAC10();
      uint64_t v72 = swift_projectBox();
      uint64_t v73 = swift_projectBox();
      uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
      v74(v43, v72, v70);
      v74(v40, v73, v70);
      swift_retain();
      swift_retain();
      char v68 = sub_1C15162AC();
      uint64_t v75 = *(void (**)(char *, uint64_t))(v71 + 8);
      v75(v40, v70);
      v75(v43, v70);
      goto LABEL_19;
    case 2uLL:
      if (v62 >> 60 != 2) {
        goto LABEL_29;
      }
      uint64_t v76 = v48;
      uint64_t v77 = v56;
      sub_1C11FAC10();
      uint64_t v78 = swift_projectBox();
      uint64_t v79 = swift_projectBox();
      uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
      v80(v37, v78, v76);
      v80(v34, v79, v76);
      swift_retain();
      swift_retain();
      char v68 = sub_1C15162AC();
      uint64_t v81 = *(void (**)(char *, uint64_t))(v77 + 8);
      v81(v34, v76);
      v81(v37, v76);
      goto LABEL_19;
    case 3uLL:
      if (v62 >> 60 != 3) {
        goto LABEL_29;
      }
      uint64_t v82 = v48;
      uint64_t v83 = v56;
      sub_1C11FAC10();
      uint64_t v84 = swift_projectBox();
      uint64_t v85 = swift_projectBox();
      uint64_t v86 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
      v86(v31, v84, v82);
      v86(v28, v85, v82);
      swift_retain();
      swift_retain();
      char v68 = sub_1C15162AC();
      uint64_t v87 = *(void (**)(char *, uint64_t))(v83 + 8);
      v87(v28, v82);
      v87(v31, v82);
      goto LABEL_19;
    case 4uLL:
      if (v62 >> 60 != 4) {
        goto LABEL_29;
      }
      uint64_t v88 = v48;
      uint64_t v89 = v56;
      sub_1C11FAC10();
      uint64_t v90 = swift_projectBox();
      uint64_t v91 = swift_projectBox();
      uint64_t v92 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
      uint64_t v93 = v132;
      v92(v132, v90, v88);
      unint64_t v94 = v133;
      goto LABEL_18;
    case 5uLL:
      if (v62 >> 60 != 5) {
        goto LABEL_29;
      }
      uint64_t v88 = v48;
      uint64_t v89 = v56;
      sub_1C11FAC10();
      uint64_t v95 = swift_projectBox();
      uint64_t v91 = swift_projectBox();
      uint64_t v92 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
      uint64_t v93 = v134;
      v92(v134, v95, v88);
      unint64_t v94 = v135;
      goto LABEL_18;
    case 6uLL:
      if (v62 >> 60 != 6) {
        goto LABEL_29;
      }
      uint64_t v88 = v48;
      uint64_t v89 = v56;
      sub_1C11FAC10();
      uint64_t v96 = swift_projectBox();
      uint64_t v91 = swift_projectBox();
      uint64_t v92 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
      uint64_t v93 = v136;
      v92(v136, v96, v88);
      unint64_t v94 = v137;
      goto LABEL_18;
    case 7uLL:
      if (v62 >> 60 != 7) {
        goto LABEL_29;
      }
      uint64_t v88 = v48;
      uint64_t v89 = v56;
      unint64_t v94 = v55;
      sub_1C11FAC10();
      uint64_t v97 = swift_projectBox();
      uint64_t v91 = swift_projectBox();
      uint64_t v92 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
      uint64_t v93 = v138;
      v92(v138, v97, v88);
LABEL_18:
      v92(v94, v91, v88);
      swift_retain();
      swift_retain();
      char v68 = sub_1C15162AC();
      uint64_t v98 = *(void (**)(char *, uint64_t))(v89 + 8);
      v98(v94, v88);
      v98(v93, v88);
      goto LABEL_19;
    case 8uLL:
      if (v62 >> 60 != 8) {
        goto LABEL_29;
      }
      uint64_t v114 = v48;
      uint64_t v115 = v56;
      uint64_t v116 = v51;
      char v138 = v52;
      char v139 = v54;
      char v135 = v53;
      sub_1C11FABA8();
      uint64_t v118 = v117;
      uint64_t v119 = swift_projectBox();
      uint64_t v120 = *(int *)(v118 + 48);
      char v137 = (char *)(v119 + v120);
      uint64_t v121 = swift_projectBox();
      char v136 = (char *)(v121 + v120);
      uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 16);
      unint64_t v123 = v135;
      v122((uint64_t)v116, v119, v114);
      uint64_t v124 = v138;
      v122((uint64_t)v138, v121, v114);
      v122((uint64_t)v123, (uint64_t)v137, v114);
      v122((uint64_t)v139, (uint64_t)v136, v114);
      swift_retain();
      swift_retain();
      char v125 = sub_1C15162AC();
      uint64_t v126 = v139;
      if (v125)
      {
        uint64_t v127 = v123;
        char v68 = sub_1C15162AC();
        uint64_t v128 = *(void (**)(unint64_t *, uint64_t))(v115 + 8);
        v128(v126, v114);
        v128((unint64_t *)v127, v114);
        v128((unint64_t *)v124, v114);
        v128(v116, v114);
        goto LABEL_19;
      }
      uint64_t v131 = *(void (**)(unint64_t *, uint64_t))(v115 + 8);
      v131(v139, v114);
      v131((unint64_t *)v123, v114);
      v131((unint64_t *)v124, v114);
      v131(v116, v114);
      swift_release();
      goto LABEL_33;
    case 9uLL:
      if (v62 >> 60 != 9) {
        goto LABEL_29;
      }
      char v136 = (char *)(v61 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v99 = v48;
      uint64_t v100 = v56;
      uint64_t v101 = v57;
      uint64_t v102 = v58;
      char v138 = v50;
      char v139 = v49;
      sub_1C11FABA8();
      uint64_t v104 = v103;
      uint64_t v105 = swift_projectBox();
      uint64_t v106 = *(int *)(v104 + 48);
      char v137 = (char *)(v105 + v106);
      uint64_t v107 = swift_projectBox();
      uint64_t v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16);
      v108((uint64_t)v101, v105, v99);
      v108((uint64_t)v102, v107, v99);
      v108((uint64_t)v139, (uint64_t)v137, v99);
      v108((uint64_t)v138, v107 + v106, v99);
      swift_retain();
      swift_retain();
      uint64_t v109 = v101;
      uint64_t v110 = v102;
      if (sub_1C15162AC())
      {
        uint64_t v111 = v138;
        uint64_t v112 = v139;
        char v68 = sub_1C15162AC();
        uint64_t v113 = *(void (**)(char *, uint64_t))(v100 + 8);
        v113(v111, v99);
        v113((char *)v112, v99);
        v113(v110, v99);
        v113(v109, v99);
        swift_release();
        goto LABEL_20;
      }
      uint64_t v130 = *(void (**)(char *, uint64_t))(v100 + 8);
      v130(v138, v99);
      v130((char *)v139, v99);
      v130(v102, v99);
      v130(v109, v99);
      swift_release();
LABEL_33:
      swift_release();
      char v68 = 0;
      break;
    case 0xAuLL:
      if (v62 != 0xA000000000000000) {
        goto LABEL_29;
      }
      swift_release();
      char v68 = 1;
      return v68 & 1;
    default:
      if (v62 >> 60)
      {
LABEL_29:
        char v68 = 0;
      }
      else
      {
        uint64_t v63 = v48;
        uint64_t v64 = v56;
        sub_1C11FAC10();
        uint64_t v65 = swift_projectBox();
        uint64_t v66 = swift_projectBox();
        uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
        v67(v60, v65, v63);
        v67(v46, v66, v63);
        swift_retain();
        swift_retain();
        char v68 = sub_1C15162AC();
        uint64_t v69 = *(void (**)(char *, uint64_t))(v64 + 8);
        v69(v46, v63);
        v69(v60, v63);
LABEL_19:
        swift_release();
LABEL_20:
        swift_release();
      }
      break;
  }
  return v68 & 1;
}

unint64_t sub_1C1200040()
{
  unint64_t result = qword_1EB86A128;
  if (!qword_1EB86A128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A128);
  }
  return result;
}

unint64_t sub_1C1200094()
{
  unint64_t result = qword_1EB86A0F8;
  if (!qword_1EB86A0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0F8);
  }
  return result;
}

unint64_t sub_1C12000E8()
{
  unint64_t result = qword_1EB86A0C8;
  if (!qword_1EB86A0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0C8);
  }
  return result;
}

unint64_t sub_1C120013C()
{
  unint64_t result = qword_1EB86A0E0;
  if (!qword_1EB86A0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0E0);
  }
  return result;
}

unint64_t sub_1C1200190()
{
  unint64_t result = qword_1EB86A158;
  if (!qword_1EB86A158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A158);
  }
  return result;
}

unint64_t sub_1C12001E4()
{
  unint64_t result = qword_1EB86A188;
  if (!qword_1EB86A188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A188);
  }
  return result;
}

unint64_t sub_1C1200238()
{
  unint64_t result = qword_1EB86A170;
  if (!qword_1EB86A170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A170);
  }
  return result;
}

unint64_t sub_1C120028C()
{
  unint64_t result = qword_1EB86A0B0;
  if (!qword_1EB86A0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0B0);
  }
  return result;
}

unint64_t sub_1C12002E0()
{
  unint64_t result = qword_1EB86A1A0;
  if (!qword_1EB86A1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A1A0);
  }
  return result;
}

unint64_t sub_1C1200334()
{
  unint64_t result = qword_1EB86A140;
  if (!qword_1EB86A140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A140);
  }
  return result;
}

unint64_t sub_1C1200388()
{
  unint64_t result = qword_1EB86A110;
  if (!qword_1EB86A110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A110);
  }
  return result;
}

unint64_t sub_1C12003DC()
{
  unint64_t result = qword_1EB86A098;
  if (!qword_1EB86A098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A098);
  }
  return result;
}

void sub_1C1200430(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for SportsDataVisualizationEventStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x76 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 118);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x75) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationEventStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x75)
  {
    *(void *)unint64_t result = a2 - 118;
    if (a3 >= 0x76) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x76) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C1200538(void *a1)
{
  uint64_t v1 = *a1 >> 60;
  if (v1 <= 9) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 10;
  }
}

unint64_t *sub_1C1200554(unint64_t *result, uint64_t a2)
{
  if (a2 < 0xA)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 60;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 10);
    unint64_t v3 = 0xA000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus()
{
  return &type metadata for SportsDataVisualizationEventStatus;
}

uint64_t type metadata accessor for EventStatusFormatter()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationEventStatus.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1200680);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.CodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.PregameCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.PregameCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.NearLiveCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.NearLiveCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.InProgressCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.InProgressCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.BreakCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.BreakCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.PostponedCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.PostponedCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.SuspendedCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.SuspendedCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.CancelledCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.CancelledCodingKeys;
}

unsigned char *_s8NewsFeed34SportsDataVisualizationEventStatusO17PregameCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C12007C8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.DelayedCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.DelayedCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.FinalCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.FinalCodingKeys;
}

unsigned char *_s8NewsFeed34SportsDataVisualizationEventStatusO15FinalCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12008E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.ForfeitCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.ForfeitCodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventStatus.UnknownCodingKeys()
{
  return &type metadata for SportsDataVisualizationEventStatus.UnknownCodingKeys;
}

unint64_t sub_1C120092C()
{
  unint64_t result = qword_1EA1ACEF8;
  if (!qword_1EA1ACEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACEF8);
  }
  return result;
}

unint64_t sub_1C1200984()
{
  unint64_t result = qword_1EA1ACF00;
  if (!qword_1EA1ACF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF00);
  }
  return result;
}

unint64_t sub_1C12009DC()
{
  unint64_t result = qword_1EA1ACF08;
  if (!qword_1EA1ACF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF08);
  }
  return result;
}

unint64_t sub_1C1200A34()
{
  unint64_t result = qword_1EA1ACF10;
  if (!qword_1EA1ACF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF10);
  }
  return result;
}

unint64_t sub_1C1200A8C()
{
  unint64_t result = qword_1EA1ACF18;
  if (!qword_1EA1ACF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF18);
  }
  return result;
}

unint64_t sub_1C1200AE4()
{
  unint64_t result = qword_1EA1ACF20;
  if (!qword_1EA1ACF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF20);
  }
  return result;
}

unint64_t sub_1C1200B3C()
{
  unint64_t result = qword_1EA1ACF28;
  if (!qword_1EA1ACF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF28);
  }
  return result;
}

unint64_t sub_1C1200B94()
{
  unint64_t result = qword_1EA1ACF30;
  if (!qword_1EA1ACF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF30);
  }
  return result;
}

unint64_t sub_1C1200BEC()
{
  unint64_t result = qword_1EA1ACF38;
  if (!qword_1EA1ACF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF38);
  }
  return result;
}

unint64_t sub_1C1200C44()
{
  unint64_t result = qword_1EA1ACF40;
  if (!qword_1EA1ACF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF40);
  }
  return result;
}

unint64_t sub_1C1200C9C()
{
  unint64_t result = qword_1EA1ACF48;
  if (!qword_1EA1ACF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF48);
  }
  return result;
}

unint64_t sub_1C1200CF4()
{
  unint64_t result = qword_1EB86A0A8;
  if (!qword_1EB86A0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0A8);
  }
  return result;
}

unint64_t sub_1C1200D4C()
{
  unint64_t result = qword_1EB86A0A0;
  if (!qword_1EB86A0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0A0);
  }
  return result;
}

unint64_t sub_1C1200DA4()
{
  unint64_t result = qword_1EB86A120;
  if (!qword_1EB86A120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A120);
  }
  return result;
}

unint64_t sub_1C1200DFC()
{
  unint64_t result = qword_1EB86A118;
  if (!qword_1EB86A118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A118);
  }
  return result;
}

unint64_t sub_1C1200E54()
{
  unint64_t result = qword_1EB86A150;
  if (!qword_1EB86A150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A150);
  }
  return result;
}

unint64_t sub_1C1200EAC()
{
  unint64_t result = qword_1EB86A148;
  if (!qword_1EB86A148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A148);
  }
  return result;
}

unint64_t sub_1C1200F04()
{
  unint64_t result = qword_1EB86A1B0;
  if (!qword_1EB86A1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A1B0);
  }
  return result;
}

unint64_t sub_1C1200F5C()
{
  unint64_t result = qword_1EB86A1A8;
  if (!qword_1EB86A1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A1A8);
  }
  return result;
}

unint64_t sub_1C1200FB4()
{
  unint64_t result = qword_1EB86A0C0;
  if (!qword_1EB86A0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0C0);
  }
  return result;
}

unint64_t sub_1C120100C()
{
  unint64_t result = qword_1EB86A0B8;
  if (!qword_1EB86A0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0B8);
  }
  return result;
}

unint64_t sub_1C1201064()
{
  unint64_t result = qword_1EB86A180;
  if (!qword_1EB86A180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A180);
  }
  return result;
}

unint64_t sub_1C12010BC()
{
  unint64_t result = qword_1EB86A178;
  if (!qword_1EB86A178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A178);
  }
  return result;
}

unint64_t sub_1C1201114()
{
  unint64_t result = qword_1EB86A198;
  if (!qword_1EB86A198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A198);
  }
  return result;
}

unint64_t sub_1C120116C()
{
  unint64_t result = qword_1EB86A190;
  if (!qword_1EB86A190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A190);
  }
  return result;
}

unint64_t sub_1C12011C4()
{
  unint64_t result = qword_1EB86A168;
  if (!qword_1EB86A168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A168);
  }
  return result;
}

unint64_t sub_1C120121C()
{
  unint64_t result = qword_1EB86A160;
  if (!qword_1EB86A160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A160);
  }
  return result;
}

unint64_t sub_1C1201274()
{
  unint64_t result = qword_1EB86A0F0;
  if (!qword_1EB86A0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0F0);
  }
  return result;
}

unint64_t sub_1C12012CC()
{
  unint64_t result = qword_1EB86A0E8;
  if (!qword_1EB86A0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0E8);
  }
  return result;
}

unint64_t sub_1C1201324()
{
  unint64_t result = qword_1EB86A0D8;
  if (!qword_1EB86A0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0D8);
  }
  return result;
}

unint64_t sub_1C120137C()
{
  unint64_t result = qword_1EB86A0D0;
  if (!qword_1EB86A0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A0D0);
  }
  return result;
}

unint64_t sub_1C12013D4()
{
  unint64_t result = qword_1EB86A108;
  if (!qword_1EB86A108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A108);
  }
  return result;
}

unint64_t sub_1C120142C()
{
  unint64_t result = qword_1EB86A100;
  if (!qword_1EB86A100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A100);
  }
  return result;
}

unint64_t sub_1C1201484()
{
  unint64_t result = qword_1EB86A138;
  if (!qword_1EB86A138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A138);
  }
  return result;
}

unint64_t sub_1C12014DC()
{
  unint64_t result = qword_1EB86A130;
  if (!qword_1EB86A130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A130);
  }
  return result;
}

uint64_t sub_1C1201530(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D6167657270 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576694C7261656ELL && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572676F72506E69 && a2 == 0xEA00000000007373 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B61657262 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656E6F7074736F70 && a2 == 0xE900000000000064 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65646E6570737573 && a2 == 0xE900000000000064 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x646579616C6564 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6C616E6966 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74696566726F66 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_1C12019C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C1201AC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t FormatTypeCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1BFCD4864(0, (unint64_t *)&qword_1EB8741E8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = *(void *)(v3 + 8);
  if (!*(void *)(v10 + 16))
  {
    sub_1C12030D0(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 1, 1, v18);
LABEL_7:
    uint64_t result = sub_1C1203058((uint64_t)v9);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(unsigned char *)(a3 + 80) = 0;
    return result;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1BFEF2D8C(a1, a2);
  if (v12)
  {
    unint64_t v13 = v11;
    uint64_t v14 = *(void *)(v10 + 56);
    sub_1C12030D0(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    uint64_t v16 = v15;
    uint64_t v17 = *(void *)(v15 - 8);
    sub_1BFFD59B8(v14 + *(void *)(v17 + 72) * v13, (uint64_t)v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
  }
  else
  {
    sub_1C12030D0(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    uint64_t v16 = v19;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  }
  swift_bridgeObjectRelease();
  sub_1C12030D0(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v9, 1, v16) == 1) {
    goto LABEL_7;
  }
  uint64_t v21 = *(void *)v9;
  uint64_t v22 = *((void *)v9 + 1);
  uint64_t v23 = *((void *)v9 + 3);
  uint64_t v34 = *((void *)v9 + 2);
  uint64_t v35 = v21;
  uint64_t v33 = v23;
  uint64_t v24 = *((void *)v9 + 4);
  uint64_t v25 = *((void *)v9 + 5);
  uint64_t v26 = *((void *)v9 + 6);
  uint64_t v27 = *((void *)v9 + 7);
  uint64_t v28 = *((void *)v9 + 8);
  uint64_t v29 = *((void *)v9 + 9);
  unsigned __int8 v30 = v9[80];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1DB64(v24, v25, v26, v27, v28, v29, v30);
  uint64_t result = sub_1BFFD8564((uint64_t)v9);
  *(void *)a3 = v35;
  *(void *)(a3 + 8) = v22;
  uint64_t v31 = v33;
  *(void *)(a3 + 16) = v34;
  *(void *)(a3 + 24) = v31;
  *(void *)(a3 + 32) = v24;
  *(void *)(a3 + 40) = v25;
  *(void *)(a3 + 48) = v26;
  *(void *)(a3 + 56) = v27;
  *(void *)(a3 + 64) = v28;
  *(void *)(a3 + 72) = v29;
  *(unsigned char *)(a3 + 80) = v30;
  return result;
}

NewsFeed::FormatTypeCollection __swiftcall FormatTypeCollection.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = (void *)sub_1BFD8CB50(MEMORY[0x1E4FBC860]);
  *uint64_t v1 = v2;
  v1[1] = v3;
  result.typesByName._rawValue = v4;
  result.types._rawValue = v3;
  return result;
}

uint64_t sub_1C1201F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v175 = a3;
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v174 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v192 = (char *)&v174 - v9;
  uint64_t v191 = sub_1C151928C();
  uint64_t v208 = *(void *)(v191 - 8);
  MEMORY[0x1F4188790](v191);
  uint64_t v190 = (char *)&v174 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v203 = (char *)&v174 - v12;
  uint64_t v189 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v189);
  uint64_t v188 = (char *)&v174 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCD4864(0, (unint64_t *)&qword_1EB8741E8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v196 = (uint64_t)&v174 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v174 - v17;
  sub_1C12030D0(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v205 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v202 = (uint64_t)&v174 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v187 = (uint64_t *)((char *)&v174 - v22);
  MEMORY[0x1F4188790](v23);
  uint64_t v176 = (uint64_t)&v174 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v174 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v207 = (uint64_t)&v174 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v174 - v32;
  uint64_t v34 = *(void *)(a1 + 16);
  uint64_t v182 = a2;
  uint64_t v193 = v7;
  uint64_t v179 = a1;
  uint64_t v194 = v31;
  if (v34)
  {
    uint64_t v35 = a1 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
    uint64_t v36 = *(void *)(v31 + 72);
    v211 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v209 = (unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    swift_bridgeObjectRetain();
    uint64_t v37 = (void *)MEMORY[0x1E4FBC868];
    v210 = v18;
    while (1)
    {
      sub_1BFFD59B8(v35, (uint64_t)v33);
      if (v37[2])
      {
        uint64_t v39 = *(void *)v33;
        uint64_t v40 = *((void *)v33 + 1);
        swift_bridgeObjectRetain();
        unint64_t v41 = sub_1BFEF2D8C(v39, v40);
        if (v42)
        {
          sub_1BFFD59B8(v37[7] + v41 * v36, (uint64_t)v18);
          uint64_t v43 = 0;
        }
        else
        {
          uint64_t v43 = 1;
        }
        uint64_t v44 = v205;
        (*v211)(v18, v43, 1, v205);
        swift_bridgeObjectRelease();
        if ((*v209)(v18, 1, v44) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v150 = v207;
          sub_1BFF5F630((uint64_t)v18, v207);
          uint64_t v213 = type metadata accessor for FormatPackageError();
          sub_1C12033A8();
          uint64_t v180 = swift_allocError();
          uint64_t v152 = v151;
          uint64_t v153 = *(void *)v33;
          uint64_t v154 = *((void *)v33 + 1);
          uint64_t v155 = *((void *)v33 + 2);
          uint64_t v156 = *((void *)v33 + 3);
          uint64_t v157 = *((void *)v33 + 4);
          uint64_t v202 = *((void *)v33 + 5);
          uint64_t v158 = v202;
          uint64_t v203 = (char *)v157;
          uint64_t v160 = *((void *)v33 + 6);
          uint64_t v159 = *((void *)v33 + 7);
          uint64_t v161 = *((void *)v33 + 8);
          uint64_t v162 = *((void *)v33 + 9);
          uint64_t v163 = *(void *)v150;
          uint64_t v204 = *(void *)(v150 + 8);
          uint64_t v164 = v204;
          uint64_t v166 = *(void *)(v150 + 16);
          uint64_t v200 = *(void *)(v150 + 24);
          uint64_t v165 = v200;
          uint64_t v201 = v159;
          uint64_t v167 = *(void *)(v150 + 32);
          v211 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v150 + 40);
          uint64_t v168 = v211;
          uint64_t v212 = v167;
          uint64_t v169 = *(void *)(v150 + 48);
          v209 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v150 + 56);
          char v170 = v209;
          v210 = (char *)v169;
          uint64_t v172 = *(void *)(v150 + 72);
          uint64_t v208 = *(void *)(v150 + 64);
          uint64_t v171 = v208;
          uint64_t v206 = v172;
          unsigned __int8 v173 = v33[80];
          LOBYTE(v151) = *(unsigned char *)(v150 + 80);
          LODWORD(v205) = v151;
          *(void *)uint64_t v152 = v153;
          *(void *)(v152 + 8) = v154;
          *(void *)(v152 + 16) = v155;
          *(void *)(v152 + 24) = v156;
          *(void *)(v152 + 32) = v157;
          *(void *)(v152 + 40) = v158;
          *(void *)(v152 + 48) = v160;
          *(void *)(v152 + 56) = v159;
          *(void *)(v152 + 64) = v161;
          *(void *)(v152 + 72) = v162;
          *(unsigned char *)(v152 + 80) = v173;
          *(_DWORD *)(v152 + 81) = v214;
          *(_DWORD *)(v152 + 84) = *(_DWORD *)((char *)&v214 + 3);
          *(void *)(v152 + 88) = v163;
          *(void *)(v152 + 96) = v164;
          *(void *)(v152 + 104) = v166;
          *(void *)(v152 + 112) = v165;
          *(void *)(v152 + 120) = v167;
          *(void *)(v152 + 128) = v168;
          *(void *)(v152 + 136) = v169;
          *(void *)(v152 + 144) = v170;
          *(void *)(v152 + 152) = v171;
          *(void *)(v152 + 160) = v172;
          *(unsigned char *)(v152 + 168) = v151;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64((uint64_t)v203, v202, v160, v201, v161, v162, v173);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v212, (uint64_t)v211, (uint64_t)v210, (uint64_t)v209, v208, v206, v205);
          swift_willThrow();
          sub_1BFFD8564(v150);
          sub_1BFFD8564((uint64_t)v33);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        (*v211)(v18, 1, 1, v205);
      }
      uint64_t v212 = v35;
      uint64_t v213 = v34;
      uint64_t v45 = v36;
      sub_1C1203058((uint64_t)v18);
      uint64_t v47 = *(void *)v33;
      uint64_t v46 = *((void *)v33 + 1);
      uint64_t v48 = (uint64_t)v33;
      uint64_t v49 = (uint64_t)v27;
      sub_1BFFD59B8((uint64_t)v33, (uint64_t)v27);
      swift_bridgeObjectRetain();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v214 = v37;
      unint64_t v52 = sub_1BFEF2D8C(v47, v46);
      uint64_t v53 = v37[2];
      BOOL v54 = (v51 & 1) == 0;
      uint64_t v55 = v53 + v54;
      if (__OFADD__(v53, v54))
      {
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      char v56 = v51;
      if (v37[3] >= v55)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v37 = v214;
          if (v51) {
            goto LABEL_3;
          }
        }
        else
        {
          sub_1C003134C();
          uint64_t v37 = v214;
          if (v56) {
            goto LABEL_3;
          }
        }
      }
      else
      {
        sub_1BFFD89E4(v55, isUniquelyReferenced_nonNull_native);
        unint64_t v57 = sub_1BFEF2D8C(v47, v46);
        if ((v56 & 1) != (v58 & 1)) {
          goto LABEL_62;
        }
        unint64_t v52 = v57;
        uint64_t v37 = v214;
        if (v56)
        {
LABEL_3:
          uint64_t v36 = v45;
          uint64_t v38 = v37[7] + v52 * v45;
          uint64_t v27 = (char *)v49;
          sub_1BFFD85F8(v49, v38);
          goto LABEL_4;
        }
      }
      v37[(v52 >> 6) + 8] |= 1 << v52;
      uint64_t v59 = (uint64_t *)(v37[6] + 16 * v52);
      *uint64_t v59 = v47;
      v59[1] = v46;
      uint64_t v36 = v45;
      uint64_t v60 = v37[7] + v52 * v45;
      uint64_t v27 = (char *)v49;
      sub_1BFF5F630(v49, v60);
      uint64_t v61 = v37[2];
      BOOL v62 = __OFADD__(v61, 1);
      uint64_t v63 = v61 + 1;
      if (v62) {
        goto LABEL_60;
      }
      v37[2] = v63;
      swift_bridgeObjectRetain();
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = (char *)v48;
      sub_1BFFD8564(v48);
      uint64_t v35 = v212 + v36;
      uint64_t v34 = v213 - 1;
      uint64_t v18 = v210;
      if (v213 == 1)
      {
        swift_bridgeObjectRelease();
        a2 = v182;
        goto LABEL_24;
      }
    }
  }
  uint64_t v37 = (void *)MEMORY[0x1E4FBC868];
LABEL_24:
  uint64_t v177 = *(void *)(a2 + 16);
  if (v177)
  {
    unint64_t v64 = 0;
    uint64_t v178 = a2 + 32;
    uint64_t v186 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v194 + 56);
    char v184 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v194 + 48);
    uint64_t v195 = (void (**)(char *, uint64_t, uint64_t))(v208 + 32);
    char v185 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v208 + 48);
    while (v64 < *(void *)(a2 + 16))
    {
      uint64_t v213 = (uint64_t)v37;
      unint64_t v181 = v64;
      sub_1BFC66384(v178 + 40 * v64, (uint64_t)&v214);
      uint64_t v65 = v215;
      uint64_t v66 = v216;
      __swift_project_boxed_opaque_existential_1(&v214, v215);
      uint64_t v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 8))(v65, v66);
      uint64_t v68 = *(void *)(v67 + 16);
      uint64_t v183 = v67;
      if (v68)
      {
        uint64_t v69 = v67 + 56;
        uint64_t v70 = v196;
        while (1)
        {
          uint64_t v199 = v68;
          uint64_t v71 = v69;
          uint64_t v73 = *(void *)(v69 - 24);
          uint64_t v72 = *(void *)(v69 - 16);
          uint64_t v74 = *(void *)(v71 - 8);
          uint64_t v75 = *(void *)v71;
          uint64_t v200 = v73;
          uint64_t v201 = v74;
          uint64_t v76 = *(void *)(v71 + 8);
          uint64_t v77 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v71 + 16);
          uint64_t v79 = *(void *)(v71 + 24);
          uint64_t v78 = *(void *)(v71 + 32);
          uint64_t v80 = *(void *)(v71 + 40);
          uint64_t v81 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v71 + 48);
          uint64_t v198 = v71;
          int v82 = *(unsigned __int8 *)(v71 + 56);
          uint64_t v83 = v213;
          uint64_t v84 = *(void *)(v213 + 16);
          v211 = v81;
          uint64_t v212 = v78;
          uint64_t v206 = v80;
          uint64_t v207 = v75;
          v209 = v77;
          v210 = (char *)v79;
          uint64_t v208 = v76;
          LODWORD(v204) = v82;
          if (v84)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v85 = v78;
            uint64_t v86 = v80;
            sub_1BFF1DB64(v76, (uint64_t)v77, v79, v85, v80, (uint64_t)v81, v82);
            swift_bridgeObjectRetain();
            unint64_t v87 = sub_1BFEF2D8C(v73, v72);
            if (v88)
            {
              uint64_t v89 = v196;
              sub_1BFFD59B8(*(void *)(v83 + 56) + *(void *)(v194 + 72) * v87, v196);
              uint64_t v90 = 0;
            }
            else
            {
              uint64_t v90 = 1;
              uint64_t v89 = v196;
            }
            uint64_t v91 = v205;
            (*v186)(v89, v90, 1, v205);
            swift_bridgeObjectRelease();
            int v92 = (*v184)(v89, 1, v91);
            uint64_t v80 = v86;
            uint64_t v81 = v211;
            uint64_t v78 = v212;
            uint64_t v77 = v209;
            uint64_t v79 = (uint64_t)v210;
            uint64_t v93 = v207;
            uint64_t v76 = v208;
            if (v92 != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v134 = v176;
              sub_1BFF5F630(v89, v176);
              uint64_t v205 = type metadata accessor for FormatPackageError();
              sub_1C12033A8();
              uint64_t v180 = swift_allocError();
              *(void *)uint64_t v135 = v200;
              *(void *)(v135 + 8) = v72;
              *(void *)(v135 + 16) = v201;
              *(void *)(v135 + 24) = v93;
              *(void *)(v135 + 32) = v76;
              *(void *)(v135 + 40) = v77;
              uint64_t v136 = v212;
              *(void *)(v135 + 48) = v79;
              *(void *)(v135 + 56) = v136;
              *(void *)(v135 + 64) = v206;
              *(void *)(v135 + 72) = v81;
              *(unsigned char *)(v135 + 80) = v204;
              uint64_t v137 = *(void *)v134;
              uint64_t v138 = *(void *)(v134 + 8);
              uint64_t v139 = *(void *)(v134 + 16);
              uint64_t v140 = *(void *)(v134 + 24);
              uint64_t v141 = *(void *)(v134 + 32);
              uint64_t v142 = *(void *)(v134 + 40);
              uint64_t v143 = *(void *)(v134 + 48);
              uint64_t v144 = *(void *)(v134 + 56);
              uint64_t v146 = *(void *)(v134 + 64);
              uint64_t v212 = *(void *)(v134 + 72);
              uint64_t v145 = v212;
              unsigned __int8 v147 = *(unsigned char *)(v134 + 80);
              LODWORD(v211) = v147;
              *(void *)(v135 + 88) = v137;
              *(void *)(v135 + 96) = v138;
              *(void *)(v135 + 104) = v139;
              *(void *)(v135 + 112) = v140;
              *(void *)(v135 + 120) = v141;
              *(void *)(v135 + 128) = v142;
              *(void *)(v135 + 136) = v143;
              *(void *)(v135 + 144) = v144;
              *(void *)(v135 + 152) = v146;
              *(void *)(v135 + 160) = v145;
              *(unsigned char *)(v135 + 168) = v147;
              sub_1BFC66384((uint64_t)&v214, v135 + 176);
              swift_storeEnumTagMultiPayload();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1BFF1DB64(v141, v142, v143, v144, v146, v212, v211);
              swift_willThrow();
              sub_1BFFD8564(v134);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v214);
              return swift_bridgeObjectRelease();
            }
          }
          else
          {
            uint64_t v89 = v70;
            ((void (*)(void))*v186)();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v76, (uint64_t)v77, v79, v78, v80, (uint64_t)v81, v204);
          }
          sub_1C1203058(v89);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v94 = (uint64_t)v77;
          unsigned __int8 v95 = v204;
          sub_1BFF1DB64(v76, v94, v79, v78, v80, (uint64_t)v81, v204);
          uint64_t v197 = v72;
          swift_bridgeObjectRetain();
          uint64_t v96 = (uint64_t)v192;
          sub_1C15192AC();
          uint64_t v97 = *v185;
          uint64_t v98 = v191;
          if ((*v185)(v96, 1, v191) == 1)
          {
            sub_1C151924C();
            sub_1BFEC001C(v96);
          }
          else
          {
            (*v195)(v203, v96, v98);
          }
          uint64_t v99 = v98;
          uint64_t v100 = (uint64_t)v193;
          sub_1C15192AC();
          unsigned __int8 v101 = v95;
          if (v97(v100, 1, v98) == 1)
          {
            uint64_t v102 = v190;
            sub_1C151923C();
            sub_1BFEC001C(v100);
            uint64_t v103 = v195;
          }
          else
          {
            uint64_t v103 = v195;
            uint64_t v102 = v190;
            (*v195)(v190, v100, v99);
          }
          uint64_t v104 = (int *)v189;
          uint64_t v105 = v188;
          sub_1C15192AC();
          *(void *)uint64_t v105 = 0;
          *((void *)v105 + 1) = 0;
          uint64_t v106 = *v103;
          (*v103)(&v105[v104[5]], (uint64_t)v203, v99);
          v106(&v105[v104[6]], (uint64_t)v102, v99);
          uint64_t v107 = MEMORY[0x1E4FBC870];
          *(void *)&v105[v104[8]] = MEMORY[0x1E4FBC870];
          *(void *)&v105[v104[9]] = v107;
          *(void *)&v105[v104[10]] = v107;
          *(void *)&v105[v104[11]] = v107;
          uint64_t v108 = (uint64_t)v187;
          uint64_t v109 = v200;
          uint64_t v110 = v197;
          *uint64_t v187 = v200;
          *(void *)(v108 + 8) = v110;
          uint64_t v111 = v207;
          *(void *)(v108 + 16) = v201;
          *(void *)(v108 + 24) = v111;
          uint64_t v112 = v209;
          *(void *)(v108 + 32) = v208;
          *(void *)(v108 + 40) = v112;
          uint64_t v113 = v212;
          *(void *)(v108 + 48) = v210;
          *(void *)(v108 + 56) = v113;
          uint64_t v114 = v211;
          *(void *)(v108 + 64) = v206;
          *(void *)(v108 + 72) = v114;
          unsigned __int8 v115 = v101;
          uint64_t v116 = v109;
          uint64_t v117 = v110;
          *(unsigned char *)(v108 + 80) = v115;
          sub_1BFEC1150((uint64_t)v105, v108 + *(int *)(v205 + 36));
          sub_1BFF5F630(v108, v202);
          uint64_t v118 = v213;
          int v119 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v217 = (void *)v118;
          unint64_t v121 = sub_1BFEF2D8C(v116, v117);
          uint64_t v122 = *(void *)(v118 + 16);
          BOOL v123 = (v120 & 1) == 0;
          uint64_t v124 = v122 + v123;
          if (__OFADD__(v122, v123)) {
            break;
          }
          char v125 = v120;
          if (*(void *)(v118 + 24) >= v124)
          {
            uint64_t v128 = v212;
            if ((v119 & 1) == 0) {
              sub_1C003134C();
            }
          }
          else
          {
            sub_1BFFD89E4(v124, v119);
            unint64_t v126 = sub_1BFEF2D8C(v116, v117);
            uint64_t v128 = v212;
            if ((v125 & 1) != (v127 & 1)) {
              goto LABEL_62;
            }
            unint64_t v121 = v126;
          }
          uint64_t v129 = v211;
          uint64_t v130 = v217;
          uint64_t v213 = (uint64_t)v217;
          if (v125)
          {
            sub_1BFFD85F8(v202, v217[7] + *(void *)(v194 + 72) * v121);
          }
          else
          {
            v217[(v121 >> 6) + 8] |= 1 << v121;
            uint64_t v131 = (uint64_t *)(v130[6] + 16 * v121);
            *uint64_t v131 = v116;
            v131[1] = v117;
            sub_1BFF5F630(v202, v130[7] + *(void *)(v194 + 72) * v121);
            uint64_t v132 = v130[2];
            BOOL v62 = __OFADD__(v132, 1);
            uint64_t v133 = v132 + 1;
            if (v62) {
              goto LABEL_59;
            }
            v130[2] = v133;
            swift_bridgeObjectRetain();
          }
          uint64_t v69 = v198 + 88;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          sub_1BFEC28BC(v208, (uint64_t)v209, (uint64_t)v210, v128, v206, (uint64_t)v129, v115);
          uint64_t v68 = v199 - 1;
          uint64_t v70 = v196;
          if (v199 == 1) {
            goto LABEL_26;
          }
        }
        __break(1u);
        goto LABEL_58;
      }
LABEL_26:
      unint64_t v64 = v181 + 1;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v214);
      a2 = v182;
      uint64_t v37 = (void *)v213;
      if (v64 == v177) {
        goto LABEL_54;
      }
    }
LABEL_61:
    __break(1u);
LABEL_62:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
  }
  else
  {
LABEL_54:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v149 = v175;
    *char v175 = v179;
    v149[1] = v37;
  }
  return result;
}

uint64_t sub_1C1202F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C12032A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1202F50(uint64_t a1)
{
  unint64_t v2 = sub_1BFCD4810();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1202F8C(uint64_t a1)
{
  unint64_t v2 = sub_1BFCD4810();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL FormatTypeCollection.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

unint64_t sub_1C1202FDC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1BFD8CB50(MEMORY[0x1E4FBC860]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

__n128 sub_1C1203010(unint64_t *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v7[4] = *(_OWORD *)(a2 + 64);
  v7[5] = v3;
  uint64_t v8 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v7[2] = *(_OWORD *)(a2 + 32);
  v7[3] = v5;
  sub_1BFFD5BF8(a1, (uint64_t)v7, *v2);
  return result;
}

uint64_t sub_1C1203058(uint64_t a1)
{
  sub_1BFCD4864(0, (unint64_t *)&qword_1EB8741E8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C12030D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

ValueMetadata *type metadata accessor for FormatTypeCollection()
{
  return &type metadata for FormatTypeCollection;
}

unsigned char *storeEnumTagSinglePayload for FormatTypeCollection.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1203214);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTypeCollection.CodingKeys()
{
  return &type metadata for FormatTypeCollection.CodingKeys;
}

unint64_t sub_1C1203250()
{
  unint64_t result = qword_1EA1ACF50;
  if (!qword_1EA1ACF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF50);
  }
  return result;
}

uint64_t sub_1C12032A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7365707974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79427365707974 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C12033A8()
{
  unint64_t result = qword_1EA198A90;
  if (!qword_1EA198A90)
  {
    type metadata accessor for FormatPackageError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A90);
  }
  return result;
}

uint64_t FormatTagBinding.Asset.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 12;
  if (v2 < 0xC) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static FormatTagBinding.Asset.allCases.getter()
{
  return &unk_1F1B64808;
}

unint64_t FormatTagBinding.Asset.rawValue.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0x616D497265766F63;
      break;
    case 4:
    case 5:
      unint64_t result = 0x4976614E64656566;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x6F4C7374726F7073;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C12035BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1486968(*a1, *a2);
}

uint64_t sub_1C12035C8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C1203630()
{
  FormatTagBinding.Asset.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1203694@<X0>(char *a1@<X8>)
{
  return FormatTagBinding.Asset.init(rawValue:)(a1);
}

unint64_t sub_1C12036A0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatTagBinding.Asset.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C12036C8(void *a1@<X8>)
{
  *a1 = &unk_1F1B64808;
}

unint64_t sub_1C120373C()
{
  unint64_t result = qword_1EA1ACF58;
  if (!qword_1EA1ACF58)
  {
    sub_1C1203794();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACF58);
  }
  return result;
}

void sub_1C1203794()
{
  if (!qword_1EA1ACF60)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ACF60);
    }
  }
}

unsigned char *_s5AssetOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12038B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaFilter()
{
  return &type metadata for LayeredMediaFilter;
}

id sub_1C12038F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v29 = a1;
  sub_1C151E62C();
  id v11 = objc_allocWithZone(MEMORY[0x1E4F39BC0]);
  uint64_t v12 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithType_, v12);

  uint64_t v14 = MEMORY[0x1E4FBC958];
  if (a3)
  {
    uint64_t v15 = MEMORY[0x1E4FBB550];
    uint64_t v33 = MEMORY[0x1E4FBB550];
    *(void *)&long long v32 = 0;
  }
  else
  {
    uint64_t v31 = MEMORY[0x1E4FBC958];
    *(void *)&long long v30 = a2;
    sub_1BFF993A8(&v30, &v32);
    uint64_t v15 = v33;
    if (!v33)
    {
      uint64_t v16 = 0;
      goto LABEL_6;
    }
  }
  uint64_t v17 = __swift_project_boxed_opaque_existential_1(&v32, v15);
  uint64_t v18 = *(void *)(v15 - 8);
  __n128 v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
  uint64_t v16 = sub_1C1520A7C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
LABEL_6:
  objc_msgSend(v13, sel_setValue_forKey_, v16, *MEMORY[0x1E4F3A130]);
  swift_unknownObjectRelease();
  if (a5)
  {
    uint64_t v22 = MEMORY[0x1E4FBB3D0];
    uint64_t v33 = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v32 = 0x3FF0000000000000;
  }
  else
  {
    uint64_t v31 = v14;
    *(void *)&long long v30 = a4;
    sub_1BFF993A8(&v30, &v32);
    uint64_t v22 = v33;
  }
  __swift_project_boxed_opaque_existential_1(&v32, v22);
  uint64_t v23 = sub_1C1520A7C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
  objc_msgSend(v13, sel_setValue_forKey_, v23, *MEMORY[0x1E4F3A100]);
  swift_unknownObjectRelease();
  if (a6)
  {
    id v24 = objc_msgSend(a6, sel_resolvedColorWithTraitCollection_, v29);
    if (v24)
    {
      uint64_t v25 = v24;
      id v26 = objc_msgSend(v24, sel_CGColor);
      objc_msgSend(v13, sel_setValue_forKey_, v26, *MEMORY[0x1E4F3A148]);
    }
  }
  return v13;
}

uint64_t type metadata accessor for DebugFormatInspectorViewController()
{
  uint64_t result = qword_1EA1ACFA8;
  if (!qword_1EA1ACFA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1203C0C()
{
  return swift_initClassMetadata2();
}

id sub_1C1203C7C()
{
  uint64_t v1 = v0;
  unint64_t v2 = (_OWORD *)(v0 + qword_1EA1ACF70);
  long long v3 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 144);
  long long v4 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 176);
  long long v116 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 160);
  long long v117 = v4;
  long long v5 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 80);
  long long v6 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 112);
  long long v112 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 96);
  long long v113 = v6;
  long long v7 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 112);
  long long v8 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 144);
  long long v114 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 128);
  long long v115 = v8;
  long long v9 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 16);
  long long v10 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 48);
  long long v108 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 32);
  long long v109 = v10;
  long long v11 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 48);
  long long v12 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 80);
  long long v110 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 64);
  long long v111 = v12;
  long long v13 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 16);
  v107[0] = *(_OWORD *)(v0 + qword_1EA1ACF70);
  v107[1] = v13;
  long long v14 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 176);
  long long v182 = v116;
  long long v183 = v14;
  long long v178 = v112;
  long long v179 = v7;
  long long v181 = v3;
  long long v180 = v114;
  long long v174 = v108;
  long long v175 = v11;
  long long v177 = v5;
  long long v176 = v110;
  uint64_t v15 = *(void *)(v0 + qword_1EA1ACF78);
  char v118 = *(unsigned char *)(v0 + qword_1EA1ACF70 + 192);
  char v184 = *(unsigned char *)(v0 + qword_1EA1ACF70 + 192);
  long long v173 = v9;
  long long v172 = v107[0];
  uint64_t v16 = *(void *)(v0 + qword_1EA1ACFA0);
  sub_1C09F45A0((uint64_t)v107);
  uint64_t v17 = sub_1C120421C(0, v16);
  sub_1C09F4704((uint64_t)v107);
  *(void *)(v15 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v17;
  swift_bridgeObjectRelease();
  sub_1C0CF0E84();
  long long v18 = v2[9];
  long long v19 = v2[11];
  long long v128 = v2[10];
  long long v129 = v19;
  long long v20 = v2[5];
  long long v21 = v2[7];
  long long v124 = v2[6];
  long long v125 = v21;
  long long v22 = v2[7];
  long long v23 = v2[9];
  long long v126 = v2[8];
  long long v127 = v23;
  long long v24 = v2[1];
  long long v25 = v2[3];
  long long v120 = v2[2];
  long long v121 = v25;
  long long v26 = v2[3];
  long long v27 = v2[5];
  long long v122 = v2[4];
  long long v123 = v27;
  long long v28 = v2[1];
  v119[0] = *v2;
  v119[1] = v28;
  long long v29 = v2[11];
  long long v182 = v128;
  long long v183 = v29;
  long long v178 = v124;
  long long v179 = v22;
  long long v181 = v18;
  long long v180 = v126;
  long long v174 = v120;
  long long v175 = v26;
  long long v177 = v20;
  long long v176 = v122;
  uint64_t v30 = *(void *)(v1 + qword_1EA1ACF80);
  char v130 = *((unsigned char *)v2 + 192);
  char v184 = *((unsigned char *)v2 + 192);
  long long v173 = v24;
  long long v172 = v119[0];
  sub_1C09F45A0((uint64_t)v119);
  uint64_t v31 = sub_1C120421C(1, v16);
  sub_1C09F4704((uint64_t)v119);
  *(void *)(v30 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v31;
  swift_bridgeObjectRelease();
  sub_1C0CF0E84();
  long long v32 = v2[9];
  long long v33 = v2[11];
  long long v140 = v2[10];
  long long v141 = v33;
  long long v34 = v2[5];
  long long v35 = v2[7];
  long long v136 = v2[6];
  long long v137 = v35;
  long long v36 = v2[7];
  long long v37 = v2[9];
  long long v138 = v2[8];
  long long v139 = v37;
  long long v38 = v2[1];
  long long v39 = v2[3];
  long long v132 = v2[2];
  long long v133 = v39;
  long long v40 = v2[3];
  long long v41 = v2[5];
  long long v134 = v2[4];
  long long v135 = v41;
  long long v42 = v2[1];
  v131[0] = *v2;
  v131[1] = v42;
  long long v43 = v2[11];
  long long v182 = v140;
  long long v183 = v43;
  long long v178 = v136;
  long long v179 = v36;
  long long v181 = v32;
  long long v180 = v138;
  long long v174 = v132;
  long long v175 = v40;
  long long v177 = v34;
  long long v176 = v134;
  uint64_t v44 = *(void *)(v1 + qword_1EA1ACF88);
  char v142 = *((unsigned char *)v2 + 192);
  char v184 = *((unsigned char *)v2 + 192);
  long long v173 = v38;
  long long v172 = v131[0];
  sub_1C09F45A0((uint64_t)v131);
  uint64_t v45 = sub_1C120421C(2, v16);
  sub_1C09F4704((uint64_t)v131);
  *(void *)(v44 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v45;
  swift_bridgeObjectRelease();
  sub_1C0CF0E84();
  long long v46 = v2[9];
  long long v47 = v2[11];
  long long v152 = v2[10];
  long long v153 = v47;
  long long v48 = v2[5];
  long long v49 = v2[7];
  long long v148 = v2[6];
  long long v149 = v49;
  long long v50 = v2[7];
  long long v51 = v2[9];
  long long v150 = v2[8];
  long long v151 = v51;
  long long v52 = v2[1];
  long long v53 = v2[3];
  long long v144 = v2[2];
  long long v145 = v53;
  long long v54 = v2[3];
  long long v55 = v2[5];
  long long v146 = v2[4];
  long long v147 = v55;
  long long v56 = v2[1];
  v143[0] = *v2;
  v143[1] = v56;
  long long v57 = v2[11];
  long long v182 = v152;
  long long v183 = v57;
  long long v178 = v148;
  long long v179 = v50;
  long long v181 = v46;
  long long v180 = v150;
  long long v174 = v144;
  long long v175 = v54;
  long long v177 = v48;
  long long v176 = v146;
  uint64_t v58 = *(void *)(v1 + qword_1EA1ACF90);
  char v154 = *((unsigned char *)v2 + 192);
  char v184 = *((unsigned char *)v2 + 192);
  long long v173 = v52;
  long long v172 = v143[0];
  sub_1C09F45A0((uint64_t)v143);
  uint64_t v59 = sub_1C120421C(3, v16);
  sub_1C09F4704((uint64_t)v143);
  *(void *)(v58 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v59;
  swift_bridgeObjectRelease();
  sub_1C0CF0E84();
  uint64_t v60 = *(void *)(v1 + qword_1EA1ACF98);
  long long v61 = v2[3];
  v155[2] = v2[2];
  v155[3] = v61;
  long long v62 = v2[7];
  v155[6] = v2[6];
  v155[7] = v62;
  long long v63 = v2[5];
  v155[4] = v2[4];
  v155[5] = v63;
  char v156 = *((unsigned char *)v2 + 192);
  long long v64 = v2[11];
  v155[10] = v2[10];
  v155[11] = v64;
  long long v65 = v2[9];
  v155[8] = v2[8];
  v155[9] = v65;
  long long v66 = v2[1];
  v155[0] = *v2;
  v155[1] = v66;
  uint64_t v67 = (long long *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model);
  v157[0] = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model);
  long long v68 = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 48);
  long long v70 = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 16);
  long long v69 = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 32);
  v157[4] = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 64);
  v157[3] = v68;
  v157[1] = v70;
  v157[2] = v69;
  long long v71 = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 112);
  long long v73 = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 80);
  long long v72 = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 96);
  v157[8] = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 128);
  v157[7] = v71;
  v157[5] = v73;
  v157[6] = v72;
  long long v75 = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 160);
  long long v74 = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 176);
  long long v76 = *(_OWORD *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 144);
  char v158 = *(unsigned char *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model + 192);
  v157[11] = v74;
  v157[9] = v76;
  v157[10] = v75;
  memmove((void *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model), v2, 0xC1uLL);
  sub_1C09F45A0((uint64_t)v155);
  sub_1C09F4704((uint64_t)v157);
  uint64_t v77 = *(void *)(v60 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_maskSegmentedViewController);
  long long v159 = *v67;
  long long v78 = v67[3];
  long long v80 = v67[1];
  long long v79 = v67[2];
  long long v163 = v67[4];
  long long v162 = v78;
  long long v160 = v80;
  long long v161 = v79;
  long long v81 = v67[7];
  long long v83 = v67[5];
  long long v82 = v67[6];
  long long v167 = v67[8];
  long long v166 = v81;
  long long v164 = v83;
  long long v165 = v82;
  long long v85 = v67[10];
  long long v84 = v67[11];
  long long v86 = v67[9];
  char v171 = *((unsigned char *)v67 + 192);
  long long v170 = v84;
  long long v168 = v86;
  long long v169 = v85;
  uint64_t v87 = v77 + qword_1EA1A2228;
  long long v172 = *(_OWORD *)(v77 + qword_1EA1A2228);
  long long v88 = *(_OWORD *)(v77 + qword_1EA1A2228 + 48);
  long long v90 = *(_OWORD *)(v77 + qword_1EA1A2228 + 16);
  long long v89 = *(_OWORD *)(v77 + qword_1EA1A2228 + 32);
  long long v176 = *(_OWORD *)(v77 + qword_1EA1A2228 + 64);
  long long v175 = v88;
  long long v173 = v90;
  long long v174 = v89;
  long long v91 = *(_OWORD *)(v77 + qword_1EA1A2228 + 112);
  long long v93 = *(_OWORD *)(v77 + qword_1EA1A2228 + 80);
  long long v92 = *(_OWORD *)(v77 + qword_1EA1A2228 + 96);
  long long v180 = *(_OWORD *)(v77 + qword_1EA1A2228 + 128);
  long long v179 = v91;
  long long v177 = v93;
  long long v178 = v92;
  long long v95 = *(_OWORD *)(v77 + qword_1EA1A2228 + 160);
  long long v94 = *(_OWORD *)(v77 + qword_1EA1A2228 + 176);
  long long v96 = *(_OWORD *)(v77 + qword_1EA1A2228 + 144);
  char v184 = *(unsigned char *)(v77 + qword_1EA1A2228 + 192);
  long long v183 = v94;
  long long v181 = v96;
  long long v182 = v95;
  *(_OWORD *)uint64_t v87 = v159;
  long long v97 = v160;
  long long v98 = v161;
  long long v99 = v163;
  *(_OWORD *)(v87 + 48) = v162;
  *(_OWORD *)(v87 + 64) = v99;
  *(_OWORD *)(v87 + 16) = v97;
  *(_OWORD *)(v87 + 32) = v98;
  long long v100 = v164;
  long long v101 = v165;
  long long v102 = v167;
  *(_OWORD *)(v87 + 112) = v166;
  *(_OWORD *)(v87 + 128) = v102;
  *(_OWORD *)(v87 + 80) = v100;
  *(_OWORD *)(v87 + 96) = v101;
  long long v103 = v168;
  long long v104 = v169;
  long long v105 = v170;
  *(unsigned char *)(v87 + 192) = v171;
  *(_OWORD *)(v87 + 160) = v104;
  *(_OWORD *)(v87 + 176) = v105;
  *(_OWORD *)(v87 + 144) = v103;
  sub_1C09F45A0((uint64_t)&v159);
  sub_1C09F4704((uint64_t)&v172);
  return sub_1C09F34D0();
}

uint64_t sub_1C120421C(char a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(v2 + 176);
  void v23[10] = *(_OWORD *)(v2 + 160);
  v23[11] = v3;
  char v24 = *(unsigned char *)(v2 + 192);
  long long v4 = *(_OWORD *)(v2 + 112);
  v23[6] = *(_OWORD *)(v2 + 96);
  v23[7] = v4;
  long long v5 = *(_OWORD *)(v2 + 144);
  v23[8] = *(_OWORD *)(v2 + 128);
  v23[9] = v5;
  long long v6 = *(_OWORD *)(v2 + 48);
  v23[2] = *(_OWORD *)(v2 + 32);
  v23[3] = v6;
  long long v7 = *(_OWORD *)(v2 + 80);
  v23[4] = *(_OWORD *)(v2 + 64);
  v23[5] = v7;
  long long v8 = *(_OWORD *)(v2 + 16);
  v23[0] = *(_OWORD *)v2;
  v23[1] = v8;
  uint64_t v9 = sub_1C1205810(a1, (uint64_t)v23, a2);
  uint64_t v10 = sub_1C131B4D4(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = v10 + 64;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v17 = *(void *)v12;
      if (*(void *)(*(void *)v12 + 16))
      {
        uint64_t v19 = *(void *)(v12 - 32);
        uint64_t v18 = *(void *)(v12 - 24);
        uint64_t v20 = *(void *)(v12 - 16);
        uint64_t v21 = *(void *)(v12 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F7928(0, *(void *)(v13 + 16) + 1, 1);
        }
        unint64_t v15 = *(void *)(v13 + 16);
        unint64_t v14 = *(void *)(v13 + 24);
        if (v15 >= v14 >> 1) {
          sub_1C05F7928(v14 > 1, v15 + 1, 1);
        }
        *(void *)(v13 + 16) = v15 + 1;
        uint64_t v16 = (void *)(v13 + 40 * v15);
        v16[4] = v19;
        uint64_t v16[5] = v18;
        v16[6] = v20;
        v16[7] = v21;
        v16[8] = v17;
      }
      v12 += 40;
      --v11;
    }
    while (v11);
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v13;
}

char *sub_1C120439C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  long long v5 = *(_OWORD *)(a2 + 144);
  long long v6 = *(_OWORD *)(a2 + 176);
  long long v164 = *(_OWORD *)(a2 + 160);
  long long v7 = v164;
  long long v165 = v6;
  long long v8 = *(_OWORD *)(a2 + 80);
  long long v9 = *(_OWORD *)(a2 + 112);
  long long v160 = *(_OWORD *)(a2 + 96);
  long long v10 = v160;
  long long v161 = v9;
  long long v11 = *(_OWORD *)(a2 + 112);
  long long v12 = *(_OWORD *)(a2 + 144);
  long long v162 = *(_OWORD *)(a2 + 128);
  long long v13 = v162;
  long long v163 = v12;
  long long v14 = *(_OWORD *)(a2 + 16);
  long long v15 = *(_OWORD *)(a2 + 48);
  long long v156 = *(_OWORD *)(a2 + 32);
  long long v16 = v156;
  long long v157 = v15;
  long long v17 = *(_OWORD *)(a2 + 48);
  long long v18 = *(_OWORD *)(a2 + 80);
  long long v158 = *(_OWORD *)(a2 + 64);
  long long v19 = v158;
  long long v159 = v18;
  long long v20 = *(_OWORD *)(a2 + 16);
  long long v154 = *(_OWORD *)a2;
  long long v21 = v154;
  long long v155 = v20;
  *(void *)&v2[qword_1EA1ACFA0] = a1;
  long long v22 = &v2[qword_1EA1ACF70];
  long long v23 = *(_OWORD *)(a2 + 144);
  long long v24 = *(_OWORD *)(a2 + 176);
  *((_OWORD *)v22 + 10) = *(_OWORD *)(a2 + 160);
  *((_OWORD *)v22 + 11) = v24;
  long long v25 = *(_OWORD *)(a2 + 80);
  long long v26 = *(_OWORD *)(a2 + 112);
  *((_OWORD *)v22 + 6) = *(_OWORD *)(a2 + 96);
  *((_OWORD *)v22 + 7) = v26;
  *((_OWORD *)v22 + 8) = *(_OWORD *)(a2 + 128);
  *((_OWORD *)v22 + 9) = v23;
  long long v27 = *(_OWORD *)(a2 + 16);
  long long v28 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v22 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v22 + 3) = v28;
  *((_OWORD *)v22 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v22 + 5) = v25;
  *(_OWORD *)long long v22 = *(_OWORD *)a2;
  *((_OWORD *)v22 + 1) = v27;
  long long v29 = *(_OWORD *)(a2 + 176);
  long long v151 = v7;
  long long v152 = v29;
  long long v147 = v10;
  long long v148 = v11;
  long long v149 = v13;
  long long v150 = v5;
  long long v143 = v16;
  long long v144 = v17;
  long long v145 = v19;
  long long v146 = v8;
  char v166 = *(unsigned char *)(a2 + 192);
  v22[192] = *(unsigned char *)(a2 + 192);
  char v153 = *(unsigned char *)(a2 + 192);
  long long v141 = v21;
  long long v142 = v14;
  swift_retain_n();
  uint64_t v30 = v2;
  sub_1C09F45A0((uint64_t)&v154);
  uint64_t v31 = sub_1C120421C(0, a1);
  long long v32 = (void *)sub_1C151E5EC();
  long long v33 = self;
  id v34 = objc_msgSend(v33, sel_systemImageNamed_, v32);

  long long v35 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
  long long v36 = objc_allocWithZone(v35);
  v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(void *)&v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
  long long v37 = &v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *long long v37 = 0;
  v37[1] = 0xE000000000000000;
  uint64_t v38 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  id v39 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  long long v40 = v36;
  *(void *)&v36[v38] = objc_msgSend(v39, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(void *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(void *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v31;
  *(void *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v31;
  *(void *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v34;
  swift_retain();
  swift_bridgeObjectRetain();
  id v41 = v34;

  v140.receiver = v40;
  v140.super_class = v35;
  id v42 = objc_msgSendSuper2(&v140, sel_initWithNibName_bundle_, 0, 0);
  long long v43 = (void *)sub_1C151E5EC();
  objc_msgSend(v42, sel_setTitle_, v43);

  swift_release();
  *(void *)&v30[qword_1EA1ACF78] = v42;
  long long v151 = v164;
  long long v152 = v165;
  char v153 = v166;
  long long v147 = v160;
  long long v148 = v161;
  long long v149 = v162;
  long long v150 = v163;
  long long v143 = v156;
  long long v144 = v157;
  long long v145 = v158;
  long long v146 = v159;
  long long v141 = v154;
  long long v142 = v155;
  swift_retain();
  uint64_t v44 = sub_1C120421C(1, a1);
  uint64_t v45 = (void *)sub_1C151E5EC();
  id v46 = objc_msgSend(v33, sel_systemImageNamed_, v45);

  long long v47 = objc_allocWithZone(v35);
  v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(void *)&v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
  long long v48 = &v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *long long v48 = 0;
  v48[1] = 0xE000000000000000;
  uint64_t v49 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  id v50 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  long long v51 = v47;
  *(void *)&v47[v49] = objc_msgSend(v50, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(void *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(void *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v44;
  *(void *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v44;
  *(void *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v46;
  swift_retain();
  swift_bridgeObjectRetain();
  id v52 = v46;

  v139.receiver = v51;
  v139.super_class = v35;
  id v53 = objc_msgSendSuper2(&v139, sel_initWithNibName_bundle_, 0, 0);
  long long v54 = (void *)sub_1C151E5EC();
  objc_msgSend(v53, sel_setTitle_, v54);

  swift_release();
  *(void *)&v30[qword_1EA1ACF80] = v53;
  long long v151 = v164;
  long long v152 = v165;
  char v153 = v166;
  long long v147 = v160;
  long long v148 = v161;
  long long v149 = v162;
  long long v150 = v163;
  long long v143 = v156;
  long long v144 = v157;
  long long v145 = v158;
  long long v146 = v159;
  long long v141 = v154;
  long long v142 = v155;
  swift_retain();
  uint64_t v55 = sub_1C120421C(2, a1);
  long long v56 = (void *)sub_1C151E5EC();
  id v133 = v33;
  id v57 = objc_msgSend(v33, sel_systemImageNamed_, v56);

  uint64_t v58 = objc_allocWithZone(v35);
  v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
  uint64_t v59 = &v58[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *uint64_t v59 = 0;
  v59[1] = 0xE000000000000000;
  uint64_t v60 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  id v61 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  long long v62 = v58;
  *(void *)&v58[v60] = objc_msgSend(v61, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(void *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(void *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v55;
  *(void *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v55;
  *(void *)&v62[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v57;
  swift_retain();
  swift_bridgeObjectRetain();
  id v63 = v57;

  v138.receiver = v62;
  v138.super_class = v35;
  id v64 = objc_msgSendSuper2(&v138, sel_initWithNibName_bundle_, 0, 0);
  long long v65 = (void *)sub_1C151E5EC();
  objc_msgSend(v64, sel_setTitle_, v65);

  swift_release();
  *(void *)&v30[qword_1EA1ACF88] = v64;
  long long v151 = v164;
  long long v152 = v165;
  char v153 = v166;
  long long v147 = v160;
  long long v148 = v161;
  long long v149 = v162;
  long long v150 = v163;
  long long v143 = v156;
  long long v144 = v157;
  long long v145 = v158;
  long long v146 = v159;
  long long v141 = v154;
  long long v142 = v155;
  swift_retain();
  uint64_t v66 = sub_1C120421C(3, a1);
  uint64_t v67 = (void *)sub_1C151E5EC();
  id v68 = objc_msgSend(v33, sel_systemImageNamed_, v67);

  long long v69 = objc_allocWithZone(v35);
  v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(void *)&v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
  long long v70 = &v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *long long v70 = 0;
  v70[1] = 0xE000000000000000;
  uint64_t v71 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  id v72 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  long long v73 = v69;
  *(void *)&v69[v71] = objc_msgSend(v72, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v73[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(void *)&v73[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(void *)&v73[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v66;
  *(void *)&v73[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v66;
  *(void *)&v73[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v68;
  swift_retain();
  swift_bridgeObjectRetain();
  id v74 = v68;

  v137.receiver = v73;
  v137.super_class = v35;
  id v75 = objc_msgSendSuper2(&v137, sel_initWithNibName_bundle_, 0, 0);
  long long v76 = (void *)sub_1C151E5EC();
  objc_msgSend(v75, sel_setTitle_, v76);

  swift_release();
  *(void *)&v30[qword_1EA1ACF90] = v75;
  uint64_t v77 = (objc_class *)type metadata accessor for DebugFormatInspectorMaskViewController();
  long long v78 = (char *)objc_allocWithZone(v77);
  *(void *)&v78[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_editor] = a1;
  long long v79 = &v78[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_model];
  *(_OWORD *)long long v79 = v154;
  long long v80 = v158;
  long long v82 = v155;
  long long v81 = v156;
  *((_OWORD *)v79 + 3) = v157;
  *((_OWORD *)v79 + 4) = v80;
  *((_OWORD *)v79 + 1) = v82;
  *((_OWORD *)v79 + 2) = v81;
  long long v83 = v162;
  long long v85 = v159;
  long long v84 = v160;
  *((_OWORD *)v79 + 7) = v161;
  *((_OWORD *)v79 + 8) = v83;
  *((_OWORD *)v79 + 5) = v85;
  *((_OWORD *)v79 + 6) = v84;
  long long v86 = v163;
  long long v87 = v164;
  long long v88 = v165;
  v79[192] = v166;
  *((_OWORD *)v79 + 10) = v87;
  *((_OWORD *)v79 + 11) = v88;
  *((_OWORD *)v79 + 9) = v86;
  long long v151 = v164;
  long long v152 = v165;
  char v153 = v166;
  long long v147 = v160;
  long long v148 = v161;
  long long v149 = v162;
  long long v150 = v163;
  long long v143 = v156;
  long long v144 = v157;
  long long v145 = v158;
  long long v146 = v159;
  long long v141 = v154;
  long long v142 = v155;
  id v89 = objc_allocWithZone((Class)type metadata accessor for DebugFormatInspectorMaskSegmentedViewController());
  swift_retain_n();
  sub_1C09F45A0((uint64_t)&v154);
  long long v90 = v78;
  long long v91 = sub_1C09F3774(a1, &v141);
  *(void *)&v90[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorMaskViewController_maskSegmentedViewController] = v91;
  long long v92 = v91;

  v136.receiver = v90;
  v136.super_class = v77;
  id v93 = objc_msgSendSuper2(&v136, sel_initWithRootViewController_, v92);

  swift_release();
  *(void *)&v30[qword_1EA1ACF98] = v93;

  v135.receiver = v30;
  v135.super_class = ObjectType;
  id v94 = objc_msgSendSuper2(&v135, sel_initWithNibName_bundle_, 0, 0);
  id v95 = objc_allocWithZone(MEMORY[0x1E4FB1BF8]);
  long long v96 = (char *)v94;
  id v97 = objc_msgSend(v95, sel_initWithSearchResultsController_, 0);
  objc_msgSend(v97, sel_setSearchResultsUpdater_, v96);
  objc_msgSend(v97, sel_setObscuresBackgroundDuringPresentation_, 0);
  objc_msgSend(v97, sel_setHidesNavigationBarDuringPresentation_, 0);
  id v98 = objc_msgSend(v97, sel_searchBar);
  id v99 = objc_msgSend(self, sel_systemBlueColor);
  objc_msgSend(v98, sel_setTintColor_, v99);

  id v100 = objc_msgSend(v97, sel_searchBar);
  long long v101 = (void *)sub_1C151E5EC();
  objc_msgSend(v100, sel_setPlaceholder_, v101);

  id v102 = objc_msgSend(v97, sel_searchBar);
  swift_retain();
  sub_1C151709C();
  swift_release();
  long long v103 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v102, sel_setText_, v103);

  id v104 = objc_msgSend(v97, sel_searchBar);
  id v105 = objc_msgSend(v104, sel_searchTextField);

  objc_msgSend(v105, sel_setAutocorrectionType_, 1);
  id v106 = objc_msgSend(v97, sel_searchBar);
  id v107 = objc_msgSend(v106, sel_searchTextField);

  objc_msgSend(v107, sel_setAutocapitalizationType_, 0);
  id v108 = objc_msgSend(v97, sel_searchBar);
  long long v109 = (void *)sub_1C151E5EC();
  id v110 = objc_msgSend(v133, sel_systemImageNamed_, v109);

  objc_msgSend(v108, sel_setImage_forSearchBarIcon_state_, v110, 0, 0);
  id v111 = objc_msgSend(v97, sel_searchBar);
  objc_msgSend(v111, sel_setShowsCancelButton_, 0);

  uint64_t v112 = qword_1EA1ACF80;
  id v113 = objc_msgSend(*(id *)&v96[qword_1EA1ACF80], sel_navigationItem);
  objc_msgSend(v113, sel_setSearchController_, v97);

  uint64_t v114 = qword_1EA1ACF88;
  id v115 = objc_msgSend(*(id *)&v96[qword_1EA1ACF88], sel_navigationItem);
  objc_msgSend(v115, sel_setSearchController_, v97);

  id v116 = objc_msgSend(v96, sel_navigationItem);
  objc_msgSend(v116, sel_setHidesSearchBarWhenScrolling_, 0);

  long long v117 = *(void **)&v96[qword_1EA1ACF78];
  sub_1C1208674((unint64_t *)&qword_1EA1AFF50, (void (*)(uint64_t))type metadata accessor for DebugFormatInspectorPaneViewController);
  char v118 = v96;
  id v119 = v117;
  sub_1C151BA2C();

  long long v120 = *(void **)&v96[v112];
  long long v121 = v118;
  id v122 = v120;
  sub_1C151BA2C();

  long long v123 = *(void **)&v96[v114];
  long long v124 = v121;
  id v125 = v123;
  sub_1C151BA2C();

  long long v126 = *(void **)&v124[qword_1EA1ACF90];
  long long v127 = v124;
  id v128 = v126;
  sub_1C151BA2C();

  long long v129 = *(void **)&v127[qword_1EA1ACF98];
  sub_1C1208674(qword_1EA1ACFF0, (void (*)(uint64_t))type metadata accessor for DebugFormatInspectorMaskViewController);
  char v130 = v127;
  id v131 = v129;
  sub_1C151BA2C();

  swift_release();
  return v130;
}

void sub_1C1205340()
{
}

void sub_1C120539C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C12053D0()
{
  long long v1 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 176);
  v8[10] = *(_OWORD *)(v0 + qword_1EA1ACF70 + 160);
  v8[11] = v1;
  char v9 = *(unsigned char *)(v0 + qword_1EA1ACF70 + 192);
  long long v2 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 112);
  v8[6] = *(_OWORD *)(v0 + qword_1EA1ACF70 + 96);
  v8[7] = v2;
  long long v3 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 144);
  v8[8] = *(_OWORD *)(v0 + qword_1EA1ACF70 + 128);
  v8[9] = v3;
  long long v4 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 48);
  void v8[2] = *(_OWORD *)(v0 + qword_1EA1ACF70 + 32);
  v8[3] = v4;
  long long v5 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 80);
  void v8[4] = *(_OWORD *)(v0 + qword_1EA1ACF70 + 64);
  v8[5] = v5;
  long long v6 = *(_OWORD *)(v0 + qword_1EA1ACF70 + 16);
  v8[0] = *(_OWORD *)(v0 + qword_1EA1ACF70);
  v8[1] = v6;
  sub_1C09F4704((uint64_t)v8);

  return swift_release();
}

uint64_t sub_1C1205498(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + qword_1EA1ACF70 + 176);
  v9[10] = *(_OWORD *)(a1 + qword_1EA1ACF70 + 160);
  v9[11] = v2;
  char v10 = *(unsigned char *)(a1 + qword_1EA1ACF70 + 192);
  long long v3 = *(_OWORD *)(a1 + qword_1EA1ACF70 + 112);
  v9[6] = *(_OWORD *)(a1 + qword_1EA1ACF70 + 96);
  v9[7] = v3;
  long long v4 = *(_OWORD *)(a1 + qword_1EA1ACF70 + 144);
  v9[8] = *(_OWORD *)(a1 + qword_1EA1ACF70 + 128);
  v9[9] = v4;
  long long v5 = *(_OWORD *)(a1 + qword_1EA1ACF70 + 48);
  id v9[2] = *(_OWORD *)(a1 + qword_1EA1ACF70 + 32);
  v9[3] = v5;
  long long v6 = *(_OWORD *)(a1 + qword_1EA1ACF70 + 80);
  void v9[4] = *(_OWORD *)(a1 + qword_1EA1ACF70 + 64);
  v9[5] = v6;
  long long v7 = *(_OWORD *)(a1 + qword_1EA1ACF70 + 16);
  v9[0] = *(_OWORD *)(a1 + qword_1EA1ACF70);
  v9[1] = v7;
  sub_1C09F4704((uint64_t)v9);

  return swift_release();
}

uint64_t sub_1C120556C()
{
  return type metadata accessor for DebugFormatInspectorViewController();
}

id sub_1C1205574(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C15154CC();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = MEMORY[0x1F4188790](v4).n128_u64[0];
  long long v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a1, sel_searchBar, v6);
  id v10 = objc_msgSend(v9, sel_text);

  if (v10)
  {
    uint64_t v11 = sub_1C151E62C();
    unint64_t v13 = v12;

    uint64_t v23 = v11;
    unint64_t v24 = v13;
    sub_1C15153DC();
    sub_1BFF27ECC();
    id v10 = (id)sub_1C151FE9C();
    unint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v15 = 0xE000000000000000;
  }
  uint64_t v23 = (uint64_t)v10;
  unint64_t v24 = v15;
  swift_retain();
  sub_1C15170AC();
  swift_release();
  uint64_t v16 = *(void *)(v2 + qword_1EA1ACF80);
  swift_retain();
  sub_1C151709C();
  swift_release();
  unint64_t v17 = v24;
  long long v18 = (uint64_t *)(v16 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm);
  *long long v18 = v23;
  v18[1] = v17;
  swift_bridgeObjectRelease();
  sub_1C0CF0E84();
  uint64_t v19 = *(void *)(v2 + qword_1EA1ACF88);
  swift_retain();
  sub_1C151709C();
  swift_release();
  unint64_t v20 = v24;
  long long v21 = (uint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm);
  *long long v21 = v23;
  v21[1] = v20;
  swift_bridgeObjectRelease();
  return sub_1C0CF0E84();
}

void sub_1C12057A8(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C1205574(v4);
}

uint64_t sub_1C1205810(char a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 1:
      uint64_t v3 = (uint64_t)sub_1C120783C();
      break;
    case 2:
      uint64_t v3 = sub_1C1207AC0();
      break;
    case 3:
      sub_1BFF9E848(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      id v5 = sub_1C0D4F6DC();
      if (v5)
      {
        double v6 = &off_1F1C29D30;
        uint64_t v7 = &type metadata for FormatInspection;
      }
      else
      {
        uint64_t v7 = 0;
        double v6 = 0;
        *(void *)(inited + 40) = 0;
        *(void *)(inited + 48) = 0;
      }
      *(void *)(inited + 32) = v5;
      *(void *)(inited + 56) = v7;
      *(void *)(inited + 64) = v6;
      uint64_t v3 = (uint64_t)sub_1C131B79C(inited);
      swift_setDeallocating();
      sub_1C01004A4(0);
      swift_arrayDestroy();
      break;
    default:
      uint64_t v3 = (uint64_t)sub_1C1205A48(a3);
      break;
  }
  return v3;
}

void *sub_1C1205A48(uint64_t a1)
{
  uint64_t v150 = a1;
  sub_1C0181BEC(0);
  uint64_t v151 = v2;
  long long v168 = *(void **)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v148 = (uint64_t)&v139 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = *(unsigned __int8 *)(v1 + 48);
  long long v11 = *(_OWORD *)(v1 + 97);
  long long v12 = *(_OWORD *)(v1 + 129);
  long long v199 = *(_OWORD *)(v1 + 113);
  v200[0] = v12;
  *(_OWORD *)((char *)v200 + 15) = *(_OWORD *)(v1 + 144);
  long long v13 = *(_OWORD *)(v1 + 65);
  long long v195 = *(_OWORD *)(v1 + 49);
  long long v196 = v13;
  long long v197 = *(_OWORD *)(v1 + 81);
  long long v198 = v11;
  uint64_t v14 = *(void *)(v1 + 160);
  *(_OWORD *)((char *)v194 + 9) = *(_OWORD *)(v1 + 177);
  v194[0] = *(_OWORD *)(v1 + 168);
  sub_1BFF9E848(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  long long v145 = xmmword_1C152C7E0;
  *(_OWORD *)(v15 + 16) = xmmword_1C152C7E0;
  long long v152 = (void *)v15;
  uint64_t v153 = v7;
  uint64_t v149 = v15 + 32;
  uint64_t v159 = v4;
  uint64_t v160 = v5;
  uint64_t v169 = v4;
  uint64_t v170 = v5;
  uint64_t v156 = v6;
  uint64_t v157 = v9;
  uint64_t v171 = v6;
  uint64_t v172 = v7;
  uint64_t v158 = v8;
  uint64_t v173 = v8;
  uint64_t v174 = v9;
  uint64_t v155 = v10;
  char v175 = v10;
  long long v179 = *(_OWORD *)(v1 + 97);
  long long v180 = *(_OWORD *)(v1 + 113);
  *(_OWORD *)long long v181 = *(_OWORD *)(v1 + 129);
  *(_OWORD *)&v181[15] = *(_OWORD *)(v1 + 144);
  long long v176 = *(_OWORD *)(v1 + 49);
  long long v177 = *(_OWORD *)(v1 + 65);
  long long v178 = *(_OWORD *)(v1 + 81);
  uint64_t v154 = v14;
  uint64_t v182 = v14;
  *(_OWORD *)((char *)v183 + 9) = *(_OWORD *)(v1 + 177);
  v183[0] = *(_OWORD *)(v1 + 168);
  uint64_t v16 = sub_1C0D497AC();
  int64_t v17 = v16[2];
  if (v17)
  {
    uint64_t v169 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v17, 0);
    uint64_t v18 = v169;
    uint64_t v19 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v166 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t v20 = *(void *)(v166 - 8);
    long long v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
    uint64_t v164 = v20 + 56;
    long long v165 = v21;
    uint64_t v167 = v19;
    uint64_t v162 = v19 - 8;
    long long v163 = (void *)(v148 + 16);
    long long v147 = v16;
    long long v22 = v16 + 8;
    long long v161 = xmmword_1C157D0F0;
    uint64_t v23 = (_OWORD *)v148;
    do
    {
      uint64_t v24 = *(v22 - 3);
      uint64_t v25 = *(v22 - 2);
      uint64_t v26 = *(v22 - 1);
      uint64_t v27 = *v22;
      uint64_t v29 = v166;
      uint64_t v28 = v167;
      uint64_t v30 = (char *)v23 + *(int *)(v167 + 24);
      *uint64_t v30 = *((unsigned char *)v22 - 32);
      *((void *)v30 + 1) = v24;
      *((void *)v30 + 2) = v25;
      *((void *)v30 + 3) = v26;
      *((void *)v30 + 4) = v27;
      swift_storeEnumTagMultiPayload();
      v165(v30, 0, 1, v29);
      *uint64_t v23 = v161;
      uint64_t v31 = v163;
      *long long v163 = 0;
      v31[1] = 0;
      long long v32 = (char *)v23 + *(int *)(v28 + 28);
      *(void *)long long v32 = 0;
      *((void *)v32 + 1) = 0;
      v32[16] = -1;
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v23, 0, 1, v28);
      uint64_t v169 = v18;
      uint64_t v33 = (uint64_t)v23;
      unint64_t v35 = *(void *)(v18 + 16);
      unint64_t v34 = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v35 >= v34 >> 1)
      {
        sub_1C05F62D0(v34 > 1, v35 + 1, 1);
        uint64_t v18 = v169;
      }
      v22 += 5;
      *(void *)(v18 + 16) = v35 + 1;
      sub_1C120860C(v33, v18+ ((*((unsigned __int8 *)v168 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v168 + 80))+ v168[9] * v35, (uint64_t (*)(void))sub_1C0181BEC);
      --v17;
      uint64_t v23 = (_OWORD *)v33;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  uint64_t v36 = v160;
  sub_1C09BCFA4(0x736575737349, 0xE600000000000000, 0, 0, v18, v184);
  swift_bridgeObjectRelease();
  long long v37 = v152;
  v152[7] = &type metadata for FormatInspectionGroup;
  v37[8] = &off_1F1BDEC90;
  uint64_t v38 = swift_allocObject();
  v37[4] = v38;
  long long v39 = v184[1];
  *(_OWORD *)(v38 + 16) = v184[0];
  *(_OWORD *)(v38 + 32) = v39;
  *(void *)(v38 + 48) = v185;
  uint64_t v40 = v150;
  swift_retain();
  uint64_t v41 = v154;
  uint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v43 = sub_1C1206D04(v42, v40);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C09BCFA4(0x676E69646E6942, 0xE700000000000000, 0, 0, v43, v186);
  swift_bridgeObjectRelease();
  v37[12] = &type metadata for FormatInspectionGroup;
  v37[13] = &off_1F1BDEC90;
  uint64_t v44 = swift_allocObject();
  v37[9] = v44;
  long long v45 = v186[1];
  *(_OWORD *)(v44 + 16) = v186[0];
  *(_OWORD *)(v44 + 32) = v45;
  *(void *)(v44 + 48) = v187;
  sub_1BFF9E848(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  uint64_t v46 = *((unsigned __int8 *)v168 + 80);
  uint64_t v47 = (v46 + 32) & ~v46;
  uint64_t v166 = v168[9];
  uint64_t v144 = 3 * v166;
  *(void *)&long long v161 = v48;
  uint64_t v150 = v46 | 7;
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1C152C7F0;
  long long v179 = v198;
  long long v180 = v199;
  *(_OWORD *)long long v181 = v200[0];
  *(_OWORD *)&v181[15] = *(_OWORD *)((char *)v200 + 15);
  long long v176 = v195;
  long long v177 = v196;
  uint64_t v148 = v49;
  uint64_t v162 = v47;
  uint64_t v50 = v49 + v47;
  uint64_t v169 = v159;
  uint64_t v170 = v36;
  uint64_t v51 = v155;
  uint64_t v171 = v156;
  uint64_t v172 = v153;
  uint64_t v173 = v158;
  uint64_t v174 = v157;
  char v175 = v155;
  long long v178 = v197;
  uint64_t v182 = v41;
  *(_OWORD *)((char *)v183 + 9) = *(_OWORD *)((char *)v194 + 9);
  v183[0] = v194[0];
  double v52 = sub_1C0D4AF60();
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v59 = 0;
  switch(v51)
  {
    case 1:
    case 4:
    case 5:
      break;
    case 2:
      if (*(unsigned char *)(v36 + 64)) {
        uint64_t v59 = 0;
      }
      else {
        uint64_t v59 = *(void *)(v36 + 56);
      }
      break;
    case 3:
      uint64_t v169 = v36;
      uint64_t v59 = sub_1BFD32BF4();
      break;
    default:
      if (*(unsigned char *)(v36 + 88)) {
        uint64_t v59 = -100;
      }
      else {
        uint64_t v59 = *(void *)(v36 + 80);
      }
      break;
  }
  long long v179 = v198;
  long long v180 = v199;
  *(_OWORD *)long long v181 = v200[0];
  *(_OWORD *)&v181[15] = *(_OWORD *)((char *)v200 + 15);
  long long v176 = v195;
  long long v177 = v196;
  uint64_t v169 = v159;
  uint64_t v170 = v36;
  uint64_t v171 = v156;
  uint64_t v172 = v153;
  uint64_t v173 = v158;
  uint64_t v174 = v157;
  char v175 = v51;
  long long v178 = v197;
  uint64_t v182 = v154;
  v183[0] = v194[0];
  *(_OWORD *)((char *)v183 + 9) = *(_OWORD *)((char *)v194 + 9);
  uint64_t v60 = sub_1C0D4FEB8();
  uint64_t v61 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v62 = v50 + *(int *)(v61 + 24);
  *(double *)uint64_t v62 = v52;
  *(void *)(v62 + 8) = v54;
  *(void *)(v62 + 16) = v56;
  *(void *)(v62 + 24) = v58;
  *(void *)(v62 + 32) = v59;
  *(void *)(v62 + 40) = v60;
  *(unsigned char *)(v62 + 48) = 0;
  uint64_t v63 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = *(void *)(v63 - 8);
  long long v65 = *(void **)(v64 + 56);
  uint64_t v164 = v64 + 56;
  long long v165 = (void (*)(char *, void, uint64_t, uint64_t))v63;
  long long v163 = v65;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v65)(v62, 0, 1, v63);
  long long v146 = xmmword_1C157D0F0;
  *(_OWORD *)uint64_t v50 = xmmword_1C157D0F0;
  *(void *)(v50 + 16) = 0;
  *(void *)(v50 + 24) = 0;
  uint64_t v66 = v50 + *(int *)(v61 + 28);
  *(void *)uint64_t v66 = 0;
  *(void *)(v66 + 8) = 0;
  *(unsigned char *)(v66 + 16) = -1;
  uint64_t v67 = *(void *)(v61 - 8);
  id v68 = *(void **)(v67 + 56);
  uint64_t v167 = v67 + 56;
  long long v168 = v68;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v68)(v50, 0, 1, v61);
  uint64_t v169 = 0;
  uint64_t v170 = 0xE000000000000000;
  if (v51 == 3)
  {
    *(void *)&v190[0] = v36;
    sub_1BFE68024((unint64_t *)v192);
    unint64_t v69 = *(void *)&v192[0];
  }
  else
  {
    unint64_t v69 = 0x8000000000000000;
    *(void *)&v192[0] = 0x8000000000000000;
  }
  uint64_t v70 = v166;
  long long v147 = (void *)v50;
  uint64_t v71 = (void *)(v50 + v166);
  *(void *)&v190[0] = v69;
  FormatVisibility.description.getter();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1BFF0056C(v69);
  sub_1C0433600(0x696C696269736956, 0xEA00000000007974, v169, v170, v71);
  ((void (*)(void *, void, uint64_t, uint64_t))v168)(v71, 0, 1, v61);
  sub_1BFF9E848(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, MEMORY[0x1E4FBBE00]);
  uint64_t v72 = swift_allocObject();
  long long v143 = xmmword_1C1529AE0;
  *(_OWORD *)(v72 + 16) = xmmword_1C1529AE0;
  uint64_t v141 = v72;
  uint64_t v142 = v72 + 32;
  uint64_t v73 = v70;
  uint64_t v74 = v162;
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v145;
  long long v179 = v198;
  long long v180 = v199;
  *(_OWORD *)long long v181 = v200[0];
  *(_OWORD *)&v181[15] = *(_OWORD *)((char *)v200 + 15);
  long long v176 = v195;
  long long v177 = v196;
  *(void *)&long long v145 = v75;
  uint64_t v76 = v75 + v74;
  uint64_t v169 = v159;
  uint64_t v170 = v160;
  uint64_t v77 = v156;
  uint64_t v78 = v153;
  uint64_t v79 = v154;
  uint64_t v171 = v156;
  uint64_t v172 = v153;
  uint64_t v173 = v158;
  uint64_t v174 = v157;
  char v175 = v155;
  long long v178 = v197;
  uint64_t v182 = v154;
  v183[0] = v194[0];
  *(_OWORD *)((char *)v183 + 9) = *(_OWORD *)((char *)v194 + 9);
  uint64_t v80 = sub_1C0D4A9A4();
  long long v81 = (uint64_t *)(v76 + *(int *)(v61 + 24));
  *long long v81 = v80;
  v81[1] = v82;
  long long v83 = (void (*)(void, void, void, void))v165;
  swift_storeEnumTagMultiPayload();
  long long v84 = (void (*)(uint64_t *, void, uint64_t, void))v163;
  ((void (*)(uint64_t *, void, uint64_t, void))v163)(v81, 0, 1, v83);
  *(_OWORD *)uint64_t v76 = xmmword_1C15D7B90;
  *(void *)(v76 + 16) = 0;
  *(void *)(v76 + 24) = 0;
  uint64_t v85 = v76 + *(int *)(v61 + 28);
  *(void *)uint64_t v85 = 0;
  *(void *)(v85 + 8) = 0;
  *(unsigned char *)(v85 + 16) = -1;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v168)(v76, 0, 1, v61);
  long long v179 = v198;
  long long v180 = v199;
  *(_OWORD *)long long v181 = v200[0];
  *(_OWORD *)&v181[15] = *(_OWORD *)((char *)v200 + 15);
  long long v176 = v195;
  long long v177 = v196;
  long long v86 = (void *)(v76 + v73);
  uint64_t v87 = v159;
  uint64_t v169 = v159;
  uint64_t v170 = v160;
  uint64_t v171 = v77;
  uint64_t v172 = v78;
  uint64_t v88 = v157;
  uint64_t v173 = v158;
  uint64_t v174 = v157;
  LOBYTE(v78) = v155;
  char v175 = v155;
  long long v178 = v197;
  uint64_t v182 = v79;
  *(_OWORD *)((char *)v183 + 9) = *(_OWORD *)((char *)v194 + 9);
  v183[0] = v194[0];
  uint64_t v89 = sub_1C0D4ADC0();
  long long v90 = (void *)((char *)v86 + *(int *)(v61 + 24));
  uint64_t *v90 = v89;
  v90[1] = v91;
  long long v92 = (void (*)(void, void, void, void))v165;
  swift_storeEnumTagMultiPayload();
  v84(v90, 0, 1, v92);
  *long long v86 = 0xD000000000000011;
  v86[1] = 0x80000001C1638530;
  v86[2] = 0;
  v86[3] = 0;
  id v93 = (char *)v86 + *(int *)(v61 + 28);
  *(void *)id v93 = 0;
  *((void *)v93 + 1) = 0;
  v93[16] = -1;
  id v94 = (void (*)(void *, void, uint64_t, uint64_t))v168;
  ((void (*)(void *, void, uint64_t, uint64_t))v168)(v86, 0, 1, v61);
  long long v179 = v198;
  long long v180 = v199;
  *(_OWORD *)long long v181 = v200[0];
  *(_OWORD *)&v181[15] = *(_OWORD *)((char *)v200 + 15);
  long long v176 = v195;
  long long v177 = v196;
  uint64_t v169 = v87;
  uint64_t v170 = v160;
  uint64_t v95 = v153;
  uint64_t v171 = v156;
  uint64_t v172 = v153;
  uint64_t v96 = v158;
  uint64_t v173 = v158;
  uint64_t v174 = v88;
  char v175 = v78;
  long long v178 = v197;
  uint64_t v97 = v154;
  uint64_t v182 = v154;
  *(_OWORD *)((char *)v183 + 9) = *(_OWORD *)((char *)v194 + 9);
  v183[0] = v194[0];
  uint64_t v98 = sub_1C0D4AE90();
  if (v99) {
    uint64_t v100 = v98;
  }
  else {
    uint64_t v100 = 0;
  }
  uint64_t v140 = 2 * v166;
  long long v101 = (void *)(v76 + 2 * v166);
  sub_1C0434624(0xD000000000000010, 0x80000001C1638550, v100, v99, v101);
  v94(v101, 0, 1, v61);
  uint64_t v102 = v76;
  long long v179 = v198;
  long long v180 = v199;
  *(_OWORD *)long long v181 = v200[0];
  *(_OWORD *)&v181[15] = *(_OWORD *)((char *)v200 + 15);
  long long v176 = v195;
  long long v177 = v196;
  long long v103 = (void *)(v76 + v144);
  uint64_t v169 = v159;
  uint64_t v170 = v160;
  int v104 = v155;
  uint64_t v171 = v156;
  uint64_t v172 = v95;
  uint64_t v173 = v96;
  uint64_t v174 = v157;
  char v175 = v155;
  long long v178 = v197;
  uint64_t v182 = v97;
  *(_OWORD *)((char *)v183 + 9) = *(_OWORD *)((char *)v194 + 9);
  v183[0] = v194[0];
  uint64_t v105 = sub_1C0D496E4();
  id v106 = (void *)((char *)v103 + *(int *)(v61 + 24));
  *id v106 = v105;
  v106[1] = v107;
  id v108 = (void (*)(void, void, void, void))v165;
  swift_storeEnumTagMultiPayload();
  ((void (*)(uint64_t *, void, uint64_t, void))v163)(v106, 0, 1, v108);
  *long long v103 = 0xD000000000000011;
  v103[1] = 0x80000001C1638570;
  v103[2] = 0;
  v103[3] = 0;
  long long v109 = (char *)v103 + *(int *)(v61 + 28);
  *(void *)long long v109 = 0;
  *((void *)v109 + 1) = 0;
  v109[16] = -1;
  ((void (*)(void *, void, uint64_t, uint64_t))v168)(v103, 0, 1, v61);
  uint64_t v110 = 0;
  uint64_t v111 = 0;
  if (v104 == 1)
  {
    uint64_t v111 = *(void *)(v160 + 56);
    if (v111)
    {
      uint64_t v110 = *(void *)(v160 + 48);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v110 = 0;
    }
  }
  uint64_t v112 = (void *)((char *)v147 + v140);
  id v113 = (void *)(v102 + 4 * v166);
  sub_1C0434624(0xD000000000000019, 0x80000001C1638590, v110, v111, v113);
  uint64_t v114 = (void (*)(void *, void, uint64_t, uint64_t))v168;
  ((void (*)(void *, void, uint64_t, uint64_t))v168)(v113, 0, 1, v61);
  sub_1C09BCFA4(0x696669746E656449, 0xEB00000000737265, 0, 0, v145, v188);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v115 = v141;
  *(void *)(v141 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v115 + 64) = &off_1F1BDEC90;
  uint64_t v116 = swift_allocObject();
  *(void *)(v115 + 32) = v116;
  long long v117 = v188[1];
  *(_OWORD *)(v116 + 16) = v188[0];
  *(_OWORD *)(v116 + 32) = v117;
  *(void *)(v116 + 48) = v189;
  uint64_t v118 = sub_1C0233FC8(v115);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v119 = sub_1C131B79C(v118);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x696669746E656449, 0xEB00000000737265, (uint64_t)v119, 0, 0, v112);
  v114(v112, 0, 1, v61);
  sub_1C09BCFA4(0x656D617246, 0xE500000000000000, 0, 0, v148, v190);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  long long v120 = v152;
  v152[17] = &type metadata for FormatInspectionGroup;
  v120[18] = &off_1F1BDEC90;
  uint64_t v121 = swift_allocObject();
  v120[14] = v121;
  long long v122 = v190[1];
  *(_OWORD *)(v121 + 16) = v190[0];
  *(_OWORD *)(v121 + 32) = v122;
  *(void *)(v121 + 48) = v191;
  uint64_t v123 = v162;
  uint64_t v124 = swift_allocObject();
  *(_OWORD *)(v124 + 16) = v143;
  long long v179 = v198;
  long long v180 = v199;
  *(_OWORD *)long long v181 = v200[0];
  *(_OWORD *)&v181[15] = *(_OWORD *)((char *)v200 + 15);
  long long v176 = v195;
  long long v177 = v196;
  uint64_t v125 = v124 + v123;
  uint64_t v169 = v159;
  uint64_t v170 = v160;
  uint64_t v126 = v156;
  uint64_t v127 = v153;
  uint64_t v171 = v156;
  uint64_t v172 = v153;
  uint64_t v173 = v158;
  uint64_t v174 = v157;
  char v175 = v155;
  long long v178 = v197;
  uint64_t v182 = v154;
  v183[0] = v194[0];
  *(_OWORD *)((char *)v183 + 9) = *(_OWORD *)((char *)v194 + 9);
  sub_1C0D4B020(v192);
  id v128 = (void *)(v124 + v123 + *(int *)(v61 + 24));
  *id v128 = *(void *)&v192[0];
  long long v129 = (void (*)(void, void, void, void))v165;
  swift_storeEnumTagMultiPayload();
  ((void (*)(void *, void, uint64_t, void))v163)(v128, 0, 1, v129);
  *(_OWORD *)uint64_t v125 = v146;
  *(void *)(v125 + 16) = 0;
  *(void *)(v125 + 24) = 0;
  uint64_t v130 = v125 + *(int *)(v61 + 28);
  *(void *)uint64_t v130 = 0;
  *(void *)(v130 + 8) = 0;
  *(unsigned char *)(v130 + 16) = -1;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v168)(v125, 0, 1, v61);
  sub_1C09BCFA4(0x676E697A69736552, 0xE800000000000000, 0, 0, v124, v192);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v120[22] = &type metadata for FormatInspectionGroup;
  v120[23] = &off_1F1BDEC90;
  uint64_t v131 = swift_allocObject();
  long long v132 = v192[1];
  *(_OWORD *)(v131 + 16) = v192[0];
  *(_OWORD *)(v131 + 32) = v132;
  long long v133 = v197;
  long long v179 = v198;
  long long v180 = v199;
  *(_OWORD *)long long v181 = v200[0];
  *(_OWORD *)&v181[15] = *(_OWORD *)((char *)v200 + 15);
  long long v176 = v195;
  long long v177 = v196;
  v120[19] = v131;
  *(void *)(v131 + 48) = v193;
  uint64_t v169 = v159;
  uint64_t v170 = v160;
  uint64_t v171 = v126;
  uint64_t v172 = v127;
  uint64_t v173 = v158;
  uint64_t v174 = v157;
  char v175 = v155;
  long long v178 = v133;
  uint64_t v182 = v154;
  *(_OWORD *)((char *)v183 + 9) = *(_OWORD *)((char *)v194 + 9);
  v183[0] = v194[0];
  long long v134 = sub_1C0D4B764();
  if (v134)
  {
    objc_super v135 = &off_1F1C29D30;
    objc_super v136 = &type metadata for FormatInspection;
  }
  else
  {
    objc_super v136 = 0;
    objc_super v135 = 0;
    v120[25] = 0;
    v120[26] = 0;
  }
  v120[24] = v134;
  v120[27] = v136;
  v120[28] = v135;
  objc_super v137 = sub_1C131B79C((uint64_t)v120);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v137;
}

uint64_t sub_1C1206D04(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0181BEC(0);
  uint64_t v55 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    v49[1] = v2;
    uint64_t v74 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v11, 0);
    uint64_t v53 = a2 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__bindings;
    swift_beginAccess();
    uint64_t v51 = v10 + 16;
    long long v13 = (unsigned __int8 *)(a1 + 72);
    long long v50 = xmmword_1C157D0F0;
    uint64_t v54 = v7;
    double v52 = (long long *)v10;
    do
    {
      int64_t v59 = v11;
      swift_retain();
      sub_1C151894C();
      swift_release();
      int v14 = *v13;
      uint64_t v15 = sub_1C062CB28(0, 0, (uint64_t)v7, (void *)v13 - 5);
      uint64_t v56 = v16;
      sub_1BFC66384((uint64_t)(v13 - 40), (uint64_t)&v62);
      __swift_project_boxed_opaque_existential_1((void *)v13 - 5, *((void *)v13 - 2));
      uint64_t v17 = sub_1C151811C();
      uint64_t v19 = v18;
      uint64_t v20 = *((void *)v7 + 12);
      uint64_t v21 = *(void *)(v20 + 16);
      int v58 = v14;
      uint64_t v57 = v15;
      if (v21)
      {
        uint64_t v22 = v17;
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_1BFEF2D8C(v22, v19);
        if (v24)
        {
          uint64_t v25 = (uint64_t *)(*(void *)(v20 + 56) + 48 * v23);
          uint64_t v27 = *v25;
          uint64_t v26 = v25[1];
          uint64_t v29 = v25[2];
          uint64_t v28 = v25[3];
          uint64_t v31 = v25[4];
          uint64_t v30 = v25[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v27 = 0;
          uint64_t v26 = 0;
          uint64_t v29 = 0;
          uint64_t v28 = 0;
          uint64_t v31 = 0;
          uint64_t v30 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v27 = 0;
        uint64_t v26 = 0;
        uint64_t v29 = 0;
        uint64_t v28 = 0;
        uint64_t v31 = 0;
        uint64_t v30 = 0;
      }
      swift_bridgeObjectRelease();
      sub_1BFC773DC(&v62, (uint64_t)v64);
      uint64_t v65 = v57;
      uint64_t v66 = v56;
      uint64_t v67 = v27;
      uint64_t v68 = v26;
      uint64_t v69 = v29;
      uint64_t v70 = v28;
      uint64_t v71 = v31;
      uint64_t v72 = v30;
      char v73 = v58;
      uint64_t v7 = v54;
      sub_1BFF1B9E8((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      sub_1C12085A4((uint64_t)v64, (uint64_t)&v62, (uint64_t (*)(void))sub_1C0951C60);
      if (v63)
      {
        sub_1C0445330((uint64_t)&v62, (uint64_t)v60);
        sub_1BFF1B9E8((uint64_t)v64, (uint64_t (*)(void))sub_1C0951C60);
        uint64_t v32 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v33 = v52;
        unint64_t v34 = (long long *)((char *)v52 + *(int *)(v32 + 24));
        long long v35 = v61[0];
        v34[4] = v60[4];
        void v34[5] = v35;
        *(_OWORD *)((char *)v34 + 89) = *(_OWORD *)((char *)v61 + 9);
        long long v36 = v60[1];
        *unint64_t v34 = v60[0];
        v34[1] = v36;
        long long v37 = v60[3];
        v34[2] = v60[2];
        v34[3] = v37;
        uint64_t v38 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v34, 0, 1, v38);
        *uint64_t v33 = v50;
        long long v39 = v51;
        *uint64_t v51 = 0;
        v39[1] = 0;
        uint64_t v40 = (char *)v33 + *(int *)(v32 + 28);
        *(void *)uint64_t v40 = 0;
        *((void *)v40 + 1) = 0;
        v40[16] = -1;
        sub_1C044538C((uint64_t)&v62);
      }
      else
      {
        sub_1BFF1B9E8((uint64_t)v64, (uint64_t (*)(void))sub_1C0951C60);
        uint64_t v32 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v33 = v52;
        uint64_t v41 = (char *)v52 + *(int *)(v32 + 24);
        uint64_t v42 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
        *uint64_t v33 = v50;
        uint64_t v43 = v51;
        *uint64_t v51 = 0;
        v43[1] = 0;
        uint64_t v44 = (char *)v33 + *(int *)(v32 + 28);
        *(void *)uint64_t v44 = 0;
        *((void *)v44 + 1) = 0;
        v44[16] = -1;
      }
      int64_t v45 = v59;
      type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(long long *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v33, 0, 1, v32);
      uint64_t v12 = v74;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F62D0(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v74;
      }
      unint64_t v47 = *(void *)(v12 + 16);
      unint64_t v46 = *(void *)(v12 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_1C05F62D0(v46 > 1, v47 + 1, 1);
        uint64_t v12 = v74;
      }
      *(void *)(v12 + 16) = v47 + 1;
      sub_1C120860C((uint64_t)v33, v12+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(void *)(v55 + 72) * v47, (uint64_t (*)(void))sub_1C0181BEC);
      v13 += 48;
      int64_t v11 = v45 - 1;
    }
    while (v11);
  }
  return v12;
}

unint64_t sub_1C1207288(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v62 = a2;
  uint64_t v61 = type metadata accessor for FormatScopedOption();
  uint64_t v5 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00AB000();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for FormatOption();
  MEMORY[0x1F4188790](v11);
  uint64_t v60 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v51 - v15);
  MEMORY[0x1F4188790](v17);
  uint64_t v54 = (uint64_t)&v51 - v21;
  uint64_t v22 = *(void *)(a1 + 16);
  if (!v22) {
    return MEMORY[0x1E4FBC860];
  }
  double v52 = (uint64_t *)v20;
  uint64_t v53 = v19;
  uint64_t v23 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  char v24 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  int v58 = (unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v25 = *(void *)(v5 + 72);
  uint64_t v56 = v18;
  uint64_t v57 = v25;
  uint64_t v51 = a1;
  swift_bridgeObjectRetain();
  unint64_t v26 = MEMORY[0x1E4FBC860];
  int64_t v59 = v7;
  do
  {
    sub_1C12085A4(v23, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v55 = v26;
      uint64_t v27 = v24;
      uint64_t v28 = v16;
      uint64_t v29 = v52;
      sub_1C120860C((uint64_t)v7, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      unint64_t v32 = v29[2];
      swift_bridgeObjectRetain();
      sub_1C0E455CC(v62, v32, &v63);
      if (v3)
      {
        swift_bridgeObjectRelease();

        uint64_t v3 = 0;
        uint64_t v33 = 1;
        uint64_t v34 = (uint64_t)v29;
        uint64_t v35 = v56;
      }
      else
      {
        unint64_t v39 = v63;
        void *v10 = v30;
        v10[1] = v31;
        void v10[2] = v39;
        v10[3] = 1;
        uint64_t v35 = v56;
        uint64_t v40 = (char *)v10 + *(int *)(v56 + 28);
        uint64_t v41 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
        uint64_t v33 = 0;
        uint64_t v34 = (uint64_t)v29;
      }
      uint64_t v16 = v28;
      char v24 = v27;
      unint64_t v26 = v55;
    }
    else
    {
      sub_1C120860C((uint64_t)v7, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v36 = *v16;
      uint64_t v37 = v16[1];
      unint64_t v38 = v16[2];
      swift_bridgeObjectRetain();
      sub_1C0E455CC(v62, v38, &v63);
      if (v3)
      {
        swift_bridgeObjectRelease();

        uint64_t v3 = 0;
        uint64_t v33 = 1;
        uint64_t v34 = (uint64_t)v16;
        uint64_t v35 = v56;
      }
      else
      {
        unint64_t v42 = v63;
        void *v10 = v36;
        v10[1] = v37;
        void v10[2] = v42;
        v10[3] = 1;
        uint64_t v35 = v56;
        uint64_t v43 = (char *)v10 + *(int *)(v56 + 28);
        uint64_t v44 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);
        uint64_t v33 = 0;
        uint64_t v34 = (uint64_t)v16;
      }
    }
    sub_1BFF1B9E8(v34, (uint64_t (*)(void))type metadata accessor for FormatOption);
    (*v24)(v10, v33, 1, v35);
    if ((*v58)(v10, 1, v35) == 1)
    {
      sub_1BFF1B9E8((uint64_t)v10, (uint64_t (*)(void))sub_1C00AB000);
    }
    else
    {
      uint64_t v45 = v54;
      sub_1C120860C((uint64_t)v10, v54, (uint64_t (*)(void))type metadata accessor for FormatOption);
      sub_1C120860C(v45, v60, (uint64_t (*)(void))type metadata accessor for FormatOption);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = sub_1BFFE1F7C(0, *(void *)(v26 + 16) + 1, 1, v26);
      }
      unint64_t v47 = *(void *)(v26 + 16);
      unint64_t v46 = *(void *)(v26 + 24);
      uint64_t v48 = v53;
      if (v47 >= v46 >> 1)
      {
        uint64_t v49 = sub_1BFFE1F7C(v46 > 1, v47 + 1, 1, v26);
        uint64_t v48 = v53;
        unint64_t v26 = v49;
      }
      *(void *)(v26 + 16) = v47 + 1;
      sub_1C120860C(v60, v26+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v47, (uint64_t (*)(void))type metadata accessor for FormatOption);
    }
    v23 += v57;
    --v22;
    uint64_t v7 = v59;
  }
  while (v22);
  swift_bridgeObjectRelease();
  return v26;
}

void *sub_1C120783C()
{
  long long v28 = v0[9];
  long long v29 = v0[10];
  long long v30 = v0[11];
  long long v1 = v0[7];
  long long v25 = v0[6];
  long long v26 = v1;
  long long v27 = v0[8];
  long long v2 = v0[3];
  long long v21 = v0[2];
  long long v22 = v2;
  long long v3 = v0[5];
  long long v23 = v0[4];
  long long v24 = v3;
  long long v4 = v0[1];
  long long v19 = *v0;
  long long v20 = v4;
  char v31 = *((unsigned char *)v0 + 192);
  uint64_t v5 = sub_1C0D4B334();
  sub_1C151706C();
  sub_1C151704C();
  if (qword_1EB896B90 != -1) {
    swift_once();
  }
  sub_1C151703C();
  swift_release();
  v12[0] = 0;
  v12[1] = v19;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v17 = 0;
  uint64_t v18 = v5;
  sub_1C0D4B334();
  swift_retain();
  swift_release();
  uint64_t v6 = sub_1C1243BAC();
  swift_release();
  sub_1BFF1E730(0, 0);
  swift_retain();
  unint64_t v7 = sub_1C1207288(v6, (uint64_t)v12);
  swift_bridgeObjectRelease_n();
  sub_1BFF1EAA0(0, 0);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v8 = sub_1C0B388C8(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1C0234BB4(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1C131B79C(v9);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_1BFF1EAA0(0, 0);
  swift_release();
  return v10;
}

uint64_t sub_1C1207AC0()
{
  sub_1C028A4E0(0);
  MEMORY[0x1F4188790](v1 - 8);
  long long v3 = (uint64_t *)((char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v79 - v5);
  sub_1C0181BEC(0);
  uint64_t v93 = v7;
  uint64_t v91 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v89 = (uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v84 = (uint64_t)&v79 - v10;
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)&v79 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v83 = (uint64_t)&v79 - v15;
  long long v16 = v0[11];
  long long v121 = v0[10];
  long long v122 = v16;
  char v123 = *((unsigned char *)v0 + 192);
  long long v17 = v0[7];
  long long v117 = v0[6];
  long long v118 = v17;
  long long v18 = v0[9];
  long long v119 = v0[8];
  long long v120 = v18;
  long long v19 = v0[3];
  long long v113 = v0[2];
  long long v114 = v19;
  long long v20 = v0[5];
  long long v115 = v0[4];
  long long v116 = v20;
  long long v21 = v0[1];
  long long v111 = *v0;
  long long v112 = v21;
  sub_1BFF9E848(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  long long v105 = v120;
  long long v106 = v121;
  long long v107 = v122;
  char v108 = v123;
  long long v103 = v118;
  long long v104 = v119;
  long long v98 = v113;
  long long v99 = v114;
  long long v101 = v116;
  long long v102 = v117;
  long long v100 = v115;
  long long v96 = v111;
  long long v97 = v112;
  *(void *)&long long v96 = sub_1C0D4B284();
  swift_bridgeObjectRetain();
  sub_1BFD8BB48((uint64_t *)&v96);
  uint64_t v80 = 0;
  swift_bridgeObjectRelease();
  uint64_t v23 = v96;
  uint64_t v24 = *(void *)(v96 + 16);
  long long v90 = v3;
  uint64_t v81 = inited;
  if (v24)
  {
    uint64_t v82 = v6 + 2;
    uint64_t v87 = (char *)(v91 + 48);
    uint64_t v88 = (void (**)(void *, void, uint64_t, uint64_t))(v91 + 56);
    swift_retain();
    long long v86 = (void *)sub_1C0180128();
    unint64_t v85 = sub_1C018017C();
    uint64_t v79 = v23;
    long long v25 = (uint64_t *)(v23 + 40);
    uint64_t v26 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v27 = *(v25 - 1);
      uint64_t v28 = *v25;
      *(void *)&long long v96 = v27;
      *((void *)&v96 + 1) = v28;
      *(void *)&v109[0] = 36;
      *((void *)&v109[0] + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      char v29 = sub_1C151E50C();
      unint64_t v92 = v26;
      if (v29)
      {
        uint64_t v30 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v6, 1, 1, v30);
      }
      else
      {
        uint64_t v31 = type metadata accessor for FormatInspectionItem(0);
        unint64_t v32 = (void *)((char *)v6 + *(int *)(v31 + 24));
        *unint64_t v32 = 0;
        v32[1] = 0xE000000000000000;
        uint64_t v33 = v13;
        uint64_t v34 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v35 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
        uint64_t v36 = v32;
        long long v3 = v90;
        uint64_t v37 = v34;
        long long v13 = v33;
        v35(v36, 0, 1, v37);
        *uint64_t v6 = v27;
        v6[1] = v28;
        unint64_t v38 = v82;
        *uint64_t v82 = 0;
        v38[1] = 0;
        unint64_t v39 = (char *)v6 + *(int *)(v31 + 28);
        *(void *)unint64_t v39 = 0;
        *((void *)v39 + 1) = 0;
        v39[16] = -1;
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v6, 0, 1, v31);
        swift_bridgeObjectRetain();
      }
      uint64_t v40 = v93;
      (*v88)(v6, 0, 1, v93);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))v87)(v6, 1, v40) == 1)
      {
        sub_1BFF1B9E8((uint64_t)v6, (uint64_t (*)(void))sub_1C028A4E0);
        uint64_t v26 = v92;
      }
      else
      {
        uint64_t v41 = v83;
        sub_1C120860C((uint64_t)v6, v83, (uint64_t (*)(void))sub_1C0181BEC);
        sub_1C120860C(v41, (uint64_t)v13, (uint64_t (*)(void))sub_1C0181BEC);
        uint64_t v26 = v92;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_1C0EDFFC4(0, *(void *)(v26 + 16) + 1, 1, v26);
        }
        unint64_t v43 = *(void *)(v26 + 16);
        unint64_t v42 = *(void *)(v26 + 24);
        if (v43 >= v42 >> 1) {
          uint64_t v26 = sub_1C0EDFFC4(v42 > 1, v43 + 1, 1, v26);
        }
        *(void *)(v26 + 16) = v43 + 1;
        sub_1C120860C((uint64_t)v13, v26+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v43, (uint64_t (*)(void))sub_1C0181BEC);
      }
      v25 += 2;
      --v24;
    }
    while (v24);
    swift_release();
    uint64_t inited = v81;
  }
  else
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
  }
  swift_release();
  sub_1C09BCFA4(0x726F7463656C6553, 0xE900000000000073, 0, 0, v26, v109);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v44 = swift_allocObject();
  *(void *)(inited + 32) = v44;
  long long v45 = v109[1];
  *(_OWORD *)(v44 + 16) = v109[0];
  *(_OWORD *)(v44 + 32) = v45;
  long long v46 = v119;
  long long v105 = v120;
  long long v106 = v121;
  long long v107 = v122;
  long long v48 = v117;
  long long v47 = v118;
  *(void *)(v44 + 48) = v110;
  char v108 = v123;
  long long v103 = v47;
  long long v104 = v46;
  long long v98 = v113;
  long long v99 = v114;
  long long v101 = v116;
  long long v102 = v48;
  long long v100 = v115;
  long long v96 = v111;
  long long v97 = v112;
  *(void *)&long long v96 = sub_1C0D4B284();
  swift_bridgeObjectRetain();
  uint64_t v49 = v80;
  sub_1BFD8BB48((uint64_t *)&v96);
  if (v49)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v50 = v96;
    uint64_t v51 = *(char **)(v96 + 16);
    if (v51)
    {
      unint64_t v85 = inited + 32;
      long long v86 = v3 + 2;
      double v52 = (void (**)(void *, void, uint64_t, uint64_t))(v91 + 56);
      uint64_t v53 = (unsigned int (**)(void *, uint64_t, uint64_t))(v91 + 48);
      swift_retain();
      unint64_t v92 = sub_1C0180128();
      uint64_t v88 = (void (**)(void *, void, uint64_t, uint64_t))sub_1C018017C();
      uint64_t v83 = v50;
      uint64_t v54 = (uint64_t *)(v50 + 40);
      uint64_t v55 = MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v57 = *(v54 - 1);
        uint64_t v56 = *v54;
        *(void *)&long long v96 = v57;
        *((void *)&v96 + 1) = v56;
        uint64_t v94 = 36;
        unint64_t v95 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        if (sub_1C151E50C())
        {
          uint64_t v58 = type metadata accessor for FormatInspectionItem(0);
          uint64_t v59 = *(int *)(v58 + 24);
          uint64_t v87 = v51;
          uint64_t v60 = v55;
          uint64_t v61 = v53;
          uint64_t v62 = v52;
          unint64_t v63 = (void *)((char *)v3 + v59);
          *unint64_t v63 = 0;
          v63[1] = 0xE000000000000000;
          uint64_t v64 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v65 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56);
          uint64_t v66 = v63;
          double v52 = v62;
          uint64_t v53 = v61;
          uint64_t v55 = v60;
          uint64_t v51 = v87;
          uint64_t v67 = v64;
          long long v3 = v90;
          v65(v66, 0, 1, v67);
          *long long v3 = v57;
          v3[1] = v56;
          uint64_t v68 = v86;
          *long long v86 = 0;
          v68[1] = 0;
          uint64_t v69 = (char *)v3 + *(int *)(v58 + 28);
          *(void *)uint64_t v69 = 0;
          *((void *)v69 + 1) = 0;
          v69[16] = -1;
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v3, 0, 1, v58);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v70 = type metadata accessor for FormatInspectionItem(0);
          (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v3, 1, 1, v70);
        }
        uint64_t v71 = v93;
        (*v52)(v3, 0, 1, v93);
        swift_bridgeObjectRelease();
        if ((*v53)(v3, 1, v71) == 1)
        {
          sub_1BFF1B9E8((uint64_t)v3, (uint64_t (*)(void))sub_1C028A4E0);
        }
        else
        {
          uint64_t v72 = v84;
          sub_1C120860C((uint64_t)v3, v84, (uint64_t (*)(void))sub_1C0181BEC);
          sub_1C120860C(v72, v89, (uint64_t (*)(void))sub_1C0181BEC);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v55 = sub_1C0EDFFC4(0, *(void *)(v55 + 16) + 1, 1, v55);
          }
          unint64_t v74 = *(void *)(v55 + 16);
          unint64_t v73 = *(void *)(v55 + 24);
          if (v74 >= v73 >> 1) {
            uint64_t v55 = sub_1C0EDFFC4(v73 > 1, v74 + 1, 1, v55);
          }
          *(void *)(v55 + 16) = v74 + 1;
          sub_1C120860C(v89, v55+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v74, (uint64_t (*)(void))sub_1C0181BEC);
        }
        v54 += 2;
        --v51;
      }
      while (v51);
      swift_release();
      uint64_t inited = v81;
    }
    else
    {
      uint64_t v55 = MEMORY[0x1E4FBC860];
    }
    swift_release();
    sub_1C09BCFA4(0xD000000000000010, 0x80000001C16385B0, 0, 0, v55, &v96);
    swift_bridgeObjectRelease();
    *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
    *(void *)(inited + 104) = &off_1F1BDEC90;
    uint64_t v75 = swift_allocObject();
    *(void *)(inited + 72) = v75;
    *(void *)(v75 + 48) = v98;
    long long v76 = v97;
    *(_OWORD *)(v75 + 16) = v96;
    *(_OWORD *)(v75 + 32) = v76;
    uint64_t v77 = sub_1C131B79C(inited);
    swift_setDeallocating();
    sub_1C01004A4(0);
    swift_arrayDestroy();
    return (uint64_t)v77;
  }
  return result;
}

uint64_t sub_1C120855C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12085A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C120860C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1208674(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double FeedPuzzleProgress.progress.getter()
{
  double result = 0.0;
  if (v0[8] == 1) {
    double result = *(double *)v0;
  }
  if (!v0[8]) {
    return *(double *)v0;
  }
  return result;
}

BOOL FeedPuzzleProgress.isCompleted.getter()
{
  return *(unsigned char *)(v0 + 8) == 1;
}

uint64_t FeedPuzzleProgress.rawState.getter@<X0>(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 8) && *(unsigned char *)(v1 + 8) != 1) {
    *a1 = 0;
  }
  else {
    *a1 = *(void *)v1;
  }
  uint64_t v3 = *MEMORY[0x1E4FAC008];
  uint64_t v4 = sub_1C151A7DC();
  uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  return v5(a1, v3, v4);
}

BOOL static FeedPuzzleProgress.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a2;
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) != 1) {
      return v3 == 2 && *(void *)&v2 == 0;
    }
    if (v3 != 1) {
      return 0;
    }
  }
  else if (*(unsigned char *)(a2 + 8))
  {
    return 0;
  }
  return *(double *)a1 == v2;
}

BOOL sub_1C12087DC(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a2;
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a2 + 8)) {
      return 0;
    }
    return *(double *)a1 == v2;
  }
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    if (v3 != 1) {
      return 0;
    }
    return *(double *)a1 == v2;
  }
  return v3 == 2 && *(void *)&v2 == 0;
}

uint64_t sub_1C1208840@<X0>(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 8) && *(unsigned char *)(v1 + 8) != 1) {
    *a1 = 0;
  }
  else {
    *a1 = *(void *)v1;
  }
  uint64_t v3 = *MEMORY[0x1E4FAC008];
  uint64_t v4 = sub_1C151A7DC();
  uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  return v5(a1, v3, v4);
}

uint64_t LikingCommandContext.init(headline:feedItemIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t static UIActivityType.showMore.getter()
{
  return sub_1C151E5EC();
}

uint64_t static UIActivityType.showLess.getter()
{
  return sub_1C151E5EC();
}

uint64_t static Commands.Liking.likingComplete.getter()
{
  return sub_1BFC387A8(&qword_1EB885348);
}

uint64_t LikingCommandContext.headline.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t LikingCommandContext.feedItemIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static LikingCompleteCommandState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LikingCompleteCommandState.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t LikingCompleteCommandState.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t static SwipeAction.like(context:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v36 = sub_1C151A13C();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v35 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151A14C();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v33 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC50CC0(0, &qword_1EB85AD18, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAC370]);
  MEMORY[0x1F4188790](v6 - 8);
  sub_1C120AC74(0, &qword_1EB85C910, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v7 - 8);
  sub_1C120AC74(0, &qword_1EB85C908, MEMORY[0x1E4FAC358]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  if (qword_1EB87B0C8 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1EB885350;
  uint64_t v42 = v9;
  uint64_t v43 = v10;
  uint64_t v44 = v11;
  sub_1BFF6B690();
  swift_bridgeObjectRetain();
  v30[1] = v12;
  swift_retain();
  swift_unknownObjectRetain();
  v13._countAndFlagsBits = 0x433830434335;
  v13._object = (void *)0xE600000000000000;
  UIColor.init(hex:)(v13);
  sub_1C151AE8C();
  if (qword_1EB85EEF8 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_1EB85C2B8;
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_whiteColor);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v14, v16);

  if (qword_1EB85EF10 != -1) {
    swift_once();
  }
  long long v17 = (void *)qword_1EB85C2C0;
  id v18 = objc_msgSend(v15, sel_whiteColor);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v17, v18);

  sub_1C151AEAC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  long long v20 = self;
  id v21 = objc_msgSend(v20, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v22 = sub_1C1515B8C();
  uint64_t v24 = v23;

  uint64_t v40 = v22;
  uint64_t v41 = v24;
  id v25 = objc_msgSend(v20, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v26 = sub_1C1515B8C();
  uint64_t v28 = v27;

  uint64_t v38 = v26;
  uint64_t v39 = v28;
  sub_1C151AEEC();
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E4FABC60], v32);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v35, *MEMORY[0x1E4FABC58], v36);
  return sub_1C151A16C();
}

uint64_t static SwipeAction.dislike(context:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v36 = sub_1C151A13C();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v35 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151A14C();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v33 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC50CC0(0, &qword_1EB85AD18, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAC370]);
  MEMORY[0x1F4188790](v6 - 8);
  sub_1C120AC74(0, &qword_1EB85C910, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v7 - 8);
  sub_1C120AC74(0, &qword_1EB85C908, MEMORY[0x1E4FAC358]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  if (qword_1EB87B140 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1EB885358;
  uint64_t v42 = v9;
  uint64_t v43 = v10;
  uint64_t v44 = v11;
  Swift::String v13 = self;
  swift_bridgeObjectRetain();
  v30[1] = v12;
  swift_retain();
  swift_unknownObjectRetain();
  id v14 = objc_msgSend(v13, sel_systemRedColor);
  sub_1C151AE8C();
  if (qword_1EB85EEE8 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_1EB85DE38;
  id v16 = objc_msgSend(v13, sel_whiteColor);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v15, v16);

  if (qword_1EB85EF00 != -1) {
    swift_once();
  }
  long long v17 = (void *)qword_1EB85DE60;
  id v18 = objc_msgSend(v13, sel_whiteColor);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v17, v18);

  sub_1C151AEAC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  long long v20 = self;
  id v21 = objc_msgSend(v20, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v22 = sub_1C1515B8C();
  uint64_t v24 = v23;

  uint64_t v40 = v22;
  uint64_t v41 = v24;
  id v25 = objc_msgSend(v20, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v26 = sub_1C1515B8C();
  uint64_t v28 = v27;

  uint64_t v38 = v26;
  uint64_t v39 = v28;
  sub_1C151AEEC();
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E4FABC60], v32);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v35, *MEMORY[0x1E4FABC58], v36);
  return sub_1C151A16C();
}

uint64_t static KeyCommandItem.like(context:)()
{
  sub_1BFC50CC0(0, &qword_1EB85AD18, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAC370]);
  MEMORY[0x1F4188790](v0 - 8);
  if (qword_1EB87B0C8 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  double v2 = self;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C151AEEC();
  return sub_1C151A5AC();
}

uint64_t static KeyCommandItem.dislike(context:)()
{
  sub_1BFC50CC0(0, &qword_1EB85AD18, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAC370]);
  MEMORY[0x1F4188790](v0 - 8);
  if (qword_1EB87B140 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  double v2 = self;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C151AEEC();
  return sub_1C151A5AC();
}

uint64_t _s5TeaUI15SharingActivityC8NewsFeedE4like7contextAcD20LikingCommandContextV_tFZ_0(uint64_t *a1)
{
  uint64_t v27 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v27);
  MEMORY[0x1F4188790](v2);
  sub_1C120AC0C();
  MEMORY[0x1F4188790](v3 - 8);
  v22[0] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC50CC0(0, &qword_1EB85AD18, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAC370]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = *a1;
  uint64_t v24 = a1[1];
  uint64_t v7 = a1[2];
  if (qword_1EB87B0C8 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EB885350;
  uint64_t v23 = v7;
  swift_bridgeObjectRetain();
  uint64_t v26 = v8;
  swift_retain();
  uint64_t v25 = v6;
  swift_unknownObjectRetain();
  v22[1] = sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v12 = sub_1C1515B8C();
  uint64_t v14 = v13;

  uint64_t v28 = v12;
  uint64_t v29 = v14;
  id v15 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v16 = sub_1C1515B8C();
  uint64_t v18 = v17;

  uint64_t v31 = v16;
  uint64_t v32 = v18;
  sub_1C151AEEC();
  if (qword_1EB85EEF8 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EB85C2B8;
  sub_1C151B39C();
  if (qword_1EB85EF10 != -1) {
    swift_once();
  }
  id v20 = (id)qword_1EB85C2C0;
  sub_1C151B39C();
  sub_1C151AEEC();
  uint64_t v28 = v25;
  uint64_t v29 = v24;
  uint64_t v30 = v23;
  sub_1C151A9FC();
  swift_allocObject();
  return sub_1C151A9DC();
}

uint64_t _s5TeaUI15SharingActivityC8NewsFeedE7dislike7contextAcD20LikingCommandContextV_tFZ_0(uint64_t *a1)
{
  uint64_t v27 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v27);
  MEMORY[0x1F4188790](v2);
  sub_1C120AC0C();
  MEMORY[0x1F4188790](v3 - 8);
  v22[0] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC50CC0(0, &qword_1EB85AD18, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAC370]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = *a1;
  uint64_t v24 = a1[1];
  uint64_t v7 = a1[2];
  if (qword_1EB87B140 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EB885358;
  uint64_t v23 = v7;
  swift_bridgeObjectRetain();
  uint64_t v26 = v8;
  swift_retain();
  uint64_t v25 = v6;
  swift_unknownObjectRetain();
  v22[1] = sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v12 = sub_1C1515B8C();
  uint64_t v14 = v13;

  uint64_t v28 = v12;
  uint64_t v29 = v14;
  id v15 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v16 = sub_1C1515B8C();
  uint64_t v18 = v17;

  uint64_t v31 = v16;
  uint64_t v32 = v18;
  sub_1C151AEEC();
  if (qword_1EB85EEE8 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EB85DE38;
  sub_1C151B39C();
  if (qword_1EB85EF00 != -1) {
    swift_once();
  }
  id v20 = (id)qword_1EB85DE60;
  sub_1C151B39C();
  sub_1C151AEEC();
  uint64_t v28 = v25;
  uint64_t v29 = v24;
  uint64_t v30 = v23;
  sub_1C151A9FC();
  swift_allocObject();
  return sub_1C151A9DC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE4like7contextAcD013LikingCommandC0V_tFZ_0()
{
  sub_1C120AC74(0, &qword_1EB864278, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C120AC74(0, &qword_1EB85C910, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v1 - 8);
  sub_1C120AC74(0, qword_1EB8641E0, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EB87B0C8 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v4 = self;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  id v5 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v6 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C151AECC();
  if (qword_1EB85EEF8 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EB85EF10;
  id v8 = (id)qword_1EB85C2B8;
  if (v7 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EB85C2C0;
  sub_1C151AEAC();
  sub_1C151B2DC();
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A80C();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE7dislike7contextAcD013LikingCommandC0V_tFZ_0()
{
  sub_1C120AC74(0, &qword_1EB864278, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C120AC74(0, &qword_1EB85C910, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v1 - 8);
  sub_1C120AC74(0, qword_1EB8641E0, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EB87B140 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v4 = self;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  id v5 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v6 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C151AECC();
  if (qword_1EB85EEE8 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EB85EF00;
  id v8 = (id)qword_1EB85DE38;
  if (v7 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EB85DE60;
  sub_1C151AEAC();
  sub_1C151B2DC();
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A80C();
}

unint64_t sub_1C120AAA4()
{
  unint64_t result = qword_1EA1AD008;
  if (!qword_1EA1AD008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD008);
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.Liking()
{
  return &type metadata for Commands.Liking;
}

unsigned char *storeEnumTagSinglePayload for LikingCompleteCommandState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C120ABD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LikingCompleteCommandState()
{
  return &type metadata for LikingCompleteCommandState;
}

void sub_1C120AC0C()
{
  if (!qword_1EA1AD010)
  {
    sub_1C151B3AC();
    unint64_t v0 = sub_1C151AEFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AD010);
    }
  }
}

void sub_1C120AC74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAD910]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FormatFrameExpression.targetIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatFrameExpression.logic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 24) = v5;
  return sub_1C033D91C(v2, v3, v4, v5);
}

BOOL sub_1C120AD1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1BFF303E0(*(void *)a3, *(void *)(a3 + 8));
  sub_1BFF81FF0();
  sub_1C1517C8C();
  sub_1C15175FC();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFF5984C((uint64_t)v18, (uint64_t)v19);
  if ((v20 & 1) == 0)
  {
    CGFloat v8 = *(double *)v19;
    CGFloat v7 = *(double *)&v19[1];
    CGFloat v10 = *(double *)&v19[2];
    CGFloat v9 = *(double *)&v19[3];
    uint64_t v12 = *(void *)(a3 + 16);
    uint64_t v11 = *(void *)(a3 + 24);
    uint64_t v13 = *(void *)(a3 + 32);
    unsigned int v14 = *(unsigned __int8 *)(a3 + 40);
    if (v14 >> 6)
    {
      if (v14 >> 6 != 1)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        BOOL v16 = sub_1C0BCD6B0(v8, v7, v10, v9, a2, a1);
        goto LABEL_9;
      }
      swift_bridgeObjectRetain();
      v21.origin.x = v8;
      v21.origin.y = v7;
      v21.size.width = v10;
      v21.size.height = v9;
      double Height = CGRectGetHeight(v21);
    }
    else
    {
      swift_bridgeObjectRetain();
      v22.origin.x = v8;
      v22.origin.y = v7;
      v22.size.width = v10;
      v22.size.height = v9;
      double Height = CGRectGetWidth(v22);
    }
    BOOL v16 = sub_1C0FB853C(Height);
LABEL_9:
    BOOL v6 = v16;
    sub_1C033D994(v12, v11, v13, v14);
    return v6;
  }
  return 0;
}

uint64_t sub_1C120AECC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFrameExpression.init(from:)(a1, a2);
}

uint64_t sub_1C120AEE4(void *a1)
{
  return FormatFrameExpression.encode(to:)(a1);
}

uint64_t _s8NewsFeed21FormatFrameExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  long long v5 = *(_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8
    || (long long v13 = *(_OWORD *)(a2 + 16),
        long long v14 = *(_OWORD *)(a1 + 16),
        char v9 = sub_1C1520A9C(),
        long long v5 = v13,
        long long v2 = v14,
        char v10 = v9,
        char v11 = 0,
        (v10 & 1) != 0))
  {
    long long v18 = v2;
    uint64_t v19 = v3;
    char v20 = v4;
    long long v15 = v5;
    uint64_t v16 = v6;
    char v17 = v7;
    char v11 = _s8NewsFeed26FormatFrameExpressionLogicO2eeoiySbAC_ACtFZ_0((uint64_t)&v18, (uint64_t)&v15);
  }
  return v11 & 1;
}

unint64_t sub_1C120AFA8(uint64_t a1)
{
  unint64_t result = sub_1C120AFD0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C120AFD0()
{
  unint64_t result = qword_1EA1AD018;
  if (!qword_1EA1AD018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD018);
  }
  return result;
}

unint64_t sub_1C120B024(void *a1)
{
  a1[1] = sub_1C0884070();
  a1[2] = sub_1C08FC040();
  unint64_t result = sub_1C120B05C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C120B05C()
{
  unint64_t result = qword_1EA1AD020;
  if (!qword_1EA1AD020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD020);
  }
  return result;
}

uint64_t destroy for FormatFrameExpression(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 40);
  return sub_1C033D994(v2, v3, v4, v5);
}

uint64_t initializeWithCopy for FormatFrameExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_1C033D91C(v4, v5, v6, v7);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  return a1;
}

uint64_t assignWithCopy for FormatFrameExpression(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  sub_1C033D91C(v4, v5, v6, v2);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_1C033D994(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatFrameExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v6;
  sub_1C033D994(v7, v8, v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for FormatFrameExpression()
{
  return &type metadata for FormatFrameExpression;
}

ValueMetadata *type metadata accessor for A18_V11()
{
  return &type metadata for A18_V11;
}

uint64_t sub_1C120B274(void *a1)
{
  uint64_t v3 = v1;
  sub_1C120EB44(0, &qword_1EA1AD0C8, (uint64_t (*)(void))sub_1C120EAF0, (uint64_t)&type metadata for A18_V11.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C120EAF0();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C120E4A0(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C120B4BC(uint64_t a1)
{
  unint64_t v2 = sub_1C120EAF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C120B4F8(uint64_t a1)
{
  unint64_t v2 = sub_1C120EAF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C120B534@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C120E840(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C120B57C(void *a1)
{
  return sub_1C120B274(a1);
}

uint64_t sub_1C120B594()
{
  sub_1C120E564();
  return sub_1C151798C();
}

uint64_t sub_1C120B610@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C120EB44(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C120B6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a2;
  long long v46 = a3;
  uint64_t v49 = sub_1C151635C();
  uint64_t v6 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  char v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v58 = a1;
  sub_1BFF1AFA4(a1, v50, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v54 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v48 = sub_1C151633C();
  uint64_t v47 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v49);
  uint64_t v67 = &type metadata for A18_V11;
  unint64_t v20 = sub_1C0186290();
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v59 = sub_1C1520FAC();
  uint64_t v60 = v22;
  uint64_t v63 = 95;
  unint64_t v64 = 0xE100000000000000;
  uint64_t v61 = 45;
  unint64_t v62 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v47;
  *uint64_t v26 = v48;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v65, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  uint64_t v29 = (uint64_t)v53;
  sub_1BFF2389C(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v30, 0, 1, v57);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  sub_1BFFFC630(v17, v18);
  uint64_t v67 = &type metadata for A18_V11;
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  uint64_t v31 = v29;
  sub_1BFF1AFA4(v55, v29, (uint64_t (*)(void))v54);
  sub_1C001930C(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v33 = (void *)(v32 + 16);
  swift_beginAccess();
  uint64_t v34 = *(void **)(v32 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v32 + 16) = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v34 = sub_1BFFB83AC(0, v34[2] + 1, 1, v34);
    *uint64_t v33 = v34;
  }
  unint64_t v37 = v34[2];
  unint64_t v36 = v34[3];
  if (v37 >= v36 >> 1)
  {
    uint64_t v34 = sub_1BFFB83AC((void *)(v36 > 1), v37 + 1, 1, v34);
    *uint64_t v33 = v34;
  }
  v34[2] = v37 + 1;
  uint64_t v38 = &v34[2 * v37];
  v38[4] = sub_1C064667C;
  v38[5] = 0;
  swift_endAccess();
  uint64_t v39 = v69;
  uint64_t v40 = sub_1C001E608((uint64_t)&unk_1F1B837B0, 0, 0, v32, 0, 0, 0, 0);
  if (v39)
  {
    swift_release();
    swift_release();
    sub_1BFF1F524(v31, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  }
  else
  {
    uint64_t v42 = v40;
    swift_release();
    uint64_t v43 = type metadata accessor for A18_V11.Bound();
    uint64_t v44 = v46;
    v46[3] = v43;
    v44[4] = sub_1C120E4A0(&qword_1EA1AD038, (void (*)(uint64_t))type metadata accessor for A18_V11.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v44);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v65, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v31, (uint64_t)boxed_opaque_existential_0 + *(int *)(v43 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v43 + 28)) = v42;
  }
  return result;
}

uint64_t sub_1C120BD40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  *(void *)&long long v29 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  long long v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A18_V11.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(*(void *)(v7 + *(int *)(v8 + 40)) + 16);
  double v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BFC66384(v9 + 16, (uint64_t)&v36);
  sub_1BFC66384(v9 + 56, (uint64_t)v35);
  double v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(&v36, inited + 16);
  sub_1BFC773DC(v35, inited + 56);
  *(double *)(inited + 96) = v11;
  v34[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v34, v40);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  uint64_t v13 = *(void *)(v2 + *(int *)(v6 + 28));
  v32[2] = v2;
  v32[3] = v40;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0182EAC((void (*)(uint64_t))sub_1C120E4E8, (uint64_t)v32, v13, (uint64_t)&v33);
  swift_bridgeObjectRelease();
  *(void *)&long long v36 = v14;
  sub_1C001930C(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v16 = v15;
  sub_1C0F0C468(&qword_1EA197690);
  v28[1] = v16;
  uint64_t v17 = sub_1C151F0BC();
  uint64_t v18 = *MEMORY[0x1E4FAB6D8];
  uint64_t v19 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v5, v18, v19);
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v29);
  uint64_t v31 = v17;
  sub_1C120E61C(0, &qword_1EA1AD058, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1C1517BFC();
  long long v29 = v36;
  uint64_t v21 = v37;
  uint64_t v22 = v38;
  *(void *)&long long v36 = v14;
  *(void *)&v35[0] = v39;
  MEMORY[0x1F4188790](v20);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1C0F0C468((unint64_t *)&qword_1EB879E10);
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v36 = v23;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v24 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v25 = v30;
  *uint64_t v30 = 0;
  *(_OWORD *)(v25 + 8) = v29;
  *((void *)v25 + 3) = v21;
  *((void *)v25 + 4) = v22;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *((void *)v25 + 5) = v24;
  *((void *)v25 + 6) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t sub_1C120C234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C120C30C(uint64_t a1, uint64_t a2)
{
  sub_1C120EB44(0, &qword_1EA1AD070, (uint64_t (*)(void))sub_1C120E510, (uint64_t)&type metadata for A18_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 18;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  double v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C120E61C(0, &qword_1EA1AD078, MEMORY[0x1E4FAB6F0]);
  sub_1C120E5D8(&qword_1EA1AD080, &qword_1EA1AD078, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C120C4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a1;
  sub_1C120EB44(0, &qword_1EA1AD070, (uint64_t (*)(void))sub_1C120E510, (uint64_t)&type metadata for A18_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v23 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v17 - v5);
  uint64_t v26 = *(void *)(a2 + 16);
  if (v26)
  {
    unsigned int v21 = *MEMORY[0x1E4FAB4E8];
    unsigned int v20 = *MEMORY[0x1E4FAB940];
    uint64_t v18 = (void (**)(uint64_t *, uint64_t))(v4 + 8);
    uint64_t v19 = (void (**)(uint64_t *, void, uint64_t))(v4 + 104);
    HIDWORD(v17) = *MEMORY[0x1E4FABA28];
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v22 = a2;
    uint64_t v8 = v23;
    do
    {
      if (*(void *)(*(void *)(a2 + 8 * v7 + 32) + 16) == 3)
      {
        uint64_t v27 = v25;
        uint64_t v9 = sub_1C151729C();
        uint64_t v10 = swift_allocBox();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, v21, v9);
        *uint64_t v6 = v10;
        uint64_t v12 = (uint64_t (*)(uint64_t *, void, uint64_t))*v19;
        (*v19)(v6, v20, v8);
        uint64_t v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
        sub_1C120E61C(0, &qword_1EA1AD088, MEMORY[0x1E4FAB4D0]);
        uint64_t v24 = v14;
        sub_1C120E5D8(&qword_1EA1AD090, &qword_1EA1AD088, v13);
        swift_bridgeObjectRetain();
        sub_1C151738C();
        uint64_t v15 = *v18;
        (*v18)(v6, v8);
        uint64_t v27 = v25;
        uint64_t v16 = v12(v6, HIDWORD(v17), v8);
        MEMORY[0x1F4188790](v16);
        sub_1C151731C();
        a2 = v22;
        v15(v6, v8);
        swift_bridgeObjectRelease();
      }
      ++v7;
    }
    while (v26 != v7);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C120C83C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  sub_1C120EB44(0, &qword_1EA1AD070, (uint64_t (*)(void))sub_1C120E510, (uint64_t)&type metadata for A18_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v18 - v7);
  uint64_t v25 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  unsigned int v21 = *MEMORY[0x1E4FABA10];
  uint64_t v10 = *(void (**)(uint64_t *))(v6 + 104);
  v10(v8);
  uint64_t v18 = v10;
  uint64_t v24 = a2;
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C120E61C(0, &qword_1EA1AD088, MEMORY[0x1E4FAB4D0]);
  sub_1C120E5D8(&qword_1EA1AD090, &qword_1EA1AD088, v11);
  sub_1C151734C();
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v12(v8, v5);
  uint64_t v13 = v20;
  uint64_t v25 = v20;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  *uint64_t v8 = v14;
  ((void (*)(uint64_t *, void, uint64_t))v10)(v8, v21, v5);
  uint64_t v15 = v19;
  uint64_t v23 = v19;
  sub_1C151734C();
  v12(v8, v5);
  uint64_t v25 = v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 6;
  *uint64_t v8 = v16;
  ((void (*)(uint64_t *, void, uint64_t))v18)(v8, v21, v5);
  uint64_t v22 = v15;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v12)(v8, v5);
}

uint64_t sub_1C120CB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C120EB44(0, &qword_1EA1AD070, (uint64_t (*)(void))sub_1C120E510, (uint64_t)&type metadata for A18_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16))
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    unsigned int v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F524((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C120E61C(0, &qword_1EA1AD088, MEMORY[0x1E4FAB4D0]);
    sub_1C120E5D8(&qword_1EA1AD090, &qword_1EA1AD088, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C120CF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C120EB44(0, &qword_1EA1AD070, (uint64_t (*)(void))sub_1C120E510, (uint64_t)&type metadata for A18_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2
        + *(void *)(v14 + 72)
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    unsigned int v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F524((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C120E61C(0, &qword_1EA1AD088, MEMORY[0x1E4FAB4D0]);
    sub_1C120E5D8(&qword_1EA1AD090, &qword_1EA1AD088, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1C120D310(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C120EB44(0, &qword_1EA1AD070, (uint64_t (*)(void))sub_1C120E510, (uint64_t)&type metadata for A18_V11.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
        + 2 * *(void *)(v14 + 72);
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    unsigned int v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F524((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C120E61C(0, &qword_1EA1AD088, MEMORY[0x1E4FAB4D0]);
    sub_1C120E5D8(&qword_1EA1AD090, &qword_1EA1AD088, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1C120D6EC@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A18_V11.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C120D7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C120B6CC(a1, a2, a3);
}

uint64_t sub_1C120D7F4()
{
  return sub_1C12BC2D4();
}

unint64_t sub_1C120D804(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C120D834();
  unint64_t result = sub_1C120D888();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C120D834()
{
  unint64_t result = qword_1EA1AD028;
  if (!qword_1EA1AD028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD028);
  }
  return result;
}

unint64_t sub_1C120D888()
{
  unint64_t result = qword_1EA1AD030;
  if (!qword_1EA1AD030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD030);
  }
  return result;
}

uint64_t type metadata accessor for A18_V11.Bound()
{
  uint64_t result = qword_1EA1AD040;
  if (!qword_1EA1AD040) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C120D928(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  long long v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F524((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  double v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F524(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C120DDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F524((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F524(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C001930C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C120E218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C120E22C);
}

uint64_t sub_1C120E22C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C120E2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C120E2F0);
}

void *sub_1C120E2F0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C120E398()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C120E448(uint64_t a1)
{
  uint64_t result = sub_1C120E4A0(&qword_1EA1AD050, (void (*)(uint64_t))type metadata accessor for A18_V11.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C120E4A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C120E4E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C120C234(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1C120E508(uint64_t a1)
{
  return sub_1C120C30C(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C120E510()
{
  unint64_t result = qword_1EA1AD060;
  if (!qword_1EA1AD060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD060);
  }
  return result;
}

unint64_t sub_1C120E564()
{
  unint64_t result = qword_1EA1AD068;
  if (!qword_1EA1AD068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD068);
  }
  return result;
}

uint64_t sub_1C120E5B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C120D6EC(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C120E5C0()
{
  return swift_deallocObject();
}

void sub_1C120E5D0(uint64_t a1)
{
  sub_1C120C4F8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C120E5D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C120E61C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C120E61C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A18_V11.Layout;
    v8[1] = &type metadata for A18_V11.Layout.Attributes;
    void v8[2] = sub_1C120E510();
    v8[3] = sub_1C120E564();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C120E6A0(uint64_t a1)
{
  return sub_1C120C83C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C120E6A8(uint64_t a1)
{
  return sub_1C120CB7C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C120E6B0(uint64_t a1)
{
  return sub_1C120CF34(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C120E6B8(uint64_t a1)
{
  return sub_1C120D310(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V11.Layout.Attributes()
{
  return &type metadata for A18_V11.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V11.Layout()
{
  return &type metadata for A18_V11.Layout;
}

unint64_t sub_1C120E6E4()
{
  unint64_t result = qword_1EA1AD098;
  if (!qword_1EA1AD098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD098);
  }
  return result;
}

unint64_t sub_1C120E73C()
{
  unint64_t result = qword_1EA1AD0A0;
  if (!qword_1EA1AD0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD0A0);
  }
  return result;
}

unint64_t sub_1C120E794()
{
  unint64_t result = qword_1EA1AD0A8;
  if (!qword_1EA1AD0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD0A8);
  }
  return result;
}

unint64_t sub_1C120E7EC()
{
  unint64_t result = qword_1EA1AD0B0;
  if (!qword_1EA1AD0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD0B0);
  }
  return result;
}

uint64_t sub_1C120E840@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C120EB44(0, &qword_1EA1AD0B8, (uint64_t (*)(void))sub_1C120EAF0, (uint64_t)&type metadata for A18_V11.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C120EAF0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C120E4A0(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  void *v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  v10[3] = v14;
  void v10[4] = v15;
  return result;
}

unint64_t sub_1C120EAF0()
{
  unint64_t result = qword_1EA1AD0C0;
  if (!qword_1EA1AD0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD0C0);
  }
  return result;
}

void sub_1C120EB44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for A18_V11.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C120EC78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V11.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V11.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C120ECB4()
{
  unint64_t result = qword_1EA1AD0D0;
  if (!qword_1EA1AD0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD0D0);
  }
  return result;
}

unint64_t sub_1C120ED0C()
{
  unint64_t result = qword_1EA1AD0D8;
  if (!qword_1EA1AD0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD0D8);
  }
  return result;
}

unint64_t sub_1C120ED64()
{
  unint64_t result = qword_1EA1AD0E0;
  if (!qword_1EA1AD0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD0E0);
  }
  return result;
}

id static FCContentManifest.+ infix(_:_:)(uint64_t a1, uint64_t a2)
{
  id v2 = objc_msgSend(self, sel_manifestByMergingManifest_withManifest_, a1, a2);
  return v2;
}

void static FCContentManifest.+= infix(_:_:)(void *a1, uint64_t a2)
{
  int v3 = (void *)*a1;
  id v4 = objc_msgSend(self, sel_manifestByMergingManifest_withManifest_, *a1, a2);

  *a1 = v4;
}

id sub_1C120EE98()
{
  uint64_t v1 = v0;
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (id *)((char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECBC20(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      goto LABEL_9;
    case 2u:
    case 4u:
    case 5u:
      swift_unknownObjectRelease();
      goto LABEL_9;
    case 3u:
      sub_1BFE07F94((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      sub_1BFECBC20((uint64_t)&v7[*(int *)(v5 + 36)], (uint64_t)v4, (uint64_t (*)(void))sub_1BFEC8548);
      sub_1BFE07F38(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v12) == 1)
      {
        sub_1BFE0AD74((uint64_t)v4, (uint64_t (*)(void))sub_1BFEC8548);
        id v11 = 0;
      }
      else
      {
        sub_1C151948C();
        id v11 = (id)v16[1];
        (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
      }
      sub_1BFE0AD74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      return v11;
    case 6u:
    case 7u:
      sub_1BFE0AD74((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      goto LABEL_9;
    case 8u:
      swift_bridgeObjectRelease();
LABEL_9:
      id v11 = 0;
      break;
    default:
      id v11 = *v10;
      break;
  }
  return v11;
}

uint64_t FormatContentSlotItemObject.Resolved.kinds.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (unint64_t *)&v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFECA458(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v27[-v7];
  uint64_t v9 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v9);
  id v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (id *)&v27[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFECBC20(v1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      uint64_t v18 = &unk_1F1B66CE0;
      goto LABEL_9;
    case 2u:
      swift_unknownObjectRelease();
      uint64_t v18 = &unk_1F1B66D10;
      goto LABEL_9;
    case 3u:
      sub_1BFE07F94((uint64_t)v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      sub_1C0AB2C18((uint64_t)&v11[*(int *)(v9 + 32)], (uint64_t)v8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
      {
        sub_1BFE0B8C0((uint64_t)v8, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_15:
        uint64_t v19 = sub_1C00B8CBC((uint64_t)&unk_1F1B66F90);
        goto LABEL_25;
      }
      sub_1BFECBC20((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFE0AD74((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFE0AD74((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_15;
      }
      unint64_t v24 = *v5;
      sub_1BFE0AD74((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      switch(v24 >> 61)
      {
        case 1uLL:
          swift_release();
          uint64_t v25 = &unk_1F1B66E10;
          break;
        case 2uLL:
          swift_release();
          uint64_t v25 = &unk_1F1B66E50;
          break;
        case 3uLL:
          swift_release();
          uint64_t v25 = &unk_1F1B66E90;
          break;
        case 4uLL:
          swift_release();
          uint64_t v25 = &unk_1F1B66ED0;
          break;
        case 5uLL:
          swift_release();
          uint64_t v25 = &unk_1F1B66F10;
          break;
        case 6uLL:
          swift_release();
          uint64_t v25 = &unk_1F1B66F50;
          break;
        default:
          swift_release();
          uint64_t v25 = &unk_1F1B66DD0;
          break;
      }
      uint64_t v19 = sub_1C00B8CBC((uint64_t)v25);
LABEL_25:
      swift_arrayDestroy();
      uint64_t v22 = type metadata accessor for FormatWebEmbed.Resolved;
      uint64_t v23 = (uint64_t)v11;
LABEL_26:
      sub_1BFE0AD74(v23, (uint64_t (*)(void))v22);
      return v19;
    case 4u:
      swift_unknownObjectRelease();
      uint64_t v18 = &unk_1F1B66D40;
      goto LABEL_9;
    case 5u:
      swift_unknownObjectRelease();
      uint64_t v18 = &unk_1F1B66D70;
      goto LABEL_9;
    case 6u:
      uint64_t v19 = sub_1C00B8CBC((uint64_t)&unk_1F1B66DA0);
      swift_arrayDestroy();
      uint64_t v22 = type metadata accessor for FormatContentSlotItemObject.Resolved;
      uint64_t v23 = (uint64_t)v17;
      goto LABEL_26;
    case 7u:
      sub_1BFE07F94((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      sub_1BFC94D0C(0, (unint64_t *)&qword_1EB880EA8, (uint64_t)&type metadata for FormatItemKind, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      uint64_t v21 = *((void *)v14 + 3);
      *(void *)(inited + 32) = *((void *)v14 + 2);
      *(void *)(inited + 40) = v21;
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1C00B8CBC(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v22 = type metadata accessor for FormatCustomItem.Resolved;
      uint64_t v23 = (uint64_t)v14;
      goto LABEL_26;
    case 8u:
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC870];
    default:
      swift_unknownObjectRelease();
      uint64_t v18 = &unk_1F1B66CB0;
LABEL_9:
      uint64_t v19 = sub_1C00B8CBC((uint64_t)v18);
      swift_arrayDestroy();
      return v19;
  }
}

uint64_t sub_1C120F84C(unsigned __int8 *a1, char *a2)
{
  return sub_1C147DFA8(*a1, *a2);
}

uint64_t sub_1C120F858()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C120F8A0()
{
  return sub_1C04485F4();
}

uint64_t sub_1C120F8A8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C120F900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1215690(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C120F928(uint64_t a1)
{
  unint64_t v2 = sub_1BFE09B08();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C120F964(uint64_t a1)
{
  unint64_t v2 = sub_1BFE09B08();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1C120F9A0()
{
  unint64_t result = qword_1EA1A9030;
  if (!qword_1EA1A9030)
  {
    sub_1BFE07F38(255, (unint64_t *)&unk_1EB863F80, (uint64_t)&qword_1EB890220, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A9030);
  }
  return result;
}

unint64_t sub_1C120FA24()
{
  unint64_t result = qword_1EB863F20;
  if (!qword_1EB863F20)
  {
    sub_1BFE07F38(255, (unint64_t *)&unk_1EB863F30, (uint64_t)&qword_1EB8901B0, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863F20);
  }
  return result;
}

uint64_t sub_1C120FAAC()
{
  return 8;
}

void *sub_1C120FAB8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1C120FAC4()
{
  unint64_t result = qword_1EA1AD100;
  if (!qword_1EA1AD100)
  {
    sub_1BFE07F38(255, (unint64_t *)&unk_1EB863F80, (uint64_t)&qword_1EB890220, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD100);
  }
  return result;
}

uint64_t sub_1C120FB4C()
{
  return 8;
}

unint64_t sub_1C120FB58()
{
  unint64_t result = qword_1EB863F18;
  if (!qword_1EB863F18)
  {
    sub_1BFE07F38(255, (unint64_t *)&unk_1EB863F30, (uint64_t)&qword_1EB8901B0, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863F18);
  }
  return result;
}

uint64_t sub_1C120FBE0()
{
  return 8;
}

uint64_t sub_1C120FBF0()
{
  return 8;
}

uint64_t sub_1C120FC00()
{
  return 8;
}

char *_s8ResolvedOwCP(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *(void *)a1 = *a2;
    a1 = &v6[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = *a2;
        *(void *)a1 = *a2;
        uint64_t v8 = v7;
        goto LABEL_77;
      case 3u:
        uint64_t v9 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v9;
        long long v152 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
        uint64_t v10 = v152[5];
        id v11 = &a1[v10];
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = *(uint64_t *)((char *)a2 + v10 + 8);
        *(void *)id v11 = *(char **)((char *)a2 + v10);
        *((void *)v11 + 1) = v13;
        uint64_t v14 = (int *)type metadata accessor for FormatWebEmbed();
        uint64_t v15 = v14[5];
        long long v145 = &v12[v15];
        long long v147 = &v11[v15];
        uint64_t v16 = sub_1C1515FDC();
        uint64_t v17 = *(void *)(v16 - 8);
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18(v147, v145, v16);
        uint64_t v19 = v14[6];
        __dst = &v11[v19];
        uint64_t v20 = &v12[v19];
        uint64_t v143 = v16;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&v12[v19], 1, v16))
        {
          sub_1BFECA458(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(__dst, v20, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          v18(__dst, v20, v16);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
        }
        *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
        uint64_t v40 = v14[8];
        uint64_t v41 = &v11[v40];
        uint64_t v42 = &v12[v40];
        uint64_t v148 = *((void *)v42 + 1);
        *(void *)uint64_t v41 = *(void *)v42;
        *((void *)v41 + 1) = v148;
        uint64_t v43 = v14[9];
        uint64_t v44 = &v11[v43];
        long long v45 = &v12[v43];
        uint64_t v46 = *((void *)v45 + 1);
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = v46;
        *(void *)&v11[v14[10]] = *(void *)&v12[v14[10]];
        *(void *)&v11[v14[11]] = *(void *)&v12[v14[11]];
        *(void *)&v11[v14[12]] = *(void *)&v12[v14[12]];
        *(void *)&a1[v152[6]] = *(char **)((char *)a2 + v152[6]);
        *(void *)&a1[v152[7]] = *(char **)((char *)a2 + v152[7]);
        uint64_t v47 = v152[8];
        __dsta = &a1[v47];
        uint64_t v48 = (uint64_t *)((char *)a2 + v47);
        uint64_t v49 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v144 = *(void *)(v49 - 8);
        long long v146 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v144 + 48);
        uint64_t v50 = v49;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        uint64_t v51 = v50;
        if (v146(v48, 1, v50))
        {
          sub_1BFECA458(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(__dsta, v48, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v55 = *v48;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v56 = v48[1];
            *(void *)__dsta = v55;
            *((void *)__dsta + 1) = v56;
            uint64_t v57 = type metadata accessor for GenericDataVisualization();
            uint64_t v58 = *(int *)(v57 + 20);
            uint64_t v59 = &__dsta[v58];
            uint64_t v60 = (char *)v48 + v58;
            swift_bridgeObjectRetain();
            v18(v59, v60, v143);
            *(void *)&__dsta[*(int *)(v57 + 24)] = *(uint64_t *)((char *)v48 + *(int *)(v57 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            *(void *)__dsta = v55;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(__dsta, 0, 1, v51);
        }
        uint64_t v78 = v152[9];
        uint64_t v79 = &a1[v78];
        uint64_t v80 = (char *)a2 + v78;
        sub_1BFE07F38(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
        uint64_t v82 = v81;
        uint64_t v83 = *(void *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v80, 1, v81))
        {
          sub_1BFEC8548(0);
          memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v79, v80, v82);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v79, 0, 1, v82);
        }
        goto LABEL_77;
      case 6u:
        *(void *)a1 = *a2;
        uint64_t v31 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v32 = &a1[v31];
        uint64_t v33 = (char **)((char *)a2 + v31);
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_unknownObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v65 = type metadata accessor for PuzzleStatisticValue(0);
            int v66 = swift_getEnumCaseMultiPayload();
            if (v66 == 5)
            {
              uint64_t v67 = type metadata accessor for PuzzleStreak();
              uint64_t v68 = *(void *)(v67 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v68 + 48))(v33, 1, v67))
              {
LABEL_48:
                sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v32, v33, *(void *)(*(void *)(v117 - 8) + 64));
                goto LABEL_56;
              }
            }
            else
            {
              if (v66 != 4)
              {
                memcpy(v32, v33, *(void *)(*(void *)(v65 - 8) + 64));
                goto LABEL_57;
              }
              uint64_t v67 = type metadata accessor for PuzzleStreak();
              uint64_t v68 = *(void *)(v67 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v68 + 48))(v33, 1, v67)) {
                goto LABEL_48;
              }
            }
            uint64_t v125 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v125 - 8) + 16))(v32, v33, v125);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v32, 0, 1, v67);
LABEL_56:
            swift_storeEnumTagMultiPayload();
LABEL_57:
            uint64_t v126 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v127 = *(int *)(v126 + 20);
            id v128 = &v32[v127];
            long long v129 = (char *)v33 + v127;
            int v130 = swift_getEnumCaseMultiPayload();
            if (v130 == 5)
            {
              uint64_t v131 = type metadata accessor for PuzzleStreak();
              uint64_t v132 = *(void *)(v131 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v129, 1, v131))
              {
LABEL_62:
                sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v128, v129, *(void *)(*(void *)(v133 - 8) + 64));
                goto LABEL_65;
              }
            }
            else
            {
              if (v130 != 4)
              {
                memcpy(v128, v129, *(void *)(*(void *)(v65 - 8) + 64));
                goto LABEL_66;
              }
              uint64_t v131 = type metadata accessor for PuzzleStreak();
              uint64_t v132 = *(void *)(v131 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v129, 1, v131)) {
                goto LABEL_62;
              }
            }
            uint64_t v134 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v128, v129, v134);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v128, 0, 1, v131);
LABEL_65:
            swift_storeEnumTagMultiPayload();
LABEL_66:
            uint64_t v135 = *(int *)(v126 + 24);
            objc_super v136 = &v32[v135];
            uint64_t v33 = (void *)((char *)v33 + v135);
            int v137 = swift_getEnumCaseMultiPayload();
            if (v137 == 5)
            {
              uint64_t v138 = type metadata accessor for PuzzleStreak();
              uint64_t v139 = *(void *)(v138 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v139 + 48))(v33, 1, v138))
              {
LABEL_71:
                sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v136, v33, *(void *)(*(void *)(v140 - 8) + 64));
                goto LABEL_75;
              }
            }
            else
            {
              if (v137 != 4)
              {
                size_t v64 = *(void *)(*(void *)(v65 - 8) + 64);
                long long v116 = v136;
                goto LABEL_73;
              }
              uint64_t v138 = type metadata accessor for PuzzleStreak();
              uint64_t v139 = *(void *)(v138 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v139 + 48))(v33, 1, v138)) {
                goto LABEL_71;
              }
            }
            uint64_t v141 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v141 - 8) + 16))(v136, v33, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v136, 0, 1, v138);
            goto LABEL_75;
          case 2u:
            uint64_t v61 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v62 = *((void *)v61 - 1);
            if ((*(unsigned int (**)(void *, uint64_t, int *))(v62 + 48))(v33, 1, v61))
            {
              sub_1BFECA458(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              size_t v64 = *(void *)(*(void *)(v63 - 8) + 64);
              goto LABEL_46;
            }
            uint64_t v85 = sub_1C151631C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v85 - 8) + 16))(v32, v33, v85);
            long long v86 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            uint64_t v87 = v86[5];
            uint64_t v88 = &v32[v87];
            uint64_t v89 = (void *)((char *)v33 + v87);
            uint64_t v90 = v89[1];
            *(void *)uint64_t v88 = *v89;
            *((void *)v88 + 1) = v90;
            uint64_t v91 = v86[6];
            unint64_t v92 = v32;
            uint64_t v93 = &v32[v91];
            uint64_t v94 = (void *)((char *)v33 + v91);
            uint64_t v95 = v94[1];
            *(void *)uint64_t v93 = *v94;
            *((void *)v93 + 1) = v95;
            long long v96 = v94 + 2;
            unint64_t v97 = v94[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v97 >> 60 == 15)
            {
              *((_OWORD *)v93 + 1) = *(_OWORD *)v96;
            }
            else
            {
              uint64_t v118 = *v96;
              sub_1BFE95820(*v96, v97);
              *((void *)v93 + 2) = v118;
              *((void *)v93 + 3) = v97;
            }
            *(void *)((char *)v92 + v86[7]) = *(void *)((char *)v33 + v86[7]);
            *(void *)((char *)v92 + v86[8]) = *(void *)((char *)v33 + v86[8]);
            *(void *)((char *)v92 + v61[5]) = *(void *)((char *)v33 + v61[5]);
            *(void *)((char *)v92 + v61[6]) = *(void *)((char *)v33 + v61[6]);
            uint64_t v119 = v61[7];
            long long v120 = (void *)((char *)v92 + v119);
            long long v121 = (void *)((char *)v33 + v119);
            uint64_t v122 = v121[1];
            *long long v120 = *v121;
            v120[1] = v122;
            char v123 = *(void (**)(void *, void, uint64_t, int *))(v62 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v123(v92, 0, 1, v61);
            goto LABEL_76;
          case 3u:
            uint64_t v69 = v33[1];
            *(void *)uint64_t v32 = *v33;
            *((void *)v32 + 1) = v69;
            v32[16] = *((unsigned char *)v33 + 16);
            uint64_t v70 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v71 = v70[6];
            __dstb = v32;
            uint64_t v72 = &v32[v71];
            unint64_t v73 = (char *)v33 + v71;
            uint64_t v74 = type metadata accessor for PuzzleStreak();
            uint64_t v75 = *(void *)(v74 - 8);
            long long v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
            if (v76(v73, 1, v74))
            {
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v72, v73, *(void *)(*(void *)(v77 - 8) + 64));
            }
            else
            {
              uint64_t v98 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v72, v73, v98);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
            }
            uint64_t v99 = v70[7];
            long long v100 = &__dstb[v99];
            long long v101 = (char *)v33 + v99;
            if (v76((char *)v33 + v99, 1, v74))
            {
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
            }
            else
            {
              uint64_t v103 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v100, v101, v103);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v100, 0, 1, v74);
            }
            uint64_t v104 = v70[8];
            long long v105 = &__dstb[v104];
            long long v106 = (_OWORD *)((char *)v33 + v104);
            long long v107 = v106[1];
            *(_OWORD *)long long v105 = *v106;
            *((_OWORD *)v105 + 1) = v107;
            *(_OWORD *)(v105 + 25) = *(_OWORD *)((char *)v106 + 25);
            uint64_t v108 = v70[9];
            long long v109 = &__dstb[v108];
            uint64_t v110 = (_OWORD *)((char *)v33 + v108);
            *(_OWORD *)(v109 + 25) = *(_OWORD *)((char *)v110 + 25);
            long long v111 = v110[1];
            *(_OWORD *)long long v109 = *v110;
            *((_OWORD *)v109 + 1) = v111;
            uint64_t v112 = v70[10];
            long long v113 = &__dstb[v112];
            long long v114 = (_OWORD *)((char *)v33 + v112);
            long long v115 = v114[1];
            *(_OWORD *)long long v113 = *v114;
            *((_OWORD *)v113 + 1) = v115;
            *(_OWORD *)(v113 + 25) = *(_OWORD *)((char *)v114 + 25);
            goto LABEL_76;
          default:
            uint64_t v34 = type metadata accessor for PuzzleStatisticValue(0);
            int v35 = swift_getEnumCaseMultiPayload();
            if (v35 == 5)
            {
              uint64_t v36 = type metadata accessor for PuzzleStreak();
              uint64_t v37 = *(void *)(v36 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v37 + 48))(v33, 1, v36)) {
                goto LABEL_14;
              }
            }
            else
            {
              if (v35 != 4)
              {
                size_t v64 = *(void *)(*(void *)(v34 - 8) + 64);
LABEL_46:
                long long v116 = v32;
LABEL_73:
                memcpy(v116, v33, v64);
                goto LABEL_76;
              }
              uint64_t v36 = type metadata accessor for PuzzleStreak();
              uint64_t v37 = *(void *)(v36 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v37 + 48))(v33, 1, v36))
              {
LABEL_14:
                sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
                goto LABEL_75;
              }
            }
            uint64_t v124 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v124 - 8) + 16))(v32, v33, v124);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v32, 0, 1, v36);
LABEL_75:
            swift_storeEnumTagMultiPayload();
LABEL_76:
            swift_storeEnumTagMultiPayload();
LABEL_77:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      case 7u:
        uint64_t v22 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v22;
        uint64_t v23 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v23;
        uint64_t v24 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v25 = *(int *)(v24 + 24);
        uint64_t v153 = &a1[v25];
        int v26 = (char *)a2 + v25;
        uint64_t v27 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v29(v26, 1, v27))
        {
          sub_1BFECA458(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v153, v26, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          uint64_t v53 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v153, v26, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v153, 0, 1, v27);
        }
        *(void *)&a1[*(int *)(v24 + 28)] = *(char **)((char *)a2 + *(int *)(v24 + 28));
        swift_bridgeObjectRetain();
        goto LABEL_77;
      case 8u:
        uint64_t v39 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v39;
        a1[16] = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_77;
      default:
        *(void *)a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_77;
    }
  }
  return a1;
}

void *_s8ResolvedOwca(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1BFE0AD74((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v4 = (void *)*a2;
        *a1 = *a2;
        id v5 = v4;
        goto LABEL_76;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v139 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
        uint64_t v6 = v139[5];
        uint64_t v7 = (void *)((char *)a1 + v6);
        uint64_t v8 = (char *)a2 + v6;
        *uint64_t v7 = *(void *)((char *)a2 + v6);
        v7[1] = *(void *)((char *)a2 + v6 + 8);
        uint64_t v9 = (int *)type metadata accessor for FormatWebEmbed();
        uint64_t v10 = v9[5];
        uint64_t v133 = &v8[v10];
        uint64_t v135 = (char *)v7 + v10;
        uint64_t v11 = sub_1C1515FDC();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v13(v135, v133, v11);
        uint64_t v14 = v9[6];
        __dst = (char *)v7 + v14;
        uint64_t v15 = &v8[v14];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&v8[v14], 1, v11))
        {
          sub_1BFECA458(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(__dst, v15, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          v13(__dst, v15, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
        }
        *(void *)((char *)v7 + v9[7]) = *(void *)&v8[v9[7]];
        uint64_t v32 = v9[8];
        uint64_t v33 = (void *)((char *)v7 + v32);
        uint64_t v34 = &v8[v32];
        *uint64_t v33 = *(void *)v34;
        v33[1] = *((void *)v34 + 1);
        uint64_t v35 = v9[9];
        uint64_t v36 = (void *)((char *)v7 + v35);
        uint64_t v37 = &v8[v35];
        *uint64_t v36 = *(void *)v37;
        v36[1] = *((void *)v37 + 1);
        *(void *)((char *)v7 + v9[10]) = *(void *)&v8[v9[10]];
        *(void *)((char *)v7 + v9[11]) = *(void *)&v8[v9[11]];
        *(void *)((char *)v7 + v9[12]) = *(void *)&v8[v9[12]];
        *(void *)((char *)a1 + v139[6]) = *(void *)((char *)a2 + v139[6]);
        *(void *)((char *)a1 + v139[7]) = *(void *)((char *)a2 + v139[7]);
        uint64_t v38 = v139[8];
        __dsta = (void *)((char *)a1 + v38);
        uint64_t v39 = (void *)((char *)a2 + v38);
        uint64_t v40 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v132 = *(void *)(v40 - 8);
        uint64_t v134 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v132 + 48);
        uint64_t v41 = v40;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        uint64_t v42 = v41;
        if (v134(v39, 1, v41))
        {
          sub_1BFECA458(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(__dsta, v39, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          void *__dsta = *v39;
          if (EnumCaseMultiPayload == 1)
          {
            __dsta[1] = v39[1];
            uint64_t v46 = type metadata accessor for GenericDataVisualization();
            uint64_t v47 = *(int *)(v46 + 20);
            uint64_t v48 = (char *)__dsta + v47;
            uint64_t v49 = (char *)v39 + v47;
            swift_bridgeObjectRetain();
            v13(v48, v49, v11);
            *(void *)((char *)__dsta + *(int *)(v46 + 24)) = *(void *)((char *)v39 + *(int *)(v46 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(__dsta, 0, 1, v42);
        }
        uint64_t v67 = v139[9];
        uint64_t v68 = (char *)a1 + v67;
        uint64_t v69 = (char *)a2 + v67;
        sub_1BFE07F38(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
        uint64_t v71 = v70;
        uint64_t v72 = *(void *)(v70 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v69, 1, v70))
        {
          sub_1BFEC8548(0);
          memcpy(v68, v69, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v68, v69, v71);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v68, 0, 1, v71);
        }
        goto LABEL_76;
      case 6u:
        *a1 = *a2;
        uint64_t v24 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v25 = (void *)((char *)a1 + v24);
        int v26 = (void *)((char *)a2 + v24);
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_unknownObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v54 = type metadata accessor for PuzzleStatisticValue(0);
            int v55 = swift_getEnumCaseMultiPayload();
            if (v55 == 5)
            {
              uint64_t v56 = type metadata accessor for PuzzleStreak();
              uint64_t v57 = *(void *)(v56 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v57 + 48))(v26, 1, v56))
              {
LABEL_47:
                sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v25, v26, *(void *)(*(void *)(v107 - 8) + 64));
                goto LABEL_55;
              }
            }
            else
            {
              if (v55 != 4)
              {
                memcpy(v25, v26, *(void *)(*(void *)(v54 - 8) + 64));
                goto LABEL_56;
              }
              uint64_t v56 = type metadata accessor for PuzzleStreak();
              uint64_t v57 = *(void *)(v56 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v57 + 48))(v26, 1, v56)) {
                goto LABEL_47;
              }
            }
            uint64_t v114 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v114 - 8) + 16))(v25, v26, v114);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v25, 0, 1, v56);
LABEL_55:
            swift_storeEnumTagMultiPayload();
LABEL_56:
            uint64_t v115 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v116 = *(int *)(v115 + 20);
            uint64_t v117 = (char *)v25 + v116;
            uint64_t v118 = (char *)v26 + v116;
            int v119 = swift_getEnumCaseMultiPayload();
            if (v119 == 5)
            {
              uint64_t v120 = type metadata accessor for PuzzleStreak();
              uint64_t v121 = *(void *)(v120 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v118, 1, v120))
              {
LABEL_61:
                sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v117, v118, *(void *)(*(void *)(v122 - 8) + 64));
                goto LABEL_64;
              }
            }
            else
            {
              if (v119 != 4)
              {
                memcpy(v117, v118, *(void *)(*(void *)(v54 - 8) + 64));
                goto LABEL_65;
              }
              uint64_t v120 = type metadata accessor for PuzzleStreak();
              uint64_t v121 = *(void *)(v120 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v118, 1, v120)) {
                goto LABEL_61;
              }
            }
            uint64_t v123 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v117, v118, v123);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v117, 0, 1, v120);
LABEL_64:
            swift_storeEnumTagMultiPayload();
LABEL_65:
            uint64_t v124 = *(int *)(v115 + 24);
            uint64_t v125 = (char *)v25 + v124;
            int v26 = (void *)((char *)v26 + v124);
            int v126 = swift_getEnumCaseMultiPayload();
            if (v126 == 5)
            {
              uint64_t v127 = type metadata accessor for PuzzleStreak();
              uint64_t v128 = *(void *)(v127 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v128 + 48))(v26, 1, v127))
              {
LABEL_70:
                sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v125, v26, *(void *)(*(void *)(v129 - 8) + 64));
                goto LABEL_74;
              }
            }
            else
            {
              if (v126 != 4)
              {
                size_t v53 = *(void *)(*(void *)(v54 - 8) + 64);
                long long v106 = v125;
                goto LABEL_72;
              }
              uint64_t v127 = type metadata accessor for PuzzleStreak();
              uint64_t v128 = *(void *)(v127 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v128 + 48))(v26, 1, v127)) {
                goto LABEL_70;
              }
            }
            uint64_t v130 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v130 - 8) + 16))(v125, v26, v130);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
            goto LABEL_74;
          case 2u:
            uint64_t v50 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v51 = *((void *)v50 - 1);
            if ((*(unsigned int (**)(void *, uint64_t, int *))(v51 + 48))(v26, 1, v50))
            {
              sub_1BFECA458(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              size_t v53 = *(void *)(*(void *)(v52 - 8) + 64);
              goto LABEL_45;
            }
            uint64_t v74 = sub_1C151631C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 16))(v25, v26, v74);
            uint64_t v75 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            uint64_t v76 = v75[5];
            uint64_t v77 = (void *)((char *)v25 + v76);
            uint64_t v78 = (void *)((char *)v26 + v76);
            *uint64_t v77 = *v78;
            v77[1] = v78[1];
            uint64_t v79 = v75[6];
            uint64_t v80 = v25;
            uint64_t v81 = (char *)v25 + v79;
            uint64_t v82 = (void *)((char *)v26 + v79);
            *(void *)uint64_t v81 = *v82;
            *((void *)v81 + 1) = v82[1];
            uint64_t v83 = v82 + 2;
            unint64_t v84 = v82[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v84 >> 60 == 15)
            {
              *((_OWORD *)v81 + 1) = *(_OWORD *)v83;
            }
            else
            {
              uint64_t v108 = *v83;
              sub_1BFE95820(*v83, v84);
              *((void *)v81 + 2) = v108;
              *((void *)v81 + 3) = v84;
            }
            *(void *)((char *)v80 + v75[7]) = *(void *)((char *)v26 + v75[7]);
            *(void *)((char *)v80 + v75[8]) = *(void *)((char *)v26 + v75[8]);
            *(void *)((char *)v80 + v50[5]) = *(void *)((char *)v26 + v50[5]);
            *(void *)((char *)v80 + v50[6]) = *(void *)((char *)v26 + v50[6]);
            uint64_t v109 = v50[7];
            uint64_t v110 = (void *)((char *)v80 + v109);
            long long v111 = (void *)((char *)v26 + v109);
            *uint64_t v110 = *v111;
            v110[1] = v111[1];
            uint64_t v112 = *(void (**)(void *, void, uint64_t, int *))(v51 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v112(v80, 0, 1, v50);
            goto LABEL_75;
          case 3u:
            *uint64_t v25 = *v26;
            uint64_t v58 = v26[1];
            *((unsigned char *)v25 + 16) = *((unsigned char *)v26 + 16);
            v25[1] = v58;
            uint64_t v59 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v60 = v59[6];
            __dstb = (char *)v25;
            uint64_t v61 = (char *)v25 + v60;
            uint64_t v62 = (char *)v26 + v60;
            uint64_t v63 = type metadata accessor for PuzzleStreak();
            uint64_t v64 = *(void *)(v63 - 8);
            uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
            if (v65(v62, 1, v63))
            {
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
            }
            else
            {
              uint64_t v85 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v61, v62, v85);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
            }
            uint64_t v86 = v59[7];
            uint64_t v87 = &__dstb[v86];
            uint64_t v88 = (char *)v26 + v86;
            if (v65((char *)v26 + v86, 1, v63))
            {
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
            }
            else
            {
              uint64_t v90 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v87, v88, v90);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v87, 0, 1, v63);
            }
            uint64_t v91 = v59[8];
            unint64_t v92 = &__dstb[v91];
            uint64_t v93 = (long long *)((char *)v26 + v91);
            long long v94 = *v93;
            long long v95 = v93[1];
            *(_OWORD *)(v92 + 25) = *(long long *)((char *)v93 + 25);
            *(_OWORD *)unint64_t v92 = v94;
            *((_OWORD *)v92 + 1) = v95;
            uint64_t v96 = v59[9];
            unint64_t v97 = &__dstb[v96];
            uint64_t v98 = (long long *)((char *)v26 + v96);
            long long v99 = *v98;
            long long v100 = v98[1];
            *(_OWORD *)(v97 + 25) = *(long long *)((char *)v98 + 25);
            *(_OWORD *)unint64_t v97 = v99;
            *((_OWORD *)v97 + 1) = v100;
            uint64_t v101 = v59[10];
            uint64_t v102 = &__dstb[v101];
            uint64_t v103 = (long long *)((char *)v26 + v101);
            long long v104 = *v103;
            long long v105 = v103[1];
            *(_OWORD *)(v102 + 25) = *(long long *)((char *)v103 + 25);
            *(_OWORD *)uint64_t v102 = v104;
            *((_OWORD *)v102 + 1) = v105;
            goto LABEL_75;
          default:
            uint64_t v27 = type metadata accessor for PuzzleStatisticValue(0);
            int v28 = swift_getEnumCaseMultiPayload();
            if (v28 == 5)
            {
              uint64_t v29 = type metadata accessor for PuzzleStreak();
              uint64_t v30 = *(void *)(v29 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(v26, 1, v29)) {
                goto LABEL_13;
              }
            }
            else
            {
              if (v28 != 4)
              {
                size_t v53 = *(void *)(*(void *)(v27 - 8) + 64);
LABEL_45:
                long long v106 = (char *)v25;
LABEL_72:
                memcpy(v106, v26, v53);
                goto LABEL_75;
              }
              uint64_t v29 = type metadata accessor for PuzzleStreak();
              uint64_t v30 = *(void *)(v29 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(v26, 1, v29))
              {
LABEL_13:
                sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
                goto LABEL_74;
              }
            }
            uint64_t v113 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v113 - 8) + 16))(v25, v26, v113);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
LABEL_74:
            swift_storeEnumTagMultiPayload();
LABEL_75:
            swift_storeEnumTagMultiPayload();
LABEL_76:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v17 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v18 = *(int *)(v17 + 24);
        uint64_t v140 = (char *)a1 + v18;
        uint64_t v19 = (char *)a2 + v18;
        uint64_t v20 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v21 = *(void *)(v20 - 8);
        uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v22(v19, 1, v20))
        {
          sub_1BFECA458(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v140, v19, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v44 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v140, v19, v44);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v140, 0, 1, v20);
        }
        *(void *)((char *)a1 + *(int *)(v17 + 28)) = *(void *)((char *)a2 + *(int *)(v17 + 28));
        swift_bridgeObjectRetain();
        goto LABEL_76;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_76;
      default:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_76;
    }
  }
  return a1;
}

_OWORD *_s8ResolvedOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 7:
      long long v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      uint64_t v22 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v23 = *(int *)(v22 + 24);
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        sub_1BFECA458(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v43 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v24, v25, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      *(void *)((char *)a1 + *(int *)(v22 + 28)) = *(void *)((char *)a2 + *(int *)(v22 + 28));
      goto LABEL_74;
    case 6:
      *(void *)a1 = *(void *)a2;
      uint64_t v29 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v30 = (void *)((char *)a1 + v29);
      uint64_t v31 = (void *)((char *)a2 + v29);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v49 = type metadata accessor for PuzzleStatisticValue(0);
          int v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 5)
          {
            uint64_t v96 = type metadata accessor for PuzzleStreak();
            uint64_t v97 = *(void *)(v96 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v97 + 48))(v31, 1, v96))
            {
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v30, v31, *(void *)(*(void *)(v98 - 8) + 64));
            }
            else
            {
              uint64_t v102 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v102 - 8) + 32))(v30, v31, v102);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v30, 0, 1, v96);
            }
            long long v99 = a1;
          }
          else
          {
            if (v50 != 4)
            {
              long long v99 = a1;
              memcpy(v30, v31, *(void *)(*(void *)(v49 - 8) + 64));
              goto LABEL_54;
            }
            uint64_t v51 = type metadata accessor for PuzzleStreak();
            uint64_t v52 = *(void *)(v51 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v52 + 48))(v31, 1, v51))
            {
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v30, v31, *(void *)(*(void *)(v53 - 8) + 64));
            }
            else
            {
              uint64_t v100 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v100 - 8) + 32))(v30, v31, v100);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v30, 0, 1, v51);
            }
            long long v99 = a1;
          }
          swift_storeEnumTagMultiPayload();
LABEL_54:
          uint64_t v103 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v104 = *(int *)(v103 + 20);
          long long v105 = (char *)v30 + v104;
          long long v106 = (char *)v31 + v104;
          int v107 = swift_getEnumCaseMultiPayload();
          if (v107 == 5)
          {
            uint64_t v108 = type metadata accessor for PuzzleStreak();
            uint64_t v109 = *(void *)(v108 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v106, 1, v108))
            {
LABEL_59:
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v105, v106, *(void *)(*(void *)(v110 - 8) + 64));
              goto LABEL_62;
            }
          }
          else
          {
            if (v107 != 4)
            {
              memcpy(v105, v106, *(void *)(*(void *)(v49 - 8) + 64));
              goto LABEL_63;
            }
            uint64_t v108 = type metadata accessor for PuzzleStreak();
            uint64_t v109 = *(void *)(v108 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v106, 1, v108)) {
              goto LABEL_59;
            }
          }
          uint64_t v111 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v105, v106, v111);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v105, 0, 1, v108);
LABEL_62:
          swift_storeEnumTagMultiPayload();
LABEL_63:
          a1 = v99;
          uint64_t v112 = *(int *)(v103 + 24);
          uint64_t v113 = (char *)v30 + v112;
          uint64_t v31 = (void *)((char *)v31 + v112);
          int v114 = swift_getEnumCaseMultiPayload();
          if (v114 == 5)
          {
            uint64_t v115 = type metadata accessor for PuzzleStreak();
            uint64_t v116 = *(void *)(v115 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v116 + 48))(v31, 1, v115))
            {
LABEL_68:
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v113, v31, *(void *)(*(void *)(v117 - 8) + 64));
              goto LABEL_72;
            }
            goto LABEL_71;
          }
          if (v114 == 4)
          {
            uint64_t v115 = type metadata accessor for PuzzleStreak();
            uint64_t v116 = *(void *)(v115 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v116 + 48))(v31, 1, v115)) {
              goto LABEL_68;
            }
LABEL_71:
            uint64_t v118 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v118 - 8) + 32))(v113, v31, v118);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v113, 0, 1, v115);
            goto LABEL_72;
          }
          size_t v48 = *(void *)(*(void *)(v49 - 8) + 64);
          long long v95 = v113;
          goto LABEL_70;
        case 2u:
          long long v45 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v46 = *((void *)v45 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v46 + 48))(v31, 1, v45))
          {
            sub_1BFECA458(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            size_t v48 = *(void *)(*(void *)(v47 - 8) + 64);
            goto LABEL_43;
          }
          uint64_t v71 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 32))(v30, v31, v71);
          uint64_t v72 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          *(_OWORD *)((char *)v30 + v72[5]) = *(_OWORD *)((char *)v31 + v72[5]);
          uint64_t v73 = v72[6];
          uint64_t v74 = (_OWORD *)((char *)v30 + v73);
          uint64_t v75 = (_OWORD *)((char *)v31 + v73);
          long long v76 = v75[1];
          _OWORD *v74 = *v75;
          v74[1] = v76;
          *(void *)((char *)v30 + v72[7]) = *(void *)((char *)v31 + v72[7]);
          *(void *)((char *)v30 + v72[8]) = *(void *)((char *)v31 + v72[8]);
          *(void *)((char *)v30 + v45[5]) = *(void *)((char *)v31 + v45[5]);
          *(void *)((char *)v30 + v45[6]) = *(void *)((char *)v31 + v45[6]);
          *(_OWORD *)((char *)v30 + v45[7]) = *(_OWORD *)((char *)v31 + v45[7]);
          (*(void (**)(void *, void, uint64_t, int *))(v46 + 56))(v30, 0, 1, v45);
          goto LABEL_73;
        case 3u:
          uint64_t v54 = a1;
          uint64_t v55 = v31[1];
          *uint64_t v30 = *v31;
          v30[1] = v55;
          *((unsigned char *)v30 + 16) = *((unsigned char *)v31 + 16);
          uint64_t v56 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v57 = v56[6];
          uint64_t v58 = (char *)v30 + v57;
          uint64_t v59 = (char *)v31 + v57;
          uint64_t v60 = type metadata accessor for PuzzleStreak();
          uint64_t v61 = *(void *)(v60 - 8);
          uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
          if (v62(v59, 1, v60))
          {
            sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            uint64_t v77 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v58, v59, v77);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
          }
          a1 = v54;
          uint64_t v78 = v56[7];
          uint64_t v79 = (char *)v30 + v78;
          uint64_t v80 = (char *)v31 + v78;
          if (v62((char *)v31 + v78, 1, v60))
          {
            sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
          }
          else
          {
            uint64_t v82 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v79, v80, v82);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v79, 0, 1, v60);
          }
          uint64_t v83 = v56[8];
          unint64_t v84 = (_OWORD *)((char *)v30 + v83);
          uint64_t v85 = (_OWORD *)((char *)v31 + v83);
          long long v86 = v85[1];
          *unint64_t v84 = *v85;
          v84[1] = v86;
          *(_OWORD *)((char *)v84 + 25) = *(_OWORD *)((char *)v85 + 25);
          uint64_t v87 = v56[9];
          uint64_t v88 = (_OWORD *)((char *)v30 + v87);
          uint64_t v89 = (_OWORD *)((char *)v31 + v87);
          *(_OWORD *)((char *)v88 + 25) = *(_OWORD *)((char *)v89 + 25);
          long long v90 = v89[1];
          *uint64_t v88 = *v89;
          v88[1] = v90;
          uint64_t v91 = v56[10];
          unint64_t v92 = (_OWORD *)((char *)v30 + v91);
          uint64_t v93 = (_OWORD *)((char *)v31 + v91);
          long long v94 = v93[1];
          *unint64_t v92 = *v93;
          v92[1] = v94;
          *(_OWORD *)((char *)v92 + 25) = *(_OWORD *)((char *)v93 + 25);
          goto LABEL_73;
        default:
          uint64_t v32 = type metadata accessor for PuzzleStatisticValue(0);
          int v33 = swift_getEnumCaseMultiPayload();
          if (v33 == 5)
          {
            uint64_t v34 = type metadata accessor for PuzzleStreak();
            uint64_t v35 = *(void *)(v34 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v35 + 48))(v31, 1, v34)) {
              goto LABEL_12;
            }
          }
          else
          {
            if (v33 != 4)
            {
              size_t v48 = *(void *)(*(void *)(v32 - 8) + 64);
LABEL_43:
              long long v95 = (char *)v30;
LABEL_70:
              memcpy(v95, v31, v48);
LABEL_73:
              swift_storeEnumTagMultiPayload();
LABEL_74:
              swift_storeEnumTagMultiPayload();
              return a1;
            }
            uint64_t v34 = type metadata accessor for PuzzleStreak();
            uint64_t v35 = *(void *)(v34 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v35 + 48))(v31, 1, v34))
            {
LABEL_12:
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v30, v31, *(void *)(*(void *)(v36 - 8) + 64));
              goto LABEL_72;
            }
          }
          uint64_t v101 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v101 - 8) + 32))(v30, v31, v101);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v30, 0, 1, v34);
LABEL_72:
          swift_storeEnumTagMultiPayload();
          goto LABEL_73;
      }
    case 3:
      *a1 = *a2;
      uint64_t v120 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      uint64_t v121 = a1;
      uint64_t v7 = v120[5];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      uint64_t v10 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v11 = v10[5];
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = sub_1C1515FDC();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v16(v12, v13, v14);
      uint64_t v17 = v10[6];
      uint64_t v18 = &v8[v17];
      uint64_t v19 = &v9[v17];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&v9[v17], 1, v14))
      {
        sub_1BFECA458(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v16(v18, v19, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      }
      a1 = v121;
      *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
      *(_OWORD *)&v8[v10[8]] = *(_OWORD *)&v9[v10[8]];
      *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
      *(void *)&v8[v10[10]] = *(void *)&v9[v10[10]];
      *(void *)&v8[v10[11]] = *(void *)&v9[v10[11]];
      *(void *)&v8[v10[12]] = *(void *)&v9[v10[12]];
      *(void *)((char *)v121 + v120[6]) = *(void *)((char *)a2 + v120[6]);
      *(void *)((char *)v121 + v120[7]) = *(void *)((char *)a2 + v120[7]);
      uint64_t v37 = v120[8];
      uint64_t v38 = (_OWORD *)((char *)v121 + v37);
      uint64_t v39 = (_OWORD *)((char *)a2 + v37);
      uint64_t v40 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        sub_1BFECA458(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v38 = *v39;
          uint64_t v44 = type metadata accessor for GenericDataVisualization();
          v16((char *)v38 + *(int *)(v44 + 20), (char *)v39 + *(int *)(v44 + 20), v14);
          *(void *)((char *)v38 + *(int *)(v44 + 24)) = *(void *)((char *)v39 + *(int *)(v44 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v38, v39, *(void *)(v41 + 64));
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      uint64_t v64 = v120[9];
      uint64_t v65 = (char *)v121 + v64;
      uint64_t v66 = (char *)a2 + v64;
      sub_1BFE07F38(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
      uint64_t v68 = v67;
      uint64_t v69 = *(void *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v66, 1, v67))
      {
        sub_1BFEC8548(0);
        memcpy(v65, v66, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v65, v66, v68);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v65, 0, 1, v68);
      }
      goto LABEL_74;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *_s8ResolvedOwta(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = (_OWORD *)a1;
  if ((_OWORD *)a1 == a2) {
    return v3;
  }
  sub_1BFE0AD74(a1, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 7:
      long long v21 = a2[1];
      *uint64_t v3 = *a2;
      v3[1] = v21;
      uint64_t v22 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v23 = *(int *)(v22 + 24);
      uint64_t v24 = (char *)v3 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        sub_1BFECA458(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v43 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v24, v25, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      *(void *)((char *)v3 + *(int *)(v22 + 28)) = *(void *)((char *)a2 + *(int *)(v22 + 28));
      goto LABEL_73;
    case 6:
      *(void *)uint64_t v3 = *(void *)a2;
      uint64_t v29 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v30 = (void *)((char *)v3 + v29);
      uint64_t v31 = (void *)((char *)a2 + v29);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v49 = type metadata accessor for PuzzleStatisticValue(0);
          int v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 5)
          {
            uint64_t v51 = type metadata accessor for PuzzleStreak();
            uint64_t v52 = *(void *)(v51 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v52 + 48))(v31, 1, v51))
            {
LABEL_27:
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v30, v31, *(void *)(*(void *)(v53 - 8) + 64));
              goto LABEL_52;
            }
          }
          else
          {
            if (v50 != 4)
            {
              memcpy(v30, v31, *(void *)(*(void *)(v49 - 8) + 64));
              goto LABEL_53;
            }
            uint64_t v51 = type metadata accessor for PuzzleStreak();
            uint64_t v52 = *(void *)(v51 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v52 + 48))(v31, 1, v51)) {
              goto LABEL_27;
            }
          }
          uint64_t v96 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v96 - 8) + 32))(v30, v31, v96);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v30, 0, 1, v51);
LABEL_52:
          swift_storeEnumTagMultiPayload();
LABEL_53:
          uint64_t v97 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v98 = *(int *)(v97 + 20);
          long long v99 = (char *)v30 + v98;
          uint64_t v100 = (char *)v31 + v98;
          int v101 = swift_getEnumCaseMultiPayload();
          if (v101 == 5)
          {
            uint64_t v102 = type metadata accessor for PuzzleStreak();
            uint64_t v103 = *(void *)(v102 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v100, 1, v102))
            {
LABEL_58:
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v99, v100, *(void *)(*(void *)(v104 - 8) + 64));
LABEL_61:
              swift_storeEnumTagMultiPayload();
              goto LABEL_62;
            }
          }
          else
          {
            if (v101 != 4)
            {
              memcpy(v99, v100, *(void *)(*(void *)(v49 - 8) + 64));
LABEL_62:
              uint64_t v106 = *(int *)(v97 + 24);
              int v107 = (char *)v30 + v106;
              uint64_t v31 = (void *)((char *)v31 + v106);
              int v108 = swift_getEnumCaseMultiPayload();
              if (v108 == 5)
              {
                uint64_t v109 = type metadata accessor for PuzzleStreak();
                uint64_t v110 = *(void *)(v109 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v110 + 48))(v31, 1, v109))
                {
LABEL_67:
                  sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v107, v31, *(void *)(*(void *)(v111 - 8) + 64));
                  goto LABEL_71;
                }
                goto LABEL_70;
              }
              if (v108 == 4)
              {
                uint64_t v109 = type metadata accessor for PuzzleStreak();
                uint64_t v110 = *(void *)(v109 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v110 + 48))(v31, 1, v109)) {
                  goto LABEL_67;
                }
LABEL_70:
                uint64_t v112 = sub_1C151555C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v112 - 8) + 32))(v107, v31, v112);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
                goto LABEL_71;
              }
              size_t v48 = *(void *)(*(void *)(v49 - 8) + 64);
              long long v94 = v107;
LABEL_69:
              memcpy(v94, v31, v48);
LABEL_72:
              swift_storeEnumTagMultiPayload();
LABEL_73:
              swift_storeEnumTagMultiPayload();
              return v3;
            }
            uint64_t v102 = type metadata accessor for PuzzleStreak();
            uint64_t v103 = *(void *)(v102 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v100, 1, v102)) {
              goto LABEL_58;
            }
          }
          uint64_t v105 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v99, v100, v105);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v99, 0, 1, v102);
          goto LABEL_61;
        case 2u:
          long long v45 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v46 = *((void *)v45 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v46 + 48))(v31, 1, v45))
          {
            sub_1BFECA458(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            size_t v48 = *(void *)(*(void *)(v47 - 8) + 64);
            goto LABEL_44;
          }
          uint64_t v70 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 32))(v30, v31, v70);
          uint64_t v71 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          *(_OWORD *)((char *)v30 + v71[5]) = *(_OWORD *)((char *)v31 + v71[5]);
          uint64_t v72 = v71[6];
          uint64_t v73 = (_OWORD *)((char *)v30 + v72);
          uint64_t v74 = (_OWORD *)((char *)v31 + v72);
          long long v75 = v74[1];
          *uint64_t v73 = *v74;
          v73[1] = v75;
          *(void *)((char *)v30 + v71[7]) = *(void *)((char *)v31 + v71[7]);
          *(void *)((char *)v30 + v71[8]) = *(void *)((char *)v31 + v71[8]);
          *(void *)((char *)v30 + v45[5]) = *(void *)((char *)v31 + v45[5]);
          *(void *)((char *)v30 + v45[6]) = *(void *)((char *)v31 + v45[6]);
          *(_OWORD *)((char *)v30 + v45[7]) = *(_OWORD *)((char *)v31 + v45[7]);
          (*(void (**)(void *, void, uint64_t, int *))(v46 + 56))(v30, 0, 1, v45);
          goto LABEL_72;
        case 3u:
          uint64_t v54 = v31[1];
          *uint64_t v30 = *v31;
          v30[1] = v54;
          *((unsigned char *)v30 + 16) = *((unsigned char *)v31 + 16);
          uint64_t v55 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v56 = v55[6];
          uint64_t v116 = v30;
          uint64_t v57 = (char *)v30 + v56;
          uint64_t v58 = (char *)v31 + v56;
          uint64_t v59 = type metadata accessor for PuzzleStreak();
          uint64_t v60 = *(void *)(v59 - 8);
          uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
          if (v61(v58, 1, v59))
          {
            sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v57, v58, *(void *)(*(void *)(v62 - 8) + 64));
          }
          else
          {
            uint64_t v76 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v57, v58, v76);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
          }
          uint64_t v77 = v55[7];
          uint64_t v78 = (char *)v116 + v77;
          uint64_t v79 = (char *)v31 + v77;
          if (v61((char *)v31 + v77, 1, v59))
          {
            sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
          }
          else
          {
            uint64_t v81 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v78, v79, v81);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v78, 0, 1, v59);
          }
          uint64_t v82 = v55[8];
          uint64_t v83 = (_OWORD *)((char *)v116 + v82);
          unint64_t v84 = (_OWORD *)((char *)v31 + v82);
          long long v85 = v84[1];
          *uint64_t v83 = *v84;
          v83[1] = v85;
          *(_OWORD *)((char *)v83 + 25) = *(_OWORD *)((char *)v84 + 25);
          uint64_t v86 = v55[9];
          uint64_t v87 = (_OWORD *)((char *)v116 + v86);
          uint64_t v88 = (_OWORD *)((char *)v31 + v86);
          *(_OWORD *)((char *)v87 + 25) = *(_OWORD *)((char *)v88 + 25);
          long long v89 = v88[1];
          *uint64_t v87 = *v88;
          v87[1] = v89;
          uint64_t v90 = v55[10];
          uint64_t v91 = (_OWORD *)((char *)v116 + v90);
          unint64_t v92 = (_OWORD *)((char *)v31 + v90);
          long long v93 = v92[1];
          *uint64_t v91 = *v92;
          v91[1] = v93;
          *(_OWORD *)((char *)v91 + 25) = *(_OWORD *)((char *)v92 + 25);
          goto LABEL_72;
        default:
          uint64_t v32 = type metadata accessor for PuzzleStatisticValue(0);
          int v33 = swift_getEnumCaseMultiPayload();
          if (v33 == 5)
          {
            uint64_t v34 = type metadata accessor for PuzzleStreak();
            uint64_t v35 = *(void *)(v34 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v35 + 48))(v31, 1, v34)) {
              goto LABEL_13;
            }
          }
          else
          {
            if (v33 != 4)
            {
              size_t v48 = *(void *)(*(void *)(v32 - 8) + 64);
LABEL_44:
              long long v94 = (char *)v30;
              goto LABEL_69;
            }
            uint64_t v34 = type metadata accessor for PuzzleStreak();
            uint64_t v35 = *(void *)(v34 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v35 + 48))(v31, 1, v34))
            {
LABEL_13:
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v30, v31, *(void *)(*(void *)(v36 - 8) + 64));
              goto LABEL_71;
            }
          }
          uint64_t v95 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v95 - 8) + 32))(v30, v31, v95);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v30, 0, 1, v34);
LABEL_71:
          swift_storeEnumTagMultiPayload();
          goto LABEL_72;
      }
    case 3:
      *uint64_t v3 = *a2;
      uint64_t v115 = v3;
      uint64_t v117 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      uint64_t v7 = v117[5];
      uint64_t v8 = (char *)v3 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)v3 + v7) = *(_OWORD *)((char *)a2 + v7);
      uint64_t v10 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v11 = v10[5];
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = sub_1C1515FDC();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v16(v12, v13, v14);
      uint64_t v17 = v10[6];
      uint64_t v18 = &v8[v17];
      uint64_t v19 = &v9[v17];
      int v114 = v16;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&v9[v17], 1, v14))
      {
        sub_1BFECA458(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v16(v18, v19, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      }
      uint64_t v3 = v115;
      *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
      *(_OWORD *)&v8[v10[8]] = *(_OWORD *)&v9[v10[8]];
      *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
      *(void *)&v8[v10[10]] = *(void *)&v9[v10[10]];
      *(void *)&v8[v10[11]] = *(void *)&v9[v10[11]];
      *(void *)&v8[v10[12]] = *(void *)&v9[v10[12]];
      *(void *)((char *)v115 + v117[6]) = *(void *)((char *)a2 + v117[6]);
      *(void *)((char *)v115 + v117[7]) = *(void *)((char *)a2 + v117[7]);
      uint64_t v37 = v117[8];
      uint64_t v38 = (_OWORD *)((char *)v115 + v37);
      uint64_t v39 = (_OWORD *)((char *)a2 + v37);
      uint64_t v40 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        sub_1BFECA458(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v38 = *v39;
          uint64_t v44 = type metadata accessor for GenericDataVisualization();
          v114((char *)v38 + *(int *)(v44 + 20), (char *)v39 + *(int *)(v44 + 20), v14);
          *(void *)((char *)v38 + *(int *)(v44 + 24)) = *(void *)((char *)v39 + *(int *)(v44 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v38, v39, *(void *)(v41 + 64));
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      uint64_t v63 = v117[9];
      uint64_t v64 = (char *)v115 + v63;
      uint64_t v65 = (char *)a2 + v63;
      sub_1BFE07F38(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
      uint64_t v67 = v66;
      uint64_t v68 = *(void *)(v66 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v65, 1, v66))
      {
        sub_1BFEC8548(0);
        memcpy(v64, v65, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v64, v65, v67);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v64, 0, 1, v67);
      }
      goto LABEL_73;
  }
  memcpy(v3, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return v3;
}

ValueMetadata *_s8ResolvedO10CodingTypeOMa()
{
  return &_s8ResolvedO10CodingTypeON;
}

unsigned char *_s8ResolvedO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12155A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8ResolvedO10CodingKeysOMa()
{
  return &_s8ResolvedO10CodingKeysON;
}

unint64_t sub_1C12155E4()
{
  unint64_t result = qword_1EA1AD108;
  if (!qword_1EA1AD108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD108);
  }
  return result;
}

unint64_t sub_1C121563C()
{
  unint64_t result = qword_1EA1AD110;
  if (!qword_1EA1AD110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD110);
  }
  return result;
}

uint64_t sub_1C1215690(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69666E6F43707061 && a2 == 0xE900000000000067 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E614D7465737361 && a2 == 0xEC00000072656761)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t FeedNativeAdIntegrator.object.getter()
{
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v0 + 16);
}

void (*FeedNativeAdIntegrator.object.modify(void *a1))(uint64_t a1, char a2)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1C0AB2944;
}

uint64_t FeedNativeAdIntegrator.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t FeedNativeAdIntegrator.insertNativeAd(_:)(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v1 + 16);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FeedNativeAdIntegrator.collapseNativeAd(_:)(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v1 + 16);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FeedNativeAdIntegrator.deinit()
{
  sub_1C019B9B4(v0 + 16);
  return v0;
}

uint64_t FeedNativeAdIntegrator.__deallocating_deinit()
{
  sub_1C019B9B4(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1C1215B44(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v1 + 16);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C1215BD0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v1 + 16);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C1215C5C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v4);
  uint64_t v6 = *(void *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1C1215CB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FeedNativeAdIntegrating.insertNativeAd(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FeedNativeAdIntegrating.collapseNativeAd(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for FeedNativeAdIntegrator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedNativeAdIntegrator);
}

uint64_t dispatch thunk of FeedNativeAdIntegrator.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C1215D68(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v58 = a5;
  uint64_t v12 = type metadata accessor for FormatAdMetricsData();
  uint64_t v59 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v60 = v13;
  uint64_t v57 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1C151D2DC();
  uint64_t v14 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a2 + 8);
  uint64_t v17 = *(unsigned __int8 *)(a2 + 104);
  uint64_t v18 = &a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_identifier];
  *(void *)uint64_t v18 = *(void *)a2;
  *((void *)v18 + 1) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C151F8FC();
  objc_msgSend(a3, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a3, sel_setUserInteractionEnabled_, v17);
  uint64_t v19 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_contentView;
  id v20 = *(id *)&a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_contentView];
  objc_msgSend(a3, sel_bounds);
  sub_1C151F8FC();

  uint64_t v56 = v19;
  long long v21 = *(void (**)(uint64_t, uint64_t))(a6 + 32);
  id v22 = *(id *)&a3[v19];
  v21(v58, a6);
  uint64_t v23 = a4;
  uint64_t v24 = (void *)sub_1C151D1FC();
  uint64_t v26 = v25;

  uint64_t v58 = v7;
  sub_1C0ED2418();
  swift_getObjectType();
  sub_1C151D4DC();
  uint64_t v27 = (void **)&a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_metricsView];
  uint64_t v28 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_metricsView];
  *uint64_t v27 = v24;
  v27[1] = v26;
  id v29 = v24;

  uint64_t v30 = *v27;
  id v31 = v29;
  if (*v27)
  {
    swift_getObjectType();
    id v31 = v30;
    uint64_t v32 = a3;
    sub_1C151D4CC();
  }
  int v33 = v61;
  uint64_t v34 = v23;
  uint64_t v35 = v23;
  uint64_t v36 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v61, v35, v62);
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v33, v36);
  if (v37 == *MEMORY[0x1E4F7A858])
  {
    uint64_t v38 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_privacyMarker;
    if (*(void *)&a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_privacyMarker])
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v36);
    }
    else
    {
      id v46 = (id)sub_1C151D4BC();
      if (!v46) {
        id v46 = objc_msgSend(objc_allocWithZone((Class)sub_1C151961C()), sel_init);
      }
      uint64_t v47 = v46;
      sub_1C151F8FC();
      objc_msgSend(v47, sel_setIsAccessibilityElement_, 1);
      size_t v48 = *(void **)&a3[v38];
      *(void *)&a3[v38] = v47;
      id v49 = v47;

      objc_msgSend(a3, sel_addSubview_, v49);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v61, v62);
    }
    uint64_t v41 = (uint64_t)v57;
  }
  else
  {
    int v39 = v37;
    int v40 = *MEMORY[0x1E4F7A848];
    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v36);
    uint64_t v41 = (uint64_t)v57;
    if (v39 == v40 || v39 == *MEMORY[0x1E4F7A850])
    {
      uint64_t v42 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_privacyMarker];
      if (v42) {
        objc_msgSend(v42, sel_setAlpha_, 0.0);
      }
      uint64_t v43 = (void *)sub_1C151D4BC();
      if (v43)
      {
        uint64_t v44 = v43;
        objc_msgSend(v43, sel_setAlpha_, 0.0);
      }
      sub_1C151F71C();
      sub_1C151F8FC();
      id v45 = *(id *)&a3[v56];
      objc_msgSend(a3, sel_bounds);
      sub_1C151F7BC();
      sub_1C151F8FC();
    }
  }

  uint64_t v50 = swift_allocObject();
  swift_weakInit();
  sub_1C121655C(v34, v41);
  unint64_t v51 = (*(unsigned __int8 *)(v59 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v50;
  sub_1C12166A0(v41, v52 + v51);
  uint64_t v53 = (void *)sub_1C151C83C();

  return swift_release();
}

uint64_t sub_1C1216348()
{
  uint64_t v0 = sub_1C151DC0C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(void *)(result + 16))
    {
      uint64_t v5 = *(void *)(result + 24);
      swift_unknownObjectRetain();
      swift_release();
      uint64_t ObjectType = swift_getObjectType();
      sub_1C151D21C();
      (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F7B0D8], v0);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, ObjectType, v5);
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C12164DC()
{
  swift_unknownObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C1216524()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C121655C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatAdMetricsData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12165C0()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatAdMetricsData() - 8) + 80);
  uint64_t v2 = (v1 + 24) & ~v1;
  swift_release();
  uint64_t v3 = sub_1C151D2DC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1C12166A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatAdMetricsData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1216704()
{
  type metadata accessor for FormatAdMetricsData();
  return sub_1C1216348();
}

uint64_t static EmptyStateStyler.feedTheme.getter()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
  id v2 = objc_msgSend(v0, sel_systemBackgroundColor);
  id v3 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  id v4 = objc_msgSend(v0, sel_secondaryLabelColor);
  return MEMORY[0x1F41608B0](v3, 0, v4);
}

unint64_t FormatVisualEffect.description.getter()
{
  unint64_t result = 0xD000000000000017;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x614D6D6574737973;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000018;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000016;
      break;
    case 0xE:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C12169C0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatVisualEffect.init(from:)(a1, a2);
}

uint64_t sub_1C12169D8(void *a1)
{
  return FormatVisualEffect.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatVisualEffectO2eeoiySbAC_ACtFZ_0()
{
  unint64_t v0 = FormatBlurEffectStyle.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == FormatBlurEffectStyle.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1C1216A94(uint64_t a1)
{
  unint64_t result = sub_1C1216ABC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1216ABC()
{
  unint64_t result = qword_1EA1AD118;
  if (!qword_1EA1AD118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD118);
  }
  return result;
}

unint64_t sub_1C1216B10(void *a1)
{
  a1[1] = sub_1C0874484();
  a1[2] = sub_1C090015C();
  unint64_t result = sub_1C1216B48();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1216B48()
{
  unint64_t result = qword_1EA1AD120;
  if (!qword_1EA1AD120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD120);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatVisualEffect(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1216C68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVisualEffect()
{
  return &type metadata for FormatVisualEffect;
}

void *sub_1C1216CA0(unsigned __int8 *a1)
{
  int v1 = *a1;
  sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  sub_1C0181BEC(0);
  if (v1 == 15)
  {
    unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
    unsigned int v6 = (void *)(v5 + v4);
    sub_1C0433600(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v6);
    uint64_t v7 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
    sub_1C09BCFA4(0x45206C6175736956, 0xED00007463656666, 0, 0, v5, v21);
  }
  else
  {
    uint64_t v8 = *(void *)(*(void *)(v3 - 8) + 72);
    unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1527210;
    uint64_t v11 = (void *)(v10 + v9);
    sub_1C0433600(1701869908, 0xE400000000000000, 1920298050, 0xE400000000000000, v11);
    uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v13 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    v13(v11, 0, 1, v12);
    uint64_t v14 = (void *)((char *)v11 + v8);
    LOBYTE(v21[0]) = v1;
    unint64_t v15 = FormatBlurEffectStyle.rawValue.getter();
    sub_1C0433600(0x656C797453, 0xE500000000000000, v15, v16, v14);
    v13(v14, 0, 1, v12);
    sub_1C09BCFA4(0x45206C6175736956, 0xED00007463656666, 0, 0, v10, v21);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v17 = swift_allocObject();
  *(void *)(inited + 32) = v17;
  *(void *)(v17 + 48) = v22;
  long long v18 = v21[1];
  *(_OWORD *)(v17 + 16) = v21[0];
  *(_OWORD *)(v17 + 32) = v18;
  uint64_t v19 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v19;
}

uint64_t sub_1C1217104()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t static Settings.Puzzles.Features.enableGameCenter.getter()
{
  return sub_1BFC387A8(&qword_1EB8812A0);
}

uint64_t sub_1C1217170()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C151E62C();
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  v10[15] = 1;
  sub_1BFCC22F8(0, (unint64_t *)&qword_1EB8979E8);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EB86C208 = result;
  return result;
}

uint64_t static Settings.Puzzles.Features.newsSettingsGameCenterEnabled.getter()
{
  return sub_1BFC387A8(qword_1EB86BFB8);
}

uint64_t sub_1C121738C()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001C1638C40;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1AD128 = result;
  return result;
}

uint64_t static Settings.Puzzles.ConfigOverrides.indexUrl.getter()
{
  return sub_1BFC387A8(&qword_1EA194B60);
}

uint64_t sub_1C12175AC()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1C151E62C();
  v7[1] = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB408], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  v10[0] = 0xD000000000000021;
  v10[1] = 0x80000001C1638BE0;
  sub_1BFCC22F8(0, &qword_1EA19C2F0);
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1AD130 = result;
  return result;
}

uint64_t static Settings.Puzzles.ConfigOverrides.dataUrl.getter()
{
  return sub_1BFC387A8(&qword_1EA194B68);
}

uint64_t Settings.Puzzles.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8NewsFeedE0cD6ModuleV13BundleSessionV15ConfigOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C1217804(uint64_t a1)
{
  return sub_1BFC6C470(a1, (void (*)(void))type metadata accessor for Settings.Puzzles.ConfigOverrides, 0xD00000000000002ELL, 0x80000001C1638B80, &qword_1EA1AD138);
}

uint64_t static Settings.Puzzles.configOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EA194B70);
}

uint64_t static Settings.Puzzles.cacheOverrides.getter()
{
  return sub_1BFC387A8(&qword_1EB863AC8);
}

unint64_t static Settings.Puzzles.resetProgressStateKey.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_1C12178A0(uint64_t a1)
{
  return sub_1BFC4EB94(a1, 0xD000000000000027, 0x80000001C16174A0, &qword_1EA1AD140);
}

uint64_t static Settings.Puzzles.resetProgressState.getter()
{
  return sub_1BFC387A8(&qword_1EA194B80);
}

uint64_t sub_1C12178E8(uint64_t a1)
{
  return sub_1BFC4EB94(a1, 0xD00000000000002BLL, 0x80000001C1638B50, &qword_1EB863B70);
}

uint64_t static Settings.Puzzles.resetProgressInHistory.getter()
{
  return sub_1BFC387A8(&qword_1EB863B78);
}

uint64_t sub_1C1217930()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151719C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151631C();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1C15161BC();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB410], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  sub_1C1218B70();
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  qword_1EA1AD148 = result;
  return result;
}

uint64_t static Settings.Puzzles.lastPuzzleBadgeUpdateDate.getter()
{
  return sub_1BFC387A8(&qword_1EA194B88);
}

uint64_t sub_1C1217B58(uint64_t a1)
{
  return sub_1BFC4EB94(a1, 0xD00000000000002ALL, 0x80000001C1638AC0, &qword_1EA1AD150);
}

uint64_t static Settings.Puzzles.hideSubmitRadarButton.getter()
{
  return sub_1BFC387A8(qword_1EA194B90);
}

uint64_t sub_1C1217BA0(uint64_t a1)
{
  return sub_1BFC4EB94(a1, 0xD00000000000002DLL, 0x80000001C1638A90, &qword_1EB86F6E0);
}

uint64_t static Settings.Puzzles.showFeedDebugMenuOptions.getter()
{
  return sub_1BFC387A8(&qword_1EB86F9B8);
}

unint64_t static Settings.Puzzles.showInfoModalOnFirstPlayKey.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_1C1217C04()
{
  uint64_t v0 = sub_1C151719C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151718C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCC22F8(0, &qword_1EB863BA0);
  v10[1] = v8;
  uint64_t v12 = 0;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  sub_1C006293C(0, (unint64_t *)&qword_1EA19C358, (unint64_t *)&qword_1EA19C360);
  sub_1C0092478(0, (unint64_t *)&qword_1EA19C360);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C152C7F0;
  uint64_t v11 = 0;
  sub_1C15171AC();
  uint64_t v11 = 1;
  sub_1C15171AC();
  uint64_t v11 = 2;
  sub_1C15171AC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  uint64_t result = sub_1C15171CC();
  qword_1EA1AD158 = result;
  return result;
}

uint64_t static Settings.Puzzles.showInfoModalOnFirstPlay.getter()
{
  return sub_1BFC387A8(&qword_1EA194BA0);
}

uint64_t sub_1C1217F54()
{
  uint64_t v0 = sub_1C151718C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCC22F8(0, &qword_1EB863BA0);
  v5[2] = 1;
  v5[3] = 1;
  v5[1] = 11;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB3F8], v0);
  uint64_t result = sub_1C15171FC();
  qword_1EA1AD160 = result;
  return result;
}

uint64_t static Settings.Puzzles.BadgeCountOverride.badgeCountOverrideValue.getter()
{
  return sub_1BFC387A8(qword_1EA194BA8);
}

uint64_t _s11TeaSettings0B0C8NewsFeedE7PuzzlesV15ConfigOverridesC3key12defaultValue6accessAHSSSg_SbAA6AccessOtcfc_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  uint64_t v9 = sub_1C151700C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t sub_1C12181CC()
{
  uint64_t v0 = sub_1C151719C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151718C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  __n128 v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCC22F8(0, &qword_1EB863BA0);
  v9[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  sub_1C006293C(0, (unint64_t *)&qword_1EA19C358, (unint64_t *)&qword_1EA19C360);
  sub_1C0092478(0, (unint64_t *)&qword_1EA19C360);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C152FC70;
  v9[0] = 0;
  sub_1C15171AC();
  v9[0] = 1;
  sub_1C15171AC();
  v9[0] = 2;
  sub_1C15171AC();
  v9[0] = 3;
  sub_1C15171AC();
  v9[0] = 5;
  sub_1C15171AC();
  v9[0] = 10;
  sub_1C15171AC();
  v9[0] = 15;
  sub_1C15171AC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  uint64_t result = sub_1C15171CC();
  qword_1EA1AD168 = result;
  return result;
}

uint64_t static Settings.Puzzles.prewarmHistoryPuzzlesCount.getter()
{
  return sub_1BFC387A8(&qword_1EA194BB8);
}

uint64_t sub_1C12185AC()
{
  uint64_t v0 = sub_1C151719C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151718C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  __n128 v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCC22F8(0, &qword_1EB8711D8);
  v10[1] = v8;
  uint64_t v12 = 0;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  sub_1C006293C(0, &qword_1EB861B08, &qword_1EB863B98);
  sub_1C0092478(0, &qword_1EB863B98);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C154B600;
  uint64_t v11 = 0;
  sub_1C15171AC();
  uint64_t v11 = 0x404E000000000000;
  sub_1C15171AC();
  uint64_t v11 = 0x4066800000000000;
  sub_1C15171AC();
  uint64_t v11 = 0x4072C00000000000;
  sub_1C15171AC();
  uint64_t v11 = 0x408C200000000000;
  sub_1C15171AC();
  uint64_t v11 = 0x40AC200000000000;
  sub_1C15171AC();
  uint64_t v11 = 0x40F5180000000000;
  sub_1C15171AC();
  uint64_t v11 = 0x4122750000000000;
  sub_1C15171AC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB410], v0);
  uint64_t result = sub_1C15171CC();
  qword_1EA1AD170 = result;
  return result;
}

uint64_t static Settings.Puzzles.prewarmHistoryTimeInterval.getter()
{
  return sub_1BFC387A8(&qword_1EA194BC0);
}

uint64_t sub_1C1218A44(uint64_t a1)
{
  return sub_1BFC6CBD4(a1, 0xD000000000000031, 0x80000001C1638940, (uint64_t *)&unk_1EB863B80);
}

uint64_t static Settings.Puzzles.refreshEngineTimeInterval.getter()
{
  return sub_1BFC387A8(&qword_1EB863B90);
}

uint64_t sub_1C1218A8C(uint64_t a1)
{
  return sub_1BFC6CBD4(a1, 0xD00000000000002ALL, 0x80000001C1638C80, &qword_1EA1AD178);
}

uint64_t static Settings.Puzzles.puzzleCacheLifetime.getter()
{
  return sub_1BFC387A8(&qword_1EA194BC8);
}

uint64_t static Settings.Puzzles.statsStartDateOverride.getter()
{
  return sub_1BFC387A8(&qword_1EB861160);
}

uint64_t sub_1C1218AF8(uint64_t a1)
{
  return sub_1BFC4EB94(a1, 0xD00000000000003FLL, 0x80000001C16388D0, &qword_1EA1AD180);
}

uint64_t static Settings.Puzzles.statsImmediatelyScheduleStreakNotification.getter()
{
  return sub_1BFC387A8(qword_1EA194BD8);
}

ValueMetadata *type metadata accessor for Settings.Puzzles()
{
  return &type metadata for Settings.Puzzles;
}

ValueMetadata *type metadata accessor for Settings.Puzzles.Features()
{
  return &type metadata for Settings.Puzzles.Features;
}

uint64_t sub_1C1218B60()
{
  return type metadata accessor for Settings.Puzzles.ConfigOverrides(0);
}

uint64_t sub_1C1218B68()
{
  return type metadata accessor for Settings.Puzzles.BadgeCountOverride(0);
}

void sub_1C1218B70()
{
  if (!qword_1EA1AD188)
  {
    sub_1C151631C();
    sub_1C1218C04(&qword_1EA1AD190, MEMORY[0x1E4F27928]);
    unint64_t v0 = sub_1C151720C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AD188);
    }
  }
}

uint64_t sub_1C1218C04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1218C54(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x1F4188298](sub_1C1218C74, 0, 0);
}

uint64_t sub_1C1218C74()
{
  if ((uint64_t)objc_msgSend(*(id *)(v0 + 136), sel_rank) < 1)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v4 = type metadata accessor for PuzzleLeaderboardEntry();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    id v1 = objc_msgSend(*(id *)(v0 + 136), sel_player);
    *(void *)(v0 + 144) = v1;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 120;
    *(void *)(v0 + 24) = sub_1C1218E20;
    uint64_t v2 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_1C121A994;
    *(void *)(v0 + 104) = &block_descriptor;
    *(void *)(v0 + 112) = v2;
    objc_msgSend(v1, sel_loadPhotoForSize_withCompletionHandler_, 0, v0 + 80);
    return MEMORY[0x1F41881E8](v0 + 16);
  }
}

uint64_t sub_1C1218E20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1C1219140;
  }
  else {
    uint64_t v2 = sub_1C1218F30;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C1218F30()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = (UIImage *)v0[15];
  uint64_t v3 = UIImagePNGRepresentation(v2);

  if (v3)
  {
    uint64_t v4 = sub_1C151606C();
    unint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xF000000000000000;
  }
  uint64_t v7 = v0[16];
  uint64_t v8 = (void *)v0[17];
  id v9 = objc_msgSend(v8, sel_date);
  sub_1C15162BC();

  id v10 = objc_msgSend(v8, sel_formattedScore);
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  id v14 = objc_msgSend(v8, sel_player);
  id v15 = objc_msgSend(v14, sel_displayName);

  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  sub_1C00C2AC0(v4, v6);
  id v19 = objc_msgSend(v8, sel_rank);
  id v20 = objc_msgSend(v8, sel_score);
  sub_1BFE95878(v4, v6);
  long long v21 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v22 = (uint64_t *)(v7 + v21[5]);
  *uint64_t v22 = v11;
  v22[1] = v13;
  uint64_t v23 = (uint64_t *)(v7 + v21[6]);
  *uint64_t v23 = v16;
  v23[1] = v18;
  v23[2] = v4;
  v23[3] = v6;
  *(void *)(v7 + v21[7]) = v19;
  *(void *)(v7 + v21[8]) = v20;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v21 - 1) + 56))(v7, 0, 1, v21);
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_1C1219140()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = (void *)v0[19];
  swift_willThrow();

  uint64_t v4 = v0[16];
  uint64_t v3 = (void *)v0[17];
  id v5 = objc_msgSend(v3, sel_date);
  sub_1C15162BC();

  id v6 = objc_msgSend(v3, sel_formattedScore);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  id v10 = objc_msgSend(v3, sel_player);
  id v11 = objc_msgSend(v10, sel_displayName);

  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  sub_1C00C2AC0(0, 0xF000000000000000);
  id v15 = objc_msgSend(v3, sel_rank);
  id v16 = objc_msgSend(v3, sel_score);
  sub_1BFE95878(0, 0xF000000000000000);
  uint64_t v17 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v18 = (uint64_t *)(v4 + v17[5]);
  *uint64_t v18 = v7;
  v18[1] = v9;
  uint64_t v19 = v4 + v17[6];
  *(void *)uint64_t v19 = v12;
  *(void *)(v19 + 8) = v14;
  *(_OWORD *)(v19 + 16) = xmmword_1C154F350;
  *(void *)(v4 + v17[7]) = v15;
  *(void *)(v4 + v17[8]) = v16;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v17 - 1) + 56))(v4, 0, 1, v17);
  id v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

BOOL static PuzzleLeaderboard.PlayerScope.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PuzzleLeaderboard.PlayerScope.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t PuzzleLeaderboard.PlayerScope.hashValue.getter()
{
  return sub_1C1520E0C();
}

BOOL static PuzzleLeaderboard.TimeScope.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PuzzleLeaderboard.TimeScope.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t PuzzleLeaderboard.TimeScope.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t PuzzleLeaderboardEntry.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PuzzleLeaderboardEntry.formattedScore.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PuzzleLeaderboardEntry() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleLeaderboardEntry.player.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for PuzzleLeaderboardEntry() + 24));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  unint64_t v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return sub_1C00C2AC0(v5, v6);
}

uint64_t PuzzleLeaderboardEntry.rank.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PuzzleLeaderboardEntry() + 28));
}

uint64_t PuzzleLeaderboardEntry.score.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PuzzleLeaderboardEntry() + 32));
}

uint64_t sub_1C121958C()
{
  uint64_t result = 1702125924;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657474616D726F66;
      break;
    case 2:
      uint64_t result = 0x726579616C70;
      break;
    case 3:
      uint64_t result = 1802396018;
      break;
    case 4:
      uint64_t result = 0x65726F6373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C1219628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C121BF9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1219650(uint64_t a1)
{
  unint64_t v2 = sub_1C121AC58();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C121968C(uint64_t a1)
{
  unint64_t v2 = sub_1C121AC58();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleLeaderboardEntry.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C121ADA8(0, &qword_1EA1AD198, (uint64_t (*)(void))sub_1C121AC58, (uint64_t)&type metadata for PuzzleLeaderboardEntry.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C121AC58();
  sub_1C1520F0C();
  LOBYTE(v14[0]) = 0;
  sub_1C151631C();
  sub_1BFE0D924((unint64_t *)&unk_1EB871150, MEMORY[0x1E4F27928]);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for PuzzleLeaderboardEntry();
    LOBYTE(v14[0]) = 1;
    sub_1C15207CC();
    uint64_t v11 = v3 + *(int *)(v10 + 24);
    uint64_t v12 = *(void *)(v11 + 8);
    v14[0] = *(void *)v11;
    v14[1] = v12;
    long long v15 = *(_OWORD *)(v11 + 16);
    char v16 = 2;
    sub_1C121ACAC();
    sub_1C152080C();
    LOBYTE(v14[0]) = 3;
    sub_1C15207FC();
    LOBYTE(v14[0]) = 4;
    sub_1C15207FC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t PuzzleLeaderboardEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_1C151631C();
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C121ADA8(0, &qword_1EA1AD1B0, (uint64_t (*)(void))sub_1C121AC58, (uint64_t)&type metadata for PuzzleLeaderboardEntry.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v29 = v5;
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C121AC58();
  uint64_t v30 = v7;
  uint64_t v11 = (uint64_t)v31;
  sub_1C1520EBC();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v26;
  uint64_t v13 = v27;
  id v31 = a1;
  uint64_t v14 = (uint64_t)v10;
  LOBYTE(v32) = 0;
  sub_1BFE0D924(&qword_1EB871168, MEMORY[0x1E4F27928]);
  long long v15 = v28;
  uint64_t v16 = v29;
  sub_1C15206EC();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v14, v15, v3);
  LOBYTE(v32) = 1;
  uint64_t v17 = sub_1C152069C();
  uint64_t v18 = (uint64_t *)(v14 + v8[5]);
  *uint64_t v18 = v17;
  v18[1] = v19;
  char v35 = 2;
  sub_1C121AD00();
  sub_1C15206EC();
  uint64_t v20 = v33;
  uint64_t v21 = v14 + v8[6];
  *(void *)uint64_t v21 = v32;
  *(void *)(v21 + 8) = v20;
  *(_OWORD *)(v21 + 16) = v34;
  LOBYTE(v32) = 3;
  *(void *)(v14 + v8[7]) = sub_1C15206DC();
  LOBYTE(v32) = 4;
  uint64_t v22 = sub_1C15206DC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v30, v16);
  *(void *)(v14 + v8[8]) = v22;
  sub_1C0B7919C(v14, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1C0B79200(v14);
}

uint64_t sub_1C1219E0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleLeaderboardEntry.init(from:)(a1, a2);
}

uint64_t sub_1C1219E24(void *a1)
{
  return PuzzleLeaderboardEntry.encode(to:)(a1);
}

uint64_t PuzzleLeaderboardEntry.hash(into:)()
{
  sub_1C151631C();
  sub_1BFE0D924((unint64_t *)&unk_1EA1AEEA0, MEMORY[0x1E4F27928]);
  sub_1C151E48C();
  uint64_t v1 = type metadata accessor for PuzzleLeaderboardEntry();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + *(int *)(v1 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  unint64_t v4 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  sub_1C00C2AC0(v3, v4);
  sub_1C151E77C();
  sub_1C1520DDC();
  if (v4 >> 60 != 15)
  {
    sub_1BFE95820(v3, v4);
    sub_1C151607C();
    sub_1BFE95878(v3, v4);
  }
  swift_bridgeObjectRelease();
  sub_1BFE95878(v3, v4);
  sub_1C1520DCC();
  return sub_1C1520DCC();
}

uint64_t PuzzleLeaderboardEntry.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C1219FF8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C121A03C()
{
  return sub_1C1520E0C();
}

uint64_t PuzzlePlayer.displayName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzlePlayer.profileImageData.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1C00C2AC0(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t sub_1C121A0E0()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x4E79616C70736964;
  }
}

uint64_t sub_1C121A128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C121BE94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C121A150(uint64_t a1)
{
  unint64_t v2 = sub_1C121AD54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C121A18C(uint64_t a1)
{
  unint64_t v2 = sub_1C121AD54();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzlePlayer.encode(to:)(void *a1)
{
  sub_1C121ADA8(0, &qword_1EA1AD1C0, (uint64_t (*)(void))sub_1C121AD54, (uint64_t)&type metadata for PuzzlePlayer.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C121AD54();
  sub_1C1520F0C();
  LOBYTE(v15) = 0;
  uint64_t v9 = v14;
  sub_1C15207CC();
  if (!v9)
  {
    uint64_t v15 = v13;
    uint64_t v16 = v12;
    char v17 = 1;
    sub_1C01D8810();
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzlePlayer.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C121ADA8(0, &qword_1EA1AD1D0, (uint64_t (*)(void))sub_1C121AD54, (uint64_t)&type metadata for PuzzlePlayer.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C121AD54();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  LOBYTE(v19) = 0;
  uint64_t v11 = sub_1C152069C();
  uint64_t v13 = v12;
  char v21 = 1;
  sub_1C01D8CB4();
  swift_bridgeObjectRetain();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v14 = v19;
  unint64_t v15 = v20;
  swift_bridgeObjectRetain();
  sub_1C00C2AC0(v14, v15);
  swift_bridgeObjectRelease();
  uint64_t *v10 = v11;
  v10[1] = v13;
  void v10[2] = v14;
  v10[3] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BFE95878(v14, v15);
}

uint64_t sub_1C121A600@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PuzzlePlayer.init(from:)(a1, a2);
}

uint64_t sub_1C121A618(void *a1)
{
  return PuzzlePlayer.encode(to:)(a1);
}

uint64_t PuzzlePlayer.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  if (v2 >> 60 == 15) {
    return sub_1C1520DDC();
  }
  sub_1C1520DDC();
  sub_1BFE95820(v1, v2);
  sub_1C151607C();
  return sub_1BFE95878(v1, v2);
}

uint64_t PuzzlePlayer.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  sub_1C1520DBC();
  sub_1C151E77C();
  sub_1C1520DDC();
  if (v2 >> 60 != 15)
  {
    sub_1BFE95820(v1, v2);
    sub_1C151607C();
    sub_1BFE95878(v1, v2);
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C121A7A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  sub_1C1520DBC();
  sub_1C151E77C();
  sub_1C1520DDC();
  if (v2 >> 60 != 15)
  {
    sub_1BFE95820(v1, v2);
    sub_1C151607C();
    sub_1BFE95878(v1, v2);
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C121A84C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  sub_1C151E77C();
  if (v2 >> 60 == 15) {
    return sub_1C1520DDC();
  }
  sub_1C1520DDC();
  sub_1BFE95820(v1, v2);
  sub_1C151607C();
  return sub_1BFE95878(v1, v2);
}

uint64_t sub_1C121A8E8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  sub_1C1520DBC();
  sub_1C151E77C();
  sub_1C1520DDC();
  if (v2 >> 60 != 15)
  {
    sub_1BFE95820(v1, v2);
    sub_1C151607C();
    sub_1BFE95878(v1, v2);
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C121A994(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C017F734();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x1F4188200](a1);
  }
}

BOOL _s8NewsFeed12PuzzlePlayerV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1C1520A9C(), BOOL result = 0, (v7 & 1) != 0))
  {
    if (v3 >> 60 == 15)
    {
      if (v4 >> 60 == 15) {
        return 1;
      }
    }
    else if (v4 >> 60 != 15)
    {
      sub_1C00C2AC0(v2, v3);
      sub_1C00C2AC0(v5, v4);
      char v9 = sub_1C10CA134(v2, v3, v5, v4);
      sub_1BFE95878(v5, v4);
      sub_1BFE95878(v2, v3);
      return (v9 & 1) != 0;
    }
    sub_1C00C2AC0(v2, v3);
    sub_1C00C2AC0(v5, v4);
    sub_1BFE95878(v2, v3);
    sub_1BFE95878(v5, v4);
    return 0;
  }
  return result;
}

BOOL _s8NewsFeed22PuzzleLeaderboardEntryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1C15162AC() & 1) == 0) {
    return 0;
  }
  unint64_t v4 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  id v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_1C1520A9C(), BOOL result = 0, (v10 & 1) != 0))
  {
    uint64_t v12 = a1 + v4[6];
    uint64_t v13 = *(void *)(v12 + 8);
    v18[0] = *(void *)v12;
    v18[1] = v13;
    long long v19 = *(_OWORD *)(v12 + 16);
    uint64_t v14 = a2 + v4[6];
    uint64_t v15 = *(void *)(v14 + 8);
    v16[0] = *(void *)v14;
    v16[1] = v15;
    long long v17 = *(_OWORD *)(v14 + 16);
    if (_s8NewsFeed12PuzzlePlayerV2eeoiySbAC_ACtFZ_0(v18, v16) && *(void *)(a1 + v4[7]) == *(void *)(a2 + v4[7])) {
      return *(void *)(a1 + v4[8]) == *(void *)(a2 + v4[8]);
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C121AC58()
{
  unint64_t result = qword_1EA1AD1A0;
  if (!qword_1EA1AD1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD1A0);
  }
  return result;
}

unint64_t sub_1C121ACAC()
{
  unint64_t result = qword_1EA1AD1A8;
  if (!qword_1EA1AD1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD1A8);
  }
  return result;
}

unint64_t sub_1C121AD00()
{
  unint64_t result = qword_1EA1AD1B8;
  if (!qword_1EA1AD1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD1B8);
  }
  return result;
}

unint64_t sub_1C121AD54()
{
  unint64_t result = qword_1EA1AD1C8;
  if (!qword_1EA1AD1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD1C8);
  }
  return result;
}

void sub_1C121ADA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C121AE14()
{
  unint64_t result = qword_1EA1AD1D8;
  if (!qword_1EA1AD1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD1D8);
  }
  return result;
}

unint64_t sub_1C121AE6C()
{
  unint64_t result = qword_1EA1AD1E0;
  if (!qword_1EA1AD1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD1E0);
  }
  return result;
}

uint64_t sub_1C121AEC0()
{
  return sub_1BFE0D924(&qword_1EA1AD1E8, (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry);
}

unint64_t sub_1C121AF0C()
{
  unint64_t result = qword_1EA1AD1F0;
  if (!qword_1EA1AD1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD1F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLeaderboard()
{
  return &type metadata for PuzzleLeaderboard;
}

ValueMetadata *type metadata accessor for PuzzleLeaderboard.PlayerScope()
{
  return &type metadata for PuzzleLeaderboard.PlayerScope;
}

unsigned char *storeEnumTagSinglePayload for PuzzleLeaderboard.TimeScope(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C121B050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLeaderboard.TimeScope()
{
  return &type metadata for PuzzleLeaderboard.TimeScope;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleLeaderboardEntry(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151631C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v9 + 8);
    *(void *)uint64_t v13 = *(uint64_t *)((char *)a2 + v9);
    *((void *)v13 + 1) = v14;
    uint64_t v15 = (uint64_t *)((char *)a2 + v9 + 16);
    unint64_t v16 = *(uint64_t *)((char *)a2 + v9 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 >> 60 == 15)
    {
      *((_OWORD *)v13 + 1) = *(_OWORD *)v15;
    }
    else
    {
      uint64_t v18 = *v15;
      sub_1BFE95820(*v15, v16);
      *((void *)v13 + 2) = v18;
      *((void *)v13 + 3) = v16;
    }
    uint64_t v19 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
  }
  return a1;
}

uint64_t destroy for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v5 + 24);
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    return sub_1BFE95664(v8, v7);
  }
  return result;
}

uint64_t initializeWithCopy for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = *(void *)(a2 + v8 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v8);
  *(void *)(v12 + 8) = v13;
  uint64_t v14 = (uint64_t *)(a2 + v8 + 16);
  unint64_t v15 = *(void *)(a2 + v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)(v12 + 16) = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v16 = *v14;
    sub_1BFE95820(*v14, v15);
    *(void *)(v12 + 16) = v16;
    *(void *)(v12 + 24) = v15;
  }
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  return a1;
}

uint64_t assignWithCopy for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  *uint64_t v11 = *(void *)(a2 + v10);
  v11[1] = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t *)(v12 + 16);
  unint64_t v14 = *(void *)(v12 + 24);
  if (v11[3] >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      uint64_t v16 = *v13;
      sub_1BFE95820(*v13, *(void *)(v12 + 24));
      uint64_t v17 = v11[2];
      unint64_t v18 = v11[3];
      void v11[2] = v16;
      v11[3] = v14;
      sub_1BFE95664(v17, v18);
      goto LABEL_8;
    }
    sub_1C01D91B8((uint64_t)(v11 + 2));
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)v11 + 1) = *(_OWORD *)v13;
    goto LABEL_8;
  }
  uint64_t v15 = *v13;
  sub_1BFE95820(*v13, *(void *)(v12 + 24));
  void v11[2] = v15;
  v11[3] = v14;
LABEL_8:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *uint64_t v13 = *(void *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)(v14 + 16);
  unint64_t v17 = v13[3];
  if (v17 >> 60 != 15)
  {
    unint64_t v18 = *(void *)(v14 + 24);
    if (v18 >> 60 != 15)
    {
      uint64_t v19 = v13[2];
      _OWORD v13[2] = *v16;
      v13[3] = v18;
      sub_1BFE95664(v19, v17);
      goto LABEL_6;
    }
    sub_1C01D91B8((uint64_t)(v13 + 2));
  }
  *((_OWORD *)v13 + 1) = *(_OWORD *)v16;
LABEL_6:
  uint64_t v20 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C121B6B4);
}

uint64_t sub_1C121B6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleLeaderboardEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C121B78C);
}

uint64_t sub_1C121B78C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C151631C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t destroy for PuzzlePlayer(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    return sub_1BFE95664(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for PuzzlePlayer(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    uint64_t v6 = *(void *)v4;
    sub_1BFE95820(v6, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v5;
  }
  return a1;
}

void *assignWithCopy for PuzzlePlayer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_1BFE95820(*v4, v5);
      uint64_t v8 = a1[2];
      unint64_t v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_1BFE95664(v8, v9);
      return a1;
    }
    sub_1C01D91B8((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_1BFE95820(*v4, v5);
  a1[2] = v6;
  a1[3] = v5;
  return a1;
}

void *assignWithTake for PuzzlePlayer(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = a2 + 2;
  unint64_t v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_1BFE95664(v8, v6);
      return a1;
    }
    sub_1C01D91B8((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

ValueMetadata *type metadata accessor for PuzzlePlayer()
{
  return &type metadata for PuzzlePlayer;
}

unsigned char *_s8NewsFeed17PuzzleLeaderboardV11PlayerScopeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C121BB48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzlePlayer.CodingKeys()
{
  return &type metadata for PuzzlePlayer.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PuzzleLeaderboardEntry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C121BC4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLeaderboardEntry.CodingKeys()
{
  return &type metadata for PuzzleLeaderboardEntry.CodingKeys;
}

unint64_t sub_1C121BC88()
{
  unint64_t result = qword_1EA1AD1F8;
  if (!qword_1EA1AD1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD1F8);
  }
  return result;
}

unint64_t sub_1C121BCE0()
{
  unint64_t result = qword_1EA1AD200;
  if (!qword_1EA1AD200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD200);
  }
  return result;
}

unint64_t sub_1C121BD38()
{
  unint64_t result = qword_1EA1AD208;
  if (!qword_1EA1AD208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD208);
  }
  return result;
}

unint64_t sub_1C121BD90()
{
  unint64_t result = qword_1EA1AD210;
  if (!qword_1EA1AD210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD210);
  }
  return result;
}

unint64_t sub_1C121BDE8()
{
  unint64_t result = qword_1EA1AD218;
  if (!qword_1EA1AD218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD218);
  }
  return result;
}

unint64_t sub_1C121BE40()
{
  unint64_t result = qword_1EA1AD220;
  if (!qword_1EA1AD220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA1AD220);
  }
  return result;
}

uint64_t sub_1C121BE94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1638CE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C121BF9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657474616D726F66 && a2 == 0xEE0065726F635364 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726579616C70 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1802396018 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t FormatStyle.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStyle.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStyle.types.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStyle.init(identifier:name:description:styles:types:options:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

uint64_t FormatStyle.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStyle.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStyle.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t FormatStyle.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStyle.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatStyle.name.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatStyle.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatStyle.description.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatStyle.styles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*FormatStyle.styles.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatStyle.types.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatStyle.types.modify())(void)
{
  return nullsub_1;
}

uint64_t (*FormatStyle.options.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C121C40C()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed11FormatStyleV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v18 = a2[7];
  uint64_t v19 = a1[7];
  uint64_t v16 = a2[8];
  uint64_t v17 = a1[8];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  if (v3)
  {
    if (!v7 || (v2 != v8 || v3 != v7) && (sub_1C1520A9C() & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v6)
  {
    if (!v9 || (v4 != v10 || v6 != v9) && (sub_1C1520A9C() & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = sub_1C00E1078(v5, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v13 = sub_1C00E8B40(v19, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v14 = sub_1C00E0650(v17, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14 & 1;
    }
  }
  return 0;
}

unint64_t sub_1C121C5DC(uint64_t a1)
{
  unint64_t result = sub_1C00F6C5C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C121C604(void *a1)
{
  a1[1] = sub_1C0083B78();
  a1[2] = sub_1C0083BCC();
  unint64_t result = sub_1C121C63C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C121C63C()
{
  unint64_t result = qword_1EB890F78;
  if (!qword_1EB890F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890F78);
  }
  return result;
}

uint64_t sub_1C121C690@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C121C69C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C121C6E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C121C6EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1C121C730@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C121C73C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 48) = v3;
  return result;
}

uint64_t sub_1C121C780@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C121C78C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1C121C7D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C121C7DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 64) = v3;
  return result;
}

void *assignWithCopy for FormatStyle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatStyle()
{
  return &type metadata for FormatStyle;
}

unint64_t sub_1C121C988@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0019BD0(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, __n128))sub_1C121CFDC, (void (*)(uint64_t, unint64_t))sub_1C121C988, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions, a3);
}

void sub_1C121C9E0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v5 = sub_1C151661C();
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA280(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v38 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = sub_1C151631C();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  char v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v38 = v19;
      uint64_t v26 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v25 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_bridgeObjectRetain();
      sub_1BFF58F10(v25);
      sub_1BFF58F10(v25);
      uint64_t v27 = v41;
      sub_1C121C9E0(a1, v25);
      if (v27)
      {
        swift_bridgeObjectRelease();
        sub_1BFF07CD8(v25);
        sub_1BFF07CD8(v25);
        return;
      }
      sub_1BFF07CD8(v25);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v38) == 1)
      {
        swift_bridgeObjectRelease();
        sub_1BFF07CD8(v25);
        sub_1BFE54960((uint64_t)v16, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v40, 1, 1, v38);
        return;
      }
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v38);
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1BFFC514C();
      double v36 = sub_1BFF493E4(v35, v26);
      swift_bridgeObjectRelease();
      swift_release();
      if ((~*(void *)&v36 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_26;
      }
      if (v36 <= -9.22337204e18)
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      if (v36 >= 9.22337204e18)
      {
LABEL_27:
        __break(1u);
        JUMPOUT(0x1C121CFB0);
      }
      sub_1C15165BC();
      sub_1C15160FC();
      swift_bridgeObjectRelease();
      sub_1BFF07CD8(v25);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v5);
      uint64_t v37 = v38;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v38);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v40, 0, 1, v37);
      return;
    case 2uLL:
      uint64_t v28 = v19;
      if (qword_1EB882038 != -1) {
        swift_once();
      }
      uint64_t v29 = (void *)qword_1EB93C7C8;
      uint64_t v30 = (void *)sub_1C151E5EC();
      id v31 = objc_msgSend(v29, sel_dateFromString_, v30);

      if (v31)
      {
        sub_1C15162BC();

        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v28);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v10, 1, 1, v28);
      }
      uint64_t v34 = v40;
      sub_1BFCB311C((uint64_t)v10, (uint64_t)v13);
      sub_1BFCB311C((uint64_t)v13, v34);
      return;
    case 3uLL:
      if (a2 == 0xC000000000000000)
      {
        uint64_t v33 = v40;
        uint64_t v32 = v19;
        sub_1C15162CC();
      }
      else
      {
        uint64_t v32 = v19;
        uint64_t v33 = v40;
        if (a2 == 0xC000000000000008) {
          sub_1C15161DC();
        }
        else {
          sub_1C15161BC();
        }
      }
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v33, 0, 1, v32);
      return;
    default:
      uint64_t v22 = v19;
      uint64_t v23 = v40;
      uint64_t v24 = v41;
      sub_1C121DD9C(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 32), *(unsigned char *)(a2 + 40), v40);
      if (!v24) {
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v23, 0, 1, v22);
      }
      return;
  }
}

void sub_1C121CFDC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v128 = a5;
  uint64_t v100 = a4;
  uint64_t v110 = a3;
  int v114 = (char *)a6;
  uint64_t v115 = a2;
  uint64_t v117 = a1;
  uint64_t v111 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v111);
  uint64_t v105 = (uint64_t *)((char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEEA280(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v108 = (uint64_t)&v98 - v8;
  uint64_t v9 = type metadata accessor for FormatOption();
  uint64_t v106 = *(void *)(v9 - 8);
  uint64_t v107 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v104 = (uint64_t)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v109 = (uint64_t)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA280(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v13 - 8);
  long long v99 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  int v101 = (char *)&v98 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v102 = (uint64_t)&v98 - v18;
  MEMORY[0x1F4188790](v19);
  char v21 = (char *)&v98 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v103 = (char *)&v98 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v98 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v98 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v98 - v31;
  uint64_t v33 = sub_1C151631C();
  uint64_t v112 = *(void *)(v33 - 8);
  uint64_t v113 = v33;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v98 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v98 - v37;
  MEMORY[0x1F4188790](v39);
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v98 - v41;
  MEMORY[0x1F4188790](v43);
  id v46 = (char *)&v98 - v45;
  switch((char)v128)
  {
    case 1:
      uint64_t v55 = v116;
      sub_1C0E47688(*(void *)(v117 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), &v118);
      if (!v55)
      {
        id v56 = objc_msgSend(*((id *)&v121 + 1), sel_publishDate);
        if (v56)
        {
          uint64_t v57 = v56;
          sub_1C15162BC();

          uint64_t v58 = v112;
          uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56);
          uint64_t v60 = v29;
          uint64_t v61 = 0;
        }
        else
        {
          uint64_t v58 = v112;
          uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56);
          uint64_t v60 = v29;
          uint64_t v61 = 1;
        }
        uint64_t v94 = v113;
        v59(v60, v61, 1, v113);
        sub_1BFCB311C((uint64_t)v29, (uint64_t)v32);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v32, 1, v94) == 1)
        {
          sub_1BFE54960((uint64_t)v32, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1C01F0A74((uint64_t)&v118);
        }
        else
        {
          sub_1C01F0A74((uint64_t)&v118);
          uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
          v95(v46, v32, v94);
          v95(v114, v46, v94);
        }
      }
      break;
    case 2:
      uint64_t v62 = v116;
      uint64_t v51 = v109;
      sub_1BFF23670(*(void *)(v117 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), v109);
      if (!v62)
      {
        LOBYTE(v118) = v115;
        sub_1C0021D3C(v51, (uint64_t)v26);
        uint64_t v64 = v112;
        uint64_t v63 = v113;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v26, 1, v113) == 1)
        {
          sub_1BFE54960((uint64_t)v26, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          uint64_t v65 = type metadata accessor for FeedHeadline;
          goto LABEL_26;
        }
        sub_1BFF5B5EC(v51, type metadata accessor for FeedHeadline);
        uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
        v87(v42, v26, v63);
        uint64_t v88 = (uint64_t)v114;
        long long v89 = v42;
        goto LABEL_39;
      }
      break;
    case 3:
      uint64_t v66 = v44;
      uint64_t v67 = v116;
      sub_1BFFB5F74(*(void *)(v117 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v118);
      if (!v67)
      {
        v126[6] = v124;
        v127[0] = v125[0];
        *(_OWORD *)((char *)v127 + 9) = *(_OWORD *)((char *)v125 + 9);
        v126[0] = v118;
        v126[1] = v119;
        v126[2] = v120;
        v126[3] = v121;
        v126[4] = v122;
        v126[5] = v123;
        if (v115)
        {
          id v90 = objc_msgSend((id)v118, sel_sortDate);
          uint64_t v71 = v112;
          uint64_t v70 = v113;
          uint64_t v69 = (uint64_t)v103;
          if (v90)
          {
            uint64_t v91 = v90;
            uint64_t v92 = (uint64_t)v99;
            sub_1C15162BC();

            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v92, 0, 1, v70);
          }
          else
          {
            uint64_t v92 = (uint64_t)v99;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56))(v99, 1, 1, v113);
          }
          sub_1BFCB311C(v92, v69);
        }
        else
        {
          id v68 = objc_msgSend((id)v118, sel_publicationDate);
          uint64_t v69 = (uint64_t)v103;
          sub_1C15162BC();

          uint64_t v71 = v112;
          uint64_t v70 = v113;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v112 + 56))(v69, 0, 1, v113);
        }
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70) == 1)
        {
          sub_1BFE54960(v69, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1C01880A4((uint64_t)v126);
        }
        else
        {
          sub_1C01880A4((uint64_t)v126);
          uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32);
          v97(v66, v69, v70);
          v97((uint64_t)v114, v66, v70);
        }
      }
      break;
    case 4:
      uint64_t v72 = v116;
      sub_1C0E473E0(*(void *)(v117 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v118);
      if (!v72)
      {
        LOBYTE(v126[0]) = v115;
        sub_1C03E7E40((void *)v119, (uint64_t)v21);
        uint64_t v86 = v112;
        uint64_t v85 = v113;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v21, 1, v113) == 1)
        {
          sub_1BFE54960((uint64_t)v21, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1BFEA4290((uint64_t)&v118);
        }
        else
        {
          sub_1BFEA4290((uint64_t)&v118);
          long long v93 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
          v93(v38, v21, v85);
          v93(v114, v38, v85);
        }
      }
      break;
    case 5:
      sub_1C121E840(v117, v115, &OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack, (uint64_t)v114);
      break;
    case 6:
      uint64_t v73 = v116;
      sub_1C0E4755C(*(void *)(v117 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v118);
      if (!v73)
      {
        id v74 = objc_msgSend((id)v119, sel_sportsEventStartTime);
        if (v74)
        {
          long long v75 = v74;
          uint64_t v76 = v101;
          sub_1C15162BC();

          uint64_t v77 = (uint64_t)v76;
          uint64_t v78 = v112;
          uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56);
          uint64_t v80 = v76;
          uint64_t v81 = 0;
        }
        else
        {
          uint64_t v78 = v112;
          uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56);
          uint64_t v77 = (uint64_t)v101;
          uint64_t v80 = v101;
          uint64_t v81 = 1;
        }
        uint64_t v63 = v113;
        v79(v80, v81, 1, v113);
        uint64_t v96 = v102;
        sub_1BFCB311C(v77, v102);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v96, 1, v63) == 1)
        {
          sub_1BFE54960(v96, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
          v87(v35, (char *)v96, v63);
          uint64_t v88 = (uint64_t)v114;
          long long v89 = v35;
LABEL_39:
          v87((char *)v88, v89, v63);
        }
      }
      break;
    default:
      uint64_t v47 = v117;
      uint64_t v48 = v108;
      uint64_t v49 = v115;
      uint64_t v50 = v110;
      FormatOptionCollection.subscript.getter(v115, v110, v108);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v48, 1, v107) == 1)
      {
        sub_1BFE54960(v48, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
        uint64_t v51 = (uint64_t)v105;
        *uint64_t v105 = v49;
        *(void *)(v51 + 8) = v50;
        swift_storeEnumTagMultiPayload();
        char v52 = *(unsigned char *)(v47 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
        sub_1BFE7E51C();
        uint64_t v53 = (void *)swift_allocError();
        sub_1C04A8F1C(v51, v54);
        if (v52)
        {
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BFF5B5EC(v51, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_willThrow();
          uint64_t v65 = (uint64_t (*)(void))type metadata accessor for FormatLayoutError;
LABEL_26:
          sub_1BFF5B5EC(v51, v65);
        }
      }
      else
      {
        uint64_t v82 = v48;
        uint64_t v83 = v104;
        sub_1C00AB068(v82, v104);
        swift_retain();
        uint64_t v84 = v116;
        sub_1BFF28A20(v47, (unint64_t *)&v118);
        swift_release();
        if (!v84)
        {
          sub_1C0E4C938(v118, v49, v50, v100, v47, (uint64_t)v114);
          swift_release();
        }
        sub_1BFF5B5EC(v83, (uint64_t (*)(void))type metadata accessor for FormatOption);
      }
      break;
  }
}

void sub_1C121DD9C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v88 = a3;
  uint64_t v89 = a4;
  uint64_t v94 = a2;
  uint64_t v95 = a1;
  long long v93 = (char *)a6;
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v7 - 8);
  id v90 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA280(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v83 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v85 = (char *)&v82 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v86 = (uint64_t)&v82 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v82 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v87 = (char *)&v82 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v82 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v82 - v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v84 = (uint64_t)&v82 - v27;
  uint64_t v28 = sub_1C151631C();
  uint64_t v91 = *(void *)(v28 - 8);
  uint64_t v92 = v28;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v82 - v32;
  MEMORY[0x1F4188790](v34);
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v82 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v41 = (char *)&v82 - v40;
  switch(a5)
  {
    case 1:
      uint64_t v42 = v106;
      sub_1C027E5D4();
      if (!v42)
      {
        id v64 = objc_msgSend(*((id *)&v99 + 1), sel_publishDate);
        if (v64)
        {
          uint64_t v65 = v64;
          sub_1C15162BC();

          uint64_t v66 = v91;
          uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56);
          id v68 = v25;
          uint64_t v69 = 0;
        }
        else
        {
          uint64_t v66 = v91;
          uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56);
          id v68 = v25;
          uint64_t v69 = 1;
        }
        uint64_t v78 = v92;
        v67(v68, v69, 1, v92);
        uint64_t v79 = v84;
        sub_1BFCB311C((uint64_t)v25, v84);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v79, 1, v78) == 1)
        {
          sub_1BFE54960(v79, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1C01F0A74((uint64_t)&v96);
        }
        else
        {
          sub_1C01F0A74((uint64_t)&v96);
          uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 32);
          v80(v41, v79, v78);
          v80(v93, (uint64_t)v41, v78);
        }
      }
      break;
    case 2:
      uint64_t v43 = (uint64_t)v90;
      uint64_t v44 = v106;
      sub_1BFF835C4();
      if (!v44)
      {
        LOBYTE(v96) = v94;
        sub_1C0021D3C(v43, (uint64_t)v22);
        uint64_t v46 = v91;
        uint64_t v45 = v92;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v22, 1, v92) == 1)
        {
          sub_1BFE54960((uint64_t)v22, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1BFF5B5EC(v43, type metadata accessor for FeedHeadline);
        }
        else
        {
          sub_1BFF5B5EC(v43, type metadata accessor for FeedHeadline);
          uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
          v70(v37, v22, v45);
          v70(v93, v37, v45);
        }
      }
      break;
    case 3:
      uint64_t v47 = v39;
      uint64_t v48 = v106;
      sub_1C027E3E0();
      if (!v48)
      {
        v104[6] = v102;
        v105[0] = v103[0];
        *(_OWORD *)((char *)v105 + 9) = *(_OWORD *)((char *)v103 + 9);
        v104[0] = v96;
        v104[1] = v97;
        v104[2] = v98;
        v104[3] = v99;
        v104[4] = v100;
        v104[5] = v101;
        if (v94)
        {
          id v71 = objc_msgSend((id)v96, sel_sortDate);
          uint64_t v52 = v91;
          uint64_t v51 = v92;
          uint64_t v50 = (uint64_t)v87;
          if (v71)
          {
            uint64_t v72 = v71;
            uint64_t v73 = (uint64_t)v83;
            sub_1C15162BC();

            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v73, 0, 1, v51);
          }
          else
          {
            uint64_t v73 = (uint64_t)v83;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56))(v83, 1, 1, v92);
          }
          sub_1BFCB311C(v73, v50);
        }
        else
        {
          id v49 = objc_msgSend((id)v96, sel_publicationDate);
          uint64_t v50 = (uint64_t)v87;
          sub_1C15162BC();

          uint64_t v52 = v91;
          uint64_t v51 = v92;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(v50, 0, 1, v92);
        }
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51) == 1)
        {
          sub_1BFE54960(v50, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1C01880A4((uint64_t)v104);
        }
        else
        {
          sub_1C01880A4((uint64_t)v104);
          uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32);
          v81(v47, v50, v51);
          v81((uint64_t)v93, v47, v51);
        }
      }
      break;
    case 4:
      uint64_t v53 = v106;
      sub_1C027E464((uint64_t)&v96);
      if (!v53)
      {
        LOBYTE(v104[0]) = v94;
        sub_1C03E7E40((void *)v97, (uint64_t)v17);
        uint64_t v55 = v91;
        uint64_t v54 = v92;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v17, 1, v92) == 1)
        {
          sub_1BFE54960((uint64_t)v17, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1BFEA4290((uint64_t)&v96);
        }
        else
        {
          sub_1BFEA4290((uint64_t)&v96);
          id v74 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
          v74(v33, v17, v54);
          v74(v93, v33, v54);
        }
      }
      break;
    case 5:
      sub_1C121F254(v94, (uint64_t)v93);
      break;
    case 6:
      uint64_t v56 = v106;
      sub_1C027E438();
      if (!v56)
      {
        id v57 = objc_msgSend((id)v97, sel_sportsEventStartTime);
        if (v57)
        {
          uint64_t v58 = v57;
          uint64_t v59 = (uint64_t)v85;
          sub_1C15162BC();

          uint64_t v60 = v91;
          uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56);
          uint64_t v62 = (char *)v59;
          uint64_t v63 = 0;
        }
        else
        {
          uint64_t v60 = v91;
          uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56);
          uint64_t v59 = (uint64_t)v85;
          uint64_t v62 = v85;
          uint64_t v63 = 1;
        }
        uint64_t v75 = v92;
        v61(v62, v63, 1, v92);
        uint64_t v76 = v86;
        sub_1BFCB311C(v59, v86);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v76, 1, v75) == 1)
        {
          sub_1BFE54960(v76, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 32);
          v77(v30, v76, v75);
          v77(v93, (uint64_t)v30, v75);
        }
      }
      break;
    default:
      sub_1C124DBE0(v95, v94, v88, v89, (uint64_t)v93);
      break;
  }
}

unint64_t FormatBindingDateTimeExpression.logic.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF8401C(v2, v3);
}

void sub_1C121E840(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v54 = a4;
  int v56 = a2;
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v55 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA280(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v9 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v53 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v53 - v14;
  MEMORY[0x1F4188790](v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v53 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v53 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v53 - v26;
  switch(a2 >> 5)
  {
    case 1:
      uint64_t v32 = v55;
      uint64_t v33 = v67;
      sub_1BFF23670(*(void *)(a1 + *a3), v55);
      if (!v33)
      {
        LOBYTE(v57) = v56 & 0x1F;
        sub_1C0021D3C(v32, (uint64_t)v19);
        uint64_t v34 = sub_1C151631C();
        uint64_t v35 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v19, 1, v34) == 1)
        {
          sub_1BFE54960((uint64_t)v19, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1BFF5B5EC(v32, type metadata accessor for FeedHeadline);
        }
        else
        {
          sub_1BFF5B5EC(v32, type metadata accessor for FeedHeadline);
          (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v54, v19, v34);
        }
      }
      return;
    case 2:
      uint64_t v36 = v25;
      uint64_t v37 = v24;
      uint64_t v38 = v67;
      sub_1BFFB5F74(*(void *)(a1 + *a3), (uint64_t)&v57);
      if (v38) {
        return;
      }
      v65[6] = v63;
      v66[0] = v64[0];
      *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)((char *)v64 + 9);
      v65[0] = v57;
      v65[1] = v58;
      v65[2] = v59;
      v65[3] = v60;
      v65[4] = v61;
      v65[5] = v62;
      if (v56)
      {
        id v50 = objc_msgSend((id)v57, sel_sortDate);
        if (v50)
        {
          uint64_t v51 = v50;
          sub_1C15162BC();

          uint64_t v40 = sub_1C151631C();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v36, 0, 1, v40);
        }
        else
        {
          uint64_t v40 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v36, 1, 1, v40);
        }
        sub_1BFCB311C(v36, v37);
        sub_1C151631C();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v37, 1, v40) != 1) {
          goto LABEL_30;
        }
LABEL_29:
        sub_1BFE54960(v37, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        type metadata accessor for FormatLayoutError();
        sub_1BFE7E51C();
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1C01880A4((uint64_t)v65);
        return;
      }
      id v39 = objc_msgSend((id)v57, sel_publicationDate);
      sub_1C15162BC();

      uint64_t v40 = sub_1C151631C();
      uint64_t v41 = *(void *)(v40 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v40);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v37, 1, v40) == 1) {
        goto LABEL_29;
      }
LABEL_30:
      sub_1C01880A4((uint64_t)v65);
      sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32))(v54, v37, v40);
      return;
    case 3:
      uint64_t v42 = v67;
      sub_1C0E473E0(*(void *)(a1 + *a3), (uint64_t)&v57);
      if (!v42)
      {
        LOBYTE(v65[0]) = v56 & 0x1F;
        sub_1C03E7E40((void *)v58, (uint64_t)v15);
        uint64_t v43 = sub_1C151631C();
        uint64_t v44 = *(void *)(v43 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v15, 1, v43) == 1)
        {
          sub_1BFE54960((uint64_t)v15, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1BFEA4290((uint64_t)&v57);
        }
        else
        {
          sub_1BFEA4290((uint64_t)&v57);
          (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v54, v15, v43);
        }
      }
      return;
    case 4:
      uint64_t v45 = v67;
      sub_1C098CEE0(*(void *)(a1 + *a3 + 8), &v57);
      if (!v45)
      {
        uint64_t v46 = (void *)v57;
        LOBYTE(v57) = v56 & 0x1F;
        id v47 = FCFeedDescriptor.feedTag.getter();
        sub_1C03E7E40(v47, (uint64_t)v12);
        swift_unknownObjectRelease();
        uint64_t v48 = sub_1C151631C();
        uint64_t v49 = *(void *)(v48 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v12, 1, v48) == 1)
        {
          sub_1BFE54960((uint64_t)v12, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
        }
        else
        {

          (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v54, v12, v48);
        }
      }
      return;
    default:
      uint64_t v28 = v67;
      sub_1C0E47688(*(void *)(a1 + *a3), &v57);
      if (!v28)
      {
        id v29 = objc_msgSend(*((id *)&v60 + 1), sel_publishDate);
        if (v29)
        {
          uint64_t v30 = v29;
          sub_1C15162BC();

          uint64_t v31 = sub_1C151631C();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v22, 0, 1, v31);
        }
        else
        {
          uint64_t v31 = sub_1C151631C();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v22, 1, 1, v31);
        }
        sub_1BFCB311C((uint64_t)v22, (uint64_t)v27);
        sub_1C151631C();
        uint64_t v52 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v27, 1, v31) == 1)
        {
          sub_1BFE54960((uint64_t)v27, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1C01F0A74((uint64_t)&v57);
        }
        else
        {
          sub_1C01F0A74((uint64_t)&v57);
          (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v54, v27, v31);
        }
      }
      return;
  }
}

void sub_1C121F254(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  int v57 = a1;
  uint64_t v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA280(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v6 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v45 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v45 - v11;
  MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v45 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v45 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v45 - v23;
  switch(a1 >> 5)
  {
    case 1:
      uint64_t v28 = (uint64_t)v46;
      sub_1BFF835C4();
      if (!v2)
      {
        LOBYTE(v47) = v57 & 0x1F;
        sub_1C0021D3C(v28, (uint64_t)v16);
        uint64_t v29 = sub_1C151631C();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v16, 1, v29) == 1)
        {
          sub_1BFE54960((uint64_t)v16, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1BFF5B5EC(v28, type metadata accessor for FeedHeadline);
        }
        else
        {
          sub_1BFF5B5EC(v28, type metadata accessor for FeedHeadline);
          (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v45, v16, v29);
        }
      }
      return;
    case 2:
      uint64_t v31 = v22;
      uint64_t v32 = v21;
      sub_1C027E3E0();
      if (v2) {
        return;
      }
      v55[6] = v53;
      v56[0] = v54[0];
      *(_OWORD *)((char *)v56 + 9) = *(_OWORD *)((char *)v54 + 9);
      v55[0] = v47;
      v55[1] = v48;
      v55[2] = v49;
      v55[3] = v50;
      v55[4] = v51;
      v55[5] = v52;
      if (v57)
      {
        id v42 = objc_msgSend((id)v47, sel_sortDate);
        if (v42)
        {
          uint64_t v43 = v42;
          sub_1C15162BC();

          uint64_t v34 = sub_1C151631C();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v31, 0, 1, v34);
        }
        else
        {
          uint64_t v34 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v31, 1, 1, v34);
        }
        sub_1BFCB311C(v31, v32);
        sub_1C151631C();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v32, 1, v34) != 1) {
          goto LABEL_30;
        }
LABEL_29:
        sub_1BFE54960(v32, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        type metadata accessor for FormatLayoutError();
        sub_1BFE7E51C();
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1C01880A4((uint64_t)v55);
        return;
      }
      id v33 = objc_msgSend((id)v47, sel_publicationDate);
      sub_1C15162BC();

      uint64_t v34 = sub_1C151631C();
      uint64_t v35 = *(void *)(v34 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34) == 1) {
        goto LABEL_29;
      }
LABEL_30:
      sub_1C01880A4((uint64_t)v55);
      sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v45, v32, v34);
      return;
    case 3:
      sub_1C027E464((uint64_t)&v47);
      if (!v2)
      {
        LOBYTE(v55[0]) = v57 & 0x1F;
        sub_1C03E7E40((void *)v48, (uint64_t)v12);
        uint64_t v36 = sub_1C151631C();
        uint64_t v37 = *(void *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v12, 1, v36) == 1)
        {
          sub_1BFE54960((uint64_t)v12, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1BFEA4290((uint64_t)&v47);
        }
        else
        {
          sub_1BFEA4290((uint64_t)&v47);
          (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v45, v12, v36);
        }
      }
      return;
    case 4:
      sub_1C027E6B0(&v47);
      if (!v2)
      {
        uint64_t v38 = (void *)v47;
        LOBYTE(v47) = v57 & 0x1F;
        id v39 = FCFeedDescriptor.feedTag.getter();
        sub_1C03E7E40(v39, (uint64_t)v9);
        swift_unknownObjectRelease();
        uint64_t v40 = sub_1C151631C();
        uint64_t v41 = *(void *)(v40 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v9, 1, v40) == 1)
        {
          sub_1BFE54960((uint64_t)v9, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
        }
        else
        {

          (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v45, v9, v40);
        }
      }
      return;
    default:
      sub_1C027E5D4();
      if (!v2)
      {
        id v25 = objc_msgSend(*((id *)&v50 + 1), sel_publishDate);
        if (v25)
        {
          uint64_t v26 = v25;
          sub_1C15162BC();

          uint64_t v27 = sub_1C151631C();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v19, 0, 1, v27);
        }
        else
        {
          uint64_t v27 = sub_1C151631C();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v19, 1, 1, v27);
        }
        sub_1BFCB311C((uint64_t)v19, (uint64_t)v24);
        sub_1C151631C();
        uint64_t v44 = *(void *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v27) == 1)
        {
          sub_1BFE54960((uint64_t)v24, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1C01F0A74((uint64_t)&v47);
        }
        else
        {
          sub_1C01F0A74((uint64_t)&v47);
          (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v45, v24, v27);
        }
      }
      return;
  }
}

unint64_t FormatBindingDateTimeExpression.dateTime.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1BFF58F10(v2);
}

unint64_t FormatBindingDateTimeExpression.logic.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  unint64_t result = sub_1C00197B8(*(void *)(v1 + 8), *(void *)(v1 + 16));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t (*FormatBindingDateTimeExpression.logic.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C121FC88(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  sub_1BFEEA280(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1BFF58F10(a2);
  sub_1C121C988(a1, a2, (uint64_t)v10);
  sub_1BFF07CD8(a2);
  sub_1BFF8401C(a3, a4);
  LOBYTE(a1) = sub_1C0019800((uint64_t)v10, a1, a3, a4, (void (*)(uint64_t, unint64_t))sub_1C121C988);
  sub_1C00197B8(a3, a4);
  sub_1BFE54960((uint64_t)v10, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  return a1 & 1;
}

uint64_t sub_1C121FDD0(void *a1)
{
  return FormatBindingDateTimeExpression.encode(to:)(a1);
}

BOOL _s8NewsFeed31FormatBindingDateTimeExpressionV2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = a1[2];
  unint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  unint64_t v6 = a2[2];
  v10[0] = *a1;
  v9[0] = v4;
  if ((static FormatDateTime.== infix(_:_:)(v10, v9) & 1) == 0) {
    return 0;
  }
  if (v2 == 12)
  {
    if (v5 == 12)
    {
LABEL_7:
      sub_1C00197B8(v2, v3);
      sub_1C00197B8(v5, v6);
      sub_1C00197B8(v2, v3);
      return 1;
    }
LABEL_9:
    sub_1BFF8401C(v5, v6);
    sub_1BFF8401C(v2, v3);
    sub_1C00197B8(v2, v3);
    sub_1C00197B8(v5, v6);
    return 0;
  }
  if (v2 == 13)
  {
    if (v5 != 13) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  if ((v5 & 0xFE) == 0xC) {
    goto LABEL_9;
  }
  LOBYTE(v10[0]) = v2;
  v10[1] = v3;
  LOBYTE(v9[0]) = v5;
  v9[1] = v6;
  sub_1BFF8401C(v2, v3);
  sub_1BFF8401C(v5, v6);
  sub_1BFF8401C(v5, v6);
  sub_1BFF8401C(v2, v3);
  sub_1BFF8401C(v5, v6);
  sub_1BFF8401C(v2, v3);
  char v8 = _s8NewsFeed43FormatBindingDateTimeExpressionLogicCompareV2eeoiySbAC_ACtFZ_0((uint64_t)v10, (char *)v9);
  sub_1C00197B8(v2, v3);
  sub_1C00197B8(v5, v6);
  sub_1C00197B8(v5, v6);
  sub_1C00197B8(v2, v3);
  sub_1C00197B8(v5, v6);
  sub_1C00197B8(v2, v3);
  return (v8 & 1) != 0;
}

unint64_t sub_1C121FFA0(uint64_t a1)
{
  unint64_t result = sub_1C121FFC8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C121FFC8()
{
  unint64_t result = qword_1EA1AD230;
  if (!qword_1EA1AD230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD230);
  }
  return result;
}

unint64_t sub_1C122001C(void *a1)
{
  a1[1] = sub_1BFDECA38();
  a1[2] = sub_1C08FF824();
  unint64_t result = sub_1C1220054();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1220054()
{
  unint64_t result = qword_1EA1AD238;
  if (!qword_1EA1AD238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD238);
  }
  return result;
}

unint64_t sub_1C12200A8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *(void *)(a1 + 8);
  unint64_t v2 = *(void *)(a1 + 16);
  *a2 = v3;
  a2[1] = v2;
  return sub_1BFF8401C(v3, v2);
}

unint64_t sub_1C12200B8(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  unint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  sub_1BFF8401C(*a1, v4);
  unint64_t result = sub_1C00197B8(v5, v6);
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  return result;
}

unint64_t destroy for FormatBindingDateTimeExpression(unint64_t *a1)
{
  unint64_t result = sub_1BFF07CD8(*a1);
  if ((a1[1] & 0xFE) != 0xC)
  {
    unint64_t v3 = a1[2];
    return sub_1BFF07CD8(v3);
  }
  return result;
}

uint64_t _s8NewsFeed31FormatBindingDateTimeExpressionVwCP_0(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_1BFF58F10(*a2);
  *(void *)a1 = v4;
  unint64_t v5 = a2[1];
  if ((v5 & 0xFE) == 0xC)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  }
  else
  {
    *(unsigned char *)(a1 + 8) = v5;
    unint64_t v6 = a2[2];
    sub_1BFF58F10(v6);
    *(void *)(a1 + 16) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for FormatBindingDateTimeExpression(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_1BFF58F10(*a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_1BFF07CD8(v5);
  unint64_t v6 = a2[1];
  uint64_t v7 = v6 & 0xFE;
  if ((*(void *)(a1 + 8) & 0xFELL) != 0xC)
  {
    if (v7 != 12)
    {
      *(unsigned char *)(a1 + 8) = v6;
      unint64_t v9 = a2[2];
      sub_1BFF58F10(v9);
      unint64_t v10 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v9;
      sub_1BFF07CD8(v10);
      return a1;
    }
    sub_1C12202A0(a1 + 8);
    goto LABEL_6;
  }
  if (v7 == 12)
  {
LABEL_6:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  *(unsigned char *)(a1 + 8) = v6;
  unint64_t v8 = a2[2];
  sub_1BFF58F10(v8);
  *(void *)(a1 + 16) = v8;
  return a1;
}

uint64_t sub_1C12202A0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatBindingDateTimeExpression(uint64_t a1, void *a2)
{
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *a2;
  sub_1BFF07CD8(v4);
  if ((*(void *)(a1 + 8) & 0xFELL) != 0xC)
  {
    if ((a2[1] & 0xFELL) != 0xC)
    {
      *(unsigned char *)(a1 + 8) = a2[1];
      unint64_t v5 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = a2[2];
      sub_1BFF07CD8(v5);
      return a1;
    }
    sub_1C12202A0(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingDateTimeExpression()
{
  return &type metadata for FormatBindingDateTimeExpression;
}

uint64_t FormatColorOrExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  swift_retain();
  FormatColorExpression.bindChildren(binder:context:)(a1, a2);
  uint64_t result = swift_release();
  if (!v2)
  {
    swift_retain();
    FormatColorExpression.bindChildren(binder:context:)(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t FormatColorOrExpression.lhsExpression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatColorOrExpression.rhsExpression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1C122045C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatColorOrExpression.init(from:)(a1, a2);
}

uint64_t sub_1C1220474(void *a1)
{
  return FormatColorOrExpression.encode(to:)(a1);
}

uint64_t sub_1C122048C(uint64_t a1, uint64_t a2)
{
  return FormatColorOrExpression.bindChildren(binder:context:)(a1, a2);
}

unint64_t sub_1C12204C0(uint64_t a1)
{
  unint64_t result = sub_1C12204E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12204E8()
{
  unint64_t result = qword_1EA1AD240;
  if (!qword_1EA1AD240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD240);
  }
  return result;
}

unint64_t sub_1C122053C(void *a1)
{
  a1[1] = sub_1C087C56C();
  a1[2] = sub_1C08FDC0C();
  unint64_t result = sub_1C1220574();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1220574()
{
  unint64_t result = qword_1EA1AD248;
  if (!qword_1EA1AD248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD248);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColorOrExpression()
{
  return &type metadata for FormatColorOrExpression;
}

uint64_t sub_1C12205D8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1C0191B08();
    uint64_t v2 = sub_1C152050C();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1BFF993A8(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1BFF993A8(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1BFF993A8(v36, v37);
    sub_1BFF993A8(v37, &v33);
    uint64_t result = sub_1C152004C();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1BFF993A8(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1BFEFB808();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_1C122099C(uint64_t a1, uint64_t a2)
{
  void (*v3)(void *__return_ptr, long long *);
  uint64_t v4;
  void *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void v12[3];
  uint64_t v13;
  long long v14;
  long long v15;
  uint64_t vars8;

  uint64_t v3 = *(void (**)(void *__return_ptr, long long *))(a1 + 32);
  if (a2)
  {
    *((void *)&v15 + 1) = swift_getObjectType();
    *(void *)&unint64_t v14 = a2;
  }
  else
  {
    unint64_t v14 = 0u;
    int64_t v15 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v3(v12, &v14);
  swift_release();
  sub_1BFEFDBF0((uint64_t)&v14, (uint64_t)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFE99DF4);
  uint64_t v4 = v13;
  if (v13)
  {
    unint64_t v5 = __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v7 = MEMORY[0x1F4188790](v5);
    unint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v6 + 16))(v9, v7);
    uint64_t v10 = (void *)sub_1C1520A7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    uint64_t v10 = 0;
  }
  return v10;
}

uint64_t sub_1C1220B58()
{
  return 0x735F796C696D6166;
}

void *FamilySharingStatusManager.__allocating_init(database:familyEigibilityProvider:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_1C1222870(a1, a2);
  swift_release();
  swift_unknownObjectRelease();
  return v4;
}

void *FamilySharingStatusManager.init(database:familyEigibilityProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1C1222870(a1, a2);
  swift_release();
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1C1220C28@<X0>(uint64_t *a1@<X8>)
{
  sub_1C1518CEC();
  sub_1C12238A4();
  swift_allocObject();
  uint64_t result = sub_1C1519A8C();
  *a1 = result;
  return result;
}

uint64_t sub_1C1220CB8()
{
  sub_1C15182FC();
  swift_retain();
  sub_1C15182EC();
  return swift_release();
}

uint64_t sub_1C1220D1C(uint64_t a1)
{
  sub_1C1221A20(v4);
  unint64_t v2 = *(void *)(a1 + 88);
  v4[0] = *(void *)(a1 + 80);
  v4[1] = v2;
  swift_bridgeObjectRetain();
  sub_1C15183CC();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1220D90()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C15183CC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C1220DF8()
{
  return sub_1C151911C();
}

void sub_1C1220E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F61858]), sel_init);
  if (qword_1EB894330 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB93CBB8;
  sub_1C151F38C();
  sub_1C15197BC();

  unint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a1;
  v12[6] = a2;
  v14[4] = sub_1C1223620;
  void v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1C10AF224;
  v14[3] = &block_descriptor_97;
  int64_t v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_startRequestWithCompletionHandler_, v13);
  _Block_release(v13);
}

void sub_1C1221018(void *a1, void *a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (qword_1EB894330 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EB93CBB8;
  sub_1C151F38C();
  sub_1C15197BC();

  if (a2)
  {
    unint64_t v14 = (void *)qword_1EB93CBB8;
    id v15 = a2;
    id v16 = v14;
    sub_1C151F36C();
    sub_1BFFDEB20();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    sub_1C152036C();
    *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v17 + 64) = sub_1BFE9C558();
    *(void *)(v17 + 32) = 0;
    *(void *)(v17 + 40) = 0xE000000000000000;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    ((void (*)(void *))a3)(a2);
  }
  else if (a1)
  {
    id v18 = a1;
    sub_1C122135C(v18, &aBlock);
    uint64_t v19 = aBlock;
    uint64_t v20 = v28;
    id v21 = objc_msgSend(*(id *)(a5 + 64), sel_requestFamilyEligibility);
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    char v23 = (void *)swift_allocObject();
    v23[2] = v22;
    v23[3] = v19;
    v23[4] = v20;
    v23[5] = a6;
    v23[6] = a7;
    uint64_t v31 = sub_1C12236FC;
    uint64_t v32 = v23;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v28 = 1107296256;
    long long v29 = sub_1C122099C;
    long long v30 = &block_descriptor_20_0;
    unint64_t v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v25 = objc_msgSend(v21, sel_then_, v24);
    _Block_release(v24);
  }
  else
  {
    sub_1C1223630();
    uint64_t v26 = (void *)swift_allocError();
    a3();
  }
}

void sub_1C122135C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_members);
  sub_1BFC39268(0, &qword_1EB894540);
  unint64_t v5 = sub_1C151EBCC();

  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
    uint64_t v12 = 2;
    goto LABEL_14;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v7 = 4;
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x1C18C7CB0](v7 - 4, v5);
    }
    else {
      id v8 = *(id *)(v5 + 8 * v7);
    }
    unint64_t v9 = v8;
    uint64_t v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    if (objc_msgSend(v8, sel_isMe)) {
      break;
    }

    ++v7;
    if (v10 == v6) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  unsigned int v13 = objc_msgSend(v9, sel_isOrganizer);
  id v14 = objc_msgSend(a1, sel_members);
  unint64_t v15 = sub_1C151EBCC();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C15204BC();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v11 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v13;
LABEL_14:
  *a2 = v12;
  a2[1] = v11;
}

double sub_1C122153C@<D0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, void (*a4)(id *)@<X4>, _OWORD *a5@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    sub_1BFC816B4(a1, (uint64_t)&v25);
    if (v27)
    {
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
      if (swift_dynamicCast())
      {
        uint64_t v12 = a4;
        unsigned int v13 = objc_msgSend(v23, sel_BOOLValue);

        id v14 = (void *)v13;
        goto LABEL_7;
      }
    }
    else
    {
      sub_1BFEFDBF0((uint64_t)&v25, (uint64_t)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFE99DF4);
    }
    uint64_t v12 = a4;
    id v14 = 0;
LABEL_7:
    if (a2 == 2) {
      unint64_t v15 = v14;
    }
    else {
      unint64_t v15 = (void *)(a2 & 1 | 0x8000000000000000);
    }
    if (a2 == 2) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = a3;
    }
    sub_1C15194CC();
    if (v25 >> 1 != 0xFFFFFFFF)
    {
      if ((v25 & 0x8000000000000000) != 0)
      {
        if (a2 != 2 && ((a2 & 1) != 0) != ((v25 & 1) == 0) && v26 == a3) {
          goto LABEL_22;
        }
      }
      else if (a2 == 2 && (v14 != 0) != ((v25 & 1) == 0))
      {
LABEL_22:
        id v23 = v15;
        uint64_t v24 = v16;
        v12(&v23);
        swift_release();
        goto LABEL_23;
      }
    }
    unint64_t v25 = (unint64_t)v15;
    uint64_t v26 = v16;
    sub_1C15194DC();
    swift_beginAccess();
    if (MEMORY[0x1C18C9C60](v11 + 16))
    {
      uint64_t v17 = *(void *)(v11 + 24);
      uint64_t ObjectType = swift_getObjectType();
      id v23 = v15;
      uint64_t v24 = v16;
      uint64_t v19 = *(void (**)(uint64_t, _UNKNOWN **, id *, uint64_t, uint64_t))(v17 + 8);
      uint64_t v20 = swift_retain();
      v19(v20, &protocol witness table for FamilySharingStatusManager, &v23, ObjectType, v17);
      swift_unknownObjectRelease();
      swift_release();
    }
    id v23 = v15;
    uint64_t v24 = v16;
    sub_1C1222DB0(&v23);
    sub_1C15182FC();
    id v21 = (void *)swift_allocObject();
    _OWORD v21[2] = v11;
    v21[3] = v15;
    v21[4] = v16;
    swift_retain();
    sub_1C15182EC();
    swift_release();
    goto LABEL_22;
  }
LABEL_23:
  double result = 0.0;
  *a5 = 0u;
  a5[1] = 0u;
  return result;
}

uint64_t sub_1C1221820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1518CEC();
  sub_1C122356C(0, (unint64_t *)&unk_1EB86FE18, (uint64_t (*)(uint64_t))sub_1C1223750, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v7 = *(void *)(a1 + 56);
  *(void *)(inited + 32) = *(void *)(a1 + 48);
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain();
  sub_1C018FD54(inited);
  sub_1C1519A7C();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C1221A20(unint64_t *a1@<X8>)
{
  id v4 = v1;
  uint64_t v6 = sub_1C151E24C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *unint64_t v9 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBD8], v6);
  char v10 = sub_1C151E26C();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    swift_once();
    id v13 = (id)qword_1EB93CBB8;
    sub_1C151F36C();
    sub_1BFFDEB20();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = v20;
    *(void *)&unsigned long long v21 = 0;
    *((void *)&v21 + 1) = 0xE000000000000000;
    id v23 = v4;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    sub_1C152036C();
    unsigned long long v15 = v21;
    *(void *)(v14 + 56) = v9;
    *(void *)(v14 + 64) = sub_1BFE9C558();
    *(_OWORD *)(v14 + 32) = v15;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1C15194CC();
  unint64_t v3 = *((void *)&v21 + 1);
  unint64_t v2 = v21;
  if ((unint64_t)v21 >> 1 != 0xFFFFFFFF)
  {
LABEL_8:
    *a1 = v2;
    a1[1] = v3;
    return;
  }
  sub_1C1518CEC();
  sub_1BFE99DF4(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  long long v20 = xmmword_1C1529AE0;
  *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
  uint64_t v12 = v4[7];
  *(void *)(v11 + 32) = v4[6];
  *(void *)(v11 + 40) = v12;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C1519A6C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1BFE4E9CC(v16);
  if ((v19 & 1) == 0)
  {
    if (*(_DWORD *)(v16 + 36) == v18)
    {
      if (v17 == 1 << *(unsigned char *)(v16 + 32))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C12227E8(&v22, v17, v18, 0, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v3 = *((void *)&v22 + 1);
        unint64_t v2 = v22;
        unsigned long long v21 = v22;
        sub_1C15194DC();
        unsigned long long v21 = __PAIR128__(v3, v2);
        sub_1C1222DB0(&v21);
      }
      goto LABEL_8;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1C1221DC0()
{
  uint64_t v1 = sub_1C151E17C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 88);
  v10[0] = *(void *)(v0 + 80);
  v10[1] = v5;
  swift_bridgeObjectRetain();
  sub_1C15183CC();
  swift_bridgeObjectRelease();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCB28], v1);
  uint64_t v6 = (void *)sub_1C151F5BC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  type metadata accessor for FamilySharingStatusManager();
  sub_1C151900C();
  swift_release();

  uint64_t v7 = (void *)sub_1C1518E7C();
  uint64_t v8 = sub_1C15190CC();
  swift_release();

  return v8;
}

uint64_t sub_1C1221F9C(void *a1)
{
  if ((*a1 & 0x8000000000000000) != 0)
  {
    if (qword_1EA194B28 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C15198DC();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EA2B5360);
    uint64_t v2 = sub_1C15198AC();
    os_log_type_t v6 = sub_1C151F38C();
    if (os_log_type_enabled(v2, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 67109120;
      sub_1C151FE1C();
      _os_log_impl(&dword_1BFC31000, v2, v6, "Family status: member isOrganizer: %{BOOL}d. Opening  showFamilySettings", v7, 8u);
      MEMORY[0x1C18C9B00](v7, -1, -1);
    }
  }
  else
  {
    if (qword_1EA194B28 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1C15198DC();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EA2B5360);
    uint64_t v2 = sub_1C15198AC();
    os_log_type_t v3 = sub_1C151F38C();
    if (os_log_type_enabled(v2, v3))
    {
      id v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v4 = 67109120;
      sub_1C151FE1C();
      _os_log_impl(&dword_1BFC31000, v2, v3, "Family status: none eligibility: %{BOOL}d. Opening setupFamily.", v4, 8u);
      MEMORY[0x1C18C9B00](v4, -1, -1);
    }
  }

  sub_1C12232DC();
  sub_1BFE99DF4(0, (unint64_t *)&qword_1EB863EB8, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C1222268(void *a1)
{
  if (qword_1EA194B28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA2B5360);
  id v3 = a1;
  id v4 = a1;
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F38C();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = a1;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    sub_1C151FE1C();
    *uint64_t v8 = v11;

    _os_log_impl(&dword_1BFC31000, v5, v6, "Family status error: %@. Skipping opening system settings.", v7, 0xCu);
    sub_1C01DA31C();
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v8, -1, -1);
    MEMORY[0x1C18C9B00](v7, -1, -1);
  }
  else
  {
  }
  sub_1BFE99DF4(0, (unint64_t *)&qword_1EB863EB8, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t FamilySharingStatusManager.deinit()
{
  sub_1C019B9B4(v0 + 16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FamilySharingStatusManager.__deallocating_deinit()
{
  sub_1C019B9B4(v0 + 16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall FamilySharingStatusManager.sceneWillEnterForeground()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151635C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151634C();
  uint64_t v6 = sub_1C151633C();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(v1 + 80) = v6;
  *(void *)(v1 + 88) = v8;
  swift_bridgeObjectRelease();
  sub_1C15182FC();
  swift_retain();
  sub_1C15182EC();
  swift_release();
}

uint64_t sub_1C1222644()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12226BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151635C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151634C();
  uint64_t v6 = sub_1C151633C();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(v1 + 80) = v6;
  *(void *)(v1 + 88) = v8;
  swift_bridgeObjectRelease();
  sub_1C15182FC();
  swift_retain();
  sub_1C15182EC();
  return swift_release();
}

_OWORD *sub_1C12227E8(_OWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    *double result = *(_OWORD *)(*(void *)(a5 + 56) + 16 * a2);
    swift_bridgeObjectRetain();
    return (_OWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

void *sub_1C1222870(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)v2;
  uint64_t v23 = a2;
  uint64_t v27 = a1;
  uint64_t v26 = sub_1C151804C();
  uint64_t v22 = *(void *)(v26 - 8);
  uint64_t v24 = v22;
  MEMORY[0x1F4188790](v26);
  unint64_t v25 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151635C();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C15189FC();
  MEMORY[0x1F4188790](v8);
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  long long v28 = xmmword_1C15D8FC0;
  sub_1C12237B8();
  swift_allocObject();
  *(void *)(v2 + 32) = sub_1C15194FC();
  strcpy((char *)(v2 + 48), "familyStatus");
  *(unsigned char *)(v2 + 61) = 0;
  *(_WORD *)(v2 + 62) = -5120;
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAACC8];
  char v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C122356C(0, (unint64_t *)&unk_1EB894590, MEMORY[0x1E4FAACC8], MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  long long v18 = xmmword_1C1529AE0;
  *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
  sub_1C15189EC();
  *(void *)&long long v28 = v10;
  sub_1BFCF0A6C((unint64_t *)&unk_1EB871420, MEMORY[0x1E4FAACC8]);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C122356C(0, (unint64_t *)&unk_1EB879C50, v9, MEMORY[0x1E4FBB320]);
  sub_1BFCB4EEC((unint64_t *)&qword_1EB879C60, (unint64_t *)&unk_1EB879C50, v9);
  sub_1C151FFBC();
  sub_1C1223834();
  swift_allocObject();
  v3[9] = sub_1C15183BC();
  sub_1C151634C();
  uint64_t v12 = sub_1C151633C();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
  v3[10] = v12;
  v3[11] = v14;
  v3[8] = v23;
  unsigned long long v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
  sub_1C122356C(0, &qword_1EB882708, MEMORY[0x1E4FAA910], v19);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v18;
  swift_unknownObjectRetain();
  sub_1C151803C();
  *(void *)&long long v28 = v16;
  sub_1BFCF0A6C((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
  sub_1C122356C(0, (unint64_t *)&qword_1EB879C30, v15, v11);
  sub_1BFCB4EEC((unint64_t *)&qword_1EB879C40, (unint64_t *)&qword_1EB879C30, v15);
  sub_1C151FFBC();
  sub_1C122356C(0, &qword_1EB894200, (uint64_t (*)(uint64_t))sub_1C12238A4, MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  swift_retain();
  v3[5] = sub_1C1518D1C();
  return v3;
}

uint64_t sub_1C1222DA0()
{
  return sub_1C1220D1C(v0);
}

uint64_t sub_1C1222DA8()
{
  return sub_1C1220DF8();
}

void sub_1C1222DB0(void *a1)
{
  uint64_t v1 = *a1 & 1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v14 = 0x7265626D656DLL;
    *((void *)&v14 + 1) = 0xE600000000000000;
    sub_1BFF993A8(&v14, v13);
    uint64_t v7 = MEMORY[0x1E4FBC868];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BFFB4A24(v13, 0x737574617473, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBB390];
    LOBYTE(v14) = v1;
    sub_1BFF993A8(&v14, v13);
    char v4 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = v7;
    uint64_t v6 = 0x696E6167724F7369;
    uint64_t v5 = 0xEB0000000072657ALL;
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v14 = 1701736302;
    *((void *)&v14 + 1) = 0xE400000000000000;
    sub_1BFF993A8(&v14, v13);
    uint64_t v2 = MEMORY[0x1E4FBC868];
    char v3 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BFFB4A24(v13, 0x737574617473, 0xE600000000000000, v3);
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBB390];
    LOBYTE(v14) = v1;
    sub_1BFF993A8(&v14, v13);
    char v4 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = v2;
    uint64_t v5 = 0x80000001C15FE2E0;
    uint64_t v6 = 0xD000000000000011;
  }
  sub_1BFFB4A24(v13, v6, v5, v4);
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v10 = (void *)sub_1C151E5EC();
  sub_1C12205D8(v12);
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_postNotificationName_object_userInfo_, v10, 0, v11);
}

uint64_t type metadata accessor for FamilySharingStatusManager()
{
  return self;
}

uint64_t sub_1C1223044()
{
  return sub_1C1222644();
}

uint64_t sub_1C122304C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v4);
  uint64_t v6 = *(void *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1C12230A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FamilySharingStatusManagerDelegate.familySharingStatusManager(_:familyStatusDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of FamilySharingStatusManagerType.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FamilySharingStatusManagerType.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FamilySharingStatusManagerType.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FamilySharingStatusManagerType.prewarm()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FamilySharingStatusManagerType.refreshFamilyStatus()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FamilySharingStatusManagerType.syncFamilyStatus()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FamilySharingStatusManagerType.openSystemFamilySharingSettings()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t method lookup function for FamilySharingStatusManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FamilySharingStatusManager);
}

uint64_t dispatch thunk of FamilySharingStatusManager.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of FamilySharingStatusManager.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of FamilySharingStatusManager.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of FamilySharingStatusManager.__allocating_init(database:familyEigibilityProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of FamilySharingStatusManager.prewarm()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of FamilySharingStatusManager.refreshFamilyStatus()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of FamilySharingStatusManager.syncFamilyStatus()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of FamilySharingStatusManager.openSystemFamilySharingSettings()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

ValueMetadata *type metadata accessor for FamilySharingStatusManager.StoreDescriptor()
{
  return &type metadata for FamilySharingStatusManager.StoreDescriptor;
}

id sub_1C12232DC()
{
  sub_1C122356C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10 - v1;
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  unint64_t v10 = 0xD000000000000022;
  unint64_t v11 = 0x80000001C1638E50;
  sub_1C151E80C();
  sub_1C1515F7C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return (id)sub_1BFEFDBF0((uint64_t)v2, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C122356C);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id result = objc_msgSend(self, sel_defaultWorkspace);
  if (result)
  {
    uint64_t v8 = result;
    id v9 = (void *)sub_1C1515E9C();
    objc_msgSend(v8, sel_openSensitiveURL_withOptions_, v9, 0);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C122356C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C12235D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1220E70(a1, a2, a3, a4, v4);
}

uint64_t sub_1C12235D8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C1223620(void *a1, void *a2)
{
  sub_1C1221018(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

unint64_t sub_1C1223630()
{
  unint64_t result = qword_1EA1AD250;
  if (!qword_1EA1AD250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD250);
  }
  return result;
}

uint64_t sub_1C1223684()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C12236BC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

double sub_1C12236FC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C122153C(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(id *))(v2 + 40), a2);
}

uint64_t sub_1C122370C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1223744()
{
  return sub_1C1221820(v0[2], v0[3], v0[4]);
}

void sub_1C1223750()
{
  if (!qword_1EB86FD68)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86FD68);
    }
  }
}

void sub_1C12237B8()
{
  if (!qword_1EB894218)
  {
    sub_1BFE99DF4(255, &qword_1EB8942C8, (uint64_t)&type metadata for FamilyStatus, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C15194EC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894218);
    }
  }
}

void sub_1C1223834()
{
  if (!qword_1EB8941F8)
  {
    unint64_t v0 = sub_1C15183DC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8941F8);
    }
  }
}

uint64_t sub_1C122389C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1220C28(a1);
}

void sub_1C12238A4()
{
  if (!qword_1EB894220)
  {
    sub_1C1223934();
    sub_1C0D45184();
    sub_1C0D45078();
    unint64_t v0 = sub_1C1519AAC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894220);
    }
  }
}

unint64_t sub_1C1223934()
{
  unint64_t result = qword_1EB894390;
  if (!qword_1EB894390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB894390);
  }
  return result;
}

id sub_1C1223A58()
{
  uint64_t v1 = v0;
  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v3 = result;
    id v4 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    id v5 = objc_msgSend(v1, sel_navigationItem);
    uint64_t v6 = (void *)sub_1C151E5EC();
    objc_msgSend(v5, sel_setTitle_, v6);

    uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_tableView];
    objc_msgSend(v7, sel_setDataSource_, v1);
    type metadata accessor for SubtitleTableViewCell();
    sub_1C151F26C();
    type metadata accessor for DebugFormatHistoryMeasurementCell();
    sub_1C151F26C();
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v7, sel_setTableFooterView_, v8);

    id result = objc_msgSend(v1, sel_view);
    if (result)
    {
      uint64_t v9 = result;
      objc_msgSend(result, sel_addSubview_, v7);

      swift_retain();
      sub_1C151896C();
      swift_release();
      sub_1C151891C();
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C1223C90(char *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  swift_retain();
  sub_1C151709C();
  swift_release();
  double v4 = *(double *)&aBlock;
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      uint64_t v8 = *(void *)(v3 + 32 + 200 * i + 184);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        objc_super v10 = (double *)(v8 + 48);
        double v7 = 0.0;
        do
        {
          double v11 = *v10;
          v10 += 4;
          double v7 = v7 + v11;
          --v9;
        }
        while (v9);
      }
      else
      {
        double v7 = 0.0;
      }
      if (v4 <= v7) {
        double v4 = v7;
      }
    }
  }
  *(double *)&long long aBlock = v4;
  swift_retain();
  sub_1C15170AC();
  swift_release();
  int64_t v12 = *(void *)(v3 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v56 = MEMORY[0x1E4FBC860];
    sub_1C05F88F4(0, v12, 0);
    uint64_t v13 = v56;
    uint64_t v14 = v3 + 32;
    do
    {
      long long aBlock = *(_OWORD *)v14;
      long long v15 = *(_OWORD *)(v14 + 16);
      long long v16 = *(_OWORD *)(v14 + 32);
      long long v17 = *(_OWORD *)(v14 + 64);
      long long v46 = *(_OWORD *)(v14 + 48);
      long long v47 = v17;
      long long v44 = v15;
      long long v45 = v16;
      long long v18 = *(_OWORD *)(v14 + 80);
      long long v19 = *(_OWORD *)(v14 + 96);
      long long v20 = *(_OWORD *)(v14 + 128);
      long long v50 = *(_OWORD *)(v14 + 112);
      long long v51 = v20;
      long long v48 = v18;
      long long v49 = v19;
      long long v21 = *(_OWORD *)(v14 + 144);
      long long v22 = *(_OWORD *)(v14 + 160);
      long long v23 = *(_OWORD *)(v14 + 176);
      uint64_t v55 = *(void *)(v14 + 192);
      long long v53 = v22;
      long long v54 = v23;
      long long v52 = v21;
      long long v24 = *(_OWORD *)(v14 + 176);
      v41[10] = *(_OWORD *)(v14 + 160);
      v41[11] = v24;
      uint64_t v42 = *(void *)(v14 + 192);
      long long v25 = *(_OWORD *)(v14 + 112);
      v41[6] = *(_OWORD *)(v14 + 96);
      v41[7] = v25;
      long long v26 = *(_OWORD *)(v14 + 144);
      v41[8] = *(_OWORD *)(v14 + 128);
      long long v41[9] = v26;
      long long v27 = *(_OWORD *)(v14 + 48);
      v41[2] = *(_OWORD *)(v14 + 32);
      v41[3] = v27;
      long long v28 = *(_OWORD *)(v14 + 80);
      v41[4] = *(_OWORD *)(v14 + 64);
      v41[5] = v28;
      long long v29 = *(_OWORD *)(v14 + 16);
      v41[0] = *(_OWORD *)v14;
      v41[1] = v29;
      sub_1C0F8B40C((uint64_t)&aBlock);
      uint64_t v30 = sub_1C0ED1E10(v41, v4);
      uint64_t v56 = v13;
      unint64_t v32 = *(void *)(v13 + 16);
      unint64_t v31 = *(void *)(v13 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1C05F88F4(v31 > 1, v32 + 1, 1);
        uint64_t v13 = v56;
      }
      *(void *)(v13 + 16) = v32 + 1;
      *(void *)(v13 + 8 * v32 + 32) = v30;
      v14 += 200;
      --v12;
    }
    while (v12);
  }
  *(void *)&a1[OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_sections] = v13;
  swift_bridgeObjectRelease();
  long long v33 = self;
  long long v34 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_tableView];
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v34;
  *(void *)&long long v45 = sub_1C1224B38;
  *((void *)&v45 + 1) = v35;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v44 = sub_1BFC9FC68;
  *((void *)&v44 + 1) = &block_descriptor_98;
  uint64_t v36 = _Block_copy(&aBlock);
  id v37 = v34;
  swift_release();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a1;
  *(void *)&long long v45 = sub_1C1224B48;
  *((void *)&v45 + 1) = v38;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v44 = sub_1C0DF5960;
  *((void *)&v44 + 1) = &block_descriptor_6_3;
  long long v39 = _Block_copy(&aBlock);
  uint64_t v40 = a1;
  swift_release();
  objc_msgSend(v33, sel_animateWithDuration_animations_completion_, v36, v39, 0.0);
  _Block_release(v39);
  _Block_release(v36);
}

uint64_t type metadata accessor for DebugFormatHistoryViewController()
{
  return self;
}

unint64_t sub_1C1224224()
{
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_sections);
  if (result >= *(void *)(v2 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v3 = *(void *)(v2 + 8 * result + 32);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (result >= *(void *)(v3 + 16))
  {
LABEL_26:
    __break(1u);
    return result;
  }
  sub_1C1224A50(v3 + (result << 6) + 32, (uint64_t)v59);
  swift_bridgeObjectRelease();
  sub_1C1224A50((uint64_t)v59, (uint64_t)&v54);
  if (v58)
  {
    uint64_t v4 = v55;
    uint64_t v5 = v56;
    long long v50 = v56;
    uint64_t v6 = v57;
    type metadata accessor for DebugFormatHistoryMeasurementCell();
    double v7 = (char *)sub_1C151F24C();
    *(void *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_timeInMilliseconds] = v4;
    *(void *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_totalTimeInMilliseconds] = v6;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_barView], sel_setBackgroundColor_, v5);
    sub_1C0099920();
    uint64_t inited = swift_initStackObject();
    uint64_t v9 = (void **)MEMORY[0x1E4FB06F8];
    *(_OWORD *)(inited + 16) = xmmword_1C1527210;
    objc_super v10 = *v9;
    *(void *)(inited + 32) = *v9;
    id v49 = self;
    swift_bridgeObjectRetain();
    id v48 = v10;
    id v11 = objc_msgSend(v49, sel_systemFontOfSize_, 13.0);
    uint64_t v47 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    *(void *)(inited + 40) = v11;
    int64_t v12 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(inited + 64) = v47;
    *(void *)(inited + 72) = v12;
    id v46 = self;
    id v45 = v12;
    id v13 = objc_msgSend(v46, sel_labelColor);
    uint64_t v14 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    *(void *)(inited + 104) = v14;
    *(void *)(inited + 80) = v13;
    sub_1BFF991DC(inited);
    id v15 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
    long long v16 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BFF9A290();
    long long v17 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);

    sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = MEMORY[0x1E4FBB3D0];
    *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
    uint64_t v21 = MEMORY[0x1E4FBB460];
    *(void *)(v19 + 56) = v20;
    *(void *)(v19 + 64) = v21;
    *(void *)(v19 + 32) = v4;
    sub_1C151E66C();
    uint64_t v22 = swift_initStackObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C1527210;
    *(void *)(v22 + 32) = v48;
    id v23 = v48;
    *(void *)(v22 + 40) = objc_msgSend(v49, sel_systemFontOfSize_, 13.0);
    *(void *)(v22 + 64) = v47;
    *(void *)(v22 + 72) = v45;
    id v24 = v45;
    id v25 = objc_msgSend(v46, sel_secondaryLabelColor);
    *(void *)(v22 + 104) = v14;
    *(void *)(v22 + 80) = v25;
    sub_1BFF991DC(v22);
    id v26 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    long long v27 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    long long v28 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

    objc_msgSend(v18, sel_appendAttributedString_, v29);
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_titleLabel], sel_setAttributedText_, v18);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C01DC970((uint64_t)&v55, (uint64_t)v53);
    type metadata accessor for SubtitleTableViewCell();
    double v7 = (char *)sub_1C151F24C();
    id v30 = objc_msgSend(v7, sel_textLabel);
    if (v30)
    {
      unint64_t v31 = v30;
      id v32 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
      objc_msgSend(v31, sel_setFont_, v32);
    }
    id v33 = objc_msgSend(v7, sel_textLabel);
    if (v33)
    {
      long long v34 = v33;
      uint64_t v35 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v34, sel_setText_, v35);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    id v36 = objc_msgSend(v7, sel_detailTextLabel);
    if (v36)
    {
      id v37 = v36;
      id v38 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
      objc_msgSend(v37, sel_setFont_, v38);
    }
    id v39 = objc_msgSend(v7, sel_detailTextLabel);
    if (v39)
    {
      uint64_t v40 = v39;
      sub_1C01DC9D4((uint64_t)v53, (uint64_t)v51);
      if (v52)
      {
        __swift_project_boxed_opaque_existential_1(v51, v52);
        sub_1C152088C();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      }
      else
      {
        sub_1C01DC8AC((uint64_t)v51);
      }
      uint64_t v41 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v40, sel_setText_, v41);
    }
    id v42 = objc_msgSend(v7, sel_detailTextLabel);
    if (v42)
    {
      uint64_t v43 = v42;
      id v44 = objc_msgSend(self, sel_secondaryLabelColor);
      objc_msgSend(v43, sel_setTextColor_, v44);
    }
    sub_1C01DC8AC((uint64_t)v53);
  }
  sub_1C1224AAC((uint64_t)v59);
  return (unint64_t)v7;
}

uint64_t sub_1C1224A50(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C1224AAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C1224B00()
{
  return swift_deallocObject();
}

id sub_1C1224B38()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_reloadData);
}

id sub_1C1224B48()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_tableView);
  objc_msgSend(v1, sel_adjustedContentInset);
  return objc_msgSend(v1, sel_setContentOffset_animated_, 0, 0.0, -v2);
}

ValueMetadata *type metadata accessor for SportsStandingRecordLeague()
{
  return &type metadata for SportsStandingRecordLeague;
}

uint64_t sub_1C1224BC0(void *a1)
{
  sub_1C12251B8(0, &qword_1EA1AD288, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1225164();
  sub_1C1520F0C();
  v9[15] = 0;
  sub_1C15207CC();
  if (!v1)
  {
    v9[14] = 1;
    sub_1C15207CC();
    v9[13] = 2;
    sub_1C15207CC();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C1224D5C()
{
  uint64_t v1 = 0x795465756761656CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6163696E6F6E6163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1C1224DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1225428(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1224DE4(uint64_t a1)
{
  unint64_t v2 = sub_1C1225164();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1224E20(uint64_t a1)
{
  unint64_t v2 = sub_1C1225164();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C1224E5C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C1224EB8(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C1224EA0(void *a1)
{
  return sub_1C1224BC0(a1);
}

uint64_t sub_1C1224EB8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C12251B8(0, &qword_1EA1AD278, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1225164();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152069C();
  uint64_t v15 = v14;
  uint64_t v23 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v15;
  uint64_t v16 = sub_1C152069C();
  uint64_t v18 = v17;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  return result;
}

unint64_t sub_1C1225164()
{
  unint64_t result = qword_1EA1AD280;
  if (!qword_1EA1AD280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD280);
  }
  return result;
}

void sub_1C12251B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1225164();
    unint64_t v7 = a3(a1, &type metadata for SportsStandingRecordLeague.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsStandingRecordLeague.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12252E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsStandingRecordLeague.CodingKeys()
{
  return &type metadata for SportsStandingRecordLeague.CodingKeys;
}

unint64_t sub_1C1225324()
{
  unint64_t result = qword_1EA1AD290;
  if (!qword_1EA1AD290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD290);
  }
  return result;
}

unint64_t sub_1C122537C()
{
  unint64_t result = qword_1EA1AD298;
  if (!qword_1EA1AD298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD298);
  }
  return result;
}

unint64_t sub_1C12253D4()
{
  unint64_t result = qword_1EA1AD2A0;
  if (!qword_1EA1AD2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD2A0);
  }
  return result;
}

uint64_t sub_1C1225428(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x795465756761656CLL && a2 == 0xEA00000000006570 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6163696E6F6E6163 && a2 == 0xEB0000000064496CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

id VideoPlaceholderView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1C12255F8()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___imageView;
  BOOL v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___imageView);
  }
  else
  {
    unsigned int v4 = (void *)sub_1C151E5EC();
    id v5 = objc_msgSend(self, sel_systemImageNamed_, v4);

    if (v5)
    {
      id v6 = objc_msgSend(self, sel_configurationWithPointSize_, 73.0);
      id v7 = objc_msgSend(v5, sel_imageWithConfiguration_, v6);
    }
    else
    {
      id v7 = 0;
    }
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v7);

    id v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v8;
    id v3 = v8;

    BOOL v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C1225724()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___blurView;
  BOOL v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___blurView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___blurView);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_effectWithStyle_, 11);
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v4);

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    BOOL v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C12257D4()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___vibrancyView;
  BOOL v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___vibrancyView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___vibrancyView);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_effectWithStyle_, 12);
    id v5 = objc_msgSend(self, sel_effectForBlurEffect_style_, v4, 1);
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v5);

    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    BOOL v2 = 0;
  }
  id v8 = v2;
  return v3;
}

char *VideoPlaceholderView.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___imageView] = 0;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView_label;
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v13 = v5;
  id v14 = objc_msgSend(v12, sel_init);
  sub_1BFF63CD0();
  uint64_t v15 = (void *)sub_1C151F87C();
  objc_msgSend(v14, sel_setFont_, v15);

  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  uint64_t v18 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setText_, v18, 0x80000001C16390B0);

  objc_msgSend(v14, sel_setTextAlignment_, 1);
  objc_msgSend(v14, sel_setLineBreakMode_, 0);
  objc_msgSend(v14, sel_setNumberOfLines_, 2);
  *(void *)&v5[v11] = v14;
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___blurView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___vibrancyView] = 0;

  v34.receiver = v13;
  v34.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v34, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v20 = self;
  id v21 = v19;
  id v22 = objc_msgSend(v20, sel_clearColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v22);

  uint64_t v23 = (char *)v21;
  id v24 = sub_1C1225724();
  objc_msgSend(v23, sel_addSubview_, v24);

  id v25 = sub_1C12257D4();
  id v26 = objc_msgSend(v25, sel_contentView);

  id v27 = sub_1C12255F8();
  objc_msgSend(v26, sel_addSubview_, v27);

  id v28 = sub_1C12257D4();
  id v29 = objc_msgSend(v28, sel_contentView);

  objc_msgSend(v29, sel_addSubview_, *(void *)&v23[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView_label]);
  id v30 = sub_1C1225724();
  id v31 = objc_msgSend(v30, sel_contentView);

  id v32 = sub_1C12257D4();
  objc_msgSend(v31, sel_addSubview_, v32);

  return v23;
}

Swift::Void __swiftcall VideoPlaceholderView.layoutSubviews()()
{
  v29.receiver = v0;
  v29.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v29, sel_layoutSubviews);
  id v1 = sub_1C1225724();
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);

  id v2 = sub_1C12257D4();
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  id v3 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView_label];
  objc_msgSend(v3, sel_sizeToFit);
  id v4 = sub_1C12255F8();
  objc_msgSend(v4, sel_frame);
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;

  v30.origin.x = v6;
  v30.origin.y = v8;
  v30.size.width = v10;
  v30.size.height = v12;
  double Height = CGRectGetHeight(v30);
  objc_msgSend(v3, sel_frame);
  double v14 = (Height - CGRectGetHeight(v31)) * 0.5;
  id v15 = sub_1C12255F8();
  objc_msgSend(v0, sel_bounds);
  double MidX = CGRectGetMidX(v32);
  objc_msgSend(v0, sel_bounds);
  double MidY = CGRectGetMidY(v33);
  id v18 = sub_1C12255F8();
  objc_msgSend(v18, sel_frame);
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;

  v34.origin.x = v20;
  v34.origin.y = v22;
  v34.size.width = v24;
  v34.size.height = v26;
  objc_msgSend(v15, sel_setCenter_, MidX, v14 + MidY - CGRectGetHeight(v34) * 0.5 + -5.0);

  objc_msgSend(v0, sel_bounds);
  double v27 = CGRectGetMidX(v35);
  objc_msgSend(v0, sel_bounds);
  double v28 = CGRectGetMidY(v36);
  objc_msgSend(v3, sel_frame);
  objc_msgSend(v3, sel_setCenter_, v27, v14 + v28 + CGRectGetHeight(v37) * 0.5 + 5.0);
}

id VideoPlaceholderView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VideoPlaceholderView()
{
  return self;
}

void sub_1C1225FCC()
{
  id v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___imageView] = 0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView_label;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  sub_1BFF63CD0();
  id v4 = (void *)sub_1C151F87C();
  objc_msgSend(v3, sel_setFont_, v4);

  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  double v7 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setText_, v7, 0x80000001C16390B0);

  objc_msgSend(v3, sel_setTextAlignment_, 1);
  objc_msgSend(v3, sel_setLineBreakMode_, 0);
  objc_msgSend(v3, sel_setNumberOfLines_, 2);
  *(void *)&v1[v2] = v3;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___blurView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed20VideoPlaceholderView____lazy_storage___vibrancyView] = 0;

  sub_1C152040C();
  __break(1u);
}

uint64_t static FormatLiveActivityBinding.Command.== infix(_:_:)(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  char v3 = *((unsigned char *)a1 + 24);
  uint64_t v4 = *((void *)a2 + 2);
  char v5 = *((unsigned char *)a2 + 24);
  long long v10 = *a1;
  uint64_t v11 = v2;
  char v12 = v3;
  long long v7 = *a2;
  uint64_t v8 = v4;
  char v9 = v5;
  return _s8NewsFeed16FormatSymbolNameO2eeoiySbAC_ACtFZ_0((uint64_t)&v10, (uint64_t)&v7) & 1;
}

uint64_t sub_1C1226234@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatLiveActivityBinding.Command.init(from:)(a1, a2);
}

uint64_t sub_1C122624C(void *a1)
{
  return FormatLiveActivityBinding.Command.encode(to:)(a1);
}

uint64_t sub_1C1226264(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  char v3 = *((unsigned char *)a1 + 24);
  uint64_t v4 = *((void *)a2 + 2);
  char v5 = *((unsigned char *)a2 + 24);
  long long v10 = *a1;
  uint64_t v11 = v2;
  char v12 = v3;
  long long v7 = *a2;
  uint64_t v8 = v4;
  char v9 = v5;
  return _s8NewsFeed16FormatSymbolNameO2eeoiySbAC_ACtFZ_0((uint64_t)&v10, (uint64_t)&v7) & 1;
}

unint64_t sub_1C12262C0(uint64_t a1)
{
  unint64_t result = sub_1C12262E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12262E8()
{
  unint64_t result = qword_1EA1AD2C8;
  if (!qword_1EA1AD2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD2C8);
  }
  return result;
}

unint64_t sub_1C122633C(void *a1)
{
  a1[1] = sub_1C087D2D4();
  a1[2] = sub_1C08FD7EC();
  unint64_t result = sub_1C1226374();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1226374()
{
  unint64_t result = qword_1EA1AD2D0;
  if (!qword_1EA1AD2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD2D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLiveActivityBinding.Command()
{
  return &type metadata for FormatLiveActivityBinding.Command;
}

uint64_t getEnumTagSinglePayload for DebugFormatWeather(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DebugFormatWeather(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *unint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1226534);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatWeather()
{
  return &type metadata for DebugFormatWeather;
}

unint64_t sub_1C1226570()
{
  unint64_t result = qword_1EA1AD2D8;
  if (!qword_1EA1AD2D8)
  {
    sub_1C12265C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD2D8);
  }
  return result;
}

void sub_1C12265C8()
{
  if (!qword_1EA1AD2E0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AD2E0);
    }
  }
}

uint64_t sub_1C1226620@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C15168DC();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  int v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45F90], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 2:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F46020], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 3:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FC8], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 4:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F46028], v4, v6);
      uint64_t v12 = a2;
      int v13 = 0;
      goto LABEL_30;
    case 5:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FD8], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 6:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45F60], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 7:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FF8], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 8:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F46018], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 9:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FA8], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 10:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F46078], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 11:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F46030], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 12:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FE0], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 13:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F46068], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 14:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FC0], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 15:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FD0], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 16:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FE8], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 17:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45F68], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 18:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F46070], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 19:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45F58], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 20:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45F78], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 21:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F46080], v4, v6);
      uint64_t v12 = a2;
      int v13 = 1;
      goto LABEL_30;
    case 22:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FF0], v4, v6);
      uint64_t v12 = a2;
      int v13 = 0;
      goto LABEL_30;
    case 23:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45F90], v4, v6);
      uint64_t v12 = a2;
      int v13 = 0;
      goto LABEL_30;
    case 24:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FE0], v4, v6);
      uint64_t v12 = a2;
      int v13 = 0;
      goto LABEL_30;
    case 25:
      (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4F45FB8], v4, v6);
      uint64_t v12 = a2;
      int v13 = 0;
LABEL_30:
      sub_1C1226EE8(v13, v12);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      uint64_t v14 = type metadata accessor for FeedWeather(0);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
      break;
    default:
      uint64_t v9 = type metadata accessor for FeedWeather(0);
      long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
      uint64_t result = v10(a2, 1, 1, v9);
      break;
  }
  return result;
}

uint64_t sub_1C1226EE8@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v30 = sub_1C151E2BC();
  uint64_t v4 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  __n128 v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C15168BC();
  uint64_t v28 = v8;
  uint64_t v29 = v7;
  sub_1C0224FF4(&v33);
  int v27 = v33;
  sub_1C151689C();
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_1C15200FC();
  uint64_t v9 = sub_1C15168CC();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v31 = v9;
  unint64_t v32 = v11;
  sub_1C151E80C();
  unint64_t v24 = v32;
  uint64_t v25 = v31;
  int v26 = a1 ^ 1;
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_fahrenheit);
  uint64_t v14 = (int *)type metadata accessor for FeedWeather(0);
  sub_1C01F2F9C();
  sub_1C151538C();
  id v15 = objc_msgSend(v12, sel_fahrenheit);
  type metadata accessor for FeedWeather.Temperature(0);
  sub_1C151538C();
  id v16 = objc_msgSend(v12, sel_fahrenheit);
  sub_1C151538C();
  id v17 = objc_msgSend(v12, sel_fahrenheit);
  sub_1C151538C();
  *(_OWORD *)a2 = xmmword_1C15D9420;
  uint64_t v18 = v30;
  uint64_t v19 = v28;
  *(void *)(a2 + 16) = v29;
  *(void *)(a2 + 24) = v19;
  *(unsigned char *)(a2 + 32) = v27;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2 + v14[7], v6, v18);
  double v21 = (uint64_t *)(a2 + v14[10]);
  unint64_t v22 = v24;
  *double v21 = v25;
  v21[1] = v22;
  *(unsigned char *)(a2 + v14[8]) = v26;
  return result;
}

uint64_t sub_1C12271B8(char a1)
{
  uint64_t result = 0x6E6F697461636F6CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C43796C74726170;
      break;
    case 2:
      uint64_t result = 0x7964756F6C63;
      break;
    case 3:
      uint64_t result = 7630696;
      break;
    case 4:
      uint64_t result = 0x646967697266;
      break;
    case 5:
      uint64_t result = 2038063464;
      break;
    case 6:
      uint64_t result = 1953723748;
      break;
    case 7:
      uint64_t result = 6778726;
      break;
    case 8:
      uint64_t result = 0x797A65657262;
      break;
    case 9:
      uint64_t result = 0x6C616369706F7274;
      break;
    case 10:
      uint64_t result = 0x6E61636972727568;
      break;
    case 11:
      uint64_t result = 0x656C7A7A697264;
      break;
    case 12:
      uint64_t result = 1852399986;
      break;
    case 13:
      uint64_t result = 0x6961527976616568;
      break;
    case 14:
      uint64_t result = 0xD000000000000016;
      break;
    case 15:
      uint64_t result = 1818845544;
      break;
    case 16:
      uint64_t result = 2003791475;
      break;
    case 17:
      uint64_t result = 0x53676E69776F6C62;
      break;
    case 18:
      uint64_t result = 0x6F6E537976616568;
      break;
    case 19:
      uint64_t result = 0x65776F68536E7573;
      break;
    case 20:
      uint64_t result = 0x7272756C466E7573;
      break;
    case 21:
      uint64_t result = 0x4D797265746E6977;
      break;
    case 22:
      uint64_t v3 = 0x4E7261656C63;
      goto LABEL_26;
    case 23:
      uint64_t result = 0xD000000000000011;
      break;
    case 24:
      uint64_t v3 = 0x4E796E696172;
LABEL_26:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6769000000000000;
      break;
    case 25:
      uint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C12274C4(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C12271B8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C12271B8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C1227550()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C12271B8(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C12275B4()
{
  sub_1C12271B8(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1227608()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C12271B8(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C1227668@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C1227830();
  *a1 = result;
  return result;
}

uint64_t sub_1C1227698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C12271B8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C12276C4(uint64_t a1)
{
  unint64_t v2 = sub_1C0C7B818();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C1227718(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0C7B818();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C1227774(uint64_t a1)
{
  unint64_t v2 = sub_1C0C7B818();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

void sub_1C12277C8(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A048;
}

unint64_t sub_1C12277DC()
{
  unint64_t result = qword_1EA1AD2E8;
  if (!qword_1EA1AD2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD2E8);
  }
  return result;
}

uint64_t sub_1C1227830()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A) {
    return 26;
  }
  else {
    return v0;
  }
}

uint64_t dispatch thunk of IssuesFetchOperationFactoryType.createIssuesFetchOperation(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of IssuesFetchOperationFactoryType.createIssuesFetchOperation(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for IssuesFetchOperationFactory()
{
  return self;
}

id sub_1C12278D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 16);
  sub_1BFEF9A78();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F7E520]);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  char v8 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithContext_issueIDs_, v5, v8);

  swift_unknownObjectRelease();
  return v9;
}

id sub_1C1227994()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  id v2 = objc_allocWithZone(MEMORY[0x1E4F7E520]);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithContext_issueIDs_, v1, v3);

  swift_unknownObjectRelease();
  return v4;
}

uint64_t destroy for DebugFormatGroupSection(uint64_t a1)
{
  sub_1C0C44A58(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugFormatGroupSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1C0C44A40(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatGroupSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1C0C44A40(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1C0C44A58(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugFormatGroupSection(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1C0C44A58(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatGroupSection()
{
  return &type metadata for DebugFormatGroupSection;
}

uint64_t sub_1C1227BB4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3 = a1;
  if (a3)
  {
    if (a3 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else if (a1 | a2)
    {
      return 0x6D6F6F727377654ELL;
    }
    else
    {
      return 0x6567616B636150;
    }
  }
  else
  {
    uint64_t v5 = sub_1C152088C();
    sub_1C151E80C();
    return v5;
  }
  return v3;
}

char *sub_1C1227C80(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v7;
        uint64_t v8 = *((void *)a2 + 2);
        uint64_t v9 = *((void *)a2 + 3);
        *((void *)a1 + 2) = v8;
        *((void *)a1 + 3) = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v15 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v15;
        uint64_t v16 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v16;
        uint64_t v17 = *((void *)a2 + 5);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v17;
        a1[48] = a2[48];
        *((void *)a1 + 7) = *((void *)a2 + 7);
        uint64_t v18 = a2 + 64;
        unint64_t v19 = *((void *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19 <= 2)
        {
          *((_OWORD *)a1 + 4) = *v18;
        }
        else
        {
          a1[64] = *(unsigned char *)v18;
          *((void *)a1 + 9) = v19;
          swift_bridgeObjectRetain();
        }
        uint64_t v26 = *((void *)a2 + 11);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = v26;
        uint64_t v27 = *((void *)a2 + 13);
        *((void *)a1 + 12) = *((void *)a2 + 12);
        *((void *)a1 + 13) = v27;
        uint64_t v28 = *((void *)a2 + 15);
        *((void *)a1 + 14) = *((void *)a2 + 14);
        *((void *)a1 + 15) = v28;
        a1[128] = a2[128];
        *((void *)a1 + 17) = *((void *)a2 + 17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        uint64_t v12 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v12;
        uint64_t v13 = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v13)
        {
          uint64_t v14 = *((void *)a2 + 4);
          *((void *)a1 + 3) = v13;
          *((void *)a1 + 4) = v14;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        uint64_t v20 = *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
        double v21 = &a1[v20];
        unint64_t v22 = &a2[v20];
        uint64_t v23 = sub_1C1518CDC();
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BFF71E30();
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C1227FF4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2:
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 24))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v3 = a1 + *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
      uint64_t v4 = sub_1C1518CDC();
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
      if (!result)
      {
        int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
        uint64_t result = v5(v3, v4);
      }
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1C12281C0(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      uint64_t v7 = *((void *)a2 + 2);
      uint64_t v8 = *((void *)a2 + 3);
      *((void *)a1 + 2) = v7;
      *((void *)a1 + 3) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 1u:
      uint64_t v12 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v12;
      uint64_t v13 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v13;
      uint64_t v14 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v14;
      a1[48] = a2[48];
      *((void *)a1 + 7) = *((void *)a2 + 7);
      uint64_t v15 = a2 + 64;
      unint64_t v16 = *((void *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16 <= 2)
      {
        *((_OWORD *)a1 + 4) = *v15;
      }
      else
      {
        a1[64] = *(unsigned char *)v15;
        *((void *)a1 + 9) = v16;
        swift_bridgeObjectRetain();
      }
      uint64_t v23 = *((void *)a2 + 11);
      *((void *)a1 + 10) = *((void *)a2 + 10);
      *((void *)a1 + 11) = v23;
      uint64_t v24 = *((void *)a2 + 13);
      *((void *)a1 + 12) = *((void *)a2 + 12);
      *((void *)a1 + 13) = v24;
      uint64_t v25 = *((void *)a2 + 15);
      *((void *)a1 + 14) = *((void *)a2 + 14);
      *((void *)a1 + 15) = v25;
      a1[128] = a2[128];
      *((void *)a1 + 17) = *((void *)a2 + 17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 2u:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 3u:
      *(void *)a1 = *(void *)a2;
      uint64_t v9 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v9;
      uint64_t v10 = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10)
      {
        uint64_t v11 = *((void *)a2 + 4);
        *((void *)a1 + 3) = v10;
        *((void *)a1 + 4) = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      }
      uint64_t v17 = *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
      uint64_t v18 = &a1[v17];
      unint64_t v19 = &a2[v17];
      uint64_t v20 = sub_1C1518CDC();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_1BFF71E30();
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
LABEL_15:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1C12284E4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C122886C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        a1[48] = a2[48];
        *((void *)a1 + 7) = *((void *)a2 + 7);
        unint64_t v6 = *((void *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6 <= 2)
        {
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        }
        else
        {
          a1[64] = a2[64];
          *((void *)a1 + 9) = *((void *)a2 + 9);
          swift_bridgeObjectRetain();
        }
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        *((void *)a1 + 12) = *((void *)a2 + 12);
        *((void *)a1 + 13) = *((void *)a2 + 13);
        *((void *)a1 + 14) = *((void *)a2 + 14);
        *((void *)a1 + 15) = *((void *)a2 + 15);
        a1[128] = a2[128];
        *((void *)a1 + 17) = *((void *)a2 + 17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 3u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v7 = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          *((void *)a1 + 3) = v7;
          *((void *)a1 + 4) = *((void *)a2 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        uint64_t v8 = *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_1C1518CDC();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_1BFF71E30();
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C122886C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatGroupItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatGroupItem()
{
  uint64_t result = qword_1EA1AD2F0;
  if (!qword_1EA1AD2F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_1C1228914(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    uint64_t v6 = *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = sub_1C1518CDC();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1BFF71E30();
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1C1228A8C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C122886C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      uint64_t v6 = *(int *)(type metadata accessor for FormatSlotDefinitionItemSet() + 36);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = sub_1C1518CDC();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_1BFF71E30();
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C1228C14()
{
  uint64_t result = type metadata accessor for FormatSlotDefinitionItemSet();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for DebugFormatGroupSectionDescriptor(uint64_t a1)
{
  return sub_1C0C44A58(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed33DebugFormatGroupSectionDescriptorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C0C44A40(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugFormatGroupSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C0C44A40(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C0C44A58(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugFormatGroupSectionDescriptor(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C0C44A58(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatGroupSectionDescriptor()
{
  return &type metadata for DebugFormatGroupSectionDescriptor;
}

uint64_t sub_1C1228DD4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatGroupBinding.DateTime.init(from:)(a1, a2);
}

uint64_t sub_1C1228DEC(void *a1)
{
  return FormatGroupBinding.DateTime.encode(to:)(a1);
}

BOOL _s8NewsFeed18FormatGroupBindingV8DateTimeO2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  switch(v2 >> 5)
  {
    case 1u:
      if ((v3 & 0xE0) == 0x20) {
        goto LABEL_7;
      }
      goto LABEL_9;
    case 2u:
      if ((v3 & 0xE0) != 0x40) {
        goto LABEL_9;
      }
      BOOL result = ((v3 ^ v2) & 1) == 0;
      break;
    case 3u:
      if ((v3 & 0xE0) == 0x60) {
        goto LABEL_7;
      }
      goto LABEL_9;
    case 4u:
      if ((v3 & 0xE0) != 0x80) {
        goto LABEL_9;
      }
LABEL_7:
      BOOL result = ((v3 ^ v2) & 0x1F) == 0;
      break;
    default:
      if (v3 >= 0x20) {
LABEL_9:
      }
        BOOL result = 0;
      else {
        BOOL result = 1;
      }
      break;
  }
  return result;
}

unint64_t sub_1C1228EB4(uint64_t a1)
{
  unint64_t result = sub_1C1228EDC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1228EDC()
{
  unint64_t result = qword_1EA1AD300;
  if (!qword_1EA1AD300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD300);
  }
  return result;
}

unint64_t sub_1C1228F30(void *a1)
{
  a1[1] = sub_1C0882D30();
  a1[2] = sub_1C08FC828();
  unint64_t result = sub_1C1228F68();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1228F68()
{
  unint64_t result = qword_1EA1AD308;
  if (!qword_1EA1AD308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD308);
  }
  return result;
}

uint64_t _s8DateTimeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x1C) {
    goto LABEL_17;
  }
  if (a2 + 228 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 228) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 228;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 228;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 228;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x18 | (*a1 >> 5)) ^ 0x1F;
  if (v6 >= 0x1B) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *_s8DateTimeOwst_3(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 228 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 228) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1C) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1B)
  {
    unsigned int v6 = ((a2 - 28) >> 8) + 1;
    *unint64_t result = a2 - 28;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1229130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 >> 3) & 3) - 4 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1C1229158(unsigned __int8 *a1)
{
  return *a1 >> 5;
}

unsigned char *sub_1C1229164(unsigned char *result, char a2)
{
  *unint64_t result = *result & 7 | (32 * a2);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.DateTime()
{
  return &type metadata for FormatGroupBinding.DateTime;
}

void *sub_1C1229188(uint64_t a1)
{
  uint64_t v48 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v2 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (uint64_t)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v38 = (uint64_t)v36 - v5;
  sub_1C0181BEC(0);
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v44 = (uint64_t)v36 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  if (v10)
  {
    id v42 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56);
    uint64_t v43 = v8;
    uint64_t v37 = v2;
    uint64_t v41 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    swift_bridgeObjectRetain();
    v36[1] = a1;
    uint64_t v12 = (uint64_t *)(a1 + 40);
    long long v49 = xmmword_1C153AB20;
    long long v40 = xmmword_1C1529AE0;
    long long v39 = xmmword_1C157D0F0;
    while (1)
    {
      uint64_t v13 = *v12;
      if (*v12 < 0)
      {
        long long v50 = v11;
        uint64_t v14 = *(v12 - 1);
        sub_1BFF5DAB0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        unint64_t v15 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = v40;
        uint64_t v17 = v16 + v15;
        sub_1C1229810(v14, v13);
        id v18 = (id)(v13 & 0x7FFFFFFFFFFFFFFFLL);
        uint64_t v19 = sub_1C01A9804((void *)(v13 & 0x7FFFFFFFFFFFFFFFLL));
        uint64_t v20 = v48;
        uint64_t v21 = (uint64_t *)(v17 + *(int *)(v48 + 24));
        *uint64_t v21 = v19;
        v21[1] = v22;
        uint64_t v23 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v21, 0, 1, v23);
        *(_OWORD *)uint64_t v17 = v39;
        *(void *)(v17 + 16) = 0;
        *(void *)(v17 + 24) = 0;
        uint64_t v24 = v17 + *(int *)(v20 + 28);
        *(void *)uint64_t v24 = 0;
        *(void *)(v24 + 8) = 0;
        *(unsigned char *)(v24 + 16) = -1;
        (*v42)(v17, 0, 1, v20);
        uint64_t v25 = v44;
        sub_1C09BD2C0(v17, v44);
        uint64_t v26 = v43;
        sub_1C1229950(v25, v43, (uint64_t (*)(void))sub_1C0181BEC);
        if ((*v41)(v26, 1, v20) == 1)
        {
          sub_1C122985C(v26, (uint64_t (*)(void))sub_1C0181BEC);
          unint64_t v27 = MEMORY[0x1E4FBC860];
        }
        else
        {
          uint64_t v28 = v38;
          sub_1C1229950(v26, v38, type metadata accessor for FormatInspectionItem);
          sub_1C1229950(v28, v47, type metadata accessor for FormatInspectionItem);
          unint64_t v27 = MEMORY[0x1E4FBC860];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v27 = sub_1C0EDFAD8(0, *(void *)(MEMORY[0x1E4FBC860] + 16) + 1, 1, MEMORY[0x1E4FBC860]);
          }
          unint64_t v30 = *(void *)(v27 + 16);
          unint64_t v29 = *(void *)(v27 + 24);
          if (v30 >= v29 >> 1) {
            unint64_t v27 = sub_1C0EDFAD8(v29 > 1, v30 + 1, 1, v27);
          }
          *(void *)(v27 + 16) = v30 + 1;
          sub_1C1229950(v47, v27+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v30, type metadata accessor for FormatInspectionItem);
        }
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)&long long v52 = &type metadata for FormatInspectionGroup;
        *((void *)&v52 + 1) = &off_1F1BDEC90;
        uint64_t v31 = (void *)swift_allocObject();
        v51[0] = v31;
        _OWORD v31[2] = 0x726F727245;
        v31[3] = 0xE500000000000000;
        v31[4] = 0;
        v31[5] = 0;
        v31[6] = v27;

        sub_1C1229904(v14, v13);
        uint64_t v11 = v50;
        if ((void)v52 != 1)
        {
          sub_1C1229950((uint64_t)v51, (uint64_t)v53, (uint64_t (*)(void))sub_1C01004A4);
          sub_1C1229950((uint64_t)v53, (uint64_t)v51, (uint64_t (*)(void))sub_1C01004A4);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v11 = sub_1C0EE30E0(0, v11[2] + 1, 1, v11);
          }
          unint64_t v33 = v11[2];
          unint64_t v32 = v11[3];
          if (v33 >= v32 >> 1) {
            uint64_t v11 = sub_1C0EE30E0((void *)(v32 > 1), v33 + 1, 1, v11);
          }
          void v11[2] = v33 + 1;
          sub_1C1229950((uint64_t)v51, (uint64_t)&v11[5 * v33 + 4], (uint64_t (*)(void))sub_1C01004A4);
          goto LABEL_5;
        }
      }
      else
      {
        memset(v51, 0, sizeof(v51));
        long long v52 = v49;
      }
      sub_1C122985C((uint64_t)v51, (uint64_t (*)(void))sub_1C12297DC);
LABEL_5:
      v12 += 2;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  CGRect v34 = sub_1C131B79C((uint64_t)v11);
  swift_bridgeObjectRelease();
  return v34;
}

void sub_1C12297DC(uint64_t a1)
{
}

id sub_1C1229810(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t v4 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
    swift_retain();
    return v4;
  }
  else
  {
    return (id)swift_retain();
  }
}

uint64_t sub_1C122985C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C12298BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C1229904(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t v3 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
    swift_release();
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_1C1229950(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for DebugFormatUploadEntryResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_1C1229810(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

void destroy for DebugFormatUploadEntryResult(uint64_t *a1)
{
}

uint64_t *assignWithCopy for DebugFormatUploadEntryResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_1C1229810(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1C1229904(v5, v6);
  return a1;
}

uint64_t *assignWithTake for DebugFormatUploadEntryResult(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1C1229904(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatUploadEntryResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 50) >> 13) | (2
                                                           * ((*(void *)(a1 + 8) >> 50) & 0x1C00 | ((*(void *)(a1 + 8) & 7) << 7) | (*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DebugFormatUploadEntryResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(void *)unint64_t result = a2 - 0x3FFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

void *sub_1C1229B6C(void *result, uint64_t a2)
{
  uint64_t v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *result &= 0xFFFFFFFFFFFFFF8uLL;
  result[1] = v2;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadEntryResult()
{
  return &type metadata for DebugFormatUploadEntryResult;
}

uint64_t NoopBundleSessionManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugInitialPurchaseTimestampValue;
  uint64_t v2 = sub_1C151631C();
  unint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugDetectionTimestampValue, 1, 1, v2);
  return v0;
}

uint64_t NoopBundleSessionManager.debugInitialPurchaseTimestampValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1229CD0(&OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugInitialPurchaseTimestampValue, a1);
}

uint64_t NoopBundleSessionManager.debugInitialPurchaseTimestampValue.setter(uint64_t a1)
{
  return sub_1C1229D2C(a1, &OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugInitialPurchaseTimestampValue);
}

uint64_t (*NoopBundleSessionManager.debugInitialPurchaseTimestampValue.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t NoopBundleSessionManager.debugDetectionTimestampValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1229CD0(&OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugDetectionTimestampValue, a1);
}

uint64_t sub_1C1229CD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return sub_1BFF97B80(v4, a2);
}

uint64_t NoopBundleSessionManager.debugDetectionTimestampValue.setter(uint64_t a1)
{
  return sub_1C1229D2C(a1, &OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugDetectionTimestampValue);
}

uint64_t sub_1C1229D2C(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  sub_1C1229F78(a1, v4);
  return swift_endAccess();
}

uint64_t (*NoopBundleSessionManager.debugDetectionTimestampValue.modify())()
{
  return j__swift_endAccess;
}

uint64_t NoopBundleSessionManager.initialNewSubscriptionDetectionTimestampObservable.getter()
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C151631C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1BFEEA2D4(0, &qword_1EA199500, (uint64_t (*)(uint64_t))sub_1BFF97C40, MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  return sub_1C151892C();
}

uint64_t NoopBundleSessionManager.init()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugInitialPurchaseTimestampValue;
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugDetectionTimestampValue, 1, 1, v2);
  return v0;
}

uint64_t sub_1C1229F78(uint64_t a1, uint64_t a2)
{
  sub_1BFF97C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NoopBundleSessionManager.refreshSession(with:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C1229FFC, 0, 0);
}

uint64_t sub_1C1229FFC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for BundleSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t NoopBundleSessionManager.currentSession()()
{
  type metadata accessor for BundleSessionCache();
  return swift_storeEnumTagMultiPayload();
}

uint64_t NoopBundleSessionManager.deinit()
{
  sub_1BFF97BE4(v0 + OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugInitialPurchaseTimestampValue);
  sub_1BFF97BE4(v0 + OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugDetectionTimestampValue);
  return v0;
}

uint64_t NoopBundleSessionManager.__deallocating_deinit()
{
  sub_1BFF97BE4(v0 + OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugInitialPurchaseTimestampValue);
  sub_1BFF97BE4(v0 + OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugDetectionTimestampValue);
  return swift_deallocClassInstance();
}

uint64_t sub_1C122A198@<X0>(uint64_t a1@<X8>)
{
  return sub_1C122A1B0(&OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugInitialPurchaseTimestampValue, a1);
}

uint64_t sub_1C122A1A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C122A1B0(&OBJC_IVAR____TtC8NewsFeed24NoopBundleSessionManager_debugDetectionTimestampValue, a1);
}

uint64_t sub_1C122A1B0@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2 + *a1;
  swift_beginAccess();
  return sub_1BFF97B80(v4, a2);
}

uint64_t sub_1C122A204()
{
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C151631C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1BFEEA2D4(0, &qword_1EA199500, (uint64_t (*)(uint64_t))sub_1BFF97C40, MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  return sub_1C151892C();
}

uint64_t sub_1C122A2F8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C122A46C, 0, 0);
}

uint64_t sub_1C122A318()
{
  type metadata accessor for BundleSessionCache();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C122A35C()
{
  return type metadata accessor for NoopBundleSessionManager();
}

uint64_t type metadata accessor for NoopBundleSessionManager()
{
  uint64_t result = qword_1EA1AD328;
  if (!qword_1EA1AD328) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C122A3B0()
{
  sub_1BFF97C40();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for NoopBundleSessionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NoopBundleSessionManager);
}

uint64_t dispatch thunk of NoopBundleSessionManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void __swiftcall PuzzleComponentAccessoryViewEvent.init(identifier:item:target:)(NewsFeed::PuzzleComponentAccessoryViewEvent *__return_ptr retstr, Swift::String identifier, Swift::String item, NewsFeed::PuzzleComponentEventTarget target)
{
  NewsFeed::PuzzleComponentEventTarget v4 = *(unsigned char *)target;
  retstr->identifier = identifier;
  retstr->item = item;
  retstr->target = v4;
}

uint64_t PuzzleComponentAccessoryViewEvent.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleComponentAccessoryViewEvent.item.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void PuzzleComponentAccessoryViewEvent.target.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

BOOL static PuzzleComponentEventTarget.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PuzzleComponentEventTarget.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t PuzzleComponentEventTarget.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t PuzzleComponentAccessoryViewEvent.scriptId.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t PuzzleComponentAccessoryViewEvent.scriptEventName.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t PuzzleComponentAccessoryViewEvent.scriptEventDetail.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1BFED9C78();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  *(void *)(inited + 32) = 25705;
  *(void *)(inited + 40) = 0xE200000000000000;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v1;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0x64695F6D657469;
  *(void *)(inited + 120) = v6;
  *(void *)(inited + 88) = 0xE700000000000000;
  *(void *)(inited + 96) = v4;
  *(void *)(inited + 104) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BFF99224(inited);
}

unint64_t sub_1C122A668()
{
  unint64_t result = qword_1EA1AD338;
  if (!qword_1EA1AD338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD338);
  }
  return result;
}

unint64_t sub_1C122A6BC()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C122A6D8()
{
  return 0xD00000000000001FLL;
}

ValueMetadata *type metadata accessor for PuzzleComponentAccessoryViewEvent()
{
  return &type metadata for PuzzleComponentAccessoryViewEvent;
}

unsigned char *storeEnumTagSinglePayload for PuzzleComponentEventTarget(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C122A7D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleComponentEventTarget()
{
  return &type metadata for PuzzleComponentEventTarget;
}

uint64_t sub_1C122A80C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C05F66A4(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = *(void *)(type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota() - 8);
    uint64_t v5 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = *v5;
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_1C05F66A4(v8 > 1, v9 + 1, 1);
      }
      uint64_t v5 = (uint64_t *)((char *)v5 + v6);
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C122A930(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_1C15203FC();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      uint64_t v4 = sub_1C1516D9C();
      uint64_t v5 = sub_1C151ECCC();
      *(void *)(v5 + 16) = a2;
      uint64_t v6 = *(void *)(v4 - 8);
      unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      unint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
      v8(v5 + v7, a1, v4);
      uint64_t v9 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v10 = *(void *)(v6 + 72);
        unint64_t v11 = v5 + v10 + v7;
        do
        {
          v8(v11, a1, v4);
          v11 += v10;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      uint64_t v5 = MEMORY[0x1E4FBC860];
    }
    uint64_t v12 = sub_1C1516D9C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    return v5;
  }
  return result;
}

uint64_t sub_1C122AAD8(unint64_t a1, double a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1C15203FC();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_1C151ECCC();
  *(void *)(result + 16) = a1;
  uint64_t v4 = (double *)(result + 32);
  if (a1 < 4)
  {
    unint64_t v5 = 0;
    double v6 = a2;
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  double v6 = a2;
  int64x2_t v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  unint64_t v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *unint64_t v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1C122ABCC()
{
  uint64_t v0 = sub_1C1516D9C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v25 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v26 = (char *)&v23 - v4;
  uint64_t v5 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1F4188790](v5);
  int64x2_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C122BCCC(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v23 - v15;
  __swift_allocate_value_buffer(v5, qword_1EB865488);
  uint64_t v24 = v5;
  uint64_t v23 = __swift_project_value_buffer(v5, (uint64_t)qword_1EB865488);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v16, 1, 1, v0);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  *(void *)int64x2_t v7 = 0;
  *((void *)v7 + 1) = v17;
  sub_1C0EF8318((uint64_t)v16, (uint64_t)v13);
  id v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48);
  if (v18(v13, 1, v0) == 1)
  {
    sub_1C1516D8C();
    sub_1C122B134((uint64_t)v13);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
    v19(v26, v13, v0);
  }
  uint64_t v20 = v24;
  v19(&v7[*(int *)(v24 + 24)], v26, v0);
  sub_1C0EF8318((uint64_t)v16, (uint64_t)v10);
  if (v18(v10, 1, v0) == 1)
  {
    uint64_t v21 = v25;
    sub_1C1516D8C();
    sub_1C122B134((uint64_t)v10);
  }
  else
  {
    uint64_t v21 = v25;
    v19(v25, v10, v0);
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v21, v0);
  sub_1C122B134((uint64_t)v16);
  *(void *)&v7[*(int *)(v20 + 28)] = MEMORY[0x1E4FBC860];
  return sub_1C11A6DE4((uint64_t)v7, v23);
}

uint64_t FeedGroupBundleArticleQuotas.init(defaultRatio:slottedRatios:defaultRatioDepthTransform:slottedRatiosDepthTransforms:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  sub_1C122BCCC(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = sub_1C1516D9C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)a4 = a5;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (a1) {
    uint64_t v17 = a1;
  }
  *(void *)(a4 + 8) = v17;
  sub_1C0EF8318(a2, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1C1516D8C();
    sub_1C122B134((uint64_t)v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = type metadata accessor for FeedGroupBundleArticleQuotas();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a4 + *(int *)(v18 + 24), v16, v13);
  uint64_t v19 = sub_1C122B2E8(a3, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C122B134(a2);
  *(void *)(a4 + *(int *)(v18 + 28)) = v19;
  return result;
}

uint64_t sub_1C122B134(uint64_t a1)
{
  sub_1C122BCCC(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static FeedGroupBundleArticleQuotas.zero.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB8654A0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB865488);
  return sub_1C122D980(v3, a1, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
}

double FeedGroupBundleArticleQuotas.defaultRatio.getter()
{
  return *(double *)v0;
}

uint64_t FeedGroupBundleArticleQuotas.slottedRatios.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupBundleArticleQuotas.defaultRatioDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedGroupBundleArticleQuotas() + 24);
  uint64_t v4 = sub_1C1516D9C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeedGroupBundleArticleQuotas.slottedRatiosDepthTransforms.getter()
{
  type metadata accessor for FeedGroupBundleArticleQuotas();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C122B2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C122BCCC(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_1C1516D9C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v31 - v17;
  if (!a1)
  {
    sub_1C0EF8318(a3, (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_1C1516D8C();
      sub_1C122B134((uint64_t)v11);
      if (a2)
      {
LABEL_6:
        uint64_t v20 = *(void *)(a2 + 16);
LABEL_16:
        uint64_t v29 = (uint64_t)v18;
        return sub_1C122A930(v29, v20);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
      if (a2) {
        goto LABEL_6;
      }
    }
    uint64_t v20 = 0;
    goto LABEL_16;
  }
  if (a2) {
    uint64_t v19 = *(void *)(a2 + 16);
  }
  else {
    uint64_t v19 = 0;
  }
  uint64_t v21 = *(void *)(a1 + 16);
  if (v19 != v21)
  {
    uint64_t v22 = qword_1EB87B060;
    swift_bridgeObjectRetain();
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v23 = (void *)qword_1EB93C700;
    sub_1BFFDEB20();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1527210;
    id v25 = v23;
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBB550];
    uint64_t v27 = MEMORY[0x1E4FBB5C8];
    *(void *)(v24 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v24 + 64) = v27;
    *(void *)(v24 + 32) = v21;
    if (a2) {
      uint64_t v28 = *(void *)(a2 + 16);
    }
    else {
      uint64_t v28 = 0;
    }
    *(void *)(v24 + 96) = v26;
    *(void *)(v24 + 104) = v27;
    *(void *)(v24 + 72) = v28;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    sub_1C0EF8318(a3, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
    {
      sub_1C1516D8C();
      sub_1C122B134((uint64_t)v8);
      if (a2)
      {
LABEL_20:
        uint64_t v20 = *(void *)(a2 + 16);
LABEL_23:
        uint64_t v29 = (uint64_t)v15;
        return sub_1C122A930(v29, v20);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v8, v12);
      if (a2) {
        goto LABEL_20;
      }
    }
    uint64_t v20 = 0;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t FeedGroupBundleArticleQuotas.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v48 = sub_1C1516D9C();
  uint64_t v43 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v45 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1F4188790](v47);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C122BCCC(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v36 - v10;
  sub_1C122C1F8(0, &qword_1EB86B628, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v46 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v36 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C122BC20();
  uint64_t v16 = (uint64_t)v49;
  sub_1C1520EBC();
  if (v16)
  {
    uint64_t v25 = (uint64_t)a1;
  }
  else
  {
    id v42 = v8;
    long long v49 = v11;
    uint64_t v17 = v46;
    uint64_t v18 = v47;
    uint64_t v19 = v5;
    uint64_t v20 = v48;
    sub_1C122BC74();
    char v50 = 1;
    sub_1C122C25C((unint64_t *)&qword_1EB879F60);
    uint64_t v21 = v15;
    sub_1C152065C();
    if (v51) {
      uint64_t v22 = v51;
    }
    else {
      uint64_t v22 = MEMORY[0x1E4FBC860];
    }
    LOBYTE(v51) = 0;
    sub_1C15206BC();
    uint64_t v24 = v23;
    LOBYTE(v51) = 2;
    sub_1BFCD421C(&qword_1EB8628D8, MEMORY[0x1E4FB7810]);
    sub_1C152065C();
    uint64_t v41 = v22;
    sub_1C122BCCC(0, &qword_1EB863290, MEMORY[0x1E4FBB320]);
    char v50 = 3;
    sub_1C122C2BC(&qword_1EB8632A0, &qword_1EB8628D8);
    sub_1C152065C();
    long long v39 = v21;
    uint64_t v40 = v13;
    uint64_t v37 = v51;
    *(void *)uint64_t v19 = v24;
    uint64_t v27 = v41;
    uint64_t v28 = (uint64_t)v42;
    *((void *)v19 + 1) = v41;
    sub_1C0EF8318((uint64_t)v49, v28);
    uint64_t v29 = v43;
    int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v28, 1, v20);
    uint64_t v31 = v20;
    uint64_t v38 = a1;
    if (v30 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1C1516D8C();
      sub_1C122B134(v28);
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v19[*(int *)(v18 + 24)], v45, v20);
    }
    else
    {
      unint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
      uint64_t v33 = v31;
      v32(v45, v28, v31);
      swift_bridgeObjectRetain();
      v32(&v19[*(int *)(v18 + 24)], (uint64_t)v45, v33);
    }
    uint64_t v34 = (uint64_t)v49;
    uint64_t v35 = sub_1C122B2E8(v37, v27, (uint64_t)v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C122B134(v34);
    *(void *)&v19[*(int *)(v18 + 28)] = v35;
    sub_1C11A6DE4((uint64_t)v19, v44);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v39, v40);
    uint64_t v25 = (uint64_t)v38;
  }
  return __swift_destroy_boxed_opaque_existential_1(v25);
}