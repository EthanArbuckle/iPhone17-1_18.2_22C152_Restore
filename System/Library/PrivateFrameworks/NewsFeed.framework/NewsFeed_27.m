uint64_t assignWithCopy for FormatTagIconStyle(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatTagIconStyle(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTagIconStyle()
{
  return &type metadata for FormatTagIconStyle;
}

unsigned char *storeEnumTagSinglePayload for FormatTagIconPreferredSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D56D48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTagIconPreferredSource()
{
  return &type metadata for FormatTagIconPreferredSource;
}

uint64_t sub_1C0D56D80()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C0D56DB8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D56DF8()
{
  return objectdestroy_43Tm_0(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0D56E24@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0D55D68(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C0D56E2C()
{
  return objectdestroy_43Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8F8]);
}

uint64_t objectdestroy_43Tm_0(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 24));
  return swift_deallocObject();
}

id sub_1C0D56EB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0D55E8C(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_1C0D56EB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C152089C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C0D56F0C()
{
  unint64_t result = qword_1EB85FBB8;
  if (!qword_1EB85FBB8)
  {
    sub_1C0D56F50();
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EB85FBB8);
  }
  return result;
}

void sub_1C0D56F50()
{
  if (!qword_1EB85F140)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85F140);
    }
  }
}

uint64_t sub_1C0D56FA8()
{
  return swift_deallocObject();
}

uint64_t sub_1C0D56FE0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

double sub_1C0D57018@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1C0D55CCC(a1, *(void **)(v2 + 16), a2);
}

double sub_1C0D57020@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0D55BE4(a1, a2, *(void **)(v3 + 16), a3);
}

id sub_1C0D5702C@<X0>(void *a1@<X8>)
{
  id v4 = *(id *)(v1 + 16);
  a1[3] = sub_1BFF6C3A8();
  a1[4] = sub_1BFF6C3E8();
  *a1 = v4;
  return v4;
}

void *sub_1C0D570B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  unsigned int v11 = *(unsigned __int8 *)(a2 + 40);
  char v12 = *(unsigned char *)(a2 + 41);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C0D5805C(v9, v8, v10, v11, v12, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
  uint64_t v13 = sub_1BFF5AB10(a1);
  if (v6)
  {
    sub_1C0D5805C(v9, v8, v10, v11, v12, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
    swift_bridgeObjectRelease_n();
    return (void *)swift_release();
  }
  uint64_t v15 = v13;
  sub_1C0D5805C(v9, v8, v10, v11, v12, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C0D58178(v16, a6);
  uint64_t v18 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a6 + 16);
  swift_bridgeObjectRetain();
  if (!v19)
  {
LABEL_8:
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    v28 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1C00B152C(a6);
    swift_bridgeObjectRelease();
    uint64_t *v28 = a4;
    v28[1] = a5;
    v28[2] = v29;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)swift_release();
  }
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_1BFEF2D8C(a4, a5);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v22 = (uint64_t *)(*(void *)(a6 + 56) + 40 * v20);
  uint64_t v23 = v22[1];
  uint64_t v32 = *v22;
  uint64_t v24 = v22[2];
  uint64_t v25 = v22[3];
  uint64_t v26 = v22[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_1C0D5841C();
  unint64_t result = (void *)swift_allocObject();
  result[4] = v32;
  result[5] = v23;
  result[6] = v24;
  result[7] = v25;
  result[8] = v26;
  result[2] = v18;
  result[3] = v17;
  return result;
}

void *sub_1C0D573F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  unsigned int v10 = *(unsigned __int8 *)(a2 + 40);
  char v11 = *(unsigned char *)(a2 + 41);
  swift_retain();
  swift_retain();
  sub_1C0D5805C(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
  uint64_t v12 = sub_1BFF5AB10(a1);
  if (v30)
  {
    sub_1C0D5805C(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
    swift_release_n();
    return (void *)swift_release();
  }
  else
  {
    uint64_t v14 = v12;
    uint64_t v29 = a5;
    sub_1C0D5805C(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
    swift_release();
    int64_t v15 = *(void *)(a3 + 16);
    uint64_t v27 = v14;
    if (v15)
    {
      uint64_t v32 = MEMORY[0x1E4FBC860];
      uint64_t v16 = a5;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1C05F8164(0, v15, 0);
      uint64_t v31 = v32;
      uint64_t v17 = a3 + 56;
      do
      {
        uint64_t v19 = *(void *)(v17 - 24);
        uint64_t v18 = *(void *)(v17 - 16);
        char v20 = *(unsigned char *)(v17 - 8);
        swift_retain();
        sub_1BFF5B7E0(v19, v18, v20);
        swift_retain();
        sub_1BFF5B7E0(v19, v18, v20);
        char v21 = sub_1BFF99B18(v16);
        swift_release();
        sub_1BFF5B7CC(v19, v18, v20);
        swift_release();
        uint64_t v22 = v31;
        unint64_t v24 = *(void *)(v31 + 16);
        unint64_t v23 = *(void *)(v31 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1C05F8164(v23 > 1, v24 + 1, 1);
          uint64_t v22 = v31;
        }
        v17 += 32;
        *(void *)(v22 + 16) = v24 + 1;
        uint64_t v31 = v22;
        uint64_t v25 = v22 + 32 * v24;
        *(void *)(v25 + 32) = v19;
        *(void *)(v25 + 40) = v18;
        *(unsigned char *)(v25 + 48) = v20;
        *(void *)(v25 + 56) = v21;
        --v15;
        uint64_t v16 = v29;
      }
      while (v15);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      uint64_t v31 = MEMORY[0x1E4FBC860];
      uint64_t v16 = a5;
    }
    swift_retain();
    uint64_t v26 = sub_1BFF99B18(v16);
    swift_release_n();
    swift_release();
    sub_1C0D58120();
    unint64_t result = (void *)swift_allocObject();
    result[2] = v27;
    result[3] = v31;
    result[4] = v26;
  }
  return result;
}

uint64_t sub_1C0D577DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        sub_1BFF5B7CC(*(void *)a1, v3, 1);
        sub_1BFF5B7CC(v5, v6, 1);
        if ((((v2 & 1) == 0) ^ v5)) {
          goto LABEL_19;
        }
        return 0;
      }
    }
    else if (v7 == 2)
    {
      sub_1BFF5B7CC(*(void *)a1, v3, 2);
      sub_1BFF5B7CC(v5, v6, 2);
      if (v2 == v5) {
        goto LABEL_19;
      }
      return 0;
    }
LABEL_11:
    sub_1BFF5B7E0(v5, v6, v7);
    sub_1BFF5B7CC(v2, v3, v4);
    sub_1BFF5B7CC(v5, v6, v7);
    return 0;
  }
  if (*(unsigned char *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)a1;
  if (v2 == v5 && v3 == v6)
  {
    sub_1BFF5B7E0(v9, v3, 0);
    sub_1BFF5B7E0(v2, v3, 0);
    sub_1BFF5B7CC(v2, v3, 0);
    sub_1BFF5B7CC(v2, v3, 0);
  }
  else
  {
    char v11 = sub_1C1520A9C();
    sub_1BFF5B7E0(v2, v3, 0);
    sub_1BFF5B7E0(v5, v6, 0);
    sub_1BFF5B7CC(v2, v3, 0);
    sub_1BFF5B7CC(v5, v6, 0);
    if ((v11 & 1) == 0) {
      return 0;
    }
  }
LABEL_19:
  type metadata accessor for FormatCommandValue.CaseValue();
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C0D579E4()
{
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C0D57A10(uint64_t a1, uint64_t a2)
{
  return sub_1C0D577DC(a1, a2);
}

uint64_t sub_1C0D57A20()
{
  return sub_1C0D579E4();
}

uint64_t static FormatCommandValue.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  __int16 v4 = *(_WORD *)(*(void *)a1 + 40);
  uint64_t v5 = *(void *)(*a2 + 32);
  __int16 v6 = *(_WORD *)(*a2 + 40);
  long long v11 = *(_OWORD *)(*(void *)a1 + 16);
  uint64_t v12 = v3;
  __int16 v13 = v4;
  long long v8 = *(_OWORD *)(v2 + 16);
  uint64_t v9 = v5;
  __int16 v10 = v6;
  if ((static FormatCommandBinding.== infix(_:_:)(&v11, &v8) & 1) == 0) {
    return 0;
  }
  type metadata accessor for FormatCommandValue.CaseValue();
  swift_getWitnessTable();
  if ((sub_1C151ED6C() & 1) == 0) {
    return 0;
  }
  type metadata accessor for FormatCommandValue();
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C0D57B54(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D57B90(uint64_t a1, uint64_t *a2)
{
  return static FormatCommandValue.== infix(_:_:)(a1, a2);
}

uint64_t *sub_1C0D57BA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 16) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    __int16 v13 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    uint64_t v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    uint64_t v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    v16(v14, v15, v4);
  }
  return a1;
}

void *sub_1C0D57CC8(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 8 + (v5 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

void *sub_1C0D57D84(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_1C0D57E08(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  uint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v6 = *(void *)v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 8 + v5) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0D57F64(void *a1)
{
  return sub_1BFC3CD6C(a1);
}

uint64_t sub_1C0D57FA4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D57FE0(void *a1)
{
  return sub_1BFC3CD6C(a1);
}

uint64_t sub_1C0D58020(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D5805C(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      uint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      uint64_t result = a7();
      break;
    case 6u:
      uint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t v8 = a4 & 1;
      uint64_t result = a8(result, a2, a3, v8);
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C0D58120()
{
  if (!qword_1EB867638)
  {
    sub_1BFC3D764();
    unint64_t v0 = type metadata accessor for FormatCommandActionValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB867638);
    }
  }
}

uint64_t sub_1C0D58178(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F67C4(0, v2, 0);
    uint64_t v3 = v29;
    uint64_t v6 = (uint64_t *)(a1 + 64);
    uint64_t v7 = a2;
    uint64_t v24 = a2;
    while (1)
    {
      uint64_t v27 = v3;
      uint64_t v8 = *(v6 - 4);
      uint64_t v9 = *(v6 - 3);
      char v10 = *((unsigned char *)v6 - 16);
      uint64_t v11 = *(v6 - 1);
      uint64_t v12 = *v6;
      uint64_t v13 = *(void *)(v7 + 16);
      swift_bridgeObjectRetain();
      sub_1BFF5B7E0(v8, v9, v10);
      swift_bridgeObjectRetain();
      sub_1BFF5B7E0(v8, v9, v10);
      if (!v13) {
        break;
      }
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_1BFEF2D8C(v11, v12);
      if ((v15 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        break;
      }
      uint64_t v16 = *(void *)(v7 + 56) + 40 * v14;
      long long v28 = *(_OWORD *)(v16 + 8);
      uint64_t v17 = *(void *)(v16 + 32);
      uint64_t v25 = *(void *)(v16 + 24);
      uint64_t v26 = *(void *)v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF5B7CC(v8, v9, v10);
      swift_bridgeObjectRelease();
      uint64_t v3 = v27;
      unint64_t v19 = *(void *)(v27 + 16);
      unint64_t v18 = *(void *)(v27 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1C05F67C4(v18 > 1, v19 + 1, 1);
        uint64_t v3 = v27;
      }
      v6 += 5;
      *(void *)(v3 + 16) = v19 + 1;
      uint64_t v20 = v3 + (v19 << 6);
      *(void *)(v20 + 32) = v8;
      *(void *)(v20 + 40) = v9;
      *(unsigned char *)(v20 + 48) = v10;
      *(void *)(v20 + 56) = v26;
      *(_OWORD *)(v20 + 64) = v28;
      uint64_t v7 = v24;
      *(void *)(v20 + 80) = v25;
      *(void *)(v20 + 88) = v17;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    uint64_t v22 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C00B152C(v7);
    swift_bridgeObjectRelease();
    uint64_t *v22 = v11;
    v22[1] = v12;
    v22[2] = v3;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1BFF5B7CC(v8, v9, v10);
    swift_bridgeObjectRelease();
    sub_1BFF5B7CC(v8, v9, v10);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_1C0D5841C()
{
  if (!qword_1EB88B3E8)
  {
    unint64_t v0 = type metadata accessor for FormatCommandActionValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88B3E8);
    }
  }
}

void sub_1C0D58474(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 8);
  switch(v4 >> 6)
  {
    case 1u:
      sub_1C0292B2C(objc_msgSend(*(id *)(a1 + 16), sel_eventLeagueTag), a2);
      goto LABEL_12;
    case 2u:
      id v6 = objc_msgSend(*(id *)(a1 + 16), sel_eventCompetitorTags);
      if (v6)
      {
        uint64_t v7 = v6;
        sub_1C017E704();
        unint64_t v8 = sub_1C151EBCC();

        if (!(v8 >> 62)) {
          goto LABEL_6;
        }
      }
      else
      {
        unint64_t v8 = MEMORY[0x1E4FBC860];
        if (!(MEMORY[0x1E4FBC860] >> 62))
        {
LABEL_6:
          uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v3 < v9) {
            goto LABEL_7;
          }
LABEL_20:
          type metadata accessor for FormatLayoutError();
          sub_1C0D5A3EC((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
          swift_allocError();
          uint64_t v17 = v16;
          swift_bridgeObjectRelease();
          *uint64_t v17 = v9;
          v17[1] = v3;
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          return;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v3 >= v9) {
        goto LABEL_20;
      }
LABEL_7:
      if ((v8 & 0xC000000000000001) == 0)
      {
        if (v3 < 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v3 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          char v10 = *(void **)(v8 + 8 * v3 + 32);
          swift_unknownObjectRetain();
          goto LABEL_11;
        }
        __break(1u);
        JUMPOUT(0x1C0D587F0);
      }
      char v10 = (void *)MEMORY[0x1C18C7CB0](v3, v8);
LABEL_11:
      swift_bridgeObjectRelease();
      sub_1C0292B2C(v10, a2);
LABEL_12:
      swift_unknownObjectRelease();
      return;
    case 3u:
      uint64_t v11 = v3 | v4 ^ 0xC0;
      id v12 = objc_msgSend((id)swift_unknownObjectRetain(), sel_eventCompetitorTags);
      uint64_t v13 = v12;
      if (v11)
      {
        if (v12)
        {
          sub_1C017E704();
          char v15 = (void *)sub_1C151EBCC();
        }
        else
        {
          char v15 = (void *)MEMORY[0x1E4FBC860];
        }
        uint64_t v20 = _s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(v15);
        swift_unknownObjectRelease();
        unint64_t v19 = (void *)v20[3];
      }
      else
      {
        if (v12)
        {
          sub_1C017E704();
          unint64_t v14 = (void *)sub_1C151EBCC();
        }
        else
        {
          unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
        }
        unint64_t v18 = _s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(v14);
        swift_unknownObjectRelease();
        unint64_t v19 = (void *)v18[2];
      }
      id v21 = v19;
      sub_1C151F9DC();
      double v23 = v22;
      double v25 = v24;
      double v27 = v26;
      uint64_t v29 = v28;
      uint64_t v30 = swift_allocObject();
      *(double *)(v30 + 16) = v23 * 255.0;
      *(double *)(v30 + 24) = v25 * 255.0;
      *(double *)(v30 + 32) = v27 * 255.0;
      *(void *)(v30 + 40) = v29;
      *(unsigned char *)(v30 + 48) = 0;
      swift_release();

      *a2 = v30 | 0x6000000000000000;
      return;
    default:
      sub_1C0292B2C(*(id *)(a1 + 16), a2);
      return;
  }
}

unint64_t sub_1C0D58804(char a1)
{
  unint64_t result = 0x746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65756761656CLL;
      break;
    case 2:
      unint64_t result = 0x74697465706D6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0D588BC(unsigned __int8 *a1, char *a2)
{
  return sub_1C1480D70(*a1, *a2);
}

uint64_t sub_1C0D588C8()
{
  return sub_1C015EAA8();
}

uint64_t sub_1C0D588D0()
{
  return sub_1C0448B34();
}

uint64_t sub_1C0D588D8()
{
  return sub_1C044D998();
}

uint64_t sub_1C0D588E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0D5A340();
  *a1 = result;
  return result;
}

unint64_t sub_1C0D58910@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0D58804(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0D5893C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0D5899C()
{
  return sub_1C151EAEC();
}

void sub_1C0D589EC(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B870;
}

uint64_t sub_1C0D58A00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSportsEventBinding.Color.init(from:)(a1, a2);
}

uint64_t sub_1C0D58A18(void *a1)
{
  return FormatSportsEventBinding.Color.encode(to:)(a1);
}

uint64_t sub_1C0D58A30@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  switch(*a1)
  {
    case 1:
      sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
      uint64_t v24 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v9 = swift_allocObject();
      long long v54 = xmmword_1C1529AE0;
      *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
      double v26 = (void *)(v9 + v25);
      double v27 = *(void **)(a2 + 16);
      id v28 = objc_msgSend(objc_msgSend(v27, sel_eventLeagueTag), sel_displayName);
      swift_unknownObjectRelease();
      uint64_t v13 = sub_1C151E62C();
      uint64_t v15 = v29;

      sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v54;
      id v31 = objc_msgSend(v27, sel_eventLeagueTag);
      swift_getObjectType();
      sub_1C0295258((uint64_t)v31, (uint64_t)&v55);
      swift_unknownObjectRelease();
      *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(inited + 64) = &off_1F1BDEC90;
      uint64_t v32 = swift_allocObject();
      *(void *)(inited + 32) = v32;
      *(void *)(v32 + 48) = v57;
      long long v33 = v56;
      *(_OWORD *)(v32 + 16) = v55;
      *(_OWORD *)(v32 + 32) = v33;
      uint64_t v34 = sub_1C0233FC8(inited);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      uint64_t v20 = sub_1C131B79C(v34);
      swift_bridgeObjectRelease();
      id v21 = v26;
      uint64_t v22 = 0x65756761654CLL;
      uint64_t v23 = 0xE600000000000000;
      goto LABEL_4;
    case 2:
      id v37 = objc_msgSend(*(id *)(a2 + 16), sel_eventCompetitorTags);
      if (!v37) {
        goto LABEL_20;
      }
      v38 = v37;
      sub_1C017E704();
      unint64_t v39 = sub_1C151EBCC();

      if (v39 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v50 = sub_1C15204BC();
        uint64_t v40 = swift_bridgeObjectRelease();
        if (v50) {
          goto LABEL_8;
        }
      }
      else if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_8:
        MEMORY[0x1F4188790](v40);
        v53[2] = a3;
        uint64_t v9 = sub_1C09FF708(v39, (void (*)(unint64_t, uint64_t))sub_1C0D5A38C, (uint64_t)v53);
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      swift_bridgeObjectRelease();
LABEL_20:
      sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
      uint64_t v51 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v52 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
      long long v55 = 0u;
      long long v56 = 0u;
      uint64_t result = sub_1C042FB5C(0x74697465706D6F43, 0xEA0000000000726FLL, (uint64_t)&v55, (uint64_t *)(v9 + v52));
LABEL_21:
      *a4 = v9;
      return result;
    case 3:
      sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
      uint64_t v41 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v42 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
      v43 = (void *)(v9 + v42);
      *(void *)&long long v55 = 0;
      BYTE8(v55) = -64;
      sub_1C0D58474(a2, &v58);
      if (v4)
      {

        uint64_t v44 = 0xF000000000000007;
      }
      else
      {
        uint64_t v44 = v58;
      }
      v48 = v43;
      uint64_t v49 = 0xEC0000007466654CLL;
      goto LABEL_17;
    case 4:
      sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
      uint64_t v45 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
      v47 = (void *)(v9 + v46);
      *(void *)&long long v55 = 1;
      BYTE8(v55) = -64;
      sub_1C0D58474(a2, &v58);
      if (v4)
      {

        uint64_t v44 = 0xF000000000000007;
      }
      else
      {
        uint64_t v44 = v58;
      }
      v48 = v47;
      uint64_t v49 = 0xED00007468676952;
LABEL_17:
      uint64_t result = sub_1C0433BC8(0x207075686374614DLL, v49, v44, v48);
      goto LABEL_21;
    default:
      sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
      uint64_t v7 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v9 = swift_allocObject();
      long long v54 = xmmword_1C1529AE0;
      *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
      char v10 = (void *)(v9 + v8);
      uint64_t v11 = *(void **)(a2 + 16);
      swift_getObjectType();
      id v12 = objc_msgSend(v11, sel_displayName);
      uint64_t v13 = sub_1C151E62C();
      uint64_t v15 = v14;

      sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
      uint64_t v16 = swift_initStackObject();
      *(_OWORD *)(v16 + 16) = v54;
      sub_1C0295258((uint64_t)v11, (uint64_t)&v55);
      *(void *)(v16 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v16 + 64) = &off_1F1BDEC90;
      uint64_t v17 = swift_allocObject();
      *(void *)(v16 + 32) = v17;
      *(void *)(v17 + 48) = v57;
      long long v18 = v56;
      *(_OWORD *)(v17 + 16) = v55;
      *(_OWORD *)(v17 + 32) = v18;
      uint64_t v19 = sub_1C0233FC8(v16);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      uint64_t v20 = sub_1C131B79C(v19);
      swift_bridgeObjectRelease();
      id v21 = v10;
      uint64_t v22 = 0x746E657645;
      uint64_t v23 = 0xE500000000000000;
LABEL_4:
      uint64_t result = sub_1C042F458(v22, v23, (uint64_t)v20, v13, v15, v21);
      goto LABEL_21;
  }
}

uint64_t sub_1C0D59264@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  strcpy((char *)v15, "Competitor [");
  BYTE13(v15[0]) = 0;
  HIWORD(v15[0]) = -5120;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  long long v4 = v15[0];
  swift_getObjectType();
  id v5 = objc_msgSend(a1, sel_displayName);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0295258((uint64_t)a1, (uint64_t)v15);
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v10 = swift_allocObject();
  *(void *)(inited + 32) = v10;
  *(void *)(v10 + 48) = v16;
  long long v11 = v15[1];
  *(_OWORD *)(v10 + 16) = v15[0];
  *(_OWORD *)(v10 + 32) = v11;
  uint64_t v12 = sub_1C0233FC8(inited);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  uint64_t v13 = sub_1C131B79C(v12);
  swift_bridgeObjectRelease();
  return sub_1C042F458(v4, *((uint64_t *)&v4 + 1), (uint64_t)v13, v6, v8, a2);
}

uint64_t sub_1C0D59430@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for FormatJson();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)&v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&double v12 = MEMORY[0x1F4188790](v10).n128_u64[0];
  uint64_t v14 = (uint64_t *)&v35[-v13];
  switch(*a1)
  {
    case 1:
      id v18 = objc_msgSend(*(id *)(a2 + 16), sel_eventLeagueTag, v12);
      MEMORY[0x1F4188790](v18);
      *(void *)&v35[-16] = v19;
      *uint64_t v14 = sub_1C0183AC4((void (*)(char *))sub_1C0D5A434, (uint64_t)&v35[-32], (uint64_t)&unk_1F1B647D0);
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      uint64_t v16 = 0x65756761656CLL;
      unint64_t v17 = 0xE600000000000000;
      goto LABEL_4;
    case 2:
      id v23 = objc_msgSend(*(id *)(a2 + 16), sel_eventCompetitorTags, v12);
      if (v23)
      {
        uint64_t v24 = v23;
        sub_1C017E704();
        unint64_t v25 = sub_1C151EBCC();
      }
      else
      {
        unint64_t v25 = MEMORY[0x1E4FBC860];
      }
      swift_retain();
      uint64_t v33 = sub_1C0D59E0C(v25);
      swift_bridgeObjectRelease();
      swift_release();
      *uint64_t v9 = v33;
      swift_storeEnumTagMultiPayload();
      *a3 = 0x74697465706D6F63;
      a3[1] = 0xEA0000000000726FLL;
      uint64_t v20 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v21 = (uint64_t)a3 + *(int *)(v20 + 20);
      uint64_t v22 = (uint64_t)v9;
      goto LABEL_13;
    case 3:
      uint64_t v36 = 0;
      char v37 = -64;
      sub_1C0D58474(a2, &v38);
      double v26 = v3;
      if (v3) {
        goto LABEL_10;
      }
      uint64_t v27 = v38;
      uint64_t v28 = type metadata accessor for FormatJsonKeyValue();
      *(void *)((char *)a3 + *(int *)(v28 + 20)) = v27;
      swift_storeEnumTagMultiPayload();
      unint64_t v29 = 0xD000000000000010;
      uint64_t v30 = "matchupLeftColor";
      goto LABEL_15;
    case 4:
      uint64_t v36 = 1;
      char v37 = -64;
      sub_1C0D58474(a2, &v38);
      double v26 = v3;
      if (v3)
      {
LABEL_10:

        uint64_t v31 = type metadata accessor for FormatJsonKeyValue();
        return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a3, 1, 1, v31);
      }
      else
      {
        uint64_t v34 = v38;
        uint64_t v28 = type metadata accessor for FormatJsonKeyValue();
        *(void *)((char *)a3 + *(int *)(v28 + 20)) = v34;
        swift_storeEnumTagMultiPayload();
        unint64_t v29 = 0xD000000000000011;
        uint64_t v30 = "matchupRightColor";
LABEL_15:
        *a3 = v29;
        a3[1] = (unint64_t)(v30 - 32) | 0x8000000000000000;
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a3, 0, 1, v28);
      }
    default:
      MEMORY[0x1F4188790](v11);
      *(void *)&v35[-16] = v15;
      *uint64_t v14 = sub_1C0183AC4((void (*)(char *))sub_1C0D5A4BC, (uint64_t)&v35[-32], (uint64_t)&unk_1F1B647D0);
      swift_storeEnumTagMultiPayload();
      uint64_t v16 = 0x746E657665;
      unint64_t v17 = 0xE500000000000000;
LABEL_4:
      *a3 = v16;
      a3[1] = v17;
      uint64_t v20 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v21 = (uint64_t)a3 + *(int *)(v20 + 20);
      uint64_t v22 = (uint64_t)v14;
LABEL_13:
      sub_1C0D5A454(v22, v21, (uint64_t (*)(void))type metadata accessor for FormatJson);
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a3, 0, 1, v20);
  }
}

BOOL _s8NewsFeed24FormatSportsEventBindingV5ColorO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((unsigned __int8 *)a1 + 8);
  uint64_t v4 = *a2;
  unsigned int v5 = *((unsigned __int8 *)a2 + 8);
  switch(v3 >> 6)
  {
    case 1u:
      if ((v5 & 0xC0) != 0x40) {
        return 0;
      }
      return (v4 ^ v2) == 0;
    case 2u:
      if ((v5 & 0xC0) != 0x80) {
        return 0;
      }
      return ((v5 ^ v3) & 0x3F) == 0 && v2 == v4;
    case 3u:
      if (!(v2 | v3 ^ 0xC0))
      {
        BOOL v8 = v5 >= 0xC0 && v4 == 0;
        return v8 && v5 == 192;
      }
      BOOL v9 = v5 >= 0xC0 && v4 == 1;
      return v9 && v5 == 192;
    default:
      if (v5 >= 0x40) {
        return 0;
      }
      return (v4 ^ v2) == 0;
  }
}

unint64_t sub_1C0D599BC(uint64_t a1)
{
  unint64_t result = sub_1C0D599E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D599E4()
{
  unint64_t result = qword_1EA1A6A00;
  if (!qword_1EA1A6A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6A00);
  }
  return result;
}

unint64_t sub_1C0D59A38(void *a1)
{
  a1[1] = sub_1C087BB30();
  a1[2] = sub_1C08FAB54();
  unint64_t result = sub_1C0D59A70();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0D59A70()
{
  unint64_t result = qword_1EA1A6A18;
  if (!qword_1EA1A6A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6A18);
  }
  return result;
}

uint64_t _s5ColorOwet_3(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 5 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 5);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 3) & 4 | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 7;
  if (v3 >= 4) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s5ColorOwst_3(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 4)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 5;
    if (a3 >= 5) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 5) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(unsigned char *)(result + 8) = 32 - ((_BYTE)a2 << 6);
    }
  }
  return result;
}

uint64_t sub_1C0D59B64(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_1C0D59B80(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 0x1F | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)unint64_t result = a2 - 3;
    *(unsigned char *)(result + 8) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.Color()
{
  return &type metadata for FormatSportsEventBinding.Color;
}

unsigned char *_s5ColorO10CodingTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D59C88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5ColorO10CodingTypeOMa_2()
{
  return &_s5ColorO10CodingTypeON_2;
}

uint64_t sub_1C0D59CC0()
{
  return sub_1C0D5A3EC(&qword_1EA1A6A20, (void (*)(uint64_t))sub_1C0D59D08);
}

void sub_1C0D59D08()
{
  if (!qword_1EA1A6A28)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A6A28);
    }
  }
}

unint64_t sub_1C0D59D64()
{
  unint64_t result = qword_1EA1A6A30;
  if (!qword_1EA1A6A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA1A6A30);
  }
  return result;
}

unint64_t sub_1C0D59DB8()
{
  unint64_t result = qword_1EB867698;
  if (!qword_1EB867698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867698);
  }
  return result;
}

uint64_t sub_1C0D59E0C(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatJsonKeyValue();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (void *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for FormatJson();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (void *)((char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (!v9) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v34 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F6904(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    uint64_t v31 = v34;
    unint64_t v26 = a1 & 0xC000000000000001;
    uint64_t v27 = v9;
    v23[1] = a1 + 32;
    uint64_t v24 = v8;
    unint64_t v25 = a1;
    while (v12 != v9)
    {
      if (v26) {
        MEMORY[0x1C18C7CB0](v12, a1);
      }
      else {
        swift_unknownObjectRetain();
      }
      uint64_t v30 = v12;
      uint64_t v13 = qword_1F1B647E0;
      if (qword_1F1B647E0)
      {
        uint64_t v33 = v10;
        sub_1C05F68BC(0, qword_1F1B647E0, 0);
        uint64_t v14 = v33;
        uint64_t v15 = &byte_1F1B647F0;
        do
        {
          char v16 = *v15++;
          char v32 = v16;
          sub_1C0294AD8(&v32, v5);
          uint64_t v33 = v14;
          unint64_t v18 = *(void *)(v14 + 16);
          unint64_t v17 = *(void *)(v14 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_1C05F68BC(v17 > 1, v18 + 1, 1);
            uint64_t v14 = v33;
          }
          *(void *)(v14 + 16) = v18 + 1;
          sub_1C0D5A454((uint64_t)v5, v14+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v18, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
          --v13;
        }
        while (v13);
        BOOL v8 = v24;
        a1 = v25;
      }
      else
      {
        uint64_t v14 = v10;
      }
      *BOOL v8 = v14;
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      uint64_t v19 = v31;
      uint64_t v34 = v31;
      unint64_t v21 = *(void *)(v31 + 16);
      unint64_t v20 = *(void *)(v31 + 24);
      uint64_t v9 = v27;
      if (v21 >= v20 >> 1)
      {
        sub_1C05F6904(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v34;
      }
      uint64_t v12 = v30 + 1;
      *(void *)(v19 + 16) = v21 + 1;
      unint64_t v22 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      uint64_t v31 = v19;
      sub_1C0D5A454((uint64_t)v8, v19 + v22 + *(void *)(v28 + 72) * v21, (uint64_t (*)(void))type metadata accessor for FormatJson);
      uint64_t v10 = MEMORY[0x1E4FBC860];
      if (v12 == v9) {
        return v31;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

double sub_1C0D5A198@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  char v14 = *(unsigned char *)(a2 + 32);
  *(void *)&v11[0] = MEMORY[0x1E4FBC860];
  char v10 = byte_1F1B68638;
  sub_1C0D58A30(&v10, (uint64_t)v13, a1, &v9);
  sub_1C1047634(v9);
  char v10 = byte_1F1B68639;
  sub_1C0D58A30(&v10, (uint64_t)v13, a1, &v9);
  sub_1C1047634(v9);
  char v10 = byte_1F1B6863A;
  sub_1C0D58A30(&v10, (uint64_t)v13, a1, &v9);
  sub_1C1047634(v9);
  char v10 = byte_1F1B6863B;
  sub_1C0D58A30(&v10, (uint64_t)v13, a1, &v9);
  sub_1C1047634(v9);
  char v10 = byte_1F1B6863C;
  sub_1C0D58A30(&v10, (uint64_t)v13, a1, &v9);
  sub_1C1047634(v9);
  uint64_t v6 = sub_1C0233D40(*(uint64_t *)&v11[0]);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x726F6C6F43, 0xE500000000000000, 0, 0, v6, v11);
  swift_bridgeObjectRelease();
  double result = *(double *)v11;
  long long v8 = v11[1];
  *(_OWORD *)a3 = v11[0];
  *(_OWORD *)(a3 + 16) = v8;
  *(void *)(a3 + 32) = v12;
  return result;
}

uint64_t sub_1C0D5A340()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0D5A38C@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  return sub_1C0D59264(a1, a2);
}

uint64_t sub_1C0D5A394()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D5A3DC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0D5A3EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0D5A434@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0294AD8(a1, a2);
}

uint64_t sub_1C0D5A454(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0D5A4BC@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0D5A434(a1, a2);
}

void *initializeBufferWithCopyOfBuffer for FormatItemNodeData(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    uint64_t v13 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v13;
  }
  uint64_t v6 = a3;
  uint64_t v7 = type metadata accessor for FeedItem(0);
  v447 = v3;
  v446 = a1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = v3[1];
      *a1 = *v3;
      a1[1] = v8;
      uint64_t v9 = v3[3];
      a1[2] = v3[2];
      a1[3] = v9;
      *((unsigned char *)a1 + 32) = *((unsigned char *)v3 + 32);
      char v10 = v3 + 5;
      unint64_t v11 = v3[6];
      swift_bridgeObjectRetain();
      if (v11 >= 0x11)
      {
        a1[5] = *v10;
        a1[6] = v11;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 5) = *(_OWORD *)v10;
      }
      goto LABEL_181;
    case 1u:
      uint64_t v53 = v3[1];
      *a1 = *v3;
      a1[1] = v53;
      uint64_t v54 = v3[3];
      a1[2] = v3[2];
      a1[3] = v54;
      *((unsigned char *)a1 + 32) = *((unsigned char *)v3 + 32);
      uint64_t v55 = v3[6];
      a1[5] = v3[5];
      a1[6] = v55;
      uint64_t v56 = v3[8];
      a1[7] = v3[7];
      a1[8] = v56;
      uint64_t v57 = v3 + 9;
      unint64_t v58 = v3[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v58 >= 0x11)
      {
        a1[9] = *v57;
        a1[10] = v58;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 9) = *(_OWORD *)v57;
      }
      goto LABEL_181;
    case 2u:
      uint64_t v14 = v3[1];
      *a1 = *v3;
      a1[1] = v14;
      uint64_t v15 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v16 = v15[5];
      unint64_t v17 = (char *)a1 + v16;
      unint64_t v18 = (char *)v3 + v16;
      uint64_t v19 = sub_1C151DBAC();
      unint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      unint64_t v21 = v18;
      uint64_t v3 = v447;
      v20(v17, v21, v19);
      *(void *)((char *)a1 + v15[6]) = *(void *)((char *)v447 + v15[6]);
      uint64_t v22 = v15[7];
      id v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)v447 + v22;
      *(void *)id v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v15[8];
      unint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)v447 + v25;
      unint64_t v28 = *((void *)v27 + 1);
      if (v28 >= 0x11) {
        goto LABEL_39;
      }
      *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
      goto LABEL_181;
    case 3u:
      v440 = v6;
      uint64_t v59 = v3[1];
      *a1 = *v3;
      a1[1] = v59;
      a1[2] = v3[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)v3 + 24);
      uint64_t v60 = v3[5];
      a1[4] = v3[4];
      a1[5] = v60;
      a1[6] = v3[6];
      *((unsigned char *)a1 + 56) = *((unsigned char *)v3 + 56);
      v434 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v61 = v434[10];
      v62 = (char *)a1 + v61;
      v63 = (char *)v3 + v61;
      unsigned char *v62 = *((unsigned char *)v3 + v61);
      v62[1] = *((unsigned char *)v3 + v61 + 1);
      v64 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v65 = v64[6];
      v66 = &v62[v65];
      v67 = &v63[v65];
      v68 = (int *)type metadata accessor for SharedItem();
      uint64_t v429 = *((void *)v68 - 1);
      v69 = *(unsigned int (**)(char *, uint64_t, int *))(v429 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v69(v67, 1, v68))
      {
        uint64_t v70 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        uint64_t v191 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16))(v66, v67, v191);
        v66[v68[5]] = v67[v68[5]];
        uint64_t v192 = v68[6];
        v193 = *(void **)&v67[v192];
        *(void *)&v66[v192] = v193;
        uint64_t v194 = v68[7];
        v195 = &v66[v194];
        v438 = &v67[v194];
        uint64_t v196 = sub_1C1515FDC();
        v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16);
        id v198 = v193;
        v197(v195, v438, v196);
        (*(void (**)(char *, void, uint64_t, int *))(v429 + 56))(v66, 0, 1, v68);
      }
      uint64_t v6 = v440;
      a1 = v446;
      v62[v64[7]] = v63[v64[7]];
      v62[v64[8]] = v63[v64[8]];
      v62[v64[9]] = v63[v64[9]];
      v62[v64[10]] = v63[v64[10]];
      uint64_t v199 = v434[11];
      v200 = (char *)v446 + v199;
      v201 = (char *)v447 + v199;
      uint64_t v202 = sub_1C151D2DC();
      uint64_t v203 = *(void *)(v202 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v200, v201, *(void *)(*(void *)(v204 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v200, v201, v202);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v203 + 56))(v200, 0, 1, v202);
      }
      uint64_t v3 = v447;
      uint64_t v211 = v434[12];
      v212 = (void *)((char *)v446 + v211);
      v213 = (void *)((char *)v447 + v211);
      unint64_t v214 = v213[1];
      if (v214 >= 0x11)
      {
        void *v212 = *v213;
        v212[1] = v214;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v212 = *(_OWORD *)v213;
      }
      uint64_t v215 = v434[13];
      unint64_t v216 = *(void *)((char *)v447 + v215);
      if (v216 >= 2)
      {
        if (v216 == 2)
        {
          *(void *)((char *)v446 + v215) = 2;
        }
        else
        {
          *(void *)((char *)v446 + v215) = v216;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)((char *)v446 + v215) = v216;
      }
      uint64_t v255 = v434[14];
      v256 = *(void **)((char *)v447 + v255);
      *(void *)((char *)v446 + v255) = v256;
      id v257 = v256;
      goto LABEL_181;
    case 4u:
      uint64_t v29 = v3[1];
      *a1 = *v3;
      a1[1] = v29;
      *((unsigned char *)a1 + 16) = *((unsigned char *)v3 + 16);
      uint64_t v30 = v3 + 3;
      unint64_t v31 = v3[4];
      if (v31 >= 0x11)
      {
        a1[3] = *v30;
        a1[4] = v31;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v30;
      }
      uint64_t v122 = v3[6];
      a1[5] = v3[5];
      a1[6] = v122;
      v123 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v124 = v123[8];
      v125 = (char *)a1 + v124;
      v126 = (char *)v3 + v124;
      uint64_t v127 = sub_1C1515FDC();
      uint64_t v128 = *(void *)(v127 - 8);
      v129 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
      swift_bridgeObjectRetain();
      v129(v125, v126, v127);
      uint64_t v130 = v123[9];
      v131 = (char *)a1 + v130;
      v132 = (char *)v3 + v130;
      uint64_t v437 = v127;
      v430 = v129;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))((char *)v3 + v130, 1, v127))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
      }
      else
      {
        v129(v131, v132, v127);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v131, 0, 1, v127);
      }
      *(void *)((char *)a1 + v123[10]) = *(void *)((char *)v3 + v123[10]);
      *(void *)((char *)a1 + v123[11]) = *(void *)((char *)v3 + v123[11]);
      uint64_t v166 = v123[12];
      v167 = (void *)((char *)a1 + v166);
      v168 = (void *)((char *)v3 + v166);
      uint64_t v169 = type metadata accessor for FeedHeadline(0);
      uint64_t v170 = *(void *)(v169 - 8);
      v171 = *(unsigned int (**)(void *, uint64_t, int *))(v170 + 48);
      v172 = (int *)v169;
      swift_retain();
      swift_retain();
      if (v171(v168, 1, v172))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v167, v168, *(void *)(*(void *)(v173 - 8) + 64));
      }
      else
      {
        v428 = v123;
        v442 = v6;
        uint64_t v179 = v168[1];
        void *v167 = *v168;
        v167[1] = v179;
        v167[2] = v168[2];
        *((unsigned char *)v167 + 24) = *((unsigned char *)v168 + 24);
        uint64_t v180 = v168[5];
        v167[4] = v168[4];
        v167[5] = v180;
        v167[6] = v168[6];
        *((unsigned char *)v167 + 56) = *((unsigned char *)v168 + 56);
        v427 = v172;
        uint64_t v181 = v172[10];
        v182 = (char *)v167 + v181;
        v183 = (char *)v168 + v181;
        unsigned char *v182 = *((unsigned char *)v168 + v181);
        v182[1] = *((unsigned char *)v168 + v181 + 1);
        uint64_t v184 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v185 = *(int *)(v184 + 24);
        __dst = &v182[v185];
        v426 = (int *)v184;
        v186 = &v183[v185];
        v187 = (int *)type metadata accessor for SharedItem();
        uint64_t v424 = *((void *)v187 - 1);
        v188 = *(unsigned int (**)(char *, uint64_t, int *))(v424 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v188(v186, 1, v187))
        {
          uint64_t v189 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v186, *(void *)(*(void *)(v189 - 8) + 64));
        }
        else
        {
          uint64_t v283 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 16))(__dst, v186, v283);
          __dst[v187[5]] = v186[v187[5]];
          uint64_t v284 = v187[6];
          v285 = *(void **)&v186[v284];
          *(void *)&__dst[v284] = v285;
          uint64_t v286 = v187[7];
          v287 = &__dst[v286];
          v288 = &v186[v286];
          id v289 = v285;
          v430(v287, v288, v437);
          (*(void (**)(char *, void, uint64_t, int *))(v424 + 56))(__dst, 0, 1, v187);
        }
        v182[v426[7]] = v183[v426[7]];
        v182[v426[8]] = v183[v426[8]];
        v182[v426[9]] = v183[v426[9]];
        v182[v426[10]] = v183[v426[10]];
        uint64_t v290 = v427[11];
        v291 = (char *)v167 + v290;
        v292 = (char *)v168 + v290;
        uint64_t v293 = sub_1C151D2DC();
        uint64_t v294 = *(void *)(v293 - 8);
        a1 = v446;
        v123 = v428;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v294 + 48))(v292, 1, v293))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v291, v292, *(void *)(*(void *)(v295 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v294 + 16))(v291, v292, v293);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v294 + 56))(v291, 0, 1, v293);
        }
        uint64_t v6 = v442;
        uint64_t v296 = v427[12];
        v297 = (void *)((char *)v167 + v296);
        v298 = (void *)((char *)v168 + v296);
        unint64_t v299 = v298[1];
        if (v299 >= 0x11)
        {
          void *v297 = *v298;
          v297[1] = v299;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v297 = *(_OWORD *)v298;
        }
        uint64_t v300 = v427[13];
        unint64_t v301 = *(void *)((char *)v168 + v300);
        if (v301 >= 2)
        {
          if (v301 == 2)
          {
            *(void *)((char *)v167 + v300) = 2;
          }
          else
          {
            *(void *)((char *)v167 + v300) = v301;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v167 + v300) = v301;
        }
        uint64_t v324 = v427[14];
        v325 = *(void **)((char *)v168 + v324);
        *(void *)((char *)v167 + v324) = v325;
        v326 = *(void (**)(void *, void, uint64_t, int *))(v170 + 56);
        id v327 = v325;
        v326(v167, 0, 1, v427);
      }
      uint64_t v328 = v123[13];
      v329 = (void *)((char *)a1 + v328);
      v330 = (void *)((char *)v447 + v328);
      uint64_t v331 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v332 = *(void *)(v331 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v332 + 48))(v330, 1, v331))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v329, v330, *(void *)(*(void *)(v333 - 8) + 64));
        uint64_t v3 = v447;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v335 = *v330;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v336 = v330[1];
          void *v329 = v335;
          v329[1] = v336;
          uint64_t v337 = type metadata accessor for GenericDataVisualization();
          uint64_t v338 = *(int *)(v337 + 20);
          v339 = v123;
          v340 = (char *)v329 + v338;
          v341 = v6;
          v342 = (char *)v330 + v338;
          swift_bridgeObjectRetain();
          v343 = v340;
          v123 = v339;
          v344 = v342;
          uint64_t v6 = v341;
          a1 = v446;
          v430(v343, v344, v437);
          *(void *)((char *)v329 + *(int *)(v337 + 24)) = *(uint64_t *)((char *)v330 + *(int *)(v337 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *v329 = v335;
          swift_retain();
        }
        uint64_t v3 = v447;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v332 + 56))(v329, 0, 1, v331);
      }
      *((unsigned char *)a1 + v123[14]) = *((unsigned char *)v3 + v123[14]);
      goto LABEL_181;
    case 5u:
      v71 = (void *)*v3;
      uint64_t v72 = v3[1];
      *a1 = *v3;
      a1[1] = v72;
      a1[2] = v3[2];
      *((_WORD *)a1 + 12) = *((_WORD *)v3 + 12);
      a1[4] = v3[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)v3 + 40);
      v73 = (void *)v3[7];
      a1[6] = v3[6];
      a1[7] = v73;
      *((unsigned char *)a1 + 64) = *((unsigned char *)v3 + 64);
      uint64_t v74 = v3[10];
      id v75 = v71;
      swift_bridgeObjectRetain();
      id v76 = v73;
      if (v74 == 1)
      {
        long long v77 = *(_OWORD *)(v3 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(v3 + 9);
        *(_OWORD *)(a1 + 11) = v77;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(v3 + 13);
      }
      else
      {
        a1[9] = v3[9];
        a1[10] = v74;
        uint64_t v135 = v3[12];
        a1[11] = v3[11];
        a1[12] = v135;
        v137 = (void *)v3[13];
        uint64_t v136 = v3[14];
        a1[13] = v137;
        a1[14] = v136;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v138 = v137;
      }
      v139 = v3 + 15;
      unint64_t v140 = v3[16];
      if (v140 >= 0x11)
      {
        a1[15] = *v139;
        a1[16] = v140;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v139;
      }
      *((unsigned char *)a1 + 136) = *((unsigned char *)v3 + 136);
      goto LABEL_181;
    case 6u:
      int v78 = *((unsigned __int8 *)v3 + 281);
      if (v78 == 2)
      {
        uint64_t v223 = v3[1];
        *a1 = *v3;
        a1[1] = v223;
        a1[2] = v3[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)v3 + 24);
        a1[4] = v3[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)v3 + 40);
        uint64_t v224 = v3[7];
        a1[6] = v3[6];
        a1[7] = v224;
        uint64_t v225 = v3[9];
        a1[8] = v3[8];
        a1[9] = v225;
        uint64_t v226 = v3[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v226 != 1)
        {
          a1[10] = v3[10];
          a1[11] = v226;
          v265 = v3 + 12;
          v266 = v3;
          uint64_t v267 = v3[15];
          swift_bridgeObjectRetain();
          if (v267)
          {
            uint64_t v268 = v266[16];
            a1[15] = v267;
            a1[16] = v268;
            (**(void (***)(uint64_t, void *, uint64_t))(v267 - 8))((uint64_t)(a1 + 12), v265, v267);
            a1[17] = v266[17];
            *((unsigned char *)a1 + 144) = *((unsigned char *)v266 + 144);
          }
          else
          {
            long long v368 = *((_OWORD *)v265 + 1);
            *((_OWORD *)a1 + 6) = *(_OWORD *)v265;
            *((_OWORD *)a1 + 7) = v368;
            *((_OWORD *)a1 + 8) = *((_OWORD *)v265 + 2);
            *((unsigned char *)a1 + 144) = *((unsigned char *)v265 + 48);
          }
          uint64_t v3 = v266;
          goto LABEL_171;
        }
        v227 = a1 + 10;
        v228 = v3 + 10;
        long long v229 = *((_OWORD *)v3 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)v3 + 7);
        *((_OWORD *)a1 + 8) = v229;
        *((unsigned char *)a1 + 144) = *((unsigned char *)v3 + 144);
      }
      else
      {
        if (v78 != 1)
        {
          v230 = (void *)*v3;
          uint64_t v231 = v3[1];
          *a1 = *v3;
          a1[1] = v231;
          a1[2] = v3[2];
          *((_WORD *)a1 + 12) = *((_WORD *)v3 + 12);
          a1[4] = v3[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)v3 + 40);
          v232 = (void *)v3[7];
          a1[6] = v3[6];
          a1[7] = v232;
          *((unsigned char *)a1 + 64) = *((unsigned char *)v3 + 64);
          uint64_t v233 = v3[10];
          id v234 = v230;
          swift_bridgeObjectRetain();
          id v235 = v232;
          if (v233 == 1)
          {
            long long v236 = *(_OWORD *)(v3 + 11);
            *(_OWORD *)(a1 + 9) = *(_OWORD *)(v3 + 9);
            *(_OWORD *)(a1 + 11) = v236;
            *(_OWORD *)(a1 + 13) = *(_OWORD *)(v3 + 13);
          }
          else
          {
            a1[9] = v3[9];
            a1[10] = v233;
            uint64_t v269 = v3[12];
            a1[11] = v3[11];
            a1[12] = v269;
            v271 = (void *)v3[13];
            uint64_t v270 = v3[14];
            a1[13] = v271;
            a1[14] = v270;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v272 = v271;
          }
          v273 = v3 + 15;
          unint64_t v274 = v3[16];
          if (v274 >= 0x11)
          {
            a1[15] = *v273;
            a1[16] = v274;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)v273;
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)v3 + 136);
          goto LABEL_171;
        }
        v79 = (void *)*v3;
        uint64_t v80 = v3[1];
        *a1 = *v3;
        a1[1] = v80;
        a1[2] = v3[2];
        *((_WORD *)a1 + 12) = *((_WORD *)v3 + 12);
        a1[4] = v3[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)v3 + 40);
        v81 = (void *)v3[7];
        a1[6] = v3[6];
        a1[7] = v81;
        *((unsigned char *)a1 + 64) = *((unsigned char *)v3 + 64);
        uint64_t v82 = v3[10];
        id v83 = v79;
        swift_bridgeObjectRetain();
        id v84 = v81;
        if (v82 == 1)
        {
          long long v85 = *(_OWORD *)(v3 + 11);
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(v3 + 9);
          *(_OWORD *)(a1 + 11) = v85;
          *(_OWORD *)(a1 + 13) = *(_OWORD *)(v3 + 13);
        }
        else
        {
          a1[9] = v3[9];
          a1[10] = v82;
          uint64_t v259 = v3[12];
          a1[11] = v3[11];
          a1[12] = v259;
          v261 = (void *)v3[13];
          uint64_t v260 = v3[14];
          a1[13] = v261;
          a1[14] = v260;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v262 = v261;
        }
        v263 = v3 + 15;
        unint64_t v264 = v3[16];
        if (v264 >= 0x11)
        {
          a1[15] = *v263;
          a1[16] = v264;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)v263;
        }
        v228 = v3 + 18;
        v275 = (void *)v3[18];
        *((unsigned char *)a1 + 136) = *((unsigned char *)v3 + 136);
        if (v275)
        {
          uint64_t v276 = v3[19];
          uint64_t v277 = v3[20];
          a1[18] = v275;
          a1[19] = v276;
          a1[20] = v277;
          *((_WORD *)a1 + 84) = *((_WORD *)v3 + 84);
          a1[22] = v3[22];
          *((unsigned char *)a1 + 184) = *((unsigned char *)v3 + 184);
          v278 = (void *)v3[25];
          a1[24] = v3[24];
          a1[25] = v278;
          *((unsigned char *)a1 + 208) = *((unsigned char *)v3 + 208);
          uint64_t v279 = v3[28];
          id v280 = v275;
          swift_bridgeObjectRetain();
          id v281 = v278;
          if (v279 == 1)
          {
            long long v282 = *(_OWORD *)(v3 + 29);
            *(_OWORD *)(a1 + 27) = *(_OWORD *)(v3 + 27);
            *(_OWORD *)(a1 + 29) = v282;
            *(_OWORD *)(a1 + 31) = *(_OWORD *)(v3 + 31);
          }
          else
          {
            a1[27] = v3[27];
            a1[28] = v279;
            uint64_t v306 = v3[30];
            a1[29] = v3[29];
            a1[30] = v306;
            v308 = (void *)v3[31];
            uint64_t v307 = v3[32];
            a1[31] = v308;
            a1[32] = v307;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v309 = v308;
          }
          v310 = v3 + 33;
          unint64_t v311 = v3[34];
          if (v311 >= 0x11)
          {
            a1[33] = *v310;
            a1[34] = v311;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 33) = *(_OWORD *)v310;
          }
          *((unsigned char *)a1 + 280) = *((unsigned char *)v3 + 280);
LABEL_171:
          *((unsigned char *)a1 + 281) = v78;
          goto LABEL_181;
        }
        v227 = a1 + 18;
        long long v302 = *((_OWORD *)v3 + 16);
        *((_OWORD *)a1 + 15) = *((_OWORD *)v3 + 15);
        *((_OWORD *)a1 + 16) = v302;
        *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)v3 + 265);
        long long v303 = *((_OWORD *)v3 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)v3 + 11);
        *((_OWORD *)a1 + 12) = v303;
        long long v304 = *((_OWORD *)v3 + 14);
        *((_OWORD *)a1 + 13) = *((_OWORD *)v3 + 13);
        *((_OWORD *)a1 + 14) = v304;
      }
      long long v305 = v228[1];
      _OWORD *v227 = *v228;
      v227[1] = v305;
      goto LABEL_171;
    case 7u:
      uint64_t v86 = v3[1];
      *a1 = *v3;
      a1[1] = v86;
      a1[2] = v3[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)v3 + 24);
      a1[4] = v3[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)v3 + 40);
      uint64_t v87 = v3[7];
      a1[6] = v3[6];
      a1[7] = v87;
      uint64_t v88 = v3[9];
      a1[8] = v3[8];
      a1[9] = v88;
      uint64_t v89 = v3[11];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v89 == 1)
      {
        long long v90 = *((_OWORD *)v3 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)v3 + 7);
        *((_OWORD *)a1 + 8) = v90;
        *((unsigned char *)a1 + 144) = *((unsigned char *)v3 + 144);
        long long v91 = *((_OWORD *)v3 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)v3 + 5);
        *((_OWORD *)a1 + 6) = v91;
      }
      else
      {
        a1[10] = v3[10];
        a1[11] = v89;
        v141 = v3 + 12;
        v142 = v3;
        uint64_t v143 = v3[15];
        swift_bridgeObjectRetain();
        if (v143)
        {
          uint64_t v144 = v142[16];
          a1[15] = v143;
          a1[16] = v144;
          (**(void (***)(uint64_t, void *, uint64_t))(v143 - 8))((uint64_t)(a1 + 12), v141, v143);
          a1[17] = v142[17];
          *((unsigned char *)a1 + 144) = *((unsigned char *)v142 + 144);
        }
        else
        {
          long long v258 = *((_OWORD *)v141 + 1);
          *((_OWORD *)a1 + 6) = *(_OWORD *)v141;
          *((_OWORD *)a1 + 7) = v258;
          *((_OWORD *)a1 + 8) = *((_OWORD *)v141 + 2);
          *((unsigned char *)a1 + 144) = *((unsigned char *)v141 + 48);
        }
        uint64_t v3 = v142;
      }
      goto LABEL_181;
    case 8u:
      v441 = v6;
      uint64_t v92 = v3[1];
      *a1 = *v3;
      a1[1] = v92;
      uint64_t v93 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v94 = (void *)((char *)a1 + v93);
      v95 = (char *)v3 + v93;
      uint64_t v96 = *(void *)((char *)v3 + v93 + 8);
      void *v94 = *(void *)((char *)v3 + v93);
      v94[1] = v96;
      uint64_t v97 = *(void *)((char *)v3 + v93 + 24);
      v94[2] = *(void *)((char *)v3 + v93 + 16);
      v94[3] = v97;
      uint64_t v436 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v98 = *(int *)(v436 + 24);
      v99 = (char *)v94 + v98;
      v100 = &v95[v98];
      uint64_t v101 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v435 = *(void *)(v101 - 8);
      v102 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v435 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v102(v100, 1, v101))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        uint64_t v205 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 16))(v99, v100, v205);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v435 + 56))(v99, 0, 1, v101);
      }
      uint64_t v6 = v441;
      uint64_t v3 = v447;
      a1 = v446;
      *(void *)((char *)v94 + *(int *)(v436 + 28)) = *(void *)&v95[*(int *)(v436 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_181;
    case 9u:
      uint64_t v32 = v3[1];
      *a1 = *v3;
      a1[1] = v32;
      uint64_t v33 = v3[3];
      a1[2] = v3[2];
      a1[3] = v33;
      uint64_t v34 = v3[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34)
      {
        uint64_t v35 = v3[8];
        a1[7] = v34;
        a1[8] = v35;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v34 - 8))((uint64_t)(a1 + 4), (uint64_t)(v3 + 4), v34);
      }
      else
      {
        long long v161 = *((_OWORD *)v3 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)v3 + 2);
        *((_OWORD *)a1 + 3) = v161;
        a1[8] = v3[8];
      }
      v162 = a1 + 9;
      v163 = v3 + 9;
      uint64_t v164 = v3[12];
      if (v164)
      {
        uint64_t v165 = v3[13];
        a1[12] = v164;
        a1[13] = v165;
        (**(void (***)(_OWORD *, _OWORD *))(v164 - 8))(v162, v163);
      }
      else
      {
        long long v174 = *(_OWORD *)(v3 + 11);
        _OWORD *v162 = *v163;
        *(_OWORD *)(a1 + 11) = v174;
        a1[13] = v3[13];
      }
      v175 = a1 + 14;
      v176 = v3 + 14;
      uint64_t v177 = v3[17];
      if (v177)
      {
        uint64_t v178 = v3[18];
        a1[17] = v177;
        a1[18] = v178;
        (**(void (***)(_OWORD *, _OWORD *))(v177 - 8))(v175, v176);
      }
      else
      {
        long long v190 = *((_OWORD *)v3 + 8);
        _OWORD *v175 = *v176;
        *((_OWORD *)a1 + 8) = v190;
        a1[18] = v3[18];
      }
      goto LABEL_181;
    case 0xAu:
      uint64_t v104 = v3[1];
      *a1 = *v3;
      a1[1] = v104;
      v105 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v106 = v105[5];
      v107 = (char *)a1 + v106;
      v108 = (char *)v3 + v106;
      uint64_t v109 = sub_1C151959C();
      v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v111 = v109;
      uint64_t v3 = v447;
      v110(v107, v108, v111);
      *(void *)((char *)a1 + v105[6]) = *(void *)((char *)v447 + v105[6]);
      uint64_t v112 = v105[7];
      v113 = (char *)a1 + v112;
      v114 = (char *)v447 + v112;
      *(void *)v113 = *(void *)v114;
      v113[8] = v114[8];
      uint64_t v115 = v105[8];
      unint64_t v26 = (char *)a1 + v115;
      uint64_t v27 = (char *)v447 + v115;
      unint64_t v28 = *((void *)v27 + 1);
      if (v28 >= 0x11)
      {
LABEL_39:
        *(void *)unint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = v28;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
      }
      goto LABEL_181;
    case 0xBu:
      *a1 = *v3;
      swift_retain();
      goto LABEL_181;
    case 0xCu:
      uint64_t v36 = v3[1];
      *a1 = *v3;
      a1[1] = v36;
      uint64_t v37 = v3[3];
      a1[2] = v3[2];
      a1[3] = v37;
      *((unsigned char *)a1 + 32) = *((unsigned char *)v3 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_181;
    case 0xDu:
      uint64_t v116 = v3[1];
      *a1 = *v3;
      a1[1] = v116;
      *((unsigned char *)a1 + 16) = *((unsigned char *)v3 + 16);
      v117 = v3 + 3;
      unint64_t v118 = v3[4];
      if (v118 >= 0x11)
      {
        a1[3] = *v117;
        a1[4] = v118;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v117;
      }
      uint64_t v145 = v3[6];
      a1[5] = v3[5];
      a1[6] = v145;
      v146 = (void *)v3[8];
      a1[7] = v3[7];
      a1[8] = v146;
      *((unsigned char *)a1 + 72) = *((unsigned char *)v3 + 72);
      a1[10] = v3[10];
      uint64_t v147 = v3[14];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v148 = v146;
      swift_bridgeObjectRetain();
      if (v147)
      {
        uint64_t v149 = v3[15];
        a1[14] = v147;
        a1[15] = v149;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v147 - 8))((uint64_t)(a1 + 11), (uint64_t)(v3 + 11), v147);
      }
      else
      {
        long long v206 = *(_OWORD *)(v3 + 13);
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(v3 + 11);
        *(_OWORD *)(a1 + 13) = v206;
        a1[15] = v3[15];
      }
      v207 = a1 + 16;
      v208 = v3 + 16;
      uint64_t v209 = v3[19];
      if (v209)
      {
        uint64_t v210 = v3[20];
        a1[19] = v209;
        a1[20] = v210;
        (**(void (***)(_OWORD *, _OWORD *))(v209 - 8))(v207, v208);
      }
      else
      {
        long long v217 = *((_OWORD *)v3 + 9);
        _OWORD *v207 = *v208;
        *((_OWORD *)a1 + 9) = v217;
        a1[20] = v3[20];
      }
      v218 = a1 + 21;
      v219 = v3 + 21;
      uint64_t v220 = v3[24];
      if (v220)
      {
        uint64_t v221 = v3[25];
        a1[24] = v220;
        a1[25] = v221;
        (**(void (***)(_OWORD *, _OWORD *))(v220 - 8))(v218, v219);
      }
      else
      {
        long long v222 = *(_OWORD *)(v3 + 23);
        _OWORD *v218 = *v219;
        *(_OWORD *)(a1 + 23) = v222;
        a1[25] = v3[25];
      }
      goto LABEL_181;
    case 0xEu:
      uint64_t v38 = v3[1];
      *a1 = *v3;
      a1[1] = v38;
      *((unsigned char *)a1 + 16) = *((unsigned char *)v3 + 16);
      unint64_t v39 = v3 + 3;
      unint64_t v40 = v3[4];
      if (v40 >= 0x11)
      {
        a1[3] = *v39;
        a1[4] = v40;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v39;
      }
      uint64_t v134 = v3[6];
      a1[5] = v3[5];
      a1[6] = v134;
      a1[7] = v3[7];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_181;
    case 0xFu:
      uint64_t v119 = v3[1];
      *a1 = *v3;
      a1[1] = v119;
      *((unsigned char *)a1 + 16) = *((unsigned char *)v3 + 16);
      v120 = v3 + 3;
      unint64_t v121 = v3[4];
      if (v121 >= 0x11)
      {
        a1[3] = *v120;
        a1[4] = v121;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v120;
      }
      break;
    case 0x10u:
      v439 = v6;
      uint64_t v41 = v3[1];
      *a1 = *v3;
      a1[1] = v41;
      uint64_t v42 = v3[3];
      a1[2] = v3[2];
      a1[3] = v42;
      uint64_t v43 = v3[5];
      a1[4] = v3[4];
      a1[5] = v43;
      *((_WORD *)a1 + 24) = *((_WORD *)v3 + 24);
      *(_OWORD *)(a1 + 7) = *(_OWORD *)(v3 + 7);
      uint64_t v44 = v3[10];
      a1[9] = v3[9];
      a1[10] = v44;
      uint64_t v45 = v3[12];
      uint64_t v46 = v3[13];
      a1[11] = v3[11];
      a1[12] = v45;
      a1[13] = v46;
      *((unsigned char *)a1 + 112) = *((unsigned char *)v3 + 112);
      uint64_t v47 = v3[16];
      a1[15] = v3[15];
      a1[16] = v47;
      *((unsigned char *)a1 + 136) = *((unsigned char *)v3 + 136);
      uint64_t v48 = v3[19];
      a1[18] = v3[18];
      a1[19] = v48;
      uint64_t v49 = v3[21];
      a1[20] = v3[20];
      a1[21] = v49;
      *((unsigned char *)a1 + 184) = *((unsigned char *)v3 + 184);
      a1[22] = v3[22];
      uint64_t v50 = v3[25];
      a1[24] = v3[24];
      a1[25] = v50;
      *((unsigned char *)a1 + 224) = *((unsigned char *)v3 + 224);
      uint64_t v51 = v3[27];
      a1[26] = v3[26];
      a1[27] = v51;
      v433 = v3 + 29;
      unint64_t v52 = v3[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v52 >= 0x11)
      {
        a1[29] = *v433;
        a1[30] = v52;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 29) = *(_OWORD *)v433;
      }
      uint64_t v6 = v439;
      swift_storeEnumTagMultiPayload();
      goto LABEL_182;
    default:
      memcpy(a1, v3, *(void *)(*(void *)(v7 - 8) + 64));
      goto LABEL_182;
  }
  uint64_t v150 = v3[6];
  a1[5] = v3[5];
  a1[6] = v150;
  uint64_t v151 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  v152 = (char *)a1 + v151;
  v153 = (char *)v3 + v151;
  *(void *)((char *)a1 + v151) = *(void *)((char *)v3 + v151);
  uint64_t v154 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  v155 = &v152[v154];
  v156 = &v153[v154];
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v241 = type metadata accessor for PuzzleStatisticValue(0);
      int v242 = swift_getEnumCaseMultiPayload();
      uint64_t v443 = v241;
      if (v242 == 5)
      {
        uint64_t v364 = type metadata accessor for PuzzleStreak();
        uint64_t v365 = *(void *)(v364 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v365 + 48))(v156, 1, v364))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v155, v156, *(void *)(*(void *)(v366 - 8) + 64));
        }
        else
        {
          uint64_t v400 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v400 - 8) + 16))(v155, v156, v400);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v365 + 56))(v155, 0, 1, v364);
        }
        v367 = v6;
        uint64_t v241 = v443;
      }
      else
      {
        if (v242 != 4)
        {
          v367 = v6;
          memcpy(v155, v156, *(void *)(*(void *)(v241 - 8) + 64));
          goto LABEL_192;
        }
        uint64_t v243 = type metadata accessor for PuzzleStreak();
        uint64_t v244 = *(void *)(v243 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v244 + 48))(v156, 1, v243))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v155, v156, *(void *)(*(void *)(v245 - 8) + 64));
        }
        else
        {
          uint64_t v375 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v375 - 8) + 16))(v155, v156, v375);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v244 + 56))(v155, 0, 1, v243);
        }
        v367 = v6;
        uint64_t v241 = v443;
      }
      swift_storeEnumTagMultiPayload();
LABEL_192:
      uint64_t v401 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v402 = *(int *)(v401 + 20);
      v403 = &v155[v402];
      v404 = &v156[v402];
      int v405 = swift_getEnumCaseMultiPayload();
      if (v405 == 5)
      {
        v410 = v155;
        uint64_t v411 = type metadata accessor for PuzzleStreak();
        uint64_t v412 = *(void *)(v411 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v412 + 48))(v404, 1, v411))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v403, v404, *(void *)(*(void *)(v413 - 8) + 64));
        }
        else
        {
          uint64_t v415 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v415 - 8) + 16))(v403, v404, v415);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v412 + 56))(v403, 0, 1, v411);
        }
        uint64_t v241 = v443;
        swift_storeEnumTagMultiPayload();
        v155 = v410;
      }
      else if (v405 == 4)
      {
        v406 = v155;
        uint64_t v407 = type metadata accessor for PuzzleStreak();
        uint64_t v408 = *(void *)(v407 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v408 + 48))(v404, 1, v407))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v403, v404, *(void *)(*(void *)(v409 - 8) + 64));
        }
        else
        {
          uint64_t v414 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v414 - 8) + 16))(v403, v404, v414);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v408 + 56))(v403, 0, 1, v407);
        }
        v155 = v406;
        uint64_t v241 = v443;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v403, v404, *(void *)(*(void *)(v241 - 8) + 64));
      }
      uint64_t v416 = *(int *)(v401 + 24);
      v417 = &v155[v416];
      v418 = &v156[v416];
      int v419 = swift_getEnumCaseMultiPayload();
      if (v419 == 5)
      {
        uint64_t v420 = type metadata accessor for PuzzleStreak();
        uint64_t v421 = *(void *)(v420 - 8);
        uint64_t v6 = v367;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v421 + 48))(v418, 1, v420))
        {
LABEL_206:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v417, v418, *(void *)(*(void *)(v422 - 8) + 64));
          goto LABEL_211;
        }
      }
      else
      {
        uint64_t v6 = v367;
        if (v419 != 4)
        {
          memcpy(v417, v418, *(void *)(*(void *)(v241 - 8) + 64));
          uint64_t v3 = v447;
          goto LABEL_180;
        }
        uint64_t v420 = type metadata accessor for PuzzleStreak();
        uint64_t v421 = *(void *)(v420 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v421 + 48))(v418, 1, v420)) {
          goto LABEL_206;
        }
      }
      uint64_t v423 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v423 - 8) + 16))(v417, v418, v423);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v421 + 56))(v417, 0, 1, v420);
LABEL_211:
      uint64_t v3 = v447;
      swift_storeEnumTagMultiPayload();
      goto LABEL_180;
    case 2u:
      v237 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v238 = *((void *)v237 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v238 + 48))(v156, 1, v237))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        size_t v240 = *(void *)(*(void *)(v239 - 8) + 64);
        goto LABEL_165;
      }
      v445 = v6;
      uint64_t v312 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 16))(v155, v156, v312);
      v313 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v314 = v313[5];
      v315 = &v155[v314];
      v316 = &v156[v314];
      uint64_t v317 = *((void *)v316 + 1);
      *(void *)v315 = *(void *)v316;
      *((void *)v315 + 1) = v317;
      uint64_t v318 = v313[6];
      v432 = v155;
      v319 = &v155[v318];
      v320 = &v156[v318];
      uint64_t v321 = *((void *)v320 + 1);
      *(void *)v319 = *(void *)v320;
      *((void *)v319 + 1) = v321;
      v322 = (uint64_t *)(v320 + 16);
      unint64_t v323 = *((void *)v320 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v323 >> 60 == 15)
      {
        *((_OWORD *)v319 + 1) = *(_OWORD *)v322;
      }
      else
      {
        uint64_t v369 = *v322;
        sub_1BFE95820(*v322, v323);
        *((void *)v319 + 2) = v369;
        *((void *)v319 + 3) = v323;
      }
      *(void *)((char *)v432 + v313[7]) = *(void *)&v156[v313[7]];
      *(void *)((char *)v432 + v313[8]) = *(void *)&v156[v313[8]];
      *(void *)((char *)v432 + v237[5]) = *(void *)&v156[v237[5]];
      *(void *)((char *)v432 + v237[6]) = *(void *)&v156[v237[6]];
      uint64_t v370 = v237[7];
      v371 = (void *)((char *)v432 + v370);
      v372 = &v156[v370];
      uint64_t v373 = *((void *)v372 + 1);
      void *v371 = *(void *)v372;
      v371[1] = v373;
      v374 = *(void (**)(void *, void, uint64_t, int *))(v238 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v374(v432, 0, 1, v237);
      uint64_t v6 = v445;
      uint64_t v3 = v447;
      goto LABEL_180;
    case 3u:
      v444 = v6;
      uint64_t v246 = *((void *)v156 + 1);
      *(void *)v155 = *(void *)v156;
      *((void *)v155 + 1) = v246;
      v155[16] = v156[16];
      v247 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v248 = v247[6];
      v431 = v155;
      v249 = &v155[v248];
      v250 = &v156[v248];
      uint64_t v251 = type metadata accessor for PuzzleStreak();
      uint64_t v252 = *(void *)(v251 - 8);
      v253 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v252 + 48);
      if (v253(v250, 1, v251))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v249, v250, *(void *)(*(void *)(v254 - 8) + 64));
      }
      else
      {
        uint64_t v345 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v345 - 8) + 16))(v249, v250, v345);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v252 + 56))(v249, 0, 1, v251);
      }
      uint64_t v346 = v247[7];
      v347 = (char *)v431 + v346;
      v348 = &v156[v346];
      if (v253(&v156[v346], 1, v251))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v347, v348, *(void *)(*(void *)(v349 - 8) + 64));
      }
      else
      {
        uint64_t v350 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v350 - 8) + 16))(v347, v348, v350);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v252 + 56))(v347, 0, 1, v251);
      }
      uint64_t v6 = v444;
      uint64_t v351 = v247[8];
      v352 = (_OWORD *)((char *)v431 + v351);
      v353 = &v156[v351];
      long long v354 = *((_OWORD *)v353 + 1);
      _OWORD *v352 = *(_OWORD *)v353;
      v352[1] = v354;
      *(_OWORD *)((char *)v352 + 25) = *(_OWORD *)(v353 + 25);
      uint64_t v355 = v247[9];
      v356 = (_OWORD *)((char *)v431 + v355);
      v357 = &v156[v355];
      *(_OWORD *)((char *)v356 + 25) = *(_OWORD *)(v357 + 25);
      long long v358 = *((_OWORD *)v357 + 1);
      _OWORD *v356 = *(_OWORD *)v357;
      v356[1] = v358;
      uint64_t v359 = v247[10];
      v360 = (_OWORD *)((char *)v431 + v359);
      v361 = &v156[v359];
      long long v362 = *((_OWORD *)v361 + 1);
      _OWORD *v360 = *(_OWORD *)v361;
      v360[1] = v362;
      *(_OWORD *)((char *)v360 + 25) = *(_OWORD *)(v361 + 25);
      goto LABEL_179;
    default:
      uint64_t v157 = type metadata accessor for PuzzleStatisticValue(0);
      int v158 = swift_getEnumCaseMultiPayload();
      if (v158 == 5)
      {
        uint64_t v159 = type metadata accessor for PuzzleStreak();
        uint64_t v160 = *(void *)(v159 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v156, 1, v159))
        {
LABEL_163:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v155, v156, *(void *)(*(void *)(v363 - 8) + 64));
LABEL_178:
          swift_storeEnumTagMultiPayload();
          goto LABEL_179;
        }
LABEL_177:
        uint64_t v376 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v376 - 8) + 16))(v155, v156, v376);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v155, 0, 1, v159);
        goto LABEL_178;
      }
      if (v158 == 4)
      {
        uint64_t v159 = type metadata accessor for PuzzleStreak();
        uint64_t v160 = *(void *)(v159 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v156, 1, v159)) {
          goto LABEL_163;
        }
        goto LABEL_177;
      }
      size_t v240 = *(void *)(*(void *)(v157 - 8) + 64);
LABEL_165:
      memcpy(v155, v156, v240);
LABEL_179:
      uint64_t v3 = v447;
LABEL_180:
      swift_storeEnumTagMultiPayload();
LABEL_181:
      swift_storeEnumTagMultiPayload();
LABEL_182:
      v377 = v6;
      uint64_t v378 = v6[5];
      v379 = (char *)a1 + v378;
      v380 = (char *)v3 + v378;
      uint64_t v381 = *(void *)((char *)v3 + v378 + 8);
      *(void *)v379 = *(void *)((char *)v3 + v378);
      *((void *)v379 + 1) = v381;
      uint64_t v382 = *(void *)((char *)v3 + v378 + 24);
      *((void *)v379 + 2) = *(void *)((char *)v3 + v378 + 16);
      *((void *)v379 + 3) = v382;
      uint64_t v383 = *(void *)((char *)v3 + v378 + 40);
      *((void *)v379 + 4) = *(void *)((char *)v3 + v378 + 32);
      *((void *)v379 + 5) = v383;
      v384 = (void *)((char *)v3 + v378 + 48);
      unint64_t v385 = *(void *)((char *)v3 + v378 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v385 >= 0xF)
      {
        *((void *)v379 + 6) = *v384;
        *((void *)v379 + 7) = v385;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v379 + 3) = *(_OWORD *)v384;
      }
      uint64_t v386 = *((void *)v380 + 9);
      *((void *)v379 + 8) = *((void *)v380 + 8);
      *((void *)v379 + 9) = v386;
      uint64_t v387 = *((void *)v380 + 11);
      *((void *)v379 + 10) = *((void *)v380 + 10);
      *((void *)v379 + 11) = v387;
      uint64_t v388 = *((void *)v380 + 13);
      *((void *)v379 + 12) = *((void *)v380 + 12);
      *((void *)v379 + 13) = v388;
      *((void *)v379 + 14) = *((void *)v380 + 14);
      v379[120] = v380[120];
      uint64_t v389 = v377[6];
      unint64_t v390 = *(void *)((char *)v447 + v389);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF45054(v390);
      uint64_t v13 = v446;
      *(void *)((char *)v446 + v389) = v390;
      uint64_t v391 = v377[7];
      v392 = (char *)v446 + v391;
      v393 = (char *)v447 + v391;
      uint64_t v394 = sub_1C151AC1C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v394 - 8) + 16))(v392, v393, v394);
      uint64_t v395 = v377[8];
      v396 = (void *)((char *)v446 + v395);
      v397 = (void *)((char *)v447 + v395);
      uint64_t v398 = v397[1];
      if (v398)
      {
        void *v396 = *v397;
        v396[1] = v398;
        v396[2] = v397[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v396 = *(_OWORD *)v397;
        v396[2] = v397[2];
      }
      return v13;
  }
}

void *assignWithCopy for FormatItemNodeData(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1BFEE6798((uint64_t)a1);
    uint64_t v6 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v7 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v7;
        unint64_t v8 = a2[6];
        swift_bridgeObjectRetain();
        if (v8 >= 0x11)
        {
          a1[5] = a2[5];
          a1[6] = a2[6];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        }
        goto LABEL_198;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v29 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v29;
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        unint64_t v30 = a2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30 >= 0x11)
        {
          a1[9] = a2[9];
          a1[10] = a2[10];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        }
        goto LABEL_198;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v9 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v10 = v9[5];
        unint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_1C151DBAC();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        *(void *)((char *)a1 + v9[6]) = *(void *)((char *)a2 + v9[6]);
        uint64_t v15 = v9[7];
        uint64_t v16 = (char *)a1 + v15;
        unint64_t v17 = (char *)a2 + v15;
        char v18 = v17[8];
        *(void *)uint64_t v16 = *(void *)v17;
        v16[8] = v18;
        uint64_t v19 = v9[8];
        unint64_t v20 = (char *)a1 + v19;
        unint64_t v21 = (char *)a2 + v19;
        if (*((void *)v21 + 1) >= 0x11uLL) {
          goto LABEL_38;
        }
        *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
        goto LABEL_198;
      case 3u:
        *a1 = *a2;
        uint64_t v376 = a3;
        a1[1] = a2[1];
        uint64_t v31 = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[2] = v31;
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        v371 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v32 = v371[10];
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        *uint64_t v33 = *((unsigned char *)a2 + v32);
        v33[1] = *((unsigned char *)a2 + v32 + 1);
        uint64_t v35 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v36 = *(int *)(v35 + 24);
        __dst = &v33[v36];
        v367 = (int *)v35;
        uint64_t v37 = &v34[v36];
        uint64_t v38 = (int *)type metadata accessor for SharedItem();
        long long v362 = (void *)*((void *)v38 - 1);
        unint64_t v39 = (unsigned int (*)(char *, uint64_t, int *))v362[6];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v39(v37, 1, v38))
        {
          uint64_t v40 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v37, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v143 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(__dst, v37, v143);
          __dst[v38[5]] = v37[v38[5]];
          uint64_t v144 = v38[6];
          uint64_t v145 = *(void **)&v37[v144];
          *(void *)&__dst[v144] = v145;
          uint64_t v146 = v38[7];
          uint64_t v375 = &__dst[v146];
          v361 = &v37[v146];
          uint64_t v147 = sub_1C1515FDC();
          id v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
          id v149 = v145;
          v148(v375, v361, v147);
          ((void (*)(char *, void, uint64_t, int *))v362[7])(__dst, 0, 1, v38);
        }
        a3 = v376;
        v33[v367[7]] = v34[v367[7]];
        v33[v367[8]] = v34[v367[8]];
        v33[v367[9]] = v34[v367[9]];
        v33[v367[10]] = v34[v367[10]];
        uint64_t v150 = v371[11];
        uint64_t v151 = (char *)a1 + v150;
        v152 = (char *)a2 + v150;
        uint64_t v153 = sub_1C151D2DC();
        uint64_t v154 = *(void *)(v153 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v152, 1, v153))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v151, v152, *(void *)(*(void *)(v155 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v151, v152, v153);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v151, 0, 1, v153);
        }
        uint64_t v162 = v371[12];
        v163 = (void *)((char *)a1 + v162);
        uint64_t v164 = (void *)((char *)a2 + v162);
        if (v164[1] >= 0x11uLL)
        {
          void *v163 = *v164;
          v163[1] = v164[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v163 = *(_OWORD *)v164;
        }
        uint64_t v165 = v371[13];
        unint64_t v166 = *(void *)((char *)a2 + v165);
        if (v166 >= 2)
        {
          if (v166 == 2)
          {
            *(void *)((char *)a1 + v165) = 2;
          }
          else
          {
            *(void *)((char *)a1 + v165) = v166;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)a1 + v165) = v166;
        }
        uint64_t v205 = v371[14];
        long long v206 = *(void **)((char *)a2 + v205);
        *(void *)((char *)a1 + v205) = v206;
        id v207 = v206;
        goto LABEL_198;
      case 4u:
        *a1 = *a2;
        uint64_t v22 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v22;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        long long v85 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v86 = v85[8];
        uint64_t v87 = (char *)a1 + v86;
        uint64_t v88 = (char *)a2 + v86;
        uint64_t v89 = sub_1C1515FDC();
        uint64_t v90 = *(void *)(v89 - 8);
        long long v91 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
        swift_bridgeObjectRetain();
        v91(v87, v88, v89);
        v374 = v85;
        uint64_t v92 = v85[9];
        uint64_t v93 = (char *)a1 + v92;
        v94 = (char *)a2 + v92;
        uint64_t v373 = v89;
        __dstb = v91;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))((char *)a2 + v92, 1, v89))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          v91(v93, v94, v89);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v93, 0, 1, v89);
        }
        *(void *)((char *)a1 + v85[10]) = *(void *)((char *)a2 + v85[10]);
        *(void *)((char *)a1 + v85[11]) = *(void *)((char *)a2 + v85[11]);
        uint64_t v119 = v85[12];
        v120 = (void *)((char *)a1 + v119);
        unint64_t v121 = (void *)((char *)a2 + v119);
        uint64_t v122 = type metadata accessor for FeedHeadline(0);
        uint64_t v123 = *(void *)(v122 - 8);
        uint64_t v124 = *(unsigned int (**)(void *, uint64_t, int *))(v123 + 48);
        v125 = (int *)v122;
        swift_retain();
        swift_retain();
        if (v124(v121, 1, v125))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v120, v121, *(void *)(*(void *)(v126 - 8) + 64));
        }
        else
        {
          uint64_t v359 = v123;
          v377 = a3;
          void *v120 = *v121;
          v120[1] = v121[1];
          uint64_t v132 = v121[2];
          *((unsigned char *)v120 + 24) = *((unsigned char *)v121 + 24);
          v120[2] = v132;
          v120[4] = v121[4];
          v120[5] = v121[5];
          v120[6] = v121[6];
          *((unsigned char *)v120 + 56) = *((unsigned char *)v121 + 56);
          v360 = v125;
          uint64_t v133 = v125[10];
          uint64_t v134 = (char *)v120 + v133;
          uint64_t v135 = (char *)v121 + v133;
          *uint64_t v134 = *((unsigned char *)v121 + v133);
          v134[1] = *((unsigned char *)v121 + v133 + 1);
          long long v358 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v136 = v358[6];
          uint64_t v363 = &v134[v136];
          v137 = &v135[v136];
          id v138 = (int *)type metadata accessor for SharedItem();
          uint64_t v357 = *((void *)v138 - 1);
          v139 = *(unsigned int (**)(char *, uint64_t, int *))(v357 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v139(v137, 1, v138))
          {
            uint64_t v140 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v363, v137, *(void *)(*(void *)(v140 - 8) + 64));
          }
          else
          {
            uint64_t v225 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16))(v363, v137, v225);
            v363[v138[5]] = v137[v138[5]];
            uint64_t v226 = v138[6];
            v227 = *(void **)&v137[v226];
            *(void *)&v363[v226] = v227;
            uint64_t v228 = v138[7];
            long long v229 = &v363[v228];
            v230 = &v137[v228];
            id v231 = v227;
            __dstb(v229, v230, v373);
            (*(void (**)(char *, void, uint64_t, int *))(v357 + 56))(v363, 0, 1, v138);
          }
          v134[v358[7]] = v135[v358[7]];
          v134[v358[8]] = v135[v358[8]];
          v134[v358[9]] = v135[v358[9]];
          v134[v358[10]] = v135[v358[10]];
          uint64_t v232 = v360[11];
          uint64_t v233 = (char *)v120 + v232;
          id v234 = (char *)v121 + v232;
          uint64_t v235 = sub_1C151D2DC();
          uint64_t v236 = *(void *)(v235 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v236 + 48))(v234, 1, v235))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v233, v234, *(void *)(*(void *)(v237 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v236 + 16))(v233, v234, v235);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v236 + 56))(v233, 0, 1, v235);
          }
          a3 = v377;
          uint64_t v238 = v360[12];
          uint64_t v239 = (void *)((char *)v120 + v238);
          size_t v240 = (void *)((char *)v121 + v238);
          if (v240[1] >= 0x11uLL)
          {
            *uint64_t v239 = *v240;
            v239[1] = v240[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v239 = *(_OWORD *)v240;
          }
          uint64_t v241 = v360[13];
          unint64_t v242 = *(void *)((char *)v121 + v241);
          if (v242 >= 2)
          {
            if (v242 == 2)
            {
              *(void *)((char *)v120 + v241) = 2;
            }
            else
            {
              *(void *)((char *)v120 + v241) = v242;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v120 + v241) = v242;
          }
          uint64_t v263 = v360[14];
          unint64_t v264 = *(void **)((char *)v121 + v263);
          *(void *)((char *)v120 + v263) = v264;
          v265 = *(void (**)(void *, void, uint64_t, int *))(v359 + 56);
          id v266 = v264;
          v265(v120, 0, 1, v360);
        }
        uint64_t v267 = v374[13];
        uint64_t v268 = (void *)((char *)a1 + v267);
        uint64_t v269 = (void *)((char *)a2 + v267);
        uint64_t v270 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v271 = *(void *)(v270 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v271 + 48))(v269, 1, v270))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v268, v269, *(void *)(*(void *)(v272 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *uint64_t v268 = *v269;
          if (EnumCaseMultiPayload == 1)
          {
            v268[1] = v269[1];
            uint64_t v274 = type metadata accessor for GenericDataVisualization();
            uint64_t v275 = *(int *)(v274 + 20);
            uint64_t v276 = (char *)v268 + v275;
            uint64_t v381 = a3;
            uint64_t v277 = (char *)v269 + v275;
            swift_bridgeObjectRetain();
            v278 = v277;
            a3 = v381;
            __dstb(v276, v278, v373);
            *(void *)((char *)v268 + *(int *)(v274 + 24)) = *(void *)((char *)v269 + *(int *)(v274 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v271 + 56))(v268, 0, 1, v270);
        }
        *((unsigned char *)a1 + v374[14]) = *((unsigned char *)a2 + v374[14]);
        goto LABEL_198;
      case 5u:
        uint64_t v41 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
        uint64_t v42 = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        a1[4] = v42;
        a1[6] = a2[6];
        uint64_t v43 = (void *)a2[7];
        a1[7] = v43;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v44 = a2[10];
        id v45 = v41;
        swift_bridgeObjectRetain();
        id v46 = v43;
        if (v44 == 1)
        {
          long long v47 = *(_OWORD *)(a2 + 9);
          long long v48 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 13) = v48;
          *(_OWORD *)(a1 + 9) = v47;
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = a2[10];
          a1[11] = a2[11];
          a1[12] = a2[12];
          uint64_t v96 = (void *)a2[13];
          a1[13] = v96;
          a1[14] = a2[14];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v97 = v96;
        }
        if (a2[16] >= 0x11uLL)
        {
          a1[15] = a2[15];
          a1[16] = a2[16];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
        }
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        goto LABEL_198;
      case 6u:
        int v49 = *((unsigned __int8 *)a2 + 281);
        if (v49 == 2)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v174 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v174;
          a1[6] = a2[6];
          a1[7] = a2[7];
          a1[8] = a2[8];
          a1[9] = a2[9];
          uint64_t v175 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v175 == 1)
          {
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            long long v176 = *((_OWORD *)a2 + 6);
            long long v177 = *((_OWORD *)a2 + 7);
            long long v178 = *((_OWORD *)a2 + 8);
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            *((_OWORD *)a1 + 7) = v177;
            *((_OWORD *)a1 + 8) = v178;
            *((_OWORD *)a1 + 6) = v176;
          }
          else
          {
            a1[10] = a2[10];
            a1[11] = a2[11];
            uint64_t v213 = a2[15];
            swift_bridgeObjectRetain();
            if (v213)
            {
              a1[15] = v213;
              a1[16] = a2[16];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v213 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v213);
              char v214 = *((unsigned char *)a2 + 144);
              a1[17] = a2[17];
              *((unsigned char *)a1 + 144) = v214;
            }
            else
            {
              long long v305 = *((_OWORD *)a2 + 6);
              long long v306 = *((_OWORD *)a2 + 7);
              long long v307 = *((_OWORD *)a2 + 8);
              *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
              *((_OWORD *)a1 + 7) = v306;
              *((_OWORD *)a1 + 8) = v307;
              *((_OWORD *)a1 + 6) = v305;
            }
          }
        }
        else if (v49 == 1)
        {
          uint64_t v50 = (void *)*a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
          uint64_t v51 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v51;
          a1[6] = a2[6];
          unint64_t v52 = (void *)a2[7];
          a1[7] = v52;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v53 = a2[10];
          id v54 = v50;
          swift_bridgeObjectRetain();
          id v55 = v52;
          if (v53 == 1)
          {
            long long v56 = *(_OWORD *)(a2 + 9);
            long long v57 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v57;
            *(_OWORD *)(a1 + 9) = v56;
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = a2[10];
            a1[11] = a2[11];
            a1[12] = a2[12];
            uint64_t v211 = (void *)a2[13];
            a1[13] = v211;
            a1[14] = a2[14];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v212 = v211;
          }
          if (a2[16] >= 0x11uLL)
          {
            a1[15] = a2[15];
            a1[16] = a2[16];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          long long v217 = (void *)a2[18];
          if (v217)
          {
            a1[18] = v217;
            a1[19] = a2[19];
            a1[20] = a2[20];
            *((unsigned char *)a1 + 168) = *((unsigned char *)a2 + 168);
            *((unsigned char *)a1 + 169) = *((unsigned char *)a2 + 169);
            uint64_t v218 = a2[22];
            *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
            a1[22] = v218;
            a1[24] = a2[24];
            v219 = (void *)a2[25];
            a1[25] = v219;
            *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
            uint64_t v220 = a2[28];
            id v221 = v217;
            swift_bridgeObjectRetain();
            id v222 = v219;
            if (v220 == 1)
            {
              long long v223 = *(_OWORD *)(a2 + 27);
              long long v224 = *(_OWORD *)(a2 + 31);
              *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
              *(_OWORD *)(a1 + 31) = v224;
              *(_OWORD *)(a1 + 27) = v223;
            }
            else
            {
              a1[27] = a2[27];
              a1[28] = a2[28];
              a1[29] = a2[29];
              a1[30] = a2[30];
              v249 = (void *)a2[31];
              a1[31] = v249;
              a1[32] = a2[32];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v250 = v249;
            }
            if (a2[34] >= 0x11uLL)
            {
              a1[33] = a2[33];
              a1[34] = a2[34];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
            }
            *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
          }
          else
          {
            *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
            long long v243 = *((_OWORD *)a2 + 10);
            long long v244 = *((_OWORD *)a2 + 11);
            long long v245 = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 13) = v245;
            *((_OWORD *)a1 + 10) = v243;
            *((_OWORD *)a1 + 11) = v244;
            long long v246 = *((_OWORD *)a2 + 14);
            long long v247 = *((_OWORD *)a2 + 15);
            long long v248 = *((_OWORD *)a2 + 16);
            *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            *((_OWORD *)a1 + 15) = v247;
            *((_OWORD *)a1 + 16) = v248;
            *((_OWORD *)a1 + 14) = v246;
          }
        }
        else
        {
          uint64_t v179 = (void *)*a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
          uint64_t v180 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v180;
          a1[6] = a2[6];
          uint64_t v181 = (void *)a2[7];
          a1[7] = v181;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v182 = a2[10];
          id v183 = v179;
          swift_bridgeObjectRetain();
          id v184 = v181;
          if (v182 == 1)
          {
            long long v185 = *(_OWORD *)(a2 + 9);
            long long v186 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v186;
            *(_OWORD *)(a1 + 9) = v185;
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = a2[10];
            a1[11] = a2[11];
            a1[12] = a2[12];
            uint64_t v215 = (void *)a2[13];
            a1[13] = v215;
            a1[14] = a2[14];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v216 = v215;
          }
          if (a2[16] >= 0x11uLL)
          {
            a1[15] = a2[15];
            a1[16] = a2[16];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        }
        *((unsigned char *)a1 + 281) = v49;
        goto LABEL_198;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v58 = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        a1[4] = v58;
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        uint64_t v59 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v59 == 1)
        {
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          long long v60 = *((_OWORD *)a2 + 6);
          long long v61 = *((_OWORD *)a2 + 7);
          long long v62 = *((_OWORD *)a2 + 8);
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          *((_OWORD *)a1 + 7) = v61;
          *((_OWORD *)a1 + 8) = v62;
          *((_OWORD *)a1 + 6) = v60;
        }
        else
        {
          a1[10] = a2[10];
          a1[11] = a2[11];
          uint64_t v98 = a2[15];
          swift_bridgeObjectRetain();
          if (v98)
          {
            a1[15] = v98;
            a1[16] = a2[16];
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v98 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v98);
            char v99 = *((unsigned char *)a2 + 144);
            a1[17] = a2[17];
            *((unsigned char *)a1 + 144) = v99;
          }
          else
          {
            long long v208 = *((_OWORD *)a2 + 6);
            long long v209 = *((_OWORD *)a2 + 7);
            long long v210 = *((_OWORD *)a2 + 8);
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            *((_OWORD *)a1 + 7) = v209;
            *((_OWORD *)a1 + 8) = v210;
            *((_OWORD *)a1 + 6) = v208;
          }
        }
        goto LABEL_198;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v63 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v64 = (void *)((char *)a1 + v63);
        uint64_t v65 = (char *)a2 + v63;
        void *v64 = *(void *)((char *)a2 + v63);
        v64[1] = *(void *)((char *)a2 + v63 + 8);
        v64[2] = *(void *)((char *)a2 + v63 + 16);
        v64[3] = *(void *)((char *)a2 + v63 + 24);
        uint64_t v66 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v67 = *(int *)(v66 + 24);
        long long v368 = (char *)v64 + v67;
        uint64_t v372 = v66;
        v68 = &v65[v67];
        uint64_t v69 = type metadata accessor for FormatCustomItem.Action();
        __dsta = *(void **)(v69 - 8);
        uint64_t v70 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v70(v68, 1, v69))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v368, v68, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          uint64_t v156 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16))(v368, v68, v156);
          ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v368, 0, 1, v69);
        }
        *(void *)((char *)v64 + *(int *)(v372 + 28)) = *(void *)&v65[*(int *)(v372 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_198;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v23 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23)
        {
          a1[7] = v23;
          a1[8] = a2[8];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v23);
        }
        else
        {
          long long v114 = *((_OWORD *)a2 + 2);
          long long v115 = *((_OWORD *)a2 + 3);
          a1[8] = a2[8];
          *((_OWORD *)a1 + 2) = v114;
          *((_OWORD *)a1 + 3) = v115;
        }
        uint64_t v116 = a1 + 9;
        v117 = (long long *)(a2 + 9);
        uint64_t v118 = a2[12];
        if (v118)
        {
          a1[12] = v118;
          a1[13] = a2[13];
          (**(void (***)(_OWORD *, long long *))(v118 - 8))(v116, v117);
        }
        else
        {
          long long v127 = *v117;
          long long v128 = *(_OWORD *)(a2 + 11);
          a1[13] = a2[13];
          *uint64_t v116 = v127;
          *(_OWORD *)(a1 + 11) = v128;
        }
        v129 = a1 + 14;
        uint64_t v130 = (long long *)(a2 + 14);
        uint64_t v131 = a2[17];
        if (v131)
        {
          a1[17] = v131;
          a1[18] = a2[18];
          (**(void (***)(_OWORD *, long long *))(v131 - 8))(v129, v130);
        }
        else
        {
          long long v141 = *v130;
          long long v142 = *((_OWORD *)a2 + 8);
          a1[18] = a2[18];
          _OWORD *v129 = v141;
          *((_OWORD *)a1 + 8) = v142;
        }
        goto LABEL_198;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v72 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v73 = v72[5];
        uint64_t v74 = (char *)a1 + v73;
        id v75 = (char *)a2 + v73;
        uint64_t v76 = sub_1C151959C();
        long long v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(v74, v75, v76);
        *(void *)((char *)a1 + v72[6]) = *(void *)((char *)a2 + v72[6]);
        uint64_t v78 = v72[7];
        v79 = (char *)a1 + v78;
        uint64_t v80 = (char *)a2 + v78;
        char v81 = v80[8];
        *(void *)v79 = *(void *)v80;
        v79[8] = v81;
        uint64_t v82 = v72[8];
        unint64_t v20 = (char *)a1 + v82;
        unint64_t v21 = (char *)a2 + v82;
        if (*((void *)v21 + 1) >= 0x11uLL)
        {
LABEL_38:
          *(void *)unint64_t v20 = *(void *)v21;
          *((void *)v20 + 1) = *((void *)v21 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
        }
        goto LABEL_198;
      case 0xBu:
        *a1 = *a2;
        swift_retain();
        goto LABEL_198;
      case 0xCu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v24 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v24;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_198;
      case 0xDu:
        *a1 = *a2;
        uint64_t v83 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v83;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        v100 = (void *)a2[8];
        a1[8] = v100;
        *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
        a1[10] = a2[10];
        uint64_t v101 = a2[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v102 = v100;
        swift_bridgeObjectRetain();
        if (v101)
        {
          a1[14] = v101;
          a1[15] = a2[15];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v101 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v101);
        }
        else
        {
          long long v157 = *(_OWORD *)(a2 + 11);
          long long v158 = *(_OWORD *)(a2 + 13);
          a1[15] = a2[15];
          *(_OWORD *)(a1 + 11) = v157;
          *(_OWORD *)(a1 + 13) = v158;
        }
        uint64_t v159 = a1 + 16;
        uint64_t v160 = (long long *)(a2 + 16);
        uint64_t v161 = a2[19];
        if (v161)
        {
          a1[19] = v161;
          a1[20] = a2[20];
          (**(void (***)(_OWORD *, long long *))(v161 - 8))(v159, v160);
        }
        else
        {
          long long v167 = *v160;
          long long v168 = *((_OWORD *)a2 + 9);
          a1[20] = a2[20];
          *uint64_t v159 = v167;
          *((_OWORD *)a1 + 9) = v168;
        }
        uint64_t v169 = a1 + 21;
        uint64_t v170 = (long long *)(a2 + 21);
        uint64_t v171 = a2[24];
        if (v171)
        {
          a1[24] = v171;
          a1[25] = a2[25];
          (**(void (***)(_OWORD *, long long *))(v171 - 8))(v169, v170);
        }
        else
        {
          long long v172 = *v170;
          long long v173 = *(_OWORD *)(a2 + 23);
          a1[25] = a2[25];
          *uint64_t v169 = v172;
          *(_OWORD *)(a1 + 23) = v173;
        }
        goto LABEL_198;
      case 0xEu:
        *a1 = *a2;
        uint64_t v25 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v25;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_198;
      case 0xFu:
        *a1 = *a2;
        uint64_t v84 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v84;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        break;
      case 0x10u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        *((unsigned char *)a1 + 49) = *((unsigned char *)a2 + 49);
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[15] = a2[15];
        a1[16] = a2[16];
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        a1[18] = a2[18];
        a1[19] = a2[19];
        a1[20] = a2[20];
        a1[21] = a2[21];
        uint64_t v26 = a2[22];
        *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
        a1[22] = v26;
        a1[24] = a2[24];
        a1[25] = a2[25];
        a1[26] = a2[26];
        uint64_t v27 = a2[27];
        *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
        a1[27] = v27;
        unint64_t v28 = a2[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v28 >= 0x11)
        {
          a1[29] = a2[29];
          a1[30] = a2[30];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
        }
        goto LABEL_198;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_199;
    }
    a1[5] = a2[5];
    a1[6] = a2[6];
    uint64_t v103 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v104 = (char *)a1 + v103;
    v105 = (char *)a2 + v103;
    *(void *)((char *)a1 + v103) = *(void *)((char *)a2 + v103);
    uint64_t v106 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    v107 = &v104[v106];
    v108 = &v105[v106];
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v191 = type metadata accessor for PuzzleStatisticValue(0);
        int v192 = swift_getEnumCaseMultiPayload();
        uint64_t v378 = v191;
        if (v192 == 5)
        {
          uint64_t v301 = type metadata accessor for PuzzleStreak();
          uint64_t v302 = *(void *)(v301 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v302 + 48))(v108, 1, v301))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v107, v108, *(void *)(*(void *)(v303 - 8) + 64));
          }
          else
          {
            uint64_t v315 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16))(v107, v108, v315);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v302 + 56))(v107, 0, 1, v301);
          }
          long long v304 = a3;
          uint64_t v191 = v378;
        }
        else
        {
          if (v192 != 4)
          {
            long long v304 = a3;
            memcpy(v107, v108, *(void *)(*(void *)(v191 - 8) + 64));
            goto LABEL_176;
          }
          uint64_t v193 = type metadata accessor for PuzzleStreak();
          uint64_t v194 = *(void *)(v193 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48))(v108, 1, v193))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v107, v108, *(void *)(*(void *)(v195 - 8) + 64));
          }
          else
          {
            uint64_t v313 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v107, v108, v313);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v194 + 56))(v107, 0, 1, v193);
          }
          long long v304 = a3;
          uint64_t v191 = v378;
        }
        swift_storeEnumTagMultiPayload();
LABEL_176:
        uint64_t v316 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v317 = *(int *)(v316 + 20);
        uint64_t v318 = v107;
        v319 = &v107[v317];
        v320 = &v108[v317];
        int v321 = swift_getEnumCaseMultiPayload();
        if (v321 == 5)
        {
          uint64_t v325 = type metadata accessor for PuzzleStreak();
          uint64_t v326 = *(void *)(v325 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v326 + 48))(v320, 1, v325))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v319, v320, *(void *)(*(void *)(v327 - 8) + 64));
          }
          else
          {
            uint64_t v329 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 16))(v319, v320, v329);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v326 + 56))(v319, 0, 1, v325);
          }
          uint64_t v191 = v378;
        }
        else
        {
          if (v321 != 4)
          {
            memcpy(v319, v320, *(void *)(*(void *)(v191 - 8) + 64));
            goto LABEL_188;
          }
          uint64_t v322 = type metadata accessor for PuzzleStreak();
          uint64_t v323 = *(void *)(v322 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v323 + 48))(v320, 1, v322))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v319, v320, *(void *)(*(void *)(v324 - 8) + 64));
          }
          else
          {
            uint64_t v328 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v328 - 8) + 16))(v319, v320, v328);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v323 + 56))(v319, 0, 1, v322);
          }
          uint64_t v191 = v378;
        }
        swift_storeEnumTagMultiPayload();
LABEL_188:
        uint64_t v330 = *(int *)(v316 + 24);
        uint64_t v331 = (char *)v318 + v330;
        uint64_t v332 = &v108[v330];
        int v333 = swift_getEnumCaseMultiPayload();
        if (v333 == 5)
        {
          uint64_t v334 = type metadata accessor for PuzzleStreak();
          uint64_t v335 = *(void *)(v334 - 8);
          a3 = v304;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v335 + 48))(v332, 1, v334)) {
            goto LABEL_191;
          }
        }
        else
        {
          a3 = v304;
          if (v333 != 4)
          {
            memcpy(v331, v332, *(void *)(*(void *)(v191 - 8) + 64));
            goto LABEL_197;
          }
          uint64_t v334 = type metadata accessor for PuzzleStreak();
          uint64_t v335 = *(void *)(v334 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v335 + 48))(v332, 1, v334))
          {
LABEL_191:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v331, v332, *(void *)(*(void *)(v336 - 8) + 64));
            goto LABEL_196;
          }
        }
        uint64_t v337 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v337 - 8) + 16))(v331, v332, v337);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v335 + 56))(v331, 0, 1, v334);
        goto LABEL_196;
      case 2u:
        v187 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v188 = *((void *)v187 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v188 + 48))(v108, 1, v187))
        {
          sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          size_t v190 = *(void *)(*(void *)(v189 - 8) + 64);
          goto LABEL_161;
        }
        v380 = a3;
        uint64_t v251 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 16))(v107, v108, v251);
        uint64_t v252 = type metadata accessor for PuzzleLeaderboardEntry();
        v253 = v107;
        uint64_t v254 = v252;
        uint64_t v255 = *(int *)(v252 + 20);
        v256 = &v253[v255];
        id v257 = &v108[v255];
        *(void *)v256 = *(void *)v257;
        *((void *)v256 + 1) = *((void *)v257 + 1);
        uint64_t v258 = *(int *)(v252 + 24);
        uint64_t v370 = v253;
        uint64_t v259 = &v253[v258];
        uint64_t v260 = &v108[v258];
        *(void *)uint64_t v259 = *(void *)v260;
        *((void *)v259 + 1) = *((void *)v260 + 1);
        v261 = (uint64_t *)(v260 + 16);
        unint64_t v262 = *((void *)v260 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v262 >> 60 == 15)
        {
          *((_OWORD *)v259 + 1) = *(_OWORD *)v261;
        }
        else
        {
          uint64_t v308 = *v261;
          sub_1BFE95820(*v261, v262);
          *((void *)v259 + 2) = v308;
          *((void *)v259 + 3) = v262;
        }
        *(void *)&v370[*(int *)(v254 + 28)] = *(void *)&v108[*(int *)(v254 + 28)];
        *(void *)&v370[*(int *)(v254 + 32)] = *(void *)&v108[*(int *)(v254 + 32)];
        *(void *)&v370[v187[5]] = *(void *)&v108[v187[5]];
        *(void *)&v370[v187[6]] = *(void *)&v108[v187[6]];
        uint64_t v309 = v187[7];
        v310 = &v370[v309];
        unint64_t v311 = &v108[v309];
        *(void *)v310 = *(void *)v311;
        *((void *)v310 + 1) = *((void *)v311 + 1);
        uint64_t v312 = *(void (**)(char *, void, uint64_t, int *))(v188 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v312(v370, 0, 1, v187);
        a3 = v380;
        goto LABEL_197;
      case 3u:
        v379 = a3;
        *(void *)v107 = *(void *)v108;
        uint64_t v196 = *((void *)v108 + 1);
        v107[16] = v108[16];
        *((void *)v107 + 1) = v196;
        v197 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v198 = v197[6];
        uint64_t v369 = v107;
        uint64_t v199 = &v107[v198];
        v200 = &v108[v198];
        uint64_t v201 = type metadata accessor for PuzzleStreak();
        uint64_t v202 = *(void *)(v201 - 8);
        uint64_t v203 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v202 + 48);
        if (v203(v200, 1, v201))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v199, v200, *(void *)(*(void *)(v204 - 8) + 64));
        }
        else
        {
          uint64_t v279 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 16))(v199, v200, v279);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v202 + 56))(v199, 0, 1, v201);
        }
        uint64_t v280 = v197[7];
        id v281 = &v369[v280];
        long long v282 = &v108[v280];
        if (v203(&v108[v280], 1, v201))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v281, v282, *(void *)(*(void *)(v283 - 8) + 64));
        }
        else
        {
          uint64_t v284 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16))(v281, v282, v284);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v202 + 56))(v281, 0, 1, v201);
        }
        a3 = v379;
        uint64_t v285 = v197[8];
        uint64_t v286 = &v369[v285];
        v287 = &v108[v285];
        long long v288 = *(_OWORD *)v287;
        long long v289 = *((_OWORD *)v287 + 1);
        *(_OWORD *)(v286 + 25) = *(_OWORD *)(v287 + 25);
        *(_OWORD *)uint64_t v286 = v288;
        *((_OWORD *)v286 + 1) = v289;
        uint64_t v290 = v197[9];
        v291 = &v369[v290];
        v292 = &v108[v290];
        long long v293 = *(_OWORD *)v292;
        long long v294 = *((_OWORD *)v292 + 1);
        *(_OWORD *)(v291 + 25) = *(_OWORD *)(v292 + 25);
        *(_OWORD *)v291 = v293;
        *((_OWORD *)v291 + 1) = v294;
        uint64_t v295 = v197[10];
        uint64_t v296 = &v369[v295];
        v297 = &v108[v295];
        long long v298 = *(_OWORD *)v297;
        long long v299 = *((_OWORD *)v297 + 1);
        *(_OWORD *)(v296 + 25) = *(_OWORD *)(v297 + 25);
        *(_OWORD *)uint64_t v296 = v298;
        *((_OWORD *)v296 + 1) = v299;
        goto LABEL_197;
      default:
        uint64_t v109 = type metadata accessor for PuzzleStatisticValue(0);
        int v110 = swift_getEnumCaseMultiPayload();
        if (v110 == 5)
        {
          uint64_t v111 = v107;
          uint64_t v112 = type metadata accessor for PuzzleStreak();
          uint64_t v113 = *(void *)(v112 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v108, 1, v112))
          {
LABEL_159:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v111, v108, *(void *)(*(void *)(v300 - 8) + 64));
            goto LABEL_196;
          }
        }
        else
        {
          if (v110 != 4)
          {
            size_t v190 = *(void *)(*(void *)(v109 - 8) + 64);
LABEL_161:
            memcpy(v107, v108, v190);
            goto LABEL_197;
          }
          uint64_t v111 = v107;
          uint64_t v112 = type metadata accessor for PuzzleStreak();
          uint64_t v113 = *(void *)(v112 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v108, 1, v112)) {
            goto LABEL_159;
          }
        }
        uint64_t v314 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 16))(v111, v108, v314);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v111, 0, 1, v112);
LABEL_196:
        swift_storeEnumTagMultiPayload();
LABEL_197:
        swift_storeEnumTagMultiPayload();
LABEL_198:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_199:
  uint64_t v338 = a3[5];
  v339 = (char *)a1 + v338;
  v340 = (char *)a2 + v338;
  *(void *)v339 = *(void *)((char *)a2 + v338);
  *((void *)v339 + 1) = *(void *)((char *)a2 + v338 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v339 + 2) = *((void *)v340 + 2);
  *((void *)v339 + 3) = *((void *)v340 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v339 + 4) = *((void *)v340 + 4);
  *((void *)v339 + 5) = *((void *)v340 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v341 = *((void *)v340 + 7);
  if (*((void *)v339 + 7) < 0xFuLL)
  {
    if (v341 >= 0xF)
    {
      *((void *)v339 + 6) = *((void *)v340 + 6);
      *((void *)v339 + 7) = *((void *)v340 + 7);
      swift_bridgeObjectRetain();
      goto LABEL_206;
    }
    goto LABEL_204;
  }
  if (v341 < 0xF)
  {
    sub_1C01A7564((uint64_t)(v339 + 48));
LABEL_204:
    *((_OWORD *)v339 + 3) = *((_OWORD *)v340 + 3);
    goto LABEL_206;
  }
  *((void *)v339 + 6) = *((void *)v340 + 6);
  *((void *)v339 + 7) = *((void *)v340 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_206:
  *((void *)v339 + 8) = *((void *)v340 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v339 + 9) = *((void *)v340 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v339 + 10) = *((void *)v340 + 10);
  swift_retain();
  swift_release();
  *((void *)v339 + 11) = *((void *)v340 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v339 + 12) = *((void *)v340 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v339 + 13) = *((void *)v340 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v339 + 14) = *((void *)v340 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v339[120] = v340[120];
  uint64_t v342 = a3[6];
  unint64_t v343 = *(void *)((char *)a2 + v342);
  sub_1BFF45054(v343);
  unint64_t v344 = *(void *)((char *)a1 + v342);
  *(void *)((char *)a1 + v342) = v343;
  sub_1BFF44AC4(v344);
  uint64_t v345 = a3[7];
  uint64_t v346 = (char *)a1 + v345;
  v347 = (char *)a2 + v345;
  uint64_t v348 = sub_1C151AC1C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v348 - 8) + 24))(v346, v347, v348);
  uint64_t v349 = a3[8];
  uint64_t v350 = (void *)((char *)a1 + v349);
  uint64_t v351 = (void *)((char *)a2 + v349);
  uint64_t v352 = *(void *)((char *)a1 + v349 + 8);
  uint64_t v353 = v351[1];
  if (v352)
  {
    if (v353)
    {
      *uint64_t v350 = *v351;
      v350[1] = v351[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v350[2] = v351[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0D6034C((uint64_t)v350);
      uint64_t v354 = v351[2];
      *(_OWORD *)uint64_t v350 = *(_OWORD *)v351;
      v350[2] = v354;
    }
  }
  else if (v353)
  {
    *uint64_t v350 = *v351;
    v350[1] = v351[1];
    v350[2] = v351[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v355 = *(_OWORD *)v351;
    v350[2] = v351[2];
    *(_OWORD *)uint64_t v350 = v355;
  }
  return a1;
}

uint64_t sub_1C0D6034C(uint64_t a1)
{
  return a1;
}

char *initializeWithTake for FormatItemNodeData(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_1C151DBAC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
      uint64_t v12 = v7[7];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      v13[8] = v14[8];
      *(void *)uint64_t v13 = *(void *)v14;
      *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
      goto LABEL_90;
    case 3u:
      id v207 = a3;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      a1[56] = a2[56];
      uint64_t v15 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v16 = v15[10];
      unint64_t v17 = &a1[v16];
      char v18 = &a2[v16];
      *unint64_t v17 = a2[v16];
      v17[1] = a2[v16 + 1];
      uint64_t v19 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v20 = v19[6];
      unint64_t v21 = &v17[v20];
      uint64_t v22 = &v18[v20];
      uint64_t v23 = (int *)type metadata accessor for SharedItem();
      uint64_t v24 = *((void *)v23 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        uint64_t v69 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v21, v22, v69);
        v21[v23[5]] = v22[v23[5]];
        *(void *)&v21[v23[6]] = *(void *)&v22[v23[6]];
        uint64_t v70 = v23[7];
        long long v206 = &v21[v70];
        uint64_t v71 = &v22[v70];
        uint64_t v72 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v206, v71, v72);
        (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
      }
      v17[v19[7]] = v18[v19[7]];
      v17[v19[8]] = v18[v19[8]];
      v17[v19[9]] = v18[v19[9]];
      v17[v19[10]] = v18[v19[10]];
      uint64_t v73 = v15[11];
      uint64_t v74 = &a1[v73];
      id v75 = &a2[v73];
      uint64_t v76 = sub_1C151D2DC();
      uint64_t v77 = *(void *)(v76 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v74, v75, v76);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
      }
      a3 = v207;
      *(_OWORD *)&a1[v15[12]] = *(_OWORD *)&a2[v15[12]];
      uint64_t v87 = v15[13];
      uint64_t v88 = *(void *)&a2[v87];
      if (v88 == 2) {
        uint64_t v88 = 2;
      }
      *(void *)&a1[v87] = v88;
      *(void *)&a1[v15[14]] = *(void *)&a2[v15[14]];
      goto LABEL_90;
    case 4u:
      long long v208 = a3;
      uint64_t v26 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v26;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v27 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v28 = v27[8];
      uint64_t v29 = &a1[v28];
      unint64_t v30 = &a2[v28];
      uint64_t v31 = sub_1C1515FDC();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v33(v29, v30, v31);
      uint64_t v34 = v27[9];
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v205 = v31;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&a2[v34], 1, v31))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
      }
      v79 = v33;
      a3 = v208;
      *(void *)&a1[v27[10]] = *(void *)&a2[v27[10]];
      *(void *)&a1[v27[11]] = *(void *)&a2[v27[11]];
      uint64_t v80 = v27[12];
      char v81 = &a1[v80];
      uint64_t v82 = &a2[v80];
      uint64_t v83 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v84 = *((void *)v83 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v84 + 48))(v82, 1, v83))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        uint64_t v200 = v84;
        uint64_t v201 = v27;
        uint64_t v202 = v79;
        *(_OWORD *)char v81 = *(_OWORD *)v82;
        *((void *)v81 + 2) = *((void *)v82 + 2);
        v81[24] = v82[24];
        *((void *)v81 + 4) = *((void *)v82 + 4);
        *(_OWORD *)(v81 + 40) = *(_OWORD *)(v82 + 40);
        v81[56] = v82[56];
        uint64_t v89 = v83[10];
        uint64_t v90 = &v81[v89];
        long long v91 = &v82[v89];
        *uint64_t v90 = v82[v89];
        v90[1] = v82[v89 + 1];
        uint64_t v92 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v93 = v92[6];
        __dst = &v90[v93];
        v94 = &v91[v93];
        uint64_t v95 = (int *)type metadata accessor for SharedItem();
        uint64_t v199 = *((void *)v95 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v199 + 48))(v94, 1, v95))
        {
          uint64_t v96 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          uint64_t v114 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(__dst, v94, v114);
          __dst[v95[5]] = v94[v95[5]];
          *(void *)&__dst[v95[6]] = *(void *)&v94[v95[6]];
          v202(&__dst[v95[7]], &v94[v95[7]], v205);
          (*(void (**)(char *, void, uint64_t, int *))(v199 + 56))(__dst, 0, 1, v95);
        }
        v90[v92[7]] = v91[v92[7]];
        v90[v92[8]] = v91[v92[8]];
        v90[v92[9]] = v91[v92[9]];
        v90[v92[10]] = v91[v92[10]];
        uint64_t v115 = v83[11];
        uint64_t v116 = &v81[v115];
        v117 = &v82[v115];
        uint64_t v118 = sub_1C151D2DC();
        uint64_t v119 = *(void *)(v118 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v117, 1, v118))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v116, v117, v118);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
        }
        a3 = v208;
        uint64_t v27 = v201;
        v79 = v202;
        *(_OWORD *)&v81[v83[12]] = *(_OWORD *)&v82[v83[12]];
        uint64_t v121 = v83[13];
        uint64_t v122 = *(void *)&v82[v121];
        if (v122 == 2) {
          uint64_t v122 = 2;
        }
        *(void *)&v81[v121] = v122;
        *(void *)&v81[v83[14]] = *(void *)&v82[v83[14]];
        (*(void (**)(char *, void, uint64_t, int *))(v200 + 56))(v81, 0, 1, v83);
      }
      uint64_t v123 = v27[13];
      uint64_t v124 = &a1[v123];
      v125 = &a2[v123];
      uint64_t v126 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v127 = *(void *)(v126 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
          uint64_t v129 = type metadata accessor for GenericDataVisualization();
          uint64_t v130 = v79;
          uint64_t v131 = v129;
          v130(&v124[*(int *)(v129 + 20)], &v125[*(int *)(v129 + 20)], v205);
          *(void *)&v124[*(int *)(v131 + 24)] = *(void *)&v125[*(int *)(v131 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v124, v125, *(void *)(v127 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
      }
      a1[v27[14]] = a2[v27[14]];
      goto LABEL_90;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v38 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      unint64_t v39 = &a1[v38];
      uint64_t v40 = &a2[v38];
      long long v41 = *(_OWORD *)&a2[v38 + 16];
      *(_OWORD *)unint64_t v39 = *(_OWORD *)&a2[v38];
      *((_OWORD *)v39 + 1) = v41;
      uint64_t v42 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v43 = *(int *)(v42 + 24);
      uint64_t v44 = &v39[v43];
      id v45 = &v40[v43];
      uint64_t v46 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v47 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        uint64_t v86 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v44, v45, v86);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      *(void *)&v39[*(int *)(v42 + 28)] = *(void *)&v40[*(int *)(v42 + 28)];
      goto LABEL_90;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      int v49 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v50 = v49[5];
      uint64_t v51 = &a1[v50];
      unint64_t v52 = &a2[v50];
      uint64_t v53 = sub_1C151959C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
      *(void *)&a1[v49[6]] = *(void *)&a2[v49[6]];
      uint64_t v54 = v49[7];
      id v55 = &a1[v54];
      long long v56 = &a2[v54];
      v55[8] = v56[8];
      *(void *)id v55 = *(void *)v56;
      *(_OWORD *)&a1[v49[8]] = *(_OWORD *)&a2[v49[8]];
      goto LABEL_90;
    case 0xFu:
      uint64_t v57 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v57;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v58 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v59 = &a1[v58];
      long long v60 = &a2[v58];
      *(void *)&a1[v58] = *(void *)&a2[v58];
      uint64_t v61 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      long long v62 = &v59[v61];
      uint64_t v63 = &v60[v61];
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v100 = type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          long long v209 = a3;
          if (EnumCaseMultiPayload == 5)
          {
            uint64_t v156 = type metadata accessor for PuzzleStreak();
            uint64_t v157 = *(void *)(v156 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v63, 1, v156))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v62, v63, *(void *)(*(void *)(v158 - 8) + 64));
            }
            else
            {
              uint64_t v162 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v62, v63, v162);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v62, 0, 1, v156);
            }
            uint64_t v159 = v62;
          }
          else
          {
            if (EnumCaseMultiPayload != 4)
            {
              uint64_t v159 = v62;
              memcpy(v62, v63, *(void *)(*(void *)(v100 - 8) + 64));
              goto LABEL_71;
            }
            uint64_t v102 = type metadata accessor for PuzzleStreak();
            uint64_t v103 = *(void *)(v102 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v63, 1, v102))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v62, v63, *(void *)(*(void *)(v104 - 8) + 64));
            }
            else
            {
              uint64_t v161 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v62, v63, v161);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v62, 0, 1, v102);
            }
            uint64_t v159 = v62;
          }
          swift_storeEnumTagMultiPayload();
LABEL_71:
          uint64_t v163 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v164 = *(int *)(v163 + 20);
          uint64_t v165 = v159;
          unint64_t v166 = (char *)v159 + v164;
          long long v167 = &v63[v164];
          int v168 = swift_getEnumCaseMultiPayload();
          if (v168 == 5)
          {
            uint64_t v169 = type metadata accessor for PuzzleStreak();
            uint64_t v170 = *(void *)(v169 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v167, 1, v169))
            {
LABEL_76:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v166, v167, *(void *)(*(void *)(v171 - 8) + 64));
              goto LABEL_79;
            }
          }
          else
          {
            if (v168 != 4)
            {
              memcpy(v166, v167, *(void *)(*(void *)(v100 - 8) + 64));
              goto LABEL_80;
            }
            uint64_t v169 = type metadata accessor for PuzzleStreak();
            uint64_t v170 = *(void *)(v169 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v167, 1, v169)) {
              goto LABEL_76;
            }
          }
          uint64_t v172 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 32))(v166, v167, v172);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v166, 0, 1, v169);
LABEL_79:
          swift_storeEnumTagMultiPayload();
LABEL_80:
          uint64_t v173 = *(int *)(v163 + 24);
          uint64_t v174 = (char *)v165 + v173;
          uint64_t v175 = &v63[v173];
          int v176 = swift_getEnumCaseMultiPayload();
          if (v176 == 5)
          {
            uint64_t v177 = type metadata accessor for PuzzleStreak();
            uint64_t v178 = *(void *)(v177 - 8);
            a3 = v209;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48))(v175, 1, v177))
            {
LABEL_85:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v174, v175, *(void *)(*(void *)(v179 - 8) + 64));
              goto LABEL_88;
            }
          }
          else
          {
            a3 = v209;
            if (v176 != 4)
            {
              memcpy(v174, v175, *(void *)(*(void *)(v100 - 8) + 64));
              goto LABEL_89;
            }
            uint64_t v177 = type metadata accessor for PuzzleStreak();
            uint64_t v178 = *(void *)(v177 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48))(v175, 1, v177)) {
              goto LABEL_85;
            }
          }
          uint64_t v180 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(v174, v175, v180);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v178 + 56))(v174, 0, 1, v177);
          goto LABEL_88;
        case 2u:
          id v97 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v98 = *((void *)v97 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v98 + 48))(v63, 1, v97))
          {
            sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            memcpy(v62, v63, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            uint64_t v132 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v62, v63, v132);
            uint64_t v133 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)&v62[v133[5]] = *(_OWORD *)&v63[v133[5]];
            uint64_t v134 = v133[6];
            uint64_t v135 = &v62[v134];
            uint64_t v136 = &v63[v134];
            long long v137 = *((_OWORD *)v136 + 1);
            *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
            *((_OWORD *)v135 + 1) = v137;
            *(void *)&v62[v133[7]] = *(void *)&v63[v133[7]];
            *(void *)&v62[v133[8]] = *(void *)&v63[v133[8]];
            *(void *)&v62[v97[5]] = *(void *)&v63[v97[5]];
            *(void *)&v62[v97[6]] = *(void *)&v63[v97[6]];
            *(_OWORD *)&v62[v97[7]] = *(_OWORD *)&v63[v97[7]];
            (*(void (**)(char *, void, uint64_t, int *))(v98 + 56))(v62, 0, 1, v97);
          }
          goto LABEL_89;
        case 3u:
          uint64_t v105 = *((void *)v63 + 1);
          *(void *)long long v62 = *(void *)v63;
          *((void *)v62 + 1) = v105;
          v62[16] = v63[16];
          uint64_t v106 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v107 = v106[6];
          __dsta = v62;
          v108 = &v62[v107];
          uint64_t v109 = &v63[v107];
          uint64_t v110 = type metadata accessor for PuzzleStreak();
          uint64_t v111 = *(void *)(v110 - 8);
          uint64_t v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48);
          if (v112(v109, 1, v110))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v108, v109, *(void *)(*(void *)(v113 - 8) + 64));
          }
          else
          {
            uint64_t v138 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v108, v109, v138);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
          }
          uint64_t v139 = v106[7];
          uint64_t v140 = &__dsta[v139];
          long long v141 = &v63[v139];
          if (v112(&v63[v139], 1, v110))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
          }
          else
          {
            uint64_t v143 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(v140, v141, v143);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v140, 0, 1, v110);
          }
          uint64_t v144 = v106[8];
          uint64_t v145 = &__dsta[v144];
          uint64_t v146 = &v63[v144];
          long long v147 = *((_OWORD *)v146 + 1);
          *(_OWORD *)uint64_t v145 = *(_OWORD *)v146;
          *((_OWORD *)v145 + 1) = v147;
          *(_OWORD *)(v145 + 25) = *(_OWORD *)(v146 + 25);
          uint64_t v148 = v106[9];
          id v149 = &__dsta[v148];
          uint64_t v150 = &v63[v148];
          *(_OWORD *)(v149 + 25) = *(_OWORD *)(v150 + 25);
          long long v151 = *((_OWORD *)v150 + 1);
          *(_OWORD *)id v149 = *(_OWORD *)v150;
          *((_OWORD *)v149 + 1) = v151;
          uint64_t v152 = v106[10];
          uint64_t v153 = &__dsta[v152];
          uint64_t v154 = &v63[v152];
          long long v155 = *((_OWORD *)v154 + 1);
          *(_OWORD *)uint64_t v153 = *(_OWORD *)v154;
          *((_OWORD *)v153 + 1) = v155;
          *(_OWORD *)(v153 + 25) = *(_OWORD *)(v154 + 25);
          goto LABEL_89;
        default:
          uint64_t v64 = type metadata accessor for PuzzleStatisticValue(0);
          int v65 = swift_getEnumCaseMultiPayload();
          if (v65 == 5)
          {
            uint64_t v66 = type metadata accessor for PuzzleStreak();
            uint64_t v67 = *(void *)(v66 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v63, 1, v66)) {
              goto LABEL_15;
            }
          }
          else
          {
            if (v65 != 4)
            {
              memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
              goto LABEL_89;
            }
            uint64_t v66 = type metadata accessor for PuzzleStreak();
            uint64_t v67 = *(void *)(v66 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v63, 1, v66))
            {
LABEL_15:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v62, v63, *(void *)(*(void *)(v68 - 8) + 64));
              goto LABEL_88;
            }
          }
          uint64_t v160 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v62, v63, v160);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v62, 0, 1, v66);
LABEL_88:
          swift_storeEnumTagMultiPayload();
LABEL_89:
          swift_storeEnumTagMultiPayload();
LABEL_90:
          swift_storeEnumTagMultiPayload();
LABEL_91:
          uint64_t v181 = a3[5];
          uint64_t v182 = a3[6];
          id v183 = &a1[v181];
          id v184 = &a2[v181];
          *(_OWORD *)(v183 + 105) = *(_OWORD *)(v184 + 105);
          long long v185 = *((_OWORD *)v184 + 6);
          long long v186 = *((_OWORD *)v184 + 4);
          *((_OWORD *)v183 + 5) = *((_OWORD *)v184 + 5);
          *((_OWORD *)v183 + 6) = v185;
          long long v187 = *((_OWORD *)v184 + 1);
          *(_OWORD *)id v183 = *(_OWORD *)v184;
          *((_OWORD *)v183 + 1) = v187;
          long long v188 = *((_OWORD *)v184 + 2);
          long long v189 = *((_OWORD *)v184 + 3);
          uint64_t v190 = *(void *)&a2[v182];
          *((_OWORD *)v183 + 2) = v188;
          *((_OWORD *)v183 + 3) = v189;
          *((_OWORD *)v183 + 4) = v186;
          *(void *)&a1[v182] = v190;
          uint64_t v191 = a3[7];
          int v192 = &a1[v191];
          uint64_t v193 = &a2[v191];
          uint64_t v194 = sub_1C151AC1C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v192, v193, v194);
          uint64_t v195 = a3[8];
          uint64_t v196 = &a1[v195];
          v197 = &a2[v195];
          *(_OWORD *)uint64_t v196 = *(_OWORD *)v197;
          *((void *)v196 + 2) = *((void *)v197 + 2);
          return a1;
      }
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_91;
  }
}

char *assignWithTake for FormatItemNodeData(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1BFEE6798((uint64_t)a1);
    uint64_t v6 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v8 = v7[5];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_1C151DBAC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
        uint64_t v12 = v7[7];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        v13[8] = v14[8];
        *(void *)uint64_t v13 = *(void *)v14;
        *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
        goto LABEL_93;
      case 3u:
        uint64_t v215 = a3;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        a1[24] = a2[24];
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        a1[56] = a2[56];
        uint64_t v15 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v16 = v15[10];
        unint64_t v17 = &a1[v16];
        char v18 = &a2[v16];
        *unint64_t v17 = a2[v16];
        v17[1] = a2[v16 + 1];
        uint64_t v19 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v20 = v19[6];
        unint64_t v21 = &v17[v20];
        uint64_t v22 = &v18[v20];
        uint64_t v23 = (int *)type metadata accessor for SharedItem();
        uint64_t v24 = *((void *)v23 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
        {
          uint64_t v25 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          uint64_t v70 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v21, v22, v70);
          v21[v23[5]] = v22[v23[5]];
          *(void *)&v21[v23[6]] = *(void *)&v22[v23[6]];
          uint64_t v71 = v23[7];
          char v214 = &v21[v71];
          uint64_t v72 = &v22[v71];
          uint64_t v73 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v214, v72, v73);
          (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
        }
        v17[v19[7]] = v18[v19[7]];
        v17[v19[8]] = v18[v19[8]];
        v17[v19[9]] = v18[v19[9]];
        v17[v19[10]] = v18[v19[10]];
        uint64_t v74 = v15[11];
        id v75 = &a1[v74];
        uint64_t v76 = &a2[v74];
        uint64_t v77 = sub_1C151D2DC();
        uint64_t v78 = *(void *)(v77 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v75, v76, v77);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
        }
        a3 = v215;
        *(_OWORD *)&a1[v15[12]] = *(_OWORD *)&a2[v15[12]];
        uint64_t v88 = v15[13];
        uint64_t v89 = *(void *)&a2[v88];
        if (v89 == 2) {
          uint64_t v89 = 2;
        }
        *(void *)&a1[v88] = v89;
        *(void *)&a1[v15[14]] = *(void *)&a2[v15[14]];
        goto LABEL_93;
      case 4u:
        uint64_t v26 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v26;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v27 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v28 = v27[8];
        uint64_t v29 = &a1[v28];
        unint64_t v30 = &a2[v28];
        uint64_t v31 = sub_1C1515FDC();
        uint64_t v32 = *(void *)(v31 - 8);
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v33(v29, v30, v31);
        uint64_t v34 = v27[9];
        uint64_t v35 = &a1[v34];
        uint64_t v36 = &a2[v34];
        uint64_t v210 = v31;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&a2[v34], 1, v31))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          v33(v35, v36, v31);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
        }
        uint64_t v80 = v33;
        *(void *)&a1[v27[10]] = *(void *)&a2[v27[10]];
        *(void *)&a1[v27[11]] = *(void *)&a2[v27[11]];
        uint64_t v211 = v27;
        uint64_t v81 = v27[12];
        uint64_t v82 = &a1[v81];
        uint64_t v83 = &a2[v81];
        uint64_t v84 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v85 = *((void *)v84 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v85 + 48))(v83, 1, v84))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          uint64_t v207 = v85;
          long long v208 = v80;
          id v216 = a3;
          *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
          *((void *)v82 + 2) = *((void *)v83 + 2);
          v82[24] = v83[24];
          *((void *)v82 + 4) = *((void *)v83 + 4);
          *(_OWORD *)(v82 + 40) = *(_OWORD *)(v83 + 40);
          v82[56] = v83[56];
          uint64_t v90 = v84[10];
          long long v91 = &v82[v90];
          uint64_t v92 = &v83[v90];
          *long long v91 = v83[v90];
          v91[1] = v83[v90 + 1];
          uint64_t v93 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v94 = v93[6];
          __dst = &v91[v94];
          uint64_t v95 = &v92[v94];
          uint64_t v96 = (int *)type metadata accessor for SharedItem();
          uint64_t v206 = *((void *)v96 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v206 + 48))(v95, 1, v96))
          {
            uint64_t v97 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v95, *(void *)(*(void *)(v97 - 8) + 64));
          }
          else
          {
            uint64_t v116 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(__dst, v95, v116);
            __dst[v96[5]] = v95[v96[5]];
            *(void *)&__dst[v96[6]] = *(void *)&v95[v96[6]];
            v208(&__dst[v96[7]], &v95[v96[7]], v210);
            (*(void (**)(char *, void, uint64_t, int *))(v206 + 56))(__dst, 0, 1, v96);
          }
          v91[v93[7]] = v92[v93[7]];
          v91[v93[8]] = v92[v93[8]];
          v91[v93[9]] = v92[v93[9]];
          v91[v93[10]] = v92[v93[10]];
          uint64_t v117 = v84[11];
          uint64_t v118 = &v82[v117];
          uint64_t v119 = &v83[v117];
          uint64_t v120 = sub_1C151D2DC();
          uint64_t v121 = *(void *)(v120 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v118, v119, v120);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
          }
          a3 = v216;
          uint64_t v80 = v208;
          *(_OWORD *)&v82[v84[12]] = *(_OWORD *)&v83[v84[12]];
          uint64_t v123 = v84[13];
          uint64_t v124 = *(void *)&v83[v123];
          if (v124 == 2) {
            uint64_t v124 = 2;
          }
          *(void *)&v82[v123] = v124;
          *(void *)&v82[v84[14]] = *(void *)&v83[v84[14]];
          (*(void (**)(char *, void, uint64_t, int *))(v207 + 56))(v82, 0, 1, v84);
        }
        uint64_t v125 = v211[13];
        uint64_t v126 = &a1[v125];
        uint64_t v127 = &a2[v125];
        uint64_t v128 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v129 = *(void *)(v128 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v126, v127, *(void *)(*(void *)(v130 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)uint64_t v126 = *(_OWORD *)v127;
            uint64_t v131 = type metadata accessor for GenericDataVisualization();
            uint64_t v132 = v80;
            uint64_t v133 = v131;
            v132(&v126[*(int *)(v131 + 20)], &v127[*(int *)(v131 + 20)], v210);
            *(void *)&v126[*(int *)(v133 + 24)] = *(void *)&v127[*(int *)(v133 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v126, v127, *(void *)(v129 + 64));
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
        }
        a1[v211[14]] = a2[v211[14]];
        goto LABEL_93;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v38 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        unint64_t v39 = &a1[v38];
        uint64_t v40 = &a2[v38];
        long long v41 = *(_OWORD *)&a2[v38 + 16];
        *(_OWORD *)unint64_t v39 = *(_OWORD *)&a2[v38];
        *((_OWORD *)v39 + 1) = v41;
        uint64_t v42 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v43 = *(int *)(v42 + 24);
        uint64_t v44 = &v39[v43];
        id v45 = &v40[v43];
        uint64_t v46 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v47 = *(void *)(v46 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          uint64_t v87 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v44, v45, v87);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        *(void *)&v39[*(int *)(v42 + 28)] = *(void *)&v40[*(int *)(v42 + 28)];
        goto LABEL_93;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        int v49 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v50 = v49[5];
        uint64_t v51 = &a1[v50];
        unint64_t v52 = &a2[v50];
        uint64_t v53 = sub_1C151959C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
        *(void *)&a1[v49[6]] = *(void *)&a2[v49[6]];
        uint64_t v54 = v49[7];
        id v55 = &a1[v54];
        long long v56 = &a2[v54];
        v55[8] = v56[8];
        *(void *)id v55 = *(void *)v56;
        *(_OWORD *)&a1[v49[8]] = *(_OWORD *)&a2[v49[8]];
        goto LABEL_93;
      case 0xFu:
        uint64_t v57 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v57;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v58 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        uint64_t v59 = &a1[v58];
        long long v60 = &a2[v58];
        *(void *)&a1[v58] = *(void *)&a2[v58];
        uint64_t v61 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        long long v62 = &v59[v61];
        uint64_t v63 = &v60[v61];
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v101 = type metadata accessor for PuzzleStatisticValue(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 5)
            {
              uint64_t v158 = v62;
              uint64_t v159 = type metadata accessor for PuzzleStreak();
              uint64_t v160 = *(void *)(v159 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v63, 1, v159))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                long long v62 = v158;
                memcpy(v158, v63, *(void *)(*(void *)(v161 - 8) + 64));
              }
              else
              {
                uint64_t v165 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v158, v63, v165);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v158, 0, 1, v159);
                long long v62 = v158;
              }
              uint64_t v162 = a3;
            }
            else
            {
              if (EnumCaseMultiPayload != 4)
              {
                uint64_t v162 = a3;
                memcpy(v62, v63, *(void *)(*(void *)(v101 - 8) + 64));
                goto LABEL_72;
              }
              uint64_t v103 = v62;
              uint64_t v104 = type metadata accessor for PuzzleStreak();
              uint64_t v105 = *(void *)(v104 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v63, 1, v104))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                long long v62 = v103;
                memcpy(v103, v63, *(void *)(*(void *)(v106 - 8) + 64));
              }
              else
              {
                uint64_t v164 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v103, v63, v164);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v103, 0, 1, v104);
                long long v62 = v103;
              }
              uint64_t v162 = a3;
            }
            swift_storeEnumTagMultiPayload();
LABEL_72:
            uint64_t v166 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v167 = *(int *)(v166 + 20);
            int v168 = &v62[v167];
            uint64_t v169 = &v63[v167];
            int v170 = swift_getEnumCaseMultiPayload();
            if (v170 == 5)
            {
              uint64_t v213 = v62;
              uint64_t v174 = type metadata accessor for PuzzleStreak();
              uint64_t v175 = *(void *)(v174 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48))(v169, 1, v174))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v168, v169, *(void *)(*(void *)(v176 - 8) + 64));
              }
              else
              {
                uint64_t v178 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v168, v169, v178);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v175 + 56))(v168, 0, 1, v174);
              }
              swift_storeEnumTagMultiPayload();
              long long v62 = v213;
            }
            else if (v170 == 4)
            {
              id v212 = v62;
              uint64_t v171 = type metadata accessor for PuzzleStreak();
              uint64_t v172 = *(void *)(v171 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v169, 1, v171))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v168, v169, *(void *)(*(void *)(v173 - 8) + 64));
              }
              else
              {
                uint64_t v177 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32))(v168, v169, v177);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v168, 0, 1, v171);
              }
              long long v62 = v212;
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v168, v169, *(void *)(*(void *)(v101 - 8) + 64));
            }
            uint64_t v179 = *(int *)(v166 + 24);
            uint64_t v180 = &v62[v179];
            uint64_t v181 = &v63[v179];
            int v182 = swift_getEnumCaseMultiPayload();
            if (v182 == 5)
            {
              uint64_t v183 = type metadata accessor for PuzzleStreak();
              uint64_t v184 = *(void *)(v183 - 8);
              a3 = v162;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48))(v181, 1, v183))
              {
LABEL_88:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v180, v181, *(void *)(*(void *)(v185 - 8) + 64));
                goto LABEL_91;
              }
            }
            else
            {
              a3 = v162;
              if (v182 != 4)
              {
                memcpy(v180, v181, *(void *)(*(void *)(v101 - 8) + 64));
                goto LABEL_92;
              }
              uint64_t v183 = type metadata accessor for PuzzleStreak();
              uint64_t v184 = *(void *)(v183 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48))(v181, 1, v183)) {
                goto LABEL_88;
              }
            }
            uint64_t v186 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 32))(v180, v181, v186);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v184 + 56))(v180, 0, 1, v183);
            goto LABEL_91;
          case 2u:
            uint64_t v98 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v99 = *((void *)v98 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v99 + 48))(v63, 1, v98))
            {
              sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              memcpy(v62, v63, *(void *)(*(void *)(v100 - 8) + 64));
            }
            else
            {
              uint64_t v134 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v62, v63, v134);
              uint64_t v135 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              *(_OWORD *)&v62[v135[5]] = *(_OWORD *)&v63[v135[5]];
              uint64_t v136 = v135[6];
              long long v137 = &v62[v136];
              uint64_t v138 = &v63[v136];
              long long v139 = *((_OWORD *)v138 + 1);
              *(_OWORD *)long long v137 = *(_OWORD *)v138;
              *((_OWORD *)v137 + 1) = v139;
              *(void *)&v62[v135[7]] = *(void *)&v63[v135[7]];
              *(void *)&v62[v135[8]] = *(void *)&v63[v135[8]];
              *(void *)&v62[v98[5]] = *(void *)&v63[v98[5]];
              *(void *)&v62[v98[6]] = *(void *)&v63[v98[6]];
              *(_OWORD *)&v62[v98[7]] = *(_OWORD *)&v63[v98[7]];
              (*(void (**)(char *, void, uint64_t, int *))(v99 + 56))(v62, 0, 1, v98);
            }
            goto LABEL_92;
          case 3u:
            long long v217 = a3;
            uint64_t v107 = *((void *)v63 + 1);
            *(void *)long long v62 = *(void *)v63;
            *((void *)v62 + 1) = v107;
            v62[16] = v63[16];
            v108 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v109 = v108[6];
            uint64_t v110 = &v62[v109];
            uint64_t v111 = &v63[v109];
            uint64_t v112 = type metadata accessor for PuzzleStreak();
            uint64_t v113 = *(void *)(v112 - 8);
            uint64_t v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
            if (v114(v111, 1, v112))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v110, v111, *(void *)(*(void *)(v115 - 8) + 64));
            }
            else
            {
              uint64_t v140 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v110, v111, v140);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
            }
            uint64_t v141 = v108[7];
            uint64_t v142 = &v62[v141];
            uint64_t v143 = &v63[v141];
            if (v114(&v63[v141], 1, v112))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
            }
            else
            {
              uint64_t v145 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v142, v143, v145);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v142, 0, 1, v112);
            }
            a3 = v217;
            uint64_t v146 = v108[8];
            long long v147 = &v62[v146];
            uint64_t v148 = &v63[v146];
            long long v149 = *((_OWORD *)v148 + 1);
            *(_OWORD *)long long v147 = *(_OWORD *)v148;
            *((_OWORD *)v147 + 1) = v149;
            *(_OWORD *)(v147 + 25) = *(_OWORD *)(v148 + 25);
            uint64_t v150 = v108[9];
            long long v151 = &v62[v150];
            uint64_t v152 = &v63[v150];
            *(_OWORD *)(v151 + 25) = *(_OWORD *)(v152 + 25);
            long long v153 = *((_OWORD *)v152 + 1);
            *(_OWORD *)long long v151 = *(_OWORD *)v152;
            *((_OWORD *)v151 + 1) = v153;
            uint64_t v154 = v108[10];
            long long v155 = &v62[v154];
            uint64_t v156 = &v63[v154];
            long long v157 = *((_OWORD *)v156 + 1);
            *(_OWORD *)long long v155 = *(_OWORD *)v156;
            *((_OWORD *)v155 + 1) = v157;
            *(_OWORD *)(v155 + 25) = *(_OWORD *)(v156 + 25);
            goto LABEL_92;
          default:
            uint64_t v64 = type metadata accessor for PuzzleStatisticValue(0);
            int v65 = swift_getEnumCaseMultiPayload();
            if (v65 == 5)
            {
              uint64_t v66 = v62;
              uint64_t v67 = type metadata accessor for PuzzleStreak();
              uint64_t v68 = *(void *)(v67 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v63, 1, v67)) {
                goto LABEL_16;
              }
            }
            else
            {
              if (v65 != 4)
              {
                memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
                goto LABEL_92;
              }
              uint64_t v66 = v62;
              uint64_t v67 = type metadata accessor for PuzzleStreak();
              uint64_t v68 = *(void *)(v67 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v63, 1, v67))
              {
LABEL_16:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v66, v63, *(void *)(*(void *)(v69 - 8) + 64));
                goto LABEL_91;
              }
            }
            uint64_t v163 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v66, v63, v163);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v66, 0, 1, v67);
LABEL_91:
            swift_storeEnumTagMultiPayload();
LABEL_92:
            swift_storeEnumTagMultiPayload();
LABEL_93:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v187 = a3[5];
  long long v188 = &a1[v187];
  long long v189 = &a2[v187];
  uint64_t v190 = *(void *)&a2[v187 + 8];
  *(void *)long long v188 = *(void *)&a2[v187];
  *((void *)v188 + 1) = v190;
  swift_bridgeObjectRelease();
  uint64_t v191 = *((void *)v189 + 3);
  *((void *)v188 + 2) = *((void *)v189 + 2);
  *((void *)v188 + 3) = v191;
  swift_bridgeObjectRelease();
  uint64_t v192 = *((void *)v189 + 5);
  *((void *)v188 + 4) = *((void *)v189 + 4);
  *((void *)v188 + 5) = v192;
  swift_bridgeObjectRelease();
  uint64_t v193 = v189 + 48;
  if (*((void *)v188 + 7) < 0xFuLL) {
    goto LABEL_97;
  }
  unint64_t v194 = *((void *)v189 + 7);
  if (v194 < 0xF)
  {
    sub_1C01A7564((uint64_t)(v188 + 48));
LABEL_97:
    *((_OWORD *)v188 + 3) = *v193;
    goto LABEL_99;
  }
  *((void *)v188 + 6) = *(void *)v193;
  *((void *)v188 + 7) = v194;
  swift_bridgeObjectRelease();
LABEL_99:
  *((void *)v188 + 8) = *((void *)v189 + 8);
  swift_bridgeObjectRelease();
  *((void *)v188 + 9) = *((void *)v189 + 9);
  swift_bridgeObjectRelease();
  *((void *)v188 + 10) = *((void *)v189 + 10);
  swift_release();
  *((void *)v188 + 11) = *((void *)v189 + 11);
  swift_bridgeObjectRelease();
  *((void *)v188 + 12) = *((void *)v189 + 12);
  swift_bridgeObjectRelease();
  *((void *)v188 + 13) = *((void *)v189 + 13);
  swift_bridgeObjectRelease();
  *((void *)v188 + 14) = *((void *)v189 + 14);
  swift_bridgeObjectRelease();
  v188[120] = v189[120];
  uint64_t v195 = a3[6];
  unint64_t v196 = *(void *)&a1[v195];
  *(void *)&a1[v195] = *(void *)&a2[v195];
  sub_1BFF44AC4(v196);
  uint64_t v197 = a3[7];
  uint64_t v198 = &a1[v197];
  uint64_t v199 = &a2[v197];
  uint64_t v200 = sub_1C151AC1C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 40))(v198, v199, v200);
  uint64_t v201 = a3[8];
  uint64_t v202 = (uint64_t)&a1[v201];
  uint64_t v203 = &a2[v201];
  if (!*(void *)&a1[v201 + 8])
  {
LABEL_103:
    *(_OWORD *)uint64_t v202 = *(_OWORD *)v203;
    *(void *)(v202 + 16) = *((void *)v203 + 2);
    return a1;
  }
  uint64_t v204 = *((void *)v203 + 1);
  if (!v204)
  {
    sub_1C0D6034C(v202);
    goto LABEL_103;
  }
  *(void *)uint64_t v202 = *(void *)v203;
  *(void *)(v202 + 8) = v204;
  swift_bridgeObjectRelease();
  *(void *)(v202 + 16) = *((void *)v203 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatItemNodeData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0D63FA8);
}

uint64_t sub_1C0D63FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1C151AC1C();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for FormatItemNodeData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0D640EC);
}

uint64_t sub_1C0D640EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FeedItem(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1C151AC1C();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void *WeatherKitService.__allocating_init(weatherServiceProvider:stringBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151804C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = (void *)swift_allocObject();
  if (qword_1EB85E4A8 != -1) {
    swift_once();
  }
  sub_1C0D6453C();
  swift_allocObject();
  swift_retain();
  v7[4] = sub_1C15170EC();
  sub_1C151802C();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1C0D678A4(0, &qword_1EB86C248, MEMORY[0x1E4F45F40], MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  v7[2] = sub_1C1518D1C();
  v7[3] = a3;
  return v7;
}

void *WeatherKitService.init(weatherServiceProvider:stringBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1C151804C();
  MEMORY[0x1F4188790](v7 - 8);
  if (qword_1EB85E4A8 != -1) {
    swift_once();
  }
  sub_1C0D6453C();
  swift_allocObject();
  swift_retain();
  v3[4] = sub_1C15170EC();
  sub_1C151802C();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1C0D678A4(0, &qword_1EB86C248, MEMORY[0x1E4F45F40], MEMORY[0x1E4FAAFF0]);
  swift_allocObject();
  v3[2] = sub_1C1518D1C();
  v3[3] = a3;
  return v3;
}

void sub_1C0D6453C()
{
  if (!qword_1EB85AA60)
  {
    unint64_t v0 = sub_1C15170DC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85AA60);
    }
  }
}

uint64_t sub_1C0D6459C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1C0D645CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D64604@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t WeatherKitService.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t WeatherKitService.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D646AC(uint64_t *a1)
{
  return WeatherKitService.weather(for:)(a1);
}

uint64_t WeatherKitService.weather(for:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151E20C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = &v19[-v9];
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  sub_1C0D678A4(0, &qword_1EB86C270, (uint64_t (*)(uint64_t))sub_1C0D64968, MEMORY[0x1E4FAB088]);
  sub_1C151E1FC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  MEMORY[0x1C18C5D90](v7, v23);
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v13(v7, v4);
  uint64_t v20 = v2;
  uint64_t v21 = v11;
  uint64_t v22 = v12;
  swift_allocObject();
  sub_1C151911C();
  uint64_t v14 = (void *)sub_1C1518E7C();
  sub_1C151910C();
  swift_release();

  v13(v10, v4);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = v12;
  uint64_t v16 = (void *)sub_1C1518E7C();
  type metadata accessor for FeedWeather(0);
  uint64_t v17 = sub_1C151900C();
  swift_release();
  swift_release();

  return v17;
}

void sub_1C0D64968()
{
  if (!qword_1EB86C160)
  {
    MEMORY[0x1F4188790](0);
    sub_1C151681C();
    sub_1C0D64A7C();
    sub_1C0297718();
    sub_1C0D64BC8(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EB86C160);
    }
  }
}

void sub_1C0D64A7C()
{
  if (!qword_1EB8636F0)
  {
    sub_1C15167CC();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F45E68];
    sub_1C0D64B80(&qword_1EB8636C0, MEMORY[0x1E4F45E68]);
    sub_1C0D64B80(&qword_1EB8636B0, v0);
    sub_1C0D64B80(&qword_1EB8636B8, v0);
    unint64_t v1 = sub_1C15168EC();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB8636F0);
    }
  }
}

uint64_t sub_1C0D64B80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0D64BC8(uint64_t a1)
{
}

uint64_t sub_1C0D64BFC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  v28[1] = a2;
  sub_1C0D64968();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)uint64_t v31 = a3;
  *(double *)&v31[1] = a4;
  uint64_t v11 = v10[14];
  uint64_t v12 = &v9[v11];
  uint64_t v13 = v10[18];
  uint64_t v14 = (void (*)(uint64_t, uint64_t))&v9[v13];
  uint64_t v15 = v10[22];
  uint64_t v16 = (void (*)(uint64_t, uint64_t))&v9[v15];
  uint64_t v17 = a1 + v11;
  v28[0] = a1 + v13;
  unint64_t v30 = (char *)(a1 + v15);
  uint64_t v18 = sub_1C151681C();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v19 + 16);
  uint64_t v32 = v18;
  v20(v9, a1);
  sub_1C0D64A7C();
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v12, v17, v21);
  sub_1C0297718();
  uint64_t v25 = v24;
  uint64_t v26 = *(void *)(v24 - 8);
  (*(void (**)(void (*)(uint64_t, uint64_t), void, uint64_t))(v26 + 16))(v14, v28[0], v24);
  sub_1C0D676C0((uint64_t)v30, (uint64_t)v16, (uint64_t (*)(void))sub_1C0D64BC8);
  unint64_t v30 = v12;
  uint64_t v29 = sub_1C0D64E8C(v31, (uint64_t)v9, v12, v14, v16);
  sub_1C0D6799C((uint64_t)v16, (uint64_t (*)(void))sub_1C0D64BC8);
  (*(void (**)(void, uint64_t))(v26 + 8))(v14, v25);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v30, v22);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v32);
  return v29;
}

uint64_t sub_1C0D64E8C(uint64_t *a1, uint64_t a2, char *a3, void (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v211 = a5;
  long long v209 = a4;
  sub_1C0D678A4(0, &qword_1EB8636A8, MEMORY[0x1E4F45E40], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v182 = (uint64_t)&v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v190 = (uint64_t)&v170 - v11;
  sub_1C0D678A4(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
  uint64_t v179 = v12;
  uint64_t v178 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v177 = (char *)&v170 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v192 = (char *)&v170 - v15;
  MEMORY[0x1F4188790](v16);
  unint64_t v194 = (char *)&v170 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v197 = (char *)&v170 - v19;
  uint64_t v176 = sub_1C151E2BC();
  uint64_t v175 = *(void *)(v176 - 8);
  MEMORY[0x1F4188790](v176);
  uint64_t v195 = (char *)&v170 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_1C15168DC();
  uint64_t v204 = *(char **)(v201 - 8);
  MEMORY[0x1F4188790](v201);
  long long v188 = (char *)&v170 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v203 = (char *)&v170 - v23;
  uint64_t v174 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1F4188790](v174);
  uint64_t v180 = (uint64_t)&v170 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v181 = (uint64_t *)((char *)&v170 - v26);
  sub_1C0D64968();
  uint64_t v28 = v27;
  MEMORY[0x1F4188790](v27);
  uint64_t v193 = (char *)&v170 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  unint64_t v196 = (char *)&v170 - v31;
  MEMORY[0x1F4188790](v32);
  long long v189 = (char *)&v170 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v187 = (char *)&v170 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v202 = (uint64_t)&v170 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v206 = (char *)&v170 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v170 - v41;
  uint64_t v43 = *a1;
  uint64_t v44 = a1[1];
  long long v223 = (char *)&v170 + v45[12] - v41;
  uint64_t v46 = v223;
  uint64_t v47 = (char *)&v170 + v45[16] - v41;
  uint64_t v218 = (uint64_t)&v170 + v45[20] - v41;
  uint64_t v48 = v218;
  uint64_t v225 = (uint64_t)&v170 - v41;
  uint64_t v205 = sub_1C151681C();
  uint64_t v220 = *(void *)(v205 - 8);
  long long v217 = *(void (**)(void))(v220 + 16);
  uint64_t v222 = v220 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v217)(v42, a2, v205);
  sub_1C0D64A7C();
  uint64_t v219 = v49;
  uint64_t v207 = *(void *)(v49 - 8);
  uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))(v207 + 16);
  uint64_t v221 = v207 + 16;
  id v216 = v50;
  v50((uint64_t)v46, a3, v49);
  sub_1C0297718();
  uint64_t v52 = v51;
  uint64_t v213 = *(void *)(v51 - 8);
  uint64_t v53 = *(void (**)(uint64_t, char *, uint64_t))(v213 + 16);
  uint64_t v215 = v213 + 16;
  long long v224 = v47;
  uint64_t v210 = v51;
  v53((uint64_t)v47, (char *)v209, v51);
  char v214 = v53;
  long long v208 = sub_1C0D64BC8;
  sub_1C0D676C0((uint64_t)v211, v48, (uint64_t (*)(void))sub_1C0D64BC8);
  id v212 = v28;
  uint64_t v186 = &v206[v28[12]];
  uint64_t v54 = (uint64_t)v186;
  uint64_t v185 = &v206[v28[16]];
  id v55 = v185;
  uint64_t v184 = &v206[v28[20]];
  uint64_t v56 = (uint64_t)v184;
  uint64_t v57 = v217;
  v217();
  uint64_t v58 = v219;
  v216(v54, v223, v219);
  v53((uint64_t)v55, v47, v52);
  uint64_t v59 = v208;
  sub_1C0D676C0(v218, v56, (uint64_t (*)(void))v208);
  long long v60 = v206;
  sub_1C151680C();
  uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v220 + 8);
  v220 += 8;
  uint64_t v211 = v61;
  long long v62 = v60;
  uint64_t v63 = v205;
  v61((uint64_t)v62, v205);
  uint64_t v183 = (char *)(v202 + v212[12]);
  uint64_t v64 = v183;
  uint64_t v65 = v202 + v212[16];
  uint64_t v66 = v202 + v212[20];
  v57();
  v216((uint64_t)v64, v223, v58);
  uint64_t v67 = v65;
  uint64_t v68 = v210;
  v214(v65, v224, v210);
  uint64_t v69 = v66;
  sub_1C0D676C0(v218, v66, (uint64_t (*)(void))v59);
  uint64_t v70 = v202;
  sub_1C15167DC();
  uint64_t v71 = v63;
  v211(v70, v63);
  uint64_t v72 = v203;
  uint64_t v171 = sub_1C15168AC();
  uint64_t v170 = v73;
  uint64_t v74 = (char *)*((void *)v204 + 1);
  v204 += 8;
  uint64_t v199 = v74;
  ((void (*)(char *, uint64_t))v74)(v72, v201);
  uint64_t v198 = sub_1C0D64BC8;
  sub_1C0D6799C(v69, (uint64_t (*)(void))sub_1C0D64BC8);
  uint64_t v75 = v213 + 8;
  uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v213 + 8);
  uint64_t v77 = v67;
  uint64_t v78 = v68;
  v76(v77, v68);
  uint64_t v79 = (void (*)(char *, uint64_t))v76;
  long long v209 = v76;
  uint64_t v213 = v75;
  uint64_t v80 = v207 + 8;
  uint64_t v81 = *(void (**)(char *, uint64_t))(v207 + 8);
  uint64_t v82 = v219;
  v81(v183, v219);
  uint64_t v200 = v81;
  uint64_t v207 = v80;
  sub_1C0D6799C((uint64_t)v184, (uint64_t (*)(void))sub_1C0D64BC8);
  v79(v185, v78);
  v81(v186, v82);
  uint64_t v83 = v187;
  uint64_t v84 = &v187[v212[12]];
  uint64_t v85 = &v187[v212[16]];
  uint64_t v86 = (uint64_t)&v187[v212[20]];
  uint64_t v87 = v217;
  ((void (*)(char *, uint64_t, uint64_t))v217)(v187, v225, v71);
  uint64_t v183 = v84;
  v216((uint64_t)v84, v223, v82);
  uint64_t v173 = v85;
  uint64_t v88 = (void (*)(char *, char *, uint64_t))v214;
  v214((uint64_t)v85, v224, v78);
  uint64_t v89 = v218;
  uint64_t v172 = v86;
  sub_1C0D676C0(v218, v86, (uint64_t (*)(void))v208);
  uint64_t v90 = v188;
  sub_1C151680C();
  v211((uint64_t)v83, v71);
  sub_1C0224FF4(&v227);
  ((void (*)(char *, uint64_t))v199)(v90, v201);
  int v226 = v227;
  long long v91 = v206;
  long long v188 = &v206[v212[12]];
  uint64_t v92 = v188;
  uint64_t v187 = &v206[v212[16]];
  uint64_t v93 = v187;
  uint64_t v186 = &v206[v212[20]];
  uint64_t v94 = (uint64_t)v186;
  ((void (*)(char *, uint64_t, uint64_t))v87)(v206, v225, v71);
  uint64_t v95 = (void (*)(char *, char *, uint64_t))v216;
  v216((uint64_t)v92, v223, v219);
  v88(v93, v224, v210);
  uint64_t v96 = v94;
  uint64_t v97 = v208;
  sub_1C0D676C0(v89, v96, (uint64_t (*)(void))v208);
  sub_1C151680C();
  uint64_t v98 = v71;
  uint64_t v99 = v211;
  v211((uint64_t)v91, v71);
  uint64_t v185 = (char *)(v202 + v212[12]);
  uint64_t v100 = v185;
  uint64_t v184 = (char *)(v202 + v212[16]);
  uint64_t v101 = v202 + v212[20];
  v217();
  v95(v100, v223, v219);
  uint64_t v102 = v212;
  uint64_t v103 = (uint64_t)v184;
  uint64_t v104 = v210;
  v214((uint64_t)v184, v224, v210);
  uint64_t v105 = v101;
  sub_1C0D676C0(v218, v101, (uint64_t (*)(void))v97);
  uint64_t v106 = v202;
  sub_1C15167DC();
  v99(v106, v98);
  uint64_t v107 = v203;
  sub_1C151689C();
  ((void (*)(char *, uint64_t))v199)(v107, v201);
  v108 = v198;
  sub_1C0D6799C(v105, (uint64_t (*)(void))v198);
  uint64_t v109 = (void (*)(char *, uint64_t))v209;
  v209(v103, v104);
  uint64_t v110 = v219;
  uint64_t v111 = v200;
  v200(v185, v219);
  sub_1C0D6799C((uint64_t)v186, (uint64_t (*)(void))v108);
  v109(v187, v104);
  uint64_t v112 = v110;
  v111(v188, v110);
  uint64_t v113 = (uint64_t)v206;
  uint64_t v114 = (uint64_t)&v206[v102[12]];
  uint64_t v115 = (uint64_t)&v206[v102[16]];
  uint64_t v116 = (uint64_t)&v206[v102[20]];
  ((void (*)(char *, uint64_t, uint64_t))v217)(v206, v225, v98);
  uint64_t v117 = v112;
  v216(v114, v223, v112);
  v214(v115, v224, v104);
  sub_1C0D676C0(v218, v116, (uint64_t (*)(void))v208);
  uint64_t v191 = sub_1C0D67344(v113, v114, v115, v116);
  long long v188 = v118;
  sub_1C0D6799C(v116, (uint64_t (*)(void))v198);
  v209(v115, v104);
  v200((char *)v114, v112);
  uint64_t v119 = v205;
  v211(v113, v205);
  LODWORD(v198) = sub_1C15167DC();
  uint64_t v120 = &v189[v102[12]];
  uint64_t v121 = &v189[v102[16]];
  uint64_t v122 = (uint64_t)&v189[v102[20]];
  uint64_t v123 = v189;
  uint64_t v124 = v119;
  v217();
  uint64_t v204 = v120;
  uint64_t v125 = v120;
  uint64_t v126 = v223;
  uint64_t v127 = (void (*)(char *, char *, uint64_t))v216;
  v216((uint64_t)v125, v223, v117);
  uint64_t v203 = v121;
  v214((uint64_t)v121, v224, v104);
  uint64_t v128 = v218;
  uint64_t v202 = v122;
  uint64_t v129 = v122;
  uint64_t v130 = v208;
  sub_1C0D676C0(v218, v129, (uint64_t (*)(void))v208);
  sub_1C15167EC();
  v211((uint64_t)v123, v124);
  uint64_t v131 = &v196[v102[12]];
  uint64_t v132 = &v196[v102[16]];
  uint64_t v133 = &v196[v102[20]];
  v217();
  uint64_t v201 = (uint64_t)v131;
  v127(v131, v126, v219);
  uint64_t v134 = v210;
  v214((uint64_t)v132, v224, v210);
  uint64_t v199 = v133;
  sub_1C0D676C0(v128, (uint64_t)v133, (uint64_t (*)(void))v130);
  uint64_t v135 = v190;
  sub_1C0295938(v190);
  v209((uint64_t)v132, v134);
  uint64_t v136 = sub_1C15167BC();
  uint64_t v137 = *(void *)(v136 - 8);
  uint64_t v138 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
  uint64_t result = v138(v135, 1, v136);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C15167AC();
    uint64_t v140 = *(void (**)(uint64_t, uint64_t))(v137 + 8);
    v140(v135, v136);
    uint64_t v141 = (void (*)(uint64_t))&v193[v212[12]];
    uint64_t v142 = &v193[v212[16]];
    uint64_t v143 = (uint64_t)&v193[v212[20]];
    v217();
    long long v208 = v141;
    v216((uint64_t)v141, v223, v219);
    uint64_t v144 = v210;
    v214((uint64_t)v142, v224, v210);
    uint64_t v190 = v143;
    sub_1C0D676C0(v218, v143, (uint64_t (*)(void))sub_1C0D64BC8);
    uint64_t v145 = v182;
    sub_1C0295938(v182);
    v209((uint64_t)v142, v144);
    uint64_t result = v138(v145, 1, v136);
    if (result != 1)
    {
      sub_1C151679C();
      v140(v145, v136);
      uint64_t v146 = v206;
      long long v189 = &v206[v212[12]];
      long long v147 = v189;
      uint64_t v187 = &v206[v212[16]];
      uint64_t v148 = v187;
      uint64_t v149 = (uint64_t)&v206[v212[20]];
      uint64_t v150 = v205;
      ((void (*)(char *, uint64_t, uint64_t))v217)(v206, v225, v205);
      v216((uint64_t)v147, v223, v219);
      v214((uint64_t)v148, v224, v210);
      sub_1C0D676C0(v218, v149, (uint64_t (*)(void))sub_1C0D64BC8);
      long long v151 = v177;
      sub_1C15167FC();
      uint64_t v152 = v150;
      v211((uint64_t)v146, v150);
      uint64_t v153 = (uint64_t)v181;
      *uint64_t v181 = v43;
      *(void *)(v153 + 8) = v44;
      uint64_t v154 = v170;
      *(void *)(v153 + 16) = v171;
      *(void *)(v153 + 24) = v154;
      *(unsigned char *)(v153 + 32) = v226;
      long long v155 = (int *)v174;
      (*(void (**)(uint64_t, char *, uint64_t))(v175 + 32))(v153 + *(int *)(v174 + 28), v195, v176);
      uint64_t v156 = (uint64_t *)(v153 + v155[10]);
      long long v157 = v188;
      uint64_t *v156 = v191;
      v156[1] = (uint64_t)v157;
      *(unsigned char *)(v153 + v155[8]) = (v198 & 1) == 0;
      uint64_t v158 = v153 + v155[9];
      uint64_t v159 = *(void (**)(uint64_t, char *, uint64_t))(v178 + 32);
      uint64_t v160 = v179;
      v159(v158, v197, v179);
      uint64_t v161 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v159(v158 + v161[5], v194, v160);
      v159(v158 + v161[6], v192, v160);
      v159(v158 + v161[7], v151, v160);
      sub_1C0D6799C(v149, (uint64_t (*)(void))sub_1C0D64BC8);
      uint64_t v162 = v210;
      v209((uint64_t)v187, v210);
      uint64_t v163 = v219;
      uint64_t v164 = (void (*)(void (*)(uint64_t), uint64_t))v200;
      v200(v189, v219);
      sub_1C0D6799C(v190, (uint64_t (*)(void))sub_1C0D64BC8);
      v164(v208, v163);
      uint64_t v165 = v152;
      uint64_t v166 = v152;
      uint64_t v167 = (void (*)(char *, uint64_t))v211;
      v211((uint64_t)v193, v166);
      sub_1C0D6799C((uint64_t)v199, (uint64_t (*)(void))sub_1C0D64BC8);
      v164((void (*)(uint64_t))v201, v163);
      v167(v196, v165);
      sub_1C0D6799C(v202, (uint64_t (*)(void))sub_1C0D64BC8);
      int v168 = (void (*)(char *, uint64_t))v209;
      v209((uint64_t)v203, v162);
      v164((void (*)(uint64_t))v204, v163);
      sub_1C0D6799C(v172, (uint64_t (*)(void))sub_1C0D64BC8);
      v168(v173, v162);
      v164((void (*)(uint64_t))v183, v163);
      sub_1C0D676C0(v153, v180, type metadata accessor for FeedWeather);
      sub_1C0D678A4(0, &qword_1EB85E878, type metadata accessor for FeedWeather, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v169 = sub_1C151908C();
      sub_1C0D6799C(v153, type metadata accessor for FeedWeather);
      sub_1C0D6799C(v225, (uint64_t (*)(void))sub_1C0D64968);
      return v169;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0D664B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  sub_1C0D678A4(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v21 - v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  uint64_t v18 = sub_1C151EE9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  *(void *)(v19 + 32) = a5;
  *(double *)(v19 + 40) = a6;
  *(double *)(v19 + 48) = a7;
  *(void *)(v19 + 56) = sub_1C0D6775C;
  *(void *)(v19 + 64) = v17;
  *(void *)(v19 + 72) = a3;
  *(void *)(v19 + 80) = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C0C833AC((uint64_t)v16, (uint64_t)&unk_1EA1A6A40, v19);
  return swift_release();
}

uint64_t sub_1C0D66658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0D664B8(a1, a2, a3, a4, *(void *)(v4 + 16), *(double *)(v4 + 24), *(double *)(v4 + 32));
}

uint64_t sub_1C0D66664()
{
  return swift_deallocObject();
}

uint64_t sub_1C0D66674(uint64_t a1, uint64_t a2)
{
  return sub_1C0D64BFC(a1, a2, *(double *)(v2 + 16), *(double *)(v2 + 24));
}

uint64_t method lookup function for WeatherKitService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WeatherKitService);
}

uint64_t dispatch thunk of WeatherKitService.__allocating_init(weatherServiceProvider:stringBuilder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C0D666BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *))
{
  sub_1C0D64968();
  uint64_t v11 = (int *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151681C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a1, v14);
  uint64_t v15 = &v13[v11[14]];
  sub_1C0D64A7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a2, v16);
  uint64_t v17 = &v13[v11[18]];
  sub_1C0297718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a3, v18);
  sub_1C0D676C0(a4, (uint64_t)&v13[v11[22]], (uint64_t (*)(void))sub_1C0D64BC8);
  a5(v13);
  return sub_1C0D6799C((uint64_t)v13, (uint64_t (*)(void))sub_1C0D64968);
}

uint64_t sub_1C0D66864(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 64) = a9;
  *(void *)(v10 + 72) = a10;
  *(void *)(v10 + 48) = a7;
  *(void *)(v10 + 56) = a8;
  *(double *)(v10 + 32) = a1;
  *(double *)(v10 + 40) = a2;
  *(void *)(v10 + 24) = a6;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F45F18];
  sub_1C0D678A4(0, &qword_1EB86C170, (uint64_t (*)(uint64_t))sub_1C0D64BC8, MEMORY[0x1E4F45F18]);
  *(void *)(v10 + 80) = v12;
  *(void *)(v10 + 88) = *(void *)(v12 - 8);
  *(void *)(v10 + 96) = swift_task_alloc();
  sub_1C0D678A4(0, &qword_1EB8636D0, (uint64_t (*)(uint64_t))sub_1C0297718, v11);
  *(void *)(v10 + 104) = v13;
  *(void *)(v10 + 112) = *(void *)(v13 - 8);
  *(void *)(v10 + 120) = swift_task_alloc();
  sub_1C0D678A4(0, &qword_1EB8636D8, (uint64_t (*)(uint64_t))sub_1C0D64A7C, v11);
  *(void *)(v10 + 128) = v14;
  *(void *)(v10 + 136) = *(void *)(v14 - 8);
  *(void *)(v10 + 144) = swift_task_alloc();
  sub_1C0D678A4(0, &qword_1EB8636C8, MEMORY[0x1E4F45EB0], v11);
  *(void *)(v10 + 152) = v15;
  *(void *)(v10 + 160) = *(void *)(v15 - 8);
  *(void *)(v10 + 168) = swift_task_alloc();
  sub_1C0D67908();
  *(void *)(v10 + 176) = v16;
  *(void *)(v10 + 184) = swift_task_alloc();
  *(void *)(v10 + 192) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0D66B18, 0, 0);
}

uint64_t sub_1C0D66B18()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(int **)(v0 + 176);
  double v4 = *(double *)(v0 + 32);
  double v3 = *(double *)(v0 + 40);
  uint64_t v5 = v2[12];
  *(_DWORD *)(v0 + 256) = v5;
  uint64_t v20 = v1 + v5;
  uint64_t v6 = v2[16];
  *(_DWORD *)(v0 + 260) = v6;
  uint64_t v7 = v1 + v6;
  uint64_t v8 = v2[20];
  *(_DWORD *)(v0 + 264) = v8;
  uint64_t v9 = v1 + v8;
  sub_1C1518CEC();
  *(void *)(v0 + 200) = *(void *)(v0 + 16);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, v4, v3);
  *(void *)(v0 + 208) = v10;
  *(void *)(v0 + 216) = sub_1C151681C();
  sub_1C151685C();
  sub_1C0D64A7C();
  *(void *)(v0 + 224) = v11;
  sub_1C151683C();
  sub_1C0297718();
  *(void *)(v0 + 232) = v12;
  sub_1C151682C();
  sub_1C0D64BC8(0);
  sub_1C151684C();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1C0D66CE4;
  uint64_t v14 = *(void *)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 168);
  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v17 = *(void *)(v0 + 120);
  return MEMORY[0x1F4103970](v14, v20, v7, v9, v10, v15, v16, v17);
}

uint64_t sub_1C0D66CE4()
{
  uint64_t v12 = *(void **)(*(void *)v1 + 208);
  uint64_t v16 = *(void *)(*(void *)v1 + 168);
  uint64_t v2 = *(void *)(*(void *)v1 + 160);
  uint64_t v15 = *(void *)(*(void *)v1 + 152);
  uint64_t v14 = *(void *)(*(void *)v1 + 144);
  uint64_t v3 = *(void *)(*(void *)v1 + 136);
  uint64_t v13 = *(void *)(*(void *)v1 + 128);
  uint64_t v11 = *(void *)(*(void *)v1 + 120);
  uint64_t v4 = *(void *)(*(void *)v1 + 112);
  uint64_t v5 = *(void *)(*(void *)v1 + 104);
  uint64_t v6 = *(void *)(*(void *)v1 + 96);
  uint64_t v7 = *(void *)(*(void *)v1 + 88);
  uint64_t v8 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v13);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v16, v15);
  if (v0) {
    uint64_t v9 = sub_1C0D67280;
  }
  else {
    uint64_t v9 = sub_1C0D66FB8;
  }
  return MEMORY[0x1F4188298](v9, 0, 0);
}

uint64_t sub_1C0D66FB8()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v5 = *(int **)(v0 + 176);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 48);
  uint64_t v19 = v4 + *(int *)(v0 + 264);
  uint64_t v18 = v4 + *(int *)(v0 + 260);
  uint64_t v6 = v4 + *(int *)(v0 + 256);
  uint64_t v7 = v3 + v5[12];
  uint64_t v8 = v3 + v5[16];
  uint64_t v9 = v3 + v5[20];
  uint64_t v22 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v22 - 8);
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v3, v4);
  uint64_t v11 = v1;
  uint64_t v20 = v1;
  uint64_t v12 = *(void *)(v1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v7, v6, v11);
  uint64_t v13 = v2;
  uint64_t v17 = v2;
  uint64_t v14 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v8, v18, v13);
  sub_1C0D676C0(v19, v9, (uint64_t (*)(void))sub_1C0D64BC8);
  v21(v3, v7, v8, v9);
  sub_1C0D6799C(v4, (uint64_t (*)(void))sub_1C0D67908);
  sub_1C0D6799C(v9, (uint64_t (*)(void))sub_1C0D64BC8);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v8, v17);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v7, v20);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1C0D67280()
{
  uint64_t v1 = *(void **)(v0 + 248);
  (*(void (**)(void *))(v0 + 64))(v1);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0D67344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C15166BC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D67728(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D64968();
  uint64_t v16 = (int *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C151681C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, a1, v19);
  uint64_t v20 = &v18[v16[14]];
  sub_1C0D64A7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, a2, v21);
  uint64_t v22 = &v18[v16[18]];
  sub_1C0297718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, a3, v23);
  sub_1C0D676C0(a4, (uint64_t)&v18[v16[22]], (uint64_t (*)(void))sub_1C0D64BC8);
  sub_1C15166AC();
  sub_1C151E2CC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v24 = sub_1C151E28C();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v14, 1, v24) == 1)
  {
    sub_1C0D6799C((uint64_t)v18, (uint64_t (*)(void))sub_1C0D64968);
    sub_1C0D6799C((uint64_t)v14, (uint64_t (*)(void))sub_1C0D67728);
    return 0;
  }
  else
  {
    uint64_t v26 = sub_1C151E27C();
    sub_1C0D6799C((uint64_t)v18, (uint64_t (*)(void))sub_1C0D64968);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v24);
  }
  return v26;
}

uint64_t sub_1C0D676C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C0D67728(uint64_t a1)
{
}

uint64_t sub_1C0D6775C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0D666BC(a1, a2, a3, a4, *(void (**)(char *))(v4 + 16));
}

uint64_t sub_1C0D67764()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D677B4(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  double v7 = v1[5];
  double v8 = v1[6];
  uint64_t v9 = *((void *)v1 + 7);
  uint64_t v10 = *((void *)v1 + 8);
  uint64_t v12 = *((void *)v1 + 9);
  uint64_t v11 = *((void *)v1 + 10);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1BFC542F4;
  return sub_1C0D66864(v7, v8, a1, v4, v5, v6, v9, v10, v12, v11);
}

void sub_1C0D678A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0D67908()
{
  if (!qword_1EB86C168)
  {
    sub_1C151681C();
    sub_1C0D64A7C();
    sub_1C0297718();
    sub_1C0D64BC8(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EB86C168);
    }
  }
}

uint64_t sub_1C0D6799C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FormatSponsoredBannerNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatSponsoredBannerNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 56);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatSponsoredBannerNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSponsoredBannerNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t FormatSponsoredBannerNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSponsoredBannerNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBannerNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatSponsoredBannerNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatSponsoredBannerNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatSponsoredBannerNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBannerNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C0D67C9C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 56);
  *(void *)(v3 + 56) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatSponsoredBannerNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 56);
  *(void *)(v1 + 56) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatSponsoredBannerNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSponsoredBannerNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 64) = a1;
  return result;
}

uint64_t (*FormatSponsoredBannerNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

void FormatSponsoredBannerNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = *(void *)(v1 + 72);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatSponsoredBannerNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBannerNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSponsoredBannerNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatSponsoredBannerNode.style.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return swift_release();
}

uint64_t (*FormatSponsoredBannerNode.style.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSponsoredBannerNode.__allocating_init(identifier:size:resize:adjustments:visibility:isUserInteractionEnabled:accessibilityRole:selectors:style:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t *a6, char a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = swift_allocObject();
  FormatSponsoredBannerNode.init(identifier:size:resize:adjustments:visibility:isUserInteractionEnabled:accessibilityRole:selectors:style:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

uint64_t FormatSponsoredBannerNode.init(identifier:size:resize:adjustments:visibility:isUserInteractionEnabled:accessibilityRole:selectors:style:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t *a6, char a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = *a3;
  uint64_t v15 = *a4;
  uint64_t v16 = *a6;
  uint64_t v17 = *a8;
  char v18 = *((unsigned char *)a8 + 8);
  *(void *)(v10 + 96) = 0;
  swift_beginAccess();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = v14;
  *(void *)(v10 + 40) = v15;
  swift_beginAccess();
  *(void *)(v10 + 48) = a5;
  swift_beginAccess();
  *(void *)(v10 + 56) = v16;
  swift_beginAccess();
  *(unsigned char *)(v10 + 64) = a7;
  *(void *)(v10 + 72) = v17;
  *(unsigned char *)(v10 + 80) = v18;
  swift_beginAccess();
  *(void *)(v10 + 88) = a9;
  swift_beginAccess();
  *(void *)(v10 + 96) = a10;
  swift_release();
  return v10;
}

uint64_t FormatSponsoredBannerNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFF0056C(*(void *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FormatSponsoredBannerNode.__deallocating_deinit()
{
  FormatSponsoredBannerNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D68210(uint64_t a1)
{
  uint64_t result = sub_1C0D683A4(&qword_1EA1A6A48);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatSponsoredBannerNode()
{
  return self;
}

uint64_t sub_1C0D68278(void *a1)
{
  a1[1] = sub_1C0D683A4(&qword_1EB86D030);
  a1[2] = sub_1C0D683A4(&qword_1EA1A0AB8);
  uint64_t result = sub_1C0D683A4(&qword_1EA1A6A50);
  a1[3] = result;
  return result;
}

void *sub_1C0D68304@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C08B640C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0D68330(void *a1)
{
  return FormatSponsoredBannerNode.encode(to:)(a1);
}

uint64_t sub_1C0D68354(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed25FormatSponsoredBannerNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C0D68360(uint64_t a1)
{
  uint64_t result = sub_1C0D683A4(&qword_1EA1A6A58);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D683A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatSponsoredBannerNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0D683E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t *a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  swift_beginAccess();
  uint64_t v19 = *(void *)(a5 + 16);
  uint64_t v20 = *(void *)(a5 + 24);
  uint64_t v21 = *(void *)(a5 + 40);
  if (v21)
  {
    uint64_t v22 = *(void *)(v21 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v23 = swift_allocObject();
  uint64_t v36 = v22;
  swift_beginAccess();
  unint64_t v34 = *(void *)(a5 + 56);
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v34);
  sub_1BFE6EF70(a6, &v35);
  sub_1BFF0056C(v34);
  swift_beginAccess();
  char v24 = *(unsigned char *)(a5 + 64);
  sub_1C1517EFC();
  char v25 = *(unsigned char *)(a5 + 80);
  uint64_t v32 = *(void *)(a5 + 72);
  char v33 = v25;
  swift_beginAccess();
  uint64_t v26 = *(void *)(a5 + 96);
  type metadata accessor for FormatSponsoredBannerLayoutAttributes();
  swift_allocObject();
  *(void *)(v23 + 16) = FormatSponsoredBannerLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:style:)(a1, a2, a3, a4, v19, v20, &v36, 999, a8, a9, a10, a11, &v35, v24, v31, &v32, v26);
  *a7 = v23 | 0xA000000000000000;
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0D685E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0D68630@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C0D68680@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 56);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C0D686D0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 64);
  return result;
}

uint64_t sub_1C0D68718(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 64) = v2;
  return result;
}

uint64_t sub_1C0D6875C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSponsoredBannerNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSponsoredBannerNode);
}

uint64_t dispatch thunk of FormatSponsoredBannerNode.__allocating_init(identifier:size:resize:adjustments:visibility:isUserInteractionEnabled:accessibilityRole:selectors:style:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1C0D687E0()
{
  swift_release();
  return swift_deallocObject();
}

Swift::Void __swiftcall NSUserDefaults.set(location:forKey:)(CLLocation_optional location, Swift::String forKey)
{
  if (location.value.super.isa)
  {
    Class isa = location.value.super.isa;
    sub_1C0D689A0();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1527210;
    *(void *)(inited + 32) = 0x656475746974616CLL;
    *(void *)(inited + 40) = 0xEB0000000079654BLL;
    uint64_t v5 = isa;
    [(objc_class *)v5 coordinate];
    *(void *)(inited + 48) = v6;
    strcpy((char *)(inited + 56), "longitudeKey");
    *(unsigned char *)(inited + 69) = 0;
    *(_WORD *)(inited + 70) = -5120;
    [(objc_class *)v5 coordinate];
    *(void *)(inited + 72) = v7;
    sub_1C018F4DC(inited);
    unint64_t v8 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_1C151E5EC();
    objc_msgSend(v2, sel_setObject_forKey_, v8, v9);
  }
  else
  {
    id v10 = (id)sub_1C151E5EC();
    objc_msgSend(v2, sel_setURL_forKey_, 0, v10);
  }
}

void sub_1C0D689A0()
{
  if (!qword_1EB86BBF0)
  {
    sub_1C0D48180();
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86BBF0);
    }
  }
}

id sub_1C0D689F8()
{
  ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutList], sel_removeObserver_, v0);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C0D68B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char *a5)
{
  uint64_t v6 = *a4;
  uint64_t v7 = a4[1];
  char v8 = *a5;
  uint64_t v9 = (void *)(*v5 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutManager);
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(v6, v7, v10, v11);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24))(v6, v7, v10, v11);
  }
}

uint64_t sub_1C0D68C20@<X0>(uint64_t *a1@<X3>, BOOL *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = (void *)(*v2 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutManager);
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(v4, v5, v7, v8);
  *a2 = (result & 1) == 0;
  return result;
}

uint64_t sub_1C0D68CA4()
{
  return sub_1C0D68DB8() & 1;
}

uint64_t sub_1C0D68DB8()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_mainBundle);
  id v3 = objc_msgSend(v2, sel_bundleIdentifier);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1C151E62C();
  uint64_t v6 = v5;

  if (v4 == 0x6C7070612E6D6F63 && v6 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    id v9 = 0;
    if ((v8 & 1) == 0) {
      return (uint64_t)v9;
    }
  }
  uint64_t v10 = (void *)(v1 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_featureAvailability);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_featureAvailability + 24);
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_featureAvailability + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_featureAvailability), v11);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 192))(v11, v12) & 1) == 0) {
    return 1;
  }
  uint64_t v13 = v10[3];
  uint64_t v14 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v13);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 192))(v13, v14) & 1) == 0) {
    return 0;
  }
  id v15 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_bundleSubscriptionManager), sel_cachedSubscription);
  id v9 = objc_msgSend(v15, sel_isSubscribed);

  return (uint64_t)v9;
}

uint64_t sub_1C0D68F90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRGBAColor.init(from:)(a1, a2);
}

uint64_t sub_1C0D68FA8(void *a1)
{
  return FormatRGBAColor.encode(to:)(a1);
}

uint64_t _s8NewsFeed15FormatRGBAColorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  char v4 = *(unsigned char *)(a2 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_1C0D69014(uint64_t a1)
{
  unint64_t result = sub_1C0D6903C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D6903C()
{
  unint64_t result = qword_1EA1A6AF0;
  if (!qword_1EA1A6AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6AF0);
  }
  return result;
}

unint64_t sub_1C0D69090(void *a1)
{
  a1[1] = sub_1C087B1D0();
  a1[2] = sub_1C08FE334();
  unint64_t result = sub_1C0D690C8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0D690C8()
{
  unint64_t result = qword_1EA1A6AF8;
  if (!qword_1EA1A6AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6AF8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatRGBAColor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FormatRGBAColor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatRGBAColor()
{
  return &type metadata for FormatRGBAColor;
}

uint64_t FormatAnimation.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFC3E5C0(*(void *)(v0 + 56));
  sub_1BFC3E5C0(*(void *)(v0 + 72));
  return v0;
}

uint64_t FormatAnimation.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFC3E5C0(*(void *)(v0 + 56));
  sub_1BFC3E5C0(*(void *)(v0 + 72));
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatAnimation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatAnimation);
}

uint64_t CategoryViewLayoutOptions.layoutOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151772C();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CategoryViewLayoutOptions.itemWidth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for CategoryViewLayoutOptions();
  char v4 = (uint64_t *)(v1 + *(int *)(result + 20));
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t type metadata accessor for CategoryViewLayoutOptions()
{
  uint64_t result = qword_1EB85E6D0;
  if (!qword_1EB85E6D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double CategoryViewLayoutOptions.origin.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 24));
}

double CategoryViewLayoutOptions.contentViewEdgeInsets.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 28));
}

double CategoryViewLayoutOptions.verticalTextPadding.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 32));
}

double CategoryViewLayoutOptions.leadingIconPadding.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 36));
}

double CategoryViewLayoutOptions.leadingTextPadding.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 40));
}

double CategoryViewLayoutOptions.trailingTextPadding.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 44));
}

double CategoryViewLayoutOptions.verticalIconPadding.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 48));
}

double CategoryViewLayoutOptions.paddingBetweenCells.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 52));
}

uint64_t CategoryViewLayoutOptions.init(alwaysInsetIcon:origin:itemWidth:layoutOptions:contentViewEdgeInsets:)@<X0>(char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>)
{
  uint64_t v19 = *a2;
  int v20 = *((unsigned __int8 *)a2 + 8);
  uint64_t v21 = (int *)type metadata accessor for CategoryViewLayoutOptions();
  uint64_t v22 = v21;
  *(void *)(a4 + v21[8]) = 0x4030000000000000;
  *(void *)(a4 + v21[10]) = 0x4018000000000000;
  *(void *)(a4 + v21[11]) = 0x402E000000000000;
  *(void *)(a4 + v21[12]) = 0x4024000000000000;
  *(void *)(a4 + v21[13]) = 0x4024000000000000;
  double v23 = 0.0;
  if (a1) {
    double v23 = 3.0;
  }
  *(double *)(a4 + v21[9]) = v23;
  char v24 = (double *)(a4 + v21[6]);
  *char v24 = a5;
  v24[1] = a6;
  if (v20 == 255) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = v19;
  }
  if (v20 == 255) {
    char v26 = 2;
  }
  else {
    char v26 = v20;
  }
  uint64_t v27 = a4 + v21[5];
  *(void *)uint64_t v27 = v25;
  *(unsigned char *)(v27 + 8) = v26;
  uint64_t v28 = sub_1C151772C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(a4, a3, v28);
  uint64_t v30 = (double *)(a4 + v22[7]);
  *uint64_t v30 = a7;
  v30[1] = a8;
  v30[2] = a9;
  v30[3] = a10;
  return result;
}

double CategoryViewLayoutOptions.init(from:alwaysInsetIcon:itemWidth:contentViewEdgeInsets:)@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  double v47 = a7;
  double v48 = a8;
  double v45 = a5;
  double v46 = a6;
  int v44 = a2;
  uint64_t v11 = sub_1C151794C();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v12 = sub_1C151772C();
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v43 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a3;
  int v16 = *((unsigned __int8 *)a3 + 8);
  sub_1C151B5CC();
  uint64_t v40 = v18;
  uint64_t v41 = v17;
  sub_1C151B61C();
  v39[8] = v20;
  v39[9] = v19;
  sub_1C151B54C();
  v39[6] = v22;
  v39[7] = v21;
  sub_1C151B58C();
  v39[5] = v23;
  v39[4] = v24;
  sub_1C151B51C();
  v39[3] = v25;
  v39[2] = v26;
  sub_1C151B59C();
  v39[1] = v27;
  v39[0] = v28;
  sub_1C151B57C();
  sub_1C151B53C();
  sub_1C151B56C();
  sub_1C151B5BC();
  sub_1C151B55C();
  if (qword_1EB87CC48 != -1) {
    swift_once();
  }
  if (v16 == 255)
  {
    LOBYTE(v16) = 2;
    uint64_t v15 = 0;
  }
  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1C151763C();
  uint64_t v29 = sub_1C151B62C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
  uint64_t v30 = (int *)type metadata accessor for CategoryViewLayoutOptions();
  uint64_t v31 = v30;
  *(void *)(a4 + v30[8]) = 0x4030000000000000;
  *(void *)(a4 + v30[10]) = 0x4018000000000000;
  *(void *)(a4 + v30[11]) = 0x402E000000000000;
  *(void *)(a4 + v30[12]) = 0x4024000000000000;
  *(void *)(a4 + v30[13]) = 0x4024000000000000;
  double v32 = 0.0;
  if (v44) {
    double v32 = 3.0;
  }
  *(double *)(a4 + v30[9]) = v32;
  char v33 = (void *)(a4 + v30[6]);
  uint64_t v34 = v40;
  *char v33 = v41;
  v33[1] = v34;
  uint64_t v35 = a4 + v30[5];
  *(void *)uint64_t v35 = v15;
  *(unsigned char *)(v35 + 8) = v16;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(a4, v14, v43);
  uint64_t v36 = (double *)(a4 + v31[7]);
  double v37 = v46;
  *uint64_t v36 = v45;
  v36[1] = v37;
  double result = v48;
  v36[2] = v47;
  v36[3] = result;
  return result;
}

NewsFeed::CategoryViewLayoutOptions::Embedded __swiftcall CategoryViewLayoutOptions.Embedded.init(categoryOptions:)(NewsFeed::CategoryViewLayoutOptions::Embedded categoryOptions)
{
  char v2 = *(unsigned char *)(*(void *)&categoryOptions.categoryOptions.alwaysInsetIcon + 1);
  *uint64_t v1 = **(unsigned char **)&categoryOptions.categoryOptions.alwaysInsetIcon;
  v1[1] = v2;
  return categoryOptions;
}

uint64_t *initializeBufferWithCopyOfBuffer for CategoryViewLayoutOptions(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151772C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = (_OWORD *)((char *)a1 + v12);
    uint64_t v15 = (_OWORD *)((char *)a2 + v12);
    long long v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v17 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  }
  return a1;
}

uint64_t destroy for CategoryViewLayoutOptions(uint64_t a1)
{
  uint64_t v2 = sub_1C151772C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for CategoryViewLayoutOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (_OWORD *)(a1 + v11);
  uint64_t v14 = (_OWORD *)(a2 + v11);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithCopy for CategoryViewLayoutOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  uint64_t v14 = a3[7];
  long long v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *long long v15 = *v16;
  v15[1] = v16[1];
  _OWORD v15[2] = v16[2];
  v15[3] = v16[3];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for CategoryViewLayoutOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (_OWORD *)(a1 + v11);
  uint64_t v14 = (_OWORD *)(a2 + v11);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for CategoryViewLayoutOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (_OWORD *)(a1 + v11);
  uint64_t v14 = (_OWORD *)(a2 + v11);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryViewLayoutOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0D69EAC);
}

uint64_t sub_1C0D69EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151772C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 2) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for CategoryViewLayoutOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0D69F80);
}

uint64_t sub_1C0D69F80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C151772C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C0D6A040()
{
  uint64_t result = sub_1C151772C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CategoryViewLayoutOptions.Embedded(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D6A1CCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CategoryViewLayoutOptions.Embedded()
{
  return &type metadata for CategoryViewLayoutOptions.Embedded;
}

uint64_t dispatch thunk of GutterableViewController.gutterView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of GutterableViewController.gutterView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of GutterableViewController.gutterView.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void sub_1C0D6A240(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = MEMORY[0x1C18C9C60](v1 + 16);
  if (!v4) {
    return;
  }
  uint64_t v5 = (void *)v4;
  unsigned int v6 = (void *)sub_1C151F49C();

  if ((*(unsigned char *)a1 & 1) == 0)
  {
    uint64_t v9 = v6;
    long long v56 = *(long long *)((char *)a1 + 8);
    sub_1C0D6B3B4((uint64_t)a1 + 24, (uint64_t)&v58);
    uint64_t v10 = *((void *)a1 + 5);
    uint64_t v11 = a1;
    uint64_t v12 = (void *)(v2 + 32);
    swift_beginAccess();
    uint64_t v13 = *(void **)(v2 + 32);
    sub_1BFF59A8C((uint64_t)&v56);
    sub_1BFF59A8C((uint64_t)&v58);
    sub_1BFC648F8(v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = v2;
    *(void *)(v2 + 32) = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v13 = sub_1C0EE3270(0, v13[2] + 1, 1, v13);
      *uint64_t v12 = v13;
    }
    unint64_t v17 = v13[2];
    unint64_t v16 = v13[3];
    if (v17 >= v16 >> 1)
    {
      uint64_t v13 = sub_1C0EE3270((void *)(v16 > 1), v17 + 1, 1, v13);
      *uint64_t v12 = v13;
    }
    _OWORD v13[2] = v17 + 1;
    uint64_t v18 = &v13[7 * v17];
    long long v19 = *v11;
    long long v20 = v11[1];
    long long v21 = v11[2];
    v18[10] = *((void *)v11 + 6);
    *((_OWORD *)v18 + 3) = v20;
    *((_OWORD *)v18 + 4) = v21;
    *((_OWORD *)v18 + 2) = v19;
    swift_endAccess();
    uint64_t v22 = v9;
    uint64_t v23 = *(void *)(v15 + 24);
    if (v23) {
      goto LABEL_31;
    }
    goto LABEL_35;
  }
  uint64_t v7 = *(void *)(v2 + 24);
  if (!v7 || *(unsigned char *)(v7 + 16) != 1 || (uint64_t v8 = MEMORY[0x1C18C9C60](v7 + 72)) == 0)
  {
    uint64_t v51 = v6;
    uint64_t v53 = (void *)(v2 + 32);
    swift_beginAccess();
    uint64_t v52 = v2;
    uint64_t v24 = *(void *)(*(void *)(v2 + 32) + 16);
    if (v24)
    {
      uint64_t v50 = a1;
      uint64_t v25 = (uint64_t *)(swift_bridgeObjectRetain() + 80);
      uint64_t v26 = MEMORY[0x1E4FBC860];
      do
      {
        if ((*(unsigned char *)(v25 - 6) & 1) == 0)
        {
          uint64_t v30 = *(v25 - 4);
          id v55 = (id)*(v25 - 5);
          uint64_t v31 = *(v25 - 3);
          uint64_t v32 = *(v25 - 2);
          uint64_t v33 = *(v25 - 1);
          uint64_t v34 = *v25;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFC648F8(v33);
          *(void *)&long long v56 = v26;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F6C58(0, *(void *)(v26 + 16) + 1, 1);
            uint64_t v26 = v56;
          }
          unint64_t v28 = *(void *)(v26 + 16);
          unint64_t v27 = *(void *)(v26 + 24);
          if (v28 >= v27 >> 1)
          {
            sub_1C05F6C58(v27 > 1, v28 + 1, 1);
            uint64_t v26 = v56;
          }
          *(void *)(v26 + 16) = v28 + 1;
          uint64_t v29 = v26 + 56 * v28;
          *(unsigned char *)(v29 + 32) = 0;
          *(void *)(v29 + 40) = v55;
          *(void *)(v29 + 48) = v30;
          *(void *)(v29 + 56) = v31;
          *(void *)(v29 + 64) = v32;
          *(void *)(v29 + 72) = v33;
          *(void *)(v29 + 80) = v34;
        }
        v25 += 7;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      uint64_t v35 = v53;
      a1 = v50;
    }
    else
    {
      uint64_t v26 = MEMORY[0x1E4FBC860];
      uint64_t v35 = (void *)(v2 + 32);
    }
    *uint64_t v35 = v26;
    swift_bridgeObjectRelease();
    long long v58 = *(long long *)((char *)a1 + 8);
    sub_1C0D6B3B4((uint64_t)a1 + 24, (uint64_t)v57);
    uint64_t v36 = *((void *)a1 + 5);
    double v37 = a1;
    swift_beginAccess();
    uint64_t v38 = (void *)*v35;
    sub_1BFF59A8C((uint64_t)&v58);
    sub_1BFF59A8C((uint64_t)v57);
    sub_1BFC648F8(v36);
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v35 = v38;
    uint64_t v22 = v51;
    uint64_t v15 = v52;
    if ((v39 & 1) == 0)
    {
      uint64_t v38 = sub_1C0EE3270(0, v38[2] + 1, 1, v38);
      *uint64_t v53 = v38;
    }
    unint64_t v41 = v38[2];
    unint64_t v40 = v38[3];
    if (v41 >= v40 >> 1)
    {
      uint64_t v38 = sub_1C0EE3270((void *)(v40 > 1), v41 + 1, 1, v38);
      *uint64_t v53 = v38;
    }
    v38[2] = v41 + 1;
    uint64_t v42 = &v38[7 * v41];
    long long v43 = *v37;
    long long v44 = v37[1];
    long long v45 = v37[2];
    v42[10] = *((void *)v37 + 6);
    *((_OWORD *)v42 + 3) = v44;
    *((_OWORD *)v42 + 4) = v45;
    *((_OWORD *)v42 + 2) = v43;
    swift_endAccess();
    uint64_t v23 = *(void *)(v52 + 24);
    if (v23)
    {
LABEL_31:
      uint64_t v46 = MEMORY[0x1C18C9C60](v23 + 72);
      if (v46)
      {
        double v47 = (void *)v46;

        return;
      }
      double v48 = *(void (**)(uint64_t))(v23 + 56);
      if (v48)
      {
        uint64_t v49 = swift_retain();
        v48(v49);
        sub_1BFC3E5C0((uint64_t)v48);
      }
    }
LABEL_35:
    *(void *)(v15 + 24) = 0;
    swift_release();
    sub_1C0D6A948();

    return;
  }
  id v54 = (id)v8;
}

void sub_1C0D6A694(char a1)
{
  swift_beginAccess();
  uint64_t v2 = *(void *)(*(void *)(v1 + 32) + 16);
  if (v2)
  {
    uint64_t v20 = v1;
    int v3 = (uint64_t *)(swift_bridgeObjectRetain() + 80);
    uint64_t v4 = MEMORY[0x1E4FBC860];
    char v5 = a1;
    do
    {
      int v9 = *((unsigned __int8 *)v3 - 48);
      if (((((v5 & 1) == 0) ^ v9) & 1) == 0)
      {
        uint64_t v10 = *(v3 - 4);
        uint64_t v23 = *(v3 - 5);
        uint64_t v11 = *(v3 - 2);
        uint64_t v22 = *(v3 - 3);
        uint64_t v12 = *(v3 - 1);
        uint64_t v13 = *v3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFC648F8(v12);
        aBlock[0] = v4;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F6C58(0, *(void *)(v4 + 16) + 1, 1);
          char v5 = a1;
          uint64_t v4 = aBlock[0];
        }
        unint64_t v7 = *(void *)(v4 + 16);
        unint64_t v6 = *(void *)(v4 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1C05F6C58(v6 > 1, v7 + 1, 1);
          char v5 = a1;
          uint64_t v4 = aBlock[0];
        }
        *(void *)(v4 + 16) = v7 + 1;
        uint64_t v8 = v4 + 56 * v7;
        *(unsigned char *)(v8 + 32) = v9;
        *(void *)(v8 + 40) = v23;
        *(void *)(v8 + 48) = v10;
        *(void *)(v8 + 56) = v22;
        *(void *)(v8 + 64) = v11;
        *(void *)(v8 + 72) = v12;
        *(void *)(v8 + 80) = v13;
      }
      v3 += 7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v1 = v20;
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v1 + 24);
  if (v14)
  {
    uint64_t v15 = MEMORY[0x1C18C9C60](v14 + 72);
    if (v15)
    {
      unint64_t v16 = (void *)v15;
      if (((a1 & 1) == 0) != *(unsigned char *)(v14 + 16))
      {
        uint64_t v17 = swift_allocObject();
        swift_weakInit();
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v14;
        *(void *)(v18 + 24) = v17;
        aBlock[4] = sub_1C0D6B59C;
        aBlock[5] = v18;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BFC9FC68;
        aBlock[3] = &block_descriptor_25_1;
        long long v19 = _Block_copy(aBlock);
        swift_retain_n();
        swift_release();
        objc_msgSend(v16, sel_dismissViewControllerAnimated_completion_, 1, v19);
        _Block_release(v19);
        swift_release();
      }
    }
  }
}

void sub_1C0D6A948()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1C18C9C60](v0 + 16);
  if (v2)
  {
    int v3 = (void *)v2;
    uint64_t v4 = (void *)sub_1C151F49C();

    char v5 = (uint64_t *)(v1 + 32);
    swift_beginAccess();
    if (*(void *)(*(void *)(v1 + 32) + 16))
    {
      swift_beginAccess();
      uint64_t v6 = *v5;
      if (!*(void *)(*v5 + 16))
      {
        __break(1u);
        return;
      }
      id v28 = v4;
      char v29 = *(unsigned char *)(v6 + 32);
      uint64_t v8 = *(void *)(v6 + 40);
      uint64_t v7 = *(void *)(v6 + 48);
      uint64_t v10 = *(void *)(v6 + 56);
      uint64_t v9 = *(void *)(v6 + 64);
      uint64_t v11 = *(void *)(v6 + 72);
      uint64_t v12 = *(void *)(v6 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = v11;
      uint64_t v27 = v12;
      sub_1BFC648F8(v11);
      sub_1C024A344(0, 1);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = v8;
      uint64_t v15 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      uint64_t v16 = v10;
      if (v9)
      {
        uint64_t v17 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = 0;
      }
      id v25 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v15, v17, 1);

      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v19 = swift_allocObject();
      swift_weakInit();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v18;
      *(unsigned char *)(v20 + 24) = v29;
      uint64_t v26 = v16;
      *(void *)(v20 + 32) = v14;
      *(void *)(v20 + 40) = v7;
      *(void *)(v20 + 48) = v16;
      *(void *)(v20 + 56) = v9;
      *(void *)(v20 + 64) = v13;
      *(void *)(v20 + 72) = v27;
      *(void *)(v20 + 80) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFC648F8(v13);
      swift_retain();
      swift_retain();
      long long v21 = (void *)sub_1C151E5EC();
      aBlock[4] = sub_1C0D6B4E8;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BFD34E78;
      aBlock[3] = &block_descriptor_60;
      uint64_t v22 = _Block_copy(aBlock);
      swift_release();
      id v23 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v21, 0, v22);
      _Block_release(v22);
      swift_release();
      swift_release();

      objc_msgSend(v25, sel_addAction_, v23);
      type metadata accessor for DebugFormatAlertManager.AlertPresentation();
      uint64_t v24 = swift_allocObject();
      swift_unknownObjectWeakInit();
      *(unsigned char *)(v24 + 16) = v29;
      *(void *)(v24 + 24) = v14;
      *(void *)(v24 + 32) = v7;
      *(void *)(v24 + 40) = v26;
      *(void *)(v24 + 48) = v9;
      *(void *)(v24 + 56) = v13;
      *(void *)(v24 + 64) = v27;
      swift_unknownObjectWeakAssign();
      *(void *)(v1 + 24) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFC648F8(v13);
      swift_release();
      uint64_t v4 = v28;
      objc_msgSend(v28, sel_presentViewController_animated_completion_, v25, 1, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1BFC3E5C0(v13);
    }
  }
}

uint64_t sub_1C0D6AD24(uint64_t a1)
{
  uint64_t v1 = *(void (**)(void))(a1 + 56);
  if (v1) {
    v1();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(void *)(Strong + 24) = 0;
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C0D6A948();
    return swift_release();
  }
  return result;
}

void sub_1C0D6ADC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a2 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C18C9C60](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = swift_allocObject();
    long long v10 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)a3;
    *(_OWORD *)(v9 + 32) = v10;
    *(_OWORD *)(v9 + 48) = *(_OWORD *)(a3 + 32);
    *(void *)(v9 + 64) = *(void *)(a3 + 48);
    *(void *)(v9 + 72) = a4;
    aBlock[4] = sub_1C0D6B550;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFC9FC68;
    aBlock[3] = &block_descriptor_18_0;
    uint64_t v11 = _Block_copy(aBlock);
    long long v15 = *(_OWORD *)(a3 + 8);
    sub_1C0D6B3B4(a3 + 24, (uint64_t)v14);
    uint64_t v12 = *(void *)(a3 + 40);
    sub_1BFF59A8C((uint64_t)&v15);
    sub_1BFF59A8C((uint64_t)v14);
    sub_1BFC648F8(v12);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_dismissViewControllerAnimated_completion_, 1, v11);
    _Block_release(v11);
  }
}

uint64_t sub_1C0D6AF24(uint64_t a1)
{
  uint64_t v1 = *(void (**)(void))(a1 + 40);
  if (v1) {
    v1();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(void *)(Strong + 24) = 0;
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C0D6A948();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0D6AFC4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFC3E5C0(v1);
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D6B030()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatAlertManager()
{
  return self;
}

uint64_t type metadata accessor for DebugFormatAlertManager.AlertPresentation()
{
  return self;
}

uint64_t destroy for DebugFormatAlert(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for DebugFormatAlert(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v7 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for DebugFormatAlert(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DebugFormatAlert(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v6;
      *(void *)(a1 + 48) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatAlert(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatAlert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatAlert()
{
  return &type metadata for DebugFormatAlert;
}

uint64_t sub_1C0D6B3B4(uint64_t a1, uint64_t a2)
{
  sub_1BFF97D54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D6B418()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0D6B450()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0D6B488()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1C0D6B4E8(uint64_t a1)
{
  sub_1C0D6ADC4(a1, *(void *)(v1 + 16), v1 + 24, *(void *)(v1 + 80));
}

uint64_t sub_1C0D6B4F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D6B550()
{
  return sub_1C0D6AF24(v0 + 16);
}

uint64_t sub_1C0D6B55C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D6B59C()
{
  return sub_1C0D6AD24(*(void *)(v0 + 16));
}

unsigned char *storeEnumTagSinglePayload for DebugFormatAlertType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D6B670);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatAlertType()
{
  return &type metadata for DebugFormatAlertType;
}

unint64_t sub_1C0D6B6AC()
{
  unint64_t result = qword_1EA1A6B00;
  if (!qword_1EA1A6B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6B00);
  }
  return result;
}

uint64_t static LayeredMediaTraits.== infix(_:_:)()
{
  return 1;
}

uint64_t LayeredMediaTraits.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t LayeredMediaTraits.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0D6B780()
{
  unint64_t result = qword_1EA1A6B08;
  if (!qword_1EA1A6B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6B08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LayeredMediaTraits(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0D6B870);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaTraits()
{
  return &type metadata for LayeredMediaTraits;
}

uint64_t sub_1C0D6B8A8(uint64_t a1, uint64_t *a2)
{
  void (*v10)(long long *__return_ptr, uint64_t, uint64_t);
  long long v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _OWORD *v18;
  long long v19;
  long long v20;
  uint64_t v22[2];
  long long v23;
  unsigned char v24[25];
  uint64_t v25;

  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    id v25 = MEMORY[0x1E4FBC860];
    sub_1C05F6C78(0, v2, 0);
    uint64_t v3 = v25;
    unsigned int v6 = (void *)(a1 + 32);
    do
    {
      uint64_t v7 = *a2;
      uint64_t v8 = v6[3];
      uint64_t v9 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v8);
      long long v10 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v9 + 40);
      swift_bridgeObjectRetain();
      v10(&v23, v8, v9);
      uint64_t v11 = v23;
      LOBYTE(v9) = sub_1C0452C00(v23, *((unint64_t *)&v23 + 1), v7);
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v11, *((unint64_t *)&v11 + 1));
      if (v9)
      {
        uint64_t v12 = 0;
      }
      else
      {
        uint64_t v13 = v6[3];
        uint64_t v14 = v6[4];
        __swift_project_boxed_opaque_existential_1(v6, v13);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 40))(v22, v13, v14);
        sub_1C02B6148((uint64_t *)&v23, v22[0], v22[1]);
        sub_1BFEEFC20(v23, *((unint64_t *)&v23 + 1));
        uint64_t v12 = 1;
      }
      sub_1BFC66384((uint64_t)v6, (uint64_t)&v23);
      v24[24] = v12;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v25 = v3;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C05F6C78(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v25;
      }
      uint64_t v17 = *(void *)(v3 + 16);
      uint64_t v16 = *(void *)(v3 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C05F6C78(v16 > 1, v17 + 1, 1);
        uint64_t v3 = v25;
      }
      *(void *)(v3 + 16) = v17 + 1;
      uint64_t v18 = (_OWORD *)(v3 + 48 * v17);
      uint64_t v19 = v23;
      uint64_t v20 = *(_OWORD *)v24;
      *(_OWORD *)((char *)v18 + 57) = *(_OWORD *)&v24[9];
      v18[2] = v19;
      v18[3] = v20;
      v6 += 5;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1C0D6BA90(uint64_t a1)
{
  sub_1BFE29960();
  uint64_t v45 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v44 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DebugFormatLayoutOrderingModel();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v47 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v40 = (uint64_t)&v38 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v39 = (uint64_t)&v38 - v11;
  uint64_t v12 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a1 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  unint64_t v19 = MEMORY[0x1E4FBC860];
  if (!v15) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v20 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v18 << 6))
  {
    if (*(void *)(*(void *)(a1 + 56) + 8 * i) >> 60 == 7)
    {
      uint64_t v25 = swift_projectBox();
      uint64_t v26 = *(int *)(v45 + 48);
      unint64_t v46 = v19;
      uint64_t v27 = v44;
      sub_1C0D73A78(v25, v44, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      uint64_t v48 = *(void *)(v25 + v26);
      uint64_t v28 = v43;
      sub_1C0D73AE0(v27, v43, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      sub_1C0955B70();
      uint64_t v30 = *(int *)(v29 + 48);
      uint64_t v31 = v28;
      uint64_t v32 = v47;
      uint64_t v33 = v40;
      sub_1C0D73AE0(v31, v40, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      *(void *)(v33 + v30) = v48;
      unint64_t v19 = v46;
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = v33;
      uint64_t v35 = v39;
      sub_1C0D73AE0(v34, v39, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
      sub_1C0D73AE0(v35, v32, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_1C0EE79D0(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v37 = *(void *)(v19 + 16);
      unint64_t v36 = *(void *)(v19 + 24);
      if (v37 >= v36 >> 1) {
        unint64_t v19 = sub_1C0EE79D0(v36 > 1, v37 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v37 + 1;
      uint64_t result = sub_1C0D73AE0(v47, v19+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v37, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
      if (v15) {
        goto LABEL_4;
      }
    }
    else if (v15)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v16) {
      goto LABEL_29;
    }
    unint64_t v23 = *(void *)(v12 + 8 * v22);
    ++v18;
    if (!v23)
    {
      int64_t v18 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_29;
      }
      unint64_t v23 = *(void *)(v12 + 8 * v18);
      if (!v23)
      {
        int64_t v18 = v22 + 2;
        if (v22 + 2 >= v16) {
          goto LABEL_29;
        }
        unint64_t v23 = *(void *)(v12 + 8 * v18);
        if (!v23)
        {
          int64_t v18 = v22 + 3;
          if (v22 + 3 >= v16) {
            goto LABEL_29;
          }
          unint64_t v23 = *(void *)(v12 + 8 * v18);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v15 = (v23 - 1) & v23;
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v16)
  {
LABEL_29:
    swift_release();
    return v19;
  }
  unint64_t v23 = *(void *)(v12 + 8 * v24);
  if (v23)
  {
    int64_t v18 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v18 >= v16) {
      goto LABEL_29;
    }
    unint64_t v23 = *(void *)(v12 + 8 * v18);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C0D6BEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v2 + 24);
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C15204BC();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    unint64_t v17 = v4 & 0xC000000000000001;
    unint64_t v18 = v4;
    do
    {
      if (v17)
      {
        uint64_t v8 = MEMORY[0x1C18C7CB0](v7, v4);
      }
      else
      {
        uint64_t v8 = *(void *)(v4 + 8 * v7 + 32);
        swift_retain();
      }
      uint64_t v9 = swift_allocObject();
      swift_retain();
      sub_1C151820C();
      swift_release();
      sub_1C151821C();
      uint64_t v10 = (void *)swift_allocObject();
      v10[2] = v9;
      v10[3] = a1;
      v10[4] = a2;
      swift_retain();
      swift_retain();
      sub_1C151897C();
      swift_release();
      swift_release();
      uint64_t v11 = v3;
      uint64_t v12 = *(void *)(v8 + 32);
      uint64_t v13 = (uint64_t *)(*(void *)(v8 + 24) + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandCenter);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      uint64_t v16 = swift_allocObject();
      swift_weakInit();
      sub_1C0349AA8(v12);
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C0349ED4(v15, v14, (uint64_t)sub_1C0D70D5C, v16, v21);
      swift_unknownObjectRelease();
      swift_release();
      sub_1C00C5B90(v12);
      swift_release();
      if (v22)
      {
        __swift_project_boxed_opaque_existential_1(v21, v22);
        sub_1C1517E3C();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      }
      else
      {
        swift_release();
        sub_1C03F5550((uint64_t)v21);
      }
      uint64_t v3 = v11;
      ++v7;
      swift_release();
      unint64_t v4 = v18;
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0D6C1E8()
{
  swift_release();
  swift_release();
  sub_1C00C5B90(*(void *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatLayoutTreeStateMachine()
{
  return self;
}

void *sub_1C0D6C258(uint64_t a1, unint64_t a2)
{
  void (*v119)(long long *__return_ptr, uint64_t, uint64_t);
  long long v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  unint64_t v125;
  unint64_t v126;
  _OWORD *v127;
  long long v128;
  long long v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  long long v140;
  long long v141;
  long long v142;
  long long v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  unint64_t v151;
  char v152;
  uint64_t v153;
  CGFloat v154;
  CGFloat v155;
  double *v156;
  CGFloat v157;
  CGFloat v158;
  CGFloat v159;
  CGFloat v160;
  double v161;
  double v162;
  double v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  CGFloat v174;
  CGFloat v175;
  uint64_t v176;
  void **v177;
  void *v178;
  char v179;
  unint64_t v180;
  unint64_t v181;
  double v182;
  CGFloat v183;
  CGFloat v184;
  CGFloat v185;
  uint64_t v186;
  double *v187;
  CGFloat v188;
  CGFloat v189;
  CGFloat v190;
  CGFloat v191;
  CGFloat MinY;
  double v193;
  double v194;
  double v195;
  double v196;
  double v197;
  double v198;
  double v199;
  double v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  CGFloat v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  void **v208;
  void *v209;
  char v210;
  unint64_t v211;
  unint64_t v212;
  void *v213;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  unint64_t v219;
  double v220;
  long long v221;
  uint64_t *v222;
  unint64_t v223;
  uint64_t v224;
  void *v225;
  uint64_t v226;
  uint64_t v227;
  CGFloat v228;
  uint64_t v229;
  void *v230;
  unsigned int (**v231)(char *, uint64_t, uint64_t);
  double v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  _OWORD v240[8];
  uint64_t v241;
  long long v242;
  _OWORD v243[2];
  long long v244;
  long long v245;
  long long v246;
  long long v247;
  long long v248;
  CGRect v249;
  CGRect v250;
  CGRect v251;
  CGRect v252;
  CGRect v253;
  CGRect v254;
  CGRect v255;
  CGRect v256;

  uint64_t v238 = a2;
  sub_1C0D70D64(0, &qword_1EA1A6B10, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatLayoutOrderingModel, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v215 - v5;
  uint64_t v236 = type metadata accessor for DebugFormatLayoutOrderingModel();
  id v234 = *(void *)(v236 - 8);
  MEMORY[0x1F4188790](v236 - 8);
  long long v217 = (uint64_t)&v215 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v216 = (uint64_t)&v215 - v9;
  MEMORY[0x1F4188790](v10);
  int v226 = (uint64_t)&v215 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v235 = (uint64_t)&v215 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v233 = (unint64_t)&v215 - v15;
  MEMORY[0x1F4188790](v16);
  long long v229 = (uint64_t)&v215 - v17;
  uint64_t v18 = type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t v232 = *(double *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v215 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (char *)&v215 - v22;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v225 = (void *)(v2 + 16);
  *(void *)(v2 + 24) = v24;
  uint64_t v237 = a1;
  uint64_t v25 = *(void **)(a1 + 16);
  uint64_t v27 = v25[26];
  uint64_t v26 = v25[27];
  if (v25[29])
  {
    uint64_t v28 = swift_retain();
  }
  else
  {
    type metadata accessor for FormatSourceMapCollection();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = MEMORY[0x1E4FBC868];
  }
  uint64_t v219 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C0D6BA90(v27);
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v26 + 16);
  if (v30)
  {
    long long v224 = v29;
    uint64_t v31 = v26;
    uint64_t v32 = v26
        + ((*(unsigned __int8 *)(*(void *)&v232 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)&v232 + 80));
    double v33 = *(double *)(*(void *)&v232 + 72);
    id v231 = (unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48);
    *(void *)&uint64_t v232 = v234 + 56;
    unsigned __int8 v227 = v31;
    swift_bridgeObjectRetain();
    uint64_t v34 = MEMORY[0x1E4FBC860];
    uint64_t v228 = v33;
    do
    {
      sub_1C0D73A78(v32, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C0D73A78((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v35 = *((void *)v20 + 16);
        long long v36 = *((_OWORD *)v20 + 5);
        *((_OWORD *)v6 + 4) = *((_OWORD *)v20 + 4);
        *((_OWORD *)v6 + 5) = v36;
        long long v37 = *((_OWORD *)v20 + 7);
        *((_OWORD *)v6 + 6) = *((_OWORD *)v20 + 6);
        *((_OWORD *)v6 + 7) = v37;
        long long v38 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v6 = *(_OWORD *)v20;
        *((_OWORD *)v6 + 1) = v38;
        long long v39 = *((_OWORD *)v20 + 3);
        *((_OWORD *)v6 + 2) = *((_OWORD *)v20 + 2);
        *((_OWORD *)v6 + 3) = v39;
        *((void *)v6 + 16) = v35;
        uint64_t v40 = v236;
        swift_storeEnumTagMultiPayload();
        uint64_t v41 = 0;
      }
      else
      {
        sub_1C0086E4C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        uint64_t v41 = 1;
        uint64_t v40 = v236;
      }
      (**(void (***)(char *, uint64_t, uint64_t, uint64_t))&v232)(v6, v41, 1, v40);
      sub_1C0086E4C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((*v231)(v6, 1, v40) == 1)
      {
        sub_1C0D70DC8((uint64_t)v6);
      }
      else
      {
        uint64_t v42 = v18;
        uint64_t v43 = v229;
        sub_1C0D73AE0((uint64_t)v6, v229, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
        sub_1C0D73AE0(v43, v233, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v34 = sub_1C0EE79D0(0, *(void *)(v34 + 16) + 1, 1, v34);
        }
        unint64_t v45 = *(void *)(v34 + 16);
        unint64_t v44 = *(void *)(v34 + 24);
        if (v45 >= v44 >> 1) {
          uint64_t v34 = sub_1C0EE79D0(v44 > 1, v45 + 1, 1, v34);
        }
        *(void *)(v34 + 16) = v45 + 1;
        sub_1C0D73AE0(v233, v34+ ((*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80))+ *(void *)(v234 + 72) * v45, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
        uint64_t v18 = v42;
        double v33 = v228;
      }
      v32 += *(void *)&v33;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease_n();
    uint64_t v29 = v224;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  *(void *)&unint64_t v242 = v29;
  sub_1C104AEE0(v34);
  sub_1C0D72134(&qword_1EA1A6B18, (void (*)(uint64_t))type metadata accessor for DebugFormatLayoutOrderingModel);
  unsigned __int8 v227 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v237 + 16);
  sub_1C151764C();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = *(void *)(v46 + 248);
  uint64_t v52 = *(void *)(v51 + 16);
  uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v54 = v238;
  if (v52)
  {
    swift_bridgeObjectRetain();
    while (v52 <= *(void *)(v51 + 16))
    {
      unint64_t v58 = *(void *)(v51 + 8 * v52 + 24);
      if (v58 >> 61 == 5)
      {
        uint64_t v59 = *(void *)((v58 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        long long v60 = *(void **)(v237 + 24);
        swift_retain();
        swift_retain();
        objc_msgSend(v60, sel_bounds);
        uint64_t v62 = v61;
        uint64_t v64 = v63;
        uint64_t v66 = v65;
        uint64_t v68 = v67;
        uint64_t v70 = *(void *)(v59 + 16);
        uint64_t v69 = *(void *)(v59 + 24);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v53 = sub_1C0EE7870(0, v53[2] + 1, 1, v53);
        }
        unint64_t v72 = v53[2];
        unint64_t v71 = v53[3];
        if (v72 >= v71 >> 1) {
          uint64_t v53 = sub_1C0EE7870((void *)(v71 > 1), v72 + 1, 1, v53);
        }
        v53[2] = v72 + 1;
        id v55 = &v53[25 * v72];
        unint64_t v54 = v238;
        v55[4] = v238;
        v55[5] = v59;
        v55[6] = v62;
        v55[7] = v64;
        v55[8] = v66;
        v55[9] = v68;
        *((unsigned char *)v55 + 80) = 0;
        int v56 = *(_DWORD *)((char *)&v242 + 3);
        *(_DWORD *)((char *)v55 + 81) = v242;
        *((_DWORD *)v55 + 21) = v56;
        v55[11] = 0;
        v55[12] = v62;
        v55[13] = v64;
        v55[14] = v66;
        v55[15] = v68;
        *((_OWORD *)v55 + 8) = 0u;
        *((_OWORD *)v55 + 9) = 0u;
        *((_OWORD *)v55 + 10) = 0u;
        v55[22] = v48;
        v55[23] = v50;
        uint64_t v57 = MEMORY[0x1E4FBC860];
        v55[24] = MEMORY[0x1E4FBC860];
        v55[25] = v70;
        v55[26] = v69;
        v55[27] = v57;
        *((unsigned char *)v55 + 224) = 1;
        swift_release();
        swift_release();
      }
      if (!--v52) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_30:
    swift_bridgeObjectRelease();
  }
  if (v53[2])
  {
    uint64_t v73 = sub_1C151EC4C();
    swift_bridgeObjectRelease();
    uint64_t v74 = (void **)v225;
    swift_beginAccess();
    uint64_t v75 = *v74;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v74 = v75;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_98;
    }
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
LABEL_37:
  uint64_t v73 = v226;
  uint64_t v75 = v230;
  long long v224 = *(void *)(v227 + 16);
  if (v224)
  {
    unint64_t v80 = 0;
    long long v223 = v227 + ((*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80));
    uint64_t v222 = (uint64_t *)(v219 + 16);
    uint64_t v221 = xmmword_1C1529AE0;
    id v231 = v48;
    long long v229 = v50;
    while (1)
    {
      if (v80 >= *(void *)(v227 + 16))
      {
        __break(1u);
LABEL_98:
        uint64_t v75 = sub_1C0EE79BC(0, v75[2] + 1, 1, v75);
        *uint64_t v225 = v75;
LABEL_33:
        unint64_t v78 = v75[2];
        unint64_t v77 = v75[3];
        if (v78 >= v77 >> 1)
        {
          uint64_t v75 = sub_1C0EE79BC((void *)(v77 > 1), v78 + 1, 1, v75);
          *uint64_t v225 = v75;
        }
        v75[2] = v78 + 1;
        uint64_t v79 = &v75[3 * v78];
        v79[4] = 0x697461726F636544;
        v79[5] = 0xEB00000000736E6FLL;
        v79[6] = v73;
        swift_endAccess();
        goto LABEL_37;
      }
      uint64_t v82 = v235;
      sub_1C0D73A78(v223 + *(void *)(v234 + 72) * v80, v235, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
      sub_1C0D73A78(v82, v73, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v233 = v80;
      if (EnumCaseMultiPayload != 1)
      {
        sub_1C0955B70();
        uint64_t v220 = v105;
        double v106 = *(double *)(v73 + *(int *)(*(void *)&v105 + 48));
        uint64_t v228 = *(double *)&OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes;
        uint64_t v107 = *(double **)(*(void *)&v106
                          + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
        double v108 = v107[2];
        double v109 = v107[3];
        double v110 = v107[4];
        double v111 = v107[5];
        uint64_t v232 = v106;
        uint64_t v112 = sub_1C0D6D960();
        uint64_t v241 = MEMORY[0x1E4FBC870];
        int64_t v113 = v112[2];
        if (v113)
        {
          uint64_t v239 = MEMORY[0x1E4FBC860];
          sub_1C05F6C78(0, v113, 0);
          uint64_t v114 = v239;
          uint64_t v218 = v112;
          uint64_t v115 = v112 + 4;
          do
          {
            uint64_t v116 = v241;
            uint64_t v118 = v115[3];
            uint64_t v117 = v115[4];
            __swift_project_boxed_opaque_existential_1(v115, v118);
            uint64_t v119 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v117 + 40);
            swift_bridgeObjectRetain();
            v119(&v242, v118, v117);
            uint64_t v120 = v242;
            LOBYTE(v118) = sub_1C0452C00(v242, *((unint64_t *)&v242 + 1), v116);
            swift_bridgeObjectRelease();
            sub_1BFEEFC20(v120, *((unint64_t *)&v120 + 1));
            if (v118)
            {
              uint64_t v121 = 0;
            }
            else
            {
              uint64_t v122 = v115[3];
              uint64_t v123 = v115[4];
              __swift_project_boxed_opaque_existential_1(v115, v122);
              (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v123 + 40))(v240, v122, v123);
              sub_1C02B6148((uint64_t *)&v242, *(uint64_t *)&v240[0], *((unint64_t *)&v240[0] + 1));
              sub_1BFEEFC20(v242, *((unint64_t *)&v242 + 1));
              uint64_t v121 = 1;
            }
            sub_1BFC66384((uint64_t)v115, (uint64_t)&v242);
            BYTE8(v243[1]) = v121;
            uint64_t v124 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v239 = v114;
            unint64_t v54 = v238;
            if ((v124 & 1) == 0)
            {
              sub_1C05F6C78(0, *(void *)(v114 + 16) + 1, 1);
              uint64_t v114 = v239;
            }
            uint64_t v126 = *(void *)(v114 + 16);
            uint64_t v125 = *(void *)(v114 + 24);
            if (v126 >= v125 >> 1)
            {
              sub_1C05F6C78(v125 > 1, v126 + 1, 1);
              uint64_t v114 = v239;
            }
            *(void *)(v114 + 16) = v126 + 1;
            uint64_t v127 = (_OWORD *)(v114 + 48 * v126);
            uint64_t v128 = v242;
            uint64_t v129 = v243[0];
            *(_OWORD *)((char *)v127 + 57) = *(_OWORD *)((char *)v243 + 9);
            v127[2] = v128;
            v127[3] = v129;
            v115 += 5;
            --v113;
          }
          while (v113);
        }
        else
        {
          uint64_t v114 = MEMORY[0x1E4FBC860];
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0D70EC0();
        uint64_t v138 = swift_allocObject();
        *(_OWORD *)(v138 + 16) = v221;
        long long v139 = v216;
        sub_1C0D73A78(v235, v216, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v140 = *(_OWORD *)(v139 + 80);
          long long v245 = *(_OWORD *)(v139 + 64);
          long long v246 = v140;
          uint64_t v141 = *(_OWORD *)(v139 + 112);
          long long v247 = *(_OWORD *)(v139 + 96);
          long long v248 = v141;
          uint64_t v142 = *(_OWORD *)(v139 + 16);
          unint64_t v242 = *(_OWORD *)v139;
          v243[0] = v142;
          uint64_t v143 = *(_OWORD *)(v139 + 48);
          v243[1] = *(_OWORD *)(v139 + 32);
          long long v244 = v143;
          uint64_t v144 = *(void *)(v139 + 128);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1C0955B08((uint64_t)&v242);
          uint64_t v145 = *(void *)(v144
                           + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
          uint64_t v146 = *(void *)(v145 + 48);
          long long v147 = *(void *)(v145 + 56);
          swift_bridgeObjectRetain();
          swift_release();
        }
        else
        {
          uint64_t v148 = *(void *)(*(void *)(v139 + *(int *)(*(void *)&v220 + 48))
                           + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
          uint64_t v146 = *(void *)(v148 + 48);
          long long v147 = *(void *)(v148 + 56);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_release();
          sub_1C0086E4C(v139, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
        }
        uint64_t v149 = v222;
        swift_beginAccess();
        uint64_t v150 = *v149;
        if (*(void *)(v150 + 16))
        {
          swift_bridgeObjectRetain();
          long long v151 = sub_1BFEF2D8C(v146, v147);
          if (v152)
          {
            uint64_t v153 = *(void *)(*(void *)(v150 + 56) + 8 * v151);
            swift_endAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_84:
            uint64_t v182 = v232;
            *(void *)(v138 + 32) = v54;
            *(double *)(v138 + 40) = v182;
            *(_OWORD *)(v138 + 48) = 0u;
            *(_OWORD *)(v138 + 64) = 0u;
            *(unsigned char *)(v138 + 80) = 1;
            *(void *)(v138 + 88) = 0;
            uint64_t v220 = v108;
            *(double *)(v138 + 96) = v108;
            *(double *)(v138 + 104) = v109;
            uint64_t v183 = v109;
            uint64_t v184 = v110;
            *(double *)(v138 + 112) = v110;
            *(double *)(v138 + 120) = v111;
            uint64_t v185 = v111;
            *(_OWORD *)(v138 + 128) = 0u;
            *(_OWORD *)(v138 + 144) = 0u;
            *(_OWORD *)(v138 + 160) = 0u;
            uint64_t v186 = v229;
            *(void *)(v138 + 176) = v231;
            *(void *)(v138 + 184) = v186;
            *(void *)(v138 + 192) = v114;
            *(void *)(v138 + 200) = v146;
            *(void *)(v138 + 208) = v147;
            *(void *)(v138 + 216) = v153;
            *(unsigned char *)(v138 + 224) = 1;
            *(void *)&v240[0] = v138;
            uint64_t v187 = *(double **)(*(void *)&v182 + *(void *)&v228);
            long long v188 = v187[2];
            long long v189 = v187[3];
            uint64_t v190 = v187[4];
            uint64_t v191 = v187[5];
            v253.origin.x = v188;
            v253.origin.y = v189;
            v253.size.width = v190;
            v253.size.height = v191;
            MinY = CGRectGetMinY(v253);
            uint64_t v228 = 0.0;
            if (MinY < 0.0)
            {
              v254.origin.x = v188;
              v254.origin.y = v189;
              v254.size.width = v190;
              v254.size.height = v191;
              CGRectGetMinY(v254);
            }
            v255.origin.x = v188;
            v255.origin.y = v189;
            v255.size.width = v190;
            v255.size.height = v191;
            if (CGRectGetMinX(v255) < 0.0)
            {
              v256.origin.x = v188;
              v256.origin.y = v189;
              v256.size.width = v190;
              v256.size.height = v191;
              uint64_t v228 = -CGRectGetMinX(v256);
            }
            sub_1C151F72C();
            sub_1C151F76C();
            sub_1C151F75C();
            unint64_t v194 = v193;
            unint64_t v196 = v195;
            uint64_t v198 = v197;
            uint64_t v200 = v199;
            swift_bridgeObjectRetain();
            uint64_t v201 = sub_1C151EC0C();
            swift_bridgeObjectRelease();
            uint64_t v202 = *(void *)(v201 + 16);
            uint64_t v203 = v219;
            uint64_t v204 = v220;
            if (v202)
            {
              uint64_t v205 = (uint64_t *)(v201 + 32);
              do
              {
                uint64_t v206 = *v205++;
                *(void *)&unint64_t v242 = v206;
                swift_retain();
                sub_1C0D6EBF4(&v242, (uint64_t)v240, 1, v114, v203, v54, 1, v204, v183, v184, v185, v194, v196, v198, v200);
                swift_release();
                --v202;
              }
              while (v202);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v207 = *(void *)&v240[0];
            long long v208 = (void **)v225;
            swift_beginAccess();
            long long v209 = *v208;
            uint64_t v210 = swift_isUniquelyReferenced_nonNull_native();
            int *v208 = v209;
            if ((v210 & 1) == 0)
            {
              long long v209 = sub_1C0EE79BC(0, v209[2] + 1, 1, v209);
              *uint64_t v225 = v209;
            }
            uint64_t v48 = v231;
            uint64_t v50 = v229;
            id v212 = v209[2];
            uint64_t v211 = v209[3];
            if (v212 >= v211 >> 1)
            {
              long long v209 = sub_1C0EE79BC((void *)(v211 > 1), v212 + 1, 1, v209);
              *uint64_t v225 = v209;
            }
            v209[2] = v212 + 1;
            uint64_t v213 = &v209[3 * v212];
            v213[4] = 1835365449;
            v213[5] = 0xE400000000000000;
            v213[6] = v207;
            swift_endAccess();
            swift_release();
            sub_1C0086E4C(v235, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
            uint64_t v73 = v226;
            sub_1C0086E4C(v226, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
            goto LABEL_40;
          }
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        uint64_t v153 = MEMORY[0x1E4FBC860];
        goto LABEL_84;
      }
      long long v84 = *(_OWORD *)(v73 + 80);
      long long v245 = *(_OWORD *)(v73 + 64);
      long long v246 = v84;
      long long v85 = *(_OWORD *)(v73 + 112);
      long long v247 = *(_OWORD *)(v73 + 96);
      long long v248 = v85;
      long long v86 = *(_OWORD *)(v73 + 16);
      unint64_t v242 = *(_OWORD *)v73;
      v243[0] = v86;
      long long v87 = *(_OWORD *)(v73 + 48);
      v243[1] = *(_OWORD *)(v73 + 32);
      long long v244 = v87;
      double v88 = *(double *)(v73 + 128);
      sub_1C0955B08((uint64_t)&v242);
      uint64_t v89 = OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes;
      uint64_t v90 = *(double **)(*(void *)&v88
                       + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
      double v91 = v90[2];
      double v92 = v90[3];
      double v93 = v90[4];
      double v94 = v90[5];
      sub_1C0D70EC0();
      uint64_t v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = v221;
      uint64_t v96 = v217;
      sub_1C0D73A78(v82, v217, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v97 = *(_OWORD *)(v96 + 80);
        v240[4] = *(_OWORD *)(v96 + 64);
        v240[5] = v97;
        long long v98 = *(_OWORD *)(v96 + 112);
        v240[6] = *(_OWORD *)(v96 + 96);
        v240[7] = v98;
        long long v99 = *(_OWORD *)(v96 + 16);
        v240[0] = *(_OWORD *)v96;
        v240[1] = v99;
        long long v100 = *(_OWORD *)(v96 + 48);
        v240[2] = *(_OWORD *)(v96 + 32);
        v240[3] = v100;
        uint64_t v101 = *(void *)(v96 + 128);
        swift_retain();
        swift_retain();
        sub_1C0955B08((uint64_t)v240);
        uint64_t v102 = *(void *)(v101
                         + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
        uint64_t v104 = *(void *)(v102 + 48);
        uint64_t v103 = *(void *)(v102 + 56);
        swift_bridgeObjectRetain();
        swift_release();
      }
      else
      {
        sub_1C0955B70();
        uint64_t v131 = *(void *)(*(void *)(v96 + *(int *)(v130 + 48))
                         + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
        uint64_t v104 = *(void *)(v131 + 48);
        uint64_t v103 = *(void *)(v131 + 56);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_release();
        sub_1C0086E4C(v96, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      }
      uint64_t v132 = v222;
      swift_beginAccess();
      uint64_t v133 = *v132;
      if (!*(void *)(v133 + 16)) {
        goto LABEL_68;
      }
      swift_bridgeObjectRetain();
      uint64_t v134 = sub_1BFEF2D8C(v104, v103);
      if ((v135 & 1) == 0) {
        break;
      }
      uint64_t v136 = *(void *)(*(void *)(v133 + 56) + 8 * v134);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v137 = MEMORY[0x1E4FBC860];
LABEL_69:
      *(void *)(v95 + 32) = v54;
      *(double *)(v95 + 40) = v88;
      *(_OWORD *)(v95 + 48) = 0u;
      *(_OWORD *)(v95 + 64) = 0u;
      *(unsigned char *)(v95 + 80) = 2;
      *(void *)(v95 + 88) = 0;
      uint64_t v154 = v91;
      *(double *)(v95 + 96) = v91;
      *(double *)(v95 + 104) = v92;
      long long v155 = v92;
      uint64_t v232 = v93;
      *(double *)(v95 + 112) = v93;
      *(double *)(v95 + 120) = v94;
      uint64_t v228 = v94;
      *(_OWORD *)(v95 + 128) = 0u;
      *(_OWORD *)(v95 + 144) = 0u;
      *(_OWORD *)(v95 + 160) = 0u;
      *(void *)(v95 + 176) = v48;
      *(void *)(v95 + 184) = v50;
      *(void *)(v95 + 192) = v137;
      *(void *)(v95 + 200) = v104;
      *(void *)(v95 + 208) = v103;
      *(void *)(v95 + 216) = v136;
      *(unsigned char *)(v95 + 224) = 1;
      uint64_t v241 = v95;
      uint64_t v156 = *(double **)(*(void *)&v88 + v89);
      long long v157 = v156[2];
      uint64_t v158 = v156[3];
      uint64_t v159 = v156[4];
      uint64_t v160 = v156[5];
      v249.origin.x = v157;
      v249.origin.y = v158;
      v249.size.width = v159;
      v249.size.height = v160;
      if (CGRectGetMinY(v249) < 0.0)
      {
        v250.origin.x = v157;
        v250.origin.y = v158;
        v250.size.width = v159;
        v250.size.height = v160;
        CGRectGetMinY(v250);
      }
      v251.origin.x = v157;
      v251.origin.y = v158;
      v251.size.width = v159;
      v251.size.height = v160;
      if (CGRectGetMinX(v251) < 0.0)
      {
        v252.origin.x = v157;
        v252.origin.y = v158;
        v252.size.width = v159;
        v252.size.height = v160;
        CGRectGetMinX(v252);
      }
      sub_1C151F72C();
      sub_1C151F76C();
      sub_1C151F75C();
      uint64_t v162 = v161;
      uint64_t v164 = v163;
      uint64_t v166 = v165;
      int v168 = v167;
      swift_bridgeObjectRetain();
      uint64_t v169 = sub_1C151EC0C();
      swift_bridgeObjectRelease();
      uint64_t v170 = *(void *)(v169 + 16);
      if (v170)
      {
        uint64_t v220 = v88;
        uint64_t v171 = 0;
        uint64_t v172 = v219;
        uint64_t v173 = MEMORY[0x1E4FBC860];
        uint64_t v174 = v232;
        uint64_t v175 = v228;
        do
        {
          uint64_t v176 = *(void *)(v169 + 8 * v171++ + 32);
          *(void *)&v240[0] = v176;
          swift_retain();
          sub_1C0D6EBF4(v240, (uint64_t)&v241, 1, v173, v172, v54, 1, v154, v155, v174, v175, v162, v164, v166, v168);
          swift_release();
        }
        while (v170 != v171);
        swift_bridgeObjectRelease();
        uint64_t v95 = v241;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v177 = (void **)v225;
      swift_beginAccess();
      uint64_t v178 = *v177;
      uint64_t v179 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v177 = v178;
      uint64_t v48 = v231;
      uint64_t v50 = v229;
      if ((v179 & 1) == 0)
      {
        uint64_t v178 = sub_1C0EE79BC(0, v178[2] + 1, 1, v178);
        *uint64_t v225 = v178;
      }
      uint64_t v181 = v178[2];
      uint64_t v180 = v178[3];
      if (v181 >= v180 >> 1)
      {
        uint64_t v178 = sub_1C0EE79BC((void *)(v180 > 1), v181 + 1, 1, v178);
        *uint64_t v225 = v178;
      }
      v178[2] = v181 + 1;
      uint64_t v81 = (char *)&v178[3 * v181];
      strcpy(v81 + 32, "Supplementary");
      *((_WORD *)v81 + 23) = -4864;
      *((void *)v81 + 6) = v95;
      swift_endAccess();
      swift_release();
      sub_1C0086E4C(v235, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
      uint64_t v73 = v226;
LABEL_40:
      unint64_t v80 = v233 + 1;
      uint64_t v75 = v230;
      if (v233 + 1 == v224) {
        goto LABEL_96;
      }
    }
    swift_bridgeObjectRelease();
LABEL_68:
    swift_endAccess();
    uint64_t v137 = MEMORY[0x1E4FBC860];
    uint64_t v136 = MEMORY[0x1E4FBC860];
    goto LABEL_69;
  }
LABEL_96:
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v75;
}

uint64_t sub_1C0D6D884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0D73A78(a1, a2, (uint64_t (*)(void))type metadata accessor for DebugFormatLayoutOrderingModel);
}

uint64_t sub_1C0D6D8B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 48);
  uint64_t result = 0;
  switch(v4)
  {
    case 1:
    case 4:
    case 5:
      break;
    case 2:
      if (*(unsigned char *)(v3 + 64)) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = *(void *)(v3 + 56);
      }
      break;
    case 3:
      uint64_t result = sub_1BFD32BF4();
      break;
    default:
      if (*(unsigned char *)(v3 + 88)) {
        uint64_t result = -100;
      }
      else {
        uint64_t result = *(void *)(v3 + 80);
      }
      break;
  }
  *a2 = result;
  return result;
}

void *sub_1C0D6D960()
{
  uint64_t v1 = v0;
  uint64_t v165 = *MEMORY[0x1E4F143B8];
  uint64_t v138 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v138);
  uint64_t v141 = (uint64_t)&v136 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  *(void *)&long long v142 = (char *)&v136 - v4;
  uint64_t v137 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v137);
  uint64_t v140 = (uint64_t)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v139 = (uint64_t)&v136 - v7;
  uint64_t v8 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v136 - v12;
  uint64_t v14 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v136 - v18;
  uint64_t v20 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v136 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = (void *)MEMORY[0x1E4FBC860];
  sub_1C0D73A78(v1, (uint64_t)v22, type metadata accessor for FeedItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v25 = *((void *)v22 + 9);
      unint64_t v26 = *((void *)v22 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v25, v26);
      break;
    case 2u:
    case 6u:
    case 9u:
    case 0xAu:
      sub_1C0086E4C((uint64_t)v22, type metadata accessor for FeedItem);
      break;
    case 3u:
      sub_1C0D73AE0((uint64_t)v22, (uint64_t)v19, type metadata accessor for FeedHeadline);
      sub_1C0D73A78((uint64_t)v19, (uint64_t)v16, type metadata accessor for FeedHeadline);
      uint64_t v27 = sub_1BFEA4268(0, 1, 1, MEMORY[0x1E4FBC860]);
      uint64_t v143 = v27;
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      if (v29 >= v28 >> 1)
      {
        uint64_t v27 = sub_1BFEA4268((void *)(v28 > 1), v29 + 1, 1, v27);
        uint64_t v143 = v27;
      }
      *((void *)&v151 + 1) = v14;
      *(void *)&long long v152 = sub_1C0D72134((unint64_t *)&unk_1EB873778, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v150);
      sub_1C0D73A78((uint64_t)v16, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
      v27[2] = v29 + 1;
      sub_1BFC773DC(&v150, (uint64_t)&v27[5 * v29 + 4]);
      sub_1C0086E4C((uint64_t)v16, type metadata accessor for FeedHeadline);
      uint64_t v31 = FeedHeadline.additionalFormatFeedItems.getter();
      sub_1BFEACADC((uint64_t)v31);
      sub_1C0086E4C((uint64_t)v19, type metadata accessor for FeedHeadline);
      break;
    case 4u:
      sub_1C0D73AE0((uint64_t)v22, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1C0D73A78((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v32 = sub_1BFEA4268(0, 1, 1, MEMORY[0x1E4FBC860]);
      uint64_t v143 = v32;
      unint64_t v34 = v32[2];
      unint64_t v33 = v32[3];
      if (v34 >= v33 >> 1)
      {
        uint64_t v32 = sub_1BFEA4268((void *)(v33 > 1), v34 + 1, 1, v32);
        uint64_t v143 = v32;
      }
      *((void *)&v151 + 1) = v8;
      *(void *)&long long v152 = sub_1C0D72134(&qword_1EB85B498, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
      uint64_t v35 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v150);
      sub_1C0D73A78((uint64_t)v10, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      v32[2] = v34 + 1;
      sub_1BFC773DC(&v150, (uint64_t)&v32[5 * v34 + 4]);
      long long v36 = type metadata accessor for FeedWebEmbed;
      sub_1C0086E4C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      long long v37 = FeedWebEmbed.additionalFormatFeedItems.getter();
      sub_1BFEACADC((uint64_t)v37);
      uint64_t v38 = (uint64_t)v13;
      goto LABEL_31;
    case 5u:
      long long v39 = *((_OWORD *)v22 + 7);
      long long v156 = *((_OWORD *)v22 + 6);
      v157[0] = v39;
      *(_OWORD *)((char *)v157 + 9) = *(_OWORD *)(v22 + 121);
      long long v40 = *((_OWORD *)v22 + 3);
      long long v152 = *((_OWORD *)v22 + 2);
      long long v153 = v40;
      long long v41 = *((_OWORD *)v22 + 5);
      long long v154 = *((_OWORD *)v22 + 4);
      long long v155 = v41;
      long long v42 = *((_OWORD *)v22 + 1);
      long long v150 = *(_OWORD *)v22;
      long long v151 = v42;
      sub_1C0187FB0((uint64_t)&v150);
      uint64_t v43 = sub_1BFEA4268(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v45 = v43[2];
      unint64_t v44 = v43[3];
      if (v45 >= v44 >> 1) {
        uint64_t v43 = sub_1BFEA4268((void *)(v44 > 1), v45 + 1, 1, v43);
      }
      uint64_t v148 = &type metadata for FeedIssue;
      unint64_t v149 = sub_1BFEB031C();
      uint64_t v46 = (_OWORD *)swift_allocObject();
      *(void *)&long long v147 = v46;
      long long v47 = v157[0];
      v46[7] = v156;
      v46[8] = v47;
      *(_OWORD *)((char *)v46 + 137) = *(_OWORD *)((char *)v157 + 9);
      long long v48 = v153;
      v46[3] = v152;
      v46[4] = v48;
      long long v49 = v155;
      v46[5] = v154;
      v46[6] = v49;
      long long v50 = v151;
      v46[1] = v150;
      v46[2] = v50;
      v43[2] = v45 + 1;
      sub_1BFC773DC(&v147, (uint64_t)&v43[5 * v45 + 4]);
      uint64_t v143 = v43;
      uint64_t v51 = (void *)v150;
      sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB87A680, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBBE00]);
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_1C1529AE0;
      sub_1C0187FB0((uint64_t)&v150);
      id v53 = objc_msgSend(v51, sel_sourceChannel);
      *(void *)(v52 + 56) = &type metadata for FeedTag;
      *(void *)(v52 + 64) = sub_1BFEA44FC();
      uint64_t v54 = swift_allocObject();
      *(void *)(v52 + 32) = v54;
      id v55 = objc_msgSend(v53, sel_identifier);
      uint64_t v56 = sub_1C151E62C();
      uint64_t v58 = v57;

      *(_OWORD *)(v54 + 96) = xmmword_1C152C800;
      *(_OWORD *)(v54 + 112) = 0u;
      *(_OWORD *)(v54 + 128) = 0u;
      *(_OWORD *)(v54 + 144) = 0u;
      *(unsigned char *)(v54 + 160) = 0;
      *(void *)(v54 + 16) = v56;
      *(void *)(v54 + 24) = v58;
      *(void *)(v54 + 32) = v53;
      *(unsigned char *)(v54 + 40) = 0;
      *(void *)(v54 + 64) = 0;
      *(void *)(v54 + 72) = 0xE000000000000000;
      *(void *)(v54 + 48) = 0;
      *(unsigned char *)(v54 + 56) = 0;
      uint64_t v59 = MEMORY[0x1E4FBC870];
      *(void *)(v54 + 80) = 0;
      *(void *)(v54 + 88) = v59;
      sub_1C01880A4((uint64_t)&v150);
      sub_1BFEACADC(v52);
      sub_1C01880A4((uint64_t)&v150);
      break;
    case 7u:
      long long v60 = *((_OWORD *)v22 + 7);
      long long v156 = *((_OWORD *)v22 + 6);
      v157[0] = v60;
      v157[1] = *((_OWORD *)v22 + 8);
      LOBYTE(v158) = v22[144];
      long long v61 = *((_OWORD *)v22 + 3);
      long long v152 = *((_OWORD *)v22 + 2);
      long long v153 = v61;
      long long v62 = *((_OWORD *)v22 + 5);
      long long v154 = *((_OWORD *)v22 + 4);
      long long v155 = v62;
      long long v63 = *((_OWORD *)v22 + 1);
      long long v150 = *(_OWORD *)v22;
      long long v151 = v63;
      sub_1BFEA435C((uint64_t)&v150, (uint64_t)&v147);
      uint64_t v64 = sub_1BFEA4268(0, 1, 1, MEMORY[0x1E4FBC860]);
      uint64_t v143 = v64;
      unint64_t v66 = v64[2];
      unint64_t v65 = v64[3];
      if (v66 >= v65 >> 1)
      {
        uint64_t v64 = sub_1BFEA4268((void *)(v65 > 1), v66 + 1, 1, v64);
        uint64_t v143 = v64;
      }
      uint64_t v145 = &type metadata for FeedTag;
      unint64_t v146 = sub_1BFEA44FC();
      *(void *)&long long v144 = swift_allocObject();
      sub_1BFEA435C((uint64_t)&v147, v144 + 16);
      v64[2] = v66 + 1;
      sub_1BFC773DC(&v144, (uint64_t)&v64[5 * v66 + 4]);
      sub_1BFEA4290((uint64_t)&v147);
      sub_1BFEA4290((uint64_t)&v150);
      break;
    case 8u:
      uint64_t v67 = v139;
      sub_1C0D73AE0((uint64_t)v22, v139, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      uint64_t v68 = v140;
      sub_1C0D73A78(v67, v140, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      uint64_t v69 = sub_1BFEA4268(0, 1, 1, MEMORY[0x1E4FBC860]);
      uint64_t v143 = v69;
      unint64_t v71 = v69[2];
      unint64_t v70 = v69[3];
      if (v71 >= v70 >> 1)
      {
        uint64_t v69 = sub_1BFEA4268((void *)(v70 > 1), v71 + 1, 1, v69);
        uint64_t v143 = v69;
      }
      *((void *)&v151 + 1) = v137;
      *(void *)&long long v152 = sub_1C0D72134(&qword_1EB85E978, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
      unint64_t v72 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v150);
      sub_1C0D73A78(v68, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      v69[2] = v71 + 1;
      sub_1BFC773DC(&v150, (uint64_t)&v69[5 * v71 + 4]);
      sub_1C0086E4C(v68, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      sub_1C0086E4C(v67, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      break;
    case 0xBu:
      swift_release();
      break;
    case 0xCu:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0xDu:
      long long v73 = *((_OWORD *)v22 + 11);
      long long v159 = *((_OWORD *)v22 + 10);
      long long v160 = v73;
      long long v161 = *((_OWORD *)v22 + 12);
      long long v74 = *((_OWORD *)v22 + 7);
      long long v156 = *((_OWORD *)v22 + 6);
      v157[0] = v74;
      long long v75 = *((_OWORD *)v22 + 9);
      v157[1] = *((_OWORD *)v22 + 8);
      long long v158 = v75;
      long long v76 = *((_OWORD *)v22 + 3);
      long long v152 = *((_OWORD *)v22 + 2);
      long long v153 = v76;
      long long v77 = *((_OWORD *)v22 + 5);
      long long v154 = *((_OWORD *)v22 + 4);
      long long v155 = v77;
      long long v78 = *((_OWORD *)v22 + 1);
      long long v150 = *(_OWORD *)v22;
      long long v151 = v78;
      sub_1C01F09C0((uint64_t)&v150, (uint64_t)&v147);
      uint64_t v79 = sub_1BFEA4268(0, 1, 1, MEMORY[0x1E4FBC860]);
      uint64_t v143 = v79;
      unint64_t v81 = v79[2];
      unint64_t v80 = v79[3];
      if (v81 >= v80 >> 1)
      {
        uint64_t v79 = sub_1BFEA4268((void *)(v80 > 1), v81 + 1, 1, v79);
        uint64_t v143 = v79;
      }
      uint64_t v145 = &type metadata for FeedPuzzle;
      unint64_t v146 = sub_1C0642294();
      *(void *)&long long v144 = swift_allocObject();
      sub_1C01F09C0((uint64_t)&v147, v144 + 16);
      v79[2] = v81 + 1;
      sub_1BFC773DC(&v144, (uint64_t)&v79[5 * v81 + 4]);
      sub_1C01F0A74((uint64_t)&v147);
      id v82 = objc_msgSend(*((id *)&v153 + 1), sel_puzzleType);
      id v83 = objc_msgSend(v82, sel_identifier);
      uint64_t v84 = sub_1C151E62C();
      uint64_t v86 = v85;

      sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB87A680, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBBE00]);
      uint64_t v87 = swift_allocObject();
      long long v142 = xmmword_1C1529AE0;
      *(_OWORD *)(v87 + 16) = xmmword_1C1529AE0;
      *(void *)(v87 + 56) = &type metadata for FeedPuzzleType;
      *(void *)(v87 + 64) = sub_1C06423C4();
      uint64_t v88 = swift_allocObject();
      *(void *)(v87 + 32) = v88;
      *(void *)(v88 + 16) = 0;
      *(void *)(v88 + 24) = 0;
      *(unsigned char *)(v88 + 32) = 1;
      *(_OWORD *)(v88 + 40) = xmmword_1C1538940;
      *(void *)(v88 + 56) = v84;
      *(void *)(v88 + 64) = v86;
      *(void *)(v88 + 72) = v82;
      *(void *)&long long v147 = v87;
      uint64_t v89 = swift_allocObject();
      *(_OWORD *)(v89 + 16) = v142;
      *(void *)(v89 + 56) = &type metadata for FeedTag;
      *(void *)(v89 + 64) = sub_1BFEA44FC();
      uint64_t v90 = swift_allocObject();
      *(void *)(v89 + 32) = v90;
      sub_1BFF7FF04(0, 0xDuLL);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_1BFF7FF04(0, 0xDuLL);
      swift_bridgeObjectRetain();
      id v91 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_identifier);
      uint64_t v92 = sub_1C151E62C();
      uint64_t v94 = v93;

      *(_OWORD *)(v90 + 96) = xmmword_1C152C800;
      *(_OWORD *)(v90 + 112) = 0u;
      *(_OWORD *)(v90 + 128) = 0u;
      *(_OWORD *)(v90 + 144) = 0u;
      *(unsigned char *)(v90 + 160) = 0;
      *(void *)(v90 + 16) = v92;
      *(void *)(v90 + 24) = v94;
      *(void *)(v90 + 32) = v82;
      *(unsigned char *)(v90 + 40) = 0;
      *(void *)(v90 + 64) = 0;
      *(void *)(v90 + 72) = 0xE000000000000000;
      *(void *)(v90 + 48) = 0;
      *(unsigned char *)(v90 + 56) = 0;
      uint64_t v95 = MEMORY[0x1E4FBC870];
      *(void *)(v90 + 80) = 0;
      *(void *)(v90 + 88) = v95;
      sub_1BFEEFC20(0, 0xDuLL);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEACADC(v89);
      sub_1BFEEFC20(0, 0xDuLL);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEACADC(v147);
      sub_1C01F0A74((uint64_t)&v150);
      break;
    case 0xEu:
      uint64_t v96 = *((void *)v22 + 1);
      *(void *)&long long v142 = *(void *)v22;
      LODWORD(v141) = v22[16];
      uint64_t v97 = *((void *)v22 + 3);
      unint64_t v98 = *((void *)v22 + 4);
      uint64_t v100 = *((void *)v22 + 5);
      uint64_t v99 = *((void *)v22 + 6);
      uint64_t v101 = *((void *)v22 + 7);
      sub_1BFF7FF04(v97, v98);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v102 = sub_1BFEA4268(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v104 = v102[2];
      unint64_t v103 = v102[3];
      if (v104 >= v103 >> 1) {
        uint64_t v102 = sub_1BFEA4268((void *)(v103 > 1), v104 + 1, 1, v102);
      }
      *((void *)&v151 + 1) = &type metadata for FeedPuzzleType;
      *(void *)&long long v152 = sub_1C06423C4();
      uint64_t v105 = swift_allocObject();
      *(void *)&long long v150 = v105;
      *(void *)(v105 + 16) = v142;
      *(void *)(v105 + 24) = v96;
      *(unsigned char *)(v105 + 32) = v141;
      *(void *)(v105 + 40) = v97;
      *(void *)(v105 + 48) = v98;
      *(void *)(v105 + 56) = v100;
      *(void *)(v105 + 64) = v99;
      *(void *)(v105 + 72) = v101;
      v102[2] = v104 + 1;
      sub_1BFC773DC(&v150, (uint64_t)&v102[5 * v104 + 4]);
      uint64_t v143 = v102;
      sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB87A680, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBBE00]);
      uint64_t v106 = swift_allocObject();
      *(_OWORD *)(v106 + 16) = xmmword_1C1529AE0;
      *(void *)(v106 + 56) = &type metadata for FeedTag;
      *(void *)(v106 + 64) = sub_1BFEA44FC();
      uint64_t v107 = swift_allocObject();
      *(void *)(v106 + 32) = v107;
      sub_1BFF7FF04(v97, v98);
      swift_bridgeObjectRetain();
      id v108 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_identifier);
      uint64_t v109 = sub_1C151E62C();
      uint64_t v111 = v110;

      *(_OWORD *)(v107 + 96) = xmmword_1C152C800;
      *(_OWORD *)(v107 + 112) = 0u;
      *(_OWORD *)(v107 + 128) = 0u;
      *(_OWORD *)(v107 + 144) = 0u;
      *(unsigned char *)(v107 + 160) = 0;
      *(void *)(v107 + 16) = v109;
      *(void *)(v107 + 24) = v111;
      *(void *)(v107 + 32) = v101;
      *(unsigned char *)(v107 + 40) = 0;
      *(void *)(v107 + 64) = 0;
      *(void *)(v107 + 72) = 0xE000000000000000;
      *(void *)(v107 + 48) = 0;
      *(unsigned char *)(v107 + 56) = 0;
      uint64_t v112 = MEMORY[0x1E4FBC870];
      *(void *)(v107 + 80) = 0;
      *(void *)(v107 + 88) = v112;
      sub_1BFEEFC20(v97, v98);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEACADC(v106);
      sub_1BFEEFC20(v97, v98);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0xFu:
      uint64_t v113 = (uint64_t)v22;
      uint64_t v114 = v142;
      sub_1C0D73AE0(v113, v142, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v115 = v141;
      sub_1C0D73A78(v114, v141, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v116 = sub_1BFEA4268(0, 1, 1, MEMORY[0x1E4FBC860]);
      uint64_t v143 = v116;
      unint64_t v118 = v116[2];
      unint64_t v117 = v116[3];
      if (v118 >= v117 >> 1)
      {
        uint64_t v116 = sub_1BFEA4268((void *)(v117 > 1), v118 + 1, 1, v116);
        uint64_t v143 = v116;
      }
      uint64_t v119 = v138;
      *((void *)&v151 + 1) = v138;
      *(void *)&long long v152 = sub_1C0D72134(&qword_1EA19CBC8, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v120 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v150);
      sub_1C0D73A78(v115, (uint64_t)v120, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      v116[2] = v118 + 1;
      sub_1BFC773DC(&v150, (uint64_t)&v116[5 * v118 + 4]);
      long long v36 = type metadata accessor for FeedPuzzleStatistic;
      sub_1C0086E4C(v115, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB87A680, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBBE00]);
      uint64_t v121 = swift_allocObject();
      *(_OWORD *)(v121 + 16) = xmmword_1C1529AE0;
      uint64_t v122 = *(void *)(v114 + *(int *)(v119 + 32));
      *(void *)(v121 + 56) = &type metadata for FeedPuzzleType;
      *(void *)(v121 + 64) = sub_1C06423C4();
      uint64_t v123 = swift_allocObject();
      *(void *)(v121 + 32) = v123;
      id v124 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v125 = sub_1C151E62C();
      uint64_t v127 = v126;

      *(void *)(v123 + 16) = 0;
      *(void *)(v123 + 24) = 0;
      *(unsigned char *)(v123 + 32) = 1;
      *(_OWORD *)(v123 + 40) = xmmword_1C1538940;
      *(void *)(v123 + 56) = v125;
      *(void *)(v123 + 64) = v127;
      *(void *)(v123 + 72) = v122;
      sub_1BFEACADC(v121);
      uint64_t v38 = v114;
LABEL_31:
      sub_1C0086E4C(v38, (uint64_t (*)(void))v36);
      break;
    case 0x10u:
      long long v128 = *((_OWORD *)v22 + 13);
      long long v161 = *((_OWORD *)v22 + 12);
      long long v162 = v128;
      long long v163 = *((_OWORD *)v22 + 14);
      uint64_t v164 = *((void *)v22 + 30);
      long long v129 = *((_OWORD *)v22 + 9);
      v157[1] = *((_OWORD *)v22 + 8);
      long long v158 = v129;
      long long v130 = *((_OWORD *)v22 + 11);
      long long v159 = *((_OWORD *)v22 + 10);
      long long v160 = v130;
      long long v131 = *((_OWORD *)v22 + 5);
      long long v154 = *((_OWORD *)v22 + 4);
      long long v155 = v131;
      long long v132 = *((_OWORD *)v22 + 7);
      long long v156 = *((_OWORD *)v22 + 6);
      v157[0] = v132;
      long long v133 = *((_OWORD *)v22 + 1);
      long long v150 = *(_OWORD *)v22;
      long long v151 = v133;
      long long v134 = *((_OWORD *)v22 + 3);
      long long v152 = *((_OWORD *)v22 + 2);
      long long v153 = v134;
      sub_1C01F0AC8((uint64_t)&v150);
      break;
    case 0x11u:
      return v143;
    default:
      uint64_t v23 = *((void *)v22 + 5);
      unint64_t v24 = *((void *)v22 + 6);
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v23, v24);
      break;
  }
  return v143;
}

uint64_t sub_1C0D6EBF4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, int a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11, double a12, double a13, double a14, double a15)
{
  LODWORD(v368) = a7;
  *(double *)&long long v366 = a14;
  *((double *)&v366 + 1) = a15;
  *(double *)&long long v365 = a12;
  *((double *)&v365 + 1) = a13;
  *(void *)&long long v394 = *a1;
  unint64_t v25 = v394;
  sub_1C11C64F0();
  v416.origin.x = a8;
  v416.origin.y = a9;
  v416.size.width = a10;
  v416.size.height = a11;
  CGRectGetMinX(v416);
  sub_1C151F73C();
  v417.origin.x = a8;
  v417.origin.y = a9;
  v417.size.width = a10;
  v417.size.height = a11;
  CGRectGetMinY(v417);
  sub_1C151F74C();
  double v27 = v26;
  double v29 = v28;
  double v31 = v30;
  double v33 = v32;
  v374 = (void **)a2;
  unint64_t v375 = a6;
  uint64_t v376 = a4;
  switch((v25 >> 59) & 0x1E | (v25 >> 2) & 1)
  {
    case 3uLL:
      uint64_t v361 = a3;
      uint64_t v373 = v15;
      sub_1C0078488();
      uint64_t v353 = v64;
      unint64_t v65 = (uint64_t *)(swift_projectBox() + *(int *)(v64 + 48));
      uint64_t v67 = *v65;
      uint64_t v66 = v65[1];
      uint64_t v68 = v65[3];
      uint64_t v350 = v65[2];
      uint64_t v69 = v65[4];
      v348[0] = v66;
      swift_retain();
      swift_retain();
      uint64_t v354 = v394 & 0xFFFFFFFFFFFFFFBLL;
      swift_retain();
      uint64_t v351 = v67;
      swift_retain();
      v348[1] = v69;
      uint64_t v349 = v68;
      sub_1C017C3D4(v350, v68);
      sub_1C11C6D94((uint64_t)&v407);
      uint64_t v70 = v407;
      uint64_t v71 = v408;
      uint64_t v72 = v409;
      uint64_t v73 = v410;
      uint64_t v74 = sub_1BFE67B44();
      uint64_t v76 = v75;
      v360 = (void *)(a5 + 16);
      swift_beginAccess();
      uint64_t v77 = *(void *)(a5 + 16);
      if (*(void *)(v77 + 16))
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        unint64_t v78 = sub_1BFEF2D8C(v74, v76);
        if (v79)
        {
          uint64_t v80 = *(void *)(*(void *)(v77 + 56) + 8 * v78);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v81 = v361;
          goto LABEL_40;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v81 = v361;
      swift_endAccess();
      uint64_t v80 = MEMORY[0x1E4FBC860];
LABEL_40:
      sub_1BFF5984C((uint64_t)&v407, (uint64_t)&v411);
      uint64_t v144 = 0;
      uint64_t v145 = 0;
      uint64_t v146 = 0;
      uint64_t v147 = 0;
      if ((v415 & 1) == 0)
      {
        uint64_t v144 = v72;
        uint64_t v145 = v73;
        uint64_t v146 = v70;
        uint64_t v147 = v71;
      }
      *(void *)&long long v394 = a6;
      *((void *)&v394 + 1) = v25;
      long long v395 = 0u;
      long long v396 = 0u;
      LOBYTE(v397) = 3;
      *((void *)&v397 + 1) = v81;
      *(double *)&long long v398 = v27;
      *((double *)&v398 + 1) = v29;
      *(double *)&long long v399 = v31;
      *((double *)&v399 + 1) = v33;
      *(void *)&long long v400 = v146;
      *((void *)&v400 + 1) = v147;
      *(void *)&long long v401 = v144;
      *((void *)&v401 + 1) = v145;
      long long v402 = v365;
      long long v403 = v366;
      *(void *)&long long v404 = a4;
      *((void *)&v404 + 1) = v74;
      *(void *)&long long v405 = v76;
      *((void *)&v405 + 1) = v80;
      LODWORD(v359) = v368 & 1;
      char v406 = v368 & 1;
      unint64_t v50 = *(void *)a2;
      sub_1C09F45A0((uint64_t)&v394);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_43;
      }
      goto LABEL_160;
    case 4uLL:
      uint64_t v373 = v15;
      uint64_t v361 = a3;
      uint64_t v113 = *(void *)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v114 = *(void *)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v115 = *(void *)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v116 = *(void *)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
      unint64_t v362 = *(void *)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v370 = v113;
      swift_retain();
      unint64_t v367 = v114;
      uint64_t v363 = v116;
      uint64_t v364 = (long long *)v115;
      sub_1C017C3D4(v114, v115);
      sub_1C11C6D94((uint64_t)&v411);
      uint64_t v117 = v411;
      uint64_t v118 = v412;
      uint64_t v119 = v413;
      uint64_t v120 = v414;
      uint64_t v121 = sub_1BFE67B44();
      uint64_t v123 = v122;
      swift_beginAccess();
      unint64_t v372 = a5;
      uint64_t v124 = *(void *)(a5 + 16);
      if (*(void *)(v124 + 16))
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        unint64_t v125 = sub_1BFEF2D8C(v121, v123);
        if (v126)
        {
          uint64_t v127 = *(void *)(*(void *)(v124 + 56) + 8 * v125);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_143;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      uint64_t v127 = MEMORY[0x1E4FBC860];
LABEL_143:
      sub_1BFF5984C((uint64_t)&v411, (uint64_t)&v380);
      uint64_t v321 = 0;
      uint64_t v322 = 0;
      uint64_t v323 = 0;
      uint64_t v324 = 0;
      if ((v381[16] & 1) == 0)
      {
        uint64_t v321 = v119;
        uint64_t v322 = v120;
        uint64_t v323 = v117;
        uint64_t v324 = v118;
      }
      *(void *)&long long v394 = v375;
      *((void *)&v394 + 1) = v25;
      long long v395 = 0u;
      long long v396 = 0u;
      LOBYTE(v397) = 3;
      *((void *)&v397 + 1) = v361;
      *(double *)&long long v398 = v27;
      *((double *)&v398 + 1) = v29;
      *(double *)&long long v399 = v31;
      *((double *)&v399 + 1) = v33;
      *(void *)&long long v400 = v323;
      *((void *)&v400 + 1) = v324;
      *(void *)&long long v401 = v321;
      *((void *)&v401 + 1) = v322;
      long long v402 = v365;
      long long v403 = v366;
      *(void *)&long long v404 = a4;
      *((void *)&v404 + 1) = v121;
      *(void *)&long long v405 = v123;
      *((void *)&v405 + 1) = v127;
      char v406 = v368 & 1;
      uint64_t v325 = *v374;
      sub_1C09F45A0((uint64_t)&v394);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v325 = sub_1C0EE7870(0, v325[2] + 1, 1, v325);
      }
      unint64_t v327 = v325[2];
      unint64_t v326 = v325[3];
      uint64_t v328 = v361;
      if (v327 >= v326 >> 1) {
        uint64_t v325 = sub_1C0EE7870((void *)(v326 > 1), v327 + 1, 1, v325);
      }
      v325[2] = v327 + 1;
      uint64_t v329 = &v325[25 * v327];
      *((_OWORD *)v329 + 2) = v394;
      long long v330 = v395;
      long long v331 = v396;
      long long v332 = v398;
      *((_OWORD *)v329 + 5) = v397;
      *((_OWORD *)v329 + 6) = v332;
      *((_OWORD *)v329 + 3) = v330;
      *((_OWORD *)v329 + 4) = v331;
      long long v333 = v399;
      long long v334 = v400;
      long long v335 = v402;
      *((_OWORD *)v329 + 9) = v401;
      *((_OWORD *)v329 + 10) = v335;
      *((_OWORD *)v329 + 7) = v333;
      *((_OWORD *)v329 + 8) = v334;
      long long v336 = v403;
      long long v337 = v404;
      long long v338 = v405;
      *((unsigned char *)v329 + 224) = v406;
      *((_OWORD *)v329 + 12) = v337;
      *((_OWORD *)v329 + 13) = v338;
      *((_OWORD *)v329 + 11) = v336;
      int *v374 = v325;
      uint64_t v339 = *(void *)(*(void *)(*(void *)(v370 + 64) + 112) + 16);
      if (!v339)
      {
        sub_1C09F4704((uint64_t)&v394);
        swift_release();
LABEL_155:
        swift_release();
        return sub_1C017C418(v367, (uint64_t)v364);
      }
      uint64_t v340 = v328 + 1;
      if (!__OFADD__(v328, 1))
      {
        unint64_t v341 = v25;
        uint64_t v371 = *(void *)(*(void *)(v370 + 64) + 112);
        swift_bridgeObjectRetain();
        uint64_t v342 = 0;
        do
        {
          uint64_t v343 = *(void *)(v371 + 8 * v342++ + 32);
          uint64_t v407 = v343;
          unint64_t v392 = v341;
          sub_1C11C64F0();
          swift_retain();
          sub_1C151F72C();
          sub_1C0D6EBF4(&v407, v374, v340, v376, v372, v375, v368 & 1, v27, v29, v31, v33, v344, v345, v346, v347);
          swift_release();
        }
        while (v339 != v342);
        swift_bridgeObjectRelease();
        sub_1C09F4704((uint64_t)&v394);
        swift_release();
        goto LABEL_155;
      }
      goto LABEL_164;
    case 6uLL:
      uint64_t v361 = a3;
      uint64_t v373 = v15;
      id v82 = *(void **)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v83 = *(void *)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v84 = *(void *)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v85 = *(void *)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v86 = *(long long **)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
      uint64_t v358 = *(void *)((v394 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
      uint64_t v359 = v85;
      uint64_t v355 = v84;
      swift_retain();
      swift_retain();
      swift_retain();
      v360 = v82;
      swift_retain();
      uint64_t v357 = v83;
      swift_retain();
      v356 = v86;
      sub_1C017C3D4(v359, v358);
      sub_1C11C6D94((uint64_t)&v407);
      uint64_t v87 = v407;
      uint64_t v88 = v408;
      uint64_t v89 = v409;
      uint64_t v90 = v410;
      uint64_t v91 = sub_1BFE67B44();
      uint64_t v93 = v92;
      unint64_t v367 = a5 + 16;
      swift_beginAccess();
      uint64_t v94 = *(void *)(a5 + 16);
      if (*(void *)(v94 + 16))
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        unint64_t v95 = sub_1BFEF2D8C(v91, v93);
        if (v96)
        {
          uint64_t v97 = *(void *)(*(void *)(v94 + 56) + 8 * v95);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v98 = v361;
          goto LABEL_77;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v98 = v361;
      swift_endAccess();
      uint64_t v97 = MEMORY[0x1E4FBC860];
LABEL_77:
      sub_1BFF5984C((uint64_t)&v407, (uint64_t)&v411);
      uint64_t v210 = 0;
      uint64_t v211 = 0;
      uint64_t v212 = 0;
      uint64_t v213 = 0;
      if ((v415 & 1) == 0)
      {
        uint64_t v210 = v89;
        uint64_t v211 = v90;
        uint64_t v212 = v87;
        uint64_t v213 = v88;
      }
      *(void *)&long long v394 = a6;
      *((void *)&v394 + 1) = v25;
      long long v395 = 0u;
      long long v396 = 0u;
      LOBYTE(v397) = 3;
      *((void *)&v397 + 1) = v98;
      *(double *)&long long v398 = v27;
      *((double *)&v398 + 1) = v29;
      *(double *)&long long v399 = v31;
      *((double *)&v399 + 1) = v33;
      *(void *)&long long v400 = v212;
      *((void *)&v400 + 1) = v213;
      *(void *)&long long v401 = v210;
      *((void *)&v401 + 1) = v211;
      long long v402 = v365;
      long long v403 = v366;
      *(void *)&long long v404 = a4;
      *((void *)&v404 + 1) = v91;
      *(void *)&long long v405 = v93;
      *((void *)&v405 + 1) = v97;
      char v406 = v368 & 1;
      char v214 = *(void **)a2;
      sub_1C09F45A0((uint64_t)&v394);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v214 = sub_1C0EE7870(0, v214[2] + 1, 1, v214);
      }
      unint64_t v216 = v214[2];
      unint64_t v215 = v214[3];
      if (v216 >= v215 >> 1) {
        char v214 = sub_1C0EE7870((void *)(v215 > 1), v216 + 1, 1, v214);
      }
      unint64_t v372 = a5;
      unint64_t v369 = v25;
      v214[2] = v216 + 1;
      long long v217 = &v214[25 * v216];
      *((_OWORD *)v217 + 2) = v394;
      long long v218 = v395;
      long long v219 = v396;
      long long v220 = v398;
      *((_OWORD *)v217 + 5) = v397;
      *((_OWORD *)v217 + 6) = v220;
      *((_OWORD *)v217 + 3) = v218;
      *((_OWORD *)v217 + 4) = v219;
      long long v221 = v399;
      long long v222 = v400;
      long long v223 = v402;
      *((_OWORD *)v217 + 9) = v401;
      *((_OWORD *)v217 + 10) = v223;
      *((_OWORD *)v217 + 7) = v221;
      *((_OWORD *)v217 + 8) = v222;
      long long v224 = v403;
      long long v225 = v404;
      long long v226 = v405;
      *((unsigned char *)v217 + 224) = v406;
      *((_OWORD *)v217 + 12) = v225;
      *((_OWORD *)v217 + 13) = v226;
      *((_OWORD *)v217 + 11) = v224;
      *(void *)a2 = v214;
      unsigned __int8 v227 = v360;
      uint64_t v228 = v360[9];
      if (v228 < 0)
      {
        uint64_t v231 = v228 & 0x7FFFFFFFFFFFFFFFLL;
        swift_retain();
      }
      else
      {
        uint64_t v230 = *(void *)(a6 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandCenter);
        uint64_t v229 = *(void *)(a6 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandCenter + 8);
        swift_retain_n();
        sub_1C0D48B40(v230, v229, &v380);
        long long v380 = *(_OWORD *)&v381[8];
        sub_1C0C33168();
        swift_allocObject();
        swift_bridgeObjectRetain();
        uint64_t v231 = sub_1C15181FC();
        sub_1C00C5B90(v228);
        unsigned __int8 v227 = v360;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C00C5B90(v228);
        uint64_t v228 = v360[9];
      }
      uint64_t v232 = v227[10];
      uint64_t v233 = v227[11];
      type metadata accessor for DebugFormatLayoutTreeStateMachine();
      id v234 = (void *)swift_allocObject();
      v234[2] = v231;
      v234[3] = a6;
      v234[4] = v228;
      v234[5] = v232;
      uint64_t v235 = v373;
      uint64_t v236 = v231;
      v234[6] = v233;
      swift_beginAccess();
      swift_retain();
      swift_retain();
      uint64_t v237 = sub_1C0349AA8(v228);
      MEMORY[0x1C18C66D0](v237);
      if (*(void *)((v235[3] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v235[3] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      swift_endAccess();
      uint64_t v238 = *(void *)(v357 + 24);
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v239 = sub_1C00B3958(v238);
      swift_bridgeObjectRelease();
      *(void *)&long long v380 = v239;
      sub_1C0D739D4((void **)&v380);
      swift_bridgeObjectRelease();
      swift_release();
      *((void *)&v366 + 1) = *(void *)(v380 + 16);
      if (!*((void *)&v366 + 1))
      {
        swift_release();
        sub_1C09F4704((uint64_t)&v394);
        uint64_t v289 = v358;
        uint64_t v288 = v359;
        goto LABEL_126;
      }
      uint64_t v371 = v236;
      *(void *)&long long v366 = v361 + 1;
      if (__OFADD__(v361, 1)) {
        goto LABEL_162;
      }
      unint64_t v50 = 0;
      *(void *)&long long v365 = &v381[16];
      *((void *)&v365 + 1) = v380 + 32;
      uint64_t v363 = v380;
      uint64_t v364 = &v385;
      uint64_t v370 = v361 + 2;
      BOOL v240 = __OFADD__(v361, 2);
      LODWORD(v362) = v240;
      break;
    case 0x10uLL:
      uint64_t v361 = a3;
      unint64_t v372 = a5;
      uint64_t v373 = v15;
      sub_1C017C364();
      uint64_t v371 = *(void *)(swift_projectBox() + *(int *)(v99 + 48));
      swift_retain();
      uint64_t v100 = sub_1C0D6D960();
      int64_t v101 = *(void *)(a4 + 16);
      uint64_t v102 = MEMORY[0x1E4FBC860];
      unint64_t v369 = v394;
      if (v101)
      {
        uint64_t v411 = MEMORY[0x1E4FBC860];
        sub_1BFF01960(0, v101, 0);
        uint64_t v103 = a4 + 32;
        uint64_t v102 = v411;
        do
        {
          sub_1C0D7217C(v103, (uint64_t)&v394);
          sub_1BFC66384((uint64_t)&v394, (uint64_t)&v380);
          sub_1C0D721D8((uint64_t)&v394);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BFF01960(0, *(void *)(v102 + 16) + 1, 1);
            uint64_t v102 = v411;
          }
          unint64_t v105 = *(void *)(v102 + 16);
          unint64_t v104 = *(void *)(v102 + 24);
          if (v105 >= v104 >> 1) {
            sub_1BFF01960(v104 > 1, v105 + 1, 1);
          }
          uint64_t v106 = *(void *)&v381[8];
          uint64_t v107 = *(void *)&v381[16];
          uint64_t v108 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v380, *(uint64_t *)&v381[8]);
          __n128 v109 = MEMORY[0x1F4188790](v108);
          uint64_t v111 = (char *)v348 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v112 + 16))(v111, v109);
          sub_1BFEA7C90(v105, (uint64_t)v111, &v411, v106, v107);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v380);
          uint64_t v102 = v411;
          v103 += 48;
          --v101;
          a6 = v375;
        }
        while (v101);
        unint64_t v25 = v369;
      }
      char v128 = (char)v368;
      *(void *)&long long v394 = v100;
      sub_1BFEACADC(v102);
      uint64_t v129 = v394;
      *(void *)&long long v394 = MEMORY[0x1E4FBC870];
      uint64_t v130 = sub_1C0D6B8A8(v129, (uint64_t *)&v394);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&long long v394 = v25;
      swift_retain();
      swift_retain();
      sub_1C11C6D94((uint64_t)&v411);
      uint64_t v131 = v411;
      uint64_t v132 = v412;
      uint64_t v133 = v413;
      uint64_t v134 = v414;
      *(void *)&long long v394 = v25;
      uint64_t v135 = sub_1BFE67B44();
      uint64_t v137 = v136;
      unint64_t v138 = v372;
      swift_beginAccess();
      uint64_t v139 = *(void *)(v138 + 16);
      uint64_t v140 = *(void *)(v139 + 16);
      swift_bridgeObjectRetain();
      if (v140)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v141 = sub_1BFEF2D8C(v135, v137);
        if (v142)
        {
          uint64_t v143 = *(void *)(*(void *)(v139 + 56) + 8 * v141);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_129;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      uint64_t v143 = MEMORY[0x1E4FBC860];
LABEL_129:
      sub_1BFF5984C((uint64_t)&v411, (uint64_t)&v380);
      uint64_t v290 = 0;
      uint64_t v291 = 0;
      uint64_t v292 = 0;
      uint64_t v293 = 0;
      if ((v381[16] & 1) == 0)
      {
        uint64_t v290 = v133;
        uint64_t v291 = v134;
        uint64_t v292 = v131;
        uint64_t v293 = v132;
      }
      *(void *)&long long v394 = a6;
      *((void *)&v394 + 1) = v25;
      long long v395 = 0u;
      long long v396 = 0u;
      LOBYTE(v397) = 3;
      *((void *)&v397 + 1) = v361;
      *(double *)&long long v398 = v27;
      *((double *)&v398 + 1) = v29;
      *(double *)&long long v399 = v31;
      *((double *)&v399 + 1) = v33;
      *(void *)&long long v400 = v292;
      *((void *)&v400 + 1) = v293;
      *(void *)&long long v401 = v290;
      *((void *)&v401 + 1) = v291;
      long long v402 = v365;
      long long v403 = v366;
      *(void *)&long long v404 = v130;
      *((void *)&v404 + 1) = v135;
      *(void *)&long long v405 = v137;
      *((void *)&v405 + 1) = v143;
      char v406 = v128 & 1;
      long long v294 = v374;
      uint64_t v295 = *v374;
      sub_1C09F45A0((uint64_t)&v394);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v295 = sub_1C0EE7870(0, v295[2] + 1, 1, v295);
      }
      unint64_t v297 = v295[2];
      unint64_t v296 = v295[3];
      if (v297 >= v296 >> 1) {
        uint64_t v295 = sub_1C0EE7870((void *)(v296 > 1), v297 + 1, 1, v295);
      }
      v295[2] = v297 + 1;
      long long v298 = &v295[25 * v297];
      *((_OWORD *)v298 + 2) = v394;
      long long v299 = v395;
      long long v300 = v396;
      long long v301 = v398;
      *((_OWORD *)v298 + 5) = v397;
      *((_OWORD *)v298 + 6) = v301;
      *((_OWORD *)v298 + 3) = v299;
      *((_OWORD *)v298 + 4) = v300;
      long long v302 = v399;
      long long v303 = v400;
      long long v304 = v402;
      *((_OWORD *)v298 + 9) = v401;
      *((_OWORD *)v298 + 10) = v304;
      *((_OWORD *)v298 + 7) = v302;
      *((_OWORD *)v298 + 8) = v303;
      long long v305 = v403;
      long long v306 = v404;
      long long v307 = v405;
      *((unsigned char *)v298 + 224) = v406;
      *((_OWORD *)v298 + 12) = v306;
      *((_OWORD *)v298 + 13) = v307;
      *((_OWORD *)v298 + 11) = v305;
      *long long v294 = v295;
      uint64_t v308 = *(void *)(*(void *)(v371
                                   + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                       + 112);
      uint64_t v309 = *(void *)(v308 + 16);
      if (!v309) {
        goto LABEL_140;
      }
      uint64_t v310 = v130;
      uint64_t v311 = v361 + 1;
      if (__OFADD__(v361, 1)) {
        goto LABEL_163;
      }
      unint64_t v312 = a6;
      swift_bridgeObjectRetain();
      uint64_t v313 = 0;
      char v314 = (char)v368;
      uint64_t v315 = v374;
      uint64_t v376 = v310;
      do
      {
        uint64_t v316 = *(void *)(v308 + 8 * v313++ + 32);
        uint64_t v407 = v316;
        unint64_t v392 = v369;
        sub_1C11C64F0();
        swift_retain();
        sub_1C151F72C();
        sub_1C0D6EBF4(&v407, v315, v311, v376, v372, v312, v314 & 1, v27, v29, v31, v33, v317, v318, v319, v320);
        swift_release();
      }
      while (v309 != v313);
      swift_bridgeObjectRelease();
LABEL_140:
      sub_1C09F4704((uint64_t)&v394);
      swift_bridgeObjectRelease();
      return swift_release();
    default:
      swift_retain();
      swift_retain();
      sub_1C11C6D94((uint64_t)&v411);
      uint64_t v34 = v411;
      uint64_t v35 = v412;
      uint64_t v36 = v413;
      uint64_t v37 = v414;
      uint64_t v38 = sub_1BFE67B44();
      uint64_t v40 = v39;
      swift_beginAccess();
      uint64_t v41 = *(void *)(a5 + 16);
      uint64_t v42 = *(void *)(v41 + 16);
      swift_bridgeObjectRetain();
      if (v42)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v43 = sub_1BFEF2D8C(v38, v40);
        if (v44)
        {
          uint64_t v45 = *(void *)(*(void *)(v41 + 56) + 8 * v43);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      uint64_t v45 = MEMORY[0x1E4FBC860];
LABEL_8:
      sub_1BFF5984C((uint64_t)&v411, (uint64_t)&v380);
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      if ((v381[16] & 1) == 0)
      {
        uint64_t v46 = v36;
        uint64_t v47 = v37;
        uint64_t v48 = v34;
        uint64_t v49 = v35;
      }
      *(void *)&long long v394 = a6;
      *((void *)&v394 + 1) = v25;
      long long v395 = 0u;
      long long v396 = 0u;
      LOBYTE(v397) = 3;
      *((void *)&v397 + 1) = a3;
      *(double *)&long long v398 = v27;
      *((double *)&v398 + 1) = v29;
      *(double *)&long long v399 = v31;
      *((double *)&v399 + 1) = v33;
      *(void *)&long long v400 = v48;
      *((void *)&v400 + 1) = v49;
      *(void *)&long long v401 = v46;
      *((void *)&v401 + 1) = v47;
      long long v402 = v365;
      long long v403 = v366;
      *(void *)&long long v404 = a4;
      *((void *)&v404 + 1) = v38;
      *(void *)&long long v405 = v40;
      *((void *)&v405 + 1) = v45;
      char v406 = v368 & 1;
      unint64_t v50 = *(void *)a2;
      sub_1C09F45A0((uint64_t)&v394);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      goto LABEL_157;
  }
  while (1)
  {
    long long v368 = (void *)v50;
    uint64_t v241 = (uint64_t *)(*((void *)&v365 + 1) + 24 * v50);
    uint64_t v242 = *v241;
    unint64_t v25 = v241[1];
    uint64_t v243 = v241[2];
    *(void *)&long long v380 = v369;
    sub_1C11C64F0();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain();
    sub_1C151F72C();
    uint64_t v245 = v244;
    uint64_t v247 = v246;
    uint64_t v249 = v248;
    uint64_t v251 = v250;
    *(void *)&long long v380 = v369;
    uint64_t v252 = sub_1BFE67B44();
    uint64_t v254 = v253;
    swift_beginAccess();
    uint64_t v255 = *(void *)v367;
    if (*(void *)(*(void *)v367 + 16))
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      unint64_t v256 = sub_1BFEF2D8C(v252, v254);
      uint64_t v257 = v252;
      if (v258)
      {
        unint64_t v259 = a6;
        uint64_t v260 = *(void *)(*(void *)(v255 + 56) + 8 * v256);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_100;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v257 = v252;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    unint64_t v259 = a6;
    swift_endAccess();
    uint64_t v260 = MEMORY[0x1E4FBC860];
LABEL_100:
    sub_1C151820C();
    a6 = v393;
    if (v392 == v242 && v393 == v25)
    {
      char v262 = 1;
      a6 = v25;
    }
    else
    {
      char v262 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v380 = v259;
    *((void *)&v380 + 1) = v242;
    *(void *)uint64_t v381 = v25;
    *(void *)&v381[8] = v243;
    uint64_t v263 = v365;
    *(void *)long long v365 = 0;
    *(void *)(v263 + 8) = 0;
    LOBYTE(v382) = 5;
    *((void *)&v382 + 1) = v366;
    *(double *)&long long v383 = v27;
    *((double *)&v383 + 1) = v29;
    *(double *)&long long v384 = v31;
    *((double *)&v384 + 1) = v33;
    uint64_t v264 = (uint64_t)v364;
    *uint64_t v364 = 0u;
    *(_OWORD *)(v264 + 16) = 0u;
    *(void *)&long long v387 = v245;
    *((void *)&v387 + 1) = v247;
    *(void *)&long long v388 = v249;
    *((void *)&v388 + 1) = v251;
    *(void *)&long long v389 = v376;
    *((void *)&v389 + 1) = v257;
    *(void *)&long long v390 = v254;
    *((void *)&v390 + 1) = v260;
    char v391 = v262 & 1;
    a2 = (uint64_t)v374;
    unint64_t v50 = (unint64_t)*v374;
    sub_1C09F45A0((uint64_t)&v380);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v50 = (unint64_t)sub_1C0EE7870(0, *(void *)(v50 + 16) + 1, 1, (void *)v50);
    }
    a5 = *(void *)(v50 + 16);
    unint64_t v265 = *(void *)(v50 + 24);
    if (a5 >= v265 >> 1) {
      unint64_t v50 = (unint64_t)sub_1C0EE7870((void *)(v265 > 1), a5 + 1, 1, (void *)v50);
    }
    *(void *)(v50 + 16) = a5 + 1;
    id v266 = (void *)(v50 + 200 * a5);
    *((_OWORD *)v266 + 2) = v380;
    long long v267 = *(_OWORD *)v381;
    long long v268 = *(_OWORD *)&v381[16];
    long long v269 = v383;
    *((_OWORD *)v266 + 5) = v382;
    *((_OWORD *)v266 + 6) = v269;
    *((_OWORD *)v266 + 3) = v267;
    *((_OWORD *)v266 + 4) = v268;
    long long v270 = v384;
    long long v271 = v385;
    long long v272 = v387;
    *((_OWORD *)v266 + 9) = v386;
    *((_OWORD *)v266 + 10) = v272;
    *((_OWORD *)v266 + 7) = v270;
    *((_OWORD *)v266 + 8) = v271;
    long long v273 = v388;
    long long v274 = v389;
    long long v275 = v390;
    *((unsigned char *)v266 + 224) = v391;
    *((_OWORD *)v266 + 12) = v274;
    *((_OWORD *)v266 + 13) = v275;
    *((_OWORD *)v266 + 11) = v273;
    *(void *)a2 = v50;
    uint64_t v276 = *(void *)(*(void *)(v243 + 32) + 112);
    uint64_t v277 = *(void *)(v276 + 16);
    if (v277) {
      break;
    }
LABEL_121:
    unint64_t v50 = (unint64_t)v368 + 1;
    sub_1C09F4704((uint64_t)&v380);
    swift_bridgeObjectRelease();
    swift_release();
    if ((void *)((char *)v368 + 1) == *((void **)&v366 + 1))
    {
      swift_release();
      sub_1C09F4704((uint64_t)&v394);
      uint64_t v289 = v358;
      uint64_t v288 = v359;
LABEL_126:
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return sub_1C017C418(v288, v289);
    }
    a6 = v375;
    if (v50 >= *(void *)(v363 + 16)) {
      goto LABEL_156;
    }
  }
  if ((v362 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    a2 = 0;
    do
    {
      uint64_t v379 = *(void *)(v276 + 8 * a2 + 32);
      swift_retain();
      sub_1C151F72C();
      double v280 = v279;
      double v282 = v281;
      double v284 = v283;
      double v286 = v285;
      sub_1C151820C();
      if (v377 == v242 && v378 == v25) {
        char v278 = 1;
      }
      else {
        char v278 = sub_1C1520A9C();
      }
      ++a2;
      swift_bridgeObjectRelease();
      sub_1C0D6EBF4(&v379, v374, v370, v376, v372, v375, v278 & 1, v27, v29, v31, v33, v280, v282, v284, v286);
      swift_release();
    }
    while (v277 != a2);
    swift_bridgeObjectRelease();
    goto LABEL_121;
  }
  while (2)
  {
    __break(1u);
LABEL_160:
    unint64_t v50 = (unint64_t)sub_1C0EE7870(0, *(void *)(v50 + 16) + 1, 1, (void *)v50);
LABEL_43:
    unint64_t v149 = *(void *)(v50 + 16);
    unint64_t v148 = *(void *)(v50 + 24);
    unint64_t v372 = a5;
    if (v149 >= v148 >> 1) {
      unint64_t v50 = (unint64_t)sub_1C0EE7870((void *)(v148 > 1), v149 + 1, 1, (void *)v50);
    }
    *(void *)(v50 + 16) = v149 + 1;
    long long v150 = (void *)(v50 + 200 * v149);
    *((_OWORD *)v150 + 2) = v394;
    long long v151 = v395;
    long long v152 = v396;
    long long v153 = v398;
    *((_OWORD *)v150 + 5) = v397;
    *((_OWORD *)v150 + 6) = v153;
    *((_OWORD *)v150 + 3) = v151;
    *((_OWORD *)v150 + 4) = v152;
    long long v154 = v399;
    long long v155 = v400;
    long long v156 = v402;
    *((_OWORD *)v150 + 9) = v401;
    *((_OWORD *)v150 + 10) = v156;
    *((_OWORD *)v150 + 7) = v154;
    *((_OWORD *)v150 + 8) = v155;
    long long v157 = v403;
    long long v158 = v404;
    long long v159 = v405;
    *((unsigned char *)v150 + 224) = v406;
    *((_OWORD *)v150 + 12) = v158;
    *((_OWORD *)v150 + 13) = v159;
    *((_OWORD *)v150 + 11) = v157;
    *(void *)a2 = v50;
    uint64_t v160 = *(void *)(*(void *)(v351 + 16) + 112);
    uint64_t v161 = *(void *)(v160 + 16);
    unint64_t v369 = v25;
    if (v161)
    {
      if (__OFADD__(v361, 1))
      {
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x1C0D70ACCLL);
      }
      swift_bridgeObjectRetain();
      uint64_t v162 = 0;
      do
      {
        uint64_t v163 = v161;
        uint64_t v164 = v160;
        uint64_t v165 = *(void *)(v160 + 8 * v162++ + 32);
        *(void *)&long long v380 = v165;
        unint64_t v392 = v369;
        sub_1C11C64F0();
        swift_retain();
        sub_1C151F72C();
        sub_1C0D6EBF4(&v380, a2, v361 + 1, v376, v372, v375, v368 & 1, v27, v29, v31, v33, v166, v167, v168, v169);
        uint64_t v160 = v164;
        uint64_t v161 = v163;
        swift_release();
      }
      while (v163 != v162);
      swift_bridgeObjectRelease();
      unint64_t v25 = v369;
      a6 = v375;
    }
    uint64_t v170 = *(void *)(v351 + 24);
    swift_bridgeObjectRetain_n();
    uint64_t v171 = sub_1C00B3A7C(v170);
    swift_bridgeObjectRelease();
    *(void *)&long long v380 = v171;
    sub_1C0D70E54((void **)&v380);
    swift_bridgeObjectRelease();
    uint64_t v358 = *(void *)(v380 + 16);
    if (!v358)
    {
LABEL_74:
      swift_release();
      sub_1C09F4704((uint64_t)&v394);
      swift_release();
      swift_release();
      return sub_1C017C418(v350, v349);
    }
    unint64_t v172 = 0;
    v356 = &v385;
    uint64_t v357 = v380 + 32;
    BOOL v173 = __OFADD__(v361, 1);
    BOOL v352 = v173;
    uint64_t v355 = v380;
    uint64_t v370 = v361 + 1;
LABEL_55:
    unint64_t v174 = a6;
    uint64_t v175 = (uint64_t *)(v357 + 32 * v172);
    unint64_t v176 = v25;
    uint64_t v178 = *v175;
    uint64_t v177 = v175[1];
    uint64_t v180 = v175[2];
    uint64_t v179 = v175[3];
    *(void *)&long long v380 = v176;
    uint64_t v181 = sub_1BFE67B44();
    uint64_t v183 = v182;
    swift_beginAccess();
    uint64_t v184 = *v360;
    uint64_t v185 = *(void *)(*v360 + 16);
    uint64_t v363 = v180;
    uint64_t v364 = (long long *)v177;
    unint64_t v362 = v172;
    unint64_t v367 = v179;
    uint64_t v371 = v181;
    if (v185)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      unint64_t v186 = sub_1BFEF2D8C(v181, v183);
      if (v187)
      {
        uint64_t v188 = *(void *)(*(void *)(v184 + 56) + 8 * v186);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        unint64_t v25 = v369;
        goto LABEL_61;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
    }
    unint64_t v25 = v369;
    swift_endAccess();
    uint64_t v188 = MEMORY[0x1E4FBC860];
LABEL_61:
    a6 = v174;
    *(void *)&long long v380 = v174;
    *((void *)&v380 + 1) = v178;
    a2 = (uint64_t)v364;
    *(void *)uint64_t v381 = v364;
    *(void *)&v381[8] = v363;
    *(_OWORD *)&v381[16] = v367;
    LOBYTE(v382) = 4;
    *((void *)&v382 + 1) = v361;
    *(double *)&long long v383 = v27;
    *((double *)&v383 + 1) = v29;
    *(double *)&long long v384 = v31;
    *((double *)&v384 + 1) = v33;
    long long v189 = v356;
    long long *v356 = 0u;
    v189[1] = 0u;
    long long v387 = v365;
    long long v388 = v366;
    *(void *)&long long v389 = v376;
    *((void *)&v389 + 1) = v371;
    *(void *)&long long v390 = v183;
    *((void *)&v390 + 1) = v188;
    char v391 = v359;
    uint64_t v190 = (unint64_t *)v374;
    unint64_t v50 = (unint64_t)*v374;
    sub_1C09F45A0((uint64_t)&v380);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v50 = (unint64_t)sub_1C0EE7870(0, *(void *)(v50 + 16) + 1, 1, (void *)v50);
    }
    unint64_t v192 = *(void *)(v50 + 16);
    unint64_t v191 = *(void *)(v50 + 24);
    if (v192 >= v191 >> 1) {
      unint64_t v50 = (unint64_t)sub_1C0EE7870((void *)(v191 > 1), v192 + 1, 1, (void *)v50);
    }
    *(void *)(v50 + 16) = v192 + 1;
    uint64_t v193 = (void *)(v50 + 200 * v192);
    *((_OWORD *)v193 + 2) = v380;
    long long v194 = *(_OWORD *)v381;
    long long v195 = *(_OWORD *)&v381[16];
    long long v196 = v383;
    *((_OWORD *)v193 + 5) = v382;
    *((_OWORD *)v193 + 6) = v196;
    *((_OWORD *)v193 + 3) = v194;
    *((_OWORD *)v193 + 4) = v195;
    long long v197 = v384;
    long long v198 = v385;
    long long v199 = v387;
    *((_OWORD *)v193 + 9) = v386;
    *((_OWORD *)v193 + 10) = v199;
    *((_OWORD *)v193 + 7) = v197;
    *((_OWORD *)v193 + 8) = v198;
    long long v200 = v388;
    long long v201 = v389;
    long long v202 = v390;
    *((unsigned char *)v193 + 224) = v391;
    *((_OWORD *)v193 + 12) = v201;
    *((_OWORD *)v193 + 13) = v202;
    *((_OWORD *)v193 + 11) = v200;
    *uint64_t v190 = v50;
    uint64_t v203 = *(void *)(a2 + 112);
    a5 = *(void *)(v203 + 16);
    if (a5)
    {
      if (v352)
      {
        __break(1u);
        continue;
      }
      uint64_t v371 = swift_projectBox();
      swift_bridgeObjectRetain();
      uint64_t v204 = 0;
      unint64_t v50 = (unint64_t)v373;
      a2 = v368;
      do
      {
        unint64_t v205 = *(void *)(v203 + 8 * v204++ + 32);
        unint64_t v392 = v205;
        swift_retain();
        sub_1C151F72C();
        sub_1C0D6EBF4(&v392, v374, v370, v376, v372, v375, v368 & 1, v27, v29, v31, v33, v206, v207, v208, v209);
        swift_release();
      }
      while (a5 != v204);
      swift_bridgeObjectRelease();
      sub_1C09F4704((uint64_t)&v380);
      swift_release();
      swift_release();
      swift_release();
      a6 = v375;
      unint64_t v25 = v369;
    }
    else
    {
      sub_1C09F4704((uint64_t)&v380);
      swift_release();
      swift_release();
      swift_release();
    }
    break;
  }
  unint64_t v172 = v362 + 1;
  if (v362 + 1 == v358) {
    goto LABEL_74;
  }
  if (v172 < *(void *)(v355 + 16)) {
    goto LABEL_55;
  }
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  unint64_t v50 = (unint64_t)sub_1C0EE7870(0, *(void *)(v50 + 16) + 1, 1, (void *)v50);
LABEL_11:
  unint64_t v52 = *(void *)(v50 + 16);
  unint64_t v51 = *(void *)(v50 + 24);
  if (v52 >= v51 >> 1) {
    unint64_t v50 = (unint64_t)sub_1C0EE7870((void *)(v51 > 1), v52 + 1, 1, (void *)v50);
  }
  *(void *)(v50 + 16) = v52 + 1;
  id v53 = (void *)(v50 + 200 * v52);
  *((_OWORD *)v53 + 2) = v394;
  long long v54 = v395;
  long long v55 = v396;
  long long v56 = v398;
  *((_OWORD *)v53 + 5) = v397;
  *((_OWORD *)v53 + 6) = v56;
  *((_OWORD *)v53 + 3) = v54;
  *((_OWORD *)v53 + 4) = v55;
  long long v57 = v399;
  long long v58 = v400;
  long long v59 = v402;
  *((_OWORD *)v53 + 9) = v401;
  *((_OWORD *)v53 + 10) = v59;
  *((_OWORD *)v53 + 7) = v57;
  *((_OWORD *)v53 + 8) = v58;
  long long v60 = v403;
  long long v61 = v404;
  long long v62 = v405;
  *((unsigned char *)v53 + 224) = v406;
  *((_OWORD *)v53 + 12) = v61;
  *((_OWORD *)v53 + 13) = v62;
  *((_OWORD *)v53 + 11) = v60;
  uint64_t result = sub_1C09F4704((uint64_t)&v394);
  *(void *)a2 = v50;
  return result;
}

uint64_t sub_1C0D70B18(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  swift_beginAccess();
  uint64_t result = *(void *)(a3 + 16);
  if (result != v7 || *(void *)(a3 + 24) != v6)
  {
    uint64_t result = sub_1C1520A9C();
    if ((result & 1) == 0)
    {
      swift_beginAccess();
      *(void *)(a3 + 16) = v7;
      *(void *)(a3 + 24) = v6;
      swift_bridgeObjectRetain();
      uint64_t v10 = swift_bridgeObjectRelease();
      return a4(v10);
    }
  }
  return result;
}

uint64_t sub_1C0D70BCC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1C15181EC();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatLayoutTree()
{
  return self;
}

uint64_t sub_1C0D70CA0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D70CD8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D70D18(uint64_t a1, uint64_t *a2)
{
  return sub_1C0D70B18(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24));
}

uint64_t sub_1C0D70D24()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0D70D5C()
{
  return sub_1C0D70BCC();
}

void sub_1C0D70D64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0D70DC8(uint64_t a1)
{
  sub_1C0D70D64(0, &qword_1EA1A6B10, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatLayoutOrderingModel, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0D70E54(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1C0636608(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1C0D70F18(v5);
  *a1 = v2;
  return result;
}

void sub_1C0D70EC0()
{
  if (!qword_1EA1A8970)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8970);
    }
  }
}

uint64_t sub_1C0D70F18(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_130;
    }
    if (v4) {
      return sub_1C0D718BC(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_138;
  }
  uint64_t v101 = result;
  uint64_t v98 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    __dst = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v100 = MEMORY[0x1E4FBC860];
    if (v4 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_96:
      if (v12 >= 2)
      {
        uint64_t v92 = *v98;
        do
        {
          unint64_t v93 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_125;
          }
          if (!v92) {
            goto LABEL_137;
          }
          uint64_t v94 = *(void *)&v9[16 * v93 + 32];
          uint64_t v95 = *(void *)&v9[16 * v12 + 24];
          sub_1C0D71AA4((uint64_t *)(v92 + 32 * v94), (uint64_t *)(v92 + 32 * *(void *)&v9[16 * v12 + 16]), v92 + 32 * v95, __dst);
          if (v2) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_126;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C063604C((uint64_t)v9);
          }
          if (v93 >= *((void *)v9 + 2)) {
            goto LABEL_127;
          }
          char v96 = &v9[16 * v93 + 32];
          *(void *)char v96 = v94;
          *((void *)v96 + 1) = v95;
          unint64_t v97 = *((void *)v9 + 2);
          if (v12 > v97) {
            goto LABEL_128;
          }
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v97 - v12));
          *((void *)v9 + 2) = v97 - 1;
          unint64_t v12 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_107:
      swift_bridgeObjectRelease();
      *(void *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    sub_1C00BB424();
    uint64_t v8 = sub_1C151ECCC();
    *(void *)(v8 + 16) = v7;
    uint64_t v100 = v8;
    __dst = (uint64_t *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v99 = *a1 + 48;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v105 = v4;
  uint64_t v110 = *a1;
  while (1)
  {
    uint64_t v13 = v10;
    uint64_t v14 = v10 + 1;
    if (v10 + 1 < v4)
    {
      uint64_t v15 = *(void *)(v11 + 32 * v14);
      uint64_t v16 = (uint64_t *)(v11 + 32 * v10);
      uint64_t v106 = v10;
      uint64_t v17 = *v16;
      uint64_t v120 = v16[1];
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C1520DBC();
      sub_1BFD6B880((uint64_t)v119, v15);
      uint64_t v116 = sub_1C1520E0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C1520DBC();
      sub_1BFD6B880((uint64_t)v119, v17);
      uint64_t v114 = sub_1C1520E0C();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v13 = v106;
      swift_bridgeObjectRelease_n();
      uint64_t v14 = v106 + 2;
      if (v106 + 2 < v4)
      {
        uint64_t v111 = v106 + 2;
        uint64_t v18 = v99 + 32 * v106;
        while (1)
        {
          LODWORD(v120) = v116 < v114;
          uint64_t v19 = *(void *)(v18 + 16);
          uint64_t v20 = *(void *)(v18 - 16);
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1C1520DBC();
          sub_1BFD6B880((uint64_t)v119, v19);
          uint64_t v117 = sub_1C1520E0C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1C1520DBC();
          sub_1BFD6B880((uint64_t)v119, v20);
          uint64_t v21 = sub_1C1520E0C();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          if (v120 == v117 >= v21) {
            break;
          }
          v18 += 32;
          uint64_t v4 = v105;
          if (v105 == ++v111)
          {
            uint64_t v14 = v105;
            goto LABEL_22;
          }
        }
        uint64_t v4 = v105;
        uint64_t v14 = v111;
LABEL_22:
        uint64_t v13 = v106;
      }
      uint64_t v11 = v110;
      if (v116 < v114)
      {
        if (v14 < v13) {
          goto LABEL_131;
        }
        if (v13 < v14)
        {
          uint64_t v22 = 32 * v14;
          uint64_t v23 = 32 * v13;
          uint64_t v24 = v14;
          uint64_t v25 = v13;
          do
          {
            if (v25 != --v24)
            {
              if (!v110) {
                goto LABEL_136;
              }
              double v26 = (_OWORD *)(v110 + v23);
              uint64_t v27 = v110 + v22;
              long long v28 = *(_OWORD *)(v110 + v23);
              long long v29 = *(_OWORD *)(v110 + v23 + 16);
              long long v30 = *(_OWORD *)(v110 + v22 - 16);
              *double v26 = *(_OWORD *)(v110 + v22 - 32);
              v26[1] = v30;
              *(_OWORD *)(v27 - 32) = v28;
              *(_OWORD *)(v27 - 16) = v29;
            }
            ++v25;
            v22 -= 32;
            v23 += 32;
          }
          while (v25 < v24);
        }
      }
    }
    if (v14 < v4)
    {
      if (__OFSUB__(v14, v13)) {
        goto LABEL_129;
      }
      if (v14 - v13 < v101) {
        break;
      }
    }
LABEL_48:
    if (v14 < v13) {
      goto LABEL_124;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1C0634CC8(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v43 = *((void *)v9 + 2);
    unint64_t v42 = *((void *)v9 + 3);
    unint64_t v12 = v43 + 1;
    uint64_t v11 = v110;
    if (v43 >= v42 >> 1)
    {
      uint64_t v91 = sub_1C0634CC8((char *)(v42 > 1), v43 + 1, 1, v9);
      uint64_t v11 = v110;
      uint64_t v9 = v91;
    }
    *((void *)v9 + 2) = v12;
    char v44 = v9 + 32;
    uint64_t v45 = &v9[16 * v43 + 32];
    *(void *)uint64_t v45 = v13;
    *((void *)v45 + 1) = v14;
    uint64_t v113 = v14;
    if (v43)
    {
      while (1)
      {
        unint64_t v46 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v51 = &v44[16 * v12];
          uint64_t v52 = *((void *)v51 - 8);
          uint64_t v53 = *((void *)v51 - 7);
          BOOL v57 = __OFSUB__(v53, v52);
          uint64_t v54 = v53 - v52;
          if (v57) {
            goto LABEL_113;
          }
          uint64_t v56 = *((void *)v51 - 6);
          uint64_t v55 = *((void *)v51 - 5);
          BOOL v57 = __OFSUB__(v55, v56);
          uint64_t v49 = v55 - v56;
          char v50 = v57;
          if (v57) {
            goto LABEL_114;
          }
          unint64_t v58 = v12 - 2;
          long long v59 = &v44[16 * v12 - 32];
          uint64_t v61 = *(void *)v59;
          uint64_t v60 = *((void *)v59 + 1);
          BOOL v57 = __OFSUB__(v60, v61);
          uint64_t v62 = v60 - v61;
          if (v57) {
            goto LABEL_116;
          }
          BOOL v57 = __OFADD__(v49, v62);
          uint64_t v63 = v49 + v62;
          if (v57) {
            goto LABEL_119;
          }
          if (v63 >= v54)
          {
            uint64_t v81 = &v44[16 * v46];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v57 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v57) {
              goto LABEL_123;
            }
            BOOL v74 = v49 < v84;
            goto LABEL_85;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v75 = *((void *)v9 + 4);
            uint64_t v76 = *((void *)v9 + 5);
            BOOL v57 = __OFSUB__(v76, v75);
            uint64_t v68 = v76 - v75;
            char v69 = v57;
            goto LABEL_79;
          }
          uint64_t v48 = *((void *)v9 + 4);
          uint64_t v47 = *((void *)v9 + 5);
          BOOL v57 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          char v50 = v57;
        }
        if (v50) {
          goto LABEL_115;
        }
        unint64_t v58 = v12 - 2;
        uint64_t v64 = &v44[16 * v12 - 32];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v67 = __OFSUB__(v65, v66);
        uint64_t v68 = v65 - v66;
        char v69 = v67;
        if (v67) {
          goto LABEL_118;
        }
        uint64_t v70 = &v44[16 * v46];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v57 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v57) {
          goto LABEL_121;
        }
        if (__OFADD__(v68, v73)) {
          goto LABEL_122;
        }
        if (v68 + v73 >= v49)
        {
          BOOL v74 = v49 < v73;
LABEL_85:
          if (v74) {
            unint64_t v46 = v58;
          }
          goto LABEL_87;
        }
LABEL_79:
        if (v69) {
          goto LABEL_117;
        }
        uint64_t v77 = &v44[16 * v46];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v57 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v57) {
          goto LABEL_120;
        }
        if (v80 < v68) {
          goto LABEL_14;
        }
LABEL_87:
        unint64_t v85 = v46 - 1;
        if (v46 - 1 >= v12)
        {
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
          goto LABEL_133;
        }
        if (!v11) {
          goto LABEL_135;
        }
        uint64_t v86 = &v44[16 * v85];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = &v44[16 * v46];
        uint64_t v89 = *((void *)v88 + 1);
        sub_1C0D71AA4((uint64_t *)(v11 + 32 * *(void *)v86), (uint64_t *)(v11 + 32 * *(void *)v88), v11 + 32 * v89, __dst);
        if (v2) {
          goto LABEL_107;
        }
        if (v89 < v87) {
          goto LABEL_110;
        }
        if (v46 > *((void *)v9 + 2)) {
          goto LABEL_111;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v44[16 * v85 + 8] = v89;
        unint64_t v90 = *((void *)v9 + 2);
        if (v46 >= v90) {
          goto LABEL_112;
        }
        unint64_t v12 = v90 - 1;
        memmove(&v44[16 * v46], v88 + 16, 16 * (v90 - 1 - v46));
        *((void *)v9 + 2) = v90 - 1;
        uint64_t v11 = v110;
        if (v90 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_14:
    uint64_t v4 = v105;
    uint64_t v10 = v113;
    if (v113 >= v105) {
      goto LABEL_96;
    }
  }
  uint64_t v31 = v13 + v101;
  if (__OFADD__(v13, v101)) {
    goto LABEL_132;
  }
  if (v31 >= v4) {
    uint64_t v31 = v4;
  }
  if (v31 >= v13)
  {
    if (v14 != v31)
    {
      uint64_t v107 = v13;
      uint64_t v102 = v9;
      uint64_t v103 = v2;
      double v32 = (uint64_t *)(v11 + 32 * v14);
      uint64_t v104 = v31;
      do
      {
        uint64_t v34 = *(void *)(v11 + 32 * v14);
        uint64_t v108 = v32;
        uint64_t v35 = v107;
        uint64_t v112 = v14;
        while (1)
        {
          uint64_t v115 = v35;
          uint64_t v36 = *(v32 - 4);
          uint64_t v120 = *(v32 - 3);
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1C1520DBC();
          sub_1BFD6B880((uint64_t)v119, v34);
          uint64_t v118 = sub_1C1520E0C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1C1520DBC();
          sub_1BFD6B880((uint64_t)v119, v36);
          uint64_t v37 = sub_1C1520E0C();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          if (v118 >= v37) {
            break;
          }
          uint64_t v11 = v110;
          uint64_t v33 = v112;
          if (!v110) {
            goto LABEL_134;
          }
          uint64_t v34 = *v32;
          uint64_t v38 = v32[1];
          uint64_t v39 = v32[2];
          uint64_t v40 = v32[3];
          long long v41 = *((_OWORD *)v32 - 1);
          *(_OWORD *)double v32 = *((_OWORD *)v32 - 2);
          *((_OWORD *)v32 + 1) = v41;
          *(v32 - 3) = v38;
          *(v32 - 2) = v39;
          *(v32 - 1) = v40;
          *(v32 - 4) = v34;
          v32 -= 4;
          uint64_t v35 = v115 + 1;
          if (v112 == v115 + 1) {
            goto LABEL_41;
          }
        }
        uint64_t v11 = v110;
        uint64_t v33 = v112;
LABEL_41:
        uint64_t v14 = v33 + 1;
        double v32 = v108 + 4;
      }
      while (v14 != v104);
      uint64_t v14 = v104;
      uint64_t v9 = v102;
      uint64_t v2 = v103;
      uint64_t v13 = v107;
    }
    goto LABEL_48;
  }
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C0D718BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v13 = result;
  if (a3 != a2)
  {
    uint64_t v15 = *a4;
    uint64_t v4 = (uint64_t *)(*a4 + 32 * a3);
LABEL_5:
    uint64_t v5 = *(void *)(v15 + 32 * a3);
    uint64_t v14 = v4;
    uint64_t v16 = a3;
    uint64_t v17 = v13;
    while (1)
    {
      uint64_t v6 = *(v4 - 4);
      uint64_t v20 = *(v4 - 3);
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C1520DBC();
      sub_1BFD6B880((uint64_t)v19, v5);
      uint64_t v18 = sub_1C1520E0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C1520DBC();
      sub_1BFD6B880((uint64_t)v19, v6);
      uint64_t v7 = sub_1C1520E0C();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease_n();
      if (v18 >= v7)
      {
LABEL_4:
        a3 = v16 + 1;
        uint64_t v4 = v14 + 4;
        if (v16 + 1 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v15) {
        break;
      }
      uint64_t v5 = *v4;
      uint64_t v8 = v4[1];
      uint64_t v9 = v4[2];
      uint64_t v10 = v4[3];
      long long v11 = *((_OWORD *)v4 - 1);
      *(_OWORD *)uint64_t v4 = *((_OWORD *)v4 - 2);
      *((_OWORD *)v4 + 1) = v11;
      *(v4 - 3) = v8;
      *(v4 - 2) = v9;
      *(v4 - 1) = v10;
      *(v4 - 4) = v5;
      v4 -= 4;
      if (v16 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0D71AA4(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 5;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 5;
  uint64_t v47 = __src;
  unint64_t v46 = __dst;
  if (v9 >= v11 >> 5)
  {
    if (v10 < -31) {
      goto LABEL_44;
    }
    if (__dst != a2 || &a2[4 * v12] <= __dst) {
      memmove(__dst, a2, 32 * v12);
    }
    uint64_t v20 = (char *)&v4[4 * v12];
    uint64_t v45 = v20;
    uint64_t v47 = v5;
    if (v6 >= v5 || v10 < 32) {
      goto LABEL_43;
    }
    uint64_t v21 = (uint64_t *)(a3 - 32);
    uint64_t v22 = v5;
    uint64_t v35 = v4;
    unint64_t v42 = v6;
    while (1)
    {
      unint64_t v43 = v5;
      uint64_t v40 = v20;
      long long v41 = v21 + 4;
      uint64_t v23 = *((void *)v20 - 4);
      v20 -= 32;
      uint64_t v24 = *(v22 - 4);
      v22 -= 4;
      uint64_t v36 = v21;
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v25 = v24;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C1520DBC();
      sub_1BFD6B880((uint64_t)v44, v23);
      uint64_t v26 = sub_1C1520E0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C1520DBC();
      sub_1BFD6B880((uint64_t)v44, v25);
      uint64_t v27 = sub_1C1520E0C();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      if (v26 >= v27)
      {
        uint64_t v45 = v20;
        uint64_t v22 = v43;
        long long v28 = v36;
        if (v41 >= (_OWORD *)v40 && v36 < (uint64_t *)v40)
        {
          unint64_t v30 = (unint64_t)v35;
          unint64_t v31 = (unint64_t)v42;
          if (v41 != (_OWORD *)v40)
          {
            long long v32 = *((_OWORD *)v20 + 1);
            *(_OWORD *)uint64_t v36 = *(_OWORD *)v20;
            *((_OWORD *)v36 + 1) = v32;
          }
          goto LABEL_41;
        }
        long long v33 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v36 = *(_OWORD *)v20;
        *((_OWORD *)v36 + 1) = v33;
      }
      else
      {
        uint64_t v20 = v40;
        long long v28 = v36;
        if (v41 != (_OWORD *)v43 || v36 >= v43)
        {
          long long v29 = *((_OWORD *)v22 + 1);
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v22;
          *((_OWORD *)v36 + 1) = v29;
        }
        uint64_t v47 = v22;
      }
      unint64_t v30 = (unint64_t)v35;
      unint64_t v31 = (unint64_t)v42;
LABEL_41:
      if ((unint64_t)v22 > v31)
      {
        uint64_t v21 = v28 - 4;
        uint64_t v5 = v22;
        if ((unint64_t)v20 > v30) {
          continue;
        }
      }
      goto LABEL_43;
    }
  }
  if (v7 >= -31)
  {
    if (__dst != __src || &__src[4 * v9] <= __dst) {
      memmove(__dst, __src, 32 * v9);
    }
    uint64_t v37 = (char *)&v4[4 * v9];
    uint64_t v45 = v37;
    if ((unint64_t)v5 < a3 && v7 >= 32)
    {
      do
      {
        uint64_t v13 = *v5;
        uint64_t v14 = *v4;
        uint64_t v15 = v4;
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C1520DBC();
        sub_1BFD6B880((uint64_t)v44, v13);
        uint64_t v39 = sub_1C1520E0C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1C1520DBC();
        sub_1BFD6B880((uint64_t)v44, v14);
        uint64_t v16 = sub_1C1520E0C();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        if (v39 >= v16)
        {
          uint64_t v17 = v5;
          if (v6 != v4)
          {
            long long v19 = *((_OWORD *)v4 + 1);
            *(_OWORD *)uint64_t v6 = *(_OWORD *)v4;
            *((_OWORD *)v6 + 1) = v19;
          }
          v4 += 4;
          unint64_t v46 = v15 + 4;
        }
        else
        {
          uint64_t v17 = v5 + 4;
          if (v6 < v5 || v6 >= v17 || v6 != v5)
          {
            long long v18 = *((_OWORD *)v5 + 1);
            *(_OWORD *)uint64_t v6 = *(_OWORD *)v5;
            *((_OWORD *)v6 + 1) = v18;
          }
        }
        v6 += 4;
        if (v4 >= (uint64_t *)v37) {
          break;
        }
        uint64_t v5 = v17;
      }
      while ((unint64_t)v17 < a3);
      uint64_t v47 = v6;
    }
LABEL_43:
    sub_1C0635DAC((void **)&v47, (const void **)&v46, &v45);
    return 1;
  }
LABEL_44:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0D71F6C()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D71FBC()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C0D7202C()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 128)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  }
  if (*(void *)(v0 + 168)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  }
  if (*(void *)(v0 + 208)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0D720BC()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 144) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0D72134(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0D7217C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0D721D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0D7222C(void **__src, void **a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = ((char *)a2 - (char *)__src) / 24;
  uint64_t v8 = a3 - (void)a2;
  uint64_t v9 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v53 = __src;
  uint64_t v52 = a4;
  if (v7 >= v9)
  {
    if (v8 < -23) {
      goto LABEL_76;
    }
    if (a4 != a2 || &a2[3 * v9] <= a4) {
      memmove(a4, a2, 24 * v9);
    }
    uint64_t v23 = (char *)&a4[3 * v9];
    unint64_t v51 = v23;
    uint64_t v53 = v4;
    if (v5 >= v4 || v8 < 24)
    {
LABEL_75:
      sub_1C0635E98((void **)&v53, (const void **)&v52, &v51);
      return 1;
    }
    unint64_t v24 = a3 - 24;
    uint64_t v25 = v4;
    while (1)
    {
      uint64_t v48 = v4;
      unint64_t v44 = v24;
      uint64_t v26 = (void *)(v24 + 24);
      uint64_t v27 = (void *)*((void *)v23 - 3);
      long long v28 = (void *)*((void *)v23 - 2);
      long long v29 = *(v25 - 3);
      unint64_t v30 = *(v25 - 2);
      v25 -= 3;
      uint64_t v40 = v29;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C151820C();
      if (v27 == v49 && v28 == v50)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        unint64_t v33 = v44;
LABEL_51:
        if (v26 != v48 || v33 >= (unint64_t)v48)
        {
          long long v34 = *(_OWORD *)v25;
          *(void *)(v33 + 16) = v25[2];
          *(_OWORD *)unint64_t v33 = v34;
        }
        uint64_t v53 = v25;
        goto LABEL_55;
      }
      uint64_t v39 = v26;
      char v32 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v32)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v33 = v44;
        uint64_t v26 = v39;
        goto LABEL_51;
      }
      sub_1C151820C();
      if (v40 == v49 && v30 == v50) {
        break;
      }
      char v35 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v35)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_63;
      }
      if (v27 == v40 && v28 == v30)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_63;
      }
      char v37 = sub_1C1520A9C();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v26 = v39;
      unint64_t v33 = v44;
      if (v37) {
        goto LABEL_51;
      }
LABEL_64:
      unint64_t v51 = v23 - 24;
      uint64_t v25 = v48;
      if (v26 >= (void *)v23 && v33 < (unint64_t)v23 && v26 == (void *)v23)
      {
        v23 -= 24;
      }
      else
      {
        long long v36 = *(_OWORD *)(v23 - 24);
        *(void *)(v33 + 16) = *((void *)v23 - 1);
        *(_OWORD *)unint64_t v33 = v36;
        v23 -= 24;
      }
LABEL_55:
      if (v25 > v5)
      {
        unint64_t v24 = v33 - 24;
        uint64_t v4 = v25;
        if (v23 > (char *)a4) {
          continue;
        }
      }
      goto LABEL_75;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
LABEL_63:
    uint64_t v26 = v39;
    unint64_t v33 = v44;
    goto LABEL_64;
  }
  if (v6 >= -23)
  {
    if (a4 != __src || &__src[3 * v7] <= a4) {
      memmove(a4, __src, 24 * v7);
    }
    unint64_t v43 = &a4[3 * v7];
    unint64_t v51 = (char *)v43;
    if ((unint64_t)v4 < a3 && v6 >= 24)
    {
      uint64_t v10 = a4;
      while (1)
      {
        unint64_t v46 = v5;
        uint64_t v47 = v4;
        uint64_t v11 = *v4;
        uint64_t v12 = v4[1];
        uint64_t v13 = *v10;
        uint64_t v14 = v10[1];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1C151820C();
        if (v11 == v49 && v12 == v50)
        {
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          __dsta = v13;
          char v16 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if (v16)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1C151820C();
            if (__dsta == v49 && v14 == v50)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_23;
            }
            char v20 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            if (v20)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_26;
            }
            if (v11 == __dsta && v12 == v14)
            {
              swift_release();
              swift_release();
LABEL_23:
              swift_bridgeObjectRelease_n();
LABEL_26:
              uint64_t v17 = v46;
              if (v46 != v10)
              {
                long long v21 = *(_OWORD *)v10;
                v46[2] = v10[2];
                *(_OWORD *)unint64_t v46 = v21;
              }
              v10 += 3;
              uint64_t v52 = v10;
              long long v18 = v47;
              goto LABEL_29;
            }
            char v22 = sub_1C1520A9C();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            if ((v22 & 1) == 0) {
              goto LABEL_26;
            }
          }
        }
        uint64_t v17 = v46;
        long long v18 = v47 + 3;
        if (v46 < v47 || v46 >= v18 || v46 != v47)
        {
          long long v19 = *(_OWORD *)v47;
          v46[2] = v47[2];
          *(_OWORD *)unint64_t v46 = v19;
        }
LABEL_29:
        uint64_t v5 = v17 + 3;
        if (v10 < v43)
        {
          uint64_t v4 = v18;
          if ((unint64_t)v18 < a3) {
            continue;
          }
        }
        uint64_t v53 = v5;
        goto LABEL_75;
      }
    }
    goto LABEL_75;
  }
LABEL_76:
  swift_release();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0D728C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v18 = result;
  if (a3 != a2)
  {
    uint64_t v20 = *a4;
    uint64_t v4 = (void *)(*a4 + 24 * a3);
LABEL_7:
    int64_t v6 = (uint64_t *)(v20 + 24 * a3);
    uint64_t v7 = *v6;
    uint64_t v8 = v6[1];
    uint64_t v9 = v18;
    long long v19 = v4;
    uint64_t v21 = a3;
    while (1)
    {
      uint64_t v26 = v9;
      uint64_t v10 = *(v4 - 2);
      uint64_t v23 = *(v4 - 3);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C151820C();
      if (v7 == v24 && v8 == v25)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease_n();
        uint64_t v13 = v26;
        uint64_t v5 = v21;
      }
      else
      {
        uint64_t v22 = v10;
        char v12 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v12)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v5 = v21;
          uint64_t v13 = v26;
        }
        else
        {
          sub_1C151820C();
          if (v23 == v24 && v22 == v25)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_26;
          }
          char v14 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if (v14)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t result = swift_bridgeObjectRelease();
            goto LABEL_5;
          }
          if (v7 == v23 && v8 == v22)
          {
            swift_release();
            swift_release();
LABEL_26:
            uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
            uint64_t v5 = v21;
LABEL_6:
            a3 = v5 + 1;
            uint64_t v4 = v19 + 3;
            if (a3 == a2) {
              return result;
            }
            goto LABEL_7;
          }
          char v15 = sub_1C1520A9C();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v5 = v21;
          uint64_t v13 = v26;
          if ((v15 & 1) == 0) {
            goto LABEL_6;
          }
        }
      }
      if (!v20) {
        break;
      }
      uint64_t v7 = *v4;
      uint64_t v8 = v4[1];
      uint64_t v16 = v4[2];
      *(_OWORD *)uint64_t v4 = *(_OWORD *)(v4 - 3);
      v4[2] = *(v4 - 1);
      *(v4 - 2) = v8;
      *(v4 - 1) = v16;
      *(v4 - 3) = v7;
      v4 -= 3;
      uint64_t v9 = v13 + 1;
      if (v5 == v9) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0D72B84(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  swift_retain_n();
  uint64_t v4 = sub_1C152086C();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_203;
    }
    if (v3)
    {
      swift_retain();
      sub_1C0D728C4(0, v3, 1, a1);
    }
    swift_release_n();
    return swift_release();
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_211;
  }
  uint64_t v129 = v3;
  uint64_t v123 = v4;
  uint64_t v132 = v1;
  uint64_t v120 = a1;
  if (v3 < 2)
  {
    uint64_t v131 = (void **)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v122 = MEMORY[0x1E4FBC860];
    if (v3 == 1) {
      goto LABEL_13;
    }
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_167:
    char v126 = v10;
    if (v12 >= 2)
    {
      uint64_t v112 = *v120;
      do
      {
        unint64_t v113 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_198;
        }
        if (!v112) {
          goto LABEL_210;
        }
        uint64_t v114 = *(void *)&v126[16 * v113 + 32];
        uint64_t v115 = *(void *)&v126[16 * v12 + 24];
        uint64_t v116 = (void **)(v112 + 24 * *(void *)&v126[16 * v12 + 16]);
        swift_retain();
        sub_1C0D7222C((void **)(v112 + 24 * v114), v116, v112 + 24 * v115, v131);
        if (v132) {
          goto LABEL_164;
        }
        swift_release();
        if (v115 < v114) {
          goto LABEL_199;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v126 = sub_1C063604C((uint64_t)v126);
        }
        if (v113 >= *((void *)v126 + 2)) {
          goto LABEL_200;
        }
        uint64_t v117 = &v126[16 * v113 + 32];
        *(void *)uint64_t v117 = v114;
        *((void *)v117 + 1) = v115;
        unint64_t v118 = *((void *)v126 + 2);
        if (v12 > v118) {
          goto LABEL_201;
        }
        memmove(&v126[16 * v12 + 16], &v126[16 * v12 + 32], 16 * (v118 - v12));
        *((void *)v126 + 2) = v118 - 1;
        unint64_t v12 = v118 - 1;
      }
      while (v118 > 2);
    }
    swift_bridgeObjectRelease();
LABEL_179:
    *(void *)(v122 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v6 = v5 >> 1;
  sub_1C00BB490();
  uint64_t v7 = sub_1C151ECCC();
  *(void *)(v7 + 16) = v6;
  uint64_t v122 = v7;
  uint64_t v131 = (void **)(v7 + 32);
LABEL_13:
  uint64_t v8 = *a1;
  uint64_t v9 = 0;
  uint64_t v121 = v8 + 16;
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v11 = v129;
  uint64_t v135 = v8;
  while (2)
  {
    uint64_t v13 = v9++;
    if (v9 >= v11)
    {
LABEL_72:
      if (v9 >= v11) {
        goto LABEL_107;
      }
      goto LABEL_73;
    }
    uint64_t v136 = v9;
    char v14 = (uint64_t *)(v8 + 24 * v9);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = (uint64_t *)(v8 + 24 * v13);
    uint64_t v18 = v17[1];
    uint64_t v143 = *v17;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C151820C();
    BOOL v19 = v16 == v141 && v15 == v142;
    uint64_t v127 = v13;
    if (v19)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      int v133 = 1;
      goto LABEL_24;
    }
    char v20 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v20)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      int v133 = 1;
      uint64_t v13 = v127;
      goto LABEL_24;
    }
    sub_1C151820C();
    if (v143 == v141 && v18 == v142)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      int v133 = 0;
      uint64_t v13 = v127;
      goto LABEL_24;
    }
    char v36 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
    {
      if (v16 == v143 && v15 == v18)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        uint64_t v13 = v127;
        uint64_t v11 = v129;
        uint64_t v21 = v127 + 2;
        uint64_t v22 = v136;
        if (v127 + 2 >= v129)
        {
LABEL_161:
          uint64_t v9 = v21;
          uint64_t v8 = v135;
          if (v21 >= v11) {
            goto LABEL_107;
          }
          goto LABEL_73;
        }
        int v133 = 0;
        goto LABEL_160;
      }
      int v133 = sub_1C1520A9C();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v13 = v127;
LABEL_24:
      uint64_t v21 = v13 + 2;
      uint64_t v11 = v129;
      uint64_t v22 = v136;
      uint64_t v8 = v135;
      if (v13 + 2 >= v129) {
        goto LABEL_60;
      }
      goto LABEL_25;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v13 = v127;
    uint64_t v11 = v129;
    uint64_t v21 = v127 + 2;
    if (v127 + 2 >= v129) {
      goto LABEL_161;
    }
    int v133 = 0;
    uint64_t v22 = v136;
LABEL_160:
    uint64_t v8 = v135;
LABEL_25:
    uint64_t v23 = v121 + 24 * v21;
    uint64_t v24 = v21;
    do
    {
      uint64_t v144 = v24;
      uint64_t v26 = *(void *)(v23 - 16);
      uint64_t v25 = *(void *)(v23 - 8);
      uint64_t v27 = (uint64_t *)(v8 + 24 * v22);
      uint64_t v28 = v27[1];
      uint64_t v139 = *v27;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C151820C();
      if (v26 == v141 && v25 == v142)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v8 = v135;
        if ((v133 & 1) == 0) {
          goto LABEL_71;
        }
        goto LABEL_27;
      }
      char v30 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v30)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v8 = v135;
        if ((v133 & 1) == 0)
        {
LABEL_71:
          uint64_t v9 = v144;
          uint64_t v13 = v127;
          uint64_t v11 = v129;
          goto LABEL_72;
        }
      }
      else
      {
        sub_1C151820C();
        if (v139 == v141 && v28 == v142)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          uint64_t v8 = v135;
          if (v133) {
            goto LABEL_51;
          }
          goto LABEL_27;
        }
        char v32 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v32)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
        if (v26 == v139 && v25 == v28)
        {
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
LABEL_50:
          uint64_t v8 = v135;
          if (v133)
          {
LABEL_51:
            uint64_t v13 = v127;
            uint64_t v11 = v129;
            uint64_t v21 = v144;
            goto LABEL_61;
          }
          goto LABEL_27;
        }
        int v34 = sub_1C1520A9C();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v8 = v135;
        if ((v133 ^ v34))
        {
          uint64_t v13 = v127;
          uint64_t v11 = v129;
          uint64_t v21 = v144;
          goto LABEL_60;
        }
      }
LABEL_27:
      uint64_t v22 = v144;
      uint64_t v24 = v144 + 1;
      v23 += 24;
    }
    while (v144 + 1 < v129);
    uint64_t v21 = v144 + 1;
    uint64_t v13 = v127;
    uint64_t v11 = v129;
LABEL_60:
    uint64_t v9 = v21;
    if ((v133 & 1) == 0) {
      goto LABEL_72;
    }
LABEL_61:
    if (v21 < v13) {
      goto LABEL_206;
    }
    if (v13 < v21)
    {
      uint64_t v37 = 24 * v21;
      uint64_t v38 = 24 * v13;
      uint64_t v39 = v21;
      uint64_t v40 = v13;
      do
      {
        if (v40 != --v39)
        {
          if (!v8) {
            goto LABEL_209;
          }
          uint64_t v41 = v8 + v38;
          uint64_t v42 = v8 + v37;
          uint64_t v43 = *(void *)(v8 + v38);
          long long v44 = *(_OWORD *)(v8 + v38 + 8);
          long long v45 = *(_OWORD *)(v8 + v37 - 24);
          *(void *)(v41 + 16) = *(void *)(v8 + v37 - 8);
          *(_OWORD *)uint64_t v41 = v45;
          *(void *)(v42 - 24) = v43;
          *(_OWORD *)(v42 - 16) = v44;
        }
        ++v40;
        v37 -= 24;
        v38 += 24;
      }
      while (v40 < v39);
    }
    uint64_t v9 = v21;
    if (v21 >= v11) {
      goto LABEL_107;
    }
LABEL_73:
    if (__OFSUB__(v9, v13)) {
      goto LABEL_202;
    }
    if (v9 - v13 >= v123) {
      goto LABEL_107;
    }
    if (__OFADD__(v13, v123)) {
      goto LABEL_204;
    }
    if (v13 + v123 >= v11) {
      uint64_t v46 = v11;
    }
    else {
      uint64_t v46 = v13 + v123;
    }
    if (v46 >= v13)
    {
      if (v9 == v46) {
        goto LABEL_107;
      }
      unint64_t v125 = v10;
      uint64_t v128 = v13;
      uint64_t v47 = (void *)(v8 + 24 * v9);
      uint64_t v124 = v46;
      while (2)
      {
        uint64_t v49 = (uint64_t *)(v8 + 24 * v9);
        uint64_t v50 = *v49;
        uint64_t v51 = v49[1];
        uint64_t v130 = v47;
        uint64_t v137 = v9;
        while (2)
        {
          uint64_t v145 = v13;
          uint64_t v52 = *(v47 - 2);
          uint64_t v140 = *(v47 - 3);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C151820C();
          if (v50 == v141 && v51 == v142)
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
LABEL_92:
            uint64_t v8 = v135;
LABEL_99:
            if (!v8) {
              goto LABEL_207;
            }
            uint64_t v50 = *v47;
            uint64_t v51 = v47[1];
            uint64_t v57 = v47[2];
            *(_OWORD *)uint64_t v47 = *(_OWORD *)(v47 - 3);
            v47[2] = *(v47 - 1);
            *(v47 - 2) = v51;
            *(v47 - 1) = v57;
            *(v47 - 3) = v50;
            v47 -= 3;
            ++v13;
            uint64_t v48 = v137;
            if (v137 == v145 + 1) {
              goto LABEL_83;
            }
            continue;
          }
          break;
        }
        uint64_t v134 = v52;
        char v54 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v54)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_92;
        }
        sub_1C151820C();
        if (v140 == v141 && v134 == v142)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          uint64_t v8 = v135;
          uint64_t v48 = v137;
          goto LABEL_83;
        }
        char v55 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v55)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_104;
        }
        if (v50 != v140 || v51 != v134)
        {
          char v56 = sub_1C1520A9C();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v8 = v135;
          if ((v56 & 1) == 0) {
            goto LABEL_105;
          }
          goto LABEL_99;
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
LABEL_104:
        uint64_t v8 = v135;
LABEL_105:
        uint64_t v48 = v137;
LABEL_83:
        uint64_t v9 = v48 + 1;
        uint64_t v47 = v130 + 3;
        uint64_t v13 = v128;
        if (v9 != v124) {
          continue;
        }
        break;
      }
      uint64_t v9 = v124;
      uint64_t v10 = v125;
LABEL_107:
      if (v9 < v13) {
        goto LABEL_197;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1C0634CC8(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v59 = *((void *)v10 + 2);
      unint64_t v58 = *((void *)v10 + 3);
      unint64_t v12 = v59 + 1;
      if (v59 >= v58 >> 1) {
        uint64_t v10 = sub_1C0634CC8((char *)(v58 > 1), v59 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v12;
      uint64_t v60 = v10 + 32;
      uint64_t v61 = &v10[16 * v59 + 32];
      *(void *)uint64_t v61 = v13;
      *((void *)v61 + 1) = v9;
      if (!v59)
      {
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v11 = v129;
        if (v9 >= v129) {
          goto LABEL_167;
        }
        continue;
      }
      uint64_t v138 = v9;
LABEL_114:
      unint64_t v62 = v12 - 1;
      if (v12 >= 4)
      {
        BOOL v67 = &v60[16 * v12];
        uint64_t v68 = *((void *)v67 - 8);
        uint64_t v69 = *((void *)v67 - 7);
        BOOL v73 = __OFSUB__(v69, v68);
        uint64_t v70 = v69 - v68;
        if (v73) {
          goto LABEL_186;
        }
        uint64_t v72 = *((void *)v67 - 6);
        uint64_t v71 = *((void *)v67 - 5);
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v65 = v71 - v72;
        char v66 = v73;
        if (v73) {
          goto LABEL_187;
        }
        unint64_t v74 = v12 - 2;
        uint64_t v75 = &v60[16 * v12 - 32];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v73 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v73) {
          goto LABEL_189;
        }
        BOOL v73 = __OFADD__(v65, v78);
        uint64_t v79 = v65 + v78;
        if (v73) {
          goto LABEL_192;
        }
        if (v79 >= v70)
        {
          unint64_t v97 = &v60[16 * v62];
          uint64_t v99 = *(void *)v97;
          uint64_t v98 = *((void *)v97 + 1);
          BOOL v73 = __OFSUB__(v98, v99);
          uint64_t v100 = v98 - v99;
          if (v73) {
            goto LABEL_196;
          }
          BOOL v90 = v65 < v100;
        }
        else
        {
LABEL_127:
          if (v66) {
            goto LABEL_188;
          }
          unint64_t v74 = v12 - 2;
          uint64_t v80 = &v60[16 * v12 - 32];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v84 = v81 - v82;
          char v85 = v83;
          if (v83) {
            goto LABEL_191;
          }
          uint64_t v86 = &v60[16 * v62];
          uint64_t v88 = *(void *)v86;
          uint64_t v87 = *((void *)v86 + 1);
          BOOL v73 = __OFSUB__(v87, v88);
          uint64_t v89 = v87 - v88;
          if (v73) {
            goto LABEL_194;
          }
          if (__OFADD__(v84, v89)) {
            goto LABEL_195;
          }
          if (v84 + v89 < v65) {
            goto LABEL_139;
          }
          BOOL v90 = v65 < v89;
        }
        if (v90) {
          unint64_t v62 = v74;
        }
      }
      else
      {
        if (v12 == 3)
        {
          uint64_t v64 = *((void *)v10 + 4);
          uint64_t v63 = *((void *)v10 + 5);
          BOOL v73 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          char v66 = v73;
          goto LABEL_127;
        }
        uint64_t v91 = *((void *)v10 + 4);
        uint64_t v92 = *((void *)v10 + 5);
        BOOL v73 = __OFSUB__(v92, v91);
        uint64_t v84 = v92 - v91;
        char v85 = v73;
LABEL_139:
        if (v85) {
          goto LABEL_190;
        }
        unint64_t v93 = &v60[16 * v62];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v73 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v73) {
          goto LABEL_193;
        }
        if (v96 < v84) {
          goto LABEL_15;
        }
      }
      unint64_t v101 = v62 - 1;
      if (v62 - 1 >= v12)
      {
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        __break(1u);
LABEL_198:
        __break(1u);
LABEL_199:
        __break(1u);
LABEL_200:
        __break(1u);
LABEL_201:
        __break(1u);
LABEL_202:
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
        break;
      }
      if (!v8) {
        goto LABEL_208;
      }
      uint64_t v102 = v8;
      uint64_t v103 = &v60[16 * v101];
      uint64_t v104 = *(void *)v103;
      unint64_t v105 = v62;
      uint64_t v106 = &v60[16 * v62];
      uint64_t v107 = *((void *)v106 + 1);
      uint64_t v108 = (void **)(v8 + 24 * *(void *)v103);
      uint64_t v146 = (void **)(v102 + 24 * *(void *)v106);
      unint64_t v109 = v102 + 24 * v107;
      swift_retain();
      sub_1C0D7222C(v108, v146, v109, v131);
      if (v132)
      {
LABEL_164:
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_179;
      }
      swift_release();
      if (v107 < v104) {
        goto LABEL_183;
      }
      if (v105 > *((void *)v10 + 2)) {
        goto LABEL_184;
      }
      unint64_t v110 = v105;
      *(void *)uint64_t v103 = v104;
      uint64_t v60 = v10 + 32;
      *(void *)&v10[16 * v101 + 40] = v107;
      unint64_t v111 = *((void *)v10 + 2);
      if (v110 >= v111) {
        goto LABEL_185;
      }
      unint64_t v12 = v111 - 1;
      memmove(v106, v106 + 16, 16 * (v111 - 1 - v110));
      *((void *)v10 + 2) = v111 - 1;
      uint64_t v8 = v135;
      uint64_t v9 = v138;
      if (v111 <= 2) {
        goto LABEL_15;
      }
      goto LABEL_114;
    }
    break;
  }
  __break(1u);
LABEL_206:
  __break(1u);
LABEL_207:
  swift_release_n();
  __break(1u);
LABEL_208:
  swift_release_n();
  __break(1u);
LABEL_209:
  swift_release_n();
  __break(1u);
LABEL_210:
  swift_release_n();
  __break(1u);
LABEL_211:
  swift_release_n();
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C0D739D4(void **a1)
{
  uint64_t v2 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1C06365F4(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  swift_retain();
  sub_1C0D72B84(v5);
  swift_release();
  *a1 = v2;
  return swift_release_n();
}

uint64_t sub_1C0D73A78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0D73AE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0D73B4C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C151CF6C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C0D73BC0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C151CF6C();
  swift_release();
  return swift_release();
}

uint64_t sub_1C0D73C38()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C151CF6C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C0D73CAC()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__items;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F1AC70];
  sub_1C0D7408C(0, &qword_1EA1A6B48, (uint64_t (*)(uint64_t))sub_1C00BB154, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v1, v3);
  uint64_t v4 = v0 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__selection;
  sub_1C0D7408C(0, &qword_1EA1A6B50, (uint64_t (*)(uint64_t))sub_1C017F2CC, v2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__metrics;
  sub_1C0D7408C(0, &qword_1EA1A6B58, (uint64_t (*)(uint64_t))sub_1C0D74058, v2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D73E58()
{
  return type metadata accessor for DebugFormatFileTreeModel();
}

uint64_t type metadata accessor for DebugFormatFileTreeModel()
{
  uint64_t result = qword_1EA1A6B38;
  if (!qword_1EA1A6B38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0D73EAC()
{
  sub_1C0D7408C(319, &qword_1EA1A6B48, (uint64_t (*)(uint64_t))sub_1C00BB154, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F)
  {
    sub_1C0D7408C(319, &qword_1EA1A6B50, (uint64_t (*)(uint64_t))sub_1C017F2CC, MEMORY[0x1E4F1AC70]);
    if (v1 <= 0x3F)
    {
      sub_1C0D7408C(319, &qword_1EA1A6B58, (uint64_t (*)(uint64_t))sub_1C0D74058, MEMORY[0x1E4F1AC70]);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1C0D74058(uint64_t a1)
{
}

void sub_1C0D7408C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0D740F0()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_1C0D740FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C151CF4C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0D74154(uint64_t a1, uint64_t a2, int a3)
{
  int v29 = a3;
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F1AC70];
  sub_1C0D7408C(0, &qword_1EA1A6B58, (uint64_t (*)(uint64_t))sub_1C0D74058, MEMORY[0x1E4F1AC70]);
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v24 - v6;
  sub_1C0D7408C(0, &qword_1EA1A6B50, (uint64_t (*)(uint64_t))sub_1C017F2CC, v4);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v24 - v11;
  sub_1C0D7408C(0, &qword_1EA1A6B48, (uint64_t (*)(uint64_t))sub_1C00BB154, v4);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v24 - v16;
  uint64_t v18 = v3 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__items;
  *(void *)&v32[0] = MEMORY[0x1E4FBC860];
  sub_1C00BB154(0);
  uint64_t v24 = v19;
  sub_1C151CF5C();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v18, v17, v14);
  uint64_t v20 = v3 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__selection;
  sub_1C017F2B4(v32);
  sub_1C09CFC44((uint64_t)v32, (uint64_t)v31);
  sub_1C017F2CC();
  sub_1C151CF5C();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v20, v12, v9);
  uint64_t v21 = v3 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__metrics;
  v31[0] = 0;
  sub_1C0D74058(0);
  sub_1C151CF5C();
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v21, v7, v26);
  *(void *)(v3 + 16) = v27;
  swift_retain();
  uint64_t v22 = sub_1C1118198();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
  uint64_t v30 = v22;
  sub_1C151CF5C();
  swift_endAccess();
  *(unsigned char *)(v3 + 24) = v29;
  return v3;
}

char *initializeBufferWithCopyOfBuffer for FormatButtonNodeDataAction(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for FormatAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *a2;
        uint64_t v8 = (id *)(a2 + 1);
        unsigned int v9 = *((unsigned __int8 *)a2 + 16);
        swift_bridgeObjectRetain();
        if (v9 <= 0xFD)
        {
          id v39 = *v8;
          sub_1BFF43A68(*v8, v9);
          *((void *)a1 + 1) = v39;
          a1[16] = v9;
        }
        else
        {
          *((void *)a1 + 1) = *v8;
          a1[16] = *((unsigned char *)a2 + 16);
        }
        goto LABEL_30;
      case 1u:
        uint64_t v11 = *a2;
        uint64_t v12 = (uint64_t)a2[1];
        uint64_t v13 = (uint64_t)a2[2];
        uint64_t v14 = (uint64_t)a2[3];
        uint64_t v15 = (uint64_t)a2[4];
        char v16 = *((unsigned char *)a2 + 41);
        unsigned __int8 v17 = *((unsigned char *)a2 + 40);
        sub_1BFF43AA4(*a2, v12, v13, v14, v15, v17, v16);
        *(void *)a1 = v11;
        *((void *)a1 + 1) = v12;
        *((void *)a1 + 2) = v13;
        *((void *)a1 + 3) = v14;
        *((void *)a1 + 4) = v15;
        a1[40] = v17;
        a1[41] = v16;
        uint64_t v18 = a2[7];
        *((void *)a1 + 6) = a2[6];
        LOBYTE(v11) = *((unsigned char *)a2 + 64);
        swift_bridgeObjectRetain();
        sub_1BFF43A68(v18, v11);
        *((void *)a1 + 7) = v18;
        a1[64] = (char)v11;
        goto LABEL_30;
      case 2u:
        *(void *)a1 = *a2;
        swift_retain();
        goto LABEL_30;
      case 4u:
        uint64_t v19 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v19;
        uint64_t v20 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v20;
        uint64_t v21 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v21;
        uint64_t v63 = v6;
        uint64_t v22 = (uint64_t)a2[6];
        uint64_t v23 = (uint64_t)a2[7];
        uint64_t v24 = (uint64_t)a2[8];
        uint64_t v25 = (uint64_t)a2[9];
        char v26 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF429DC(v22, v23, v24, v25, v26);
        *((void *)a1 + 6) = v22;
        *((void *)a1 + 7) = v23;
        *((void *)a1 + 8) = v24;
        *((void *)a1 + 9) = v25;
        a1[80] = v26;
        uint64_t v27 = a2[12];
        *((void *)a1 + 11) = a2[11];
        *((void *)a1 + 12) = v27;
        uint64_t v28 = a2[14];
        *((void *)a1 + 13) = a2[13];
        *((void *)a1 + 14) = v28;
        *((void *)a1 + 15) = a2[15];
        swift_bridgeObjectRetain();
        uint64_t v6 = v63;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_30;
      case 5u:
        uint64_t v29 = type metadata accessor for FormatPurchaseData(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v40 = type metadata accessor for FormatPurchaseLandingPageData();
          uint64_t v41 = *(void *)(v40 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v41 + 48))(a2, 1, v40))
          {
            sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy(a1, a2, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            uint64_t v65 = v6;
            long long v45 = a2[1];
            *(void *)a1 = *a2;
            *((void *)a1 + 1) = v45;
            uint64_t v46 = *(int *)(v40 + 20);
            __dst = &a1[v46];
            uint64_t v47 = (char *)a2 + v46;
            uint64_t v48 = type metadata accessor for FormatPostPurchaseData();
            uint64_t v49 = *(void *)(v48 - 8);
            uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
            uint64_t v51 = v48;
            swift_bridgeObjectRetain();
            if (v50(v47, 1, v51))
            {
              sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(__dst, v47, *(void *)(*(void *)(v52 - 8) + 64));
              uint64_t v6 = v65;
            }
            else
            {
              uint64_t v61 = v51;
              uint64_t v53 = sub_1C1515FDC();
              uint64_t v54 = *(void *)(v53 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v47, 2, v53))
              {
                char v55 = __dst;
                memcpy(__dst, v47, *(void *)(v49 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v54 + 16))(__dst, v47, v53);
                uint64_t v56 = v53;
                char v55 = __dst;
                (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 2, v56);
              }
              uint64_t v6 = v65;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v55, 0, 1, v61);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(a1, 0, 1, v40);
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
            goto LABEL_30;
          }
          uint64_t v64 = v6;
          unint64_t v31 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v31;
          uint64_t v32 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          unint64_t v33 = &a1[v32];
          int v34 = (char *)a2 + v32;
          uint64_t v35 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v36 = *(void *)(v35 - 8);
          uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
          swift_bridgeObjectRetain();
          if (v37(v34, 1, v35))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
            uint64_t v6 = v64;
          }
          else
          {
            uint64_t v43 = sub_1C1515FDC();
            uint64_t v44 = *(void *)(v43 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v34, 2, v43))
            {
              memcpy(v33, v34, *(void *)(v36 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v33, v34, v43);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v33, 0, 2, v43);
            }
            uint64_t v6 = v64;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_30:
        swift_storeEnumTagMultiPayload();
LABEL_31:
        uint64_t v57 = *(int *)(v6 + 20);
        unint64_t v58 = *(char **)((char *)a2 + v57);
        *(void *)&a1[v57] = v58;
        id v59 = v58;
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_31;
    }
  }
  return a1;
}

uint64_t *assignWithCopy for FormatButtonNodeDataAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0D75474((uint64_t)a1);
    uint64_t v6 = type metadata accessor for FormatAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        uint64_t v7 = (id *)(a2 + 1);
        unsigned int v8 = *((unsigned __int8 *)a2 + 16);
        swift_bridgeObjectRetain();
        if (v8 <= 0xFD)
        {
          id v33 = *v7;
          sub_1BFF43A68(*v7, v8);
          a1[1] = (uint64_t)v33;
          *((unsigned char *)a1 + 16) = v8;
        }
        else
        {
          id v9 = *v7;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          a1[1] = (uint64_t)v9;
        }
        goto LABEL_31;
      case 1u:
        uint64_t v10 = *a2;
        uint64_t v11 = a2[1];
        uint64_t v12 = a3;
        uint64_t v13 = a2[2];
        uint64_t v14 = a2[3];
        uint64_t v15 = a2[4];
        char v16 = *((unsigned char *)a2 + 41);
        unsigned __int8 v17 = *((unsigned char *)a2 + 40);
        sub_1BFF43AA4((id)*a2, v11, v13, v14, v15, v17, v16);
        *a1 = v10;
        a1[1] = v11;
        a1[2] = v13;
        a1[3] = v14;
        a3 = v12;
        a1[4] = v15;
        *((unsigned char *)a1 + 40) = v17;
        *((unsigned char *)a1 + 41) = v16;
        a1[6] = a2[6];
        uint64_t v18 = (void *)a2[7];
        LOBYTE(v10) = *((unsigned char *)a2 + 64);
        swift_bridgeObjectRetain();
        sub_1BFF43A68(v18, v10);
        a1[7] = (uint64_t)v18;
        *((unsigned char *)a1 + 64) = v10;
        goto LABEL_31;
      case 2u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_31;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v56 = a3;
        uint64_t v19 = a2[6];
        uint64_t v20 = a2[7];
        uint64_t v21 = a2[8];
        uint64_t v22 = a2[9];
        char v23 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF429DC(v19, v20, v21, v22, v23);
        a1[6] = v19;
        a1[7] = v20;
        a3 = v56;
        a1[8] = v21;
        a1[9] = v22;
        *((unsigned char *)a1 + 80) = v23;
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 5u:
        uint64_t v24 = type metadata accessor for FormatPurchaseData(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v34 = type metadata accessor for FormatPurchaseLandingPageData();
          uint64_t v35 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v35 + 48))(a2, 1, v34))
          {
            sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            uint64_t v58 = a3;
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v39 = *(int *)(v34 + 20);
            __dst = (char *)a1 + v39;
            uint64_t v40 = (char *)a2 + v39;
            uint64_t v41 = type metadata accessor for FormatPostPurchaseData();
            uint64_t v42 = *(void *)(v41 - 8);
            uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
            uint64_t v44 = v41;
            swift_bridgeObjectRetain();
            if (v43(v40, 1, v44))
            {
              sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(__dst, v40, *(void *)(*(void *)(v45 - 8) + 64));
            }
            else
            {
              uint64_t v54 = v44;
              uint64_t v46 = sub_1C1515FDC();
              uint64_t v47 = *(void *)(v46 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v40, 2, v46))
              {
                uint64_t v48 = __dst;
                memcpy(__dst, v40, *(void *)(v42 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v40, v46);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 2, v46);
                uint64_t v48 = __dst;
              }
              (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v48, 0, 1, v54);
            }
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v34);
            a3 = v58;
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
            goto LABEL_31;
          }
          uint64_t v57 = a3;
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v26 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          uint64_t v27 = (char *)a1 + v26;
          uint64_t v28 = (char *)a2 + v26;
          uint64_t v29 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v30 = *(void *)(v29 - 8);
          unint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
          swift_bridgeObjectRetain();
          if (v31(v28, 1, v29))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            uint64_t v37 = sub_1C1515FDC();
            uint64_t v38 = *(void *)(v37 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v28, 2, v37))
            {
              memcpy(v27, v28, *(void *)(v30 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v27, v28, v37);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v27, 0, 2, v37);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
          }
          a3 = v57;
        }
        swift_storeEnumTagMultiPayload();
LABEL_31:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v49 = *(int *)(a3 + 20);
  uint64_t v50 = *(void **)((char *)a1 + v49);
  uint64_t v51 = *(void **)((char *)a2 + v49);
  *(uint64_t *)((char *)a1 + v49) = (uint64_t)v51;
  id v52 = v51;

  return a1;
}

uint64_t sub_1C0D75474(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for FormatButtonNodeDataAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatAction();
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v19 = *(int *)(v15 + 20);
        __dsta = (char *)a1 + v19;
        uint64_t v20 = (char *)a2 + v19;
        uint64_t v21 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dsta, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v24 = sub_1C1515FDC();
          uint64_t v28 = *(void *)(v24 - 8);
          uint64_t v29 = v24;
          if ((*(unsigned int (**)(char *, uint64_t))(v28 + 48))(v20, 2))
          {
            uint64_t v25 = v20;
            uint64_t v26 = __dsta;
            memcpy(__dsta, v25, *(void *)(v22 + 64));
          }
          else
          {
            uint64_t v26 = __dsta;
            (*(void (**)(void))(v28 + 32))();
            (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dsta, 0, 2, v29);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
      }
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_1C1515FDC();
        __dst = *(void (***)(void *, const void *, uint64_t))(v18 - 8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))__dst[6])(v11, 2, v18))
        {
          memcpy(v10, v11, *(void *)(v13 + 64));
        }
        else
        {
          __dst[4](v10, v11, v18);
          ((void (*)(char *, void, uint64_t, uint64_t))__dst[7])(v10, 0, 2, v18);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_24:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *assignWithTake for FormatButtonNodeDataAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0D75474((uint64_t)a1);
    uint64_t v6 = type metadata accessor for FormatAction();
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v19 = *(int *)(v15 + 20);
          __dsta = (char *)a1 + v19;
          uint64_t v20 = (char *)a2 + v19;
          uint64_t v21 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v22 = *(void *)(v21 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dsta, v20, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            uint64_t v24 = sub_1C1515FDC();
            uint64_t v30 = *(void *)(v24 - 8);
            uint64_t v31 = v24;
            if ((*(unsigned int (**)(char *, uint64_t))(v30 + 48))(v20, 2))
            {
              uint64_t v25 = v20;
              uint64_t v26 = __dsta;
              memcpy(__dsta, v25, *(void *)(v22 + 64));
            }
            else
            {
              uint64_t v26 = __dsta;
              (*(void (**)(void))(v30 + 32))();
              (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dsta, 0, 2, v31);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_24:
          swift_storeEnumTagMultiPayload();
          goto LABEL_25;
        }
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v18 = sub_1C1515FDC();
          __dst = *(void (***)(void *, const void *, uint64_t))(v18 - 8);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))__dst[6])(v11, 2, v18))
          {
            memcpy(v10, v11, *(void *)(v13 + 64));
          }
          else
          {
            __dst[4](v10, v11, v18);
            ((void (*)(char *, void, uint64_t, uint64_t))__dst[7])(v10, 0, 2, v18);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
LABEL_25:
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = *(void **)((char *)a1 + v27);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);

  return a1;
}

uint64_t sub_1C0D75F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatAction();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    unsigned int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1C0D76034(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FormatAction();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

id FCFeedDescriptor.feedTag.getter()
{
  id v1 = objc_msgSend(objc_msgSend(v0, sel_backingTag), sel_tagType);
  swift_unknownObjectRelease();
  if (v1 != (id)3 || (id result = objc_msgSend(v0, sel_backingChannel)) == 0)
  {
    id v3 = objc_msgSend(v0, sel_backingTag);
    return v3;
  }
  return result;
}

void FCFeedDescriptor.feedURL.getter()
{
  id v1 = objc_msgSend(v0, sel_feedConfiguration);
  id v2 = objc_msgSend(v0, sel_alternativeFeedDescriptor);
  id v3 = v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_feedConfiguration);

    if (v1 != (id)9) {
      goto LABEL_3;
    }
LABEL_9:
    id v5 = objc_msgSend(self, sel_nss_NewsURLForPuzzleHub);
    goto LABEL_19;
  }
  id v4 = 0;
  if (v1 == (id)9) {
    goto LABEL_9;
  }
LABEL_3:
  if (v1 == (id)3)
  {
    if (!v3)
    {
LABEL_14:
      id v5 = objc_msgSend(self, sel_nss_NewsURLForMySports);
      goto LABEL_19;
    }
    if (v4 != (id)6)
    {
      if (v4 == (id)5)
      {
        id v5 = objc_msgSend(self, sel_nss_NewsURLForMySportsScores);
        goto LABEL_19;
      }
      goto LABEL_14;
    }
    id v5 = objc_msgSend(self, sel_nss_NewsURLForMySportsHighlights);
  }
  else
  {
    id v6 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_identifier);
    swift_unknownObjectRelease();
    if (v3)
    {
      if (!v6)
      {
        sub_1C151E62C();
        id v6 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v7 = objc_msgSend(self, sel_nss_NewsURLForTagID_feedConfiguration_, v6, v4);
    }
    else
    {
      if (!v6)
      {
        sub_1C151E62C();
        id v6 = (id)sub_1C151E5EC();
        swift_bridgeObjectRelease();
      }
      id v7 = objc_msgSend(self, sel_nss_NewsURLForTagID_feedConfiguration_, v6, objc_msgSend(v0, sel_feedConfiguration));
    }
    id v8 = v7;

    id v5 = v8;
  }
LABEL_19:
  id v9 = v5;
  sub_1C1515F1C();
}

uint64_t FCFeedDescriptor.localizedFeedType.getter()
{
  id v1 = (char *)objc_msgSend(v0, sel_feedConfiguration);
  id v2 = objc_msgSend(v0, sel_alternativeFeedDescriptor);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_feedConfiguration);

    switch((unint64_t)v4)
    {
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
        goto LABEL_8;
      default:
        break;
    }
  }
  if ((unint64_t)(v1 - 9) < 2) {
    return 0;
  }
  if (v1 == (char *)8 || v1 == (char *)3)
  {
LABEL_8:
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v5 = sub_1C1515B8C();
  }
  else
  {
    FCFeedDescriptor.feedTag.getter();
    swift_getObjectType();
    uint64_t v5 = FCTagProviding.localizedTagType.getter();
    swift_unknownObjectRelease();
  }
  return v5;
}

id FCFeedDescriptor.feedKind.getter@<X0>(char *a1@<X8>)
{
  id result = objc_msgSend(v1, sel_feedConfiguration);
  char v4 = 2;
  switch((unint64_t)result)
  {
    case 0uLL:
      id result = objc_msgSend(v1, sel_backingChannel);
      if (!result) {
        goto LABEL_2;
      }
      unsigned int v5 = objc_msgSend(result, sel_isLocal);
      id v6 = objc_msgSend(objc_msgSend(v1, sel_backingTag), sel_asSection);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      id result = (id)swift_unknownObjectRelease();
      if (v5)
      {
        if (v6) {
          char v4 = 7;
        }
        else {
          char v4 = 6;
        }
      }
      else if (v6)
      {
        char v4 = 3;
      }
      else
      {
        char v4 = 2;
      }
      break;
    case 1uLL:
      id result = objc_msgSend(v1, sel_backingChannel);
      if (result
        && (unsigned __int8 v7 = objc_msgSend(result, sel_isLocal),
            id result = (id)swift_unknownObjectRelease(),
            (v7 & 1) != 0))
      {
        char v4 = 6;
      }
      else
      {
        char v4 = 2;
      }
      break;
    case 2uLL:
      break;
    case 3uLL:
      char v4 = 9;
      break;
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
LABEL_2:
      char v4 = 20;
      break;
    case 8uLL:
      char v4 = 24;
      break;
    case 9uLL:
      char v4 = 10;
      break;
    case 0xAuLL:
      char v4 = 11;
      break;
    case 0xBuLL:
      char v4 = 12;
      break;
    default:
      char v4 = 21;
      break;
  }
  *a1 = v4;
  return result;
}

uint64_t FCFeedDescriptorConfiguration.description.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t FCFeedDescriptor.feedExternalTitle.getter()
{
  id v1 = objc_msgSend(v0, sel_alternativeFeedDescriptor);
  if (v1)
  {
    id v2 = v1;
    id v3 = objc_msgSend(v1, sel_feedConfiguration);

    switch((unint64_t)v3)
    {
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
        type metadata accessor for Localized();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        sub_1C1515B8C();

        sub_1BFFDEB20();
        uint64_t v7 = swift_allocObject();
        *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
        uint64_t v8 = FCFeedDescriptor.feedTitle.getter();
        uint64_t v10 = v9;
        *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v7 + 64) = sub_1BFE9C558();
        *(void *)(v7 + 32) = v8;
        *(void *)(v7 + 40) = v10;
        uint64_t v11 = sub_1C151E66C();
        swift_bridgeObjectRelease();
        uint64_t result = v11;
        break;
      default:
        goto LABEL_3;
    }
  }
  else
  {
LABEL_3:
    return FCFeedDescriptor.feedTitle.getter();
  }
  return result;
}

uint64_t FCFeedDescriptor.feedTitle.getter()
{
  id v1 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asPuzzleType);
  swift_unknownObjectRelease();
  id v2 = objc_msgSend(v0, sel_feedConfiguration);
  if (v1)
  {
    if (v2 == (id)11)
    {
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1C1515B8C();

      sub_1BFFDEB20();
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
      id v6 = objc_msgSend(v1, sel_name, 0x80000001C1627370);
      uint64_t v7 = sub_1C151E62C();
      uint64_t v9 = v8;

      *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v5 + 64) = sub_1BFE9C558();
      *(void *)(v5 + 32) = v7;
      *(void *)(v5 + 40) = v9;
      uint64_t v10 = sub_1C151E5FC();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v20 = objc_msgSend(v1, sel_nameForSharing);
      uint64_t v10 = sub_1C151E62C();
      swift_unknownObjectRelease();
    }
    return v10;
  }
  else if (v2 == (id)9)
  {
    type metadata accessor for Localized();
    uint64_t v12 = swift_getObjCClassFromMetadata();
    id v13 = objc_msgSend(self, sel_bundleForClass_, v12);
    sub_1C1515B8C();

    sub_1BFFDEB20();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
    id v15 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_displayName, 0x80000001C1627310);
    swift_unknownObjectRelease();
    uint64_t v16 = sub_1C151E62C();
    uint64_t v18 = v17;

    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = sub_1BFE9C558();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v18;
    uint64_t v19 = sub_1C151E5FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    id v21 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_displayName);
    swift_unknownObjectRelease();
    uint64_t v22 = sub_1C151E62C();

    return v22;
  }
}

id FCFeedDescriptor.navigationChromeBackgroundColor.getter()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_backingChannel);
  if (v2 && (id v3 = objc_msgSend(v2, sel_theme), swift_unknownObjectRelease(), v3)
    || (id v3 = objc_msgSend(objc_msgSend(v0, sel_backingTag), sel_theme),
        swift_unknownObjectRelease(),
        v3))
  {
    id v4 = objc_msgSend(v3, sel_navigationChromeBackgroundColor);
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = objc_msgSend(v4, sel_ne_color);

      id v7 = objc_msgSend(v3, sel_darkStyleNavigationChromeBackgroundColor);
      if (v7)
      {
        uint64_t v8 = v7;
        id v9 = objc_msgSend(v7, sel_ne_color);
      }
      else
      {
        id v9 = v6;
      }
      id v15 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, v6, v9);

      swift_unknownObjectRelease();
      return v15;
    }
    swift_getObjectType();
    swift_unknownObjectRetain();
    char v10 = FCFeedTheming.hasNavigationChromeBackgroundImage.getter();
    swift_unknownObjectRelease();
    if (v10)
    {
      id v11 = objc_msgSend(self, sel_systemBackgroundColor);
      swift_unknownObjectRelease();
      return v11;
    }
  }
  id v12 = objc_msgSend(objc_msgSend(v1, sel_backingTag), sel_asSports);
  swift_unknownObjectRelease();
  if (v12)
  {
    swift_getObjectType();
    id v13 = FCSportsProviding.navigationBarBackgroundColor.getter();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return v13;
  }
  if (v3)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    id v11 = FCFeedTheming.navigationBarBackgroundColor.getter();
    swift_unknownObjectRelease_n();
    return v11;
  }
  id v16 = objc_msgSend(self, sel_systemBackgroundColor);
  return v16;
}

id FCFeedDescriptor.initialRefreshState.getter()
{
  id result = objc_msgSend(v0, sel_alternativeFeedDescriptor);
  if (result)
  {
    id v2 = result;
    unint64_t v3 = (unint64_t)objc_msgSend(result, sel_feedConfiguration);

    if (v3 > 0xB) {
      return 0;
    }
    else {
      return (id)byte_1C15A437A[v3];
    }
  }
  return result;
}

uint64_t sub_1C0D77508()
{
  return FCFeedDescriptorConfiguration.description.getter();
}

uint64_t FormatSlotNode.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotNode.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotNode.extended.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FormatSlotNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSlotNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSlotNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatSlotNode.extended.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatSlotNode.extended.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSlotNode.children.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSlotNode.children.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSlotNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSlotNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSlotNode.options.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSlotNode.options.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSlotNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSlotNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D779D0(void *a1, void *a2)
{
  return static FormatSlotNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0D779DC(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = a2 + 56;
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1C0F494D0(v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v12 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    sub_1C05550B8(a1, v12);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(*(void *)v9 + 16);
    if (v13)
    {
      uint64_t v14 = *(void *)v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v15 = *(void *)(v6 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1C019FFF0(v14, (uint64_t)v8);
        uint64_t v17 = *((void *)v8 + 2);
        swift_retain();
        sub_1C05B8C90(a1);
        swift_release();
        sub_1BFF1F8F4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v14 += v15;
        --v13;
      }
      while (v13);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1C0D77BE4(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v4 = *(void *)(v3 + 24);
  swift_beginAccess();
  uint64_t v6 = *(unsigned __int8 *)(v3 + 32);
  v8[0] = v5;
  v8[1] = v4;
  v8[3] = 0;
  v9[0] = 0;
  v8[2] = v6;
  *(void *)((char *)v9 + 6) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C0F4912C((uint64_t)v8, a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D77C98(uint64_t a1, uint64_t a2)
{
  return FormatSlotNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1C0D77CBC(uint64_t a1)
{
  uint64_t result = sub_1C0D77DD0(&qword_1EA1A6B68);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D77D00(void *a1)
{
  a1[1] = sub_1C0D77DD0(&qword_1EB87D9B0);
  a1[2] = sub_1C0D77DD0(&qword_1EB85FD78);
  uint64_t result = sub_1C0D77DD0(&qword_1EA1A6B70);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0D77D8C(uint64_t a1)
{
  uint64_t result = sub_1C0D77DD0(&qword_1EA1A6B78);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D77DD0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatSlotNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0D77E10@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 32);
  return result;
}

uint64_t sub_1C0D77E58(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_1C0D77E9C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0D77EEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0D77F3C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSlotNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSlotNode);
}

uint64_t sub_1C0D77FA4(_OWORD *a1)
{
  long long v2 = a1[7];
  long long v42 = a1[6];
  v43[0] = v2;
  *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)((char *)a1 + 121);
  long long v3 = a1[3];
  long long v38 = a1[2];
  long long v39 = v3;
  long long v4 = a1[5];
  long long v40 = a1[4];
  long long v41 = v4;
  long long v5 = a1[1];
  *(_OWORD *)uint64_t v36 = *a1;
  long long v37 = v5;
  switch(*v1)
  {
    case 1:
      if ((unint64_t)v41 >= 2)
      {
        uint64_t v14 = *((void *)&v40 + 1);
        goto LABEL_21;
      }
      id v7 = v36[0];
      sub_1C0187FB0((uint64_t)v36);
      id v8 = objc_msgSend(v7, sel_title);
      uint64_t v9 = sub_1C151E62C();
      unint64_t v11 = v10;

      swift_bridgeObjectRelease();
      uint64_t v12 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0) {
        uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
      }
      if (v12)
      {
        id v13 = objc_msgSend(v7, sel_title);
        goto LABEL_23;
      }
      id v27 = objc_msgSend(objc_msgSend(v7, sel_sourceChannel), sel_name);
      swift_unknownObjectRelease();
      goto LABEL_24;
    case 2:
      if ((void)v41 == 1 || !(void)v42)
      {
        id v26 = v36[0];
        sub_1C0187FB0((uint64_t)v36);
        id v13 = objc_msgSend(v26, sel_coverDate);
LABEL_23:
        id v27 = v13;
LABEL_24:
        uint64_t v14 = sub_1C151E62C();
        swift_bridgeObjectRelease();

        sub_1C01880A4((uint64_t)v36);
      }
      else
      {
        uint64_t v14 = *((void *)&v41 + 1);
LABEL_21:
        swift_bridgeObjectRetain();
      }
      return v14;
    case 3:
      id v6 = objc_msgSend(v36[0], sel_issueDescription);
      goto LABEL_16;
    case 4:
      id v15 = objc_msgSend(objc_msgSend(v36[0], sel_sourceChannel), sel_name);
      swift_unknownObjectRelease();
      goto LABEL_18;
    case 5:
      id v16 = objc_msgSend(v36[0], sel_accessibilityLanguage);
      if (v16) {
        goto LABEL_17;
      }
      uint64_t v14 = 0;
      break;
    case 6:
      IssueAutomation.init(issue:)(v36[0], (uint64_t)&v28);
      uint64_t v17 = v28;
      unint64_t v18 = v29;
      char v19 = v30;
      char v20 = BYTE1(v30);
      char v21 = BYTE2(v30);
      unint64_t v22 = v31;
      uint64_t v23 = v32;
      char v24 = v33;
      uint64_t v28 = 0x6575737369;
      unint64_t v29 = 0xE500000000000000;
      uint64_t v30 = v17;
      unint64_t v31 = v18;
      LOBYTE(v32) = v19;
      BYTE1(v32) = v20;
      BYTE2(v32) = v21;
      unint64_t v33 = v22;
      uint64_t v34 = v23;
      char v35 = v24;
      sub_1C151536C();
      swift_allocObject();
      sub_1C151535C();
      sub_1C0D78B64();
      sub_1C0D78C14();
      uint64_t v14 = sub_1C151A4CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v14;
    default:
      id v6 = objc_msgSend(v36[0], sel_identifier);
LABEL_16:
      id v16 = v6;
LABEL_17:
      id v15 = v16;
LABEL_18:
      uint64_t v14 = sub_1C151E62C();

      break;
  }
  return v14;
}

BOOL static FormatIssueBinding.Text.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C0D78374(unsigned __int8 *a1, char *a2)
{
  return sub_1C148AD44(*a1, *a2);
}

uint64_t sub_1C0D78380()
{
  return sub_1C044F968();
}

uint64_t sub_1C0D7838C()
{
  return sub_1C044A990();
}

uint64_t sub_1C0D78394()
{
  return sub_1C044F968();
}

void sub_1C0D7839C(void *a1@<X8>)
{
  *a1 = &unk_1F1B68450;
}

uint64_t FormatIssueBinding.Text.hash(into:)()
{
  return sub_1C1520DCC();
}

void *static FormatIssueBinding.Text.allCases.getter()
{
  return &unk_1F1B6A1A8;
}

uint64_t FormatIssueBinding.Text.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0D78430()
{
  unint64_t result = qword_1EA1A6B80;
  if (!qword_1EA1A6B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6B80);
  }
  return result;
}

unint64_t sub_1C0D78484(uint64_t a1)
{
  unint64_t result = sub_1C0D784AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D784AC()
{
  unint64_t result = qword_1EA1A6B88;
  if (!qword_1EA1A6B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6B88);
  }
  return result;
}

uint64_t sub_1C0D78500()
{
  return sub_1C0D785F0(&qword_1EA1A6B90, &qword_1EA1A6B98, (uint64_t)&type metadata for FormatIssueBinding.Text);
}

void sub_1C0D78530(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A1A8;
}

unint64_t sub_1C0D78540(void *a1)
{
  a1[1] = sub_1BFE03384();
  a1[2] = sub_1BFE00A20();
  unint64_t result = sub_1C0D78430();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Text()
{
  return &type metadata for FormatIssueBinding.Text;
}

ValueMetadata *_s4TextO10CodingTypeOMa_3()
{
  return &_s4TextO10CodingTypeON_3;
}

uint64_t sub_1C0D785C0()
{
  return sub_1C0D785F0(&qword_1EA1A6BA0, &qword_1EA1A6BA8, (uint64_t)&_s4TextO10CodingTypeON_3);
}

uint64_t sub_1C0D785F0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0D78CF4(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0D78658()
{
  unint64_t result = qword_1EA1A6BB0;
  if (!qword_1EA1A6BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6BB0);
  }
  return result;
}

uint64_t sub_1C0D786AC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  switch(*a1)
  {
    case 1:
      v60[0] = 1;
      long long v13 = *(_OWORD *)(a2 + 112);
      long long v58 = *(_OWORD *)(a2 + 96);
      v59[0] = v13;
      *(_OWORD *)((char *)v59 + 9) = *(_OWORD *)(a2 + 121);
      long long v14 = *(_OWORD *)(a2 + 48);
      long long v54 = *(_OWORD *)(a2 + 32);
      long long v55 = v14;
      long long v15 = *(_OWORD *)(a2 + 80);
      long long v56 = *(_OWORD *)(a2 + 64);
      long long v57 = v15;
      long long v16 = *(_OWORD *)(a2 + 16);
      long long v52 = *(_OWORD *)a2;
      long long v53 = v16;
      uint64_t v17 = sub_1C0D77FA4(&v52);
      uint64_t v19 = v18;
      unint64_t v11 = a3;
      uint64_t v12 = 0x656C746954;
      uint64_t v10 = 0xE500000000000000;
      break;
    case 2:
      sub_1C0D78C6C(a2 + 72, (uint64_t)v60);
      sub_1C0D78C6C((uint64_t)v60, (uint64_t)&v52);
      if (*((void *)&v52 + 1) == 1 || (uint64_t v20 = *((void *)&v53 + 1)) == 0)
      {
        id v47 = *(id *)a2;
        sub_1C0187FB0(a2);
        id v48 = objc_msgSend(v47, sel_coverDate);
        uint64_t v21 = sub_1C151E62C();
        uint64_t v20 = v49;
        swift_bridgeObjectRelease();

        sub_1C01880A4(a2);
      }
      else
      {
        uint64_t v21 = v53;
        swift_bridgeObjectRetain();
      }
      unint64_t v11 = a3;
      uint64_t v12 = 0x6144207265766F43;
      uint64_t v10 = 0xEA00000000006574;
      uint64_t v17 = v21;
      uint64_t v19 = v20;
      break;
    case 3:
      id v22 = objc_msgSend(*(id *)a2, sel_issueDescription);
      uint64_t v7 = sub_1C151E62C();
      uint64_t v9 = v23;

      uint64_t v10 = 0x80000001C1627410;
      unint64_t v11 = a3;
      uint64_t v12 = 0xD000000000000011;
      goto LABEL_8;
    case 4:
      id v24 = objc_msgSend(objc_msgSend(*(id *)a2, sel_sourceChannel), sel_name);
      swift_unknownObjectRelease();
      uint64_t v25 = sub_1C151E62C();
      uint64_t v27 = v26;

      unint64_t v11 = a3;
      uint64_t v12 = 0x656873696C627550;
      uint64_t v10 = 0xEE00656D614E2072;
      uint64_t v17 = v25;
      uint64_t v19 = v27;
      break;
    case 5:
      id v28 = objc_msgSend(*(id *)a2, sel_accessibilityLanguage);
      if (v28)
      {
        unint64_t v29 = v28;
        uint64_t v30 = sub_1C151E62C();
        unint64_t v32 = v31;
      }
      else
      {
        uint64_t v30 = 0;
        unint64_t v32 = 0xE000000000000000;
      }
      unint64_t v11 = a3;
      uint64_t v12 = 0x65676175676E614CLL;
      uint64_t v10 = 0xE800000000000000;
      uint64_t v17 = v30;
      uint64_t v19 = v32;
      break;
    case 6:
      id v33 = *(id *)a2;
      IssueAutomation.init(issue:)(v33, (uint64_t)&v52);
      long long v34 = v52;
      char v35 = v53;
      char v36 = BYTE1(v53);
      char v37 = BYTE2(v53);
      uint64_t v38 = *((void *)&v53 + 1);
      uint64_t v39 = v54;
      char v40 = BYTE8(v54);
      *(void *)&long long v52 = 0x6575737369;
      *((void *)&v52 + 1) = 0xE500000000000000;
      long long v53 = v34;
      LOBYTE(v54) = v35;
      BYTE1(v54) = v36;
      BYTE2(v54) = v37;
      *((void *)&v54 + 1) = v38;
      *(void *)&long long v55 = v39;
      BYTE8(v55) = v40;
      sub_1C151536C();
      swift_allocObject();
      sub_1C151535C();
      sub_1C0D78B64();
      sub_1C0D78C14();
      uint64_t v41 = sub_1C151A4CC();
      if (v3)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        id v43 = objc_msgSend(v33, sel_identifier);
        uint64_t v44 = sub_1C151E62C();
        uint64_t v46 = v45;
      }
      else
      {
        uint64_t v44 = v41;
        uint64_t v46 = v42;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      uint64_t v10 = 0xEA00000000006E6FLL;
      unint64_t v11 = a3;
      uint64_t v12 = 0x6974616D6F747541;
      uint64_t v17 = v44;
      uint64_t v19 = v46;
      break;
    default:
      id v6 = objc_msgSend(*(id *)a2, sel_identifier);
      uint64_t v7 = sub_1C151E62C();
      uint64_t v9 = v8;

      uint64_t v10 = 0xEA00000000007265;
      unint64_t v11 = a3;
      uint64_t v12 = 0x696669746E656449;
LABEL_8:
      uint64_t v17 = v7;
      uint64_t v19 = v9;
      break;
  }
  sub_1C0433600(v12, v10, v17, v19, v11);
  uint64_t v50 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(a3, 0, 1, v50);
}

void sub_1C0D78B64()
{
  if (!qword_1EB85D120)
  {
    sub_1C0D78BC0();
    unint64_t v0 = type metadata accessor for CellAutomation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85D120);
    }
  }
}

unint64_t sub_1C0D78BC0()
{
  unint64_t result = qword_1EB85D138;
  if (!qword_1EB85D138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D138);
  }
  return result;
}

unint64_t sub_1C0D78C14()
{
  unint64_t result = qword_1EB85D118;
  if (!qword_1EB85D118)
  {
    sub_1C0D78B64();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D118);
  }
  return result;
}

uint64_t sub_1C0D78C6C(uint64_t a1, uint64_t a2)
{
  sub_1C0D78CF4(0, &qword_1EB85CE38, (uint64_t)&type metadata for FeedIssue.Overrides, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0D78CF4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t PaywallAutomation.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaywallAutomation.type.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaywallAutomation.host.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaywallAutomation.init(paywall:)@<X0>(long long *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v3 = a1[13];
  long long v26 = a1[12];
  long long v27 = v3;
  long long v28 = a1[14];
  uint64_t v29 = *((void *)a1 + 30);
  long long v4 = a1[9];
  long long v22 = a1[8];
  long long v23 = v4;
  long long v5 = a1[11];
  long long v24 = a1[10];
  long long v25 = v5;
  long long v6 = a1[5];
  long long v18 = a1[4];
  long long v19 = v6;
  long long v7 = a1[7];
  long long v20 = a1[6];
  long long v21 = v7;
  long long v8 = a1[1];
  long long v14 = *a1;
  long long v15 = v8;
  long long v9 = a1[3];
  long long v16 = a1[2];
  long long v17 = v9;
  long long v10 = v14;
  long long v11 = v15;
  long long v12 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C01F0AC8((uint64_t)&v14);
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v12;
  return result;
}

uint64_t PaywallAutomation.automationType.getter()
{
  return 0x6C6C6177796170;
}

uint64_t sub_1C0D78EA8()
{
  uint64_t v1 = 1701869940;
  if (*v0 != 1) {
    uint64_t v1 = 1953722216;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C0D78EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0D797E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D78F20(uint64_t a1)
{
  unint64_t v2 = sub_1C0D79160();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0D78F5C(uint64_t a1)
{
  unint64_t v2 = sub_1C0D79160();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PaywallAutomation.encode(to:)(void *a1)
{
  sub_1C0D79468(0, &qword_1EA1A6BB8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v7 = (char *)v12 - v6;
  uint64_t v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  uint64_t v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0D79160();
  sub_1C1520F0C();
  char v15 = 0;
  uint64_t v10 = v12[5];
  sub_1C15207CC();
  if (!v10)
  {
    char v14 = 1;
    sub_1C15207CC();
    char v13 = 2;
    sub_1C15207CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0D79160()
{
  unint64_t result = qword_1EA1A6BC0;
  if (!qword_1EA1A6BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6BC0);
  }
  return result;
}

uint64_t PaywallAutomation.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0D79468(0, &qword_1EA1A6BC8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0D79160();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152069C();
  uint64_t v15 = v14;
  uint64_t v23 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v15;
  uint64_t v16 = sub_1C152069C();
  uint64_t v18 = v17;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C0D79468(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0D79160();
    unint64_t v7 = a3(a1, &type metadata for PaywallAutomation.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0D794D0()
{
  unint64_t result = qword_1EA1A6BD0;
  if (!qword_1EA1A6BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6BD0);
  }
  return result;
}

unint64_t sub_1C0D79528()
{
  unint64_t result = qword_1EA1A6BD8;
  if (!qword_1EA1A6BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6BD8);
  }
  return result;
}

uint64_t sub_1C0D7957C()
{
  return 0x6C6C6177796170;
}

uint64_t sub_1C0D79594@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PaywallAutomation.init(from:)(a1, a2);
}

uint64_t sub_1C0D795AC(void *a1)
{
  return PaywallAutomation.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PaywallAutomation()
{
  return &type metadata for PaywallAutomation;
}

unsigned char *storeEnumTagSinglePayload for PaywallAutomation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D796A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallAutomation.CodingKeys()
{
  return &type metadata for PaywallAutomation.CodingKeys;
}

unint64_t sub_1C0D796DC()
{
  unint64_t result = qword_1EA1A6BE0;
  if (!qword_1EA1A6BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6BE0);
  }
  return result;
}

unint64_t sub_1C0D79734()
{
  unint64_t result = qword_1EA1A6BE8;
  if (!qword_1EA1A6BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6BE8);
  }
  return result;
}

unint64_t sub_1C0D7978C()
{
  unint64_t result = qword_1EA1A6BF0;
  if (!qword_1EA1A6BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6BF0);
  }
  return result;
}

uint64_t sub_1C0D797E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953722216 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t FormatSponsoredBannerLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, char a14, uint64_t a15, uint64_t *a16, uint64_t a17)
{
  uint64_t result = swift_allocObject();
  uint64_t v27 = *a7;
  uint64_t v28 = *a13;
  uint64_t v29 = *a16;
  char v30 = *((unsigned char *)a16 + 8);
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = a5;
  *(void *)(result + 56) = a6;
  *(double *)(result + 64) = a9;
  *(double *)(result + 72) = a10;
  *(double *)(result + 80) = a11;
  *(double *)(result + 88) = a12;
  *(void *)(result + 96) = v27;
  *(void *)(result + 104) = a8;
  *(void *)(result + 112) = v28;
  *(unsigned char *)(result + 120) = a14;
  *(void *)(result + 128) = a15;
  *(void *)(result + 136) = v29;
  *(unsigned char *)(result + 144) = v30;
  *(void *)(result + 152) = MEMORY[0x1E4FBC870];
  *(void *)(result + 160) = a17;
  return result;
}

uint64_t FormatSponsoredBannerLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSponsoredBannerLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSponsoredBannerLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatSponsoredBannerLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatSponsoredBannerLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatSponsoredBannerLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 104);
}

unint64_t FormatSponsoredBannerLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 112);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatSponsoredBannerLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t FormatSponsoredBannerLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatSponsoredBannerLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 144);
  *(void *)a1 = *(void *)(v1 + 136);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatSponsoredBannerLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSponsoredBannerLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatSponsoredBannerLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, char a14, uint64_t a15, uint64_t *a16, uint64_t a17)
{
  uint64_t v18 = *a7;
  uint64_t v19 = *a13;
  uint64_t v20 = *a16;
  char v21 = *((unsigned char *)a16 + 8);
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = a4;
  *(void *)(v17 + 48) = a5;
  *(void *)(v17 + 56) = a6;
  *(double *)(v17 + 64) = a9;
  *(double *)(v17 + 72) = a10;
  *(double *)(v17 + 80) = a11;
  *(double *)(v17 + 88) = a12;
  *(void *)(v17 + 96) = v18;
  *(void *)(v17 + 104) = a8;
  *(void *)(v17 + 112) = v19;
  *(unsigned char *)(v17 + 120) = a14;
  *(void *)(v17 + 128) = a15;
  *(void *)(v17 + 136) = v20;
  *(unsigned char *)(v17 + 144) = v21;
  *(void *)(v17 + 152) = MEMORY[0x1E4FBC870];
  *(void *)(v17 + 160) = a17;
  return v17;
}

unint64_t sub_1C0D79B68(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x676E697A69736572;
      break;
    case 5:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 6:
      unint64_t result = 0x696C696269736976;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0xD000000000000013;
      break;
    case 11:
      unint64_t result = 0x656C797473;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0D79CEC()
{
  return sub_1C0D79B68(*v0);
}

uint64_t sub_1C0D79CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0D7B0BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D79D1C(uint64_t a1)
{
  unint64_t v2 = sub_1C0D7A31C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0D79D58(uint64_t a1)
{
  unint64_t v2 = sub_1C0D7A31C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatSponsoredBannerLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 112));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FormatSponsoredBannerLayoutAttributes.__deallocating_deinit()
{
  FormatSponsoredBannerLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatSponsoredBannerLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0D7AADC(0, &qword_1EA1A6BF8, (uint64_t (*)(void))sub_1C0D7A31C, (uint64_t)&type metadata for FormatSponsoredBannerLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0D7A31C();
  sub_1C1520F0C();
  LOBYTE(v13[0]) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1C15207CC();
    LOBYTE(v13[0]) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    char v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C4A8(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 96);
    char v14 = 4;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v13[0]) = 5;
    sub_1C15207FC();
    *(void *)&v13[0] = *(void *)(v3 + 112);
    char v14 = 6;
    sub_1C009DA10();
    sub_1C152080C();
    LOBYTE(v13[0]) = 7;
    sub_1C15207DC();
    *(void *)&v13[0] = *(void *)(v3 + 128);
    char v14 = 8;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C4A8(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    char v11 = *(unsigned char *)(v3 + 144);
    *(void *)&v13[0] = *(void *)(v3 + 136);
    BYTE8(v13[0]) = v11;
    char v14 = 9;
    sub_1BFDD5084();
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 152);
    char v14 = 10;
    sub_1C0D7AADC(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C0D7AB44(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 160);
    char v14 = 11;
    type metadata accessor for FormatSponsoredBannerNodeStyle();
    sub_1BFE4C4A8(&qword_1EA1A0958, 255, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNodeStyle);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0D7A31C()
{
  unint64_t result = qword_1EA1A6C00;
  if (!qword_1EA1A6C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6C00);
  }
  return result;
}

uint64_t FormatSponsoredBannerLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatSponsoredBannerLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatSponsoredBannerLayoutAttributes.init(from:)(void *a1)
{
  sub_1C0D7AADC(0, &qword_1EA1A6C08, (uint64_t (*)(void))sub_1C0D7A31C, (uint64_t)&type metadata for FormatSponsoredBannerLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v15 = *(void *)(v4 - 8);
  uint64_t v16 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0D7A31C();
  uint64_t v17 = v6;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v15;
    LOBYTE(v18) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v8;
    LOBYTE(v18) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v18) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    type metadata accessor for CGRect(0);
    char v20 = 3;
    sub_1BFE4C4A8(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v12 = v19;
    *(_OWORD *)(v1 + 64) = v18;
    *(_OWORD *)(v1 + 80) = v12;
    char v20 = 4;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 96) = v18;
    LOBYTE(v18) = 5;
    *(void *)(v1 + 104) = sub_1C15206DC();
    char v20 = 6;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 112) = v18;
    LOBYTE(v18) = 7;
    *(unsigned char *)(v1 + 120) = sub_1C15206AC() & 1;
    type metadata accessor for FormatContextLayoutOptions();
    char v20 = 8;
    sub_1BFE4C4A8(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 128) = v18;
    char v20 = 9;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v13 = BYTE8(v18);
    *(void *)(v1 + 136) = v18;
    *(unsigned char *)(v1 + 144) = v13;
    sub_1C0D7AADC(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v20 = 10;
    sub_1C0D7AB44(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    *(void *)(v1 + 152) = v18;
    type metadata accessor for FormatSponsoredBannerNodeStyle();
    char v20 = 11;
    sub_1BFE4C4A8(&qword_1EB86D4B8, 255, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNodeStyle);
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v16);
    *(void *)(v1 + 160) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C0D7AADC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0D7AB44(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0D7AADC(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0D7ABE8(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C4A8(&qword_1EA1A6C10, a2, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
}

uint64_t sub_1C0D7AC30()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0D7AC3C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C4A8(&qword_1EA1A6C18, a2, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
}

uint64_t sub_1C0D7AC84(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C4A8(&qword_1EA1A6C20, a2, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
}

uint64_t sub_1C0D7ACCC(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C4A8(&qword_1EA1A6C28, a2, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
}

uint64_t sub_1C0D7AD14@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatSponsoredBannerLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0D7AD6C(void *a1)
{
  return FormatSponsoredBannerLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C0D7AD90(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C4A8(&qword_1EA1A6C48, a2, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
  return sub_1C151798C();
}

uint64_t method lookup function for FormatSponsoredBannerLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSponsoredBannerLayoutAttributes);
}

uint64_t dispatch thunk of FormatSponsoredBannerLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:style:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FormatSponsoredBannerLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

unsigned char *storeEnumTagSinglePayload for FormatSponsoredBannerLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D7AF7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSponsoredBannerLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatSponsoredBannerLayoutAttributes.CodingKeys;
}

unint64_t sub_1C0D7AFB8()
{
  unint64_t result = qword_1EA1A6C30;
  if (!qword_1EA1A6C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6C30);
  }
  return result;
}

unint64_t sub_1C0D7B010()
{
  unint64_t result = qword_1EA1A6C38;
  if (!qword_1EA1A6C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6C38);
  }
  return result;
}

unint64_t sub_1C0D7B068()
{
  unint64_t result = qword_1EA1A6C40;
  if (!qword_1EA1A6C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6C40);
  }
  return result;
}

uint64_t sub_1C0D7B0BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1608F10 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

ValueMetadata *type metadata accessor for A12_V13()
{
  return &type metadata for A12_V13;
}

uint64_t sub_1C0D7B58C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0D7F7FC(0, &qword_1EA1A6D00, (uint64_t (*)(void))sub_1C0D7F7A8, (uint64_t)&type metadata for A12_V13.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0D7F7A8();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0D7F864(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0D7B7D4(uint64_t a1)
{
  unint64_t v2 = sub_1C0D7F7A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0D7B810(uint64_t a1)
{
  unint64_t v2 = sub_1C0D7F7A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0D7B84C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0D7F4F8(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0D7B894(void *a1)
{
  return sub_1C0D7B58C(a1);
}

uint64_t sub_1C0D7B8AC()
{
  sub_1C0D7F17C();
  return sub_1C151798C();
}

uint64_t sub_1C0D7B928@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0D7F7FC(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0D7B9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v61 = a3;
  uint64_t v5 = sub_1C151635C();
  uint64_t v56 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v62 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v12 = (char *)&v49 - v11;
  uint64_t v13 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  *(void *)&long long v70 = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)&v70))
  {
    sub_1C0020AF0();
    swift_allocError();
    *(_OWORD *)uint64_t v19 = 0u;
    *(_OWORD *)(v19 + 16) = 0u;
    *(void *)(v19 + 32) = 0;
    *(unsigned char *)(v19 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    uint64_t v55 = a1;
    long long v52 = v15;
    sub_1BFF1AFA4(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    long long v54 = type metadata accessor for GroupLayoutContext;
    long long v53 = v12;
    sub_1BFF1AFA4(v74, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    char v21 = v17;
    uint64_t v22 = v17;
    unsigned __int8 v23 = v18;
    sub_1BFFFC7A0(v22, v18);
    sub_1C151634C();
    uint64_t v51 = sub_1C151633C();
    uint64_t v50 = v24;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v5);
    uint64_t v72 = &type metadata for A12_V13;
    unint64_t v25 = sub_1C01868CC();
    unint64_t v73 = v25;
    LOBYTE(v70) = v16;
    *((void *)&v70 + 1) = v21;
    unsigned __int8 v71 = v18;
    type metadata accessor for GroupLayoutKey();
    uint64_t v26 = swift_allocObject();
    sub_1BFFFC7A0(v21, v18);
    uint64_t v64 = sub_1C1520FAC();
    uint64_t v65 = v27;
    uint64_t v68 = 95;
    unint64_t v69 = 0xE100000000000000;
    uint64_t v66 = 45;
    unint64_t v67 = 0xE100000000000000;
    sub_1BFF27ECC();
    uint64_t v28 = sub_1C151FEBC();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *(void *)(v26 + 16) = v28;
    *(void *)(v26 + 24) = v30;
    unint64_t v31 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    uint64_t v32 = v50;
    *unint64_t v31 = v51;
    v31[1] = v32;
    sub_1BFC66384((uint64_t)&v70, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    uint64_t v33 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BFF2389C((uint64_t)v52, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v33, 0, 1, v58);
    uint64_t v34 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BFF2389C((uint64_t)v53, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v34, 0, 1, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    sub_1BFFFC630(v21, v18);
    uint64_t v72 = &type metadata for A12_V13;
    unint64_t v73 = v25;
    LOBYTE(v70) = v16;
    *((void *)&v70 + 1) = v21;
    unsigned __int8 v71 = v18;
    uint64_t v35 = v62;
    sub_1BFF1AFA4(v74, v62, (uint64_t (*)(void))v54);
    sub_1C00191E0(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = MEMORY[0x1E4FBC860];
    char v37 = (void *)(v36 + 16);
    swift_beginAccess();
    uint64_t v38 = *(void **)(v36 + 16);
    sub_1BFFFC7A0(v21, v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v36 + 16) = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v38 = sub_1BFFB83AC(0, v38[2] + 1, 1, v38);
      *char v37 = v38;
    }
    char v40 = v61;
    uint64_t v41 = v63;
    unint64_t v43 = v38[2];
    unint64_t v42 = v38[3];
    if (v43 >= v42 >> 1)
    {
      uint64_t v38 = sub_1BFFB83AC((void *)(v42 > 1), v43 + 1, 1, v38);
      *char v37 = v38;
    }
    v38[2] = v43 + 1;
    uint64_t v44 = &v38[2 * v43];
    v44[4] = sub_1C064667C;
    v44[5] = 0;
    swift_endAccess();
    uint64_t v45 = sub_1C001E608((uint64_t)&unk_1F1B83580, 0, 0, v36, 0, 0, 0, 0);
    if (v41)
    {
      swift_release();
      swift_release();
      sub_1BFF1F104(v35, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    }
    else
    {
      uint64_t v46 = v45;
      swift_release();
      uint64_t v47 = type metadata accessor for A12_V13.Bound();
      v40[3] = v47;
      v40[4] = sub_1C0D7F864(&qword_1EA1A6C60, (void (*)(uint64_t))type metadata accessor for A12_V13.Bound);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
      uint64_t *boxed_opaque_existential_0 = v26;
      sub_1BFC773DC(&v70, (uint64_t)(boxed_opaque_existential_0 + 1));
      uint64_t result = sub_1BFF2389C(v35, (uint64_t)boxed_opaque_existential_0 + *(int *)(v47 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v47 + 28)) = v46;
    }
  }
  return result;
}

double sub_1C0D7C0D4@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v35 = sub_1C1517A9C();
  *(void *)&long long v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  v33[0] = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00191E0(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = type metadata accessor for A12_V13.Bound();
  uint64_t v6 = v1 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = v6;
  v33[1] = v6;
  uint64_t v10 = *(void *)(v6 + v8);
  uint64_t v11 = *(void *)(v10 + 16);
  double v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BFC66384(v11 + 16, (uint64_t)&v43);
  sub_1BFC66384(v11 + 56, (uint64_t)v42);
  double v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v43, v14 + 16);
  sub_1BFC773DC(v42, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v41[0]) = 0;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v41, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v10 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v42);
  sub_1BFC66384(v15 + 56, (uint64_t)v41);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v42, v17 + 16);
  sub_1BFC773DC(v41, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v40[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v40, (uint64_t *)&v43);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v18 = sub_1BFEB3714((uint64_t)&v43, *(void *)(*(void *)(v2 + *(int *)(v5 + 28)) + 16) - 1);
  *(void *)&long long v43 = inited;
  sub_1BFEB37F8(v18);
  uint64_t v19 = v43;
  v39[2] = v2;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C06472C0(v20, v19, (void (*)(char *, uint64_t))sub_1C0D7F118, (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *MEMORY[0x1E4FAB6D8];
  uint64_t v23 = sub_1C151759C();
  uint64_t v24 = v33[0];
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v33[0], v22, v23);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v24, *MEMORY[0x1E4FAB8F0], v35);
  uint64_t v37 = v21;
  uint64_t v38 = v2;
  sub_1C0D7F234(0, &qword_1EA1A6C80, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v35 = sub_1C1517BEC();
  uint64_t v25 = sub_1C1517BFC();
  long long v34 = v43;
  uint64_t v26 = v44;
  uint64_t v27 = v45;
  *(void *)&long long v43 = v21;
  *(void *)&v42[0] = v46;
  MEMORY[0x1F4188790](v25);
  sub_1C00191E0(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v43 = v28;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v29 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v36;
  *uint64_t v36 = 0;
  double result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v27;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  *((void *)v30 + 5) = v29;
  *((void *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1C0D7C67C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0D7C74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0D7F7FC(0, &qword_1EA1A6C98, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 12;
  *uint64_t v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0D7F234(0, &qword_1EA1A6CA0, MEMORY[0x1E4FAB6F0]);
  sub_1C0D7F1F0(&qword_1EA1A6CA8, &qword_1EA1A6CA0, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C0D7C93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  sub_1C0D7F7FC(0, &qword_1EA1A6C98, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = sub_1C151729C();
  uint64_t v10 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, *MEMORY[0x1E4FAB4E8], v9);
  *uint64_t v8 = v10;
  double v12 = *(void (**)(uint64_t *, void, uint64_t))(v6 + 104);
  v12(v8, *MEMORY[0x1E4FAB940], v5);
  double v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D7F234(0, &qword_1EA1A6CB0, MEMORY[0x1E4FAB4D0]);
  sub_1C0D7F1F0(&qword_1EA1A6CB8, &qword_1EA1A6CB0, v13);
  sub_1C151738C();
  uint64_t v14 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v14(v8, v5);
  uint64_t v20 = a1;
  v12(v8, *MEMORY[0x1E4FAB9E0], v5);
  uint64_t v18 = v16;
  uint64_t v19 = v17;
  sub_1C151731C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v8, v5);
}

uint64_t sub_1C0D7CBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  uint64_t v26 = a2;
  sub_1C0D7F7FC(0, &qword_1EA1A6C98, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v25 - v7);
  uint64_t v34 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  unsigned int v28 = *MEMORY[0x1E4FABA10];
  uint64_t v27 = *(void (**)(uint64_t *))(v6 + 104);
  v27(v8);
  sub_1C0D7F2C0();
  sub_1C0D7F7FC(0, &qword_1EA1A6CC8, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  unint64_t v15 = v14 + v13;
  sub_1C003F3A8();
  uint64_t v17 = (void *)(v15 + *(int *)(v16 + 48));
  uint64_t v18 = *MEMORY[0x1E4FAB7E0];
  uint64_t v19 = sub_1C151789C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v15, v18, v19);
  *uint64_t v17 = 0x6C6F437468676972;
  v17[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E4FAB5B0], v11);
  uint64_t v20 = v26;
  uint64_t v33 = v26;
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D7F234(0, &qword_1EA1A6CB0, MEMORY[0x1E4FAB4D0]);
  sub_1C0D7F1F0(&qword_1EA1A6CB8, &qword_1EA1A6CB0, v21);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v22(v8, v5);
  uint64_t v34 = v29;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 6;
  *uint64_t v8 = v23;
  ((void (*)(uint64_t *, void, uint64_t))v27)(v8, v28, v5);
  uint64_t v31 = v20;
  uint64_t v32 = v30;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v22)(v8, v5);
}

uint64_t sub_1C0D7CFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v42 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D7F7FC(0, &qword_1EA1A6C98, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v36 - v18;
  uint64_t v45 = v44;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v44 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v37 = v5;
  uint64_t v38 = v16;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = unk_1F1B89CF8;
  if ((unk_1F1B89CF8 & ~qword_1F1B89CF0) == 0) {
    uint64_t v21 = 0;
  }
  uint64_t v22 = v21 | qword_1F1B89CF0;
  uint64_t v23 = (char *)v10 + v8[5];
  uint64_t v24 = *MEMORY[0x1E4FAB8C8];
  uint64_t v25 = sub_1C1517A7C();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  uint64_t v27 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v22;
  *(uint64_t *)((char *)v10 + v8[6]) = 0;
  unsigned int v28 = *v27;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v28;
  uint64_t v29 = qword_1EB87CC48;
  id v30 = v28;
  if (v29 != -1) {
    goto LABEL_7;
  }
LABEL_5:
  swift_retain();
  sub_1C151709C();
  uint64_t v31 = swift_release();
  __n128 v32 = MEMORY[0x1F4188790](v31);
  *(&v36 - 4) = (uint64_t)v14;
  *(&v36 - 3) = (uint64_t)v10;
  unint64_t v35 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v40 + 104))(v42, *MEMORY[0x1E4FAB8F8], v41, v32);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v37);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v33 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D7F234(0, &qword_1EA1A6CB0, MEMORY[0x1E4FAB4D0]);
  sub_1C0D7F1F0(&qword_1EA1A6CB8, &qword_1EA1A6CB0, v33);
  unint64_t v35 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v19, v38);
}

uint64_t sub_1C0D7D5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v81 = a3;
  uint64_t v77 = a2;
  uint64_t v67 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v67);
  uint64_t v68 = (void *)((char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v65 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v66 = (uint64_t)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D7F7FC(0, &qword_1EA1A6C98, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v82 = (void *)((char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (void *)((char *)v64 - v14);
  uint64_t v85 = a1;
  uint64_t v16 = *MEMORY[0x1E4FABA28];
  uint64_t v17 = *(void (**)(void))(v10 + 104);
  uint64_t v71 = v10 + 104;
  BOOL v83 = v17;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v17)((char *)v64 - v14, v16, v9, v13);
  sub_1C0D7F2C0();
  uint64_t v76 = v18;
  sub_1C0D7F7FC(0, &qword_1EA1A6CC8, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v20 = v19;
  uint64_t v79 = v19;
  uint64_t v21 = *(void *)(*(void *)(v19 - 8) + 72);
  uint64_t v22 = *(unsigned __int8 *)(*(void *)(v19 - 8) + 80);
  uint64_t v23 = *(void *)(v19 - 8);
  uint64_t v24 = (v22 + 32) & ~v22;
  uint64_t v73 = v24;
  uint64_t v74 = v22 | 7;
  uint64_t v75 = v24 + v21;
  uint64_t v25 = swift_allocObject();
  long long v72 = xmmword_1C1529AE0;
  *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
  uint64_t v26 = *MEMORY[0x1E4FAB638];
  uint64_t v27 = *(uint64_t (**)(double *, void, uint64_t))(v23 + 104);
  uint64_t v78 = v23 + 104;
  uint64_t v80 = v27;
  v27((double *)(v25 + v24), v26, v20);
  uint64_t v84 = a2;
  unsigned int v28 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D7F234(0, &qword_1EA1A6CB0, MEMORY[0x1E4FAB4D0]);
  uint64_t v30 = v29;
  uint64_t v63 = sub_1C0D7F1F0(&qword_1EA1A6CB8, &qword_1EA1A6CB0, v28);
  sub_1C151731C();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
  v31(v15, v9);
  uint64_t v85 = a1;
  uint64_t v32 = sub_1C151729C();
  uint64_t v33 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x1E4FAB4E8], v32);
  *uint64_t v15 = v33;
  ((void (*)(uint64_t *, void, uint64_t))v83)(v15, *MEMORY[0x1E4FAB940], v9);
  v64[2] = v30;
  v64[1] = v63;
  sub_1C151738C();
  uint64_t v69 = v10 + 8;
  v64[0] = v31;
  v31(v15, v9);
  uint64_t v85 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1C0386118();
  uint64_t v37 = v36;
  uint64_t v38 = swift_allocBox();
  uint64_t v40 = (char *)v39 + *(int *)(v37 + 48);
  *uint64_t v39 = 2;
  uint64_t v41 = *MEMORY[0x1E4FAB8C8];
  uint64_t v42 = sub_1C1517A7C();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 104);
  v44(v40, v41, v42);
  *uint64_t v82 = v38;
  uint64_t v70 = v9;
  v83();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v72;
  uint64_t v46 = (double *)(v45 + v73);
  uint64_t v47 = v81 + *(int *)(type metadata accessor for A12_V13.Bound() + 24);
  *uint64_t v46 = *(double *)(v47 + *(int *)(type metadata accessor for GroupLayoutContext() + 32)) * 135.0;
  uint64_t result = v80(v46, *MEMORY[0x1E4FAB670], v79);
  if (*(void *)(v77 + 16) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v49 = v77
        + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))
        + 3 * *(void *)(v65 + 72);
    BOOL v83 = (void (*)(void))KeyPath;
    uint64_t v50 = v66;
    sub_1BFF1AFA4(v49, v66, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v51 = qword_1F1B89D20;
    long long v52 = v44;
    uint64_t v53 = v67;
    long long v54 = v68;
    uint64_t v55 = (char *)v68 + *(int *)(v67 + 20);
    v52(v55, v41, v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v55, 0, 1, v42);
    uint64_t v56 = (void *)*MEMORY[0x1E4FB27D0];
    *long long v54 = v51;
    *(uint64_t *)((char *)v54 + *(int *)(v53 + 24)) = 0;
    *(uint64_t *)((char *)v54 + *(int *)(v53 + 28)) = (uint64_t)v56;
    double v57 = *MEMORY[0x1E4FB2848];
    double v58 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v59 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v60 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v61 = v56;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v50, (uint64_t)v54, v57, v58, v59, v60);
    sub_1BFF1F104((uint64_t)v54, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BFF1F104(v50, type metadata accessor for HeadlineViewLayout.Context);
    sub_1BFD5DED4();
    uint64_t v62 = v82;
    sub_1C151735C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return ((uint64_t (*)(uint64_t *, uint64_t))v64[0])(v62, v70);
  }
  return result;
}

uint64_t sub_1C0D7DDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C0D7F7FC(0, &qword_1EA1A6C98, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 3;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D7F234(0, &qword_1EA1A6CB0, MEMORY[0x1E4FAB4D0]);
  sub_1C0D7F1F0(&qword_1EA1A6CB8, &qword_1EA1A6CB0, v12);
  sub_1C151734C();
  __n128 v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 3;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C0D7E06C(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D7F7FC(0, &qword_1EA1A6C98, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2+ *(void *)(v12 + 72)+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B89D48;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D7F234(0, &qword_1EA1A6CB0, MEMORY[0x1E4FAB4D0]);
  sub_1C0D7F1F0(&qword_1EA1A6CB8, &qword_1EA1A6CB0, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C0D7E660(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D7F7FC(0, &qword_1EA1A6C98, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 2 * *(void *)(v12 + 72), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B89D70;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D7F234(0, &qword_1EA1A6CB0, MEMORY[0x1E4FAB4D0]);
  sub_1C0D7F1F0(&qword_1EA1A6CB8, &qword_1EA1A6CB0, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C0D7EC54@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V13.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0D7ED44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0D7B9E4(a1, a2, a3);
}

uint64_t sub_1C0D7ED5C()
{
  return sub_1C12BC358();
}

unint64_t sub_1C0D7ED6C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0D7ED9C();
  unint64_t result = sub_1C0D7EDF0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0D7ED9C()
{
  unint64_t result = qword_1EA1A6C50;
  if (!qword_1EA1A6C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6C50);
  }
  return result;
}

unint64_t sub_1C0D7EDF0()
{
  unint64_t result = qword_1EA1A6C58;
  if (!qword_1EA1A6C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6C58);
  }
  return result;
}

uint64_t type metadata accessor for A12_V13.Bound()
{
  uint64_t result = qword_1EA1A6C68;
  if (!qword_1EA1A6C68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0D7EE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0D7EEA4);
}

uint64_t sub_1C0D7EEA4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0D7EF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0D7EF68);
}

void *sub_1C0D7EF68(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0D7F010()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0D7F0C0(uint64_t a1)
{
  uint64_t result = sub_1C0D7F864(&qword_1EA1A6C78, (void (*)(uint64_t))type metadata accessor for A12_V13.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D7F118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0D7C67C(a1, a2, a3);
}

uint64_t sub_1C0D7F120(uint64_t a1)
{
  return sub_1C0D7C74C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C0D7F128()
{
  unint64_t result = qword_1EA1A6C88;
  if (!qword_1EA1A6C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6C88);
  }
  return result;
}

unint64_t sub_1C0D7F17C()
{
  unint64_t result = qword_1EA1A6C90;
  if (!qword_1EA1A6C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6C90);
  }
  return result;
}

uint64_t sub_1C0D7F1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0D7EC54(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0D7F1D8()
{
  return swift_deallocObject();
}

uint64_t sub_1C0D7F1E8(uint64_t a1)
{
  return sub_1C0D7C93C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0D7F1F0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0D7F234(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0D7F234(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V13.Layout;
    v8[1] = &type metadata for A12_V13.Layout.Attributes;
    v8[2] = sub_1C0D7F128();
    v8[3] = sub_1C0D7F17C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0D7F2B8(uint64_t a1)
{
  return sub_1C0D7CBC8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C0D7F2C0()
{
  if (!qword_1EA1A6CC0)
  {
    sub_1C0D7F7FC(255, &qword_1EA1A6CC8, (uint64_t (*)(void))sub_1C0D7F128, (uint64_t)&type metadata for A12_V13.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A6CC0);
    }
  }
}

uint64_t sub_1C0D7F350(uint64_t a1)
{
  return sub_1C0D7CFE4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0D7F358(uint64_t a1)
{
  return sub_1C0D7D5D8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0D7F360(uint64_t a1)
{
  return sub_1C0D7DDC8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0D7F368(uint64_t a1)
{
  return sub_1C0D7E06C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0D7F370(uint64_t a1)
{
  return sub_1C0D7E660(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V13.Layout.Attributes()
{
  return &type metadata for A12_V13.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V13.Layout()
{
  return &type metadata for A12_V13.Layout;
}

unint64_t sub_1C0D7F39C()
{
  unint64_t result = qword_1EA1A6CD0;
  if (!qword_1EA1A6CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6CD0);
  }
  return result;
}

unint64_t sub_1C0D7F3F4()
{
  unint64_t result = qword_1EA1A6CD8;
  if (!qword_1EA1A6CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6CD8);
  }
  return result;
}

unint64_t sub_1C0D7F44C()
{
  unint64_t result = qword_1EA1A6CE0;
  if (!qword_1EA1A6CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6CE0);
  }
  return result;
}

unint64_t sub_1C0D7F4A4()
{
  unint64_t result = qword_1EA1A6CE8;
  if (!qword_1EA1A6CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6CE8);
  }
  return result;
}

uint64_t sub_1C0D7F4F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0D7F7FC(0, &qword_1EA1A6CF0, (uint64_t (*)(void))sub_1C0D7F7A8, (uint64_t)&type metadata for A12_V13.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0D7F7A8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0D7F864(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C0D7F7A8()
{
  unint64_t result = qword_1EA1A6CF8;
  if (!qword_1EA1A6CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6CF8);
  }
  return result;
}

void sub_1C0D7F7FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0D7F864(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V13.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D7F978);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V13.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V13.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0D7F9B4()
{
  unint64_t result = qword_1EA1A6D08;
  if (!qword_1EA1A6D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6D08);
  }
  return result;
}

unint64_t sub_1C0D7FA0C()
{
  unint64_t result = qword_1EA1A6D10;
  if (!qword_1EA1A6D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6D10);
  }
  return result;
}

unint64_t sub_1C0D7FA64()
{
  unint64_t result = qword_1EA1A6D18;
  if (!qword_1EA1A6D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6D18);
  }
  return result;
}

uint64_t FormatResizeAuto.mask.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatResizeAuto.mask.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatResizeAuto.mask.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C0D7FB8C()
{
  swift_beginAccess();
  uint64_t result = 0;
  int64_t v2 = 0;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v3 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v3 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8) {
      return result;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v2;
    if (!v13)
    {
      int64_t v2 = v12 + 1;
      if (v12 + 1 >= v8) {
        return result;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v2);
      if (!v13)
      {
        int64_t v2 = v12 + 2;
        if (v12 + 2 >= v8) {
          return result;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v2);
        if (!v13) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v2 << 6);
LABEL_5:
    uint64_t v11 = qword_1C15A5080[*(char *)(*(void *)(v3 + 48) + v10)];
    if ((v11 & result) != 0) {
      uint64_t v11 = 0;
    }
    result |= v11;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v8) {
    return result;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v2 >= v8) {
      return result;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v2);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t FormatResizeAuto.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatResizeAuto.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D7FD28(uint64_t a1)
{
  uint64_t result = sub_1C0D7FDF8(&qword_1EA1A6D20);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D7FD6C(void *a1)
{
  a1[1] = sub_1C0D7FDF8(&qword_1EB887F88);
  a1[2] = sub_1C0D7FDF8(&qword_1EB865D68);
  uint64_t result = sub_1C0D7FDF8(&qword_1EA1A6D28);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0D7FDF8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatResizeAuto();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0D7FE38(void *a1)
{
  return FormatResizeAuto.encode(to:)(a1);
}

uint64_t sub_1C0D7FE5C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1C00ACCAC(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1C0D7FEF4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatResizeAuto(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatResizeAuto);
}

uint64_t FormatTextNodeLink.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatTextNodeLink.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatTextNodeLink() + 20);
  return sub_1C0D7FFB0(v3, a1);
}

uint64_t sub_1C0D7FFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1C0D80014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6 = v4;
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v19 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v20 = (uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v4;
  swift_retain();
  unint64_t v13 = (void *)sub_1BFF4DC90(a1, a2, a3, a4);
  swift_release();
  if (!v5)
  {
    uint64_t v14 = v19;
    type metadata accessor for FormatTextNodeLink();
    uint64_t v15 = v20;
    sub_1C003B0FC(a1, v20);
    char v6 = (uint64_t *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v13);
    uint64_t v17 = *MEMORY[0x1E4FB0720];
    uint64_t v18 = (void *)sub_1C1515E9C();
    objc_msgSend(v6, sel_addAttribute_value_range_, v17, v18, 0, objc_msgSend(v13, sel_length));

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v11);
  }
  return v6;
}

uint64_t static FormatTextNodeLink.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = *a1;
  unint64_t v7 = *a2;
  uint64_t v8 = v4;
  if ((static FormatTextContent.== infix(_:_:)(&v8, &v7) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(type metadata accessor for FormatTextNodeLink() + 20);
  return _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5, (uint64_t)a2 + v5);
}

uint64_t sub_1C0D80278@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatTextNodeLink.init(from:)(a1, a2);
}

uint64_t sub_1C0D80290(void *a1)
{
  return FormatTextNodeLink.encode(to:)(a1);
}

uint64_t sub_1C0D802A8(uint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v9 = *a2;
  uint64_t v10 = v6;
  if ((static FormatTextContent.== infix(_:_:)(&v10, &v9) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(int *)(a3 + 20);
  return _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v7, (uint64_t)a2 + v7);
}

uint64_t sub_1C0D80330(uint64_t a1)
{
  uint64_t result = sub_1C0D80400(&qword_1EA1A6D30);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D80374(void *a1)
{
  a1[1] = sub_1C0D80400(&qword_1EA19E5E0);
  a1[2] = sub_1C0D80400(&qword_1EA1A08D8);
  uint64_t result = sub_1C0D80400(&qword_1EA1A6D38);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0D80400(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatTextNodeLink();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatTextNodeLink(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    type metadata accessor for FormatURL();
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = *(void *)v7;
      uint64_t v12 = *((void *)v7 + 1);
      uint64_t v13 = *((void *)v7 + 2);
      char v14 = v7[24];
      sub_1BFE86E48(v11, v12, v13, v14);
      *(void *)uint64_t v6 = v11;
      *((void *)v6 + 1) = v12;
      *((void *)v6 + 2) = v13;
      v6[24] = v14;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v9 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v9;
        *((void *)v6 + 2) = *((void *)v7 + 2);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v15 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v6, v7, v15);
        uint64_t v16 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v6[*(int *)(v16 + 20)] = *(void *)&v7[*(int *)(v16 + 20)];
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for FormatTextNodeLink(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FormatURL();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v7 = *(void *)v4;
    uint64_t v8 = *(void *)(v4 + 8);
    uint64_t v9 = *(void *)(v4 + 16);
    char v10 = *(unsigned char *)(v4 + 24);
    return sub_1BFD7418C(v7, v8, v9, v10);
  }
  else
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v6 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
      type metadata accessor for FormatAbsoluteURL();
    }
    return swift_bridgeObjectRelease();
  }
}

void *initializeWithCopy for FormatTextNodeLink(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  type metadata accessor for FormatURL();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = *(void *)v6;
    uint64_t v10 = *((void *)v6 + 1);
    uint64_t v11 = *((void *)v6 + 2);
    char v12 = v6[24];
    sub_1BFE86E48(v9, v10, v11, v12);
    *(void *)uint64_t v5 = v9;
    *((void *)v5 + 1) = v10;
    *((void *)v5 + 2) = v11;
    v5[24] = v12;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *((void *)v6 + 1);
      *(void *)uint64_t v5 = *(void *)v6;
      *((void *)v5 + 1) = v8;
      *((void *)v5 + 2) = *((void *)v6 + 2);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v5, v6, v13);
      uint64_t v14 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v5[*(int *)(v14 + 20)] = *(void *)&v6[*(int *)(v14 + 20)];
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for FormatTextNodeLink(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C0C15DA0((uint64_t)a1 + v6);
    type metadata accessor for FormatURL();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = *(void *)v8;
      uint64_t v11 = *((void *)v8 + 1);
      uint64_t v12 = *((void *)v8 + 2);
      char v13 = v8[24];
      sub_1BFE86E48(v10, v11, v12, v13);
      *(void *)uint64_t v7 = v10;
      *((void *)v7 + 1) = v11;
      *((void *)v7 + 2) = v12;
      v7[24] = v13;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v14 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
        uint64_t v15 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v7[*(int *)(v15 + 20)] = *(void *)&v8[*(int *)(v15 + 20)];
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for FormatTextNodeLink(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for FormatURL();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    uint64_t v9 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&v5[*(int *)(v9 + 20)] = *(void *)&v6[*(int *)(v9 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for FormatTextNodeLink(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C0C15DA0((uint64_t)a1 + v6);
    uint64_t v9 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      uint64_t v11 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v7[*(int *)(v11 + 20)] = *(void *)&v8[*(int *)(v11 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatTextNodeLink(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0D80B74);
}

uint64_t sub_1C0D80B74(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 118)
  {
    int v4 = (*a1 >> 60) & 0x8F | (16 * (*a1 & 7));
    unsigned int v5 = v4 ^ 0x7E;
    unsigned int v6 = 128 - v4;
    if (v5 >= 0x76) {
      return 0;
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for FormatURL();
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    char v13 = (char *)a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for FormatTextNodeLink(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0D80C40);
}

unint64_t *sub_1C0D80C40(unint64_t *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 118)
  {
    uint64_t v6 = (-(int)a2 >> 4) & 7 | (8 * (-(int)a2 & 0x7F));
    *uint64_t result = (v6 | (v6 << 57)) & 0xF000000000000007;
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatURL();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
    return (unint64_t *)v9(v11, a2, a2, v10);
  }
  return result;
}

void *sub_1C0D80CF4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    unsigned int v10 = a2[v5];
    if (v10 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_18;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_18;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_18;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_18:
          int v13 = (v12 | ((v10 - 2) << (8 * v5))) + 2;
          unsigned int v14 = v12 + 2;
          if (v5 >= 4) {
            unsigned int v10 = v14;
          }
          else {
            unsigned int v10 = v13;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(void *))(v4 + 16))(a1);
    *((unsigned char *)v3 + v5) = v10 == 1;
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1C0D80E5C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_10;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_10:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  BOOL v10 = v5 == 1;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C0D80F7C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_11;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_11:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    BOOL v14 = v9 == 1;
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
    a1[v8] = v14;
  }
  return a1;
}

uint64_t sub_1C0D810E4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_10;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_10:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  BOOL v10 = v5 == 1;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C0D81204(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_11;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_11:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    BOOL v14 = v9 == 1;
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
    a1[v8] = v14;
  }
  return a1;
}

uint64_t sub_1C0D8136C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_20;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_20:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_20;
  }
LABEL_12:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_1C0D81494(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_32:
        __break(1u);
        JUMPOUT(0x1C0D81650);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_20;
      case 3:
        goto LABEL_32;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (a2) {
LABEL_21:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C0D81678(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_10;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_10;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_10;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_10:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

char *initializeBufferWithCopyOfBuffer for FormatServiceError(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    int v12 = *a2;
    *(void *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = sub_1C1515FDC();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        sub_1C0157218();
        uint64_t v9 = *(int *)(v8 + 48);
        unsigned int v10 = *(char **)((char *)a2 + v9);
        id v11 = v10;
        *(void *)&a1[v9] = v10;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        BOOL v14 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v14;
        uint64_t v15 = a2[2];
        uint64_t v16 = a2[3];
        *((void *)a1 + 2) = v15;
        *((void *)a1 + 3) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 6u:
        uint64_t v17 = sub_1C1515FDC();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v18 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v18;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v19 = *a2;
        uint64_t v20 = v19;
        *(void *)a1 = v19;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        uint64_t v21 = *a2;
        uint64_t v22 = a2[1];
        *(void *)a1 = v21;
        *((void *)a1 + 1) = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for FormatServiceError(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = sub_1C1515FDC();
      (*(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      sub_1C0157218();
      uint64_t v6 = *(void **)((char *)a1 + *(int *)(v5 + 48));
      goto LABEL_7;
    case 2u:
    case 0xBu:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 3u:
    case 6u:
      uint64_t v2 = sub_1C1515FDC();
      uint64_t v3 = *(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8);
      v3(a1, v2);
      return;
    case 4u:
    case 5u:
    case 9u:
LABEL_11:
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      uint64_t v6 = *a1;
LABEL_7:

      break;
    default:
      return;
  }
}

void *initializeWithCopy for FormatServiceError(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_1C1515FDC();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      sub_1C0157218();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = *(void **)((char *)a2 + v8);
      id v10 = v9;
      *(void *)((char *)a1 + v8) = v9;
      goto LABEL_10;
    case 2u:
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[2];
      uint64_t v13 = a2[3];
      a1[2] = v12;
      a1[3] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 3u:
    case 6u:
      uint64_t v14 = sub_1C1515FDC();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      goto LABEL_10;
    case 4u:
    case 5u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 9u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 0xAu:
      uint64_t v16 = (void *)*a2;
      id v17 = v16;
      *a1 = v16;
      goto LABEL_10;
    case 0xBu:
      uint64_t v18 = *a2;
      uint64_t v19 = a2[1];
      *a1 = v18;
      a1[1] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for FormatServiceError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0D820B0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_1C1515FDC();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        sub_1C0157218();
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v9 = *(void **)((char *)a2 + v8);
        id v10 = v9;
        *(void *)((char *)a1 + v8) = v9;
        goto LABEL_11;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 3u:
      case 6u:
        uint64_t v11 = sub_1C1515FDC();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        goto LABEL_11;
      case 4u:
      case 5u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 0xAu:
        uint64_t v12 = (void *)*a2;
        id v13 = v12;
        *a1 = v12;
        goto LABEL_11;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C0D820B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatServiceError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatServiceError()
{
  uint64_t result = qword_1EB8601C8;
  if (!qword_1EB8601C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *initializeWithTake for FormatServiceError(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 6 || EnumCaseMultiPayload == 3)
  {
    uint64_t v9 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    sub_1C0157218();
    *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for FormatServiceError(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0D820B0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 6 || EnumCaseMultiPayload == 3)
    {
      uint64_t v9 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      sub_1C0157218();
      *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C0D82460()
{
  v3[4] = MEMORY[0x1E4FBADA0] + 64;
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[5] = v3;
    v3[6] = &unk_1C15A5250;
    v3[7] = v2;
    v3[8] = MEMORY[0x1E4FBAD80] + 64;
    v3[9] = MEMORY[0x1E4FBAD80] + 64;
    v3[10] = v2;
    v3[11] = &unk_1C15A5268;
    v3[12] = &unk_1C15A5280;
    v3[13] = &unk_1C15A5298;
    v3[14] = &unk_1C15A52B0;
    v3[15] = &unk_1C15A5298;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for GroupLayoutContext(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1C151772C();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151757C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    id v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *(_OWORD *)id v13 = *(_OWORD *)((char *)a2 + v12);
    v13[16] = *((unsigned char *)a2 + v12 + 16);
    *(_WORD *)(v13 + 17) = *(_WORD *)((char *)a2 + v12 + 17);
    v13[19] = *((unsigned char *)a2 + v12 + 19);
    *((_DWORD *)v13 + 5) = *(_DWORD *)((char *)a2 + v12 + 20);
    unint64_t v15 = *(void *)((char *)a2 + v12 + 24);
    if (v15 >= 2) {
      unint64_t v15 = swift_bridgeObjectRetain();
    }
    *((void *)v13 + 3) = v15;
    uint64_t v16 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v17 = *(int *)(v16 + 36);
    uint64_t v18 = &v13[v17];
    uint64_t v19 = &v14[v17];
    uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_1C01BB2C0();
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v24 = sub_1C151B62C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v18, v19, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    *(void *)&v13[*(int *)(v16 + 40)] = *(void *)&v14[*(int *)(v16 + 40)];
    uint64_t v25 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)v4 + v25) = *(void *)((char *)a2 + v25);
    uint64_t v26 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *(void *)((char *)v4 + v26) = *(void *)((char *)a2 + v26);
    uint64_t v27 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *(void *)((char *)v4 + v27) = *(void *)((char *)a2 + v27);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t assignWithCopy for GroupLayoutContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  __n128 v31 = a3;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(a2 + v11);
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(a2 + v11 + 16);
  *(_OWORD *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 17) = *(unsigned char *)(a2 + v11 + 17);
  *(unsigned char *)(v12 + 18) = *(unsigned char *)(a2 + v11 + 18);
  *(unsigned char *)(v12 + 19) = *(unsigned char *)(a2 + v11 + 19);
  *(unsigned char *)(v12 + 20) = *(unsigned char *)(a2 + v11 + 20);
  *(unsigned char *)(v12 + 21) = *(unsigned char *)(a2 + v11 + 21);
  *(unsigned char *)(v12 + 22) = *(unsigned char *)(a2 + v11 + 22);
  *(unsigned char *)(v12 + 23) = *(unsigned char *)(a2 + v11 + 23);
  unint64_t v15 = (unint64_t *)(a1 + v11 + 24);
  unint64_t v16 = *(void *)(a2 + v11 + 24);
  if (*v15 >= 2)
  {
    if (v16 >= 2)
    {
      *unint64_t v15 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0656968(v12 + 24, (uint64_t (*)(void))sub_1C018B80C);
      *unint64_t v15 = *(void *)(v13 + 24);
    }
  }
  else
  {
    *unint64_t v15 = v16;
    if (v16 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v33 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v33 + 36);
  uint64_t v18 = v12 + v17;
  uint64_t v19 = (const void *)(v13 + v17);
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  uint64_t v32 = v18;
  LODWORD(v18) = v22(v18, 1, v20);
  int v23 = v22((uint64_t)v19, 1, v20);
  if (v18)
  {
    if (!v23)
    {
      uint64_t v28 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v28 - 8) + 16))(v32, v19, v28);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v32, 0, 1, v20);
      goto LABEL_16;
    }
    sub_1C01BB2C0();
    size_t v25 = *(void *)(*(void *)(v24 - 8) + 64);
    uint64_t v26 = (void *)v32;
  }
  else
  {
    if (!v23)
    {
      uint64_t v29 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v29 - 8) + 24))(v32, v19, v29);
      goto LABEL_16;
    }
    sub_1C0656968(v32, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C01BB2C0();
    size_t v25 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v26 = (void *)v32;
  }
  memcpy(v26, v19, v25);
LABEL_16:
  *(void *)(v12 + *(int *)(v33 + 40)) = *(void *)(v13 + *(int *)(v33 + 40));
  *(void *)(a1 + v31[7]) = *(void *)(a2 + v31[7]);
  *(void *)(a1 + v31[8]) = *(void *)(a2 + v31[8]);
  *(unsigned char *)(a1 + v31[9]) = *(unsigned char *)(a2 + v31[9]);
  *(void *)(a1 + v31[10]) = *(void *)(a2 + v31[10]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + v31[11]) = *(unsigned char *)(a2 + v31[11]);
  *(void *)(a1 + v31[12]) = *(void *)(a2 + v31[12]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for GroupLayoutContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(a2 + v11 + 16);
  *(_WORD *)(v12 + 17) = *(_WORD *)(a2 + v11 + 17);
  *(unsigned char *)(v12 + 19) = *(unsigned char *)(a2 + v11 + 19);
  *(_DWORD *)(v12 + 20) = *(_DWORD *)(a2 + v11 + 20);
  *(void *)(v12 + 24) = *(void *)(a2 + v11 + 24);
  uint64_t v14 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v15 = *(int *)(v14 + 36);
  unint64_t v16 = (void *)(v12 + v15);
  uint64_t v17 = (const void *)(v13 + v15);
  uint64_t v18 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1C01BB2C0();
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v16, v17, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  *(void *)(v12 + *(int *)(v14 + 40)) = *(void *)(v13 + *(int *)(v14 + 40));
  uint64_t v22 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v23 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  uint64_t v24 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  return a1;
}

uint64_t assignWithTake for GroupLayoutContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v33 = a3;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(a2 + v11 + 16);
  *(unsigned char *)(v12 + 17) = *(unsigned char *)(a2 + v11 + 17);
  *(unsigned char *)(v12 + 18) = *(unsigned char *)(a2 + v11 + 18);
  *(unsigned char *)(v12 + 19) = *(unsigned char *)(a2 + v11 + 19);
  *(unsigned char *)(v12 + 20) = *(unsigned char *)(a2 + v11 + 20);
  *(unsigned char *)(v12 + 21) = *(unsigned char *)(a2 + v11 + 21);
  *(unsigned char *)(v12 + 22) = *(unsigned char *)(a2 + v11 + 22);
  *(unsigned char *)(v12 + 23) = *(unsigned char *)(a2 + v11 + 23);
  uint64_t v14 = (unint64_t *)(a1 + v11 + 24);
  unint64_t v15 = *(void *)(a2 + v11 + 24);
  if (*v14 < 2) {
    goto LABEL_4;
  }
  if (v15 < 2)
  {
    sub_1C0656968((uint64_t)v14, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v15 = *(void *)(v13 + 24);
LABEL_4:
    *uint64_t v14 = v15;
    goto LABEL_6;
  }
  *uint64_t v14 = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v35 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v16 = *(int *)(v35 + 36);
  uint64_t v17 = v12 + v16;
  uint64_t v18 = (const void *)(v13 + v16);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  uint64_t v34 = v17;
  LODWORD(v17) = v21(v17, 1, v19);
  int v22 = v21((uint64_t)v18, 1, v19);
  if (v17)
  {
    if (!v22)
    {
      uint64_t v27 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v34, v18, v27);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v34, 0, 1, v19);
      goto LABEL_14;
    }
    sub_1C01BB2C0();
    size_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
    size_t v25 = (void *)v34;
  }
  else
  {
    if (!v22)
    {
      uint64_t v28 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v28 - 8) + 40))(v34, v18, v28);
      goto LABEL_14;
    }
    sub_1C0656968(v34, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C01BB2C0();
    size_t v24 = *(void *)(*(void *)(v26 - 8) + 64);
    size_t v25 = (void *)v34;
  }
  memcpy(v25, v18, v24);
LABEL_14:
  *(void *)(v12 + *(int *)(v35 + 40)) = *(void *)(v13 + *(int *)(v35 + 40));
  uint64_t v29 = v33[8];
  *(void *)(a1 + v33[7]) = *(void *)(a2 + v33[7]);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v30 = v33[10];
  *(unsigned char *)(a1 + v33[9]) = *(unsigned char *)(a2 + v33[9]);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  swift_release();
  uint64_t v31 = v33[12];
  *(unsigned char *)(a1 + v33[11]) = *(unsigned char *)(a2 + v33[11]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  swift_release();
  return a1;
}

uint64_t sub_1C0D831AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151772C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1C151757C();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for FeedLayoutSolverOptions(0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[10]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_1C0D8330C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1C151772C();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1C151757C();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = type metadata accessor for FeedLayoutSolverOptions(0);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[10]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t FormatVideoPlayerData.feedItemIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerData.namespaceIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerData.itemIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerData.headline.getter()
{
  return swift_unknownObjectRetain();
}

void FormatVideoPlayerData.feedKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

uint64_t FormatVideoPlayerData.videoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 36);
  uint64_t v4 = sub_1C1515FDC();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FormatVideoPlayerData.posterImage.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 40));
  return swift_retain();
}

uint64_t FormatVideoPlayerData.isLive.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 44));
}

uint64_t FormatVideoPlayerData.overlayData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 48);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  char v7 = *(unsigned char *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v8 = *(void *)(v3 + 48);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t FormatVideoPlayerData.allowsPrerollAds.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 52));
}

uint64_t FormatVideoPlayerData.adRequestIdentifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  sub_1C0D84A78(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  if (!v6)
  {
    uint64_t v5 = *((void *)v4 + 2);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1C0D84AE0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  return v5;
}

uint64_t FormatVideoPlayerData.cacheKey.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  sub_1C0D84A78(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  if (!v6) {
    uint64_t v5 = sub_1C1515E2C();
  }
  swift_bridgeObjectRetain();
  sub_1C0D84AE0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  return v5;
}

void *initializeBufferWithCopyOfBuffer for FormatVideoPlayerData(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v11 = a3[9];
    uint64_t v23 = (uint64_t)a2 + v11;
    uint64_t v24 = a1 + v11;
    *(void *)(a1 + 48) = v10;
    uint64_t v12 = sub_1C1515FDC();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v13(v24, v23, v12);
    uint64_t v14 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[12];
    uint64_t v16 = a3[13];
    uint64_t v17 = (char *)v4 + v15;
    uint64_t v18 = (uint64_t)a2 + v15;
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    uint64_t v19 = *(void *)(v18 + 24);
    *((void *)v17 + 2) = *(void *)(v18 + 16);
    *((void *)v17 + 3) = v19;
    v17[32] = *(unsigned char *)(v18 + 32);
    uint64_t v20 = *(void *)(v18 + 48);
    *((void *)v17 + 5) = *(void *)(v18 + 40);
    *((void *)v17 + 6) = v20;
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FormatVideoPlayerData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatVideoPlayerData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = a3[9];
  uint64_t v21 = a2 + v10;
  uint64_t v22 = a1 + v10;
  *(void *)(a1 + 48) = v9;
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v12(v22, v21, v11);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[12];
  uint64_t v15 = a3[13];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  uint64_t v18 = *(void *)(v17 + 24);
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(v16 + 24) = v18;
  *(unsigned char *)(v16 + 32) = *(unsigned char *)(v17 + 32);
  uint64_t v19 = *(void *)(v17 + 48);
  *(void *)(v16 + 40) = *(void *)(v17 + 40);
  *(void *)(v16 + 48) = v19;
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatVideoPlayerData(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v10 = a3[12];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  swift_retain();
  swift_release();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  swift_retain();
  swift_release();
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
  *(void *)(v11 + 40) = *(void *)(v12 + 40);
  *(void *)(v11 + 48) = *(void *)(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for FormatVideoPlayerData(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[12];
  uint64_t v13 = a3[13];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(void *)(v14 + 48) = *(void *)(v15 + 48);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for FormatVideoPlayerData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  uint64_t v13 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_release();
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  swift_release();
  *(void *)(v14 + 24) = *(void *)(v15 + 24);
  swift_release();
  *(unsigned char *)(v14 + 32) = *(unsigned char *)(v15 + 32);
  uint64_t v16 = *(void *)(v15 + 48);
  *(void *)(v14 + 40) = *(void *)(v15 + 40);
  *(void *)(v14 + 48) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoPlayerData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0D84070);
}

uint64_t sub_1C0D84070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatVideoPlayerData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0D84134);
}

uint64_t sub_1C0D84134(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void *sub_1C0D841DC(uint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D50430(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v51 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v48 = (uint64_t)&v47 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (uint64_t)&v47 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v47 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C0D84A14(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0D84A14(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v18);
  sub_1C0181BEC(0);
  uint64_t v50 = v19;
  unint64_t v20 = (*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80);
  uint64_t v53 = *(void *)(*(void *)(v19 - 8) + 72);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C152C7E0;
  uint64_t v49 = v21;
  uint64_t v22 = (void *)(v21 + v20);
  uint64_t v55 = a1;
  sub_1C0D84A78(a1, (uint64_t)v17, (uint64_t (*)(void))sub_1C0D50430);
  uint64_t v23 = (int *)type metadata accessor for FormatVideoPlayerData();
  long long v54 = *(unsigned int (**)(char *, uint64_t, int *))(*((void *)v23 - 1) + 48);
  if (v54(v17, 1, v23) == 1)
  {
    sub_1C0D84AE0((uint64_t)v17, (uint64_t (*)(void))sub_1C0D50430);
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v17[v23[9]], v2);
    sub_1C0D84AE0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
    uint64_t v24 = sub_1C1515E2C();
    uint64_t v25 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1C0433600(0x5255206F65646956, 0xE90000000000004CLL, v24, v25, v22);
  uint64_t v27 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v28 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v22, 0, 1, v27);
  sub_1C0D84A78(v55, (uint64_t)v14, (uint64_t (*)(void))sub_1C0D50430);
  unsigned int v29 = v54(v14, 1, v23);
  uint64_t v30 = v53;
  if (v29 == 1)
  {
    sub_1C0D84AE0((uint64_t)v14, (uint64_t (*)(void))sub_1C0D50430);
    char v31 = 2;
  }
  else
  {
    char v31 = v14[v23[11]];
    sub_1C0D84AE0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  }
  sub_1C0432B74(1702259020, 0xE400000000000000, v31, (void *)((char *)v22 + v30));
  v28((void *)((char *)v22 + v30), 0, 1, v27);
  uint64_t v32 = v47;
  sub_1C0D84A78(v55, v47, (uint64_t (*)(void))sub_1C0D50430);
  if (v54((char *)v32, 1, v23) == 1)
  {
    sub_1C0D84AE0(v32, (uint64_t (*)(void))sub_1C0D50430);
    char v33 = 2;
  }
  else
  {
    char v33 = *(unsigned char *)(v32 + v23[12] + 32);
    sub_1C0D84AE0(v32, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  }
  sub_1C0432B74(0x72754420776F6853, 0xED00006E6F697461, v33, (void *)((char *)v22 + 2 * v30));
  v28((void *)((char *)v22 + 2 * v30), 0, 1, v27);
  uint64_t v34 = (uint64_t (*)(void))sub_1C0D50430;
  uint64_t v35 = v48;
  sub_1C0D84A78(v55, v48, (uint64_t (*)(void))sub_1C0D50430);
  if (v54((char *)v35, 1, v23) == 1)
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v38 = v35 + v23[12];
    uint64_t v36 = *(void *)(v38 + 40);
    uint64_t v37 = *(void *)(v38 + 48);
    swift_bridgeObjectRetain();
    uint64_t v34 = (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData;
  }
  sub_1C0D84AE0(v35, v34);
  uint64_t v39 = v53;
  sub_1C0433600(0x6E6F697461727544, 0xE800000000000000, v36, v37, (void *)((char *)v22 + 3 * v53));
  v28((void *)((char *)v22 + 3 * v39), 0, 1, v27);
  uint64_t v40 = v51;
  sub_1C0D84A78(v55, v51, (uint64_t (*)(void))sub_1C0D50430);
  if (v54((char *)v40, 1, v23) == 1)
  {
    sub_1C0D84AE0(v40, (uint64_t (*)(void))sub_1C0D50430);
    char v41 = 2;
  }
  else
  {
    char v41 = *(unsigned char *)(v40 + v23[13]);
    sub_1C0D84AE0(v40, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  }
  sub_1C0432B74(0xD000000000000011, 0x80000001C16274C0, v41, (void *)((char *)v22 + 4 * v39));
  v28((void *)((char *)v22 + 4 * v39), 0, 1, v27);
  sub_1C09BCFA4(0x6C50206F65646956, 0xEC00000072657961, 0, 0, v49, v56);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v42 = inited;
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v42 + 64) = &off_1F1BDEC90;
  uint64_t v43 = swift_allocObject();
  *(void *)(v42 + 32) = v43;
  *(void *)(v43 + 48) = v57;
  long long v44 = v56[1];
  *(_OWORD *)(v43 + 16) = v56[0];
  *(_OWORD *)(v43 + 32) = v44;
  uint64_t v45 = sub_1C131B79C(v42);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v45;
}

void sub_1C0D84A14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0D84A78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0D84AE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0D84B40()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

NewsFeed::SportsDataVisualizationType_optional __swiftcall SportsDataVisualizationType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t SportsDataVisualizationType.rawValue.getter()
{
  uint64_t result = 0x7365726F6373;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E69646E617473;
      break;
    case 2:
      uint64_t result = 0x7374656B63617262;
      break;
    case 3:
      uint64_t result = 0x65726F6353786F62;
      break;
    case 4:
      uint64_t result = 0x726F6353656E696CLL;
      break;
    case 5:
      uint64_t result = 0x65527972756A6E69;
      break;
    case 6:
      uint64_t result = 0x6579616C5079656BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0D84CD8(unsigned __int8 *a1, char *a2)
{
  return sub_1C147D55C(*a1, *a2);
}

unint64_t sub_1C0D84CE8()
{
  unint64_t result = qword_1EB8683D0;
  if (!qword_1EB8683D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8683D0);
  }
  return result;
}

uint64_t sub_1C0D84D3C()
{
  return sub_1C044D340();
}

uint64_t sub_1C0D84D48()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D84E70()
{
  return sub_1C044D340();
}

NewsFeed::SportsDataVisualizationType_optional sub_1C0D84E78(Swift::String *a1)
{
  return SportsDataVisualizationType.init(rawValue:)(*a1);
}

void sub_1C0D84E84(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x7365726F6373;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x676E69646E617473;
      unint64_t v2 = 0xE900000000000073;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x7374656B63617262;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 3:
      *(void *)a1 = 0x65726F6353786F62;
      *(void *)(a1 + 8) = 0xE900000000000073;
      break;
    case 4:
      *(void *)a1 = 0x726F6353656E696CLL;
      *(void *)(a1 + 8) = 0xEA00000000007365;
      break;
    case 5:
      strcpy((char *)a1, "injuryReport");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 6:
      *(void *)a1 = 0x6579616C5079656BLL;
      *(void *)(a1 + 8) = 0xE900000000000072;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C0D84F98()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0D84FF8()
{
  return sub_1C151EAEC();
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D85114);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationType()
{
  return &type metadata for SportsDataVisualizationType;
}

unint64_t sub_1C0D8514C()
{
  unint64_t result = qword_1EB8683D8;
  if (!qword_1EB8683D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8683D8);
  }
  return result;
}

uint64_t FormatContentMode.rawValue.getter()
{
  uint64_t result = 0x7265746E6563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7368564;
      break;
    case 2:
      uint64_t result = 0x6D6F74746F62;
      break;
    case 3:
      uint64_t result = 1952867692;
      break;
    case 4:
      uint64_t result = 0x7468676972;
      break;
    case 5:
      uint64_t result = 0x7466654C706F74;
      break;
    case 6:
      uint64_t result = 0x7468676952706F74;
      break;
    case 7:
      uint64_t result = 0x654C6D6F74746F62;
      break;
    case 8:
      uint64_t result = 0x69526D6F74746F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0D852A8(unsigned __int8 *a1, char *a2)
{
  return sub_1C148810C(*a1, *a2);
}

uint64_t sub_1C0D852B4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0D852FC()
{
  return sub_1C044ACA4();
}

uint64_t sub_1C0D85304()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0D85348@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatContentMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t FormatContentMode.description.getter()
{
  uint64_t result = 0x7265746E6563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7368564;
      break;
    case 2:
      uint64_t result = 0x6D6F74746F62;
      break;
    case 3:
      uint64_t result = 1952867692;
      break;
    case 4:
      uint64_t result = 0x7468676972;
      break;
    case 5:
      uint64_t result = 0x7466654C706F74;
      break;
    case 6:
      uint64_t result = 0x7468676952706F74;
      break;
    case 7:
      uint64_t result = 0x654C6D6F74746F62;
      break;
    case 8:
      uint64_t result = 0x69526D6F74746F62;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0D8547C()
{
  unint64_t result = qword_1EA1A6D48;
  if (!qword_1EA1A6D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6D48);
  }
  return result;
}

unint64_t sub_1C0D854D0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0D85500();
  unint64_t result = sub_1BFC63690();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0D85500()
{
  unint64_t result = qword_1EA1A6D50;
  if (!qword_1EA1A6D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6D50);
  }
  return result;
}

unint64_t sub_1C0D85554(uint64_t a1)
{
  unint64_t result = sub_1C0D8557C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D8557C()
{
  unint64_t result = qword_1EA1A6D58;
  if (!qword_1EA1A6D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6D58);
  }
  return result;
}

unint64_t sub_1C0D855D0(void *a1)
{
  a1[1] = sub_1BFE90D20();
  a1[2] = sub_1BFE57108();
  unint64_t result = sub_1C0D8547C();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentMode()
{
  return &type metadata for FormatContentMode;
}

uint64_t FormatLogger.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t static FormatLogger.shared.getter()
{
  return swift_initStaticObject();
}

uint64_t FormatLogger.init()()
{
  return v0;
}

Swift::Void __swiftcall FormatLogger.debug(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall FormatLogger.info(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall FormatLogger.log(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall FormatLogger.warn(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall FormatLogger.error(_:)(Swift::String a1)
{
}

uint64_t sub_1C0D856E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (qword_1EB87BF18 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EB93C748;
  a3();
  sub_1BFFDEB20();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = sub_1BFE9C558();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t FormatLogger.deinit()
{
  return v0;
}

uint64_t FormatLogger.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D85808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFFDEA18(a1, a2, a3, a4, MEMORY[0x1E4FBD378]);
}

uint64_t sub_1C0D85820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFFDEA18(a1, a2, a3, a4, MEMORY[0x1E4FBD370]);
}

uint64_t sub_1C0D85838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFFDEA18(a1, a2, a3, a4, MEMORY[0x1E4FBD380]);
}

uint64_t dispatch thunk of FormatLoggerType.debug(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FormatLoggerType.log(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FormatLoggerType.info(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FormatLoggerType.warn(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FormatLoggerType.error(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of FormatLoggerType.clear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t method lookup function for FormatLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatLogger);
}

uint64_t dispatch thunk of FormatLogger.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t PuzzleComponentsStyler.__allocating_init(hintFormatter:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1BFC773DC(a1, v2 + 16);
  return v2;
}

void sub_1C0D85938()
{
}

void sub_1C0D85954()
{
}

uint64_t PuzzleComponentsStyler.init(hintFormatter:)(long long *a1)
{
  sub_1BFC773DC(a1, v1 + 16);
  return v1;
}

uint64_t PuzzleComponentsStyler.styledHintButtonConfig(with:colorTheme:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0981C20();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v80 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C1515BDC();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v67 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C1515B3C();
  uint64_t v78 = *(void *)(v10 - 8);
  uint64_t v79 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v70 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v72 = (char *)v62 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v71 = (char *)v62 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v81 = (char *)v62 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v73 = (char *)v62 - v19;
  uint64_t v20 = sub_1C151FCDC();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[1];
  uint64_t v76 = *a1;
  int v25 = *((unsigned __int8 *)a1 + 16);
  uint64_t v26 = a1[4];
  int v74 = *((unsigned __int8 *)a1 + 40);
  uint64_t v27 = *(void **)a2;
  uint64_t v68 = *(void **)(a2 + 8);
  uint64_t v69 = v27;
  sub_1C151FCAC();
  uint64_t v28 = self;
  id v29 = objc_msgSend(v28, sel_labelColor);
  sub_1C151FC5C();
  sub_1C151FC1C();
  uint64_t v75 = v24;
  if (!v24) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(a3, v23, v20);
  }
  uint64_t v64 = v21;
  uint64_t v65 = v20;
  uint64_t v66 = a3;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0;
  if (v25 == 2 || !v26)
  {
    uint64_t v36 = v77[5];
    uint64_t v37 = v77[6];
    __swift_project_boxed_opaque_existential_1(v77 + 2, v36);
    LOBYTE(v82[0]) = v74;
    uint64_t v38 = v81;
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(v37 + 8))(v76, v75, v82, v36, v37);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    v62[-2] = v40;
    swift_getKeyPath();
    v82[0] = sub_1C0D864F4(v30);
    sub_1BFF67C9C();
    sub_1C15159BC();
    uint64_t v41 = v78;
    uint64_t v42 = v80;
    uint64_t v43 = v79;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v80, v38, v79);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v43);
    sub_1C151FC3C();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v43);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C1515BCC();
    sub_1C1515B4C();
    uint64_t v31 = swift_getKeyPath();
    MEMORY[0x1F4188790](v31);
    v62[-2] = v32;
    swift_getKeyPath();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    v62[2] = *MEMORY[0x1E4FB2950];
    v82[0] = sub_1C151F88C();
    v62[1] = sub_1BFF67A50();
    sub_1C15159BC();
    uint64_t v33 = swift_getKeyPath();
    MEMORY[0x1F4188790](v33);
    v62[-2] = v34;
    swift_getKeyPath();
    v82[0] = objc_msgSend(v28, sel_labelColor);
    sub_1BFF67B4C();
    sub_1C15159BC();
    uint64_t v63 = v30;
    if (v25) {
      sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    sub_1C1515BCC();
    sub_1C1515B4C();
    uint64_t v44 = swift_getKeyPath();
    MEMORY[0x1F4188790](v44);
    v62[-2] = v45;
    swift_getKeyPath();
    v82[0] = sub_1C151F88C();
    sub_1C15159BC();
    uint64_t v46 = swift_getKeyPath();
    MEMORY[0x1F4188790](v46);
    v62[-2] = v47;
    swift_getKeyPath();
    v82[0] = sub_1C0D86394(v69, v68);
    sub_1C15159BC();
    uint64_t v49 = v77[5];
    uint64_t v48 = v77[6];
    __swift_project_boxed_opaque_existential_1(v77 + 2, v49);
    LOBYTE(v82[0]) = v74;
    uint64_t v50 = v71;
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(v48 + 8))(v76, v75, v82, v49, v48);
    uint64_t v51 = swift_getKeyPath();
    MEMORY[0x1F4188790](v51);
    v62[-2] = v52;
    swift_getKeyPath();
    v82[0] = objc_msgSend(v28, sel_labelColor);
    sub_1C15159BC();
    uint64_t v53 = v70;
    long long v54 = v73;
    sub_1C1515A0C();
    uint64_t v55 = v72;
    sub_1C1515A0C();
    uint64_t v57 = v78;
    uint64_t v56 = v79;
    double v58 = *(void (**)(char *, uint64_t))(v78 + 8);
    v58(v53, v79);
    uint64_t v59 = swift_getKeyPath();
    MEMORY[0x1F4188790](v59);
    v62[-2] = v60;
    swift_getKeyPath();
    v82[0] = sub_1C0D864F4(v63);
    sub_1BFF67C9C();
    sub_1C15159BC();
    id v61 = v80;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v80, v55, v56);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v61, 0, 1, v56);
    sub_1C151FC3C();
    v58(v55, v56);
    v58(v50, v56);
    v58(v81, v56);
    v58(v54, v56);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v66, v23, v65);
  return swift_release();
}

uint64_t sub_1C0D8633C()
{
  return swift_deallocObject();
}

void sub_1C0D86374()
{
}

id sub_1C0D86394(void *a1, void *a2)
{
  if (a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
    id v5 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    v14[4] = sub_1C0D86E94;
    v14[5] = v4;
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 1107296256;
    v14[2] = sub_1BFDF2404;
    v14[3] = &block_descriptor_37_0;
    uint64_t v6 = _Block_copy(v14);
    id v7 = a1;
    id v8 = a2;
    id v9 = v7;
    id v10 = v8;
    id v11 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
    _Block_release(v6);

    swift_release();
    return v11;
  }
  else
  {
    id v13 = objc_msgSend(self, sel_systemPinkColor);
    return v13;
  }
}

id sub_1C0D864F4(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 16);
  uint64_t v1 = *(void **)(a1 + 16);
  if (v1)
  {
    id v3 = *(id *)(a1 + 16);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
    objc_msgSend(v4, sel_setAlignment_, 1);
    swift_beginAccess();
    id v5 = *v2;
    *uint64_t v2 = v4;
    id v3 = v4;

    uint64_t v1 = 0;
  }
  id v6 = v1;
  return v3;
}

uint64_t sub_1C0D86594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0D866AC(a1, a2, a3, &qword_1EA1A6D68);
}

uint64_t sub_1C0D865A8(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm_0(a1, a2, &qword_1EA1A6D68);
}

void sub_1C0D865BC()
{
}

void sub_1C0D865E4()
{
}

uint64_t sub_1C0D8660C()
{
  return 8;
}

uint64_t sub_1C0D86618()
{
  return swift_release();
}

uint64_t sub_1C0D86620(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C0D8662C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0D866AC(a1, a2, a3, &qword_1EA1A6D68) & 1;
}

uint64_t sub_1C0D86658(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm_0(a1, a2, &qword_1EA1A6D68);
}

void *sub_1C0D8666C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C0D86684()
{
  return 8;
}

uint64_t sub_1C0D86698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0D866AC(a1, a2, a3, &qword_1EA1A6D60);
}

uint64_t sub_1C0D866AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C0D8670C(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm_0(a1, a2, &qword_1EA1A6D60);
}

uint64_t keypath_hashTm_0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  return sub_1C151E49C();
}

void sub_1C0D8676C()
{
}

id sub_1C0D8679C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  uint64_t v2 = self;
  id v3 = &selRef_whiteColor;
  if (v1 != (id)2) {
    id v3 = &selRef_blackColor;
  }
  id v4 = [v2 *v3];
  return v4;
}

uint64_t PuzzleComponentsStyler.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t PuzzleComponentsStyler.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void sub_1C0D8686C()
{
}

void sub_1C0D8688C()
{
}

uint64_t sub_1C0D868B4()
{
  return 8;
}

uint64_t sub_1C0D868C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0D866AC(a1, a2, a3, &qword_1EA1A6D60) & 1;
}

uint64_t sub_1C0D868EC(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm_0(a1, a2, &qword_1EA1A6D60);
}

id _s8NewsFeed22PuzzleComponentsStylerC21styledMenuImageConfigSo26UIImageSymbolConfigurationCyF_0()
{
  id v0 = objc_msgSend(self, sel_secondarySystemFillColor);
  id v1 = self;
  id v2 = objc_msgSend(v1, sel_configurationWithPointSize_weight_scale_, 5, 3, 23.0);
  sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320F0;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v13[4] = sub_1C0D8679C;
  v13[5] = 0;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  _OWORD v13[2] = sub_1BFDF2404;
  v13[3] = &block_descriptor_61;
  id v5 = _Block_copy(v13);
  id v6 = v2;
  id v7 = objc_msgSend(v4, sel_initWithDynamicProvider_, v5);
  _Block_release(v5);
  swift_release();
  *(void *)(v3 + 32) = v7;
  *(void *)(v3 + 40) = v0;
  v13[0] = v3;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  id v8 = v0;
  id v9 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v1, sel_configurationWithPaletteColors_, v9);

  id v11 = objc_msgSend(v6, sel_configurationByApplyingConfiguration_, v10);
  return v11;
}

uint64_t _s8NewsFeed22PuzzleComponentsStylerC34styledHintButtonAccessibilityLabel4withSSSgAA0c9AccessoryG6ConfigV_tF_0(uint64_t *a1)
{
  int v1 = *((unsigned __int8 *)a1 + 16);
  if (v1 == 2) {
    return 0;
  }
  uint64_t v3 = a1[4];
  if (!v3) {
    return 0;
  }
  uint64_t v2 = a1[1];
  if (v2)
  {
    uint64_t v4 = *a1;
    uint64_t v5 = a1[3];
    if (v1) {
      sub_1C1520A9C();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v8 = sub_1C1515B8C();
    uint64_t v10 = v9;

    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C152C7F0;
    *(void *)(v12 + 32) = v5;
    *(void *)(v12 + 40) = v3;
    *(void *)(v12 + 48) = v8;
    *(void *)(v12 + 56) = v10;
    *(void *)(v12 + 64) = v4;
    *(void *)(v12 + 72) = v2;
    sub_1BFE4F870(0, (unint64_t *)&qword_1EB879F20, v11, MEMORY[0x1E4FBB320]);
    sub_1BFE99E40();
    uint64_t v2 = sub_1C151E55C();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t dispatch thunk of PuzzleComponentsStylerType.styledHintButtonConfig(with:colorTheme:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PuzzleComponentsStylerType.styledMenuImageConfig()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleComponentsStylerType.styledHintButtonAccessibilityLabel(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for PuzzleComponentsStyler()
{
  return self;
}

uint64_t method lookup function for PuzzleComponentsStyler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleComponentsStyler);
}

uint64_t dispatch thunk of PuzzleComponentsStyler.__allocating_init(hintFormatter:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C0D86E54()
{
  return swift_deallocObject();
}

id sub_1C0D86E94(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = v2;
  }
  return v4;
}

void sub_1C0D86ED8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_1C151593C();
    unint64_t v3 = sub_1C1520F1C();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t SportsDataVisualizationEventRequest.init(sportsEventId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t SportsDataVisualizationEventRequest.eventId.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    id v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    uint64_t v4 = sub_1C151E62C();

    sub_1C0254D20(v1, v2, 0);
    return v4;
  }
  return v1;
}

uint64_t SportsDataVisualizationEventRequest.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  char v4 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1C0254DD8(v2, v3, v4);
}

uint64_t SportsDataVisualizationEventRequest.init(sportsEvent:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t SportsDataVisualizationEventRequest.hash(into:)()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    sub_1C0254DD8(*(void *)v0, *(void *)(v0 + 8), 1);
  }
  else
  {
    sub_1C0254DD8(*(void *)v0, *(void *)(v0 + 8), 0);
    id v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    sub_1C151E62C();

    sub_1C0254D20(v2, v1, 0);
    sub_1C0254D20(v2, v1, 0);
  }
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t SportsDataVisualizationEventRequest.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1C1520DBC();
  if (v3)
  {
    sub_1C0254DD8(v1, v2, 1);
  }
  else
  {
    sub_1C0254DD8(v1, v2, 0);
    id v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    sub_1C151E62C();

    sub_1C0254D20(v1, v2, 0);
    sub_1C0254D20(v1, v2, 0);
  }
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0D871DC()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    sub_1C0254DD8(*(void *)v0, *(void *)(v0 + 8), 1);
  }
  else
  {
    sub_1C0254DD8(*(void *)v0, *(void *)(v0 + 8), 0);
    id v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    sub_1C151E62C();

    sub_1C0254D20(v2, v1, 0);
    sub_1C0254D20(v2, v1, 0);
  }
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D872B8()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1C1520DBC();
  if (v3)
  {
    sub_1C0254DD8(v1, v2, 1);
  }
  else
  {
    sub_1C0254DD8(v1, v2, 0);
    id v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    sub_1C151E62C();

    sub_1C0254D20(v1, v2, 0);
    sub_1C0254D20(v1, v2, 0);
  }
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t _s8NewsFeed35SportsDataVisualizationEventRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(void *)a1;
  if (v4)
  {
    sub_1C0254DD8(v8, v3, 1);
    uint64_t v9 = v3;
    if ((v7 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v14 = swift_unknownObjectRetain();
    sub_1C0254DD8(v14, v3, 0);
    id v15 = objc_msgSend(v2, sel_identifier);
    uint64_t v16 = sub_1C151E62C();
    uint64_t v9 = v17;

    sub_1C0254D20((uint64_t)v2, v3, 0);
    sub_1C0254D20((uint64_t)v2, v3, 0);
    uint64_t v2 = (void *)v16;
    if ((v7 & 1) == 0)
    {
LABEL_3:
      sub_1C0254DD8((uint64_t)v5, v6, v7);
      sub_1C0254DD8((uint64_t)v5, v6, v7);
      id v10 = objc_msgSend(v5, sel_identifier);
      uint64_t v11 = sub_1C151E62C();
      uint64_t v13 = v12;

      sub_1C0254D20((uint64_t)v5, v6, v7);
      sub_1C0254D20((uint64_t)v5, v6, v7);
      if (v2 != (void *)v11) {
        goto LABEL_9;
      }
      goto LABEL_7;
    }
  }
  sub_1C0254DD8((uint64_t)v5, v6, v7);
  uint64_t v13 = v6;
  if (v2 != v5)
  {
LABEL_9:
    char v18 = sub_1C1520A9C();
    goto LABEL_10;
  }
LABEL_7:
  if (v9 != v13) {
    goto LABEL_9;
  }
  char v18 = 1;
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18 & 1;
}

unint64_t sub_1C0D8753C()
{
  unint64_t result = qword_1EA1A6D70;
  if (!qword_1EA1A6D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6D70);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventRequest()
{
  return &type metadata for SportsDataVisualizationEventRequest;
}

uint64_t destroy for SportsDataVisualizationAllRequest.Content(uint64_t a1)
{
  return sub_1C0254D20(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed33SportsDataVisualizationAllRequestC7ContentOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C0254DD8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SportsDataVisualizationAllRequest.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C0254DD8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C0254D20(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationAllRequest.Content(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C0254D20(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventRequest.Content()
{
  return &type metadata for SportsDataVisualizationEventRequest.Content;
}

uint64_t PuzzleResource.init(puzzle:indexFileURL:dataFileURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for PuzzleResource();
  char v8 = (char *)a4 + *(int *)(v7 + 20);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t))v12)((void *)(v9 - 8), v8, a2, v9);
  id v10 = (char *)a4 + *(int *)(v7 + 24);
  return v12(v10, a3, v9);
}

uint64_t type metadata accessor for PuzzleResource()
{
  uint64_t result = qword_1EA1A6D80;
  if (!qword_1EA1A6D80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PuzzleResource.puzzle.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t PuzzleResource.indexFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleResource() + 20);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PuzzleResource.dataFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleResource() + 24);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

unint64_t PuzzleResource.description.getter()
{
  return 0xD00000000000001DLL;
}

char *initializeBufferWithCopyOfBuffer for PuzzleResource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (char *)a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_unknownObjectRetain();
    v12(v9, v10, v11);
    v12(&v7[*(int *)(a3 + 24)], (char *)a2 + *(int *)(a3 + 24), v11);
  }
  return v7;
}

uint64_t destroy for PuzzleResource(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  return v8(v6, v5);
}

char *initializeWithCopy for PuzzleResource(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C1515FDC();
  id v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_unknownObjectRetain();
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *assignWithCopy for PuzzleResource(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C1515FDC();
  id v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *initializeWithTake for PuzzleResource(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C1515FDC();
  id v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *assignWithTake for PuzzleResource(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C1515FDC();
  id v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0D87EC0);
}

uint64_t sub_1C0D87EC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleResource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0D87F84);
}

void *sub_1C0D87F84(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0D8802C()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FormatTextNodeAttachment.scaled.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFE94AB4(v2, v3, v4);
}

void FormatTextNodeAttachment.alignment.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t FormatTextNodeAttachment.image.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

unsigned char *FormatTextNodeAttachment.alignment.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*FormatTextNodeAttachment.alignment.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C0D88120(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_1BFE94AB4(*(void *)a1, v4, v5);
  uint64_t result = sub_1BFE94AD4(v6, v7, v8);
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;
  return result;
}

uint64_t FormatTextNodeAttachment.scaled.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_1BFE94AD4(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 32) = v4;
  return result;
}

uint64_t (*FormatTextNodeAttachment.scaled.modify())(void)
{
  return nullsub_1;
}

void static FormatCodingBaselineAttachmentAlignmentStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t static FormatCodingBaselineAttachmentAlignmentStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t _s8NewsFeed24FormatTextNodeAttachmentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(unsigned __int8 *)(a2 + 32);
  unint64_t v19 = *(void *)a2;
  uint64_t v20 = v2;
  if ((static FormatSyncImageContent.== infix(_:_:)(&v20, &v19) & 1) == 0) {
    return 0;
  }
  if (v3) {
    uint64_t v11 = 0x61437265746E6563;
  }
  else {
    uint64_t v11 = 0x656E696C65736162;
  }
  if (v3) {
    unint64_t v12 = 0xEF74686769654870;
  }
  else {
    unint64_t v12 = 0xE800000000000000;
  }
  if (v7) {
    uint64_t v13 = 0x61437265746E6563;
  }
  else {
    uint64_t v13 = 0x656E696C65736162;
  }
  if (v7) {
    unint64_t v14 = 0xEF74686769654870;
  }
  else {
    unint64_t v14 = 0xE800000000000000;
  }
  if (v11 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  sub_1BFE94AB4(v4, v5, v6);
  sub_1BFE94AB4(v8, v9, v10);
  char v18 = sub_1C1496764(v4, v5, v6, v8, v9, v10);
  sub_1BFE94AD4(v8, v9, v10);
  sub_1BFE94AD4(v4, v5, v6);
  return v18 & 1;
}

unint64_t sub_1C0D88378(uint64_t a1)
{
  unint64_t result = sub_1C0D883A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D883A0()
{
  unint64_t result = qword_1EA1A6D90;
  if (!qword_1EA1A6D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6D90);
  }
  return result;
}

unint64_t sub_1C0D883F4(void *a1)
{
  a1[1] = sub_1BFE2FD5C();
  a1[2] = sub_1BFE1B354();
  unint64_t result = sub_1C0D8842C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0D8842C()
{
  unint64_t result = qword_1EA1A6D98;
  if (!qword_1EA1A6D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6D98);
  }
  return result;
}

unint64_t sub_1C0D88480(uint64_t a1)
{
  unint64_t result = sub_1C0D884A8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D884A8()
{
  unint64_t result = qword_1EA1A6DA0;
  if (!qword_1EA1A6DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6DA0);
  }
  return result;
}

uint64_t sub_1C0D88504@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 8);
  return result;
}

unsigned char *sub_1C0D88510(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 8) = *result;
  return result;
}

uint64_t sub_1C0D8851C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = v4;
  return sub_1BFE94AB4(v3, v2, v4);
}

uint64_t destroy for FormatTextNodeAttachment(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  return sub_1BFE94AD4(v2, v3, v4);
}

uint64_t initializeWithCopy for FormatTextNodeAttachment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  char v5 = *(unsigned char *)(a2 + 32);
  swift_retain();
  sub_1BFE94AB4(v3, v4, v5);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatTextNodeAttachment(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *((unsigned char *)v2 + 8);
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  LOBYTE(v2) = *((unsigned char *)v2 + 32);
  sub_1BFE94AB4(v4, v5, (char)v2);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = (_BYTE)v2;
  sub_1BFE94AD4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatTextNodeAttachment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v4;
  sub_1BFE94AD4(v5, v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeAttachment()
{
  return &type metadata for FormatTextNodeAttachment;
}

ValueMetadata *type metadata accessor for FormatCodingBaselineAttachmentAlignmentStrategy()
{
  return &type metadata for FormatCodingBaselineAttachmentAlignmentStrategy;
}

uint64_t sub_1C0D88708(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0D88764@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v44 = a1;
  sub_1C0D89384(0, &qword_1EB876148, (void (*)(uint64_t))type metadata accessor for GroupLayoutContext);
  MEMORY[0x1F4188790](v2 - 8);
  char v4 = (long long *)((char *)&v41 - v3);
  uint64_t v5 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v6 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v41 - v10;
  sub_1C0D89384(0, &qword_1EB878630, (void (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (long long *)((char *)&v41 - v13);
  uint64_t v15 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v43 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v41 - v19;
  sub_1C0D89454(v1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory, (uint64_t)&v45, &qword_1EB8779F8, (void (*)(uint64_t))sub_1C0073850);
  if (v46)
  {
    sub_1BFC773DC(&v45, (uint64_t)v47);
    sub_1C0D89454(v1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t)v14, &qword_1EB878630, (void (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext);
    if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      uint64_t v21 = &qword_1EB878630;
      uint64_t v22 = (void (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext;
      uint64_t v23 = v14;
    }
    else
    {
      sub_1BFF2389C((uint64_t)v14, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      sub_1C0D89454(v1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t)v4, &qword_1EB876148, (void (*)(uint64_t))type metadata accessor for GroupLayoutContext);
      if ((*(unsigned int (**)(long long *, uint64_t, int *))(v6 + 48))(v4, 1, v5) != 1)
      {
        uint64_t v42 = type metadata accessor for GroupLayoutContext;
        sub_1BFF2389C((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
        sub_1BFC66384((uint64_t)v47, (uint64_t)&v45);
        uint64_t v26 = v43;
        sub_1C0D894C0((uint64_t)v20, v43, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
        sub_1C151768C();
        sub_1C151771C();
        uint64_t v27 = v5[5];
        uint64_t v28 = &v11[v27];
        id v29 = &v8[v27];
        uint64_t v30 = sub_1C151757C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v29, v28, v30);
        uint64_t v31 = *(void *)&v11[v5[10]];
        sub_1C0D894C0((uint64_t)&v11[v5[6]], (uint64_t)&v8[v5[6]], type metadata accessor for FeedLayoutSolverOptions);
        uint64_t v32 = *(void *)&v11[v5[7]];
        uint64_t v33 = *(void *)&v11[v5[8]];
        char v34 = v11[v5[9]];
        char v35 = v11[v5[11]];
        uint64_t v36 = *(void *)&v11[v5[12]];
        *(void *)&v8[v5[10]] = v31;
        *(void *)&v8[v5[7]] = v32;
        *(void *)&v8[v5[8]] = v33;
        v8[v5[9]] = v34;
        v8[v5[11]] = v35;
        *(void *)&v8[v5[12]] = v36;
        __swift_project_boxed_opaque_existential_1(&v45, v46);
        swift_retain();
        swift_retain();
        uint64_t v37 = sub_1C0225534();
        uint64_t v38 = v44;
        *uint64_t v44 = v37;
        v38[1] = v39;
        sub_1BFC66384((uint64_t)&v45, (uint64_t)(v38 + 2));
        uint64_t v40 = type metadata accessor for DebugGroupLayoutKey();
        sub_1BFF2389C(v26, (uint64_t)v38 + *(int *)(v40 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
        sub_1BFF2389C((uint64_t)v8, (uint64_t)v38 + *(int *)(v40 + 28), (uint64_t (*)(void))v42);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
        sub_1BFF1F3A4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
        sub_1BFF1F3A4((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
        return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v38, 0, 1, v40);
      }
      sub_1BFF1F3A4((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      uint64_t v21 = &qword_1EB876148;
      uint64_t v22 = (void (*)(uint64_t))type metadata accessor for GroupLayoutContext;
      uint64_t v23 = v4;
    }
  }
  else
  {
    uint64_t v21 = &qword_1EB8779F8;
    uint64_t v22 = (void (*)(uint64_t))sub_1C0073850;
    uint64_t v23 = &v45;
  }
  sub_1C0D89328((uint64_t)v23, v21, v22);
  uint64_t v24 = type metadata accessor for DebugGroupLayoutKey();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v44, 1, 1, v24);
}

uint64_t GroupLayoutKey.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t static GroupLayoutKey.default.getter()
{
  uint64_t v0 = sub_1C151635C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151634C();
  uint64_t v4 = sub_1C151633C();
  uint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x746C7561666564;
  *(void *)(v7 + 24) = 0xE700000000000000;
  char v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *char v8 = v4;
  v8[1] = v6;
  uint64_t v9 = v7 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory;
  *(void *)(v9 + 32) = 0;
  *(_OWORD *)uint64_t v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  uint64_t v10 = v7 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  uint64_t v11 = type metadata accessor for GroupLayoutBindingContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = v7 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  uint64_t v13 = type metadata accessor for GroupLayoutContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return v7;
}

uint64_t GroupLayoutKey.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C0D89328(v0 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, &qword_1EB878630, (void (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext);
  swift_bridgeObjectRelease();
  sub_1C0D89328(v0 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory, &qword_1EB8779F8, (void (*)(uint64_t))sub_1C0073850);
  sub_1C0D89328(v0 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, &qword_1EB876148, (void (*)(uint64_t))type metadata accessor for GroupLayoutContext);
  return v0;
}

uint64_t GroupLayoutKey.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0D89128()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0D891A0()
{
  sub_1C151E77C();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D89210()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0D89284(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed14GroupLayoutKeyC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s8NewsFeed14GroupLayoutKeyC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v4 || (char v5 = sub_1C1520A9C(), result = 0, (v5 & 1) != 0))
  {
    if (*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier) == *(void *)(a2
                                                                                             + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier)
      && *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier + 8) == *(void *)(a2
                                                                                                 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier
                                                                                                 + 8))
    {
      return 1;
    }
    else
    {
      return sub_1C1520A9C();
    }
  }
  return result;
}

uint64_t sub_1C0D89328(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0D89384(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C0D89384(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C0D893DC()
{
  unint64_t result = qword_1EA1A6DA8;
  if (!qword_1EA1A6DA8)
  {
    type metadata accessor for GroupLayoutKey();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6DA8);
  }
  return result;
}

uint64_t sub_1C0D89434()
{
  return type metadata accessor for GroupLayoutKey();
}

uint64_t method lookup function for GroupLayoutKey(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GroupLayoutKey);
}

uint64_t sub_1C0D89454(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C0D89384(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0D894C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

double static FormatConfig.default.getter@<D0>(uint64_t a1@<X8>)
{
  sub_1C151706C();
  sub_1C151704C();
  if (qword_1EB896B90 != -1) {
    swift_once();
  }
  sub_1C151703C();
  swift_release();
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 1) = v3;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

uint64_t FormatConfig.copy(withAnnotator:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  char v8 = *v2;
  char v21 = v2[1];
  uint64_t v9 = *((void *)v2 + 5);
  uint64_t v10 = (void *)*((void *)v2 + 6);
  uint64_t v11 = *((void *)v2 + 7);
  uint64_t v12 = *((void *)v2 + 8);
  uint64_t v13 = *((void *)v2 + 9);
  uint64_t v19 = *a1;
  if (v5 == 1)
  {
    uint64_t v14 = *((void *)v2 + 4);
    uint64_t v20 = *((void *)v2 + 3);
    uint64_t v17 = v2 + 8;
    uint64_t v15 = *((void *)v2 + 1);
    uint64_t v16 = *((void *)v17 + 1);
    *(unsigned char *)a2 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(unsigned char *)a2 = v8;
    uint64_t v15 = v4;
    uint64_t v16 = v5;
    uint64_t v20 = v6;
    uint64_t v14 = v7;
  }
  sub_1BFF1E730(v9, v10);
  *(unsigned char *)(a2 + 1) = v21;
  *(void *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v11;
  *(void *)(a2 + 64) = v12;
  *(void *)(a2 + 72) = v13;
  return sub_1C0D896D0(v19, v5);
}

uint64_t sub_1C0D896D0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t assignWithCopy for FormatConfig(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  uint64_t v6 = (_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v5)
    {
      *(void *)(a1 + 40) = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void **)(a1 + 48);
      char v8 = *(void **)(a2 + 48);
      *(void *)(a1 + 48) = v8;
      id v9 = v8;

      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C04A7278(a1 + 40);
      uint64_t v12 = *(void *)(a2 + 72);
      long long v13 = *(_OWORD *)(a2 + 56);
      *uint64_t v4 = *v6;
      *(_OWORD *)(a1 + 56) = v13;
      *(void *)(a1 + 72) = v12;
    }
  }
  else if (v5)
  {
    *(void *)(a1 + 40) = v5;
    uint64_t v10 = *(void **)(a2 + 48);
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    id v11 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *v6;
    long long v15 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *uint64_t v4 = v14;
    *(_OWORD *)(a1 + 56) = v15;
  }
  return a1;
}

uint64_t assignWithTake for FormatConfig(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_1C04A7278(a1 + 40);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    return a1;
  }
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

uint64_t FeedNativeAdInsertable.nativeAdSwapIdentifier.getter()
{
  return 0;
}

uint64_t dispatch thunk of FeedBannerAdInsertable.bannerAd.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static FeedBannerAdInsertable.createAdItem(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FeedNativeAdInsertable.nativeAdSwapIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static FeedNativeAdInsertable.createNativeAdItem(for:feedContext:replacing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of static FeedNativeAdInsertable.removeNativeAd(from:feedContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FeedContentPrefetchManagerType.addTask<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

void sub_1C0D89AC4(uint64_t a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  v6[4] = sub_1C0D8A26C;
  v6[5] = v4;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_1C0D89ED0;
  v6[3] = &block_descriptor_11_2;
  uint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_scheduleLowPriorityAsyncBlock_, v5);
  _Block_release(v5);
}

uint64_t sub_1C0D89BD8(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t *a4)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return a1();
  }
  sub_1C0D89CB4(a4);
  uint64_t v6 = (void *)sub_1C1518E7C();
  sub_1C151909C();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1C0D89CB4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = objc_msgSend(self, sel_processInfo);
  unsigned __int8 v4 = objc_msgSend(v3, sel_isLowPowerModeEnabled);

  if (v4)
  {
    sub_1C151F38C();
    sub_1C15197BC();
    sub_1C0D8A304();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    MEMORY[0x1F4188790](v5);
    uint64_t v6 = *(void *)(v2 + 80);
    uint64_t v7 = *(void *)(v2 + 88);
    type metadata accessor for FeedContentPrefetchTask.Result();
    sub_1C151932C();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v6;
    *(void *)(v8 + 24) = v7;
    id v9 = (void *)sub_1C1518E7C();
    sub_1C151901C();
    swift_release();
    swift_release();

    uint64_t v1 = sub_1C15190BC();
    swift_release();
  }
  return v1;
}

uint64_t sub_1C0D89ED0(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(uint64_t (*)(), uint64_t))(a1 + 32);
  id v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_1C0D8A2AC, v4);
  swift_release();
  return swift_release();
}

uint64_t sub_1C0D89F64(uint64_t a1, uint64_t (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = a2();
    sub_1C0D89AC4(v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0D89FE4(uint64_t a1, uint64_t a2)
{
  sub_1BFC66384(a2 + 24, (uint64_t)v5);
  sub_1BFC66384(a2 + 64, (uint64_t)&v6);
  uint64_t v3 = FeedContentPrefetchTask.run(with:)(v5);
  sub_1C0D8A358((uint64_t)v5);
  return v3;
}

uint64_t sub_1C0D8A058(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend(*(id *)(a2 + 16), sel_interestTokenForContentManifest_, *(void *)(a1 + *(int *)(type metadata accessor for FeedContentPrefetchTask.Result() + 36)));
  uint64_t v4 = swift_beginAccess();
  MEMORY[0x1C18C66D0](v4);
  if (*(void *)((*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1C151EC8C();
  sub_1C151ECEC();
  sub_1C151EBEC();
  return swift_endAccess();
}

uint64_t sub_1C0D8A12C()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1C0D8A17C(uint64_t a1)
{
}

uint64_t sub_1C0D8A1A4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0D8A1DC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D8A21C()
{
  return sub_1C0D89F64(*(void *)(v0 + 32), *(uint64_t (**)(void))(v0 + 40));
}

uint64_t sub_1C0D8A22C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D8A26C(uint64_t (*a1)(void), uint64_t a2)
{
  return sub_1C0D89BD8(a1, a2, *(void *)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t sub_1C0D8A274()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C0D8A2AC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1C0D8A2BC()
{
  return sub_1C0D89FE4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0D8A2D8()
{
  return swift_deallocObject();
}

uint64_t sub_1C0D8A2E8(uint64_t a1, uint64_t a2)
{
  return sub_1C0D8A058(a1, a2);
}

unint64_t sub_1C0D8A304()
{
  unint64_t result = qword_1EB8611F0;
  if (!qword_1EB8611F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8611F0);
  }
  return result;
}

uint64_t sub_1C0D8A358(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FeedContentPrefetchManager.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0D8A448);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedContentPrefetchManager.Errors()
{
  return &type metadata for FeedContentPrefetchManager.Errors;
}

unint64_t sub_1C0D8A484()
{
  unint64_t result = qword_1EA1A6DB0;
  if (!qword_1EA1A6DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6DB0);
  }
  return result;
}

uint64_t LayeredMediaViewDisplayState.isVisible.getter()
{
  return *v0;
}

uint64_t LayeredMediaViewDisplayState.isReducedMotionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

BOOL static LayeredMediaViewDisplayState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

BOOL sub_1C0D8A518(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

uint64_t storeEnumTagSinglePayload for LayeredMediaViewDisplayState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D8A60CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaViewDisplayState()
{
  return &type metadata for LayeredMediaViewDisplayState;
}

uint64_t sub_1C0D8A644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C0D8BFF0(0, &qword_1EA197258, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v31 - v10;
  uint64_t v12 = *(void *)(v4 + 48);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_1BFEF2D8C(a1, a2);
    if (v14)
    {
      unint64_t v15 = v13;
      uint64_t v16 = *(void *)(v12 + 56);
      uint64_t v17 = type metadata accessor for FormatDerivedDataOption();
      uint64_t v18 = *(void *)(v17 - 8);
      sub_1C0387C7C(v16 + *(void *)(v18 + 72) * v15, (uint64_t)v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, v17);
    }
    else
    {
      uint64_t v17 = type metadata accessor for FormatDerivedDataOption();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for FormatDerivedDataOption();
    uint64_t v20 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v17) != 1)
    {
      sub_1C017807C((uint64_t)v11, a4);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(a4, 0, 1, v17);
    }
  }
  else
  {
    uint64_t v19 = type metadata accessor for FormatDerivedDataOption();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  }
  swift_beginAccess();
  uint64_t v21 = *(void *)(a3 + 56);
  if (*(void *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1BFEF2D8C(a1, a2);
    if (v23)
    {
      unint64_t v24 = v22;
      uint64_t v25 = *(void *)(v21 + 56);
      uint64_t v26 = type metadata accessor for FormatDerivedDataOption();
      uint64_t v27 = *(void *)(v26 - 8);
      sub_1C0387C7C(v25 + *(void *)(v27 + 72) * v24, a4);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(a4, 0, 1, v26);
    }
    else
    {
      uint64_t v30 = type metadata accessor for FormatDerivedDataOption();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a4, 1, 1, v30);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = type metadata accessor for FormatDerivedDataOption();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a4, 1, 1, v29);
  }
  return sub_1C0D8BF78((uint64_t)v11);
}

uint64_t sub_1C0D8AA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, unint64_t *a5@<X8>)
{
  uint64_t v80 = a5;
  uint64_t v79 = a3;
  sub_1C0D8BFF0(0, &qword_1EA197258, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v78 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v69 - v12;
  uint64_t v14 = type metadata accessor for FormatDerivedDataOption();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v70 = (uint64_t)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v69 - v18;
  uint64_t v20 = *(void *)v5;
  int v21 = *(unsigned __int8 *)(v5 + 16);
  uint64_t v23 = *(void *)(v5 + 24);
  uint64_t v22 = *(void *)(v5 + 32);
  uint64_t v25 = *(void *)(v5 + 40);
  uint64_t v24 = *(void *)(v5 + 48);
  uint64_t v26 = *(void *)(v5 + 56);
  unint64_t v76 = *(void *)(v5 + 8);
  uint64_t v77 = (char *)v20;
  uint64_t v84 = v20;
  unint64_t v85 = v76;
  int v92 = v21;
  LOBYTE(v86) = v21;
  uint64_t v87 = v23;
  uint64_t v88 = v22;
  uint64_t v74 = v24;
  uint64_t v75 = v22;
  uint64_t v89 = v25;
  uint64_t v90 = v24;
  uint64_t v72 = a2;
  uint64_t v73 = v26;
  uint64_t v91 = v26;
  uint64_t v71 = a1;
  uint64_t v27 = a1;
  uint64_t v29 = v28;
  uint64_t v30 = a2;
  uint64_t v31 = a4;
  sub_1C0D8A644(v27, v30, a4, (uint64_t)v13);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v32(v13, 1, v29) == 1)
  {
    uint64_t v33 = (uint64_t)v13;
LABEL_3:
    sub_1C0D8BF78(v33);
    sub_1C015F820();
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v80, 1, 1, v34);
  }
  sub_1C017807C((uint64_t)v13, (uint64_t)v19);
  uint64_t v36 = *((void *)v19 + 2);
  uint64_t v37 = (uint64_t)v19;
  if (!v19[40])
  {
    uint64_t v43 = v79;
    if ((sub_1BFF2AB84(*((void *)v19 + 2), v79) & 1) == 0)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1C00DAB28();
      swift_allocError();
      uint64_t v56 = v72;
      *(void *)uint64_t v57 = v71;
      *(void *)(v57 + 8) = v56;
      *(unsigned char *)(v57 + 16) = v36;
      *(void *)(v57 + 24) = v43;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return sub_1C0387D2C(v37);
    }
LABEL_9:
    uint64_t v44 = (uint64_t)&v19[*(int *)(v29 + 28)];
    long long v45 = v80;
    sub_1C01643FC(v44, (uint64_t)v80);
    sub_1C0387D2C(v37);
    sub_1C015F820();
    return (*(uint64_t (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
  }
  if (v19[40] != 1) {
    goto LABEL_9;
  }
  uint64_t v39 = *((void *)v19 + 3);
  uint64_t v38 = *((void *)v19 + 4);
  uint64_t v84 = (uint64_t)v77;
  unint64_t v85 = v76;
  LOBYTE(v86) = v92;
  uint64_t v87 = v23;
  uint64_t v88 = v75;
  uint64_t v89 = v25;
  uint64_t v40 = v38;
  uint64_t v90 = v74;
  uint64_t v91 = v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v41 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v32;
  uint64_t v42 = v78;
  sub_1C0D8A644(v36, v39, v31, v78);
  if (v41(v42, 1, v29) == 1)
  {
    sub_1C0387D2C((uint64_t)v19);
    sub_1C033D2B4(v36, v39, v40, 1);
    uint64_t v33 = v42;
    goto LABEL_3;
  }
  uint64_t v77 = v19;
  uint64_t v47 = v42;
  uint64_t v48 = v70;
  sub_1C017807C(v47, v70);
  if (*(unsigned char *)(v48 + 40))
  {
    sub_1C033D2B4(v36, v39, v40, 1);
    uint64_t v81 = type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    uint64_t v80 = v49;
    uint64_t v84 = 0;
    unint64_t v85 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v82 = 0xD000000000000012;
    unint64_t v83 = 0x80000001C16276F0;
    uint64_t v51 = *(void *)(v48 + 24);
    uint64_t v52 = *(void *)(v48 + 32);
    char v53 = *(unsigned char *)(v48 + 40);
    uint64_t v84 = *(void *)(v48 + 16);
    uint64_t v50 = v84;
    unint64_t v85 = v51;
    uint64_t v86 = v52;
    LOBYTE(v87) = v53;
    FormatDerivedDataOptionType.description.getter();
    sub_1C0387CE0(v50, v51, v52, v53);
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C033D2B4(v50, v51, v52, v53);
    unint64_t v54 = v83;
    uint64_t v55 = v80;
    *uint64_t v80 = v82;
    v55[1] = v54;
    swift_storeEnumTagMultiPayload();
LABEL_12:
    swift_willThrow();
LABEL_13:
    sub_1C0387D2C(v48);
    uint64_t v37 = (uint64_t)v77;
    return sub_1C0387D2C(v37);
  }
  unsigned __int8 v58 = *(unsigned char *)(v48 + 16);
  swift_bridgeObjectRetain();
  sub_1C033D2B4(v36, v39, v40, 1);
  uint64_t v59 = *(void *)(v40 + 16);
  if (v59)
  {
    uint64_t v60 = v29;
    swift_bridgeObjectRetain();
    uint64_t v61 = 0;
    uint64_t v62 = v81;
    while (1)
    {
      LOBYTE(v82) = *(unsigned char *)(v40 + v61 + 32);
      unsigned __int8 v93 = v58;
      sub_1C00DA5C8(&v93, (char *)&v84);
      if (v62) {
        break;
      }
      ++v61;
      unsigned __int8 v58 = v84;
      if (v59 == v61)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  uint64_t v60 = v29;
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v63 = v79;
  char v64 = sub_1BFF2AB84(v58, v79);
  uint64_t v65 = v80;
  if ((v64 & 1) == 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    uint64_t v67 = v72;
    *(void *)uint64_t v68 = v71;
    *(void *)(v68 + 8) = v67;
    *(unsigned char *)(v68 + 16) = v58;
    *(void *)(v68 + 24) = v63;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  sub_1C0387D2C((uint64_t)v77);
  sub_1C01643FC(v48 + *(int *)(v60 + 28), (uint64_t)v65);
  sub_1C0387D2C(v48);
  sub_1C015F820();
  return (*(uint64_t (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 0, 1, v66);
}

uint64_t sub_1C0D8B0C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v56 = a2;
  sub_1C0D8BFF0(0, &qword_1EA197258, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v47 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v53 = (uint64_t)&v42 - v7;
  uint64_t v8 = type metadata accessor for FormatDerivedDataOption();
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)v2;
  uint64_t v10 = *(void *)(v2 + 8);
  uint64_t v12 = *(void *)(v2 + 24);
  uint64_t v13 = *(void *)(v2 + 32);
  uint64_t v14 = *(void *)(v2 + 40);
  uint64_t v49 = *(void *)(v2 + 48);
  uint64_t v46 = v2 + 48;
  uint64_t v15 = *(void *)(v2 + 56);
  unsigned __int8 v16 = *(unsigned char *)(v2 + 16);
  uint64_t v57 = v11;
  uint64_t v58 = v10;
  unsigned __int8 v59 = v16;
  uint64_t v51 = v13;
  uint64_t v52 = v12;
  uint64_t v60 = v12;
  uint64_t v61 = v13;
  uint64_t v62 = v14;
  uint64_t v63 = v49;
  uint64_t v50 = v14;
  uint64_t v64 = v15;
  uint64_t v17 = (uint64_t)a1;
  uint64_t v18 = *a1;
  uint64_t v48 = v17;
  uint64_t v19 = *(void *)(v17 + 8);
  sub_1C015F808(v11, v10, v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = v53;
  uint64_t v44 = v18;
  uint64_t v43 = v19;
  sub_1C0D8A644(v18, v19, v56, v53);
  uint64_t v21 = v20;
  sub_1C015FB90(v11, v10, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v54;
  swift_bridgeObjectRelease();
  uint64_t v23 = v55;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v23) == 1)
  {
    sub_1C0D8BF78(v21);
    uint64_t v24 = *(void *)v48;
    uint64_t v25 = *(void *)(v48 + 8);
    uint64_t v26 = v47;
    sub_1C0387C7C(v48, v47);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v23);
    swift_bridgeObjectRetain();
    return sub_1C02E7FC8(v26, v24, v25);
  }
  uint64_t v28 = v43;
  uint64_t v29 = v44;
  uint64_t v30 = v45;
  sub_1C017807C(v21, v45);
  uint64_t v31 = v47;
  uint64_t v32 = v48;
  if (*(unsigned char *)(v30 + 40) || *(unsigned char *)(v48 + 40)) {
    goto LABEL_9;
  }
  uint64_t v33 = *(void *)(v48 + 16);
  LODWORD(v52) = *(unsigned __int8 *)(v30 + 16);
  LOBYTE(v57) = v52;
  uint64_t v51 = v33;
  char v65 = v33;
  uint64_t v53 = FormatOptionType.rawValue.getter();
  uint64_t v56 = v34;
  if (v53 == FormatOptionType.rawValue.getter() && v56 == v35)
  {
    swift_bridgeObjectRelease_n();
LABEL_9:
    sub_1C0387C7C(v32, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v31, 0, 1, v23);
    swift_bridgeObjectRetain();
    sub_1C02E7FC8(v31, v29, v28);
    return sub_1C0387D2C(v30);
  }
  LODWORD(v53) = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_9;
  }
  type metadata accessor for FormatDerivedDataError();
  sub_1C00DAB28();
  swift_allocError();
  uint64_t v37 = v36;
  uint64_t v39 = *(void *)v30;
  uint64_t v38 = *(void *)(v30 + 8);
  sub_1BFF582A4();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(unsigned char *)(inited + 32) = v51;
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_1C00B857C(inited);
  swift_setDeallocating();
  *(void *)uint64_t v37 = v39;
  *(void *)(v37 + 8) = v38;
  *(unsigned char *)(v37 + 16) = v52;
  *(void *)(v37 + 24) = v41;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return sub_1C0387D2C(v30);
}

uint64_t sub_1C0D8B598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = type metadata accessor for FormatDerivedDataOption();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (void *)((char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v53 - v13;
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)v3;
  uint64_t v17 = *(void *)(v3 + 8);
  unsigned __int8 v18 = *(unsigned char *)(v3 + 16);
  uint64_t v20 = *(void *)(v3 + 24);
  uint64_t v19 = *(void *)(v3 + 32);
  uint64_t v22 = *(void *)(v3 + 40);
  uint64_t v21 = *(void *)(v3 + 48);
  uint64_t v23 = *(void *)(v3 + 56);
  if (!*(void *)(v15 + 16))
  {
    *(void *)a3 = v16;
    *(void *)(a3 + 8) = v17;
    *(unsigned char *)(a3 + 16) = v18;
    *(void *)(a3 + 24) = v20;
    *(void *)(a3 + 32) = v19;
    *(void *)(a3 + 40) = v22;
    *(void *)(a3 + 48) = v21;
    *(void *)(a3 + 56) = v23;
    sub_1C015F808(v16, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  uint64_t v54 = *(void *)(a1 + 56);
  *(void *)&long long v61 = v16;
  *((void *)&v61 + 1) = v17;
  unsigned __int8 v62 = v18;
  *(void *)&long long v63 = v20;
  *((void *)&v63 + 1) = v19;
  *(void *)&long long v64 = v22;
  *((void *)&v64 + 1) = v21;
  v53[0] = a3;
  v53[1] = &v65;
  uint64_t v65 = v23;
  uint64_t v57 = v23;
  uint64_t v58 = v21;
  uint64_t v24 = *(void *)(v15 + 64);
  uint64_t v59 = v15 + 64;
  char v25 = *(unsigned char *)(v15 + 32);
  uint64_t v55 = v19;
  uint64_t v56 = v22;
  uint64_t v26 = 1 << v25;
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v24;
  sub_1C015F808(v16, v17, v18);
  int64_t v66 = (unint64_t)(v26 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v30 = 0;
  while (v28)
  {
    unint64_t v31 = __clz(__rbit64(v28));
    v28 &= v28 - 1;
    unint64_t v32 = v31 | (v30 << 6);
LABEL_6:
    sub_1C0387C7C(*(void *)(v15 + 56) + *(void *)(v9 + 72) * v32, (uint64_t)v14);
    sub_1C017807C((uint64_t)v14, (uint64_t)v11);
    sub_1C0D8B0C8(v11, a2);
    uint64_t result = sub_1C0387D2C((uint64_t)v11);
    if (v4)
    {
      swift_release();
      sub_1C015FB90(v61, *((uint64_t *)&v61 + 1), v62);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  BOOL v33 = __OFADD__(v30++, 1);
  if (v33)
  {
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v30 >= v66) {
    goto LABEL_27;
  }
  unint64_t v34 = *(void *)(v59 + 8 * v30);
  if (v34)
  {
LABEL_20:
    unint64_t v28 = (v34 - 1) & v34;
    unint64_t v32 = __clz(__rbit64(v34)) + (v30 << 6);
    goto LABEL_6;
  }
  int64_t v35 = v30 + 1;
  if (v30 + 1 >= v66) {
    goto LABEL_27;
  }
  unint64_t v34 = *(void *)(v59 + 8 * v35);
  if (v34) {
    goto LABEL_19;
  }
  int64_t v35 = v30 + 2;
  if (v30 + 2 >= v66) {
    goto LABEL_27;
  }
  unint64_t v34 = *(void *)(v59 + 8 * v35);
  if (v34) {
    goto LABEL_19;
  }
  int64_t v35 = v30 + 3;
  if (v30 + 3 >= v66) {
    goto LABEL_27;
  }
  unint64_t v34 = *(void *)(v59 + 8 * v35);
  if (v34) {
    goto LABEL_19;
  }
  int64_t v35 = v30 + 4;
  if (v30 + 4 >= v66)
  {
LABEL_27:
    uint64_t v36 = v54;
    swift_release();
    uint64_t v37 = v36 + 56;
    uint64_t v38 = 1 << *(unsigned char *)(v36 + 32);
    uint64_t v39 = -1;
    if (v38 < 64) {
      uint64_t v39 = ~(-1 << v38);
    }
    unint64_t v40 = v39 & *(void *)(v36 + 56);
    int64_t v41 = (unint64_t)(v38 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v42 = 0;
    while (1)
    {
      if (v40)
      {
        unint64_t v43 = __clz(__rbit64(v40));
        v40 &= v40 - 1;
        unint64_t v44 = v43 | (v42 << 6);
      }
      else
      {
        BOOL v33 = __OFADD__(v42++, 1);
        if (v33) {
          goto LABEL_50;
        }
        if (v42 >= v41)
        {
LABEL_48:
          uint64_t result = swift_release();
          unsigned __int8 v50 = v62;
          uint64_t v51 = v65;
          uint64_t v52 = v53[0];
          *(_OWORD *)v53[0] = v61;
          *(unsigned char *)(v52 + 16) = v50;
          *(_OWORD *)(v52 + 24) = v63;
          *(_OWORD *)(v52 + 40) = v64;
          *(void *)(v52 + 56) = v51;
          return result;
        }
        unint64_t v48 = *(void *)(v37 + 8 * v42);
        if (!v48)
        {
          int64_t v49 = v42 + 1;
          if (v42 + 1 >= v41) {
            goto LABEL_48;
          }
          unint64_t v48 = *(void *)(v37 + 8 * v49);
          if (!v48)
          {
            int64_t v49 = v42 + 2;
            if (v42 + 2 >= v41) {
              goto LABEL_48;
            }
            unint64_t v48 = *(void *)(v37 + 8 * v49);
            if (!v48)
            {
              int64_t v49 = v42 + 3;
              if (v42 + 3 >= v41) {
                goto LABEL_48;
              }
              unint64_t v48 = *(void *)(v37 + 8 * v49);
              if (!v48)
              {
                while (1)
                {
                  int64_t v42 = v49 + 1;
                  if (__OFADD__(v49, 1)) {
                    goto LABEL_51;
                  }
                  if (v42 >= v41) {
                    goto LABEL_48;
                  }
                  unint64_t v48 = *(void *)(v37 + 8 * v42);
                  ++v49;
                  if (v48) {
                    goto LABEL_43;
                  }
                }
              }
            }
          }
          int64_t v42 = v49;
        }
LABEL_43:
        unint64_t v40 = (v48 - 1) & v48;
        unint64_t v44 = __clz(__rbit64(v48)) + (v42 << 6);
      }
      uint64_t v45 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v44);
      uint64_t v47 = *v45;
      uint64_t v46 = v45[1];
      swift_bridgeObjectRetain_n();
      sub_1BFEFFC1C(&v60, v47, v46);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  unint64_t v34 = *(void *)(v59 + 8 * v35);
  if (v34)
  {
LABEL_19:
    int64_t v30 = v35;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v30 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v30 >= v66) {
      goto LABEL_27;
    }
    unint64_t v34 = *(void *)(v59 + 8 * v30);
    ++v35;
    if (v34) {
      goto LABEL_20;
    }
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t FormatDerivedDataContextKey.hash(into:)()
{
  sub_1C1520DCC();
  return sub_1C151E77C();
}

uint64_t FormatDerivedDataContextKey.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0D8BB48()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0D8BBAC()
{
  sub_1C1520DCC();
  return sub_1C151E77C();
}

uint64_t sub_1C0D8BC00()
{
  return sub_1C1520E0C();
}

uint64_t FormatDerivedDataContextKey.description.getter()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (*(unsigned char *)(v0 + 16) == 1) {
      uint64_t v1 = 0x203A6B636F6C62;
    }
    else {
      uint64_t v1 = 0x203A6E6F6974706FLL;
    }
  }
  else
  {
    uint64_t v1 = 0x203A656C6966;
  }
  uint64_t v3 = v1;
  sub_1C151E80C();
  return v3;
}

uint64_t _s8NewsFeed27FormatDerivedDataContextKeyO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16))
    {
      if (v2 != v5 || v3 != v6) {
        goto LABEL_23;
      }
      LOBYTE(v7) = 0;
      LOBYTE(v4) = 0;
      goto LABEL_17;
    }
LABEL_24:
    char v10 = 0;
    goto LABEL_25;
  }
  if (v4 != 1)
  {
    if (v7 == 2)
    {
      if (v2 == v5 && v3 == v6)
      {
        char v10 = 1;
        LOBYTE(v7) = 2;
        LOBYTE(v4) = 2;
        goto LABEL_25;
      }
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  if (v7 != 1) {
    goto LABEL_24;
  }
  if (v2 != v5 || v3 != v6)
  {
LABEL_23:
    char v10 = sub_1C1520A9C();
    LOBYTE(v7) = v4;
    goto LABEL_25;
  }
  LOBYTE(v7) = 1;
  LOBYTE(v4) = 1;
LABEL_17:
  char v10 = 1;
LABEL_25:
  sub_1C015F808(v5, v6, v7);
  sub_1C015F808(v2, v3, v4);
  sub_1C015FB90(v2, v3, v4);
  sub_1C015FB90(v5, v6, v7);
  return v10 & 1;
}

unint64_t sub_1C0D8BE14()
{
  unint64_t result = qword_1EA1A6DC0;
  if (!qword_1EA1A6DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6DC0);
  }
  return result;
}

uint64_t destroy for FormatDerivedDataFileReference(uint64_t a1)
{
  return sub_1C015FB90(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed27FormatDerivedDataContextKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C015F808(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataContextKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C015F808(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C015FB90(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataFileReference(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C015FB90(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedDataContextKey()
{
  return &type metadata for FormatDerivedDataContextKey;
}

uint64_t sub_1C0D8BF78(uint64_t a1)
{
  sub_1C0D8BFF0(0, &qword_1EA197258, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0D8BFF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for FormatDerivedDataContext(uint64_t a1)
{
  sub_1C015FB90(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDerivedDataContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_1C015F808(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_1C015F808(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1C015FB90(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataContext(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1C015FB90(v5, v6, v7);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataContext()
{
  return &type metadata for FormatDerivedDataContext;
}

CACornerMask __swiftcall CACornerMask.init(_:)(__C::UIRectCorner a1)
{
  if (a1.rawValue)
  {
    if ((a1.rawValue & 2) != 0)
    {
      CACornerMask v1 = 3;
      if ((a1.rawValue & 4) == 0) {
        goto LABEL_8;
      }
    }
    else
    {
      CACornerMask v1 = 1;
      if ((a1.rawValue & 4) == 0) {
        goto LABEL_8;
      }
    }
    goto LABEL_7;
  }
  if ((a1.rawValue & 2) == 0)
  {
    CACornerMask v1 = 0;
    if ((a1.rawValue & 4) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    v1 |= 4uLL;
    goto LABEL_8;
  }
  CACornerMask v1 = 2;
  if ((a1.rawValue & 4) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((a1.rawValue & 8) != 0) {
    v1 |= 8uLL;
  }
  return v1;
}

uint64_t FormatVideoPlayerSession.feedItemIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerSession.headline.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FormatVideoPlayerSession.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatVideoPlayerSession() + 24);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for FormatVideoPlayerSession()
{
  uint64_t result = qword_1EA1A6DC8;
  if (!qword_1EA1A6DC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FormatVideoPlayerSession.feedKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FormatVideoPlayerSession();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t FormatVideoPlayerSession.lastPlaybackPosition.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for FormatVideoPlayerSession() + 32));
}

uint64_t FormatVideoPlayerSession.totalTimePlayed.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FormatVideoPlayerSession() + 36));
}

uint64_t FormatVideoPlayerSession.playbackDuration.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for FormatVideoPlayerSession() + 40));
}

void *initializeBufferWithCopyOfBuffer for FormatVideoPlayerSession(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    unsigned __int8 v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *(_DWORD *)((char *)v4 + v13) = *(_DWORD *)((char *)a2 + v13);
    uint64_t v14 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(_DWORD *)((char *)v4 + v14) = *(_DWORD *)((char *)a2 + v14);
  }
  return v4;
}

uint64_t destroy for FormatVideoPlayerSession(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for FormatVideoPlayerSession(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  unsigned __int8 v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(_DWORD *)((char *)a1 + v12) = *(_DWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(_DWORD *)((char *)a1 + v13) = *(_DWORD *)((char *)a2 + v13);
  return a1;
}

void *assignWithCopy for FormatVideoPlayerSession(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for FormatVideoPlayerSession(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v10) = *(_DWORD *)(a2 + v10);
  uint64_t v11 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  return a1;
}

void *assignWithTake for FormatVideoPlayerSession(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(_DWORD *)((char *)a1 + v11) = *(_DWORD *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(_DWORD *)((char *)a1 + v12) = *(_DWORD *)((char *)a2 + v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoPlayerSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0D8CA48);
}

uint64_t sub_1C0D8CA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_1C1515FDC();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for FormatVideoPlayerSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0D8CB18);
}

uint64_t sub_1C0D8CB18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0D8CBC0()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id FeedBannerAdIntegrator.__allocating_init(pipeline:blueprintProvider:policyValidator:layoutCollectionProvider:journal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  id v12 = objc_allocWithZone(v6);
  id v13 = sub_1BFC974CC(a1, a2, a3, a4, a5);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*((void *)v6 + 10) - 8) + 8))(a2);
  swift_release();
  return v13;
}

uint64_t FeedBannerAdIntegrator.collectionView(_:didEndDisplaying:forItemAt:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BFC7F354(a1, a3);
}

id FeedBannerAdIntegrator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FeedBannerAdIntegrator.init()()
{
}

void sub_1C0D8CE08()
{
}

id FeedBannerAdIntegrator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C0D8CED4(char *a1)
{
  objc_super v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *(void *)a1;
  swift_release();
  (*(void (**)(char *))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(&a1[*(void *)((*v2 & *(void *)a1)
                                                                                                 + 0x88)]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(void *)((*v2 & *(void *)a1) + 0x90)]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(void *)((*v2 & *(void *)a1) + 0x98)]);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D8D048()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0D8D088()
{
}

uint64_t method lookup function for FeedBannerAdIntegrator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedBannerAdIntegrator);
}

uint64_t dispatch thunk of FeedBannerAdIntegrator.__allocating_init(pipeline:blueprintProvider:policyValidator:layoutCollectionProvider:journal:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1C0D8D0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedBannerAd();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0D8D148()
{
  unint64_t result = qword_1EB8716D0;
  if (!qword_1EB8716D0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8716D0);
  }
  return result;
}

uint64_t sub_1C0D8D1A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFDE8FD0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0D8D210()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0D8D248()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D8D280()
{
  return swift_deallocObject();
}

uint64_t LayeredMediaViewDisplayStateCoordinator.isEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

void sub_1C0D8D2EC(unsigned __int8 *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  int v4 = *(unsigned __int8 *)(v3 + 16);
  *(unsigned char *)(v3 + 16) = v2;
  if (v2 != v4)
  {
    if (v2) {
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
    }
    else {
      *(_WORD *)(v3 + 56) = 2;
    }
  }
}

void LayeredMediaViewDisplayStateCoordinator.isEnabled.setter(char a1)
{
  int v3 = a1 & 1;
  swift_beginAccess();
  int v4 = *(unsigned __int8 *)(v1 + 16);
  *(unsigned char *)(v1 + 16) = a1;
  if (v4 != v3)
  {
    if (a1) {
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
    }
    else {
      *(_WORD *)(v1 + 56) = 2;
    }
  }
}

Swift::Void __swiftcall LayeredMediaViewDisplayStateCoordinator.updateDisplay()()
{
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 16) != 1) {
    return;
  }
  uint64_t v1 = *(void (**)(unsigned char *))(v0 + 24);
  if (!v1) {
    return;
  }
  uint64_t v2 = MEMORY[0x1C18C9C60](v0 + 48);
  if (!v2) {
    return;
  }
  int v3 = (void *)v2;
  swift_beginAccess();
  int v4 = *(char *)(v0 + 17);
  swift_retain();
  id v5 = objc_msgSend(v3, sel_window);
  if (v4 < 0)
  {
    if ((*(unsigned char *)(v0 + 40) & 1) == 0)
    {
      if (v5)
      {
        int v6 = 1;
        goto LABEL_10;
      }
LABEL_22:
      int v6 = 0;
      goto LABEL_11;
    }
LABEL_9:
    int v6 = 0;
    goto LABEL_10;
  }
  if (*(unsigned char *)(v0 + 40)) {
    goto LABEL_9;
  }
  if (!v5) {
    goto LABEL_22;
  }
  int v6 = v4 & 1;
LABEL_10:

LABEL_11:
  BOOL IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  if (IsReduceMotionEnabled) {
    __int16 v8 = 256;
  }
  else {
    __int16 v8 = 0;
  }
  if (*(unsigned char *)(v0 + 56) == 2
    || ((v6 ^ *(unsigned __int8 *)(v0 + 56)) & 1) != 0
    || ((IsReduceMotionEnabled ^ *(unsigned __int8 *)(v0 + 57)) & 1) != 0)
  {
    *(_WORD *)(v0 + 56) = v8 | v6;
    v9[0] = v6;
    v9[1] = IsReduceMotionEnabled;
    v1(v9);
    sub_1BFC3E5C0((uint64_t)v1);
  }
  else
  {

    sub_1BFC3E5C0((uint64_t)v1);
  }
}

void (*LayeredMediaViewDisplayStateCoordinator.isEnabled.modify(void *a1))(uint64_t a1, char a2)
{
  int v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *(unsigned char *)(v1 + 16);
  return sub_1C0D8D58C;
}

void sub_1C0D8D58C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  int v4 = *(unsigned __int8 *)(*(void *)a1 + 32);
  unsigned __int8 v5 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(v3 + 16) = v4;
  if (a2)
  {
    if (((v4 ^ v5) & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v6 = v2[3];
    if ((v4 & 1) == 0) {
      goto LABEL_4;
    }
  }
  else
  {
    if (((v4 ^ v5) & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v6 = v2[3];
    if (!v4)
    {
LABEL_4:
      *(_WORD *)(v6 + 56) = 2;
      goto LABEL_8;
    }
  }
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
LABEL_8:
  free(v2);
}

uint64_t LayeredMediaViewDisplayStateCoordinator.visibilityTracking.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 17);
  return result;
}

void sub_1C0D8D644(unsigned __int8 *a1, uint64_t *a2)
{
  unsigned int v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unsigned int v4 = *(unsigned __int8 *)(v3 + 17);
  *(unsigned char *)(v3 + 17) = v2;
  if (!(v4 >> 6))
  {
    BOOL v5 = (v4 & 1) == 0;
    if (v2 > 0x3F) {
      goto LABEL_9;
    }
LABEL_6:
    if ((v2 ^ v5)) {
      return;
    }
    goto LABEL_9;
  }
  if (v4 >> 6 != 1)
  {
    if (v2 == 128) {
      return;
    }
    goto LABEL_9;
  }
  BOOL v5 = (v4 & 1) == 0;
  if ((v2 & 0xC0) == 0x40) {
    goto LABEL_6;
  }
LABEL_9:
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
}

void LayeredMediaViewDisplayStateCoordinator.visibilityTracking.setter(unsigned __int8 *a1)
{
  unsigned int v2 = *a1;
  swift_beginAccess();
  unsigned int v3 = *(unsigned __int8 *)(v1 + 17);
  *(unsigned char *)(v1 + 17) = v2;
  if (!(v3 >> 6))
  {
    BOOL v4 = (v3 & 1) == 0;
    if (v2 > 0x3F) {
      goto LABEL_9;
    }
LABEL_6:
    if ((v2 ^ v4)) {
      return;
    }
    goto LABEL_9;
  }
  if (v3 >> 6 != 1)
  {
    if (v2 == 128) {
      return;
    }
    goto LABEL_9;
  }
  BOOL v4 = (v3 & 1) == 0;
  if ((v2 & 0xC0) == 0x40) {
    goto LABEL_6;
  }
LABEL_9:
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
}

void (*LayeredMediaViewDisplayStateCoordinator.visibilityTracking.modify(void *a1))(uint64_t a1)
{
  unsigned int v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *(unsigned char *)(v1 + 17);
  return sub_1C0D8D7E4;
}

void sub_1C0D8D7E4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  unsigned int v2 = *(unsigned __int8 *)(*(void *)a1 + 32);
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  unsigned int v4 = *(unsigned __int8 *)(v3 + 17);
  *(unsigned char *)(v3 + 17) = v2;
  if (!(v4 >> 6))
  {
    BOOL v5 = (v4 & 1) == 0;
    if (v2 > 0x3F) {
      goto LABEL_9;
    }
LABEL_6:
    if ((v2 ^ v5)) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (v4 >> 6 != 1)
  {
    if (v2 == 128) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  BOOL v5 = (v4 & 1) == 0;
  if ((v2 & 0xC0) == 0x40) {
    goto LABEL_6;
  }
LABEL_9:
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
LABEL_10:
  free(v1);
}

uint64_t LayeredMediaViewDisplayStateCoordinator.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  LayeredMediaViewDisplayStateCoordinator.init()();
  return v0;
}

uint64_t LayeredMediaViewDisplayStateCoordinator.init()()
{
  *(_WORD *)(v0 + 16) = -32767;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v0 + 56) = 2;
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v2, sel_addObserver_selector_name_object_, v0, sel_sceneDidEnterBackground, *MEMORY[0x1E4FB2E90], 0);

  id v3 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v3, sel_addObserver_selector_name_object_, v0, sel_sceneWillEnterForeground, *MEMORY[0x1E4FB2EB0], 0);

  id v4 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v0, sel_reduceMotionStatusDidChange, *MEMORY[0x1E4FB2498], 0);

  return v0;
}

uint64_t LayeredMediaViewDisplayStateCoordinator.deinit()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, *MEMORY[0x1E4FB2E90], 0);

  id v3 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, *MEMORY[0x1E4FB2EB0], 0);

  id v4 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v4, sel_removeObserver_name_object_, v0, *MEMORY[0x1E4FB2498], 0);

  sub_1BFC3E5C0(*(void *)(v0 + 24));
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t LayeredMediaViewDisplayStateCoordinator.__deallocating_deinit()
{
  LayeredMediaViewDisplayStateCoordinator.deinit();
  return swift_deallocClassInstance();
}

uint64_t LayeredMediaViewDisplayStateCoordinator.register(view:onChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakAssign();
  uint64_t v6 = *(void *)(v3 + 24);
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  sub_1BFC3E5C0(v6);
  return swift_retain();
}

uint64_t sub_1C0D8DB68@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_1C0D8DBB4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_1C0D8DC10(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(a1 + 40) = a3;
  swift_retain();
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
  return swift_release();
}

uint64_t type metadata accessor for LayeredMediaViewDisplayStateCoordinator()
{
  return self;
}

uint64_t method lookup function for LayeredMediaViewDisplayStateCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaViewDisplayStateCoordinator);
}

uint64_t dispatch thunk of LayeredMediaViewDisplayStateCoordinator.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1C0D8DCDC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  long long v6 = a1[7];
  v31[6] = a1[6];
  v32[0] = v6;
  *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)((char *)a1 + 121);
  long long v7 = a1[3];
  uint64_t v31[2] = a1[2];
  v31[3] = v7;
  long long v8 = a1[5];
  v31[4] = a1[4];
  v31[5] = v8;
  long long v9 = a1[1];
  v31[0] = *a1;
  v31[1] = v9;
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  long long v29 = *(_OWORD *)(a2 + 80);
  long long v30 = *(_OWORD *)(a2 + 64);
  long long v28 = *(_OWORD *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 112);
  uint64_t v13 = *(void *)(a2 + 120);
  char v14 = *(unsigned char *)(a2 + 128);
  if (*v3)
  {
    uint64_t v15 = (_OWORD *)swift_allocObject();
    long long v16 = a1[7];
    v15[7] = a1[6];
    v15[8] = v16;
    *(_OWORD *)((char *)v15 + 137) = *(_OWORD *)((char *)a1 + 121);
    long long v17 = a1[3];
    v15[3] = a1[2];
    v15[4] = v17;
    long long v18 = a1[5];
    v15[5] = a1[4];
    v15[6] = v18;
    long long v19 = a1[1];
    v15[1] = *a1;
    _OWORD v15[2] = v19;
    char v33 = 1;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v20;
    *(_OWORD *)(v20 + 16) = 0u;
    *(_OWORD *)(v20 + 32) = 0u;
    *(unsigned char *)(v20 + 48) = v33;
    *(void *)(v20 + 56) = v11;
    *(void *)(v20 + 64) = v10;
    *(_OWORD *)(v20 + 72) = v30;
    *(_OWORD *)(v20 + 88) = v29;
    *(_OWORD *)(v20 + 104) = v28;
    *(void *)(v20 + 120) = v12;
    *(void *)(v20 + 128) = v13;
    *(unsigned char *)(v20 + 136) = v14;
    uint64_t v22 = sub_1C0D8E650;
  }
  else
  {
    uint64_t v15 = (_OWORD *)swift_allocObject();
    long long v23 = a1[7];
    v15[7] = a1[6];
    v15[8] = v23;
    *(_OWORD *)((char *)v15 + 137) = *(_OWORD *)((char *)a1 + 121);
    long long v24 = a1[3];
    v15[3] = a1[2];
    v15[4] = v24;
    long long v25 = a1[5];
    v15[5] = a1[4];
    v15[6] = v25;
    long long v26 = a1[1];
    v15[1] = *a1;
    _OWORD v15[2] = v26;
    char v33 = 1;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v20;
    *(_OWORD *)(v20 + 16) = 0u;
    *(_OWORD *)(v20 + 32) = 0u;
    *(unsigned char *)(v20 + 48) = v33;
    *(void *)(v20 + 56) = v11;
    *(void *)(v20 + 64) = v10;
    *(_OWORD *)(v20 + 72) = v30;
    *(_OWORD *)(v20 + 88) = v29;
    *(_OWORD *)(v20 + 104) = v28;
    *(void *)(v20 + 120) = v12;
    *(void *)(v20 + 128) = v13;
    *(unsigned char *)(v20 + 136) = v14;
    uint64_t v22 = sub_1C0D8E69C;
  }
  *(void *)(v20 + 144) = v22;
  *(void *)(v20 + 152) = v15;
  swift_bridgeObjectRetain();
  *a3 = v21 | 0x2000000000000000;
  return sub_1C0187FB0((uint64_t)v31);
}

double sub_1C0D8DF08@<D0>(id *a1@<X2>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_coverImageAssetHandle);
  if (v3)
  {
    id v4 = v3;
    *(void *)(a2 + 24) = sub_1BFF6C3A8();
    *(void *)(a2 + 32) = sub_1BFF6C3E8();
    *(void *)a2 = v4;
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1C0D8DF70@<D0>(void *a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  if (a2 == 2)
  {
    id v6 = objc_msgSend(objc_msgSend(*a3, sel_sourceChannel), sel_theme);
    swift_unknownObjectRelease();
    if (!v6) {
      goto LABEL_18;
    }
    id v7 = objc_msgSend(v6, sel_bannerImageForMask);
    swift_unknownObjectRelease();
    if (!v7) {
      goto LABEL_18;
    }
  }
  else
  {
    id v8 = objc_msgSend(a1, sel_userInterfaceStyle);
    if ((unint64_t)v8 >= 2)
    {
      if (v8 == (id)2)
      {
        id v10 = objc_msgSend(objc_msgSend(*a3, sel_sourceChannel), sel_theme);
        swift_unknownObjectRelease();
        if (!v10) {
          goto LABEL_18;
        }
        id v7 = objc_msgSend(v10, sel_bannerImageForMask);
        swift_unknownObjectRelease();
        if (!v7) {
          goto LABEL_18;
        }
      }
      else
      {
        id v11 = objc_msgSend(objc_msgSend(*a3, sel_sourceChannel), sel_theme);
        swift_unknownObjectRelease();
        if (!v11) {
          goto LABEL_18;
        }
        id v7 = objc_msgSend(v11, sel_bannerImageForWhiteBackground);
        swift_unknownObjectRelease();
        if (!v7) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      id v9 = objc_msgSend(objc_msgSend(*a3, sel_sourceChannel), sel_theme);
      swift_unknownObjectRelease();
      if (!v9) {
        goto LABEL_18;
      }
      id v7 = objc_msgSend(v9, sel_bannerImageForWhiteBackground);
      swift_unknownObjectRelease();
      if (!v7) {
        goto LABEL_18;
      }
    }
  }
  id v12 = objc_msgSend(v7, sel_assetHandle);

  if (v12)
  {
    *(void *)(a4 + 24) = sub_1BFF6C3A8();
    *(void *)(a4 + 32) = sub_1BFF6C3E8();
    *(void *)a4 = v12;
    return result;
  }
LABEL_18:
  *(void *)(a4 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

uint64_t sub_1C0D8E1F0(char *a1, char *a2)
{
  return sub_1C148AA98(*a1, *a2);
}

uint64_t sub_1C0D8E1FC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0D8E288()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D8E300()
{
  return sub_1C1520E0C();
}

void sub_1C0D8E388(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A220;
}

BOOL static FormatIssueBinding.Image.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatIssueBinding.Image.hash(into:)()
{
  return sub_1C1520DCC();
}

void *static FormatIssueBinding.Image.allCases.getter()
{
  return &unk_1F1B89DA0;
}

uint64_t FormatIssueBinding.Image.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0D8E434()
{
  unint64_t result = qword_1EA1A6E38;
  if (!qword_1EA1A6E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6E38);
  }
  return result;
}

unint64_t sub_1C0D8E488(uint64_t a1)
{
  unint64_t result = sub_1C0D8E4B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D8E4B0()
{
  unint64_t result = qword_1EA1A6E40;
  if (!qword_1EA1A6E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6E40);
  }
  return result;
}

uint64_t sub_1C0D8E504()
{
  return sub_1C0293CE4(&qword_1EA1A6E48, &qword_1EA1A6E50);
}

void sub_1C0D8E534(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A248;
}

unint64_t sub_1C0D8E544(void *a1)
{
  a1[1] = sub_1BFD92B0C();
  a1[2] = sub_1BFD5B72C();
  unint64_t result = sub_1C0D8E434();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Image()
{
  return &type metadata for FormatIssueBinding.Image;
}

ValueMetadata *_s5ImageO10CodingTypeOMa()
{
  return &_s5ImageO10CodingTypeON;
}

uint64_t sub_1C0D8E5C4()
{
  return sub_1C0293CE4(&qword_1EA1A6E58, &qword_1EA1A6E60);
}

unint64_t sub_1C0D8E5F8()
{
  unint64_t result = qword_1EA1A6E68;
  if (!qword_1EA1A6E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6E68);
  }
  return result;
}

double sub_1C0D8E650@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0D8DF70(a1, a2, (id *)(v3 + 16), a3);
}

uint64_t sub_1C0D8E658()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

double sub_1C0D8E69C@<D0>(uint64_t a1@<X8>)
{
  return sub_1C0D8DF08((id *)(v1 + 16), a1);
}

void sub_1C0D8E6A4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (!v1)
  {
    uint64_t v8 = MEMORY[0x1C18C9C60](v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
    if (!v8) {
      return;
    }
    uint64_t v9 = v8;
    sub_1C151F91C();
    uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
    sub_1C151F91C();
    id v11 = *(id *)(v10 + qword_1EB93C9D0);
    sub_1C151F91C();

    sub_1C151F91C();
    goto LABEL_11;
  }
  uint64_t v2 = v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate;
  uint64_t v3 = MEMORY[0x1C18C9C60](v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
  id v4 = v1;
  id v14 = v4;
  if (v3)
  {
    sub_1C0DF4C08(v4);
    swift_unknownObjectRelease();
    id v4 = v14;
  }
  unsigned int v5 = objc_msgSend(v4, sel_isPictureInPictureActive);
  uint64_t v6 = MEMORY[0x1C18C9C60](v2);
  uint64_t v7 = v6;
  if (v5)
  {
    if (v6) {
      goto LABEL_10;
    }
  }
  else if (v6)
  {
LABEL_10:
    sub_1C151F91C();
    uint64_t v12 = *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
    sub_1C151F91C();
    id v13 = *(id *)(v12 + qword_1EB93C9D0);
    sub_1C151F91C();

    sub_1C151F91C();
LABEL_11:
    swift_unknownObjectRelease();
    return;
  }
}

void sub_1C0D8E928(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVideoPlayerData();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController;
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController)) {
    return;
  }
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F8D8]), sel_init);
  uint64_t v10 = *(void **)(v1 + v8);
  *(void *)(v1 + v8) = v9;

  sub_1C15180CC();
  if ((sub_1C151809C() & 1) == 0) {
    goto LABEL_6;
  }
  id v11 = objc_msgSend(a1, sel_view);
  if (*(void *)(v1 + v8))
  {
    id v26 = *(id *)(v1 + v8);
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_adJournal);
    uint64_t v13 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_commandCenter;
    uint64_t v14 = v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data;
    uint64_t v15 = v11;
    uint64_t v16 = swift_allocObject();
    long long v27 = *(_OWORD *)(v2 + v13);
    swift_unknownObjectWeakInit();
    sub_1C0484C94(v14, (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v18 = (v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v12;
    sub_1C0D91F7C((uint64_t)v7, v19 + v17);
    *(void *)(v19 + v18) = v16;
    *(_OWORD *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8)) = v27;
    aBlock[4] = sub_1C0D91FE0;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFC9FC68;
    aBlock[3] = &block_descriptor_64;
    uint64_t v20 = _Block_copy(aBlock);
    id v21 = v26;
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v21, sel_addDebuggerAction_, v20);

    _Block_release(v20);
LABEL_6:
    uint64_t v22 = *(void **)(v2 + v8);
    if (!v22) {
      return;
    }
    goto LABEL_7;
  }

  uint64_t v22 = *(void **)(v1 + v8);
  if (!v22) {
    return;
  }
LABEL_7:
  objc_msgSend(v22, sel_setDelegate_, v2);
  long long v23 = *(void **)(v2 + v8);
  if (v23)
  {
    objc_msgSend(v23, sel_setDataSource_, v2);
    long long v24 = *(void **)(v2 + v8);
    if (v24) {
      objc_msgSend(v24, sel_setEnablePictureInPictureBehaviors_, 1);
    }
  }
}

uint64_t sub_1C0D8EC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v24 = a1;
  sub_1C0D92984(0, &qword_1EA1A6FF0, MEMORY[0x1E4F7A840], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  long long v28 = (char *)&v22 - v8;
  uint64_t v23 = sub_1C151BBCC();
  uint64_t v9 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151D1EC();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a3 + 16;
  uint64_t v19 = *(void *)(a2 + 40);
  sub_1C0484C94(a2, (uint64_t)v13);
  if (!v19) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1C0D92080((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  sub_1C151DA9C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v25, *MEMORY[0x1E4FACB48], v23);
  long long v29 = &type metadata for Tracker;
  unint64_t v30 = sub_1C0D920E0();
  swift_beginAccess();
  MEMORY[0x1C18C9C60](v18);
  long long v31 = 0u;
  long long v32 = 0u;
  char v33 = 1;
  sub_1C151B75C();
  swift_allocObject();
  sub_1C151B73C();
  swift_getObjectType();
  sub_1C151C9FC();
  uint64_t v20 = (uint64_t)v28;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v28, v17, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
  swift_retain();
  sub_1C151AD8C();
  swift_release();
  swift_release_n();
  sub_1C0D92134(v20);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void sub_1C0D8F00C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cover;
  swift_beginAccess();
  sub_1C0D91B8C(v1, (uint64_t)v6);
  LODWORD(v1) = v6[8];
  sub_1C0D91C00((uint64_t)v6);
  if (v1 == 1
    && (*(unsigned char *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_isBookmarkInProgress) & 1) == 0
    && (*(unsigned char *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_isViewTransitionInProcess) & 1) == 0)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
    if (v2)
    {
      id v3 = v2;
      if (!objc_msgSend(v3, sel_isPlaying)
        || (objc_msgSend(v3, sel_isFullscreenInProgress) & 1) != 0)
      {
        goto LABEL_12;
      }
      id v4 = objc_msgSend(v3, sel_mode);
      if (v4)
      {
        if (v4 != (id)1)
        {
LABEL_12:

          return;
        }
        uint64_t v5 = &selRef_pause;
      }
      else
      {
        uint64_t v5 = &selRef_startPictureInPictureIfPossible;
      }
      [v3 *v5];
      goto LABEL_12;
    }
  }
}

void sub_1C0D8F184(uint64_t a1)
{
  uint64_t v3 = sub_1C151559C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151BF6C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = 0;
  char v18 = 1;
  uint64_t v11 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cover;
  swift_beginAccess();
  sub_1C0D92B10((uint64_t)&v17, v11);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_1C151BF4C();
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = sub_1C151BF5C();
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      if (sub_1C151F4AC())
      {
        swift_unknownObjectWeakInit();

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        char v18 = 0;
        swift_beginAccess();
        sub_1C0D92B10((uint64_t)&v17, v11);
        swift_endAccess();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void sub_1C0D8F428(uint64_t a1)
{
  uint64_t v3 = sub_1C151559C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = sub_1C151BF6C();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, a1, v3, v9);
  sub_1C151BF4C();
  uint64_t v12 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cover;
  swift_beginAccess();
  sub_1C0D91B8C(v12, (uint64_t)v20);
  if (v20[8] == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
    sub_1C0D91C00((uint64_t)v20);
    return;
  }
  sub_1C0D92B00();
  id v13 = (void *)MEMORY[0x1C18C9C60](v23);
  uint64_t v14 = sub_1C151BF5C();
  uint64_t v15 = (void *)v14;
  if (!v13)
  {
    sub_1C019B9B4((uint64_t)v23);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
    if (v15)
    {

      return;
    }
    goto LABEL_9;
  }
  if (!v14)
  {
    id v18 = v13;
    sub_1C019B9B4((uint64_t)v23);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);

    return;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB880D40);
  id v16 = v13;
  char v17 = sub_1C151FB6C();
  sub_1C019B9B4((uint64_t)v23);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);

  if (v17)
  {
LABEL_9:
    uint64_t v21 = 0;
    char v22 = 1;
    swift_beginAccess();
    sub_1C0D92B10((uint64_t)&v21, v12);
    swift_endAccess();
  }
}

uint64_t sub_1C0D8F718(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = sub_1C151559C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  __n128 v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151556C();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0D8F95C()
{
  return type metadata accessor for FormatVideoPlayerManager();
}

uint64_t type metadata accessor for FormatVideoPlayerManager()
{
  uint64_t result = qword_1EA1A6F18;
  if (!qword_1EA1A6F18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0D8F9B0()
{
  uint64_t result = type metadata accessor for FormatVideoPlayerData();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void sub_1C0D8FAC0(void *a1)
{
  uint64_t v2 = v1;
  sub_1C0D8FE34((uint64_t)&v33);
  if (!v34)
  {
    sub_1C0D8E928(a1);
    id v16 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
    if (!v16) {
      return;
    }
    uint64_t v17 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate;
    uint64_t v18 = MEMORY[0x1C18C9C60](v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
    id v31 = v16;
    if (v18)
    {
      sub_1C0DF4C08(v31);
      swift_unknownObjectRelease();
    }
    uint64_t v19 = MEMORY[0x1C18C9C60](v17);
    if (v19)
    {
      uint64_t v20 = v19;
      sub_1C151F91C();
      uint64_t v21 = *(void *)(v20 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1C151F91C();
      id v22 = *(id *)(v21 + qword_1EB93C9D0);
      sub_1C151F91C();

      sub_1C151F91C();
      swift_unknownObjectRelease();
    }
    objc_msgSend(v31, sel_playWithButtonTapped_, 1);
    uint64_t v15 = v31;
    goto LABEL_19;
  }
  id v30 = v34;
  uint64_t v4 = v33;
  uint64_t v6 = v35;
  uint64_t v5 = v36;
  uint64_t v8 = v37;
  uint64_t v7 = v38;
  uint64_t v9 = v39;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_sceneProvider), *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_sceneProvider + 24));
  id v10 = (void *)sub_1C151AE2C();
  if (v10)
  {
    uint64_t v11 = v10;
    id v29 = objc_msgSend(v10, sel_rootViewController);

    if (v29)
    {
      id v12 = objc_msgSend(v29, sel_presentedViewController);
      if (v12 && (id v13 = v12, self, v14 = swift_dynamicCastObjCClass(), v13, v14))
      {
        sub_1BFEDF9D8(v4, (uint64_t)v30);
        uint64_t v15 = v29;
      }
      else
      {
        uint64_t v25 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory);
        uint64_t v26 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory + 24);
        uint64_t v27 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory + 32);
        __swift_project_boxed_opaque_existential_1(v25, v26);
        v32[0] = v4;
        v32[1] = v30;
        v32[2] = v6;
        _OWORD v32[3] = v5;
        v32[4] = v8;
        v32[5] = v7;
        v32[6] = v9;
        id v28 = (id)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 8))(v32, v26, v27);
        sub_1BFEDF9D8(v4, (uint64_t)v30);
        objc_msgSend(v29, sel_presentViewController_animated_completion_, v28, 1, 0);

        uint64_t v15 = v28;
      }
LABEL_19:

      return;
    }
    uint64_t v23 = v4;
    uint64_t v24 = (uint64_t)v30;
  }
  else
  {
    uint64_t v23 = v4;
    uint64_t v24 = (uint64_t)v30;
  }
  sub_1BFEDF9D8(v23, v24);
}

uint64_t sub_1C0D8FE34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + qword_1EA1AA1F8);
  uint64_t v5 = *(void *)(v1 + qword_1EA1AA1F8 + 24);
  uint64_t v4 = *(void *)(v1 + qword_1EA1AA1F8 + 32);
  __swift_project_boxed_opaque_existential_1(v3, v5);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 8))(v5);
  switch(result)
  {
    case 0:
      *(void *)(a1 + 48) = 0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      return result;
    case 1:
    case 2:
      if (qword_1EA194C60 != -1) {
        swift_once();
      }
      uint64_t v7 = &qword_1EA2B5568;
      goto LABEL_15;
    case 3:
      if (qword_1EA194C80 != -1) {
        swift_once();
      }
      uint64_t v7 = &qword_1EA2B5648;
      goto LABEL_15;
    case 4:
    case 5:
      if (qword_1EA194C70 != -1) {
        swift_once();
      }
      uint64_t v7 = &qword_1EA2B55D8;
      goto LABEL_15;
    case 6:
      if (qword_1EA194C78 != -1) {
        swift_once();
      }
      uint64_t v7 = &qword_1EA2B5610;
LABEL_15:
      uint64_t v8 = v7[1];
      uint64_t v9 = v7[2];
      uint64_t v10 = v7[3];
      uint64_t v11 = v7[4];
      uint64_t v12 = v7[5];
      uint64_t v13 = v7[6];
      *(void *)a1 = *v7;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      *(void *)(a1 + 32) = v11;
      *(void *)(a1 + 40) = v12;
      *(void *)(a1 + 48) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    default:
      sub_1C152040C();
      __break(1u);
      JUMPOUT(0x1C0D9006CLL);
  }
}

void sub_1C0D900A4(void *a1)
{
  uint64_t v2 = v1;
  sub_1C0D8FE34((uint64_t)&v35);
  if (!v36)
  {
    sub_1C0D8E928(a1);
    id v16 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
    if (!v16) {
      return;
    }
    uint64_t v17 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate;
    uint64_t v18 = MEMORY[0x1C18C9C60](v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
    id v19 = v16;
    id v33 = v19;
    if (v18)
    {
      sub_1C0DF4C08(v19);
      swift_unknownObjectRelease();
      id v19 = v33;
    }
    unsigned int v20 = objc_msgSend(v19, sel_isPictureInPictureActive);
    uint64_t v21 = MEMORY[0x1C18C9C60](v17);
    uint64_t v22 = v21;
    if (v20)
    {
      if (v21) {
        goto LABEL_21;
      }
    }
    else if (v21)
    {
LABEL_21:
      sub_1C151F91C();
      uint64_t v28 = *(void *)(v22 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1C151F91C();
      id v29 = *(id *)(v28 + qword_1EB93C9D0);
      sub_1C151F91C();

      sub_1C151F91C();
      swift_unknownObjectRelease();
    }
    if (objc_msgSend(v33, sel_isPlaying)) {
      objc_msgSend(v33, sel_pause);
    }
    else {
      objc_msgSend(v33, sel_playWithButtonTapped_, 1);
    }
    uint64_t v15 = v33;
    goto LABEL_26;
  }
  id v32 = v36;
  uint64_t v4 = v35;
  uint64_t v6 = v37;
  uint64_t v5 = v38;
  uint64_t v8 = v39;
  uint64_t v7 = v40;
  uint64_t v9 = v41;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_sceneProvider), *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_sceneProvider + 24));
  uint64_t v10 = (void *)sub_1C151AE2C();
  if (v10)
  {
    uint64_t v11 = v10;
    id v31 = objc_msgSend(v10, sel_rootViewController);

    if (v31)
    {
      id v12 = objc_msgSend(v31, sel_presentedViewController);
      if (v12 && (uint64_t v13 = v12, self, v14 = swift_dynamicCastObjCClass(), v13, v14))
      {
        sub_1BFEDF9D8(v4, (uint64_t)v32);
        uint64_t v15 = v31;
      }
      else
      {
        uint64_t v25 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory);
        uint64_t v26 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory + 24);
        uint64_t v27 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory + 32);
        __swift_project_boxed_opaque_existential_1(v25, v26);
        v34[0] = v4;
        v34[1] = v32;
        v34[2] = v6;
        v34[3] = v5;
        v34[4] = v8;
        v34[5] = v7;
        v34[6] = v9;
        uint64_t v30 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 8))(v34, v26, v27);
        sub_1BFEDF9D8(v4, (uint64_t)v32);
        objc_msgSend(v31, sel_presentViewController_animated_completion_, v30, 1, 0);

        uint64_t v15 = (void *)v30;
      }
LABEL_26:

      return;
    }
    uint64_t v23 = v4;
    uint64_t v24 = (uint64_t)v32;
  }
  else
  {
    uint64_t v23 = v4;
    uint64_t v24 = (uint64_t)v32;
  }
  sub_1BFEDF9D8(v23, v24);
}

void sub_1C0D904F0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151E16C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151E1DC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatPictureInPictureModel();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C1515FDC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1C151844C();
  sub_1C0D92080((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatPictureInPictureModel);
  id v16 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (v16)
  {
    id v17 = v16;
    if (objc_msgSend(v17, sel_isFullscreen)
      || objc_msgSend(v17, sel_isFullscreenInProgress))
    {
      goto LABEL_4;
    }
    uint64_t v38 = v9;
    if (objc_msgSend(a1, sel_isPlaying))
    {
      if (*(double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage) < 1.0)
      {
        id v18 = objc_msgSend(a1, sel_playerViewController);
        id v19 = objc_msgSend(v18, sel_presentingViewController);

        if (!v19)
        {
          objc_msgSend(a1, sel_pause);
          uint64_t v37 = v5;
          uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator + 24);
          uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator + 32);
          __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator), v20);
          uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v21 + 104);
          uint64_t v23 = v21;
          uint64_t v5 = v37;
          v22(v20, v23);
        }
      }
    }
    id v24 = objc_msgSend(self, sel_currentDevice);
    id v25 = objc_msgSend(v24, sel_userInterfaceIdiom);

    if (v25 == (id)5) {
      objc_msgSend(a1, sel_pause);
    }
    uint64_t v26 = MEMORY[0x1C18C9C60](v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
    if (v26)
    {
      uint64_t v27 = v26;
      sub_1C151F91C();
      uint64_t v28 = *(void *)(v27 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1C151F91C();
      id v29 = *(id *)(v28 + qword_1EB93C9D0);
      sub_1C151F91C();

      sub_1C151F91C();
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
      uint64_t v37 = sub_1C151F56C();
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = a1;
      aBlock[4] = sub_1C0D92980;
      aBlock[5] = v30;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BFC9FC68;
      aBlock[3] = &block_descriptor_37_1;
      id v31 = _Block_copy(aBlock);
      id v32 = a1;
      swift_release();
      sub_1C151E19C();
      aBlock[0] = MEMORY[0x1E4FBC860];
      sub_1BFD32B60();
      sub_1C0D92984(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1BFD32AD8();
      sub_1C151FFBC();
      id v33 = (void *)v37;
      MEMORY[0x1C18C70C0](0, v11, v7, v31);

      _Block_release(v31);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v8);
      return;
    }
    if (!MEMORY[0x1C18C9C60](v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate))
    {
LABEL_4:
    }
    else
    {
      uint64_t v34 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey);
      uint64_t v35 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey + 8);
      swift_beginAccess();
      uint64_t v36 = (void *)sub_1C0353F8C(v34, v35);
      swift_endAccess();
      swift_unknownObjectRelease();
    }
  }
}

void sub_1C0D90B64(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id))
{
  id v7 = a3;
  swift_unknownObjectRetain();
  id v8 = a1;
  a5(v7);

  swift_unknownObjectRelease();
}

uint64_t sub_1C0D90C70(void *a1)
{
  uint64_t v3 = sub_1C151E16C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151E1DC();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = MEMORY[0x1F4188790](v7).n128_u64[0];
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_embedVideoPlayerIfNeeded, v9);
  unsigned int v12 = objc_msgSend(a1, sel_isPictureInPictureActive);
  uint64_t result = MEMORY[0x1C18C9C60](v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
  uint64_t v14 = result;
  if (v12)
  {
    if (result)
    {
      sub_1C151F91C();
      uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1C151F91C();
      id v16 = *(id *)(v15 + qword_1EB93C9D0);
      sub_1C151F91C();

      sub_1C151F91C();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    if (result)
    {
      sub_1C151F91C();
      uint64_t v17 = *(void *)(v14 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1C151F91C();
      id v18 = *(id *)(v17 + qword_1EB93C9D0);
      sub_1C151F91C();

      sub_1C151F91C();
      swift_unknownObjectRelease();
    }
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    id v19 = (void *)sub_1C151F56C();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a1;
    aBlock[4] = sub_1C0D92980;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFC9FC68;
    aBlock[3] = &block_descriptor_22;
    uint64_t v21 = _Block_copy(aBlock);
    id v22 = a1;
    swift_release();
    sub_1C151E19C();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1BFD32B60();
    sub_1C0D92984(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1BFD32AD8();
    sub_1C151FFBC();
    MEMORY[0x1C18C70C0](0, v11, v6, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t sub_1C0D91104(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data + 48);
  if (v7)
  {
    if ((objc_msgSend((id)swift_unknownObjectRetain(), sel_disablePrerollAds) & 1) == 0
      && *((unsigned char *)v6 + *(int *)(v3 + 52)) == 1)
    {
      uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_videoAdProviderFactory + 24);
      uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_videoAdProviderFactory + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_videoAdProviderFactory), v8);
      uint64_t v10 = v6[4];
      uint64_t v11 = v6[5];
      sub_1C0484C94((uint64_t)v6, (uint64_t)v5);
      if (v11)
      {
        uint64_t v12 = v11;
      }
      else
      {
        uint64_t v10 = *((void *)v5 + 2);
        uint64_t v12 = *((void *)v5 + 3);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      sub_1C0D92080((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
      uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(v7, v10, v12, a1, v8, v9);
      swift_unknownObjectRelease();
      goto LABEL_10;
    }
    swift_unknownObjectRelease();
  }
  if (qword_1EB87BF18 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_1EB93C748;
  sub_1C0D92984(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  uint64_t v15 = v6[1];
  v23[0] = *v6;
  v23[1] = v15;
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  sub_1BFC77FBC(0, (unint64_t *)&qword_1EB879C00);
  id v17 = v13;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C151E6AC();
  uint64_t v20 = v19;
  *(void *)(v14 + 56) = v16;
  *(void *)(v14 + 64) = sub_1BFE9C558();
  *(void *)(v14 + 32) = v18;
  *(void *)(v14 + 40) = v20;
  sub_1C151F38C();
  sub_1C15197BC();

  uint64_t v21 = 0;
LABEL_10:
  swift_bridgeObjectRelease();
  return v21;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerManagerCover()
{
  return &type metadata for FormatVideoPlayerManagerCover;
}

uint64_t sub_1C0D9148C()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (v2)
  {
    objc_msgSend(v2, sel_pause);
    uint64_t v3 = *(void **)(v0 + v1);
    if (v3) {
      objc_msgSend(v3, sel_stopPictureInPicture);
    }
  }
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator + 24);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator), v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
}

void sub_1C0D9151C()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController))
  {
    if (MEMORY[0x1C18C9C60](v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate))
    {
      uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey;
      uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey);
      uint64_t v3 = *(void *)(v1 + 8);
      swift_beginAccess();
      uint64_t v4 = (void *)sub_1C0353F8C(v2, v3);
      swift_endAccess();
      swift_unknownObjectRelease();
    }
  }
}

id sub_1C0D915C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v57 = a8;
  uint64_t v58 = a3;
  uint64_t v50 = a6;
  uint64_t v51 = a7;
  uint64_t v59 = a2;
  uint64_t v60 = a1;
  uint64_t v54 = a11;
  uint64_t v55 = a12;
  uint64_t v52 = a9;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v56 = sub_1C151559C();
  uint64_t v19 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offscreenVisibility] = 0;
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_partialVisibility] = 0x3FE0000000000000;
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_onscreenVisibility] = 0x3FF0000000000000;
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController] = 0;
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage] = 0x3FF0000000000000;
  v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_isBookmarkInProgress] = 0;
  v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_isViewTransitionInProcess] = 0;
  id v22 = &v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cover];
  *(void *)id v22 = 0;
  v22[8] = 1;
  sub_1C0484C94(a1, (uint64_t)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data]);
  sub_1BFC66384(a2, (uint64_t)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator]);
  sub_1BFC66384(a3, (uint64_t)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_videoAdProviderFactory]);
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_pictureInPictureState] = a4;
  uint64_t v23 = &v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_commandCenter];
  uint64_t v24 = v50;
  uint64_t v25 = v51;
  *uint64_t v23 = a5;
  v23[1] = v24;
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_adJournal] = v25;
  sub_1BFC66384(a8, (uint64_t)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_sceneProvider]);
  uint64_t v26 = v52;
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineManager] = v52;
  sub_1BFC66384(a10, (uint64_t)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory]);
  uint64_t v27 = &v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey];
  uint64_t v28 = v55;
  void *v27 = v54;
  v27[1] = v28;
  v61.receiver = v12;
  v61.super_class = ObjectType;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  id v29 = v26;
  id v30 = objc_msgSendSuper2(&v61, sel_init);
  id v31 = self;
  id v32 = v30;
  id v33 = objc_msgSend(v31, sel_defaultCenter);
  sub_1BFC39268(0, &qword_1EA1A7008);
  id v34 = v32;
  sub_1C151F6BC();
  uint64_t v35 = (void *)sub_1C151557C();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v56);
  objc_msgSend(v33, sel_addObserver_selector_name_object_, v34, sel_startPictureInPictureIfPossible, v35, 0);

  id v36 = objc_msgSend(v31, sel_defaultCenter);
  id v37 = v34;
  uint64_t v38 = (void *)sub_1C151AC5C();
  objc_msgSend(v36, sel_addObserver_selector_name_object_, v37, sel_willApplyBookmark, v38, 0);

  id v39 = objc_msgSend(v31, sel_defaultCenter);
  id v40 = v37;
  uint64_t v41 = (void *)sub_1C151AC4C();
  objc_msgSend(v39, sel_addObserver_selector_name_object_, v40, sel_didApplyBookmark, v41, 0);

  id v42 = objc_msgSend(v31, sel_defaultCenter);
  sub_1C151ABAC();
  id v43 = v40;
  unint64_t v44 = (void *)sub_1C151AB6C();
  objc_msgSend(v42, sel_addObserver_selector_name_object_, v43, sel_didStartCoveringWithNotification_, v44, 0);

  id v45 = objc_msgSend(v31, sel_defaultCenter);
  id v46 = v43;
  uint64_t v47 = (void *)sub_1C151AB4C();
  objc_msgSend(v45, sel_addObserver_selector_name_object_, v46, sel_didFinishCoveringWithNotification_, v47, 0);

  __swift_destroy_boxed_opaque_existential_1(a10);
  __swift_destroy_boxed_opaque_existential_1(v57);
  __swift_destroy_boxed_opaque_existential_1(v58);
  __swift_destroy_boxed_opaque_existential_1(v59);
  sub_1C0D92080(v60, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  return v46;
}

void sub_1C0D91AC0(double a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage;
  *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage) = a1;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (!v3) {
    return;
  }
  id v5 = v3;
  if (objc_msgSend(v5, sel_isPlaying))
  {
    id v4 = objc_msgSend(v5, sel_mode);
    if (v4 == (id)1)
    {
      if (*(double *)(v1 + v2) > 0.5) {
        goto LABEL_10;
      }
    }
    else if (v4 || *(double *)(v1 + v2) >= 1.0)
    {
      goto LABEL_10;
    }
    sub_1C0D8F00C();
  }
LABEL_10:
  MEMORY[0x1F4181820]();
}

uint64_t sub_1C0D91B8C(uint64_t a1, uint64_t a2)
{
  sub_1BFC77FBC(0, &qword_1EA1A6FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D91C00(uint64_t a1)
{
  sub_1BFC77FBC(0, &qword_1EA1A6FE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0D91C6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (v3 && objc_msgSend(v3, sel_isLoading))
  {
    uint64_t v4 = v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate;
    uint64_t v5 = MEMORY[0x1C18C9C60](v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
    if (v5)
    {
      uint64_t v6 = v5;
      sub_1C151F91C();
      uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1C151F91C();
      id v8 = *(id *)(v7 + qword_1EB93C9D0);
      sub_1C151F91C();

      sub_1C151F91C();
      swift_unknownObjectRelease();
    }
    if (MEMORY[0x1C18C9C60](v4))
    {
      sub_1C0DF48F4();
      swift_unknownObjectRelease();
    }
    uint64_t v9 = *(void **)(v1 + v2);
    if (v9)
    {
      objc_msgSend(v9, sel_pause);
      uint64_t v9 = *(void **)(v1 + v2);
    }
    *(void *)(v1 + v2) = 0;
  }
  else
  {
    sub_1C0D8F00C();
  }
}

uint64_t sub_1C0D91DC8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0D91E00()
{
  uint64_t v1 = (int *)(type metadata accessor for FormatVideoPlayerData() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  unint64_t v3 = v0 + v2 + v1[11];
  uint64_t v4 = sub_1C1515FDC();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D91F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVideoPlayerData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D91FE0()
{
  uint64_t v1 = *(void *)(type metadata accessor for FormatVideoPlayerData() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = (uint64_t *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  return sub_1C0D8EC10(v4, v5, v6, v8, v9);
}

uint64_t sub_1C0D92080(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C0D920E0()
{
  unint64_t result = qword_1EA1A6FF8;
  if (!qword_1EA1A6FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A6FF8);
  }
  return result;
}

uint64_t sub_1C0D92134(uint64_t a1)
{
  sub_1C0D92984(0, &qword_1EA1A6FF0, MEMORY[0x1E4F7A840], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0D921C0()
{
  uint64_t v1 = type metadata accessor for FormatPictureInPictureModel();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data;
  uint64_t v5 = v4 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 36);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v3, v5, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
  sub_1C151844C();
  sub_1C0D92080((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatPictureInPictureModel);
  uint64_t result = MEMORY[0x1C18C9C60](v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
  if (result)
  {
    uint64_t v9 = result;
    sub_1C151F91C();
    uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
    sub_1C151F91C();
    id v11 = *(id *)(v10 + qword_1EB93C9D0);
    sub_1C151F91C();

    sub_1C151F91C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C0D9239C(void *a1)
{
  uint64_t v2 = v1;
  if (objc_msgSend(a1, sel_isFullscreen))
  {
    BOOL v4 = 0;
  }
  else
  {
    id v5 = objc_msgSend(a1, sel_viewIfLoaded);
    id v6 = objc_msgSend(v5, sel_window);

    BOOL v4 = v6 == 0;
  }
  if (*(double *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage) != 0.0 && !v4)
  {
    uint64_t result = MEMORY[0x1C18C9C60](v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate);
    if (result)
    {
      sub_1C0EA577C(*(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey), *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey + 8));
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate;
    uint64_t v9 = MEMORY[0x1C18C9C60](v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
    if (v9)
    {
      uint64_t v10 = v9;
      sub_1C151F91C();
      uint64_t v11 = *(void *)(v10 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1C151F91C();
      id v12 = *(id *)(v11 + qword_1EB93C9D0);
      sub_1C151F91C();

      sub_1C151F91C();
      swift_unknownObjectRelease();
    }
    if (MEMORY[0x1C18C9C60](v8))
    {
      sub_1C0DF48F4();
      swift_unknownObjectRelease();
    }
    uint64_t v13 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController;
    uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
    if (v14)
    {
      objc_msgSend(v14, sel_pause);
      uint64_t v15 = *(void **)(v2 + v13);
    }
    else
    {
      uint64_t v15 = 0;
    }
    *(void *)(v2 + v13) = 0;

    id v17 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator);
    uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator + 24);
    uint64_t v19 = v17[4];
    __swift_project_boxed_opaque_existential_1(v17, v18);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 104))(v18, v19);
  }
  return result;
}

uint64_t sub_1C0D925BC(void *a1)
{
  if (*(double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage) <= 0.5
    && objc_msgSend(a1, sel_mode) == (id)1)
  {
    objc_msgSend(a1, sel_pause);
  }
  uint64_t result = MEMORY[0x1C18C9C60](v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate);
  if (result)
  {
    sub_1C0EA577C(*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey), *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey + 8));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C0D92668(void *a1, void (**a2)(void, void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  id v5 = self;
  _Block_copy(a2);
  id v6 = objc_msgSend(v5, sel_currentDevice);
  id v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

  if (v7 == (id)5 || objc_msgSend(a1, sel_isFullscreen))
  {
    a2[2](a2, 1);
    return swift_release();
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_1C0D92A20;
    *(void *)(v9 + 24) = v4;
    v11[4] = sub_1C0D92A70;
    v11[5] = v9;
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 1107296256;
    _OWORD v11[2] = sub_1BFC9FC68;
    v11[3] = &block_descriptor_31_0;
    uint64_t v10 = _Block_copy(v11);
    swift_retain();
    swift_release();
    objc_msgSend(a1, sel_enterFullscreenWithCompletionBlock_, v10);
    _Block_release(v10);
    return swift_release();
  }
}

id sub_1C0D92828()
{
  uint64_t v1 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0484C94(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data, (uint64_t)v3);
  sub_1BFC66384(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator, (uint64_t)v10);
  uint64_t v4 = (objc_class *)type metadata accessor for FormatVideoPlayerProvider();
  id v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata] = 0;
  sub_1C0484C94((uint64_t)v3, (uint64_t)&v5[OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data]);
  sub_1BFC66384((uint64_t)v10, (uint64_t)&v5[OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator]);
  v9.receiver = v5;
  v9.super_class = v4;
  id v6 = objc_msgSendSuper2(&v9, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  sub_1C0D92080((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  return v6;
}

uint64_t sub_1C0D92948()
{
  return swift_deallocObject();
}

void sub_1C0D92984(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0D929E8()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C0D92A20(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1C0D92A38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D92A70()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

id sub_1C0D92A9C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id result = objc_msgSend(v1, sel_isPlaying);
  if ((result & 1) == 0)
  {
    return objc_msgSend(v1, sel_flashPlaybackControlsWithDuration_, 1.79769313e308);
  }
  return result;
}

uint64_t sub_1C0D92B00()
{
  return swift_unknownObjectWeakTakeInit();
}

uint64_t sub_1C0D92B10(uint64_t a1, uint64_t a2)
{
  sub_1BFC77FBC(0, &qword_1EA1A6FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for Tracker()
{
  return &type metadata for Tracker;
}

uint64_t sub_1C0D92BA0()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

void sub_1C0D92BEC(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, char *a5, uint64_t a6)
{
}

uint64_t sub_1C0D92C1C(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_1C0D92F68(a4) & 1;
}

void sub_1C0D92C48(void **a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1BFF2E934(0, (unint64_t *)&unk_1EB8642F0, MEMORY[0x1E4FACB80]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v12 = MEMORY[0x1F4188790](v11).n128_u64[0];
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = *a1;
  if (a2)
  {
    if (a3)
    {
      sub_1C151B74C();
      uint64_t v19 = sub_1C151BBCC();
      uint64_t v20 = *(void *)(v19 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v19);
      sub_1C0CA0F70((uint64_t)v14, (uint64_t)v10);
      if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v10, v19) == *MEMORY[0x1E4FACB40])
      {
        uint64_t v21 = *(void **)(v4 + 16);
        id v22 = objc_msgSend(v15, sel_identifier);
        if (!v22)
        {
          sub_1C151E62C();
          id v22 = (id)sub_1C151E5EC();
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v21, sel_addArticleToReadingList_eventInitiationLevel_origin_, v22, 1, 3);
LABEL_17:

        sub_1BFF512F0((uint64_t)v14, (unint64_t *)&unk_1EB8642F0, MEMORY[0x1E4FACB80]);
        return;
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
    }
    else
    {
      uint64_t v23 = sub_1C151BBCC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v14, 1, 1, v23);
    }
    uint64_t v24 = *(void **)(v4 + 16);
    id v22 = objc_msgSend(v15, sel_identifier);
    if (!v22)
    {
      sub_1C151E62C();
      id v22 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v24, sel_addArticleToReadingList_, v22);
    goto LABEL_17;
  }
  uint64_t v16 = *(void **)(v4 + 16);
  id v17 = objc_msgSend(v15, sel_identifier, v12);
  if (!v17)
  {
    sub_1C151E62C();
    uint64_t v26 = sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v17 = (id)v26;
  }
  uint64_t v26 = (uint64_t)v17;
  objc_msgSend(v16, sel_removeArticleFromReadingList_);
  uint64_t v18 = (void *)v26;
}

uint64_t sub_1C0D92F68(void **a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E934(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  *(void *)&double v9 = MEMORY[0x1F4188790](v8 - 8).n128_u64[0];
  uint64_t v11 = (char *)&v51 - v10;
  double v12 = *a1;
  uint64_t v13 = (void *)v1[2];
  uint64_t v14 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
  id v15 = objc_msgSend(v12, sel_identifier, v9);
  if (!v15)
  {
    sub_1C151E62C();
    id v15 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  unsigned int v16 = objc_msgSend(v13, sel_isArticleOnReadingList_, v15);

  if (v16)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  int v18 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  if (v18) {
    return 1;
  }
  id v19 = objc_msgSend(self, sel_mainBundle);
  id v20 = objc_msgSend(v19, sel_bundleIdentifier);

  if (v20)
  {
    uint64_t v21 = sub_1C151E62C();
    uint64_t v23 = v22;

    if (v21 == 0x6C7070612E6D6F63 && v23 == 0xEE007377656E2E65)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
      goto LABEL_13;
    }
    char v24 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    uint64_t v14 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
    if (v24) {
      goto LABEL_13;
    }
  }
  uint64_t v25 = v2[7];
  uint64_t v26 = v2[8];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v25);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v26 + 32))(v25, v26) & 1) == 0) {
    return 0;
  }
LABEL_13:
  if (objc_msgSend(v12, sel_respondsToSelector_, sel_role))
  {
    unint64_t v27 = (unint64_t)objc_msgSend(v12, sel_role);
    if (v27 < 8 && ((0x9Du >> v27) & 1) != 0) {
      return 0;
    }
  }
  id v28 = objc_msgSend(v12, sel_routeURL);
  if (v28)
  {
    id v29 = v28;
    sub_1C1515F1C();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v7, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
    {
      sub_1BFF512F0((uint64_t)v11, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
  }
  sub_1BFF512F0((uint64_t)v11, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (objc_msgSend(v12, sel_contentType) == (id)1) {
    return 0;
  }
  id v30 = objc_msgSend(v12, sel_sourceChannel);
  if (!v30) {
    return 1;
  }
  id v31 = v30;
  id v32 = (void *)v2[3];
  swift_unknownObjectRetain();
  id v33 = objc_msgSend(v32, sel_purchaseProvider);
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
  {
    id v34 = objc_msgSend(v31, sel_asSection);
    if (!v34
      || (id v35 = objc_msgSend(v34, sel_parentID), swift_unknownObjectRelease(), !v35))
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_30;
    }
  }
  else
  {
    id v35 = [v31 (SEL)v14[174]];
  }
  uint64_t v36 = sub_1C151E62C();
  uint64_t v38 = v37;

  id v39 = objc_msgSend(v33, sel_purchasedTagIDs);
  uint64_t v40 = sub_1C151EFBC();

  LOBYTE(v39) = sub_1BFF896B4(v36, v38, v40);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v39)
  {
    swift_unknownObjectRelease_n();
    return 1;
  }
LABEL_30:
  uint64_t v41 = (char *)objc_msgSend(objc_msgSend(v32, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v41, v41 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v53 = 0u;
    long long v54 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v53, (uint64_t)v55);
  if (!v56)
  {
    sub_1BFEFE4A0((uint64_t)v55);
    goto LABEL_38;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_38:
    id v42 = 0;
    unint64_t v44 = 0;
    goto LABEL_39;
  }
  id v42 = v52;
  id v43 = objc_msgSend(v52, sel_integerValue);
  if (v43 == (id)-1)
  {

    goto LABEL_50;
  }
  unint64_t v44 = (unint64_t)v43;
LABEL_39:
  if (objc_getAssociatedObject(v41, (const void *)~v44))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v53 = 0u;
    long long v54 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v53, (uint64_t)v55);
  if (!v56)
  {
    sub_1BFEFE4A0((uint64_t)v55);
LABEL_47:

    if (v44) {
      goto LABEL_50;
    }
LABEL_48:
    swift_unknownObjectRelease();
    goto LABEL_54;
  }
  sub_1BFFBE2BC();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_47;
  }
  id v45 = v52;
  unsigned int v46 = objc_msgSend(v45, sel_integerValue);

  if ((((v46 + 1) ^ (v44 + 1)) & 1) == 0) {
    goto LABEL_48;
  }
LABEL_50:
  id v47 = objc_msgSend(objc_msgSend(v32, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v48 = [v31 (SEL)v14[174]];
  if (!v48)
  {
    sub_1C151E62C();
    id v48 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  unsigned int v49 = objc_msgSend(v47, sel_containsTagID_, v48);
  swift_unknownObjectRelease();

  if (v49)
  {
    swift_unknownObjectRelease();
    return 1;
  }
LABEL_54:
  unsigned int v50 = objc_msgSend((id)swift_unknownObjectRetain(), sel_isPaid);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v50 ^ 1;
}

ValueMetadata *type metadata accessor for A18_V3()
{
  return &type metadata for A18_V3;
}

uint64_t sub_1C0D937C0(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0D97930(0, &qword_1EA1A70C0, (uint64_t (*)(void))sub_1C0D978DC, (uint64_t)&type metadata for A18_V3.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0D978DC();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0D97998(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0D93A08(uint64_t a1)
{
  unint64_t v2 = sub_1C0D978DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0D93A44(uint64_t a1)
{
  unint64_t v2 = sub_1C0D978DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0D93A80@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0D9762C(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0D93AC8(void *a1)
{
  return sub_1C0D937C0(a1);
}

uint64_t sub_1C0D93AE0()
{
  sub_1C0D972B0();
  return sub_1C151798C();
}

uint64_t sub_1C0D93B5C@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0D97930(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0D93C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  long long v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  id v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  uint64_t v74 = &type metadata for A18_V3;
  unint64_t v20 = sub_1C0186098();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *uint64_t v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  uint64_t v74 = &type metadata for A18_V3;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C00192A8(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  id v31 = (void *)(v30 + 16);
  swift_beginAccess();
  id v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    *id v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    id v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    *id v31 = v32;
  }
  v32[2] = v35 + 1;
  uint64_t v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B83360, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    id v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      id v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      id v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    long long v42[2] = v45 + 1;
    unsigned int v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B83388, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A18_V3.Bound();
    uint64_t v51 = v53;
    v53[3] = v50;
    v51[4] = sub_1C0D97998(&qword_1EA1A7020, (void (*)(uint64_t))type metadata accessor for A18_V3.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

double sub_1C0D943BC@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  char v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v40 = *(void *)(v3 - 8);
  *(void *)&long long v41 = v3;
  MEMORY[0x1F4188790](v3);
  long long v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + *(int *)(type metadata accessor for A18_V3.Bound() + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(void *)(v6 + *(int *)(v7 + 40));
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(int *)(v7 + 32);
  uint64_t v42 = v6;
  double v11 = *(double *)(v6 + v10);
  sub_1BFC66384(v9 + 16, (uint64_t)v47);
  sub_1BFC66384(v9 + 56, (uint64_t)v46);
  double v12 = v11 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v47, inited + 16);
  sub_1BFC773DC(v46, inited + 56);
  *(double *)(inited + 96) = v12;
  v45[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v45, (uint64_t *)&v48);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1C00737F8();
  uint64_t v14 = sub_1C151ECCC();
  *(void *)(v14 + 16) = 3;
  sub_1BFC66384((uint64_t)&v48, v14 + 32);
  sub_1BFC66384((uint64_t)&v48, v14 + 72);
  sub_1BFC773DC(&v48, v14 + 112);
  uint64_t v15 = *(void *)(v8 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v47);
  sub_1BFC66384(v15 + 56, (uint64_t)v46);
  double v16 = v11 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v47, v17 + 16);
  sub_1BFC773DC(v46, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v45[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v45, (uint64_t *)&v48);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v18 = sub_1C151ECCC();
  *(void *)(v18 + 16) = 3;
  sub_1BFC66384((uint64_t)&v48, v18 + 32);
  sub_1BFC66384((uint64_t)&v48, v18 + 72);
  sub_1BFC773DC(&v48, v18 + 112);
  *(void *)&long long v48 = v14;
  sub_1BFEB37F8(v18);
  uint64_t v19 = v48;
  v44[2] = v2;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C06472C0(v20, v19, (void (*)(char *, uint64_t))sub_1C0D9724C, (uint64_t)v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v22 = *(void *)(v21 + 16);
  if (v22 >= 3) {
    uint64_t v23 = 3;
  }
  else {
    uint64_t v23 = *(void *)(v21 + 16);
  }
  sub_1C1520B6C();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = MEMORY[0x1E4FBC860];
  }
  uint64_t v25 = *(void *)(v24 + 16);
  swift_release();
  if (v25 == v22 - v23)
  {
    if (!swift_dynamicCastClass()) {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    sub_1C00B2130(v21, v21 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80)), v23, (2 * v22) | 1);
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = *MEMORY[0x1E4FAB6D8];
  uint64_t v27 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v5, v26, v27);
  uint64_t v28 = (*(uint64_t (**)(char *, void, void))(v40 + 104))(v5, *MEMORY[0x1E4FAB8F0], v41);
  MEMORY[0x1F4188790](v28);
  sub_1C0D97368(0, &qword_1EA1A7040, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v29 = sub_1C1517BEC();
  swift_release();
  uint64_t v42 = v29;
  uint64_t v30 = sub_1C1517BFC();
  long long v41 = v48;
  uint64_t v31 = v49;
  uint64_t v32 = v50;
  *(void *)&long long v48 = v21;
  *(void *)&v47[0] = v51;
  MEMORY[0x1F4188790](v30);
  sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v48 = v33;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v34 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v35 = v43;
  unsigned char *v43 = 0;
  double result = *(double *)&v41;
  *(_OWORD *)(v35 + 8) = v41;
  *((void *)v35 + 3) = v31;
  *((void *)v35 + 4) = v32;
  uint64_t v37 = MEMORY[0x1E4FBC860];
  *((void *)v35 + 5) = v34;
  *((void *)v35 + 6) = v37;
  return result;
}

uint64_t sub_1C0D94A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0D94B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0D97930(0, &qword_1EA1A7058, (uint64_t (*)(void))sub_1C0D9725C, (uint64_t)&type metadata for A18_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 18;
  *uint64_t v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0D97368(0, &qword_1EA1A7060, MEMORY[0x1E4FAB6F0]);
  sub_1C0D97324(&qword_1EA1A7068, &qword_1EA1A7060, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C0D94D40(uint64_t a1, void (*a2)(uint64_t *, uint64_t), uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v54 = sub_1C0D9725C;
  sub_1C0D97930(0, &qword_1EA1A7058, (uint64_t (*)(void))sub_1C0D9725C, (uint64_t)&type metadata for A18_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v38 - v7);
  uint64_t v59 = a1;
  uint64_t v9 = sub_1C151729C();
  uint64_t v10 = swift_allocBox();
  uint64_t v11 = *(void *)(v9 - 8);
  double v12 = *(void (**)(void))(v11 + 104);
  unsigned int v48 = *MEMORY[0x1E4FAB4E8];
  uint64_t v49 = v9;
  uint64_t v46 = v11 + 104;
  id v47 = (void (*)(uint64_t, void, uint64_t))v12;
  v12(v13);
  *uint64_t v8 = v10;
  uint64_t v14 = *(void (**)(uint64_t *))(v6 + 104);
  unsigned int v45 = *MEMORY[0x1E4FAB940];
  v14(v8);
  uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D97368(0, &qword_1EA1A7070, MEMORY[0x1E4FAB4D0]);
  uint64_t v57 = v16;
  uint64_t v17 = sub_1C0D97324(&qword_1EA1A7078, &qword_1EA1A7070, v15);
  sub_1C151738C();
  uint64_t v18 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v18(v8, v5);
  uint64_t v53 = a1;
  uint64_t v59 = a1;
  uint64_t v19 = *MEMORY[0x1E4FAB9E0];
  uint64_t v50 = v6 + 104;
  uint64_t v51 = v14;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v14)(v8, v19, v5);
  sub_1C0D973EC();
  uint64_t v21 = v20;
  sub_1C0D97930(0, &qword_1EA1A7088, (uint64_t (*)(void))v54, (uint64_t)&type metadata for A18_V3.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = (v25 + 32) & ~v25;
  uint64_t v42 = v26 + *(void *)(v24 + 72);
  uint64_t v41 = v25 | 7;
  uint64_t v27 = swift_allocObject();
  long long v38 = xmmword_1C1529AE0;
  *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
  uint64_t v43 = v26;
  uint64_t v28 = *(void (**)(void))(v24 + 104);
  unsigned int v40 = *MEMORY[0x1E4FAB638];
  uint64_t v44 = v23;
  uint64_t v39 = (uint64_t (*)(uint64_t, void, uint64_t))v28;
  v28(v27 + v26);
  uint64_t v58 = v56;
  uint64_t v52 = v17;
  sub_1C151731C();
  uint64_t v29 = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = v18;
  uint64_t v54 = (unint64_t (*)())(v6 + 8);
  uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v18)(v8, v5);
  if (*(void *)(v29 + 16) == 3)
  {
    uint64_t v31 = v53;
    uint64_t v59 = v53;
    uint64_t v32 = v49;
    uint64_t v33 = swift_allocBox();
    v47(v34, v48, v32);
    *uint64_t v8 = v33;
    uint64_t v49 = v21;
    unint64_t v35 = v51;
    ((void (*)(uint64_t *, void, uint64_t))v51)(v8, v45, v5);
    sub_1C151738C();
    v56(v8, v5);
    uint64_t v59 = v31;
    ((void (*)(uint64_t *, void, uint64_t))v35)(v8, *MEMORY[0x1E4FABA28], v5);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = v38;
    uint64_t v37 = v39(v36 + v43, v40, v44);
    MEMORY[0x1F4188790](v37);
    sub_1C151731C();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t *, uint64_t))v56)(v8, v5);
  }
  return result;
}

uint64_t sub_1C0D95298(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  sub_1C0D97930(0, &qword_1EA1A7058, (uint64_t (*)(void))sub_1C0D9725C, (uint64_t)&type metadata for A18_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v18 - v7);
  uint64_t v25 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  unsigned int v21 = *MEMORY[0x1E4FABA10];
  uint64_t v10 = *(void (**)(uint64_t *))(v6 + 104);
  v10(v8);
  uint64_t v18 = v10;
  uint64_t v24 = a2;
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D97368(0, &qword_1EA1A7070, MEMORY[0x1E4FAB4D0]);
  sub_1C0D97324(&qword_1EA1A7078, &qword_1EA1A7070, v11);
  sub_1C151734C();
  double v12 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v12(v8, v5);
  uint64_t v13 = v20;
  uint64_t v25 = v20;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  *uint64_t v8 = v14;
  ((void (*)(uint64_t *, void, uint64_t))v10)(v8, v21, v5);
  uint64_t v15 = v19;
  uint64_t v23 = v19;
  sub_1C151734C();
  v12(v8, v5);
  uint64_t v25 = v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 6;
  *uint64_t v8 = v16;
  ((void (*)(uint64_t *, void, uint64_t))v18)(v8, v21, v5);
  uint64_t v22 = v15;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v12)(v8, v5);
}

uint64_t sub_1C0D955D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D97930(0, &qword_1EA1A7058, (uint64_t (*)(void))sub_1C0D9725C, (uint64_t)&type metadata for A18_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D97368(0, &qword_1EA1A7070, MEMORY[0x1E4FAB4D0]);
  sub_1C0D97324(&qword_1EA1A7078, &qword_1EA1A7070, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C0D95BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D97930(0, &qword_1EA1A7058, (uint64_t (*)(void))sub_1C0D9725C, (uint64_t)&type metadata for A18_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D97368(0, &qword_1EA1A7070, MEMORY[0x1E4FAB4D0]);
  sub_1C0D97324(&qword_1EA1A7078, &qword_1EA1A7070, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C0D9617C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D97930(0, &qword_1EA1A7058, (uint64_t (*)(void))sub_1C0D9725C, (uint64_t)&type metadata for A18_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(void *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 0;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D97368(0, &qword_1EA1A7070, MEMORY[0x1E4FAB4D0]);
  sub_1C0D97324(&qword_1EA1A7078, &qword_1EA1A7070, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

void sub_1C0D96754(uint64_t a1, uint64_t a2)
{
  sub_1C0D97930(0, &qword_1EA1A7058, (uint64_t (*)(void))sub_1C0D9725C, (uint64_t)&type metadata for A18_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v15 - v7);
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v19 = *(void *)(v10 + 72);
    unsigned int v18 = *MEMORY[0x1E4FABA10];
    uint64_t v16 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v17 = (uint64_t (**)(uint64_t *, void, uint64_t))(v6 + 104);
    uint64_t v15 = a2;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v20 = a1;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 6;
      *uint64_t v8 = v12;
      uint64_t v13 = (*v17)(v8, v18, v5);
      MEMORY[0x1F4188790](v13);
      uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0D97368(0, &qword_1EA1A7070, MEMORY[0x1E4FAB4D0]);
      sub_1C0D97324(&qword_1EA1A7078, &qword_1EA1A7070, v14);
      sub_1C151734C();
      (*v16)(v8, v5);
      v11 += v19;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0D96A20(uint64_t a1, uint64_t a2)
{
  v25[0] = a2;
  uint64_t v3 = type metadata accessor for HeadlineViewLayout.Options(0);
  uint64_t v4 = (int *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0D97930(0, &qword_1EA1A7058, (uint64_t (*)(void))sub_1C0D9725C, (uint64_t)&type metadata for A18_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)v25 - v10);
  v25[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  uint64_t v13 = (char *)v6 + v4[7];
  uint64_t v14 = *MEMORY[0x1E4FAB8C8];
  uint64_t v15 = sub_1C1517A7C();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  uint64_t v17 = (void *)*MEMORY[0x1E4FB27D0];
  *uint64_t v6 = 0;
  *(void *)((char *)v6 + v4[8]) = 0;
  *(void *)((char *)v6 + v4[9]) = v17;
  double v18 = *MEMORY[0x1E4FB2848];
  double v19 = *(double *)(MEMORY[0x1E4FB2848] + 8);
  double v20 = *(double *)(MEMORY[0x1E4FB2848] + 16);
  double v21 = *(double *)(MEMORY[0x1E4FB2848] + 24);
  id v22 = v17;
  _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v25[0], (uint64_t)v6, v18, v19, v20, v21);
  sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v23 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0D97368(0, &qword_1EA1A7070, MEMORY[0x1E4FAB4D0]);
  sub_1C0D97324(&qword_1EA1A7078, &qword_1EA1A7070, v23);
  sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C0D96D88@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A18_V3.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0D96E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0D93C18(a1, a2, a3);
}

uint64_t sub_1C0D96E90()
{
  return sub_1C12BC3F4();
}

unint64_t sub_1C0D96EA0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0D96ED0();
  unint64_t result = sub_1C0D96F24();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0D96ED0()
{
  unint64_t result = qword_1EA1A7010;
  if (!qword_1EA1A7010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7010);
  }
  return result;
}

unint64_t sub_1C0D96F24()
{
  unint64_t result = qword_1EA1A7018;
  if (!qword_1EA1A7018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7018);
  }
  return result;
}

uint64_t type metadata accessor for A18_V3.Bound()
{
  uint64_t result = qword_1EA1A7028;
  if (!qword_1EA1A7028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0D96FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0D96FD8);
}

uint64_t sub_1C0D96FD8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0D97088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0D9709C);
}

void *sub_1C0D9709C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0D97144()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0D971F4(uint64_t a1)
{
  uint64_t result = sub_1C0D97998(&qword_1EA1A7038, (void (*)(uint64_t))type metadata accessor for A18_V3.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D9724C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0D94A80(a1, a2, a3);
}

uint64_t sub_1C0D97254(uint64_t a1)
{
  return sub_1C0D94B50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C0D9725C()
{
  unint64_t result = qword_1EA1A7048;
  if (!qword_1EA1A7048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7048);
  }
  return result;
}

unint64_t sub_1C0D972B0()
{
  unint64_t result = qword_1EA1A7050;
  if (!qword_1EA1A7050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7050);
  }
  return result;
}

uint64_t sub_1C0D97304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0D96D88(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0D9730C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0D9731C(uint64_t a1)
{
  return sub_1C0D94D40(a1, *(void (**)(uint64_t *, uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0D97324(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0D97368(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0D97368(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A18_V3.Layout;
    v8[1] = &type metadata for A18_V3.Layout.Attributes;
    v8[2] = sub_1C0D9725C();
    v8[3] = sub_1C0D972B0();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0D973EC()
{
  if (!qword_1EA1A7080)
  {
    sub_1C0D97930(255, &qword_1EA1A7088, (uint64_t (*)(void))sub_1C0D9725C, (uint64_t)&type metadata for A18_V3.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A7080);
    }
  }
}

uint64_t sub_1C0D9747C(uint64_t a1)
{
  return sub_1C0D95298(a1, *(void *)(v1 + 16));
}

void sub_1C0D97484(uint64_t a1)
{
  sub_1C0D96754(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0D9748C(uint64_t a1)
{
  return sub_1C0D96A20(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0D97494(uint64_t a1)
{
  return sub_1C0D955D8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0D9749C(uint64_t a1)
{
  return sub_1C0D95BA4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0D974A4(uint64_t a1)
{
  return sub_1C0D9617C(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V3.Layout.Attributes()
{
  return &type metadata for A18_V3.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V3.Layout()
{
  return &type metadata for A18_V3.Layout;
}

unint64_t sub_1C0D974D0()
{
  unint64_t result = qword_1EA1A7090;
  if (!qword_1EA1A7090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7090);
  }
  return result;
}

unint64_t sub_1C0D97528()
{
  unint64_t result = qword_1EA1A7098;
  if (!qword_1EA1A7098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7098);
  }
  return result;
}

unint64_t sub_1C0D97580()
{
  unint64_t result = qword_1EA1A70A0;
  if (!qword_1EA1A70A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A70A0);
  }
  return result;
}

unint64_t sub_1C0D975D8()
{
  unint64_t result = qword_1EA1A70A8;
  if (!qword_1EA1A70A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A70A8);
  }
  return result;
}

uint64_t sub_1C0D9762C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0D97930(0, &qword_1EA1A70B0, (uint64_t (*)(void))sub_1C0D978DC, (uint64_t)&type metadata for A18_V3.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0D978DC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0D97998(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C0D978DC()
{
  unint64_t result = qword_1EA1A70B8;
  if (!qword_1EA1A70B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A70B8);
  }
  return result;
}

void sub_1C0D97930(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0D97998(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A18_V3.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D97AACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V3.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V3.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0D97AE8()
{
  unint64_t result = qword_1EA1A70C8;
  if (!qword_1EA1A70C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A70C8);
  }
  return result;
}

unint64_t sub_1C0D97B40()
{
  unint64_t result = qword_1EA1A70D0;
  if (!qword_1EA1A70D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A70D0);
  }
  return result;
}

unint64_t sub_1C0D97B98()
{
  unint64_t result = qword_1EA1A70D8;
  if (!qword_1EA1A70D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A70D8);
  }
  return result;
}

uint64_t sub_1C0D97BEC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C0D97C80(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *int v3 = *(void *)a2;
    int v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *((void *)a2 + 1);
      *int v3 = *(void *)a2;
      v3[1] = v14;
      *((unsigned char *)v3 + v5) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_1C0D97DFC(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_bridgeObjectRelease();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_1C0D97EFC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    swift_bridgeObjectRetain();
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v4) = v11;
  return a1;
}

unsigned __int8 *sub_1C0D98038(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      a1[v7] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

_OWORD *sub_1C0D9825C(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C0D98394(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1C0D985AC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1C0D986E0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C0D988A8);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C0D988D0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1C0D98988(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for FormatCodingKeysContainer()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C0D98A78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](a1);
  size_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v6 = MEMORY[0x1F4188790](v5);
  unsigned int v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v8, v6);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return *(void *)v8;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  uint64_t v10 = sub_1C1520F4C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

uint64_t sub_1C0D98C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v30 = a7;
  uint64_t v13 = sub_1C151FD8C();
  uint64_t v27 = *(void *)(v13 - 8);
  uint64_t v28 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v20 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  char v23 = (char *)&v27 - v22;
  swift_bridgeObjectRetain();
  uint64_t v29 = a1;
  sub_1C1520F5C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v28);
    *(void *)char v23 = v29;
    *((void *)v23 + 1) = a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v24(v19, v15, a3);
    v24(v23, v19, a3);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v30, v23, v20);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v25, 0, 1, v20);
}

uint64_t sub_1C0D98EDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FormatCodingKeysContainer();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1C0D98F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  int v11 = &v17[-v10];
  sub_1C152011C();
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v21 = KeyPath;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0D996EC, (uint64_t)v17, AssociatedTypeWitness, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], AssociatedConformanceWitness, MEMORY[0x1E4FBC278], v14);
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  swift_release();
  return v15;
}

uint64_t sub_1C0D990EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v2 + 16))(v5, v3);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return *(void *)v5;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  return 0;
}

uint64_t sub_1C0D991E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v33 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  v31[0] = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[1] = v5;
  uint64_t v36 = v6;
  uint64_t v37 = v7;
  uint64_t v38 = v8;
  uint64_t v39 = v5;
  uint64_t v9 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v31 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v32 = *(void *)(TupleTypeMetadata2 - 8);
  __n128 v17 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v19 = (char *)v31 - v18;
  uint64_t v21 = (void *)((char *)v31 + *(int *)(v20 + 48) - v18);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v22((char *)v31 - v18, v34, v9, v17);
  ((void (*)(void *, uint64_t, uint64_t))v22)(v21, v35, v9);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v27 = v33;
    ((void (*)(char *, char *, uint64_t))v22)(v15, v19, v9);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v28 = (char *)v31[0];
      (*(void (**)(void, void *, uint64_t))(v27 + 32))(v31[0], v21, a3);
      char v26 = sub_1C151E5CC();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v27 + 8);
      v29(v28, a3);
      v29(v15, a3);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, a3);
    goto LABEL_11;
  }
  ((void (*)(uint64_t *, char *, uint64_t))v22)(v12, v19, v9);
  uint64_t v24 = *v12;
  uint64_t v23 = v12[1];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    char v26 = 0;
    uint64_t v10 = v32;
    uint64_t v9 = TupleTypeMetadata2;
    goto LABEL_14;
  }
  if (v24 == *v21 && v23 == v21[1])
  {
    swift_bridgeObjectRelease_n();
    char v26 = 1;
  }
  else
  {
    char v26 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
  return v26 & 1;
}

uint64_t sub_1C0D99580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0D991E0(a1, a2, *(void *)(a3 + 16));
}

uint64_t sub_1C0D99594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C0D98C18(a1, a2, a3[2], a3[3], a3[4], a3[5], a4);
}

uint64_t sub_1C0D995A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D98EDC(a1);
}

uint64_t sub_1C0D995B4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C0D99608(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C0D9965C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D99698()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0D996B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0D996D4()
{
  return 32;
}

__n128 sub_1C0D996E0(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C0D996EC()
{
  return swift_getAtKeyPath();
}

void sub_1C0D99718(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void **)(a1 + 56);
  uint64_t v5 = *(void *)v2;
  if (!*(unsigned char *)(v2 + 8))
  {
    id v9 = objc_msgSend(*(id *)(a1 + 56), sel_orderedNavigationBarThemes);
    if (!v9)
    {
LABEL_34:
      id v11 = objc_msgSend(v4, sel_themeColor);
      if (v11)
      {
LABEL_35:
        id v17 = v11;
        goto LABEL_36;
      }
LABEL_37:
      uint64_t v12 = swift_allocObject();
      uint64_t v13 = v12;
      char v14 = 1;
LABEL_38:
      *(unsigned char *)(v12 + 16) = v14;
      goto LABEL_39;
    }
    uint64_t v10 = v9;
    sub_1C02B0F70();
    unint64_t v8 = sub_1C151EBCC();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v18 < v5) {
        goto LABEL_10;
      }
    }
    else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) < v5)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    if ((v8 & 0xC000000000000001) == 0)
    {
      if (v5 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v5 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v19 = *(void **)(v8 + 8 * v5 + 32);
        swift_unknownObjectRetain();
        goto LABEL_33;
      }
      __break(1u);
      JUMPOUT(0x1C0D99B78);
    }
LABEL_44:
    uint64_t v19 = (void *)MEMORY[0x1C18C7CB0](v5, v8);
LABEL_33:
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v19, sel_rankForegroundColor);
    swift_unknownObjectRelease();
    if (v17) {
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  if (*(unsigned char *)(v2 + 8) != 1)
  {
    switch(v5)
    {
      case 1:
        id v11 = objc_msgSend(*(id *)(a1 + 56), sel_darkStyleThemeColor);
        if (v11) {
          goto LABEL_35;
        }
        uint64_t v12 = swift_allocObject();
        uint64_t v13 = v12;
        char v14 = 6;
        break;
      case 2:
        id v11 = objc_msgSend(*(id *)(a1 + 56), sel_puzzlePrimaryColor);
        if (!v11) {
          goto LABEL_37;
        }
        goto LABEL_35;
      case 3:
        id v11 = objc_msgSend(*(id *)(a1 + 56), sel_darkStylePuzzlePrimaryColor);
        if (!v11) {
          goto LABEL_27;
        }
        goto LABEL_35;
      default:
        id v11 = objc_msgSend(*(id *)(a1 + 56), sel_themeColor);
        if (v11) {
          goto LABEL_35;
        }
        uint64_t v12 = swift_allocObject();
        uint64_t v13 = v12;
        char v14 = 12;
        break;
    }
    goto LABEL_38;
  }
  id v6 = objc_msgSend(*(id *)(a1 + 56), sel_orderedNavigationBarThemes);
  if (!v6) {
    goto LABEL_26;
  }
  uint64_t v7 = v6;
  sub_1C02B0F70();
  unint64_t v8 = sub_1C151EBCC();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v15 < v5) {
      goto LABEL_6;
    }
  }
  else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) < v5)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if ((v8 & 0xC000000000000001) == 0)
  {
    if (v5 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v5 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v16 = *(void **)(v8 + 8 * v5 + 32);
      swift_unknownObjectRetain();
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v16 = (void *)MEMORY[0x1C18C7CB0](v5, v8);
LABEL_25:
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v16, sel_rankForegroundDarkModeColor);
  swift_unknownObjectRelease();
  if (!v17)
  {
LABEL_26:
    id v11 = objc_msgSend(v4, sel_themeColor);
    if (!v11)
    {
LABEL_27:
      uint64_t v12 = swift_allocObject();
      uint64_t v13 = v12;
      *(unsigned char *)(v12 + 16) = 0;
LABEL_39:
      *(void *)(v12 + 24) = 0x3FF0000000000000;
      *(unsigned char *)(v12 + 32) = 0;
      uint64_t v27 = 0x1000000000000000;
      goto LABEL_40;
    }
    goto LABEL_35;
  }
LABEL_36:
  uint64_t v13 = swift_allocObject();
  objc_msgSend(v17, sel_red);
  double v21 = v20 * 255.0;
  objc_msgSend(v17, sel_green);
  double v23 = v22 * 255.0;
  objc_msgSend(v17, sel_blue);
  double v25 = v24 * 255.0;
  objc_msgSend(v17, sel_alpha);
  *(double *)(v13 + 16) = v21;
  *(double *)(v13 + 24) = v23;
  *(double *)(v13 + 32) = v25;
  *(void *)(v13 + 40) = v26;
  *(unsigned char *)(v13 + 48) = 0;

  uint64_t v27 = 0x6000000000000000;
LABEL_40:
  *a2 = v27 | v13;
}

uint64_t FormatPuzzleTypeBinding.Color.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 6;
  if (v2 < 6) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static FormatPuzzleTypeBinding.Color.CodingType.allCases.getter()
{
  return &unk_1F1B6B4D0;
}

unint64_t FormatPuzzleTypeBinding.Color.CodingType.rawValue.getter()
{
  unint64_t result = 0x6C6F43656D656874;
  switch(*v0)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0x6152656C7A7A7570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0D99CCC(unsigned __int8 *a1, char *a2)
{
  return sub_1C148223C(*a1, *a2);
}

uint64_t sub_1C0D99CD8()
{
  return sub_1C015E870();
}

uint64_t sub_1C0D99CE0()
{
  return sub_1C0448E4C();
}

uint64_t sub_1C0D99CE8()
{
  return sub_1C044DED0();
}

uint64_t sub_1C0D99CF0@<X0>(char *a1@<X8>)
{
  return FormatPuzzleTypeBinding.Color.CodingType.init(rawValue:)(a1);
}

unint64_t sub_1C0D99CFC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatPuzzleTypeBinding.Color.CodingType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0D99D24()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0D99D84()
{
  return sub_1C151EAEC();
}

void sub_1C0D99DD4(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B4D0;
}

uint64_t sub_1C0D99DE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPuzzleTypeBinding.Color.init(from:)(a1, a2);
}

uint64_t sub_1C0D99E00(void *a1)
{
  return FormatPuzzleTypeBinding.Color.encode(to:)(a1);
}

uint64_t sub_1C0D99E18@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  switch(*a1)
  {
    case 1:
      sub_1C0605BA8(0);
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      unint64_t v8 = (void *)(v7 + v13);
      sub_1C0D99718(a2, &v30);
      char v14 = (void *)((char *)v8 + *(int *)(v5 + 24));
      *char v14 = v30;
      uint64_t v15 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
      *unint64_t v8 = 0xD000000000000016;
      uint64_t v16 = "Dark Style Theme Color";
      goto LABEL_8;
    case 2:
      sub_1C0605BA8(0);
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v17 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      unint64_t v8 = (void *)(v7 + v17);
      sub_1C0D99718(a2, &v30);
      uint64_t v18 = (void *)((char *)v8 + *(int *)(v5 + 24));
      *uint64_t v18 = v30;
      uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
      *unint64_t v8 = 0xD000000000000014;
      uint64_t v16 = "Puzzle Primary Color";
      goto LABEL_8;
    case 3:
      sub_1C0605BA8(0);
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v20 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      unint64_t v8 = (void *)(v7 + v20);
      sub_1C0D99718(a2, &v30);
      double v21 = (void *)((char *)v8 + *(int *)(v5 + 24));
      *double v21 = v30;
      uint64_t v22 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
      *unint64_t v8 = 0xD00000000000001FLL;
      uint64_t v16 = "Dark Style Puzzle Primary Color";
      goto LABEL_8;
    case 4:
      sub_1C0605BA8(0);
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v23 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      unint64_t v8 = (void *)(v7 + v23);
      sub_1C0D99718(a2, &v30);
      double v24 = (void *)((char *)v8 + *(int *)(v5 + 24));
      *double v24 = v30;
      uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
      *unint64_t v8 = 0xD000000000000011;
      uint64_t v16 = "Puzzle Rank Color";
      goto LABEL_8;
    case 5:
      sub_1C0605BA8(0);
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v26 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      unint64_t v8 = (void *)(v7 + v26);
      sub_1C0D99718(a2, &v30);
      uint64_t v27 = (void *)((char *)v8 + *(int *)(v5 + 24));
      void *v27 = v30;
      uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
      *unint64_t v8 = 0xD000000000000016;
      uint64_t v16 = "Dark Puzzle Rank Color";
LABEL_8:
      unint64_t v12 = (unint64_t)(v16 - 32) | 0x8000000000000000;
      break;
    default:
      sub_1C0605BA8(0);
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      unint64_t v8 = (void *)(v7 + v6);
      sub_1C0D99718(a2, &v30);
      id v9 = (void *)((char *)v8 + *(int *)(v5 + 24));
      *id v9 = v30;
      uint64_t v10 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
      *unint64_t v8 = 0x6F4320656D656854;
      unint64_t v12 = 0xEB00000000726F6CLL;
      break;
  }
  v8[2] = 0;
  v8[3] = 0;
  v8[1] = v12;
  uint64_t v29 = (char *)v8 + *(int *)(v5 + 28);
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  v29[16] = -1;
  *a3 = v7;
  return result;
}

BOOL _s8NewsFeed23FormatPuzzleTypeBindingV5ColorO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((unsigned char *)a1 + 8))
  {
    if (!*((unsigned char *)a2 + 8)) {
      return v2 == v3;
    }
    return 0;
  }
  if (*((unsigned char *)a1 + 8) == 1)
  {
    if (v4 == 1) {
      return v2 == v3;
    }
    return 0;
  }
  switch(v2)
  {
    case 1:
      if (v4 != 2 || v3 != 1) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 2:
      if (v4 != 2 || v3 != 2) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 3:
      if (v4 != 2 || v3 != 3) {
        return 0;
      }
      BOOL result = 1;
      break;
    default:
      if (v4 != 2 || v3 != 0) {
        return 0;
      }
      BOOL result = 1;
      break;
  }
  return result;
}

unint64_t sub_1C0D9A680()
{
  unint64_t result = qword_1EA1A70E0;
  if (!qword_1EA1A70E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A70E0);
  }
  return result;
}

unint64_t sub_1C0D9A6D8()
{
  unint64_t result = qword_1EA1A70E8;
  if (!qword_1EA1A70E8)
  {
    sub_1C0D9A730();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A70E8);
  }
  return result;
}

void sub_1C0D9A730()
{
  if (!qword_1EA1A70F0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A70F0);
    }
  }
}

unint64_t sub_1C0D9A788(uint64_t a1)
{
  unint64_t result = sub_1C0D9A7B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D9A7B0()
{
  unint64_t result = qword_1EA1A70F8;
  if (!qword_1EA1A70F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A70F8);
  }
  return result;
}

unint64_t sub_1C0D9A804(void *a1)
{
  a1[1] = sub_1C087BADC();
  a1[2] = sub_1C08FAB00();
  unint64_t result = sub_1C0D9A83C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0D9A83C()
{
  unint64_t result = qword_1EA1A7100;
  if (!qword_1EA1A7100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7100);
  }
  return result;
}

uint64_t sub_1C0D9A890(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C0D9A8A8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding.Color()
{
  return &type metadata for FormatPuzzleTypeBinding.Color;
}

unsigned char *_s5ColorO10CodingTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0D9A99CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding.Color.CodingType()
{
  return &type metadata for FormatPuzzleTypeBinding.Color.CodingType;
}

double sub_1C0D9A9D4@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[1];
  v12[0] = *a1;
  v12[1] = v3;
  long long v4 = a1[3];
  _OWORD v12[2] = a1[2];
  v12[3] = v4;
  *(void *)&v10[0] = MEMORY[0x1E4FBC860];
  char v9 = byte_1F1B68780;
  sub_1C0D99E18(&v9, (uint64_t)v12, &v8);
  sub_1C1047634(v8);
  char v9 = byte_1F1B68781;
  sub_1C0D99E18(&v9, (uint64_t)v12, &v8);
  sub_1C1047634(v8);
  char v9 = byte_1F1B68782;
  sub_1C0D99E18(&v9, (uint64_t)v12, &v8);
  sub_1C1047634(v8);
  char v9 = byte_1F1B68783;
  sub_1C0D99E18(&v9, (uint64_t)v12, &v8);
  sub_1C1047634(v8);
  char v9 = byte_1F1B68784;
  sub_1C0D99E18(&v9, (uint64_t)v12, &v8);
  sub_1C1047634(v8);
  char v9 = byte_1F1B68785;
  sub_1C0D99E18(&v9, (uint64_t)v12, &v8);
  sub_1C1047634(v8);
  uint64_t v5 = sub_1C0233D40(*(uint64_t *)&v10[0]);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x7954656C7A7A7550, 0xEA00000000006570, 0, 0, v5, v10);
  swift_bridgeObjectRelease();
  double result = *(double *)v10;
  long long v7 = v10[1];
  *(_OWORD *)a2 = v10[0];
  *(_OWORD *)(a2 + 16) = v7;
  *(void *)(a2 + 32) = v11;
  return result;
}

uint64_t sub_1C0D9AB98()
{
  return swift_deallocObject();
}

uint64_t sub_1C0D9ABA8()
{
  return swift_deallocObject();
}

unint64_t sub_1C0D9ABB8()
{
  unint64_t result = qword_1EB862F70;
  if (!qword_1EB862F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862F70);
  }
  return result;
}

char *sub_1C0D9AC0C(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    long long v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        char v9 = *a2;
        *(void *)a1 = *a2;
        uint64_t v10 = (uint64_t *)(a2 + 1);
        unint64_t v11 = (unint64_t)a2[2];
        unint64_t v12 = v9;
        if (v11 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v10;
        }
        else
        {
          uint64_t v51 = *v10;
          sub_1BFE95820(*v10, v11);
          *((void *)a1 + 1) = v51;
          *((void *)a1 + 2) = v11;
        }
        sub_1C03360A8();
        uint64_t v53 = *(int *)(v52 + 64);
        uint64_t v54 = &a1[v53];
        uint64_t v55 = (uint64_t)a2 + v53;
        uint64_t v56 = sub_1C151526C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v13 = sub_1C151526C();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        char v14 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v14;
        uint64_t v15 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v15;
        a1[32] = *((unsigned char *)a2 + 32);
        uint64_t v16 = a2[6];
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = v16;
        unint64_t v17 = a2[8];
        *((void *)a1 + 7) = a2[7];
        *((void *)a1 + 8) = v17;
        uint64_t v18 = a2[10];
        *((void *)a1 + 9) = a2[9];
        *((void *)a1 + 10) = v18;
        a1[88] = *((unsigned char *)a2 + 88);
        uint64_t v84 = a2[13];
        *((void *)a1 + 12) = a2[12];
        *((void *)a1 + 13) = v84;
        uint64_t v19 = type metadata accessor for DebugNewsroomLayoutData();
        uint64_t v20 = *(int *)(v19 + 52);
        __dst = &a1[v20];
        uint64_t v89 = (int *)v19;
        unint64_t v82 = (char *)a2 + v20;
        uint64_t v21 = sub_1C151928C();
        uint64_t v22 = *(void *)(v21 - 8);
        unint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v92 = v23;
        uint64_t v81 = v22;
        uint64_t v85 = v21;
        if (v23(v82, 1, v21))
        {
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(__dst, v82, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v82, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        sub_1C01DDAA0();
        __dstb = v57;
        uint64_t v58 = v57[9];
        uint64_t v59 = &a1[v58];
        uint64_t v60 = (uint64_t)a2 + v58;
        uint64_t v61 = *(void *)(v60 + 8);
        *(void *)uint64_t v59 = *(void *)v60;
        *((void *)v59 + 1) = v61;
        uint64_t v62 = *(void *)(v60 + 24);
        *((void *)v59 + 2) = *(void *)(v60 + 16);
        *((void *)v59 + 3) = v62;
        v59[32] = *(unsigned char *)(v60 + 32);
        uint64_t v63 = *(void *)(v60 + 48);
        *((void *)v59 + 5) = *(void *)(v60 + 40);
        *((void *)v59 + 6) = v63;
        uint64_t v64 = *(void *)(v60 + 64);
        *((void *)v59 + 7) = *(void *)(v60 + 56);
        *((void *)v59 + 8) = v64;
        uint64_t v65 = *(void *)(v60 + 80);
        *((void *)v59 + 9) = *(void *)(v60 + 72);
        *((void *)v59 + 10) = v65;
        v59[88] = *(unsigned char *)(v60 + 88);
        uint64_t v66 = *(void *)(v60 + 104);
        *((void *)v59 + 12) = *(void *)(v60 + 96);
        *((void *)v59 + 13) = v66;
        uint64_t v67 = v89[13];
        uint64_t v91 = &v59[v67];
        uint64_t v68 = (const void *)(v60 + v67);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v92(v68, 1, v85)) {
          goto LABEL_26;
        }
        goto LABEL_22;
      case 5u:
        uint64_t v25 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v25;
        a1[16] = *((unsigned char *)a2 + 16);
        unint64_t v26 = a2[4];
        *((void *)a1 + 3) = a2[3];
        *((void *)a1 + 4) = v26;
        uint64_t v27 = a2[6];
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = v27;
        uint64_t v28 = a2[8];
        *((void *)a1 + 7) = a2[7];
        *((void *)a1 + 8) = v28;
        uint64_t v29 = a2[10];
        *((void *)a1 + 9) = a2[9];
        *((void *)a1 + 10) = v29;
        uint64_t v94 = a2[12];
        *((void *)a1 + 11) = a2[11];
        *((void *)a1 + 12) = v94;
        uint64_t v30 = type metadata accessor for DebugNewsroomThemeData();
        uint64_t v31 = *(int *)(v30 + 48);
        __dsta = &a1[v31];
        uint64_t v90 = (int *)v30;
        unint64_t v83 = (char *)a2 + v31;
        uint64_t v32 = sub_1C151928C();
        uint64_t v33 = *(void *)(v32 - 8);
        uint64_t v34 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unsigned __int8 v93 = v34;
        uint64_t v81 = v33;
        uint64_t v85 = v32;
        if (v34(v83, 1, v32))
        {
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(__dsta, v83, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dsta, v83, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dsta, 0, 1, v32);
        }
        sub_1C01DDB34();
        __dstb = v70;
        uint64_t v71 = v70[9];
        long long v72 = &a1[v71];
        uint64_t v73 = (uint64_t)a2 + v71;
        uint64_t v74 = *(void *)(v73 + 8);
        *(void *)long long v72 = *(void *)v73;
        *((void *)v72 + 1) = v74;
        v72[16] = *(unsigned char *)(v73 + 16);
        uint64_t v75 = *(void *)(v73 + 32);
        *((void *)v72 + 3) = *(void *)(v73 + 24);
        *((void *)v72 + 4) = v75;
        uint64_t v76 = *(void *)(v73 + 48);
        *((void *)v72 + 5) = *(void *)(v73 + 40);
        *((void *)v72 + 6) = v76;
        uint64_t v77 = *(void *)(v73 + 64);
        *((void *)v72 + 7) = *(void *)(v73 + 56);
        *((void *)v72 + 8) = v77;
        uint64_t v78 = *(void *)(v73 + 80);
        *((void *)v72 + 9) = *(void *)(v73 + 72);
        *((void *)v72 + 10) = v78;
        uint64_t v79 = *(void *)(v73 + 96);
        *((void *)v72 + 11) = *(void *)(v73 + 88);
        *((void *)v72 + 12) = v79;
        uint64_t v80 = v90[12];
        uint64_t v91 = &v72[v80];
        uint64_t v68 = (const void *)(v73 + v80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v93(v68, 1, v85))
        {
LABEL_22:
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(v91, v68, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
LABEL_26:
          (*(void (**)(char *, const void *, uint64_t))(v81 + 16))(v91, v68, v85);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v91, 0, 1, v85);
        }
        *(void *)&a1[__dstb[10]] = *(char **)((char *)a2 + __dstb[10]);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v36 = sub_1C1515FDC();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v37 = sub_1C15156FC();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v38 = *a2;
        uint64_t v39 = *a2;
        *(void *)a1 = v38;
        sub_1C03362B4();
        uint64_t v41 = *(int *)(v40 + 48);
        uint64_t v42 = &a1[v41];
        uint64_t v43 = (uint64_t)a2 + v41;
        uint64_t v44 = sub_1C151526C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = a2[2];
        sub_1C03361C0();
        uint64_t v46 = *(int *)(v45 + 64);
        id v47 = &a1[v46];
        uint64_t v48 = (uint64_t)a2 + v46;
        uint64_t v49 = sub_1C151526C();
        uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        v50(v47, v48, v49);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_1C0D9B60C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0D9B660(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
      goto LABEL_13;
    case 1:

      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >> 60 != 15) {
        sub_1BFE95664(*(void *)(a1 + 8), v3);
      }
      sub_1C03360A8();
      goto LABEL_20;
    case 3:
      goto LABEL_22;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for DebugNewsroomLayoutData();
      uint64_t v6 = a1 + *(int *)(v5 + 52);
      uint64_t v7 = sub_1C151928C();
      uint64_t v8 = *(void *)(v7 - 8);
      char v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      if (!v9(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      }
      sub_1C01DDAA0();
      uint64_t v11 = a1 + *(int *)(v10 + 36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(int *)(v5 + 52);
      goto LABEL_11;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for DebugNewsroomThemeData();
      uint64_t v14 = a1 + *(int *)(v13 + 48);
      uint64_t v7 = sub_1C151928C();
      uint64_t v8 = *(void *)(v7 - 8);
      char v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      if (!v9(v14, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v7);
      }
      sub_1C01DDB34();
      uint64_t v11 = a1 + *(int *)(v15 + 36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(int *)(v13 + 48);
LABEL_11:
      uint64_t v16 = v11 + v12;
      if (!v9(v11 + v12, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v7);
      }
LABEL_13:
      return swift_bridgeObjectRelease();
    case 6:
      uint64_t v17 = sub_1C1515FDC();
      goto LABEL_23;
    case 7:
      uint64_t v17 = sub_1C15156FC();
      goto LABEL_23;
    case 8:

      sub_1C03362B4();
      uint64_t v19 = *(int *)(v18 + 48);
      goto LABEL_21;
    case 9:
      swift_bridgeObjectRelease();
      sub_1C03361C0();
LABEL_20:
      uint64_t v19 = *(int *)(v4 + 64);
LABEL_21:
      a1 += v19;
LABEL_22:
      uint64_t v17 = sub_1C151526C();
LABEL_23:
      uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
      uint64_t result = v20(a1, v17);
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1C0D9BA5C(char *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
      *(void *)a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 1u:
      uint64_t v6 = (void *)*a2;
      *(void *)a1 = *a2;
      uint64_t v7 = a2 + 1;
      unint64_t v8 = a2[2];
      id v9 = v6;
      if (v8 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
      }
      else
      {
        uint64_t v47 = *v7;
        sub_1BFE95820(*v7, v8);
        *((void *)a1 + 1) = v47;
        *((void *)a1 + 2) = v8;
      }
      sub_1C03360A8();
      uint64_t v49 = *(int *)(v48 + 64);
      uint64_t v50 = &a1[v49];
      uint64_t v51 = (uint64_t)a2 + v49;
      uint64_t v52 = sub_1C151526C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      goto LABEL_25;
    case 3u:
      uint64_t v10 = sub_1C151526C();
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_25;
    case 4u:
      uint64_t v11 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v11;
      uint64_t v12 = a2[3];
      *((void *)a1 + 2) = a2[2];
      *((void *)a1 + 3) = v12;
      a1[32] = *((unsigned char *)a2 + 32);
      uint64_t v13 = a2[6];
      *((void *)a1 + 5) = a2[5];
      *((void *)a1 + 6) = v13;
      uint64_t v14 = a2[8];
      *((void *)a1 + 7) = a2[7];
      *((void *)a1 + 8) = v14;
      uint64_t v15 = a2[10];
      *((void *)a1 + 9) = a2[9];
      *((void *)a1 + 10) = v15;
      a1[88] = *((unsigned char *)a2 + 88);
      uint64_t v16 = a2[13];
      *((void *)a1 + 12) = a2[12];
      *((void *)a1 + 13) = v16;
      uint64_t v83 = type metadata accessor for DebugNewsroomLayoutData();
      uint64_t v17 = *(int *)(v83 + 52);
      __dst = &a1[v17];
      uint64_t v79 = (char *)a2 + v17;
      uint64_t v18 = sub_1C151928C();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v85 = v20;
      uint64_t v78 = v19;
      uint64_t v81 = v18;
      if (v20(v79, 1, v18))
      {
        sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        memcpy(__dst, v79, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v79, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      sub_1C01DDAA0();
      uint64_t v82 = v53;
      uint64_t v54 = *(int *)(v53 + 36);
      uint64_t v55 = &a1[v54];
      uint64_t v56 = (uint64_t)a2 + v54;
      uint64_t v57 = *(void *)(v56 + 8);
      *(void *)uint64_t v55 = *(void *)v56;
      *((void *)v55 + 1) = v57;
      uint64_t v58 = *(void *)(v56 + 24);
      *((void *)v55 + 2) = *(void *)(v56 + 16);
      *((void *)v55 + 3) = v58;
      v55[32] = *(unsigned char *)(v56 + 32);
      uint64_t v59 = *(void *)(v56 + 48);
      *((void *)v55 + 5) = *(void *)(v56 + 40);
      *((void *)v55 + 6) = v59;
      uint64_t v60 = *(void *)(v56 + 64);
      *((void *)v55 + 7) = *(void *)(v56 + 56);
      *((void *)v55 + 8) = v60;
      uint64_t v61 = *(void *)(v56 + 80);
      *((void *)v55 + 9) = *(void *)(v56 + 72);
      *((void *)v55 + 10) = v61;
      v55[88] = *(unsigned char *)(v56 + 88);
      uint64_t v62 = *(void *)(v56 + 104);
      *((void *)v55 + 12) = *(void *)(v56 + 96);
      *((void *)v55 + 13) = v62;
      uint64_t v63 = *(int *)(v83 + 52);
      __dstb = &v55[v63];
      uint64_t v64 = (const void *)(v56 + v63);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v85(v64, 1, v81)) {
        goto LABEL_22;
      }
      goto LABEL_23;
    case 5u:
      uint64_t v22 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v22;
      a1[16] = *((unsigned char *)a2 + 16);
      uint64_t v23 = a2[4];
      *((void *)a1 + 3) = a2[3];
      *((void *)a1 + 4) = v23;
      uint64_t v24 = a2[6];
      *((void *)a1 + 5) = a2[5];
      *((void *)a1 + 6) = v24;
      uint64_t v25 = a2[8];
      *((void *)a1 + 7) = a2[7];
      *((void *)a1 + 8) = v25;
      uint64_t v26 = a2[10];
      *((void *)a1 + 9) = a2[9];
      *((void *)a1 + 10) = v26;
      uint64_t v87 = a2[12];
      *((void *)a1 + 11) = a2[11];
      *((void *)a1 + 12) = v87;
      uint64_t v84 = type metadata accessor for DebugNewsroomThemeData();
      uint64_t v27 = *(int *)(v84 + 48);
      __dsta = &a1[v27];
      uint64_t v80 = (char *)a2 + v27;
      uint64_t v28 = sub_1C151928C();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v86 = v30;
      uint64_t v78 = v29;
      uint64_t v81 = v28;
      if (v30(v80, 1, v28))
      {
        sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        memcpy(__dsta, v80, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dsta, v80, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dsta, 0, 1, v28);
      }
      sub_1C01DDB34();
      uint64_t v82 = v65;
      uint64_t v66 = *(int *)(v65 + 36);
      uint64_t v67 = &a1[v66];
      uint64_t v68 = (uint64_t)a2 + v66;
      uint64_t v69 = *(void *)(v68 + 8);
      *(void *)uint64_t v67 = *(void *)v68;
      *((void *)v67 + 1) = v69;
      v67[16] = *(unsigned char *)(v68 + 16);
      uint64_t v70 = *(void *)(v68 + 32);
      *((void *)v67 + 3) = *(void *)(v68 + 24);
      *((void *)v67 + 4) = v70;
      uint64_t v71 = *(void *)(v68 + 48);
      *((void *)v67 + 5) = *(void *)(v68 + 40);
      *((void *)v67 + 6) = v71;
      uint64_t v72 = *(void *)(v68 + 64);
      *((void *)v67 + 7) = *(void *)(v68 + 56);
      *((void *)v67 + 8) = v72;
      uint64_t v73 = *(void *)(v68 + 80);
      *((void *)v67 + 9) = *(void *)(v68 + 72);
      *((void *)v67 + 10) = v73;
      uint64_t v74 = *(void *)(v68 + 96);
      *((void *)v67 + 11) = *(void *)(v68 + 88);
      *((void *)v67 + 12) = v74;
      uint64_t v75 = *(int *)(v84 + 48);
      __dstb = &v67[v75];
      uint64_t v64 = (const void *)(v68 + v75);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v86(v64, 1, v81))
      {
LABEL_22:
        sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        memcpy(__dstb, v64, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
LABEL_23:
        (*(void (**)(char *, const void *, uint64_t))(v78 + 16))(__dstb, v64, v81);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(__dstb, 0, 1, v81);
      }
      *(void *)&a1[*(int *)(v82 + 40)] = *(uint64_t *)((char *)a2 + *(int *)(v82 + 40));
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 6u:
      uint64_t v32 = sub_1C1515FDC();
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
      goto LABEL_25;
    case 7u:
      uint64_t v33 = sub_1C15156FC();
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
      goto LABEL_25;
    case 8u:
      uint64_t v34 = *a2;
      id v35 = (id)*a2;
      *(void *)a1 = v34;
      sub_1C03362B4();
      uint64_t v37 = *(int *)(v36 + 48);
      uint64_t v38 = &a1[v37];
      uint64_t v39 = (uint64_t)a2 + v37;
      uint64_t v40 = sub_1C151526C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      goto LABEL_25;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = a2[2];
      sub_1C03361C0();
      uint64_t v42 = *(int *)(v41 + 64);
      uint64_t v43 = &a1[v42];
      uint64_t v44 = (uint64_t)a2 + v42;
      uint64_t v45 = sub_1C151526C();
      uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      v46(v43, v44, v45);
LABEL_25:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1C0D9C400(char *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != (char *)a2)
  {
    sub_1C0D9CE74((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_27;
      case 1u:
        uint64_t v6 = (void *)*a2;
        *(void *)a1 = *a2;
        uint64_t v7 = a2 + 1;
        unint64_t v8 = a2[2];
        id v9 = v6;
        if (v8 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
        }
        else
        {
          uint64_t v38 = *v7;
          sub_1BFE95820(*v7, v8);
          *((void *)a1 + 1) = v38;
          *((void *)a1 + 2) = v8;
        }
        sub_1C03360A8();
        uint64_t v40 = *(int *)(v39 + 64);
        uint64_t v41 = &a1[v40];
        uint64_t v42 = (uint64_t)a2 + v40;
        uint64_t v43 = sub_1C151526C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
        goto LABEL_27;
      case 3u:
        uint64_t v10 = sub_1C151526C();
        (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_27;
      case 4u:
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = a2[1];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = a2[3];
        a1[32] = *((unsigned char *)a2 + 32);
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = a2[6];
        *((void *)a1 + 7) = a2[7];
        *((void *)a1 + 8) = a2[8];
        *((void *)a1 + 9) = a2[9];
        *((void *)a1 + 10) = a2[10];
        a1[88] = *((unsigned char *)a2 + 88);
        *((void *)a1 + 12) = a2[12];
        *((void *)a1 + 13) = a2[13];
        uint64_t v11 = type metadata accessor for DebugNewsroomLayoutData();
        uint64_t v12 = *(int *)(v11 + 52);
        __dst = &a1[v12];
        uint64_t v66 = (int *)v11;
        uint64_t v59 = (char *)a2 + v12;
        uint64_t v13 = sub_1C151928C();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15(v59, 1, v13))
        {
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(__dst, v59, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v59, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
        }
        sub_1C01DDAA0();
        __dsta = v44;
        uint64_t v45 = v44[9];
        uint64_t v46 = &a1[v45];
        uint64_t v47 = (uint64_t)a2 + v45;
        *(void *)uint64_t v46 = *(void *)v47;
        *((void *)v46 + 1) = *(void *)(v47 + 8);
        *((void *)v46 + 2) = *(void *)(v47 + 16);
        *((void *)v46 + 3) = *(void *)(v47 + 24);
        v46[32] = *(unsigned char *)(v47 + 32);
        *((void *)v46 + 5) = *(void *)(v47 + 40);
        *((void *)v46 + 6) = *(void *)(v47 + 48);
        *((void *)v46 + 7) = *(void *)(v47 + 56);
        *((void *)v46 + 8) = *(void *)(v47 + 64);
        *((void *)v46 + 9) = *(void *)(v47 + 72);
        *((void *)v46 + 10) = *(void *)(v47 + 80);
        v46[88] = *(unsigned char *)(v47 + 88);
        *((void *)v46 + 12) = *(void *)(v47 + 96);
        *((void *)v46 + 13) = *(void *)(v47 + 104);
        uint64_t v48 = v66[13];
        uint64_t v67 = &v46[v48];
        uint64_t v49 = (void *)(v47 + v48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15((char *)v49, 1, v13))
        {
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(v67, v49, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v14 + 16))(v67, v49, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v67, 0, 1, v13);
        }
        goto LABEL_26;
      case 5u:
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = a2[1];
        a1[16] = *((unsigned char *)a2 + 16);
        *((void *)a1 + 3) = a2[3];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = a2[6];
        *((void *)a1 + 7) = a2[7];
        *((void *)a1 + 8) = a2[8];
        *((void *)a1 + 9) = a2[9];
        *((void *)a1 + 10) = a2[10];
        *((void *)a1 + 11) = a2[11];
        *((void *)a1 + 12) = a2[12];
        uint64_t v17 = type metadata accessor for DebugNewsroomThemeData();
        uint64_t v18 = *(int *)(v17 + 48);
        uint64_t v60 = &a1[v18];
        uint64_t v61 = v17;
        uint64_t v62 = (char *)a2 + v18;
        uint64_t v19 = sub_1C151928C();
        uint64_t v20 = *(void *)(v19 - 8);
        uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21(v62, 1, v19))
        {
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(v60, v62, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v60, v62, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v60, 0, 1, v19);
        }
        sub_1C01DDB34();
        __dsta = v51;
        uint64_t v52 = v51[9];
        uint64_t v53 = &a1[v52];
        uint64_t v54 = (uint64_t)a2 + v52;
        *(void *)uint64_t v53 = *(void *)v54;
        *((void *)v53 + 1) = *(void *)(v54 + 8);
        v53[16] = *(unsigned char *)(v54 + 16);
        *((void *)v53 + 3) = *(void *)(v54 + 24);
        *((void *)v53 + 4) = *(void *)(v54 + 32);
        *((void *)v53 + 5) = *(void *)(v54 + 40);
        *((void *)v53 + 6) = *(void *)(v54 + 48);
        *((void *)v53 + 7) = *(void *)(v54 + 56);
        *((void *)v53 + 8) = *(void *)(v54 + 64);
        *((void *)v53 + 9) = *(void *)(v54 + 72);
        *((void *)v53 + 10) = *(void *)(v54 + 80);
        *((void *)v53 + 11) = *(void *)(v54 + 88);
        *((void *)v53 + 12) = *(void *)(v54 + 96);
        uint64_t v55 = *(int *)(v61 + 48);
        uint64_t v63 = &v53[v55];
        uint64_t v56 = (void *)(v54 + v55);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21((char *)v56, 1, v19))
        {
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(v63, v56, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v20 + 16))(v63, v56, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v63, 0, 1, v19);
        }
LABEL_26:
        *(void *)&a1[__dsta[10]] = *(uint64_t *)((char *)a2 + __dsta[10]);
        swift_bridgeObjectRetain();
        goto LABEL_27;
      case 6u:
        uint64_t v23 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        goto LABEL_27;
      case 7u:
        uint64_t v24 = sub_1C15156FC();
        (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        goto LABEL_27;
      case 8u:
        uint64_t v25 = *a2;
        id v26 = (id)*a2;
        *(void *)a1 = v25;
        sub_1C03362B4();
        uint64_t v28 = *(int *)(v27 + 48);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = (uint64_t)a2 + v28;
        uint64_t v31 = sub_1C151526C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        goto LABEL_27;
      case 9u:
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = a2[1];
        *((void *)a1 + 2) = a2[2];
        sub_1C03361C0();
        uint64_t v33 = *(int *)(v32 + 64);
        uint64_t v34 = &a1[v33];
        uint64_t v35 = (uint64_t)a2 + v33;
        uint64_t v36 = sub_1C151526C();
        uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        v37(v34, v35, v36);
LABEL_27:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C0D9CE74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugNewsroomServiceError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugNewsroomServiceError()
{
  uint64_t result = qword_1EA1A7108;
  if (!qword_1EA1A7108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1C0D9CF1C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      sub_1C03360A8();
      uint64_t v7 = *(int *)(v6 + 64);
      unint64_t v8 = (char *)a1 + v7;
      id v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C151526C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      goto LABEL_23;
    case 3u:
      uint64_t v11 = sub_1C151526C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      goto LABEL_23;
    case 4u:
      long long v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 88) = *((unsigned char *)a2 + 88);
      a1[6] = a2[6];
      uint64_t v13 = type metadata accessor for DebugNewsroomLayoutData();
      uint64_t v14 = *(int *)(v13 + 52);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_1C151928C();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      if (v19(v16, 1, v17))
      {
        sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      sub_1C01DDAA0();
      uint64_t v42 = v41;
      uint64_t v43 = *(int *)(v41 + 36);
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      long long v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      v44[32] = v45[32];
      *(_OWORD *)(v44 + 40) = *(_OWORD *)(v45 + 40);
      *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
      *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
      v44[88] = v45[88];
      *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
      uint64_t v47 = *(int *)(v13 + 52);
      uint64_t v48 = &v44[v47];
      uint64_t v49 = &v45[v47];
      if (v19(&v45[v47], 1, v17))
      {
        sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v48, v49, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v48, 0, 1, v17);
      }
      *(void *)((char *)a1 + *(int *)(v42 + 40)) = *(void *)((char *)a2 + *(int *)(v42 + 40));
      goto LABEL_23;
    case 5u:
      *a1 = *a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      uint64_t v21 = type metadata accessor for DebugNewsroomThemeData();
      uint64_t v22 = *(int *)(v21 + 48);
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = sub_1C151928C();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      if (v27(v24, 1, v25))
      {
        sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      sub_1C01DDB34();
      uint64_t v52 = v51;
      uint64_t v53 = *(int *)(v51 + 36);
      uint64_t v54 = (char *)a1 + v53;
      uint64_t v55 = (char *)a2 + v53;
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      v54[16] = v55[16];
      *(_OWORD *)(v54 + 24) = *(_OWORD *)(v55 + 24);
      *(_OWORD *)(v54 + 40) = *(_OWORD *)(v55 + 40);
      *(_OWORD *)(v54 + 56) = *(_OWORD *)(v55 + 56);
      *(_OWORD *)(v54 + 72) = *(_OWORD *)(v55 + 72);
      *(_OWORD *)(v54 + 88) = *(_OWORD *)(v55 + 88);
      uint64_t v56 = *(int *)(v21 + 48);
      uint64_t v57 = &v54[v56];
      uint64_t v58 = &v55[v56];
      if (v27(&v55[v56], 1, v25))
      {
        sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v57, v58, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v57, 0, 1, v25);
      }
      *(void *)((char *)a1 + *(int *)(v52 + 40)) = *(void *)((char *)a2 + *(int *)(v52 + 40));
      goto LABEL_23;
    case 6u:
      uint64_t v29 = sub_1C1515FDC();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
      goto LABEL_23;
    case 7u:
      uint64_t v30 = sub_1C15156FC();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
      goto LABEL_23;
    case 8u:
      *(void *)a1 = *(void *)a2;
      sub_1C03362B4();
      uint64_t v32 = *(int *)(v31 + 48);
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      uint64_t v35 = sub_1C151526C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      goto LABEL_23;
    case 9u:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      sub_1C03361C0();
      uint64_t v37 = *(int *)(v36 + 64);
      uint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      uint64_t v40 = sub_1C151526C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1C0D9D6BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0D9CE74((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        sub_1C03360A8();
        uint64_t v7 = *(int *)(v6 + 64);
        unint64_t v8 = (char *)a1 + v7;
        id v9 = (char *)a2 + v7;
        uint64_t v10 = sub_1C151526C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        goto LABEL_24;
      case 3u:
        uint64_t v11 = sub_1C151526C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        goto LABEL_24;
      case 4u:
        long long v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *((unsigned char *)a1 + 88) = *((unsigned char *)a2 + 88);
        a1[6] = a2[6];
        uint64_t v13 = type metadata accessor for DebugNewsroomLayoutData();
        uint64_t v14 = *(int *)(v13 + 52);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_1C151928C();
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
        if (v19(v16, 1, v17))
        {
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        sub_1C01DDAA0();
        uint64_t v42 = v41;
        uint64_t v43 = *(int *)(v41 + 36);
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        long long v46 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
        *((_OWORD *)v44 + 1) = v46;
        v44[32] = v45[32];
        *(_OWORD *)(v44 + 40) = *(_OWORD *)(v45 + 40);
        *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
        *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
        v44[88] = v45[88];
        *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
        uint64_t v47 = *(int *)(v13 + 52);
        uint64_t v48 = &v44[v47];
        uint64_t v49 = &v45[v47];
        if (v19(&v45[v47], 1, v17))
        {
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v48, v49, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v48, 0, 1, v17);
        }
        *(void *)((char *)a1 + *(int *)(v42 + 40)) = *(void *)((char *)a2 + *(int *)(v42 + 40));
        goto LABEL_24;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        uint64_t v21 = type metadata accessor for DebugNewsroomThemeData();
        uint64_t v22 = *(int *)(v21 + 48);
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_1C151928C();
        uint64_t v26 = *(void *)(v25 - 8);
        uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
        if (v27(v24, 1, v25))
        {
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        sub_1C01DDB34();
        uint64_t v52 = v51;
        uint64_t v53 = *(int *)(v51 + 36);
        uint64_t v54 = (char *)a1 + v53;
        uint64_t v55 = (char *)a2 + v53;
        *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
        v54[16] = v55[16];
        *(_OWORD *)(v54 + 24) = *(_OWORD *)(v55 + 24);
        *(_OWORD *)(v54 + 40) = *(_OWORD *)(v55 + 40);
        *(_OWORD *)(v54 + 56) = *(_OWORD *)(v55 + 56);
        *(_OWORD *)(v54 + 72) = *(_OWORD *)(v55 + 72);
        *(_OWORD *)(v54 + 88) = *(_OWORD *)(v55 + 88);
        uint64_t v56 = *(int *)(v21 + 48);
        uint64_t v57 = &v54[v56];
        uint64_t v58 = &v55[v56];
        if (v27(&v55[v56], 1, v25))
        {
          sub_1C0D9B60C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
          memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v57, v58, v25);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v57, 0, 1, v25);
        }
        *(void *)((char *)a1 + *(int *)(v52 + 40)) = *(void *)((char *)a2 + *(int *)(v52 + 40));
        goto LABEL_24;
      case 6u:
        uint64_t v29 = sub_1C1515FDC();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
        goto LABEL_24;
      case 7u:
        uint64_t v30 = sub_1C15156FC();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
        goto LABEL_24;
      case 8u:
        *(void *)a1 = *(void *)a2;
        sub_1C03362B4();
        uint64_t v32 = *(int *)(v31 + 48);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_1C151526C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_24;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        sub_1C03361C0();
        uint64_t v37 = *(int *)(v36 + 64);
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v40 = sub_1C151526C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1C0D9DE6C()
{
  uint64_t v0 = MEMORY[0x1E4FBAD80] + 64;
  uint64_t v15 = MEMORY[0x1E4FBAD80] + 64;
  uint64_t v1 = sub_1C151526C();
  if (v2 <= 0x3F)
  {
    uint64_t v3 = *(void *)(v1 - 8) + 64;
    swift_getTupleTypeLayout3();
    uint64_t v16 = &v14;
    uint64_t v17 = v0;
    uint64_t v18 = v3;
    sub_1C01DDAA0();
    if (v5 <= 0x3F)
    {
      uint64_t v19 = *(void *)(v4 - 8) + 64;
      sub_1C01DDB34();
      if (v7 <= 0x3F)
      {
        uint64_t v20 = *(void *)(v6 - 8) + 64;
        uint64_t v8 = sub_1C1515FDC();
        if (v9 <= 0x3F)
        {
          uint64_t v21 = *(void *)(v8 - 8) + 64;
          uint64_t v10 = sub_1C15156FC();
          if (v11 <= 0x3F)
          {
            uint64_t v22 = *(void *)(v10 - 8) + 64;
            swift_getTupleTypeLayout2();
            uint64_t v23 = &v13;
            swift_getTupleTypeLayout3();
            uint64_t v24 = &v12;
            swift_initEnumMetadataMultiPayload();
          }
        }
      }
    }
  }
}

uint64_t FormatTextLineBreakMode.lineBreakMode.getter()
{
  return *v0;
}

unint64_t FormatTextLineBreakMode.rawValue.getter()
{
  unint64_t result = 0x7061725764726F77;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 1885957219;
      break;
    case 3:
    case 4:
    case 5:
      unint64_t result = 0x657461636E757274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0D9E134(unsigned __int8 *a1, char *a2)
{
  return sub_1C1488FB0(*a1, *a2);
}

uint64_t sub_1C0D9E140()
{
  return sub_1C015E994();
}

uint64_t sub_1C0D9E148()
{
  return sub_1C0448D4C();
}

uint64_t sub_1C0D9E150()
{
  return sub_1C044DDC0();
}

void sub_1C0D9E158(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEC000000676E6970;
  unint64_t v3 = 0x7061725764726F77;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x80000001C1600E60;
      unint64_t v3 = 0xD000000000000011;
      goto LABEL_3;
    case 2:
      *a1 = 1885957219;
      a1[1] = 0xE400000000000000;
      return;
    case 3:
      unint64_t v4 = 0xEC00000064616548;
      goto LABEL_8;
    case 4:
      unint64_t v4 = 0xEC0000006C696154;
      goto LABEL_8;
    case 5:
      unint64_t v4 = 0xEE00656C6464694DLL;
LABEL_8:
      *a1 = 0x657461636E757274;
      a1[1] = v4;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t FormatTextLineBreakMode.description.getter()
{
  unint64_t result = 0x7061725764726F77;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 1885957219;
      break;
    case 3:
    case 4:
    case 5:
      unint64_t result = 0x657461636E757274;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0D9E2F8()
{
  unint64_t result = qword_1EA1A7118;
  if (!qword_1EA1A7118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7118);
  }
  return result;
}

unint64_t sub_1C0D9E34C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0D9E37C();
  unint64_t result = sub_1BFC39F84();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0D9E37C()
{
  unint64_t result = qword_1EA1A7120;
  if (!qword_1EA1A7120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7120);
  }
  return result;
}

unint64_t sub_1C0D9E3D0(uint64_t a1)
{
  unint64_t result = sub_1C0D9E3F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D9E3F8()
{
  unint64_t result = qword_1EA1A7128;
  if (!qword_1EA1A7128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7128);
  }
  return result;
}

unint64_t sub_1C0D9E44C(void *a1)
{
  a1[1] = sub_1BFDAD8C8();
  a1[2] = sub_1C0072568();
  unint64_t result = sub_1C0D9E2F8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0D9E484()
{
  unint64_t result = 0x7061725764726F77;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 1885957219;
      break;
    case 3:
    case 4:
    case 5:
      unint64_t result = 0x657461636E757274;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextLineBreakMode()
{
  return &type metadata for FormatTextLineBreakMode;
}

uint64_t sub_1C0D9E588(void *a1)
{
  return FormatSupplementaryNodePinDistance.encode(to:)(a1);
}

uint64_t sub_1C0D9E5AC(void *a1)
{
  return FormatSupplementaryNodePinDistanceAdjustment.encode(to:)(a1);
}

uint64_t FormatSupplementaryNodePinDistanceAdjustmentValue.description.getter()
{
  uint64_t v1 = 0x676E696361705368;
  unint64_t v2 = *v0;
  if (!*v0) {
    return 0x676E696361705376;
  }
  if (v2 != 1)
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v1 = sub_1C0BA9458(v3);
    sub_1BFD7F858(v2);
  }
  return v1;
}

uint64_t sub_1C0D9E63C(void *a1)
{
  return FormatSupplementaryNodePinDistanceAdjustmentValue.encode(to:)(a1);
}

uint64_t sub_1C0D9E654()
{
  uint64_t v1 = 0x676E696361705368;
  unint64_t v2 = *v0;
  if (!*v0) {
    return 0x676E696361705376;
  }
  if (v2 != 1)
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v1 = sub_1C0BA9458(v3);
    sub_1BFD7F858(v2);
  }
  return v1;
}

uint64_t _s8NewsFeed44FormatSupplementaryNodePinDistanceAdjustmentO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)a1;
  unsigned __int8 v3 = *(unsigned char *)(a1 + 8);
  unint64_t v4 = *(void *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  switch(v3)
  {
    case 1u:
      if (v5 != 1) {
        goto LABEL_23;
      }
      if (!v2)
      {
        if (v4) {
          goto LABEL_30;
        }
        uint64_t v6 = 1;
        sub_1BFFE2FAC(0, 1u);
        sub_1BFE60260(0);
        sub_1BFD7F858(0);
        sub_1BFD7F858(0);
        sub_1BFFDF4B0(0, 1u);
        sub_1BFFDF4B0(0, 1u);
        sub_1BFFDF4B0(0, 1u);
        sub_1BFFDF4B0(0, 1u);
        return v6;
      }
      if (v2 == 1)
      {
        if (v4 == 1)
        {
          uint64_t v6 = 1;
          sub_1BFFE2FAC(1uLL, 1u);
          sub_1BFE60260(1uLL);
          sub_1BFD7F858(1uLL);
          sub_1BFD7F858(1uLL);
          sub_1BFFDF4B0(1uLL, 1u);
          sub_1BFFDF4B0(1uLL, 1u);
          sub_1BFFDF4B0(1uLL, 1u);
          unsigned __int8 v7 = 1;
          goto LABEL_22;
        }
        goto LABEL_30;
      }
      if (v4 < 2)
      {
LABEL_30:
        sub_1BFFE2FAC(*(void *)a2, 1u);
        sub_1BFFE2FAC(v2, 1u);
        sub_1BFFE2FAC(v4, 1u);
        sub_1BFFE2FAC(v2, 1u);
        sub_1BFFE2FAC(v4, 1u);
        sub_1BFFE2FAC(v2, 1u);
        sub_1BFD7F858(v2);
        sub_1BFD7F858(v4);
        sub_1BFFDF4B0(v2, 1u);
        sub_1BFFDF4B0(v4, 1u);
        sub_1BFFDF4B0(v4, 1u);
        unint64_t v8 = v2;
        unsigned __int8 v9 = 1;
        goto LABEL_24;
      }
      uint64_t v6 = 1;
      sub_1BFFE2FAC(*(void *)a2, 1u);
      sub_1BFFE2FAC(v2, 1u);
      sub_1BFFE2FAC(v4, 1u);
      sub_1BFFE2FAC(v2, 1u);
      sub_1BFFE2FAC(v4, 1u);
      sub_1BFFE2FAC(v2, 1u);
      sub_1BFFE2FAC(v4, 1u);
      sub_1BFFE2FAC(v2, 1u);
      char v12 = sub_1C00DE998(v2, v4);
      sub_1BFD7F858(v2);
      sub_1BFD7F858(v4);
      sub_1BFFDF4B0(v4, 1u);
      sub_1BFFDF4B0(v2, 1u);
      sub_1BFFDF4B0(v2, 1u);
      sub_1BFFDF4B0(v4, 1u);
      sub_1BFFDF4B0(v4, 1u);
      sub_1BFFDF4B0(v2, 1u);
      if (v12) {
        return v6;
      }
      return 0;
    case 2u:
      if (v5 != 2) {
        goto LABEL_23;
      }
      if (!v2)
      {
        if (!v4)
        {
          sub_1BFFE2FAC(0, 2u);
          sub_1BFE60260(0);
          sub_1BFD7F858(0);
          sub_1BFD7F858(0);
          sub_1BFFDF4B0(0, 2u);
          sub_1BFFDF4B0(0, 2u);
          sub_1BFFDF4B0(0, 2u);
          unsigned __int8 v11 = 2;
          goto LABEL_41;
        }
        goto LABEL_34;
      }
      if (v2 == 1)
      {
        if (v4 == 1)
        {
          uint64_t v6 = 1;
          sub_1BFFE2FAC(1uLL, 2u);
          sub_1BFE60260(1uLL);
          sub_1BFD7F858(1uLL);
          sub_1BFD7F858(1uLL);
          sub_1BFFDF4B0(1uLL, 2u);
          sub_1BFFDF4B0(1uLL, 2u);
          sub_1BFFDF4B0(1uLL, 2u);
          unsigned __int8 v7 = 2;
          goto LABEL_22;
        }
        goto LABEL_34;
      }
      if (v4 < 2)
      {
LABEL_34:
        sub_1BFFE2FAC(*(void *)a2, 2u);
        sub_1BFFE2FAC(v2, 2u);
        sub_1BFFE2FAC(v4, 2u);
        sub_1BFFE2FAC(v2, 2u);
        sub_1BFFE2FAC(v4, 2u);
        sub_1BFFE2FAC(v2, 2u);
        sub_1BFD7F858(v2);
        sub_1BFD7F858(v4);
        sub_1BFFDF4B0(v2, 2u);
        sub_1BFFDF4B0(v4, 2u);
        sub_1BFFDF4B0(v4, 2u);
        unint64_t v8 = v2;
        unsigned __int8 v9 = 2;
        goto LABEL_24;
      }
      sub_1BFFE2FAC(*(void *)a2, 2u);
      sub_1BFFE2FAC(v2, 2u);
      sub_1BFFE2FAC(v4, 2u);
      sub_1BFFE2FAC(v2, 2u);
      sub_1BFFE2FAC(v4, 2u);
      sub_1BFFE2FAC(v2, 2u);
      sub_1BFFE2FAC(v4, 2u);
      sub_1BFFE2FAC(v2, 2u);
      char v13 = sub_1C00DE998(v2, v4);
      sub_1BFD7F858(v2);
      sub_1BFD7F858(v4);
      sub_1BFFDF4B0(v4, 2u);
      sub_1BFFDF4B0(v2, 2u);
      sub_1BFFDF4B0(v2, 2u);
      sub_1BFFDF4B0(v4, 2u);
      sub_1BFFDF4B0(v4, 2u);
      sub_1BFFDF4B0(v2, 2u);
      return (v13 & 1) != 0;
    case 3u:
      if (v5 != 3) {
        goto LABEL_23;
      }
      if (!v2)
      {
        if (!v4)
        {
          sub_1BFFE2FAC(0, 3u);
          sub_1BFE60260(0);
          sub_1BFD7F858(0);
          sub_1BFD7F858(0);
          sub_1BFFDF4B0(0, 3u);
          sub_1BFFDF4B0(0, 3u);
          sub_1BFFDF4B0(0, 3u);
          unsigned __int8 v11 = 3;
          goto LABEL_41;
        }
        goto LABEL_38;
      }
      if (v2 == 1)
      {
        if (v4 == 1)
        {
          uint64_t v6 = 1;
          sub_1BFFE2FAC(1uLL, 3u);
          sub_1BFE60260(1uLL);
          sub_1BFD7F858(1uLL);
          sub_1BFD7F858(1uLL);
          sub_1BFFDF4B0(1uLL, 3u);
          sub_1BFFDF4B0(1uLL, 3u);
          sub_1BFFDF4B0(1uLL, 3u);
          unsigned __int8 v7 = 3;
LABEL_22:
          sub_1BFFDF4B0(1uLL, v7);
          return v6;
        }
LABEL_38:
        sub_1BFFE2FAC(*(void *)a2, 3u);
        sub_1BFFE2FAC(v2, 3u);
        sub_1BFFE2FAC(v4, 3u);
        sub_1BFFE2FAC(v2, 3u);
        sub_1BFFE2FAC(v4, 3u);
        sub_1BFFE2FAC(v2, 3u);
        sub_1BFD7F858(v2);
        sub_1BFD7F858(v4);
        sub_1BFFDF4B0(v2, 3u);
        sub_1BFFDF4B0(v4, 3u);
        sub_1BFFDF4B0(v4, 3u);
        unint64_t v8 = v2;
        unsigned __int8 v9 = 3;
        goto LABEL_24;
      }
      if (v4 < 2) {
        goto LABEL_38;
      }
      sub_1BFFE2FAC(*(void *)a2, 3u);
      sub_1BFFE2FAC(v2, 3u);
      sub_1BFFE2FAC(v4, 3u);
      sub_1BFFE2FAC(v2, 3u);
      sub_1BFFE2FAC(v4, 3u);
      sub_1BFFE2FAC(v2, 3u);
      sub_1BFFE2FAC(v4, 3u);
      sub_1BFFE2FAC(v2, 3u);
      char v14 = sub_1C00DE998(v2, v4);
      sub_1BFD7F858(v2);
      sub_1BFD7F858(v4);
      sub_1BFFDF4B0(v4, 3u);
      sub_1BFFDF4B0(v2, 3u);
      sub_1BFFDF4B0(v2, 3u);
      sub_1BFFDF4B0(v4, 3u);
      sub_1BFFDF4B0(v4, 3u);
      sub_1BFFDF4B0(v2, 3u);
      return (v14 & 1) != 0;
    default:
      if (*(unsigned char *)(a2 + 8))
      {
LABEL_23:
        sub_1BFFE2FAC(*(void *)a2, *(unsigned char *)(a2 + 8));
        sub_1BFFE2FAC(v2, v3);
        sub_1BFFDF4B0(v2, v3);
        unint64_t v8 = v4;
        unsigned __int8 v9 = v5;
LABEL_24:
        sub_1BFFDF4B0(v8, v9);
        return 0;
      }
      if (v2)
      {
        if (v2 == 1)
        {
          if (v4 == 1)
          {
            uint64_t v6 = 1;
            sub_1BFFE2FAC(1uLL, 0);
            sub_1BFE60260(1uLL);
            sub_1BFD7F858(1uLL);
            sub_1BFD7F858(1uLL);
            sub_1BFFDF4B0(1uLL, 0);
            sub_1BFFDF4B0(1uLL, 0);
            sub_1BFFDF4B0(1uLL, 0);
            sub_1BFFDF4B0(1uLL, 0);
            return v6;
          }
        }
        else if (v4 >= 2)
        {
          sub_1BFFE2FAC(*(void *)a2, 0);
          sub_1BFFE2FAC(v2, 0);
          sub_1BFFE2FAC(v4, 0);
          sub_1BFFE2FAC(v2, 0);
          sub_1BFFE2FAC(v4, 0);
          sub_1BFFE2FAC(v2, 0);
          sub_1BFFE2FAC(v4, 0);
          sub_1BFFE2FAC(v2, 0);
          char v15 = sub_1C00DE998(v2, v4);
          sub_1BFD7F858(v2);
          sub_1BFD7F858(v4);
          sub_1BFFDF4B0(v4, 0);
          sub_1BFFDF4B0(v2, 0);
          sub_1BFFDF4B0(v2, 0);
          sub_1BFFDF4B0(v4, 0);
          sub_1BFFDF4B0(v4, 0);
          sub_1BFFDF4B0(v2, 0);
          return (v15 & 1) != 0;
        }
        goto LABEL_43;
      }
      if (v4)
      {
LABEL_43:
        sub_1BFFE2FAC(*(void *)a2, 0);
        sub_1BFFE2FAC(v2, 0);
        sub_1BFFE2FAC(v4, 0);
        sub_1BFFE2FAC(v2, 0);
        sub_1BFFE2FAC(v4, 0);
        sub_1BFFE2FAC(v2, 0);
        sub_1BFD7F858(v2);
        sub_1BFD7F858(v4);
        sub_1BFFDF4B0(v2, 0);
        sub_1BFFDF4B0(v4, 0);
        sub_1BFFDF4B0(v4, 0);
        unint64_t v8 = v2;
        unsigned __int8 v9 = 0;
        goto LABEL_24;
      }
      sub_1BFFE2FAC(0, 0);
      sub_1BFE60260(0);
      sub_1BFD7F858(0);
      sub_1BFD7F858(0);
      sub_1BFFDF4B0(0, 0);
      sub_1BFFDF4B0(0, 0);
      sub_1BFFDF4B0(0, 0);
      unsigned __int8 v11 = 0;
LABEL_41:
      sub_1BFFDF4B0(0, v11);
      return 1;
  }
}

uint64_t _s8NewsFeed34FormatSupplementaryNodePinDistanceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 9);
  unint64_t v5 = *(void *)a2;
  int v6 = *(unsigned __int8 *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 9);
  if (v4)
  {
    if (*(unsigned char *)(a2 + 9))
    {
      if (v3 == 255)
      {
        uint64_t v8 = 1;
        sub_1BFFE2FD4(*(void *)a2, *(unsigned char *)(a2 + 8), 1);
        sub_1BFFE2FD4(v2, 0xFFu, 1);
        sub_1BFFE2FD4(v5, v6, 1);
        sub_1BFFDF4D8(v2, 0xFFu, 1);
        sub_1BFFDF4D8(v5, v6, 1);
        if (v6 == 255) {
          return v8;
        }
      }
      else
      {
        unint64_t v14 = *(void *)a1;
        unsigned __int8 v15 = v3;
        if (v6 != 255)
        {
          unint64_t v12 = v5;
          char v13 = v6;
          uint64_t v8 = 1;
          sub_1BFFE2FD4(v2, v3, 1);
          sub_1BFFE2FD4(v5, v6, 1);
          sub_1BFFE2FD4(v2, v3, 1);
          sub_1BFFE2FD4(v2, v3, 1);
          sub_1BFFE2FD4(v5, v6, 1);
          char v9 = _s8NewsFeed44FormatSupplementaryNodePinDistanceAdjustmentO2eeoiySbAC_ACtFZ_0((uint64_t)&v14, (uint64_t)&v12);
          sub_1BFFDF4D8(v2, v3, 1);
          sub_1BFFDF4D8(v5, v6, 1);
          sub_1BFFDF4D8(v5, v6, 1);
          sub_1BFFDF4B0(v14, v15);
          sub_1BFFDF4D8(v2, v3, 1);
          if (v9) {
            return v8;
          }
          return 0;
        }
        sub_1BFFE2FD4(v2, v3, 1);
        sub_1BFFE2FD4(v5, 0xFFu, 1);
        sub_1BFFE2FD4(v2, v3, 1);
        sub_1BFFE2FD4(v2, v3, 1);
        sub_1BFFE2FD4(v5, 0xFFu, 1);
        sub_1BFFDF4D8(v2, v3, 1);
        sub_1BFFDF4D8(v5, 0xFFu, 1);
        sub_1BFFDF4B0(v2, v3);
      }
      sub_1BFFDF4C4(v2, v3);
      sub_1BFFDF4C4(v5, v6);
      return 0;
    }
LABEL_8:
    sub_1BFFE2FD4(*(void *)a1, v3, v4);
    sub_1BFFE2FD4(v5, v6, v7);
    sub_1BFFDF4D8(v2, v3, v4);
    sub_1BFFDF4D8(v5, v6, v7);
    return 0;
  }
  if (*(unsigned char *)(a2 + 9)) {
    goto LABEL_8;
  }
  sub_1BFFE2FD4(*(void *)a2, *(unsigned char *)(a2 + 8), 0);
  sub_1BFFE2FD4(v2, v3, 0);
  sub_1BFFE2FD4(v2, v3, 0);
  sub_1BFFE2FD4(v5, v6, 0);
  char v11 = sub_1C00DE998(v2, v5);
  sub_1BFFDF4D8(v2, v3, 0);
  sub_1BFFDF4D8(v5, v6, 0);
  sub_1BFFDF4D8(v5, v6, 0);
  sub_1BFFDF4D8(v2, v3, 0);
  return v11 & 1;
}

unint64_t sub_1C0D9F33C(uint64_t a1)
{
  unint64_t result = sub_1C0D9F364();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D9F364()
{
  unint64_t result = qword_1EA1A7130;
  if (!qword_1EA1A7130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7130);
  }
  return result;
}

uint64_t sub_1C0D9F3B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0D9F618(a1, a2, a3, (uint64_t (*)(void))sub_1C00681E4, (uint64_t (*)(void))sub_1C0904F34, (uint64_t (*)(void))sub_1C0D9F3F8);
}

unint64_t sub_1C0D9F3F8()
{
  unint64_t result = qword_1EA1A7138;
  if (!qword_1EA1A7138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7138);
  }
  return result;
}

unint64_t sub_1C0D9F44C(uint64_t a1)
{
  unint64_t result = sub_1C0D9F474();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D9F474()
{
  unint64_t result = qword_1EA1A7140;
  if (!qword_1EA1A7140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7140);
  }
  return result;
}

uint64_t sub_1C0D9F4C8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0D9F618(a1, a2, a3, (uint64_t (*)(void))sub_1C0066D64, (uint64_t (*)(void))sub_1C08EE130, (uint64_t (*)(void))sub_1C0D9F508);
}

unint64_t sub_1C0D9F508()
{
  unint64_t result = qword_1EA1A7148;
  if (!qword_1EA1A7148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7148);
  }
  return result;
}

unint64_t sub_1C0D9F55C(uint64_t a1)
{
  unint64_t result = sub_1C0D9F584();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D9F584()
{
  unint64_t result = qword_1EA1A7150;
  if (!qword_1EA1A7150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7150);
  }
  return result;
}

uint64_t sub_1C0D9F5D8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0D9F618(a1, a2, a3, (uint64_t (*)(void))sub_1C0066AF0, (uint64_t (*)(void))sub_1C08EE07C, (uint64_t (*)(void))sub_1C0D9F66C);
}

uint64_t sub_1C0D9F618(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0D9F66C()
{
  unint64_t result = qword_1EA1A7158;
  if (!qword_1EA1A7158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7158);
  }
  return result;
}

unint64_t destroy for FormatSupplementaryNodePinDistance(uint64_t a1)
{
  return sub_1BFFDF4D8(*(void *)a1, *(unsigned char *)(a1 + 8), *(unsigned char *)(a1 + 9));
}

uint64_t _s8NewsFeed34FormatSupplementaryNodePinDistanceOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 8);
  sub_1BFFE2FD4(*(void *)a2, v5, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 9) = v4;
  return a1;
}

uint64_t assignWithCopy for FormatSupplementaryNodePinDistance(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 8);
  sub_1BFFE2FD4(*(void *)a2, v5, v4);
  unint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 9) = v4;
  sub_1BFFDF4D8(v6, v8, v7);
  return a1;
}

uint64_t assignWithTake for FormatSupplementaryNodePinDistance(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 9);
  unint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4;
  sub_1BFFDF4D8(v5, v7, v6);
  return a1;
}

uint64_t sub_1C0D9F7DC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 9);
}

uint64_t sub_1C0D9F7E4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 9) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodePinDistance()
{
  return &type metadata for FormatSupplementaryNodePinDistance;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatSupplementaryNodePinDistanceAdjustment(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1BFFE2FAC(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

unint64_t destroy for FormatSupplementaryNodePinDistanceAdjustment(uint64_t a1)
{
  return sub_1BFFDF4B0(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for FormatSupplementaryNodePinDistanceAdjustment(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1BFFE2FAC(*(void *)a2, v4);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1BFFDF4B0(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatSupplementaryNodePinDistanceAdjustment(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1BFFDF4B0(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodePinDistanceAdjustment()
{
  return &type metadata for FormatSupplementaryNodePinDistanceAdjustment;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodePinDistanceAdjustmentValue()
{
  return &type metadata for FormatSupplementaryNodePinDistanceAdjustmentValue;
}

void *sub_1C0D9F90C(uint64_t a1)
{
  unint64_t v1 = *(void *)a1;
  switch(*(unsigned char *)(a1 + 8))
  {
    case 0:
      unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v2);
      sub_1C0181BEC(0);
      uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 72);
      unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
      unint64_t v8 = v7 + v6;
      sub_1BFE60260(v1);
      sub_1C0433600(1701869908, 0xE400000000000000, 6579265, 0xE300000000000000, (void *)(v7 + v6));
      uint64_t v9 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v10 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
      v10(v8, 0, 1, v9);
      if (!v1)
      {
        unsigned __int8 v32 = 0;
        goto LABEL_23;
      }
      if (v1 == 1)
      {
        uint64_t v11 = 0x676E696361705368;
        unsigned __int8 v12 = 0;
        goto LABEL_14;
      }
      uint64_t v33 = swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C0BA9458(v33);
      uint64_t v35 = v34;
      sub_1BFFDF4C4(v1, 0);
      sub_1BFFDF4C4(v1, 0);
      goto LABEL_25;
    case 1:
      char v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v13);
      sub_1C0181BEC(0);
      uint64_t v5 = *(void *)(*(void *)(v14 - 8) + 72);
      unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
      unint64_t v8 = v7 + v15;
      sub_1BFE60260(v1);
      sub_1C0433600(1701869908, 0xE400000000000000, 0x7463617274627553, 0xE800000000000000, (void *)(v7 + v15));
      uint64_t v9 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v10 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
      v10(v8, 0, 1, v9);
      if (!v1)
      {
        unsigned __int8 v32 = 1;
        goto LABEL_23;
      }
      if (v1 == 1)
      {
        uint64_t v11 = 0x676E696361705368;
        unsigned __int8 v12 = 1;
        goto LABEL_14;
      }
      uint64_t v36 = swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C0BA9458(v36);
      uint64_t v35 = v37;
      sub_1BFFDF4C4(v1, 1u);
      sub_1BFFDF4C4(v1, 1u);
      goto LABEL_25;
    case 2:
      uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v16);
      sub_1C0181BEC(0);
      uint64_t v5 = *(void *)(*(void *)(v17 - 8) + 72);
      unint64_t v18 = (*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
      unint64_t v8 = v7 + v18;
      sub_1BFE60260(v1);
      sub_1C0433600(1701869908, 0xE400000000000000, 0x796C7069746C754DLL, 0xE800000000000000, (void *)(v7 + v18));
      uint64_t v9 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v10 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
      v10(v8, 0, 1, v9);
      if (!v1)
      {
        unsigned __int8 v32 = 2;
        goto LABEL_23;
      }
      if (v1 == 1)
      {
        uint64_t v11 = 0x676E696361705368;
        unsigned __int8 v12 = 2;
        goto LABEL_14;
      }
      uint64_t v38 = swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C0BA9458(v38);
      uint64_t v35 = v39;
      sub_1BFFDF4C4(v1, 2u);
      sub_1BFFDF4C4(v1, 2u);
      goto LABEL_25;
    case 3:
      uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v19);
      sub_1C0181BEC(0);
      uint64_t v5 = *(void *)(*(void *)(v20 - 8) + 72);
      unint64_t v21 = (*(unsigned __int8 *)(*(void *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
      unint64_t v8 = v7 + v21;
      sub_1BFE60260(v1);
      sub_1C0433600(1701869908, 0xE400000000000000, 0x656469766944, 0xE600000000000000, (void *)(v7 + v21));
      uint64_t v9 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v10 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
      v10(v8, 0, 1, v9);
      if (!v1)
      {
        unsigned __int8 v32 = 3;
LABEL_23:
        sub_1BFFDF4C4(0, v32);
        uint64_t v11 = 0x676E696361705376;
        goto LABEL_24;
      }
      if (v1 == 1)
      {
        uint64_t v11 = 0x676E696361705368;
        unsigned __int8 v12 = 3;
LABEL_14:
        sub_1BFFDF4C4(1uLL, v12);
LABEL_24:
        uint64_t v35 = 0xE800000000000000;
        goto LABEL_25;
      }
      uint64_t v43 = swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C0BA9458(v43);
      uint64_t v35 = v44;
      sub_1BFFDF4C4(v1, 3u);
      sub_1BFFDF4C4(v1, 3u);
LABEL_25:
      sub_1C0433600(0x65756C6156, 0xE500000000000000, v11, v35, (void *)(v8 + v5));
      v10(v8 + v5, 0, 1, v9);
      sub_1C09BCFA4(0xD000000000000013, 0x80000001C1627B40, 0, 0, v7, &v45);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(inited + 64) = &off_1F1BDEC90;
      uint64_t v40 = swift_allocObject();
      *(void *)(inited + 32) = v40;
      *(void *)(v40 + 48) = v47;
      long long v41 = v46;
      *(_OWORD *)(v40 + 16) = v45;
      *(_OWORD *)(v40 + 32) = v41;
      uint64_t v31 = sub_1C131B79C(inited);
      swift_setDeallocating();
      sub_1C01004A4(0);
LABEL_26:
      swift_arrayDestroy();
      return v31;
    default:
      uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v22);
      sub_1C0181BEC(0);
      unint64_t v25 = (*(unsigned __int8 *)(*(void *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v24 - 8) + 80);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1C1529AE0;
      uint64_t v27 = (void *)(v26 + v25);
      sub_1C0433600(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v27);
      uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
      sub_1C09BCFA4(0xD000000000000013, 0x80000001C1627B40, 0, 0, v26, &v45);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v23 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v23 + 64) = &off_1F1BDEC90;
      uint64_t v29 = swift_allocObject();
      *(void *)(v23 + 32) = v29;
      *(void *)(v29 + 48) = v47;
      long long v30 = v46;
      *(_OWORD *)(v29 + 16) = v45;
      *(_OWORD *)(v29 + 32) = v30;
      uint64_t v31 = sub_1C131B79C(v23);
      swift_setDeallocating();
      sub_1C01004A4(0);
      goto LABEL_26;
  }
}

void *sub_1C0DA044C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 8);
  if (v1 >> 8 <= 0xFE)
  {
    unint64_t v9 = *(void *)a1;
    if ((v1 & 0x100) != 0)
    {
      unint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v21);
      sub_1C0181BEC(0);
      unint64_t v36 = v9;
      uint64_t v23 = *(void *)(*(void *)(v22 - 8) + 72);
      unint64_t v24 = (*(unsigned __int8 *)(*(void *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C1527210;
      sub_1C0433600(1701869908, 0xE400000000000000, 0x656D617246, 0xE500000000000000, (void *)(v14 + v24));
      uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v26 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
      v26(v14 + v24, 0, 1, v25);
      uint64_t v27 = (void *)(v14 + v24 + v23);
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v21);
      uint64_t v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = xmmword_1C1529AE0;
      *(void *)&v37[0] = v36;
      BYTE8(v37[0]) = v1;
      uint64_t v29 = sub_1C0D9F90C((uint64_t)v37);
      *(void *)(v28 + 56) = &type metadata for FormatInspection;
      *(void *)(v28 + 64) = &off_1F1C29D30;
      *(void *)(v28 + 32) = v29;
      uint64_t v30 = sub_1C0233FC8(v28);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      uint64_t v31 = sub_1C131B79C(v30);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x656D7473756A6441, 0xEA0000000000746ELL, (uint64_t)v31, 0, 0, v27);
      v26((unint64_t)v27, 0, 1, v25);
    }
    else
    {
      uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v10);
      sub_1C0181BEC(0);
      uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 72);
      unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C1527210;
      sub_1BFFE2FD4(v9, v1, 0);
      sub_1C0433600(1701869908, 0xE400000000000000, 0x6465786946, 0xE500000000000000, (void *)(v14 + v13));
      uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v16 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
      v16(v14 + v13, 0, 1, v15);
      uint64_t v17 = (void *)(v14 + v13 + v12);
      uint64_t v18 = sub_1C0BA9458(v9);
      uint64_t v20 = v19;
      sub_1BFFDF4E4(v9, v1);
      sub_1C0433600(0x65756C6156, 0xE500000000000000, v18, v20, v17);
      v16((unint64_t)v17, 0, 1, v15);
    }
    sub_1C09BCFA4(0x65636E6174736944, 0xE800000000000000, 0, 0, v14, v37);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v2);
    sub_1C0181BEC(0);
    unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
    uint64_t v7 = (void *)(v6 + v5);
    sub_1C0433600(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v7);
    uint64_t v8 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
    sub_1C09BCFA4(0x65636E6174736944, 0xE800000000000000, 0, 0, v6, v37);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v32 = swift_allocObject();
  *(void *)(inited + 32) = v32;
  *(void *)(v32 + 48) = v38;
  long long v33 = v37[1];
  *(_OWORD *)(v32 + 16) = v37[0];
  *(_OWORD *)(v32 + 32) = v33;
  uint64_t v34 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v34;
}

uint64_t sub_1C0DA0B88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t dispatch thunk of static FormatDefaultProviding.default.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FormatLayoutSectionDescriptor.Data.init(content:layoutResult:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v67 = a1;
  uint64_t v68 = a4;
  uint64_t v6 = type metadata accessor for FormatLayoutSectionDescriptor.Footer(0);
  uint64_t v69 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t v66 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatLayoutSectionDescriptor.Header(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C151C1FC();
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a2[5];
  uint64_t v62 = a2[4];
  uint64_t v22 = a2[6];
  uint64_t v23 = v68;
  uint64_t v59 = v22;
  uint64_t v64 = *(void *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v64 + 16))(v68, v67, a3, v18);
  uint64_t v24 = *MEMORY[0x1E4FAD2B0];
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
  uint64_t v57 = v17 + 104;
  v56(v20, v24, v16);
  uint64_t v72 = v20;
  swift_bridgeObjectRetain();
  uint64_t v61 = v21;
  sub_1BFEA4550((uint64_t (*)(char *))sub_1BFEA48B8, (uint64_t)v71, v21);
  uint64_t v26 = v25;
  v55[2] = 0;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v28 = v20;
  uint64_t v29 = v20;
  uint64_t v30 = v26;
  uint64_t v60 = v16;
  uint64_t v63 = v17 + 8;
  uint64_t v58 = v27;
  v27(v29, v16);
  int64_t v31 = *(void *)(v30 + 16);
  uint64_t v70 = v8;
  uint64_t v65 = a3;
  if (v31)
  {
    uint64_t v73 = MEMORY[0x1E4FBC860];
    sub_1C05F81CC(0, v31, 0);
    unint64_t v32 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    v55[1] = v30;
    uint64_t v33 = v30 + v32;
    uint64_t v34 = *(void *)(v66 + 72);
    uint64_t v35 = v73;
    do
    {
      sub_1C0DA1A00(v33, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C0DA1A00((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C0086EAC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F81CC(0, *(void *)(v35 + 16) + 1, 1);
        uint64_t v35 = v73;
      }
      unint64_t v37 = *(void *)(v35 + 16);
      unint64_t v36 = *(void *)(v35 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1C05F81CC(v36 > 1, v37 + 1, 1);
        uint64_t v35 = v73;
      }
      *(void *)(v35 + 16) = v37 + 1;
      sub_1C0DA7960((uint64_t)v15, v35+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v37, type metadata accessor for FormatLayoutSectionDescriptor.Header);
      v33 += v34;
      --v31;
      uint64_t v8 = v70;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v38 = v68;
    a3 = v65;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = v23;
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  uint64_t v39 = type metadata accessor for FormatLayoutSectionDescriptor.Data();
  *(void *)(v38 + *(int *)(v39 + 28)) = v35;
  uint64_t v40 = v28;
  uint64_t v41 = v60;
  uint64_t v42 = ((uint64_t (*)(char *, void, uint64_t))v56)(v28, *MEMORY[0x1E4FAD2A8], v60);
  MEMORY[0x1F4188790](v42);
  v55[-2] = v28;
  uint64_t v43 = v61;
  swift_bridgeObjectRetain();
  sub_1BFEA4550((uint64_t (*)(char *))sub_1C0DA79F8, (uint64_t)&v55[-4], v43);
  uint64_t v45 = v44;
  v58(v40, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v46 = *(void *)(v45 + 16);
  uint64_t v47 = MEMORY[0x1E4FBC860];
  uint64_t v48 = v66;
  if (v46)
  {
    uint64_t v73 = MEMORY[0x1E4FBC860];
    sub_1C05F8184(0, v46, 0);
    uint64_t v49 = v45 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
    uint64_t v50 = *(void *)(v48 + 72);
    uint64_t v47 = v73;
    do
    {
      sub_1C0DA1A00(v49, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C0DA1A00((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C0086EAC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F8184(0, *(void *)(v47 + 16) + 1, 1);
        uint64_t v47 = v73;
      }
      unint64_t v52 = *(void *)(v47 + 16);
      unint64_t v51 = *(void *)(v47 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_1C05F8184(v51 > 1, v52 + 1, 1);
        uint64_t v47 = v73;
      }
      *(void *)(v47 + 16) = v52 + 1;
      uint64_t v53 = v47
          + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))
          + *(void *)(v69 + 72) * v52;
      uint64_t v8 = v70;
      sub_1C0DA7960((uint64_t)v70, v53, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
      v49 += v50;
      --v46;
    }
    while (v46);
    a3 = v65;
  }
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v67, a3);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v68 + *(int *)(v39 + 32)) = v47;
  return result;
}

uint64_t type metadata accessor for FormatLayoutSectionDescriptor.Footer(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB868A00);
}

uint64_t type metadata accessor for FormatLayoutSectionDescriptor.Header(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB868A80);
}

uint64_t FormatLayoutSectionDescriptor.supplementaryAttributes.getter()
{
  sub_1C006AD18(0);
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DA1A00(v0, (uint64_t)v7, type metadata accessor for FormatLayoutSectionDescriptor);
  sub_1C0DA7960((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))sub_1C006AD18);
  uint64_t v8 = sub_1C0DA14A8(*(void *)&v4[*(int *)(v2 + 36)], type metadata accessor for FormatLayoutSectionDescriptor.Header, type metadata accessor for FormatLayoutSectionDescriptor.Header, (void (*)(char *))sub_1C0DA79E0);
  uint64_t v9 = sub_1C0DA14A8(*(void *)&v4[*(int *)(v2 + 40)], type metadata accessor for FormatLayoutSectionDescriptor.Footer, type metadata accessor for FormatLayoutSectionDescriptor.Footer, (void (*)(char *))sub_1C0DA79C8);
  uint64_t v13 = v8;
  sub_1C1048C60(v9);
  uint64_t v10 = v13;
  sub_1C0086EAC((uint64_t)v4, (uint64_t (*)(void))sub_1C006AD18);
  return v10;
}

uint64_t sub_1C0DA14A8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), void (*a4)(char *))
{
  uint64_t v24 = a4;
  uint64_t v6 = a2(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v23 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1F4188790](v23);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1C05F73C8(0, v15, 0);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v18 = *(void *)(v7 + 72);
    uint64_t v16 = v28;
    do
    {
      sub_1C0DA1A00(v17, (uint64_t)v12, a3);
      sub_1C0DA1A00((uint64_t)v12, (uint64_t)v9, a3);
      sub_1C0DA7960((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      v24(v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F73C8(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v28;
      }
      unint64_t v20 = *(void *)(v16 + 16);
      unint64_t v19 = *(void *)(v16 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1C05F73C8(v19 > 1, v20 + 1, 1);
        uint64_t v16 = v28;
      }
      uint64_t v26 = v23;
      uint64_t v27 = sub_1C0DA1AF8((unint64_t *)&unk_1EB85CD60, (void (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v25);
      sub_1C0DA1A00((uint64_t)v14, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      *(void *)(v16 + 16) = v20 + 1;
      sub_1BFC773DC(&v25, v16 + 40 * v20 + 32);
      sub_1C0086EAC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      v17 += v18;
      --v15;
    }
    while (v15);
  }
  return v16;
}

uint64_t sub_1C0DA1770()
{
  sub_1C006AD18(0);
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DA1A00(v0, (uint64_t)v7, type metadata accessor for FormatLayoutSectionDescriptor);
  sub_1C0DA7960((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))sub_1C006AD18);
  uint64_t v8 = sub_1C0DA14A8(*(void *)&v4[*(int *)(v2 + 36)], type metadata accessor for FormatLayoutSectionDescriptor.Header, type metadata accessor for FormatLayoutSectionDescriptor.Header, (void (*)(char *))sub_1C0DA79E0);
  uint64_t v9 = sub_1C0DA14A8(*(void *)&v4[*(int *)(v2 + 40)], type metadata accessor for FormatLayoutSectionDescriptor.Footer, type metadata accessor for FormatLayoutSectionDescriptor.Footer, (void (*)(char *))sub_1C0DA79C8);
  uint64_t v13 = v8;
  sub_1C1048C60(v9);
  uint64_t v10 = v13;
  sub_1C0086EAC((uint64_t)v4, (uint64_t (*)(void))sub_1C006AD18);
  return v10;
}

uint64_t sub_1C0DA1928(uint64_t a1)
{
  uint64_t v2 = sub_1C0DA1AF8(&qword_1EA1A7160, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
  return MEMORY[0x1F4162DE8](a1, v2);
}

uint64_t sub_1C0DA1994(uint64_t a1)
{
  uint64_t v2 = sub_1C0DA1AF8(&qword_1EB868B00, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1C0DA1A00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0DA1A68()
{
  return sub_1C0DA1AF8(&qword_1EB868B00, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
}

uint64_t sub_1C0DA1AB0()
{
  return sub_1C0DA1AF8((unint64_t *)&qword_1EB896870, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
}

uint64_t sub_1C0DA1AF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FormatLayoutSectionDescriptor(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v22 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = (int *)type metadata accessor for FormatContent.Resolved();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151631C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    *(void *)((char *)a1 + v7[8]) = *(void *)((char *)a2 + v7[8]);
    *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
    *(void *)((char *)a1 + v7[10]) = *(void *)((char *)a2 + v7[10]);
    *(void *)((char *)a1 + v7[11]) = *(void *)((char *)a2 + v7[11]);
    uint64_t v13 = v7[12];
    uint64_t v89 = *(void **)((char *)a2 + v13);
    *(void *)((char *)a1 + v13) = v89;
    *(void *)((char *)a1 + v7[13]) = *(void *)((char *)a2 + v7[13]);
    uint64_t v83 = v7;
    uint64_t v14 = v7[14];
    uint64_t v84 = a2;
    __dst = (void *)((char *)a1 + v14);
    unsigned __int8 v93 = (void *)((char *)a2 + v14);
    int64_t v15 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
    uint64_t v16 = *((void *)v15 - 1);
    uint64_t v85 = *(unsigned int (**)(void *, uint64_t, int *))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v17 = v89;
    swift_unknownObjectRetain();
    if (v85(v93, 1, v15))
    {
      sub_1C006ACB4(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v93, *(void *)(*(void *)(v18 - 8) + 64));
      unint64_t v19 = v83;
      unint64_t v20 = a2;
    }
    else
    {
      uint64_t v80 = v16;
      uint64_t v23 = v93[1];
      void *__dst = *v93;
      __dst[1] = v23;
      uint64_t v24 = v15[5];
      long long v25 = (void *)((char *)__dst + v24);
      uint64_t v26 = (char *)v93 + v24;
      uint64_t v27 = *(void *)((char *)v93 + v24 + 8);
      *long long v25 = *(void *)((char *)v93 + v24);
      v25[1] = v27;
      uint64_t v28 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v29 = v28[5];
      uint64_t v86 = (char *)v25 + v29;
      uint64_t v81 = &v26[v29];
      uint64_t v30 = sub_1C1515FDC();
      uint64_t v31 = *(void *)(v30 - 8);
      unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v86, v81, v30);
      uint64_t v33 = v28[6];
      uint64_t v90 = (char *)v25 + v33;
      uint64_t v34 = &v26[v33];
      uint64_t v78 = v30;
      uint64_t v77 = v32;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&v26[v33], 1, v30))
      {
        sub_1C006ACB4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v90, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v32(v90, v34, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v90, 0, 1, v30);
      }
      *(void *)((char *)v25 + v28[7]) = *(void *)&v26[v28[7]];
      uint64_t v36 = v28[8];
      unint64_t v37 = (void *)((char *)v25 + v36);
      uint64_t v38 = &v26[v36];
      uint64_t v87 = *((void *)v38 + 1);
      *unint64_t v37 = *(void *)v38;
      v37[1] = v87;
      uint64_t v39 = v28[9];
      uint64_t v40 = (void *)((char *)v25 + v39);
      uint64_t v41 = &v26[v39];
      uint64_t v42 = *((void *)v41 + 1);
      *uint64_t v40 = *(void *)v41;
      v40[1] = v42;
      *(void *)((char *)v25 + v28[10]) = *(void *)&v26[v28[10]];
      *(void *)((char *)v25 + v28[11]) = *(void *)&v26[v28[11]];
      *(void *)((char *)v25 + v28[12]) = *(void *)&v26[v28[12]];
      *(void *)((char *)__dst + v15[6]) = *(void *)((char *)v93 + v15[6]);
      *(void *)((char *)__dst + v15[7]) = *(void *)((char *)v93 + v15[7]);
      uint64_t v82 = v15;
      uint64_t v43 = v15[8];
      uint64_t v79 = (void *)((char *)__dst + v43);
      uint64_t v44 = (void *)((char *)v93 + v43);
      uint64_t v45 = type metadata accessor for WebEmbedDataVisualization();
      int64_t v46 = *(void **)(v45 - 8);
      uint64_t v47 = (unsigned int (*)(uint64_t *, uint64_t, uint64_t))v46[6];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v47(v44, 1, v45))
      {
        uint64_t v48 = __dst;
        sub_1C006ACB4(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v79, v44, *(void *)(*(void *)(v49 - 8) + 64));
        unint64_t v19 = v83;
        unint64_t v20 = v84;
        uint64_t v50 = v82;
      }
      else
      {
        uint64_t v91 = v46;
        uint64_t v48 = __dst;
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v52 = *v44;
        unint64_t v19 = v83;
        unint64_t v20 = v84;
        uint64_t v50 = v82;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v88 = v45;
          uint64_t v53 = v44[1];
          void *v79 = v52;
          v79[1] = v53;
          uint64_t v54 = type metadata accessor for GenericDataVisualization();
          uint64_t v55 = *(int *)(v54 + 20);
          uint64_t v56 = (char *)v79 + v55;
          uint64_t v57 = (char *)v44 + v55;
          uint64_t v45 = v88;
          swift_bridgeObjectRetain();
          v77(v56, v57, v78);
          *(void *)((char *)v79 + *(int *)(v54 + 24)) = *(uint64_t *)((char *)v44 + *(int *)(v54 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *v79 = v52;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*((void (**)(void *, void, uint64_t, uint64_t))v91 + 7))(v79, 0, 1, v45);
      }
      uint64_t v58 = v50[9];
      uint64_t v59 = (char *)v48 + v58;
      uint64_t v60 = (char *)v93 + v58;
      sub_1BFEC84E0();
      uint64_t v62 = v61;
      uint64_t v63 = *(void *)(v61 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v60, 1, v61))
      {
        sub_1C006ACB4(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        memcpy(v59, v60, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v59, v60, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v59, 0, 1, v62);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v80 + 56))(v48, 0, 1, v50);
    }
    uint64_t v65 = v19[15];
    uint64_t v66 = *(void **)((char *)v20 + v65);
    *(void *)((char *)a1 + v65) = v66;
    *((unsigned char *)a1 + v19[16]) = *((unsigned char *)v20 + v19[16]);
    *(void *)((char *)a1 + v19[17]) = *(void *)((char *)v20 + v19[17]);
    uint64_t v67 = v19[18];
    uint64_t v22 = a1;
    uint64_t v68 = (char *)a1 + v67;
    uint64_t v69 = (char *)v20 + v67;
    uint64_t v70 = sub_1C151D6DC();
    uint64_t v71 = *(void *)(v70 - 8);
    uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
    id v73 = v66;
    swift_bridgeObjectRetain();
    if (v72(v69, 1, v70))
    {
      sub_1C006ACB4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
      memcpy(v68, v69, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
    sub_1C006AD18(0);
    *(void *)((char *)a1 + *(int *)(v75 + 28)) = *(void *)((char *)v20 + *(int *)(v75 + 28));
    *(void *)((char *)a1 + *(int *)(v75 + 32)) = *(void *)((char *)v20 + *(int *)(v75 + 32));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v22;
}

uint64_t destroy for FormatLayoutSectionDescriptor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v5 = a1 + v2[14];
  uint64_t v6 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + v6[5];
    swift_bridgeObjectRelease();
    uint64_t v8 = type metadata accessor for FormatWebEmbed();
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v24(v9, v10);
    uint64_t v12 = v7 + *(int *)(v8 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10)) {
      v24(v12, v10);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v13 = v5 + v6[8];
    uint64_t v14 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = type metadata accessor for GenericDataVisualization();
        v24(v13 + *(int *)(v15 + 20), v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v16 = v5 + v6[9];
    sub_1BFEC84E0();
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v20 = a1 + v2[18];
  uint64_t v21 = sub_1C151D6DC();
  uint64_t v22 = *(void *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  sub_1C006AD18(0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatLayoutSectionDescriptor(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  *(void *)((char *)a1 + v5[6]) = *(void *)((char *)a2 + v5[6]);
  *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
  *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
  *(void *)((char *)a1 + v5[9]) = *(void *)((char *)a2 + v5[9]);
  *(void *)((char *)a1 + v5[10]) = *(void *)((char *)a2 + v5[10]);
  *(void *)((char *)a1 + v5[11]) = *(void *)((char *)a2 + v5[11]);
  uint64_t v11 = v5[12];
  __dsta = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = __dsta;
  *(void *)((char *)a1 + v5[13]) = *(void *)((char *)a2 + v5[13]);
  uint64_t v76 = v5;
  uint64_t v12 = v5[14];
  uint64_t v78 = a1;
  uint64_t v88 = (void *)((char *)a1 + v12);
  uint64_t v77 = a2;
  uint64_t v87 = (void *)((char *)a2 + v12);
  uint64_t v13 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v79 = *(unsigned int (**)(void *, uint64_t, int *))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v15 = __dsta;
  swift_unknownObjectRetain();
  if (v79(v87, 1, v13))
  {
    sub_1C006ACB4(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    memcpy(v88, v87, *(void *)(*(void *)(v16 - 8) + 64));
    uint64_t v18 = a2;
    uint64_t v17 = v78;
    uint64_t v19 = v76;
  }
  else
  {
    uint64_t v75 = v14;
    uint64_t v20 = v87[1];
    *uint64_t v88 = *v87;
    v88[1] = v20;
    uint64_t v21 = v13[5];
    uint64_t v22 = (void *)((char *)v88 + v21);
    uint64_t v23 = (char *)v87 + v21;
    uint64_t v24 = *(void *)((char *)v87 + v21 + 8);
    void *v22 = *(void *)((char *)v87 + v21);
    v22[1] = v24;
    long long v25 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v26 = v25[5];
    uint64_t v80 = &v23[v26];
    __dstb = (char *)v22 + v26;
    uint64_t v27 = sub_1C1515FDC();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(__dstb, v80, v27);
    uint64_t v30 = v25[6];
    __dst = (char *)v22 + v30;
    uint64_t v31 = &v23[v30];
    uint64_t v73 = v27;
    uint64_t v72 = v29;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&v23[v30], 1, v27))
    {
      sub_1C006ACB4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      v29(__dst, v31, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
    }
    *(void *)((char *)v22 + v25[7]) = *(void *)&v23[v25[7]];
    uint64_t v33 = v25[8];
    uint64_t v34 = (void *)((char *)v22 + v33);
    uint64_t v35 = &v23[v33];
    uint64_t v81 = *((void *)v35 + 1);
    *uint64_t v34 = *(void *)v35;
    v34[1] = v81;
    uint64_t v36 = v25[9];
    unint64_t v37 = (void *)((char *)v22 + v36);
    uint64_t v38 = &v23[v36];
    uint64_t v39 = *((void *)v38 + 1);
    *unint64_t v37 = *(void *)v38;
    v37[1] = v39;
    *(void *)((char *)v22 + v25[10]) = *(void *)&v23[v25[10]];
    *(void *)((char *)v22 + v25[11]) = *(void *)&v23[v25[11]];
    *(void *)((char *)v22 + v25[12]) = *(void *)&v23[v25[12]];
    *(void *)((char *)v88 + v13[6]) = *(void *)((char *)v87 + v13[6]);
    *(void *)((char *)v88 + v13[7]) = *(void *)((char *)v87 + v13[7]);
    uint64_t v40 = v13[8];
    uint64_t v74 = (void *)((char *)v88 + v40);
    uint64_t v41 = (void *)((char *)v87 + v40);
    uint64_t v42 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v43 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v44(v41, 1, v42))
    {
      sub_1C006ACB4(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
      memcpy(v74, v41, *(void *)(*(void *)(v45 - 8) + 64));
      uint64_t v18 = v77;
      uint64_t v17 = v78;
      uint64_t v19 = v76;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v47 = *v41;
      uint64_t v18 = v77;
      uint64_t v17 = v78;
      uint64_t v19 = v76;
      if (EnumCaseMultiPayload == 1)
      {
        __dstc = (void *)v42;
        uint64_t v48 = v41[1];
        *uint64_t v74 = v47;
        v74[1] = v48;
        uint64_t v49 = v41;
        uint64_t v50 = type metadata accessor for GenericDataVisualization();
        uint64_t v51 = *(int *)(v50 + 20);
        uint64_t v52 = (char *)v74 + v51;
        uint64_t v82 = (char *)v49 + v51;
        uint64_t v42 = (uint64_t)__dstc;
        swift_bridgeObjectRetain();
        v72(v52, v82, v73);
        *(void *)((char *)v74 + *(int *)(v50 + 24)) = *(uint64_t *)((char *)v49 + *(int *)(v50 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *uint64_t v74 = v47;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v74, 0, 1, v42);
    }
    uint64_t v53 = v13[9];
    uint64_t v54 = (char *)v88 + v53;
    uint64_t v55 = (char *)v87 + v53;
    sub_1BFEC84E0();
    uint64_t v57 = v56;
    uint64_t v58 = *(void *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v55, 1, v56))
    {
      sub_1C006ACB4(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
      memcpy(v54, v55, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v54, v55, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v54, 0, 1, v57);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v75 + 56))(v88, 0, 1, v13);
  }
  uint64_t v60 = v19[15];
  uint64_t v61 = *(void **)((char *)v18 + v60);
  *(void *)((char *)v17 + v60) = v61;
  *((unsigned char *)v17 + v19[16]) = *((unsigned char *)v18 + v19[16]);
  *(void *)((char *)v17 + v19[17]) = *(void *)((char *)v18 + v19[17]);
  uint64_t v62 = v19[18];
  uint64_t v63 = (char *)v17 + v62;
  uint64_t v64 = (char *)v18 + v62;
  uint64_t v65 = sub_1C151D6DC();
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
  id v68 = v61;
  swift_bridgeObjectRetain();
  if (v67(v64, 1, v65))
  {
    sub_1C006ACB4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v63, v64, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
  }
  sub_1C006AD18(0);
  *(void *)((char *)v17 + *(int *)(v70 + 28)) = *(void *)((char *)v18 + *(int *)(v70 + 28));
  *(void *)((char *)v17 + *(int *)(v70 + 32)) = *(void *)((char *)v18 + *(int *)(v70 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v17;
}

void *assignWithCopy for FormatLayoutSectionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  *(void *)((char *)a1 + v4[6]) = *(void *)((char *)a2 + v4[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v4[7]) = *(void *)((char *)a2 + v4[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v4[8]) = *(void *)((char *)a2 + v4[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v4[9]) = *(void *)((char *)a2 + v4[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v4[10]) = *(void *)((char *)a2 + v4[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v4[11]) = *(void *)((char *)a2 + v4[11]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v9 = v4[12];
  uint64_t v10 = *(void **)((char *)a1 + v9);
  uint64_t v11 = *(void **)((char *)a2 + v9);
  *(void *)((char *)a1 + v9) = v11;
  id v12 = v11;

  *(void *)((char *)a1 + v4[13]) = *(void *)((char *)a2 + v4[13]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v13 = v4[14];
  uint64_t v14 = (void *)((char *)a1 + v13);
  id v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_1C0086EAC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      goto LABEL_7;
    }
    *uint64_t v14 = *v15;
    v14[1] = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v150 = (int *)v16;
    uint64_t v36 = *(int *)(v16 + 20);
    long long v152 = v14;
    unint64_t v37 = (void *)((char *)v14 + v36);
    unint64_t v148 = v15;
    uint64_t v38 = (char *)v15 + v36;
    *unint64_t v37 = *(void *)((char *)v15 + v36);
    v37[1] = *(void *)((char *)v15 + v36 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = type metadata accessor for FormatWebEmbed();
    uint64_t v40 = *(int *)(v39 + 20);
    __dstb = (char *)v37 + v40;
    uint64_t v41 = &v38[v40];
    uint64_t v42 = sub_1C1515FDC();
    uint64_t v43 = *(void *)(v42 - 8);
    char v126 = *(void (**)(char *, char *, uint64_t))(v43 + 24);
    v126(__dstb, v41, v42);
    uint64_t v139 = v38;
    __dsta = (int *)v39;
    uint64_t v44 = *(int *)(v39 + 24);
    uint64_t v45 = &v38[v44];
    uint64_t v128 = (void (**)(void, const void *, uint64_t))v43;
    int64_t v46 = *(uint64_t (**)(void))(v43 + 48);
    uint64_t v134 = (char *)v37 + v44;
    LODWORD(v43) = v46();
    uint64_t v131 = v42;
    int v47 = ((uint64_t (*)(char *, uint64_t, uint64_t))v46)(v45, 1, v42);
    if (v43)
    {
      if (v47)
      {
        sub_1C006ACB4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v49 = *(void *)(*(void *)(v48 - 8) + 64);
        uint64_t v50 = v134;
LABEL_19:
        memcpy(v50, v45, v49);
        goto LABEL_36;
      }
      ((void (**)(char *, const void *, uint64_t))v128)[2](v134, v45, v42);
      ((void (*)(char *, void, uint64_t, uint64_t))v128[7])(v134, 0, 1, v42);
    }
    else
    {
      if (v47)
      {
        ((void (*)(char *, uint64_t))v128[1])(v134, v42);
        sub_1C006ACB4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v49 = *(void *)(*(void *)(v68 - 8) + 64);
        uint64_t v50 = v134;
        goto LABEL_19;
      }
      v126(v134, v45, v42);
    }
LABEL_36:
    *(void *)((char *)v37 + __dsta[7]) = *(void *)&v139[__dsta[7]];
    swift_retain();
    swift_release();
    uint64_t v92 = __dsta[8];
    unsigned __int8 v93 = (void *)((char *)v37 + v92);
    uint64_t v94 = &v139[v92];
    *unsigned __int8 v93 = *(void *)v94;
    v93[1] = *((void *)v94 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v95 = __dsta[9];
    uint64_t v96 = (void *)((char *)v37 + v95);
    unint64_t v97 = &v139[v95];
    *uint64_t v96 = *(void *)v97;
    v96[1] = *((void *)v97 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v37 + __dsta[10]) = *(void *)&v139[__dsta[10]];
    *(void *)((char *)v37 + __dsta[11]) = *(void *)&v139[__dsta[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v37 + __dsta[12]) = *(void *)&v139[__dsta[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v152 + v150[6]) = *(void *)((char *)v148 + v150[6]);
    swift_retain();
    swift_release();
    *(void *)((char *)v152 + v150[7]) = *(void *)((char *)v148 + v150[7]);
    swift_retain();
    swift_release();
    uint64_t v98 = v150[8];
    uint64_t v99 = (void *)((char *)v152 + v98);
    uint64_t v100 = (void *)((char *)v148 + v98);
    uint64_t v101 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v102 = *(void *)(v101 - 8);
    uint64_t v103 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v102 + 48);
    int v104 = v103(v99, 1, v101);
    int v105 = v103(v100, 1, v101);
    if (v104)
    {
      if (!v105)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        void *v99 = *v100;
        if (EnumCaseMultiPayload == 1)
        {
          v99[1] = v100[1];
          uint64_t v107 = type metadata accessor for GenericDataVisualization();
          uint64_t v108 = *(int *)(v107 + 20);
          uint64_t v140 = (char *)v99 + v108;
          __dstc = (int *)v107;
          __srca = (char *)v100 + v108;
          unint64_t v109 = (void (*)(char *, const void *, uint64_t))v128[2];
          swift_bridgeObjectRetain();
          v109(v140, __srca, v131);
          *(void *)((char *)v99 + __dstc[6]) = *(void *)((char *)v100 + __dstc[6]);
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
        goto LABEL_49;
      }
    }
    else
    {
      if (!v105)
      {
        if (a1 != a2)
        {
          sub_1C0086EAC((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          int v111 = swift_getEnumCaseMultiPayload();
          void *v99 = *v100;
          if (v111 == 1)
          {
            v99[1] = v100[1];
            uint64_t v112 = type metadata accessor for GenericDataVisualization();
            uint64_t v113 = *(int *)(v112 + 20);
            uint64_t v141 = (char *)v100 + v113;
            __dstd = (char *)v99 + v113;
            uint64_t v114 = (void (*)(char *, const void *, uint64_t))v128[2];
            swift_bridgeObjectRetain();
            v114(__dstd, v141, v131);
            *(void *)((char *)v99 + *(int *)(v112 + 24)) = *(void *)((char *)v100 + *(int *)(v112 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_49;
      }
      sub_1C0086EAC((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    sub_1C006ACB4(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v99, v100, *(void *)(*(void *)(v110 - 8) + 64));
LABEL_49:
    uint64_t v115 = v150[9];
    uint64_t v116 = (char *)v152 + v115;
    uint64_t v117 = (char *)v148 + v115;
    sub_1BFEC84E0();
    uint64_t v119 = v118;
    uint64_t v120 = *(void *)(v118 - 8);
    uint64_t v121 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 48);
    int v122 = v121(v116, 1, v118);
    int v123 = v121(v117, 1, v119);
    if (v122)
    {
      if (!v123)
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v116, v117, v119);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v116, 0, 1, v119);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v123)
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 24))(v116, v117, v119);
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v120 + 8))(v116, v119);
    }
    sub_1C006ACB4(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
    size_t v33 = *(void *)(*(void *)(v124 - 8) + 64);
    uint64_t v34 = v116;
    uint64_t v35 = v117;
LABEL_8:
    memcpy(v34, v35, v33);
    goto LABEL_26;
  }
  if (v20)
  {
LABEL_7:
    sub_1C006ACB4(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    size_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v34 = (char *)v14;
    uint64_t v35 = (char *)v15;
    goto LABEL_8;
  }
  uint64_t v130 = v4;
  *uint64_t v14 = *v15;
  uint64_t v138 = v17;
  v14[1] = v15[1];
  unint64_t v149 = (int *)v16;
  uint64_t v21 = *(int *)(v16 + 20);
  long long v151 = v14;
  uint64_t v22 = (void *)((char *)v14 + v21);
  uint64_t v147 = v15;
  uint64_t v23 = (char *)v15 + v21;
  void *v22 = *(void *)((char *)v15 + v21);
  v22[1] = *(void *)((char *)v15 + v21 + 8);
  uint64_t v24 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v25 = v24[5];
  int v133 = &v23[v25];
  __src = (char *)v22 + v25;
  uint64_t v26 = sub_1C1515FDC();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28(__src, v133, v26);
  uint64_t v29 = v24[6];
  __dst = (char *)v22 + v29;
  uint64_t v30 = &v23[v29];
  uint64_t v125 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(&v23[v29], 1, v26))
  {
    sub_1C006ACB4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v28(__dst, v30, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  uint64_t v4 = v130;
  *(void *)((char *)v22 + v24[7]) = *(void *)&v23[v24[7]];
  uint64_t v51 = v24[8];
  uint64_t v52 = (void *)((char *)v22 + v51);
  uint64_t v53 = &v23[v51];
  *uint64_t v52 = *(void *)v53;
  v52[1] = *((void *)v53 + 1);
  uint64_t v54 = v24[9];
  uint64_t v55 = (void *)((char *)v22 + v54);
  uint64_t v56 = &v23[v54];
  *uint64_t v55 = *(void *)v56;
  v55[1] = *((void *)v56 + 1);
  *(void *)((char *)v22 + v24[10]) = *(void *)&v23[v24[10]];
  *(void *)((char *)v22 + v24[11]) = *(void *)&v23[v24[11]];
  *(void *)((char *)v22 + v24[12]) = *(void *)&v23[v24[12]];
  *(void *)((char *)v151 + v149[6]) = *(void *)((char *)v147 + v149[6]);
  *(void *)((char *)v151 + v149[7]) = *(void *)((char *)v147 + v149[7]);
  uint64_t v57 = v149[8];
  uint64_t v129 = (void *)((char *)v151 + v57);
  uint64_t v135 = (void *)((char *)v147 + v57);
  uint64_t v58 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v127 = *(void *)(v58 - 8);
  uint64_t v132 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v127 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v132(v135, 1, v58))
  {
    sub_1C006ACB4(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v129, v135, *(void *)(*(void *)(v59 - 8) + 64));
    uint64_t v60 = v151;
    uint64_t v61 = v147;
    uint64_t v62 = v149;
  }
  else
  {
    int v63 = swift_getEnumCaseMultiPayload();
    void *v129 = *v135;
    if (v63 == 1)
    {
      v129[1] = v135[1];
      uint64_t v64 = type metadata accessor for GenericDataVisualization();
      uint64_t v65 = *(int *)(v64 + 20);
      uint64_t v66 = (char *)v129 + v65;
      uint64_t v67 = (char *)v135 + v65;
      swift_bridgeObjectRetain();
      v28(v66, v67, v125);
      *(void *)((char *)v129 + *(int *)(v64 + 24)) = *(void *)((char *)v135 + *(int *)(v64 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    uint64_t v60 = v151;
    uint64_t v61 = v147;
    uint64_t v62 = v149;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v127 + 56))(v129, 0, 1, v58);
  }
  uint64_t v69 = v62[9];
  uint64_t v70 = (char *)v60 + v69;
  uint64_t v71 = (char *)v61 + v69;
  sub_1BFEC84E0();
  uint64_t v73 = v72;
  uint64_t v74 = *(void *)(v72 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v71, 1, v72))
  {
    sub_1C006ACB4(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
    memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v70, v71, v73);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v70, 0, 1, v73);
  }
  (*(void (**)(void *, void, uint64_t, int *))(v138 + 56))(v60, 0, 1, v62);
LABEL_26:
  uint64_t v76 = v4[15];
  uint64_t v77 = *(void **)((char *)a1 + v76);
  uint64_t v78 = *(void **)((char *)a2 + v76);
  *(void *)((char *)a1 + v76) = v78;
  id v79 = v78;

  *((unsigned char *)a1 + v4[16]) = *((unsigned char *)a2 + v4[16]);
  *(void *)((char *)a1 + v4[17]) = *(void *)((char *)a2 + v4[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v80 = v4[18];
  uint64_t v81 = (char *)a1 + v80;
  uint64_t v82 = (char *)a2 + v80;
  uint64_t v83 = sub_1C151D6DC();
  uint64_t v84 = *(void *)(v83 - 8);
  uint64_t v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
  int v86 = v85(v81, 1, v83);
  int v87 = v85(v82, 1, v83);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 24))(v81, v82, v83);
      goto LABEL_32;
    }
    (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v83);
    goto LABEL_31;
  }
  if (v87)
  {
LABEL_31:
    sub_1C006ACB4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v81, v82, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v82, v83);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
LABEL_32:
  sub_1C006AD18(0);
  uint64_t v90 = v89;
  *(void *)((char *)a1 + *(int *)(v89 + 28)) = *(void *)((char *)a2 + *(int *)(v89 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(v90 + 32)) = *(void *)((char *)a2 + *(int *)(v90 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatLayoutSectionDescriptor(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  *(void *)((char *)a1 + v4[6]) = *(void *)((char *)a2 + v4[6]);
  *(void *)((char *)a1 + v4[7]) = *(void *)((char *)a2 + v4[7]);
  *(void *)((char *)a1 + v4[8]) = *(void *)((char *)a2 + v4[8]);
  *(void *)((char *)a1 + v4[9]) = *(void *)((char *)a2 + v4[9]);
  *(void *)((char *)a1 + v4[10]) = *(void *)((char *)a2 + v4[10]);
  *(void *)((char *)a1 + v4[11]) = *(void *)((char *)a2 + v4[11]);
  *(void *)((char *)a1 + v4[12]) = *(void *)((char *)a2 + v4[12]);
  *(void *)((char *)a1 + v4[13]) = *(void *)((char *)a2 + v4[13]);
  uint64_t v9 = v4[14];
  uint64_t v10 = (_OWORD *)((char *)a1 + v9);
  uint64_t v11 = (_OWORD *)((char *)a2 + v9);
  id v12 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v13 = *((void *)v12 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    sub_1C006ACB4(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v49 = v13;
    uint64_t v50 = v10;
    *uint64_t v10 = *v11;
    uint64_t v15 = v12[5];
    uint64_t v16 = (_OWORD *)((char *)v10 + v15);
    uint64_t v48 = v11;
    uint64_t v17 = (char *)v11 + v15;
    *uint64_t v16 = *(_OWORD *)((char *)v11 + v15);
    uint64_t v18 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v19 = v18[5];
    uint64_t v51 = &v17[v19];
    uint64_t v53 = (char *)v16 + v19;
    uint64_t v20 = sub_1C1515FDC();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v22(v53, v51, v20);
    uint64_t v23 = v18[6];
    uint64_t v54 = (char *)v16 + v23;
    uint64_t v52 = &v17[v23];
    int v47 = v22;
    if ((*(unsigned int (**)(void))(v21 + 48))())
    {
      sub_1C006ACB4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v54, v52, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v22(v54, v52, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v54, 0, 1, v20);
    }
    *(void *)((char *)v16 + v18[7]) = *(void *)&v17[v18[7]];
    *(_OWORD *)((char *)v16 + v18[8]) = *(_OWORD *)&v17[v18[8]];
    *(_OWORD *)((char *)v16 + v18[9]) = *(_OWORD *)&v17[v18[9]];
    *(void *)((char *)v16 + v18[10]) = *(void *)&v17[v18[10]];
    *(void *)((char *)v16 + v18[11]) = *(void *)&v17[v18[11]];
    *(void *)((char *)v16 + v18[12]) = *(void *)&v17[v18[12]];
    *(void *)((char *)v50 + v12[6]) = *(void *)((char *)v48 + v12[6]);
    *(void *)((char *)v50 + v12[7]) = *(void *)((char *)v48 + v12[7]);
    uint64_t v25 = v12[8];
    uint64_t v26 = (_OWORD *)((char *)v50 + v25);
    uint64_t v27 = (_OWORD *)((char *)v48 + v25);
    uint64_t v28 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1C006ACB4(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v26 = *v27;
        uint64_t v31 = type metadata accessor for GenericDataVisualization();
        v47((char *)v26 + *(int *)(v31 + 20), (char *)v27 + *(int *)(v31 + 20), v20);
        *(void *)((char *)v26 + *(int *)(v31 + 24)) = *(void *)((char *)v27 + *(int *)(v31 + 24));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v26, v27, *(void *)(v29 + 64));
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v32 = v12[9];
    size_t v33 = (char *)v50 + v32;
    uint64_t v34 = (char *)v48 + v32;
    sub_1BFEC84E0();
    uint64_t v36 = v35;
    uint64_t v37 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v35))
    {
      sub_1C006ACB4(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
      memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v33, v34, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v49 + 56))(v50, 0, 1, v12);
  }
  *(void *)((char *)a1 + v4[15]) = *(void *)((char *)a2 + v4[15]);
  *((unsigned char *)a1 + v4[16]) = *((unsigned char *)a2 + v4[16]);
  *(void *)((char *)a1 + v4[17]) = *(void *)((char *)a2 + v4[17]);
  uint64_t v39 = v4[18];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = sub_1C151D6DC();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    sub_1C006ACB4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  sub_1C006AD18(0);
  *(void *)((char *)a1 + *(int *)(v45 + 28)) = *(void *)((char *)a2 + *(int *)(v45 + 28));
  *(void *)((char *)a1 + *(int *)(v45 + 32)) = *(void *)((char *)a2 + *(int *)(v45 + 32));
  return a1;
}

void *assignWithTake for FormatLayoutSectionDescriptor(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + v5[6]) = *(void *)((char *)a2 + v5[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[9]) = *(void *)((char *)a2 + v5[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[10]) = *(void *)((char *)a2 + v5[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[11]) = *(void *)((char *)a2 + v5[11]);
  swift_unknownObjectRelease();
  uint64_t v10 = v5[12];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);

  *(void *)((char *)a1 + v5[13]) = *(void *)((char *)a2 + v5[13]);
  swift_unknownObjectRelease();
  uint64_t v12 = v5[14];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, int *))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_1C0086EAC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      goto LABEL_7;
    }
    uint64_t v39 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v39;
    swift_bridgeObjectRelease();
    uint64_t v40 = v15[5];
    uint64_t v138 = v13;
    uint64_t v140 = v14;
    uint64_t v41 = (void *)((char *)v13 + v40);
    uint64_t v42 = (char *)v14 + v40;
    uint64_t v43 = *((void *)v42 + 1);
    *uint64_t v41 = *(void *)v42;
    v41[1] = v43;
    swift_bridgeObjectRelease();
    uint64_t v44 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v45 = v44[5];
    uint64_t v131 = &v42[v45];
    __dstd = (char *)v41 + v45;
    uint64_t v46 = sub_1C1515FDC();
    uint64_t v47 = *(void *)(v46 - 8);
    int v122 = *(void (**)(char *, char *, uint64_t))(v47 + 40);
    v122(__dstd, v131, v46);
    __dsta = v42;
    uint64_t v48 = v44[6];
    char v126 = v41;
    uint64_t v49 = (char *)v41 + v48;
    uint64_t v50 = &v42[v48];
    uint64_t v123 = v47;
    uint64_t v51 = *(uint64_t (**)(void))(v47 + 48);
    uint64_t v129 = v49;
    LODWORD(v47) = v51();
    uint64_t v124 = v46;
    int v52 = ((uint64_t (*)(char *, uint64_t, uint64_t))v51)(v50, 1, v46);
    if (v47)
    {
      if (v52)
      {
        sub_1C006ACB4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v54 = *(void *)(*(void *)(v53 - 8) + 64);
        uint64_t v55 = v129;
LABEL_19:
        memcpy(v55, v50, v54);
        goto LABEL_36;
      }
      (*(void (**)(void *, char *, uint64_t))(v123 + 32))(v129, v50, v46);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v129, 0, 1, v46);
    }
    else
    {
      if (v52)
      {
        (*(void (**)(void *, uint64_t))(v123 + 8))(v129, v46);
        sub_1C006ACB4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v54 = *(void *)(*(void *)(v64 - 8) + 64);
        uint64_t v55 = v129;
        goto LABEL_19;
      }
      v122((char *)v129, v50, v46);
    }
LABEL_36:
    *(void *)((char *)v126 + v44[7]) = *(void *)&__dsta[v44[7]];
    swift_release();
    uint64_t v86 = v44[8];
    int v87 = (void *)((char *)v126 + v86);
    uint64_t v88 = &__dsta[v86];
    uint64_t v90 = *(void *)v88;
    uint64_t v89 = *((void *)v88 + 1);
    *int v87 = v90;
    v87[1] = v89;
    swift_bridgeObjectRelease();
    uint64_t v91 = v44[9];
    uint64_t v92 = (void *)((char *)v126 + v91);
    unsigned __int8 v93 = &__dsta[v91];
    uint64_t v95 = *(void *)v93;
    uint64_t v94 = *((void *)v93 + 1);
    *uint64_t v92 = v95;
    v92[1] = v94;
    swift_bridgeObjectRelease();
    *(void *)((char *)v126 + v44[10]) = *(void *)&__dsta[v44[10]];
    *(void *)((char *)v126 + v44[11]) = *(void *)&__dsta[v44[11]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v126 + v44[12]) = *(void *)&__dsta[v44[12]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v138 + v15[6]) = *(void *)((char *)v140 + v15[6]);
    swift_release();
    *(void *)((char *)v138 + v15[7]) = *(void *)((char *)v140 + v15[7]);
    swift_release();
    uint64_t v96 = v15[8];
    unint64_t v97 = (_OWORD *)((char *)v138 + v96);
    uint64_t v98 = (char *)v140 + v96;
    uint64_t v99 = type metadata accessor for WebEmbedDataVisualization();
    __dstb = *(void **)(v99 - 8);
    uint64_t v100 = (uint64_t (*)(char *, uint64_t, uint64_t))__dstb[6];
    uint64_t v101 = v97;
    uint64_t v102 = (char *)v97;
    uint64_t v103 = v98;
    LODWORD(v98) = v100(v102, 1, v99);
    int v104 = v100(v103, 1, v99);
    if (v98)
    {
      if (!v104)
      {
        int v105 = v103;
        uint64_t v106 = v101;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v101 = *(_OWORD *)v105;
          uint64_t v107 = type metadata accessor for GenericDataVisualization();
          (*(void (**)(char *, char *, uint64_t))(v123 + 32))((char *)v101 + *(int *)(v107 + 20), &v105[*(int *)(v107 + 20)], v124);
          *(void *)((char *)v101 + *(int *)(v107 + 24)) = *(void *)&v105[*(int *)(v107 + 24)];
          swift_storeEnumTagMultiPayload();
          uint64_t v108 = __dstb;
        }
        else
        {
          uint64_t v108 = __dstb;
          memcpy(v106, v105, __dstb[8]);
        }
        ((void (*)(void *, void, uint64_t, uint64_t))v108[7])(v106, 0, 1, v99);
        goto LABEL_49;
      }
    }
    else
    {
      if (!v104)
      {
        if (a1 == a2) {
          goto LABEL_49;
        }
        sub_1C0086EAC((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v101 = *(_OWORD *)v103;
          uint64_t v111 = type metadata accessor for GenericDataVisualization();
          (*(void (**)(char *, char *, uint64_t))(v123 + 32))((char *)v101 + *(int *)(v111 + 20), &v103[*(int *)(v111 + 20)], v124);
          *(void *)((char *)v101 + *(int *)(v111 + 24)) = *(void *)&v103[*(int *)(v111 + 24)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_49;
        }
        size_t v110 = __dstb[8];
LABEL_43:
        memcpy(v101, v103, v110);
LABEL_49:
        uint64_t v112 = v15[9];
        uint64_t v113 = (char *)v138 + v112;
        uint64_t v114 = (char *)v140 + v112;
        sub_1BFEC84E0();
        uint64_t v116 = v115;
        uint64_t v117 = *(void *)(v115 - 8);
        uint64_t v118 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48);
        int v119 = v118(v113, 1, v115);
        int v120 = v118(v114, 1, v116);
        if (v119)
        {
          if (!v120)
          {
            (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v113, v114, v116);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v113, 0, 1, v116);
            goto LABEL_26;
          }
        }
        else
        {
          if (!v120)
          {
            (*(void (**)(char *, char *, uint64_t))(v117 + 40))(v113, v114, v116);
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v117 + 8))(v113, v116);
        }
        sub_1C006ACB4(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        size_t v36 = *(void *)(*(void *)(v121 - 8) + 64);
        uint64_t v37 = v113;
        uint64_t v38 = v114;
LABEL_8:
        memcpy(v37, v38, v36);
        goto LABEL_26;
      }
      sub_1C0086EAC((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    sub_1C006ACB4(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    size_t v110 = *(void *)(*(void *)(v109 - 8) + 64);
    goto LABEL_43;
  }
  if (v19)
  {
LABEL_7:
    sub_1C006ACB4(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    size_t v36 = *(void *)(*(void *)(v35 - 8) + 64);
    uint64_t v37 = (char *)v13;
    uint64_t v38 = (char *)v14;
    goto LABEL_8;
  }
  uint64_t v128 = v15;
  uint64_t v130 = v16;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  uint64_t v20 = v15[5];
  uint64_t v137 = v13;
  uint64_t v139 = v14;
  uint64_t v21 = (char *)v13 + v20;
  uint64_t v22 = (char *)v14 + v20;
  *(_OWORD *)((char *)v13 + v20) = *(_OWORD *)((char *)v14 + v20);
  uint64_t v23 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v24 = v23[5];
  __dstc = &v21[v24];
  uint64_t v25 = &v22[v24];
  uint64_t v26 = sub_1C1515FDC();
  uint64_t v27 = *(void *)(v26 - 8);
  __src = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  __src(__dstc, v25, v26);
  uint64_t v28 = v23[6];
  __dst = &v21[v28];
  uint64_t v29 = &v22[v28];
  uint64_t v125 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(&v22[v28], 1, v26))
  {
    sub_1C006ACB4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v29, *(void *)(*(void *)(v30 - 8) + 64));
    uint64_t v31 = v137;
    uint64_t v32 = v139;
    size_t v33 = __src;
    uint64_t v34 = v128;
  }
  else
  {
    __src(__dst, v29, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    uint64_t v31 = v137;
    uint64_t v32 = v139;
    uint64_t v34 = v128;
    size_t v33 = __src;
  }
  *(void *)&v21[v23[7]] = *(void *)&v22[v23[7]];
  *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
  *(_OWORD *)&v21[v23[9]] = *(_OWORD *)&v22[v23[9]];
  *(void *)&v21[v23[10]] = *(void *)&v22[v23[10]];
  *(void *)&v21[v23[11]] = *(void *)&v22[v23[11]];
  *(void *)&v21[v23[12]] = *(void *)&v22[v23[12]];
  *(void *)((char *)v31 + v34[6]) = *(void *)((char *)v32 + v34[6]);
  *(void *)((char *)v31 + v34[7]) = *(void *)((char *)v32 + v34[7]);
  uint64_t v56 = v34[8];
  uint64_t v57 = (_OWORD *)((char *)v31 + v56);
  uint64_t v58 = (_OWORD *)((char *)v32 + v56);
  uint64_t v59 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v60 = *(void *)(v59 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
  {
    sub_1C006ACB4(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
    uint64_t v62 = v137;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v57 = *v58;
      uint64_t v63 = type metadata accessor for GenericDataVisualization();
      v33((char *)v57 + *(int *)(v63 + 20), (char *)v58 + *(int *)(v63 + 20), v125);
      *(void *)((char *)v57 + *(int *)(v63 + 24)) = *(void *)((char *)v58 + *(int *)(v63 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v57, v58, *(void *)(v60 + 64));
    }
    uint64_t v62 = v137;
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  uint64_t v65 = v34[9];
  uint64_t v66 = (char *)v62 + v65;
  uint64_t v67 = (char *)v139 + v65;
  sub_1BFEC84E0();
  uint64_t v69 = v68;
  uint64_t v70 = *(void *)(v68 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v67, 1, v68))
  {
    sub_1C006ACB4(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
    memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v66, v67, v69);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v66, 0, 1, v69);
  }
  (*(void (**)(void *, void, uint64_t, int *))(v130 + 56))(v62, 0, 1, v34);
LABEL_26:
  uint64_t v72 = v5[15];
  uint64_t v73 = *(void **)((char *)a1 + v72);
  *(void *)((char *)a1 + v72) = *(void *)((char *)a2 + v72);

  *((unsigned char *)a1 + v5[16]) = *((unsigned char *)a2 + v5[16]);
  *(void *)((char *)a1 + v5[17]) = *(void *)((char *)a2 + v5[17]);
  swift_bridgeObjectRelease();
  uint64_t v74 = v5[18];
  uint64_t v75 = (char *)a1 + v74;
  uint64_t v76 = (char *)a2 + v74;
  uint64_t v77 = sub_1C151D6DC();
  uint64_t v78 = *(void *)(v77 - 8);
  id v79 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48);
  int v80 = v79(v75, 1, v77);
  int v81 = v79(v76, 1, v77);
  if (!v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 40))(v75, v76, v77);
      goto LABEL_32;
    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v75, v77);
    goto LABEL_31;
  }
  if (v81)
  {
LABEL_31:
    sub_1C006ACB4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v75, v76, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v75, v76, v77);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
LABEL_32:
  sub_1C006AD18(0);
  uint64_t v84 = v83;
  *(void *)((char *)a1 + *(int *)(v83 + 28)) = *(void *)((char *)a2 + *(int *)(v83 + 28));
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(v84 + 32)) = *(void *)((char *)a2 + *(int *)(v84 + 32));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatLayoutSectionDescriptor(uint64_t a1, uint64_t a2)
{
  sub_1C006AD18(0);
  return MEMORY[0x1F4186578](a1, a2, v4, sub_1C0DA5A0C);
}

uint64_t sub_1C0DA5A0C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84) == a2) {
    return (*(uint64_t (**)(void))(v3 + 48))();
  }
  unint64_t v5 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v5 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatLayoutSectionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C006AD18(0);
  return MEMORY[0x1F41867C0](a1, a2, a3, v6, sub_1C0DA5AE0);
}

uint64_t sub_1C0DA5AE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(*(void *)(a4 + 16) - 8);
  if (*(_DWORD *)(v4 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(result, a2, a2);
  }
  *(void *)(result + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_1C0DA5B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C006AAEC(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes);
}

void *_s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwCP_0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = type metadata accessor for FeedItemSupplementaryAttributes();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      uint64_t v16 = (void *)a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      uint64_t v17 = (void *)a2[4];
      int v18 = (void *)a2[5];
      a1[4] = v17;
      a1[5] = v18;
      int v19 = (void *)a2[6];
      uint64_t v68 = (void *)a2[7];
      a1[6] = v19;
      a1[7] = v68;
      uint64_t v69 = (void *)a2[8];
      a1[8] = v69;
      uint64_t v20 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      uint64_t v70 = (void *)((char *)a1 + v20);
      uint64_t v21 = (char *)a2 + v20;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      id v22 = v16;
      id v23 = v17;
      id v24 = v18;
      id v25 = v19;
      id v26 = v68;
      id v27 = v69;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v28 = *((void *)v21 + 1);
        *uint64_t v70 = *(void *)v21;
        v70[1] = v28;
        unint64_t v29 = *((void *)v21 + 2);
        swift_bridgeObjectRetain();
        if (v29 >= 0xB)
        {
          uint64_t v34 = *((void *)v21 + 3);
          uint64_t v35 = *((void *)v21 + 4);
          v70[2] = v29;
          v70[3] = v34;
          uint64_t v36 = *((void *)v21 + 5);
          uint64_t v37 = *((void *)v21 + 6);
          v70[4] = v35;
          v70[5] = v36;
          v70[6] = v37;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v30 = *((_OWORD *)v21 + 2);
          *((_OWORD *)v70 + 1) = *((_OWORD *)v21 + 1);
          *((_OWORD *)v70 + 2) = v30;
          v70[6] = *((void *)v21 + 6);
        }
        uint64_t v38 = *((void *)v21 + 8);
        v70[7] = *((void *)v21 + 7);
        v70[8] = v38;
        v70[9] = *((void *)v21 + 9);
        sub_1C0AEFBB4();
        uint64_t v40 = *(int *)(v39 + 80);
        uint64_t v41 = (char *)v70 + v40;
        uint64_t v42 = &v21[v40];
        *uint64_t v41 = v21[v40];
        uint64_t v43 = (uint64_t)v70 + v40 + 8;
        long long v44 = *((_OWORD *)v42 + 2);
        *((_OWORD *)v41 + 2) = v44;
        uint64_t v45 = v44;
        uint64_t v46 = **(void (***)(uint64_t, char *, uint64_t))(v44 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46(v43, v42 + 8, v45);
        uint64_t v47 = *((void *)v42 + 7);
        *((void *)v41 + 6) = *((void *)v42 + 6);
        *((void *)v41 + 7) = v47;
        uint64_t v67 = *((void *)v42 + 9);
        *((void *)v41 + 8) = *((void *)v42 + 8);
        *((void *)v41 + 9) = v67;
        *((void *)v41 + 10) = *((void *)v42 + 10);
        v41[88] = v42[88];
        *((void *)v41 + 12) = *((void *)v42 + 12);
        uint64_t v48 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v49 = v48[13];
        uint64_t v65 = &v42[v49];
        uint64_t v66 = &v41[v49];
        uint64_t v50 = sub_1C151787C();
        uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v51(v66, v65, v50);
        *(void *)&v41[v48[14]] = *(void *)&v42[v48[14]];
        *(void *)&v41[v48[15]] = *(void *)&v42[v48[15]];
        v41[v48[16]] = v42[v48[16]];
        *(void *)&v41[v48[17]] = *(void *)&v42[v48[17]];
        *(void *)&v41[v48[18]] = *(void *)&v42[v48[18]];
        *(void *)&v41[v48[19]] = *(void *)&v42[v48[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v31 = *(void *)v21;
        id v32 = *(id *)v21;
        uint64_t v33 = *((void *)v21 + 1);
        *uint64_t v70 = v31;
        v70[1] = v33;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C0AEF7B8();
      uint64_t v53 = *(int *)(v52 + 48);
      size_t v54 = (_OWORD *)((char *)a1 + v53);
      uint64_t v55 = (_OWORD *)((char *)a2 + v53);
      long long v56 = v55[13];
      v54[12] = v55[12];
      v54[13] = v56;
      long long v57 = v55[15];
      v54[14] = v55[14];
      v54[15] = v57;
      long long v58 = v55[9];
      v54[8] = v55[8];
      v54[9] = v58;
      long long v59 = v55[11];
      v54[10] = v55[10];
      v54[11] = v59;
      long long v60 = v55[5];
      v54[4] = v55[4];
      v54[5] = v60;
      long long v61 = v55[7];
      v54[6] = v55[6];
      v54[7] = v61;
      long long v62 = v55[1];
      *size_t v54 = *v55;
      v54[1] = v62;
      long long v63 = v55[3];
      v54[2] = v55[2];
      v54[3] = v63;
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      uint64_t v10 = a2[5];
      a1[4] = a2[4];
      a1[5] = v10;
      long long v11 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v11;
      long long v12 = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 6) = v12;
      uint64_t v13 = a2[15];
      a1[14] = a2[14];
      a1[15] = v13;
      a1[16] = a2[16];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  return a1;
}

uint64_t _s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwxx_0(id *a1)
{
  type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 3)
  {
    if (result != 2) {
      return result;
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v3 = (char *)a1 + *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
  type metadata accessor for InternalErrorViewModel();
  if (swift_getEnumCaseMultiPayload() != 1)
  {

LABEL_12:
    return swift_release();
  }
  swift_bridgeObjectRelease();
  if (*((void *)v3 + 2) >= 0xBuLL)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0AEFBB4();
  int v5 = &v3[*(int *)(v4 + 80)];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v5 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = &v5[*(int *)(type metadata accessor for GroupLayoutBindingContext() + 52)];
  uint64_t v7 = sub_1C151787C();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwcp_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    uint64_t v13 = (void *)a2[3];
    a1[2] = a2[2];
    a1[3] = v13;
    uint64_t v14 = (void *)a2[4];
    uint64_t v15 = (void *)a2[5];
    a1[4] = v14;
    a1[5] = v15;
    uint64_t v16 = (void *)a2[6];
    uint64_t v65 = (void *)a2[7];
    a1[6] = v16;
    a1[7] = v65;
    uint64_t v66 = (void *)a2[8];
    a1[8] = v66;
    uint64_t v17 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    uint64_t v67 = (void *)((char *)a1 + v17);
    int v18 = (char *)a2 + v17;
    type metadata accessor for InternalErrorViewModel();
    swift_bridgeObjectRetain();
    swift_retain();
    id v19 = v13;
    id v20 = v14;
    id v21 = v15;
    id v22 = v16;
    id v23 = v65;
    id v24 = v66;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = *((void *)v18 + 1);
      void *v67 = *(void *)v18;
      v67[1] = v25;
      unint64_t v26 = *((void *)v18 + 2);
      swift_bridgeObjectRetain();
      if (v26 >= 0xB)
      {
        uint64_t v31 = *((void *)v18 + 3);
        uint64_t v32 = *((void *)v18 + 4);
        v67[2] = v26;
        v67[3] = v31;
        uint64_t v33 = *((void *)v18 + 5);
        uint64_t v34 = *((void *)v18 + 6);
        v67[4] = v32;
        v67[5] = v33;
        v67[6] = v34;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v27 = *((_OWORD *)v18 + 2);
        *((_OWORD *)v67 + 1) = *((_OWORD *)v18 + 1);
        *((_OWORD *)v67 + 2) = v27;
        v67[6] = *((void *)v18 + 6);
      }
      uint64_t v35 = *((void *)v18 + 8);
      v67[7] = *((void *)v18 + 7);
      v67[8] = v35;
      v67[9] = *((void *)v18 + 9);
      sub_1C0AEFBB4();
      uint64_t v37 = *(int *)(v36 + 80);
      uint64_t v38 = (char *)v67 + v37;
      uint64_t v39 = &v18[v37];
      char *v38 = v18[v37];
      uint64_t v40 = (uint64_t)v67 + v37 + 8;
      long long v41 = *((_OWORD *)v39 + 2);
      *((_OWORD *)v38 + 2) = v41;
      uint64_t v42 = v41;
      uint64_t v43 = **(void (***)(uint64_t, char *, uint64_t))(v41 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43(v40, v39 + 8, v42);
      uint64_t v44 = *((void *)v39 + 7);
      *((void *)v38 + 6) = *((void *)v39 + 6);
      *((void *)v38 + 7) = v44;
      uint64_t v64 = *((void *)v39 + 9);
      *((void *)v38 + 8) = *((void *)v39 + 8);
      *((void *)v38 + 9) = v64;
      *((void *)v38 + 10) = *((void *)v39 + 10);
      v38[88] = v39[88];
      *((void *)v38 + 12) = *((void *)v39 + 12);
      uint64_t v45 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v46 = v45[13];
      long long v62 = &v39[v46];
      long long v63 = &v38[v46];
      uint64_t v47 = sub_1C151787C();
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48(v63, v62, v47);
      *(void *)&v38[v45[14]] = *(void *)&v39[v45[14]];
      *(void *)&v38[v45[15]] = *(void *)&v39[v45[15]];
      v38[v45[16]] = v39[v45[16]];
      *(void *)&v38[v45[17]] = *(void *)&v39[v45[17]];
      *(void *)&v38[v45[18]] = *(void *)&v39[v45[18]];
      *(void *)&v38[v45[19]] = *(void *)&v39[v45[19]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v28 = *(void *)v18;
      id v29 = *(id *)v18;
      uint64_t v30 = *((void *)v18 + 1);
      void *v67 = v28;
      v67[1] = v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    sub_1C0AEF7B8();
    uint64_t v50 = *(int *)(v49 + 48);
    uint64_t v51 = (_OWORD *)((char *)a1 + v50);
    uint64_t v52 = (_OWORD *)((char *)a2 + v50);
    long long v53 = v52[13];
    v51[12] = v52[12];
    v51[13] = v53;
    long long v54 = v52[15];
    v51[14] = v52[14];
    v51[15] = v54;
    long long v55 = v52[9];
    v51[8] = v52[8];
    v51[9] = v55;
    long long v56 = v52[11];
    v51[10] = v52[10];
    v51[11] = v56;
    long long v57 = v52[5];
    v51[4] = v52[4];
    v51[5] = v57;
    long long v58 = v52[7];
    v51[6] = v52[6];
    v51[7] = v58;
    long long v59 = v52[1];
    *uint64_t v51 = *v52;
    v51[1] = v59;
    long long v60 = v52[3];
    v51[2] = v52[2];
    v51[3] = v60;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    long long v9 = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 4) = v9;
    long long v10 = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 6) = v10;
    uint64_t v11 = a2[15];
    a1[14] = a2[14];
    a1[15] = v11;
    a1[16] = a2[16];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

void *_s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwca_0(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C0086EAC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    uint64_t v4 = type metadata accessor for FeedItemSupplementaryAttributes();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v8 = (void *)a2[3];
      a1[3] = v8;
      long long v9 = (void *)a2[4];
      a1[4] = v9;
      long long v10 = (void *)a2[5];
      a1[5] = v10;
      uint64_t v11 = (void *)a2[6];
      a1[6] = v11;
      long long v55 = (void *)a2[7];
      a1[7] = v55;
      long long v56 = (void *)a2[8];
      a1[8] = v56;
      uint64_t v12 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      long long v57 = (void *)((char *)a1 + v12);
      uint64_t v13 = (char *)a2 + v12;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      id v14 = v8;
      id v15 = v9;
      id v16 = v10;
      id v17 = v11;
      id v18 = v55;
      id v19 = v56;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *long long v57 = *(void *)v13;
        v57[1] = *((void *)v13 + 1);
        unint64_t v20 = *((void *)v13 + 2);
        swift_bridgeObjectRetain();
        if (v20 >= 0xB)
        {
          v57[2] = v20;
          v57[3] = *((void *)v13 + 3);
          v57[4] = *((void *)v13 + 4);
          v57[5] = *((void *)v13 + 5);
          v57[6] = *((void *)v13 + 6);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v21 = *((_OWORD *)v13 + 1);
          long long v22 = *((_OWORD *)v13 + 2);
          v57[6] = *((void *)v13 + 6);
          *((_OWORD *)v57 + 1) = v21;
          *((_OWORD *)v57 + 2) = v22;
        }
        v57[7] = *((void *)v13 + 7);
        v57[8] = *((void *)v13 + 8);
        v57[9] = *((void *)v13 + 9);
        sub_1C0AEFBB4();
        uint64_t v26 = *(int *)(v25 + 80);
        long long v27 = (char *)v57 + v26;
        uint64_t v28 = &v13[v26];
        char *v27 = v13[v26];
        uint64_t v29 = (uint64_t)v57 + v26 + 8;
        uint64_t v30 = *((void *)v28 + 4);
        *((void *)v27 + 4) = v30;
        *((void *)v27 + 5) = *((void *)v28 + 5);
        uint64_t v31 = **(void (***)(uint64_t, char *, uint64_t))(v30 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v29, v28 + 8, v30);
        *((void *)v27 + 6) = *((void *)v28 + 6);
        *((void *)v27 + 7) = *((void *)v28 + 7);
        *((void *)v27 + 8) = *((void *)v28 + 8);
        *((void *)v27 + 9) = *((void *)v28 + 9);
        *((void *)v27 + 10) = *((void *)v28 + 10);
        v27[88] = v28[88];
        *((void *)v27 + 12) = *((void *)v28 + 12);
        uint64_t v32 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v33 = v32[13];
        long long v53 = &v28[v33];
        long long v54 = &v27[v33];
        uint64_t v34 = sub_1C151787C();
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v35(v54, v53, v34);
        *(void *)&v27[v32[14]] = *(void *)&v28[v32[14]];
        *(void *)&v27[v32[15]] = *(void *)&v28[v32[15]];
        v27[v32[16]] = v28[v32[16]];
        *(void *)&v27[v32[17]] = *(void *)&v28[v32[17]];
        *(void *)&v27[v32[18]] = *(void *)&v28[v32[18]];
        *(void *)&v27[v32[19]] = *(void *)&v28[v32[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v23 = *(void *)v13;
        id v24 = *(id *)v13;
        *long long v57 = v23;
        v57[1] = *((void *)v13 + 1);
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C0AEF7B8();
      uint64_t v37 = *(int *)(v36 + 48);
      uint64_t v38 = (_OWORD *)((char *)a1 + v37);
      uint64_t v39 = (long long *)((char *)a2 + v37);
      long long v40 = v39[12];
      long long v41 = v39[13];
      long long v42 = v39[15];
      v38[14] = v39[14];
      v38[15] = v42;
      v38[12] = v40;
      v38[13] = v41;
      long long v43 = v39[8];
      long long v44 = v39[9];
      long long v45 = v39[11];
      v38[10] = v39[10];
      v38[11] = v45;
      v38[8] = v43;
      v38[9] = v44;
      long long v46 = v39[4];
      long long v47 = v39[5];
      long long v48 = v39[7];
      v38[6] = v39[6];
      v38[7] = v48;
      v38[4] = v46;
      v38[5] = v47;
      long long v49 = *v39;
      long long v50 = v39[1];
      long long v51 = v39[3];
      v38[2] = v39[2];
      v38[3] = v51;
      _OWORD *v38 = v49;
      v38[1] = v50;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      long long v6 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v6;
      long long v7 = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 6) = v7;
      a1[14] = a2[14];
      a1[15] = a2[15];
      a1[16] = a2[16];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *_s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwtk_0(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    long long v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    long long v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    *((void *)a1 + 8) = *((void *)a2 + 8);
    uint64_t v7 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    uint64_t v8 = (char *)a1 + v7;
    long long v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for InternalErrorViewModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v11 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v11;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      uint64_t v12 = *((void *)v9 + 7);
      *((void *)v8 + 6) = *((void *)v9 + 6);
      *((void *)v8 + 7) = v12;
      *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
      sub_1C0AEFBB4();
      uint64_t v14 = *(int *)(v13 + 80);
      id v15 = &v8[v14];
      id v16 = &v9[v14];
      *id v15 = v9[v14];
      *((void *)v15 + 5) = *(void *)&v9[v14 + 40];
      *(_OWORD *)(v15 + 24) = *(_OWORD *)&v9[v14 + 24];
      *(_OWORD *)(v15 + 8) = *(_OWORD *)&v9[v14 + 8];
      long long v17 = *(_OWORD *)&v9[v14 + 64];
      *((_OWORD *)v15 + 3) = *(_OWORD *)&v9[v14 + 48];
      *((_OWORD *)v15 + 4) = v17;
      *((void *)v15 + 10) = *(void *)&v9[v14 + 80];
      v15[88] = v9[v14 + 88];
      *((void *)v15 + 12) = *(void *)&v9[v14 + 96];
      id v18 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v19 = v18[13];
      unint64_t v20 = &v15[v19];
      long long v21 = &v16[v19];
      uint64_t v22 = sub_1C151787C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      *(void *)&v15[v18[14]] = *(void *)&v16[v18[14]];
      *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
      v15[v18[16]] = v16[v18[16]];
      *(void *)&v15[v18[17]] = *(void *)&v16[v18[17]];
      *(void *)&v15[v18[18]] = *(void *)&v16[v18[18]];
      *(void *)&v15[v18[19]] = *(void *)&v16[v18[19]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    sub_1C0AEF7B8();
    uint64_t v24 = *(int *)(v23 + 48);
    uint64_t v25 = (_OWORD *)((char *)a1 + v24);
    uint64_t v26 = (_OWORD *)((char *)a2 + v24);
    long long v27 = v26[13];
    v25[12] = v26[12];
    v25[13] = v27;
    long long v28 = v26[15];
    v25[14] = v26[14];
    v25[15] = v28;
    long long v29 = v26[9];
    v25[8] = v26[8];
    v25[9] = v29;
    long long v30 = v26[11];
    v25[10] = v26[10];
    v25[11] = v30;
    long long v31 = v26[5];
    v25[4] = v26[4];
    v25[5] = v31;
    long long v32 = v26[7];
    v25[6] = v26[6];
    v25[7] = v32;
    long long v33 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v33;
    long long v34 = v26[3];
    uint64_t v25[2] = v26[2];
    v25[3] = v34;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *_s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwta_0(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1C0086EAC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    uint64_t v4 = type metadata accessor for FeedItemSupplementaryAttributes();
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      long long v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      long long v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      uint64_t v7 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      uint64_t v8 = (char *)a1 + v7;
      long long v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for InternalErrorViewModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v11 = *((_OWORD *)v9 + 1);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *((_OWORD *)v8 + 1) = v11;
        *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
        uint64_t v12 = *((void *)v9 + 7);
        *((void *)v8 + 6) = *((void *)v9 + 6);
        *((void *)v8 + 7) = v12;
        *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
        sub_1C0AEFBB4();
        uint64_t v14 = *(int *)(v13 + 80);
        id v15 = &v8[v14];
        id v16 = &v9[v14];
        *id v15 = v9[v14];
        *((void *)v15 + 5) = *(void *)&v9[v14 + 40];
        *(_OWORD *)(v15 + 24) = *(_OWORD *)&v9[v14 + 24];
        *(_OWORD *)(v15 + 8) = *(_OWORD *)&v9[v14 + 8];
        long long v17 = *(_OWORD *)&v9[v14 + 64];
        *((_OWORD *)v15 + 3) = *(_OWORD *)&v9[v14 + 48];
        *((_OWORD *)v15 + 4) = v17;
        *((void *)v15 + 10) = *(void *)&v9[v14 + 80];
        v15[88] = v9[v14 + 88];
        *((void *)v15 + 12) = *(void *)&v9[v14 + 96];
        id v18 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v19 = v18[13];
        unint64_t v20 = &v15[v19];
        long long v21 = &v16[v19];
        uint64_t v22 = sub_1C151787C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        *(void *)&v15[v18[14]] = *(void *)&v16[v18[14]];
        *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
        v15[v18[16]] = v16[v18[16]];
        *(void *)&v15[v18[17]] = *(void *)&v16[v18[17]];
        *(void *)&v15[v18[18]] = *(void *)&v16[v18[18]];
        *(void *)&v15[v18[19]] = *(void *)&v16[v18[19]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      }
      sub_1C0AEF7B8();
      uint64_t v24 = *(int *)(v23 + 48);
      uint64_t v25 = (_OWORD *)((char *)a1 + v24);
      uint64_t v26 = (_OWORD *)((char *)a2 + v24);
      long long v27 = v26[13];
      v25[12] = v26[12];
      v25[13] = v27;
      long long v28 = v26[15];
      v25[14] = v26[14];
      v25[15] = v28;
      long long v29 = v26[9];
      v25[8] = v26[8];
      v25[9] = v29;
      long long v30 = v26[11];
      v25[10] = v26[10];
      v25[11] = v30;
      long long v31 = v26[5];
      v25[4] = v26[4];
      v25[5] = v31;
      long long v32 = v26[7];
      v25[6] = v26[6];
      v25[7] = v32;
      long long v33 = v26[1];
      *uint64_t v25 = *v26;
      v25[1] = v33;
      long long v34 = v26[3];
      uint64_t v25[2] = v26[2];
      v25[3] = v34;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwet_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwst_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t *sub_1C0DA71DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    long long v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C0DA72F8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0DA7374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0DA740C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *int v7 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v9 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0DA74B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0DA7544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0DA75E0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C0DA7734);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C0DA7748(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              id v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C0DA7938);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1C0DA7960(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0DA79C8(uint64_t a1)
{
  return sub_1C0086EAC(a1, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
}

uint64_t sub_1C0DA79E0(uint64_t a1)
{
  return sub_1C0086EAC(a1, type metadata accessor for FormatLayoutSectionDescriptor.Header);
}

uint64_t sub_1C0DA79F8()
{
  return sub_1BFEA48B8() & 1;
}

uint64_t FormatFontLineSizing.style.getter()
{
  return swift_retain();
}

uint64_t FormatFontLineSizing.numberOfLines.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DA7A28(uint64_t *a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = (uint64_t *)(*(uint64_t *)((char *)a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1BFF6B3AC(v4, (uint64_t)a1, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v2)
  {
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    unint64_t v11 = sub_1BFF45118(v27, v5);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v12 = MEMORY[0x1E4FBC860];
      if (v11)
      {
        uint64_t v26 = v9;
        uint64_t v28 = MEMORY[0x1E4FBC860];
        sub_1BFF661B8(0, v11, 0);
        uint64_t v12 = v28;
        unint64_t v13 = *(void *)(v28 + 16);
        uint64_t v14 = 16 * v13;
        do
        {
          unint64_t v15 = *(void *)(v28 + 24);
          unint64_t v16 = v13 + 1;
          if (v13 >= v15 >> 1) {
            sub_1BFF661B8(v15 > 1, v13 + 1, 1);
          }
          *(void *)(v28 + 16) = v16;
          uint64_t v17 = v28 + v14;
          *(void *)(v17 + 32) = 87;
          *(void *)(v17 + 40) = 0xE100000000000000;
          v14 += 16;
          unint64_t v13 = v16;
          --v11;
        }
        while (v11);
      }
      sub_1BFED9C20();
      sub_1BFE99E40();
      uint64_t v18 = sub_1C151E55C();
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      if (v9)
      {
        swift_retain_n();
        swift_retain();
        long long v21 = sub_1BFF636C0(v9, a1);
        sub_1BFF6492C(v21, v9, (objc_class *)a1, 18, v29);
        type metadata accessor for FormatAttributedString();
        swift_allocObject();
        swift_bridgeObjectRetain();
        sub_1BFF6364C((uint64_t)v29);
        sub_1BFF63168(v18, v20, (uint64_t)v29);
        sub_1BFF630AC((uint64_t)v29);
        sub_1BFF2BB80((uint64_t)a1);
        id v25 = v24;
        swift_release();
        sub_1BFF630AC((uint64_t)v29);
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        id v22 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        uint64_t v23 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v25 = objc_msgSend(v22, sel_initWithString_, v23);
      }
      objc_msgSend(v25, sel_boundingRectWithSize_options_context_, 33, 0, 1.79769313e308, 1.79769313e308, v26, v12);

      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C0DA7DF0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatFontLineSizing.init(from:)(a1, a2);
}

uint64_t sub_1C0DA7E08(void *a1)
{
  return FormatFontLineSizing.encode(to:)(a1);
}

uint64_t _s8NewsFeed20FormatFontLineSizingV2eeoiySbAC_ACtFZ_0(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  if (*a1)
  {
    if (v4)
    {
      swift_retain();
      uint64_t v5 = swift_retain();
      char v6 = _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v5, v4);
      swift_release();
      swift_release();
      if (v6) {
        goto LABEL_4;
      }
    }
  }
  else if (!v4)
  {
LABEL_4:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v7 = sub_1C00E0258(v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7 & 1;
  }
  return 0;
}

unint64_t sub_1C0DA7ED0(uint64_t a1)
{
  unint64_t result = sub_1C0DA7EF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DA7EF8()
{
  unint64_t result = qword_1EA1A7168;
  if (!qword_1EA1A7168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7168);
  }
  return result;
}

unint64_t sub_1C0DA7F4C(void *a1)
{
  a1[1] = sub_1C08B0FC8();
  a1[2] = sub_1C08F0A58();
  unint64_t result = sub_1C0DA7F84();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DA7F84()
{
  unint64_t result = qword_1EA1A7170;
  if (!qword_1EA1A7170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7170);
  }
  return result;
}

uint64_t destroy for FormatFontLineSizing()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed20FormatFontLineSizingVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatFontLineSizing(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FormatFontLineSizing(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatFontLineSizing()
{
  return &type metadata for FormatFontLineSizing;
}

uint64_t FeedSuggestionClusteringResult.clusters.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for FeedSuggestionClusteringResult()
{
  return &type metadata for FeedSuggestionClusteringResult;
}

uint64_t WebEmbedDataVisualizationURLDataSource.contentType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C025F810(v2, v3);
}

uint64_t WebEmbedDataVisualizationURLDataSource.key.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WebEmbedDataVisualizationURLDataSource.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t WebEmbedDataVisualizationURLDataSource.__allocating_init(contentType:key:url:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *a1;
  *(void *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = a3;
  uint64_t v9 = v8 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
  uint64_t v10 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a4, v10);
  return v8;
}

uint64_t WebEmbedDataVisualizationURLDataSource.init(contentType:key:url:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_OWORD *)(v4 + 16) = *a1;
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = a3;
  uint64_t v6 = v4 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
  uint64_t v7 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a4, v7);
  return v4;
}

uint64_t sub_1C0DA82F0()
{
  uint64_t v1 = 7955819;
  if (*v0 != 1) {
    uint64_t v1 = 7107189;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x54746E65746E6F63;
  }
}

uint64_t sub_1C0DA8344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0DA92D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0DA836C(uint64_t a1)
{
  unint64_t v2 = sub_1C0DA86FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DA83A8(uint64_t a1)
{
  unint64_t v2 = sub_1C0DA86FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WebEmbedDataVisualizationURLDataSource.deinit()
{
  sub_1C04452EC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
  uint64_t v2 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t WebEmbedDataVisualizationURLDataSource.__deallocating_deinit()
{
  sub_1C04452EC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
  uint64_t v2 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t WebEmbedDataVisualizationURLDataSource.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0DA8B84(0, &qword_1EB86B9E8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DA86FC();
  sub_1C1520F0C();
  long long v12 = *(_OWORD *)(v3 + 16);
  v11[15] = 0;
  sub_1C0DA8750();
  sub_1C152078C();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1C15207CC();
    LOBYTE(v12) = 2;
    sub_1C1515FDC();
    sub_1BFEBF3E8((unint64_t *)&unk_1EB8710F0);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0DA86FC()
{
  unint64_t result = qword_1EB86A890;
  if (!qword_1EB86A890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A890);
  }
  return result;
}

unint64_t sub_1C0DA8750()
{
  unint64_t result = qword_1EB86AD50;
  if (!qword_1EB86AD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AD50);
  }
  return result;
}

uint64_t WebEmbedDataVisualizationURLDataSource.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  WebEmbedDataVisualizationURLDataSource.init(from:)(a1);
  return v2;
}

uint64_t WebEmbedDataVisualizationURLDataSource.init(from:)(void *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DA8B84(0, &qword_1EB86B7D0, MEMORY[0x1E4FBBDC0]);
  uint64_t v20 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v16 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DA86FC();
  uint64_t v9 = v21;
  sub_1C1520EBC();
  if (v9)
  {
    swift_deallocPartialClassInstance();
    uint64_t v15 = (uint64_t)a1;
  }
  else
  {
    long long v21 = a1;
    uint64_t v10 = v5;
    uint64_t v12 = v18;
    uint64_t v11 = v19;
    char v23 = 0;
    sub_1C0DA8BE8();
    sub_1C152065C();
    *(_OWORD *)(v1 + 16) = v22;
    LOBYTE(v22) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v13;
    LOBYTE(v22) = 2;
    sub_1BFEBF3E8((unint64_t *)&unk_1EB871120);
    uint64_t v17 = v10;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v1 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v17, v3);
    uint64_t v15 = (uint64_t)v21;
  }
  __swift_destroy_boxed_opaque_existential_1(v15);
  return v1;
}

void sub_1C0DA8B84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0DA86FC();
    unint64_t v7 = a3(a1, &type metadata for WebEmbedDataVisualizationURLDataSource.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0DA8BE8()
{
  unint64_t result = qword_1EB86AD60;
  if (!qword_1EB86AD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AD60);
  }
  return result;
}

uint64_t sub_1C0DA8C3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = WebEmbedDataVisualizationURLDataSource.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0DA8C94(void *a1)
{
  return WebEmbedDataVisualizationURLDataSource.encode(to:)(a1);
}

uint64_t sub_1C0DA8CB8()
{
  return type metadata accessor for WebEmbedDataVisualizationURLDataSource();
}

uint64_t type metadata accessor for WebEmbedDataVisualizationURLDataSource()
{
  uint64_t result = qword_1EB86A8C8;
  if (!qword_1EB86A8C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0DA8D0C()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for WebEmbedDataVisualizationURLDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WebEmbedDataVisualizationURLDataSource);
}

uint64_t dispatch thunk of WebEmbedDataVisualizationURLDataSource.__allocating_init(contentType:key:url:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of WebEmbedDataVisualizationURLDataSource.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for WebEmbedDataVisualizationURLDataSource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DA8ED0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDataVisualizationURLDataSource.CodingKeys()
{
  return &type metadata for WebEmbedDataVisualizationURLDataSource.CodingKeys;
}

unint64_t sub_1C0DA8F0C()
{
  unint64_t result = qword_1EA1A7178;
  if (!qword_1EA1A7178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7178);
  }
  return result;
}

unint64_t sub_1C0DA8F64()
{
  unint64_t result = qword_1EB86A8A0;
  if (!qword_1EB86A8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A8A0);
  }
  return result;
}

unint64_t sub_1C0DA8FBC()
{
  unint64_t result = qword_1EB86A898;
  if (!qword_1EB86A898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A898);
  }
  return result;
}

uint64_t sub_1C0DA9010(long long *a1, uint64_t a2)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v23 - v12;
  v23[0] = a2;
  uint64_t v14 = sub_1C1515E2C();
  uint64_t v15 = *((void *)a1 + 5);
  *(void *)&long long v25 = v14;
  *((void *)&v25 + 1) = v16;
  swift_bridgeObjectRetain();
  v23[1] = v15;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C1515F7C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(void, uint64_t))(v8 + 8))(v23[0], v7);
    long long v25 = *a1;
    sub_1BFF5E6C8((uint64_t)&v25);
    long long v24 = a1[1];
    sub_1BFF5E6C8((uint64_t)&v24);
    swift_bridgeObjectRelease();
    sub_1C002F608((uint64_t)v6);
    return 0;
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v18(v13, v6, v7);
    uint64_t v20 = *(void *)a1;
    uint64_t v19 = *((void *)a1 + 1);
    swift_bridgeObjectRetain();
    WebEmbedDataVisualizationURLDataSourceContentType.init(rawValue:)(v20, v19, &v24);
    (*(void (**)(void, uint64_t))(v8 + 8))(v23[0], v7);
    long long v21 = v24;
    long long v25 = a1[1];
    v18(v10, v13, v7);
    type metadata accessor for WebEmbedDataVisualizationURLDataSource();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = v21;
    *(_OWORD *)(v17 + 32) = v25;
    v18((char *)(v17 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url), v10, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v17;
}

uint64_t sub_1C0DA92D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7955819 && a2 == 0xE300000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t PuzzleEmbedSubmitScoreHandler.delegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v1);
}

uint64_t PuzzleEmbedSubmitScoreHandler.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*PuzzleEmbedSubmitScoreHandler.delegate.modify(void *a1))()
{
  int v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C019A6A4;
}

id PuzzleEmbedSubmitScoreHandler.__allocating_init(scriptsManager:)(uint64_t a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_scriptsManager] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id PuzzleEmbedSubmitScoreHandler.init(scriptsManager:)(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_scriptsManager] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id PuzzleEmbedSubmitScoreHandler.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PuzzleEmbedSubmitScoreHandler.init()()
{
}

id PuzzleEmbedSubmitScoreHandler.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C0DA9764()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v1);
}

uint64_t sub_1C0DA97B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1C0DA9820(void *a1))()
{
  int v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C019A6A4;
}

void _s8NewsFeed29PuzzleEmbedSubmitScoreHandlerC10didReceive_14securityOriginySo9SWMessage_p_So0l8SecurityK0_ptF_0(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_body);
  uint64_t v5 = sub_1C151E33C();

  unint64_t v6 = sub_1C147180C(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    if (*(void *)(v6 + 16))
    {
      unint64_t v7 = sub_1BFEF2D8C(0x65726F6373, 0xE500000000000000);
      if (v8)
      {
        sub_1BFF6A008(*(void *)(v6 + 56) + 32 * v7, (uint64_t)v32);
        if (swift_dynamicCast())
        {
          uint64_t v9 = v33;
          if (qword_1EB8814A0 != -1) {
            swift_once();
          }
          uint64_t v10 = sub_1C15198DC();
          __swift_project_value_buffer(v10, (uint64_t)qword_1EB93C7A8);
          swift_bridgeObjectRetain();
          uint64_t v11 = sub_1C15198AC();
          os_log_type_t v12 = sub_1C151F38C();
          if (os_log_type_enabled(v11, v12))
          {
            uint64_t v30 = v9;
            uint64_t v13 = (uint8_t *)swift_slowAlloc();
            uint64_t v14 = swift_slowAlloc();
            v32[0] = v14;
            *(_DWORD *)uint64_t v13 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v15 = sub_1C151E34C();
            unint64_t v17 = v16;
            swift_bridgeObjectRelease();
            uint64_t v33 = sub_1BFDA76EC(v15, v17, v32);
            sub_1C151FE1C();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BFC31000, v11, v12, "PuzzleEmbedSubmitScoreHandler received: %s", v13, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C18C9B00](v14, -1, -1);
            uint64_t v18 = v13;
            uint64_t v9 = v30;
            MEMORY[0x1C18C9B00](v18, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          uint64_t v27 = v2 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
          swift_beginAccess();
          if (MEMORY[0x1C18C9C60](v27))
          {
            uint64_t v28 = *(void *)(v27 + 8);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v28 + 8))(v2, &protocol witness table for PuzzleEmbedSubmitScoreHandler, v9, ObjectType, v28);
            swift_unknownObjectRelease();
          }
          return;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C15198DC();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB93C7A8);
  swift_unknownObjectRetain_n();
  uint64_t v20 = sub_1C15198AC();
  os_log_type_t v21 = sub_1C151F36C();
  if (os_log_type_enabled(v20, v21))
  {
    long long v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v32[0] = v31;
    *(_DWORD *)long long v22 = 136315138;
    id v23 = objc_msgSend(a1, sel_body);
    sub_1C151E33C();

    uint64_t v24 = sub_1C151E34C();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_1BFDA76EC(v24, v26, v32);
    sub_1C151FE1C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v20, v21, "PuzzleEmbedSubmitScoreHandler received invalid message %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v31, -1, -1);
    MEMORY[0x1C18C9B00](v22, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_1C0DA9E04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1C0DA9E60(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of PuzzleEmbedSubmitScoreMessageHandlerType.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedSubmitScoreMessageHandlerType.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedSubmitScoreMessageHandlerType.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PuzzleEmbedSubmitScoreMessageHandlerDelegate.puzzleEmbedSubmitScoreMessageHandler(_:didSubmitScore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for PuzzleEmbedSubmitScoreHandler()
{
  return self;
}

uint64_t method lookup function for PuzzleEmbedSubmitScoreHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleEmbedSubmitScoreHandler);
}

uint64_t dispatch thunk of PuzzleEmbedSubmitScoreHandler.__allocating_init(scriptsManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void static URLHandlerPattern.Base.news.getter(uint64_t (**a1)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)@<X8>)
{
  *a1 = sub_1C0DA9F7C;
  a1[1] = 0;
}

uint64_t sub_1C0DA9F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C0DAA610(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t static URLHandlerPattern.newsURLHandlerPatterns(paths:fragment:params:conditions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C0DAA610(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t static URLHandlerPattern.newsURLHandlerPatterns(paths:params:conditions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C0DAA610(a1, 0, 0, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C0DAA130@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  if (a4) {
    uint64_t v12 = a4;
  }
  else {
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = static URLHandlerPattern.newsURLHandlerPatterns(path:fragment:params:conditions:)(v10, v11, a2, a3, v12, a5);
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = v13;
  return result;
}

uint64_t static URLHandlerPattern.newsURLHandlerPatterns(path:fragment:params:conditions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C0DAA868();
  sub_1C15188CC();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C154B600;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C03E0](1886680168, 0xE400000000000000, 0x7070612E7377656ELL, 0xEE006D6F632E656CLL, a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C03E0](1886680168, 0xE400000000000000, 0x6C7070612E656E6FLL, 0xED00006D6F632E65, a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C03E0](0x7370747468, 0xE500000000000000, 0x7070612E7377656ELL, 0xEE006D6F632E656CLL, a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C03E0](1886680168, 0xE400000000000000, 0x656E2E656C707061, 0xEA00000000007377, a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C03E0](0x7370747468, 0xE500000000000000, 0x656E2E656C707061, 0xEA00000000007377, a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C03E0](0x7370747468, 0xE500000000000000, 0x6C7070612E656E6FLL, 0xED00006D6F632E65, a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C03E0](0x77656E656C707061, 0xE900000000000073, 0, 0, a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C03E0](0x77656E656C707061, 0xEA00000000007373, 0, 0, a1, a2, a3, a4, a5, a6);
  return v13;
}

uint64_t sub_1C0DAA610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = MEMORY[0x1E4FBC860];
  if (!v5) {
    return v6;
  }
  if (a4) {
    uint64_t v7 = a4;
  }
  else {
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  for (unint64_t i = (uint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
  {
    uint64_t v10 = *(i - 1);
    uint64_t v9 = *i;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = static URLHandlerPattern.newsURLHandlerPatterns(path:fragment:params:conditions:)(v10, v9, a2, a3, v7, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 16);
    int64_t v13 = *(void *)(v6 + 16);
    int64_t v14 = v13 + v12;
    if (__OFADD__(v13, v12)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v14 <= *(void *)(v6 + 24) >> 1)
    {
      if (*(void *)(v11 + 16)) {
        goto LABEL_17;
      }
    }
    else
    {
      if (v13 <= v14) {
        int64_t v16 = v13 + v12;
      }
      else {
        int64_t v16 = v13;
      }
      unint64_t v6 = sub_1C0EE81A4(isUniquelyReferenced_nonNull_native, v16, 1, v6);
      if (*(void *)(v11 + 16))
      {
LABEL_17:
        uint64_t v17 = *(void *)(v6 + 16);
        uint64_t v18 = (*(void *)(v6 + 24) >> 1) - v17;
        uint64_t v19 = *(void *)(sub_1C15188CC() - 8);
        uint64_t v20 = *(void *)(v19 + 72);
        if (v18 < v12) {
          goto LABEL_30;
        }
        unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
        unint64_t v22 = v6 + v21 + v20 * v17;
        unint64_t v23 = v11 + v21;
        uint64_t v24 = v20 * v12;
        unint64_t v25 = v22 + v24;
        unint64_t v26 = v23 + v24;
        if (v23 < v25 && v22 < v26) {
          goto LABEL_32;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v28 = *(void *)(v6 + 16);
          BOOL v29 = __OFADD__(v28, v12);
          uint64_t v30 = v28 + v12;
          if (v29) {
            goto LABEL_31;
          }
          *(void *)(v6 + 16) = v30;
        }
        goto LABEL_7;
      }
    }
    if (v12) {
      goto LABEL_29;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1C0DAA868()
{
  if (!qword_1EB86F770)
  {
    sub_1C15188CC();
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86F770);
    }
  }
}

uint64_t sub_1C0DAA8C0(unsigned __int8 *a1, char *a2)
{
  return sub_1C148AFC0(*a1, *a2);
}

uint64_t sub_1C0DAA8CC()
{
  return sub_1C015E38C();
}

uint64_t sub_1C0DAA8D4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0DAA9C0()
{
  return sub_1C044FAB0();
}

void sub_1C0DAA9C8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000074;
  uint64_t v3 = 0x6E65727275437369;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x646961507369;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "isBundlePaid");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000010;
      *(void *)(a1 + 8) = 0x80000001C15FF8D0;
      break;
    case 4:
      *(void *)a1 = 0x74666172447369;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C0DAAA90()
{
  return sub_1C151EAEC();
}

void sub_1C0DAAAE0(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A130;
}

BOOL static FormatIssueBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatIssueBinding.Bool.hash(into:)()
{
  return sub_1C1520DCC();
}

void *static FormatIssueBinding.Bool.allCases.getter()
{
  return &unk_1F1B89FC0;
}

uint64_t FormatIssueBinding.Bool.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0DAAB88()
{
  unint64_t result = qword_1EA1A71F0;
  if (!qword_1EA1A71F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A71F0);
  }
  return result;
}

unint64_t sub_1C0DAABDC(uint64_t a1)
{
  unint64_t result = sub_1C0DAAC04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DAAC04()
{
  unint64_t result = qword_1EA1A71F8;
  if (!qword_1EA1A71F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A71F8);
  }
  return result;
}

uint64_t sub_1C0DAAC58()
{
  return sub_1C0293CE4(&qword_1EA1A7200, &qword_1EA1A7208);
}

void sub_1C0DAAC88(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A158;
}

unint64_t sub_1C0DAAC98(void *a1)
{
  a1[1] = sub_1BFDAE8F8();
  a1[2] = sub_1C08FABB4();
  unint64_t result = sub_1C0DAAB88();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0DAACD0(void *a1)
{
  return FormatIssueBinding.Bool.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Bool()
{
  return &type metadata for FormatIssueBinding.Bool;
}

ValueMetadata *_s4BoolO10CodingTypeOMa_3()
{
  return &_s4BoolO10CodingTypeON_3;
}

uint64_t sub_1C0DAAD30()
{
  return sub_1C0293CE4(&qword_1EA1A7210, &qword_1EA1A7218);
}

unint64_t sub_1C0DAAD64()
{
  unint64_t result = qword_1EA1A7220;
  if (!qword_1EA1A7220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7220);
  }
  return result;
}

uint64_t sub_1C0DAADB8@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  switch(*a1)
  {
    case 1:
      unsigned __int8 v10 = objc_msgSend(*(id *)a2, sel_isPaid);
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v11 = (unsigned __int8 *)a3 + *(int *)(v5 + 24);
      *uint64_t v11 = v10;
      uint64_t v12 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
      unint64_t v8 = 0xE700000000000000;
      unint64_t v9 = 0x64696150207349;
      break;
    case 2:
      unsigned __int8 v13 = objc_msgSend(*(id *)a2, sel_isBundlePaid);
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      int64_t v14 = (unsigned __int8 *)a3 + *(int *)(v5 + 24);
      *int64_t v14 = v13;
      uint64_t v15 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
      unint64_t v8 = 0xEE00646961502065;
      unint64_t v9 = 0x6C646E7542207349;
      break;
    case 3:
      BOOL v16 = *(unsigned char *)(a2 + 25) != 0;
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v17 = (BOOL *)a3 + *(int *)(v5 + 24);
      *uint64_t v17 = v16;
      uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
      unint64_t v8 = 0x80000001C1627C00;
      unint64_t v9 = 0xD000000000000012;
      break;
    case 4:
      unsigned __int8 v19 = objc_msgSend(*(id *)a2, sel_isDraft);
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v20 = (unsigned __int8 *)a3 + *(int *)(v5 + 24);
      *uint64_t v20 = v19;
      uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
      unint64_t v8 = 0xE800000000000000;
      unint64_t v9 = 0x7466617244207349;
      break;
    default:
      unsigned __int8 v4 = objc_msgSend(*(id *)a2, sel_isCurrent);
      uint64_t v5 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v6 = (unsigned __int8 *)a3 + *(int *)(v5 + 24);
      *unint64_t v6 = v4;
      uint64_t v7 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
      unint64_t v8 = 0xEA0000000000746ELL;
      unint64_t v9 = 0x6572727543207349;
      break;
  }
  *a3 = v9;
  a3[1] = v8;
  a3[2] = 0;
  a3[3] = 0;
  unint64_t v22 = (char *)a3 + *(int *)(v5 + 28);
  *(void *)unint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  v22[16] = -1;
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a3, 0, 1, v5);
}

uint64_t static CoverIssueViewLayout.makeCatalogLayout(context:factories:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  (*(void (**)(unsigned char *, void, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB8F8], v5);
  sub_1C0DAF890(0, (unint64_t *)&qword_1EB85C830, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  return sub_1C1517BEC();
}

uint64_t sub_1C0DAB2B0(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v17[-v9];
  uint64_t v11 = a2[40];
  uint64_t v12 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
  uint64_t v13 = a2[40];
  uint64_t v14 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 56))(v13, v14);
  uint64_t v20 = a1;
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA28], v7);
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0DAF890(0, &qword_1EB85C7F8, MEMORY[0x1E4FAB6F0]);
  sub_1C0DABBE0(&qword_1EB85C7F0, &qword_1EB85C7F8, v15);
  sub_1C151734C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C0DAB4F4(uint64_t a1)
{
  return sub_1C0DAB2B0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0DAB4FC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v56 = a3;
  long long v62 = a2;
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v47 - v7);
  uint64_t v66 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0x4024000000000000;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA08];
  long long v61 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  unsigned int v60 = v10;
  v61(v8, v10, v5);
  uint64_t v53 = v6 + 104;
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DAF890(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v13 = v12;
  uint64_t v14 = sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, v11);
  uint64_t v59 = v13;
  uint64_t v51 = v14;
  sub_1C151738C();
  uint64_t v15 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v15(v8, v5);
  long long v54 = v15;
  uint64_t v58 = v6 + 8;
  sub_1C0DAEA2C((uint64_t)v62, v56, a1);
  uint64_t v66 = a1;
  long long v57 = a1;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0x4030000000000000;
  *uint64_t v8 = v16;
  uint64_t v47 = v5;
  v61(v8, v10, v5);
  sub_1C151738C();
  v15(v8, v5);
  uint64_t v66 = a1;
  sub_1BFF35C38();
  uint64_t v18 = v17;
  uint64_t v56 = v17;
  uint64_t v52 = swift_allocBox();
  uint64_t v20 = v19;
  uint64_t v21 = (uint64_t *)(v19 + *(int *)(v18 + 48));
  unsigned int v55 = *MEMORY[0x1E4FAB790];
  uint64_t v22 = v55;
  uint64_t v23 = sub_1C151786C();
  uint64_t v24 = *(void *)(v23 - 8);
  unint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 104);
  uint64_t v26 = v24 + 104;
  uint64_t v48 = v23;
  v25(v20, v22, v23);
  uint64_t v49 = v26;
  uint64_t v27 = v25;
  long long v50 = v25;
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v62[40];
  uint64_t v30 = v62[41];
  uint64_t v31 = v62;
  __swift_project_boxed_opaque_existential_1(v62 + 37, v29);
  *(double *)(v28 + 16) = (*(double (**)(uint64_t, uint64_t))(v30 + 24))(v29, v30);
  *uint64_t v21 = v28;
  v27((uint64_t)v21, *MEMORY[0x1E4FAB798], v23);
  *uint64_t v8 = v52;
  LODWORD(v52) = *MEMORY[0x1E4FAB9E8];
  uint64_t v32 = v47;
  uint64_t v33 = v61;
  ((void (*)(uint64_t *))v61)(v8);
  uint64_t v65 = v31;
  sub_1C151731C();
  long long v34 = v54;
  v54(v8, v32);
  uint64_t v35 = v57;
  uint64_t v66 = v57;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = 0x401C000000000000;
  *uint64_t v8 = v36;
  v33(v8, v60, v32);
  sub_1C151738C();
  v34(v8, v32);
  uint64_t v66 = v35;
  uint64_t v37 = v56;
  uint64_t v38 = swift_allocBox();
  uint64_t v40 = v39 + *(int *)(v37 + 48);
  uint64_t v41 = v48;
  long long v42 = v50;
  v50(v39, v55, v48);
  v42(v40, *MEMORY[0x1E4FAB7B0], v41);
  *uint64_t v8 = v38;
  long long v43 = v61;
  v61(v8, v52, v32);
  uint64_t v64 = v62;
  sub_1C151731C();
  v34(v8, v32);
  long long v44 = v57;
  uint64_t v66 = v57;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = 0x4038000000000000;
  *uint64_t v8 = v45;
  v43(v8, v60, v32);
  sub_1C151738C();
  v34(v8, v32);
  uint64_t v66 = v44;
  long long v63 = v62;
  v43(v8, *MEMORY[0x1E4FAB9E0], v32);
  sub_1C15173FC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v34)(v8, v32);
}

uint64_t sub_1C0DABBC8(void *a1)
{
  return sub_1C0DAB4FC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0DABBD0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0DABBE0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0DAF890(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0DABC24(uint64_t a1, uint64_t a2)
{
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v29 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + 336);
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        *uint64_t v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    id v31 = *(id *)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v31;
    *uint64_t v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9C0], v5);
    sub_1C0350804();
    sub_1C0DAF520(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
    uint64_t v17 = v6;
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    uint64_t v30 = v5;
    uint64_t v21 = v20;
    unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C1529AE0;
    unint64_t v24 = v23 + v22;
    uint64_t v25 = *MEMORY[0x1E4FAB600];
    sub_1C0DAF520(0, &qword_1EB85C7C8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
    (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v24, *MEMORY[0x1E4FAB620], v19);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0DAF890(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, v27);
    sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v28 = v31;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v17 + 8))(v8, v30);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0DAC0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v58 = a1;
  long long v57 = sub_1C01BC7F0;
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  uint64_t v53 = v6;
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v40 - v7);
  uint64_t v9 = (void *)sub_1C0DAF32C(a2);
  id v48 = v9;
  uint64_t v60 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  uint64_t v51 = v8;
  *uint64_t v8 = v10;
  uint64_t v11 = *MEMORY[0x1E4FAB968];
  uint64_t v12 = *(void (**)(uint64_t *, void, uint64_t))(v6 + 104);
  uint64_t v55 = v6 + 104;
  uint64_t v56 = v12;
  v12(v8, v11, v5);
  sub_1C0350804();
  uint64_t v50 = v13;
  sub_1C0DAF520(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v59 = *(void *)(v16 + 72);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (v17 + 32) & ~v17;
  uint64_t v47 = v18;
  uint64_t v49 = v17 | 7;
  uint64_t v19 = swift_allocObject();
  uint64_t v43 = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
  uint64_t v20 = v19 + v18;
  *(void *)(v19 + v18) = 0x4034000000000000;
  LODWORD(v42) = *MEMORY[0x1E4FAB7E8];
  uint64_t v21 = v42;
  uint64_t v22 = sub_1C15178EC();
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);
  v41(v20, v21, v22);
  uint64_t v23 = *MEMORY[0x1E4FAB858];
  uint64_t v24 = sub_1C15179EC();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);
  v25(v20, v23, v24);
  uint64_t v26 = *MEMORY[0x1E4FAB550];
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
  uint64_t v45 = v15;
  v27(v20, v26, v15);
  long long v44 = v27;
  uint64_t v46 = v16 + 104;
  id v28 = (void *)(v20 + v59);
  void *v28 = 0x4008000000000000;
  v41((uint64_t)v28, v42, v22);
  v25((uint64_t)v28, v23, v24);
  v27((uint64_t)v28, *MEMORY[0x1E4FAB560], v15);
  uint64_t v29 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DAF890(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v42 = v30;
  sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, v29);
  sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  id v48 = v48;
  id v31 = v51;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v32 = v52;
  uint64_t v33 = *(void (**)(uint64_t *, uint64_t))(v53 + 8);
  v33(v31, v52);
  uint64_t v60 = v58;
  swift_getKeyPath();
  v56(v31, *MEMORY[0x1E4FAB9F0], v32);
  uint64_t v34 = v47;
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1C1529AE0;
  uint64_t v36 = v35 + v34;
  uint64_t v37 = *MEMORY[0x1E4FAB610];
  sub_1C0DAF520(0, &qword_1EB85C7C8, (uint64_t (*)(void))v57, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
  v44(v36, *MEMORY[0x1E4FAB620], v45);
  sub_1C151737C();

  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v33)(v31, v32);
}

uint64_t sub_1C0DAC6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v94 = a1;
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v96 = v4;
  uint64_t v97 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v95 = (void *)((char *)v73 - v6);
  uint64_t v98 = a1;
  uint64_t KeyPath = (uint64_t (*)(uint64_t *, uint64_t))swift_getKeyPath();
  sub_1C0DAF238();
  uint64_t v8 = v7;
  uint64_t v85 = swift_allocBox();
  uint64_t v10 = v9;
  uint64_t v11 = (uint64_t *)((char *)v9 + *(int *)(v8 + 48));
  uint64_t v84 = (uint64_t)v9 + *(int *)(v8 + 64);
  uint64_t v12 = swift_allocObject();
  sub_1BFF66964(a2 + 152, (uint64_t)v99, (unint64_t *)&qword_1EB882CD0);
  *(unsigned char *)(v12 + 16) = sub_1C00A0A24(v99) != 0;
  *uint64_t v10 = v12;
  uint64_t v13 = *MEMORY[0x1E4FAB520];
  sub_1C0DAF520(0, &qword_1EA1A7230, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB530]);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v10, v13, v14);
  sub_1BFF35C38();
  uint64_t v16 = v15;
  uint64_t v17 = swift_allocBox();
  uint64_t v19 = v18;
  uint64_t v20 = (uint64_t *)(v18 + *(int *)(v16 + 48));
  uint64_t v21 = *MEMORY[0x1E4FAB790];
  uint64_t v22 = sub_1C151786C();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v23 + 104);
  uint64_t v25 = v23 + 104;
  uint64_t v88 = v22;
  v24(v19, v21);
  uint64_t v91 = v25;
  uint64_t v90 = v24;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = 0x4000000000000000;
  *uint64_t v20 = v26;
  unsigned int v89 = *MEMORY[0x1E4FAB798];
  ((void (*)(uint64_t *))v24)(v20);
  *uint64_t v11 = v17;
  LODWORD(v92) = *MEMORY[0x1E4FAB9E8];
  uint64_t v28 = v97 + 104;
  uint64_t v27 = *(void (**)(void))(v97 + 104);
  uint64_t v86 = (void (*)(uint64_t *, void, uint64_t))v27;
  uint64_t v29 = v96;
  v27(v11);
  ((void (*)(uint64_t, void, uint64_t))v27)(v84, *MEMORY[0x1E4FAB9F0], v29);
  uint64_t v87 = v28;
  uint64_t v30 = v95;
  uint64_t *v95 = v85;
  id v31 = v30;
  ((void (*)(void))v27)();
  sub_1C0350804();
  uint64_t v85 = v32;
  sub_1C0DAF520(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v75 = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v83 = *(void *)(v34 + 72);
  uint64_t v35 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = (v35 + 32) & ~v35;
  uint64_t v82 = v36;
  uint64_t v84 = v35 | 7;
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C1529AE0;
  uint64_t v38 = v37 + v36;
  unsigned int v81 = *MEMORY[0x1E4FAB5E8];
  uint64_t v39 = v81;
  sub_1C0DAF520(0, &qword_1EB85C7C8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
  uint64_t v78 = v40;
  uint64_t v41 = *(void *)(v40 - 8);
  id v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 104);
  uint64_t v80 = v41 + 104;
  v79(v38, v39, v40);
  unsigned int v74 = *MEMORY[0x1E4FAB620];
  uint64_t v76 = *(void (**)(void))(v34 + 104);
  uint64_t v77 = v34 + 104;
  ((void (*)(uint64_t))v76)(v38);
  uint64_t v42 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DAF890(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  v73[3] = v43;
  v73[2] = sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, v42);
  v73[1] = sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  long long v44 = *(uint64_t (**)(uint64_t *, uint64_t))(v97 + 8);
  v97 += 8;
  uint64_t KeyPath = v44;
  uint64_t v45 = v31;
  uint64_t v46 = v96;
  v44(v31, v96);
  uint64_t v98 = v94;
  uint64_t v94 = swift_getKeyPath();
  uint64_t v47 = swift_allocBox();
  uint64_t v49 = v48;
  uint64_t v50 = (uint64_t *)((char *)v48 + *(int *)(v16 + 48));
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0x403C000000000000;
  *uint64_t v49 = v51;
  uint64_t v52 = v89;
  uint64_t v53 = v88;
  long long v54 = (void (*)(uint64_t *, uint64_t, uint64_t))v90;
  ((void (*)(uint64_t *, void, uint64_t))v90)(v49, v89, v88);
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = 0x403C000000000000;
  *uint64_t v50 = v55;
  v54(v50, v52, v53);
  *uint64_t v45 = v47;
  v86(v45, v92, v46);
  uint64_t v92 = 2 * v83;
  uint64_t v56 = v83;
  uint64_t v57 = v82;
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1C152C7F0;
  uint64_t v59 = v58 + v57;
  uint64_t v60 = v78;
  long long v61 = v79;
  v79(v59, v81, v78);
  uint64_t v62 = v74;
  uint64_t v63 = v75;
  uint64_t v64 = v76;
  ((void (*)(uint64_t, void, uint64_t))v76)(v59, v74, v75);
  uint64_t v65 = v59 + v56;
  v61(v65, *MEMORY[0x1E4FAB610], v60);
  ((void (*)(uint64_t, uint64_t, uint64_t))v64)(v65, v62, v63);
  __asm { FMOV            V0.2D, #-10.0 }
  *(_OWORD *)(v59 + v92) = _Q0;
  v64();
  uint64_t v71 = v95;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  return KeyPath(v71, v96);
}

uint64_t sub_1C0DACF84(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, double a5)
{
  uint64_t v16 = a1;
  sub_1C01BC5C8(a4, (uint64_t)__src);
  uint64_t v8 = swift_allocObject();
  *(double *)(v8 + 16) = a5;
  *(void *)(v8 + 24) = a2;
  long long v9 = a3[7];
  *(_OWORD *)(v8 + 128) = a3[6];
  *(_OWORD *)(v8 + 144) = v9;
  *(_OWORD *)(v8 + 153) = *(_OWORD *)((char *)a3 + 121);
  long long v10 = a3[3];
  *(_OWORD *)(v8 + 64) = a3[2];
  *(_OWORD *)(v8 + 80) = v10;
  long long v11 = a3[5];
  *(_OWORD *)(v8 + 96) = a3[4];
  *(_OWORD *)(v8 + 112) = v11;
  long long v12 = a3[1];
  *(_OWORD *)(v8 + 32) = *a3;
  *(_OWORD *)(v8 + 48) = v12;
  memcpy((void *)(v8 + 176), __src, 0x188uLL);
  swift_retain();
  sub_1C0187FB0((uint64_t)a3);
  uint64_t v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DAF890(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, v13);
  sub_1C151739C();
  return swift_release();
}

uint64_t sub_1C0DAD0D8(double a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5)
{
  sub_1C01BC5C8(a5, (uint64_t)__src);
  uint64_t v9 = swift_allocObject();
  *(double *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a3;
  long long v10 = a4[7];
  *(_OWORD *)(v9 + 128) = a4[6];
  *(_OWORD *)(v9 + 144) = v10;
  *(_OWORD *)(v9 + 153) = *(_OWORD *)((char *)a4 + 121);
  long long v11 = a4[3];
  *(_OWORD *)(v9 + 64) = a4[2];
  *(_OWORD *)(v9 + 80) = v11;
  long long v12 = a4[5];
  *(_OWORD *)(v9 + 96) = a4[4];
  *(_OWORD *)(v9 + 112) = v12;
  long long v13 = a4[1];
  *(_OWORD *)(v9 + 32) = *a4;
  *(_OWORD *)(v9 + 48) = v13;
  memcpy((void *)(v9 + 176), __src, 0x188uLL);
  swift_retain();
  sub_1C0187FB0((uint64_t)a4);
  sub_1C15175CC();
  swift_release();
  sub_1C01BC5C8(a5, (uint64_t)__src);
  uint64_t v14 = swift_allocObject();
  *(double *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a3;
  memcpy((void *)(v14 + 32), __src, 0x188uLL);
  swift_retain();
  sub_1C15175CC();
  return swift_release();
}

uint64_t sub_1C0DAD248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v36 = a4;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v32 = sub_1C01BC7F0;
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v37 = v7;
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v8 = v33;
  MEMORY[0x1F4188790](v7);
  long long v10 = (uint64_t *)((char *)&v31 - v9);
  uint64_t v42 = a1;
  sub_1BFF35C38();
  uint64_t v12 = v11;
  uint64_t v13 = swift_allocBox();
  uint64_t v15 = v14;
  uint64_t v16 = v14 + *(int *)(v12 + 48);
  uint64_t v17 = *MEMORY[0x1E4FAB790];
  uint64_t v18 = sub_1C151786C();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);
  v19(v15, v17, v18);
  v19(v16, *MEMORY[0x1E4FAB7B0], v18);
  *long long v10 = v13;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB9E8], v37);
  sub_1C0350804();
  uint64_t v20 = (uint64_t (*)(void))v32;
  sub_1C0DAF520(0, &qword_1EB85C7D8, (uint64_t (*)(void))v32, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
  unint64_t v26 = v25 + v24;
  uint64_t v27 = *MEMORY[0x1E4FAB5E8];
  sub_1C0DAF520(0, &qword_1EB85C7C8, v20, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v26, v27, v28);
  (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v26, *MEMORY[0x1E4FAB580], v22);
  double v38 = a5;
  uint64_t v39 = v34;
  uint64_t v40 = v35;
  uint64_t v41 = v36;
  uint64_t v29 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB538];
  sub_1C0DAF890(0, &qword_1EA1A7238, MEMORY[0x1E4FAB538]);
  sub_1C0DABBE0(&qword_1EA1A7240, &qword_1EA1A7238, v29);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v33 + 8))(v10, v37);
}

uint64_t sub_1C0DAD634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v30 = a2;
  uint64_t v33 = a1;
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v28 - v10);
  uint64_t v37 = a1;
  sub_1BFF35C38();
  uint64_t v13 = v12;
  uint64_t v29 = swift_allocBox();
  uint64_t v15 = v14;
  uint64_t v16 = (char *)v14 + *(int *)(v13 + 48);
  uint64_t v17 = sub_1C151786C();
  uint64_t v18 = swift_allocBox();
  uint64_t v20 = v19;
  uint64_t v21 = swift_allocObject();
  *(double *)(v21 + 16) = a5;
  *uint64_t v20 = v21;
  uint64_t v22 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104);
  v22(v20, *MEMORY[0x1E4FAB798], v17);
  *uint64_t v15 = v18;
  v22(v15, *MEMORY[0x1E4FAB7A0], v17);
  v22((uint64_t *)v16, *MEMORY[0x1E4FAB7B0], v17);
  *uint64_t v11 = v29;
  uint64_t v23 = *(void (**)(uint64_t *, void, uint64_t))(v9 + 104);
  v23(v11, *MEMORY[0x1E4FAB9E8], v8);
  uint64_t v34 = v30;
  uint64_t v35 = v31;
  uint64_t v36 = v32;
  unint64_t v24 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DAF890(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, v24);
  sub_1C151731C();
  uint64_t v25 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v25(v11, v8);
  uint64_t v37 = v33;
  uint64_t v26 = swift_allocObject();
  *(double *)(v26 + 16) = a5;
  *uint64_t v11 = v26;
  v23(v11, *MEMORY[0x1E4FABA08], v8);
  sub_1C151738C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v25)(v11, v8);
}

uint64_t sub_1C0DAD984(uint64_t a1, uint64_t a2, void **a3, void *a4)
{
  sub_1C0C27518();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v31 - v14;
  uint64_t v51 = a1;
  v31[1] = swift_getKeyPath();
  uint64_t v16 = *MEMORY[0x1E4FABA28];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  uint64_t v32 = v12;
  v17(v15, v16, v12);
  uint64_t v50 = *(void *)(a2 + 24);
  uint64_t v18 = *a3;
  sub_1BFF66964((uint64_t)(a3 + 9), (uint64_t)v52, &qword_1EB85CE38);
  sub_1BFF66964((uint64_t)v52, (uint64_t)v53, &qword_1EB85CE38);
  if (*((void *)&v53[0] + 1) == 1
    || (v53[3] = v53[0],
        void v53[4] = v53[1],
        long long v54 = v53[2],
        sub_1BFF66964((uint64_t)&v54, (uint64_t)v55, &qword_1EA1A7248),
        sub_1BFF66964((uint64_t)v55, (uint64_t)&v56, &qword_1EA1A7248),
        (unint64_t v19 = v56) == 0))
  {
    swift_retain();
    sub_1C0187FB0((uint64_t)a3);
    FCIssue.issueCoverModel.getter((uint64_t)&v46);
    sub_1C01880A4((uint64_t)a3);
    uint64_t v18 = v46;
    uint64_t v20 = v47;
    long long v25 = *(_OWORD *)v48;
    long long v22 = *(_OWORD *)&v48[16];
    uint64_t v24 = *(void *)&v48[32];
    char v23 = v49;
  }
  else
  {
    uint64_t v20 = v57;
    uint64_t v46 = v18;
    uint64_t v47 = v57;
    *(void *)id v48 = v56;
    memset(&v48[8], 0, 32);
    char v49 = 0;
    swift_retain();
    sub_1BFF6757C(v55);
    id v21 = v18;
    long long v22 = 0uLL;
    char v23 = 0;
    uint64_t v24 = 0;
    long long v25 = v19;
  }
  uint64_t v40 = v18;
  uint64_t v41 = v20;
  long long v42 = v25;
  long long v43 = v22;
  uint64_t v44 = v24;
  char v45 = v23;
  uint64_t v26 = a4[40];
  uint64_t v27 = a4[41];
  __swift_project_boxed_opaque_existential_1(a4 + 37, v26);
  double v28 = (*(double (**)(uint64_t, uint64_t))(v27 + 64))(v26, v27);
  char v35 = 0;
  uint64_t v36 = 0x4010000000000000;
  double v37 = v28;
  uint64_t v38 = -1;
  uint64_t v39 = 0x3FE0000000000000;
  sub_1C0DAF520(0, &qword_1EB85C7C0, (uint64_t (*)(void))sub_1C0165C0C, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, MEMORY[0x1E4FAB4F0]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1C01BC7F0();
  sub_1C0C27694();
  sub_1C0C274D0(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
  sub_1C15175AC();
  uint64_t v29 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DAF890(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, v29);
  sub_1C151736C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v32);
}

uint64_t sub_1C0DADE68(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v33 = a3;
  uint64_t v32 = a2;
  uint64_t v30 = sub_1C01BC7F0;
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v34 = v6;
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v7 = v31;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v30 - v8);
  uint64_t v38 = a1;
  sub_1BFF35C38();
  uint64_t v11 = v10;
  uint64_t v12 = swift_allocBox();
  uint64_t v14 = v13;
  uint64_t v15 = v13 + *(int *)(v11 + 48);
  uint64_t v16 = *MEMORY[0x1E4FAB790];
  uint64_t v17 = sub_1C151786C();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);
  v18(v14, v16, v17);
  v18(v15, *MEMORY[0x1E4FAB7B0], v17);
  *uint64_t v9 = v12;
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAB9E8], v34);
  sub_1C0350804();
  unint64_t v19 = (uint64_t (*)(void))v30;
  sub_1C0DAF520(0, &qword_1EB85C7D8, (uint64_t (*)(void))v30, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
  unint64_t v25 = v24 + v23;
  uint64_t v26 = *MEMORY[0x1E4FAB5E8];
  sub_1C0DAF520(0, &qword_1EB85C7C8, v19, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v25, *MEMORY[0x1E4FAB580], v21);
  double v35 = a4;
  uint64_t v36 = v32;
  uint64_t v37 = v33;
  double v28 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB538];
  sub_1C0DAF890(0, &qword_1EA1A7238, MEMORY[0x1E4FAB538]);
  sub_1C0DABBE0(&qword_1EA1A7240, &qword_1EA1A7238, v28);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v31 + 8))(v9, v34);
}

uint64_t sub_1C0DAE24C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v22 - v9);
  uint64_t v27 = a1;
  sub_1BFF35C38();
  uint64_t v12 = v11;
  uint64_t v13 = swift_allocBox();
  uint64_t v15 = v14;
  uint64_t v16 = v14 + *(int *)(v12 + 48);
  uint64_t v17 = *MEMORY[0x1E4FAB790];
  uint64_t v18 = sub_1C151786C();
  unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);
  v19(v15, v17, v18);
  v19(v16, *MEMORY[0x1E4FAB7B0], v18);
  *uint64_t v10 = v13;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FAB9E8], v7);
  double v24 = a4;
  uint64_t v25 = v22;
  uint64_t v26 = v23;
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DAF890(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, v20);
  sub_1C151731C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C0DAE4D0(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v45 = a2;
  uint64_t v51 = a1;
  sub_1C0C27518();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v44 - v15);
  *(void *)&v72[0] = a1;
  uint64_t v17 = swift_allocObject();
  *(double *)(v17 + 16) = a4;
  *uint64_t v16 = v17;
  uint64_t v18 = *MEMORY[0x1E4FABA00];
  uint64_t v44 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 104);
  v44(v16, v18, v10);
  unint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DAF890(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v21 = v20;
  uint64_t v22 = sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, v19);
  uint64_t v48 = v21;
  uint64_t v46 = v22;
  sub_1C151738C();
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  uint64_t v50 = v11 + 8;
  uint64_t v47 = v23;
  v23((char *)v16, v10);
  uint64_t v71 = v51;
  swift_getKeyPath();
  uint64_t v24 = *MEMORY[0x1E4FABA28];
  char v49 = v13;
  uint64_t v51 = v10;
  v44((uint64_t *)v13, v24, v10);
  uint64_t v70 = *(void *)(v45 + 24);
  long long v25 = *(_OWORD *)(a3 + 88);
  long long v26 = *(_OWORD *)(a3 + 120);
  long long v73 = *(_OWORD *)(a3 + 104);
  v74[0] = v26;
  *(_OWORD *)((char *)v74 + 9) = *(_OWORD *)(a3 + 129);
  long long v27 = *(_OWORD *)(a3 + 24);
  long long v28 = *(_OWORD *)(a3 + 56);
  v72[2] = *(_OWORD *)(a3 + 40);
  v72[3] = v28;
  v72[4] = *(_OWORD *)(a3 + 72);
  v72[5] = v25;
  v72[0] = *(_OWORD *)(a3 + 8);
  v72[1] = v27;
  uint64_t v29 = *(void **)&v72[0];
  if ((void)v25 == 1 || (uint64_t v30 = (void *)*((void *)&v73 + 1)) == 0)
  {
    swift_retain();
    sub_1C0187FB0((uint64_t)v72);
    FCIssue.issueCoverModel.getter((uint64_t)&v66);
    sub_1C01880A4((uint64_t)v72);
    uint64_t v29 = v66;
    uint64_t v31 = v67;
    long long v37 = *(_OWORD *)v68;
    long long v34 = *(_OWORD *)&v68[16];
    uint64_t v36 = *(void *)&v68[32];
    char v35 = v69;
  }
  else
  {
    uint64_t v31 = *(void *)&v74[0];
    uint64_t v66 = *(void **)&v72[0];
    uint64_t v67 = *(void *)&v74[0];
    *(void *)uint64_t v68 = *((void *)&v73 + 1);
    memset(&v68[8], 0, 32);
    char v69 = 0;
    swift_retain();
    id v32 = v30;
    id v33 = v29;
    long long v34 = 0uLL;
    char v35 = 0;
    uint64_t v36 = 0;
    long long v37 = (unint64_t)v30;
  }
  uint64_t v60 = v29;
  uint64_t v61 = v31;
  long long v62 = v37;
  long long v63 = v34;
  uint64_t v64 = v36;
  char v65 = v35;
  uint64_t v38 = *(void *)(a3 + 320);
  uint64_t v39 = *(void *)(a3 + 328);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 296), v38);
  double v40 = (*(double (**)(uint64_t, uint64_t))(v39 + 64))(v38, v39);
  char v55 = 0;
  uint64_t v56 = 0x4010000000000000;
  double v57 = v40;
  uint64_t v58 = -1;
  uint64_t v59 = 0x3FE0000000000000;
  sub_1C0DAF520(0, &qword_1EB85C7C0, (uint64_t (*)(void))sub_1C0165C0C, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, MEMORY[0x1E4FAB4F0]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1C01BC7F0();
  sub_1C0C27694();
  sub_1C0C274D0(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
  uint64_t v41 = v52;
  sub_1C15175AC();
  long long v42 = v49;
  sub_1C151736C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v41, v54);
  return v47(v42, v51);
}

uint64_t sub_1C0DAEA2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *a3;
  uint64_t v57 = a2;
  uint64_t v58 = v5;
  sub_1C0C27518();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DAF520(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v10 = v9;
  uint64_t v59 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v53 - v14);
  sub_1BFF66964(a1 + 152, (uint64_t)v85, (unint64_t *)&qword_1EB882CD0);
  sub_1BFF66964((uint64_t)v85, (uint64_t)v86, (unint64_t *)&qword_1EB882CD0);
  if (sub_1C00A0A24((uint64_t *)v86) == 1)
  {
    uint64_t v76 = a3;
    swift_getKeyPath();
    uint64_t v16 = *MEMORY[0x1E4FABA28];
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 104);
    uint64_t v54 = v10;
    v17(v12, v16, v10);
    uint64_t v75 = *(void *)(v57 + 24);
    long long v18 = *(_OWORD *)(a1 + 88);
    long long v19 = *(_OWORD *)(a1 + 120);
    long long v83 = *(_OWORD *)(a1 + 104);
    v84[0] = v19;
    *(_OWORD *)((char *)v84 + 9) = *(_OWORD *)(a1 + 129);
    long long v20 = *(_OWORD *)(a1 + 24);
    long long v21 = *(_OWORD *)(a1 + 56);
    long long v79 = *(_OWORD *)(a1 + 40);
    long long v80 = v21;
    long long v81 = *(_OWORD *)(a1 + 72);
    long long v82 = v18;
    long long v77 = *(_OWORD *)(a1 + 8);
    long long v78 = v20;
    uint64_t v22 = (void *)v77;
    if ((void)v18 == 1 || (uint64_t v23 = (void *)*((void *)&v83 + 1)) == 0)
    {
      swift_retain();
      sub_1C0187FB0((uint64_t)&v77);
      FCIssue.issueCoverModel.getter((uint64_t)&v60);
      sub_1C01880A4((uint64_t)&v77);
      uint64_t v22 = v60;
      uint64_t v24 = v61;
      long long v30 = *(_OWORD *)v62;
      long long v27 = *(_OWORD *)&v62[16];
      uint64_t v29 = *(void *)&v62[32];
      char v28 = v63;
    }
    else
    {
      uint64_t v24 = *(void *)&v84[0];
      uint64_t v60 = (void *)v77;
      uint64_t v61 = *(void *)&v84[0];
      *(void *)long long v62 = *((void *)&v83 + 1);
      memset(&v62[8], 0, 32);
      char v63 = 0;
      swift_retain();
      id v25 = v23;
      id v26 = v22;
      long long v27 = 0uLL;
      char v28 = 0;
      uint64_t v29 = 0;
      long long v30 = (unint64_t)v23;
    }
    char v69 = v22;
    uint64_t v70 = v24;
    long long v71 = v30;
    long long v72 = v27;
    uint64_t v73 = v29;
    char v74 = v28;
    char v49 = (void *)(a1 + 296);
    uint64_t v50 = *(void *)(a1 + 320);
    uint64_t v51 = *(void *)(a1 + 328);
    __swift_project_boxed_opaque_existential_1(v49, v50);
    double v52 = (*(double (**)(uint64_t, uint64_t))(v51 + 64))(v50, v51);
    char v64 = 0;
    uint64_t v65 = 0x4010000000000000;
    double v66 = v52;
    uint64_t v67 = -1;
    uint64_t v68 = 0x3FE0000000000000;
    sub_1C0DAF520(0, &qword_1EB85C7C0, (uint64_t (*)(void))sub_1C0165C0C, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, MEMORY[0x1E4FAB4F0]);
    type metadata accessor for IssueCoverViewLayoutAttributesFactory();
    sub_1C01BC7F0();
    sub_1C0C27694();
    sub_1C0C274D0(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
    sub_1C15175AC();
    sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    sub_1C151736C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v56);
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v12, v54);
  }
  else
  {
    long long v83 = v86[6];
    v84[0] = v87[0];
    *(_OWORD *)((char *)v84 + 9) = *(_OWORD *)((char *)v87 + 9);
    long long v79 = v86[2];
    long long v80 = v86[3];
    long long v81 = v86[4];
    long long v82 = v86[5];
    long long v77 = v86[0];
    long long v78 = v86[1];
    char v69 = a3;
    sub_1BFF35C38();
    uint64_t v32 = v31;
    uint64_t v56 = swift_allocBox();
    uint64_t v34 = v33;
    uint64_t v35 = v33 + *(int *)(v32 + 48);
    uint64_t v36 = *MEMORY[0x1E4FAB790];
    uint64_t v37 = sub_1C151786C();
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104);
    uint64_t v39 = v15;
    uint64_t v40 = v10;
    v38(v34, v36, v37);
    v38(v35, *MEMORY[0x1E4FAB7B0], v37);
    *uint64_t v39 = v56;
    uint64_t v41 = v59;
    (*(void (**)(uint64_t *, void, uint64_t))(v59 + 104))(v39, *MEMORY[0x1E4FAB9E8], v10);
    sub_1C0350804();
    sub_1C0DAF520(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
    uint64_t v43 = v42;
    uint64_t v44 = *(void *)(v42 - 8);
    unint64_t v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1C1529AE0;
    uint64_t v47 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v44 + 104))(v46 + v45, *MEMORY[0x1E4FAB638], v43);
    MEMORY[0x1F4188790](v47);
    sub_1BFF66964((uint64_t)v85, (uint64_t)&v60, (unint64_t *)&qword_1EB882CD0);
    sub_1C0187FB0((uint64_t)&v60);
    sub_1C0DABBE0(&qword_1EB85C798, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    sub_1C151734C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v41 + 8))(v39, v40);
    return sub_1C01B3B54((uint64_t)v85);
  }
}

uint64_t sub_1C0DAF220(uint64_t a1)
{
  return sub_1C0DABC24(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0DAF228(uint64_t a1)
{
  return sub_1C0DAC0DC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0DAF230(uint64_t a1)
{
  return sub_1C0DAC6BC(a1, *(void *)(v1 + 16));
}

void sub_1C0DAF238()
{
  if (!qword_1EA1A7228)
  {
    sub_1C0DAF520(255, &qword_1EA1A7230, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB530]);
    sub_1C0DAF520(255, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA1A7228);
    }
  }
}

uint64_t sub_1C0DAF31C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0DAF32C(uint64_t a1)
{
  uint64_t v2 = sub_1C151E24C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = qword_1EB8739C0;
  if ((*(unsigned char *)(a1 + 56) & 4) == 0)
  {
    uint64_t v7 = *(void *)(a1 + 368);
    if (*(unsigned char *)(v7 + qword_1EB8739C0)) {
      return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
    }
    sub_1BFE4597C();
    *uint64_t v5 = sub_1C151F56C();
    (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
    a1 = sub_1C151E26C();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t))(v3 + 8);
    v3 += 8;
    v8(v5, v2);
    if (a1) {
      return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
    }
    __break(1u);
  }
  uint64_t v7 = *(void *)(a1 + 376);
  if (*(unsigned char *)(v7 + v6)) {
    return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
  }
  sub_1BFE4597C();
  *uint64_t v5 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
  char v9 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v9) {
    return *(void *)(v7 + *(void *)(*(void *)v7 + 136));
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0DAF4E8()
{
  return swift_deallocObject();
}

void sub_1C0DAF520(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0DAF588(uint64_t a1)
{
  return sub_1C0DACF84(a1, *(void *)(v1 + 24), *(_OWORD **)(v1 + 32), *(void *)(v1 + 40), *(double *)(v1 + 16));
}

uint64_t sub_1C0DAF59C(uint64_t a1)
{
  return sub_1C0DAD0D8(*(double *)(v1 + 16), a1, *(void *)(v1 + 24), (_OWORD *)(v1 + 32), v1 + 176);
}

uint64_t objectdestroy_26Tm_0()
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 112) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 160) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 264) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 312) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v1 = *(void **)(v0 + 328);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 408) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 456) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 472);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0DAF724(uint64_t a1)
{
  return sub_1C0DAD248(a1, *(void *)(v1 + 24), v1 + 32, v1 + 176, *(double *)(v1 + 16));
}

uint64_t sub_1C0DAF74C()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 120) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 168) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v1 = *(void **)(v0 + 184);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 264) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 312) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 328);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0DAF860(uint64_t a1)
{
  return sub_1C0DADE68(a1, *(void *)(v1 + 24), v1 + 32, *(double *)(v1 + 16));
}

uint64_t sub_1C0DAF884(uint64_t a1)
{
  return sub_1C0DAE24C(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(double *)(v1 + 16));
}

void sub_1C0DAF890(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for CoverIssueViewLayout;
    v8[1] = &type metadata for CoverIssueViewLayout.Attributes;
    v8[2] = sub_1C01BC7F0();
    v8[3] = sub_1C01BC844();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0DAF914(uint64_t a1)
{
  return sub_1C0DAE4D0(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(double *)(v1 + 16));
}

uint64_t sub_1C0DAF920(uint64_t a1)
{
  return sub_1C0DAD634(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(double *)(v1 + 16));
}

uint64_t sub_1C0DAF930(uint64_t a1)
{
  return sub_1C0DAD984(a1, *(void *)(v1 + 16), *(void ***)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t getEnumTagSinglePayload for FormatPluginDataPlaceholderContent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatPluginDataPlaceholderContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0DAF9C8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1C0DAF9E0(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatPluginDataPlaceholderContent()
{
  return &type metadata for FormatPluginDataPlaceholderContent;
}

uint64_t FormatNodeContext.contextLayoutOptions.getter()
{
  sub_1C1517EFC();
  return v1;
}

uint64_t FormatNodeContext.resizeSnapshot.getter()
{
  type metadata accessor for GroupLayoutContext();
  return swift_retain();
}

uint64_t sub_1C0DAFA8C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v21 = v20;
  uint64_t v76 = a8;
  uint64_t v85 = a6;
  uint64_t v86 = a7;
  uint64_t v72 = a3;
  uint64_t v73 = a4;
  uint64_t v82 = a19;
  uint64_t v83 = a20;
  uint64_t v80 = a17;
  uint64_t v81 = a18;
  uint64_t v68 = a16;
  uint64_t v78 = a14;
  uint64_t v79 = a15;
  uint64_t v77 = a13;
  uint64_t v84 = a9;
  uint64_t v74 = a10;
  uint64_t v75 = a11;
  uint64_t v25 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v25 - 8);
  uint64_t v26 = *(void *)(v62 + 64);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v63 = (uint64_t)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v62 - v28;
  char v30 = *a2;
  char v31 = a2[1];
  long long v67 = *(_OWORD *)(a2 + 8);
  long long v66 = *(_OWORD *)(a2 + 24);
  long long v65 = *(_OWORD *)(a2 + 40);
  long long v64 = *(_OWORD *)(a2 + 56);
  uint64_t v32 = *((void *)a2 + 9);
  long long v33 = *a12;
  long long v70 = a12[1];
  long long v71 = v33;
  uint64_t v34 = *((void *)a12 + 5);
  uint64_t v69 = *((void *)a12 + 4);
  sub_1BFF1ECB0(a1, v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  uint64_t v35 = v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config;
  *(unsigned char *)uint64_t v35 = v30;
  uint64_t v36 = a1;
  uint64_t v37 = v68;
  *(unsigned char *)(v35 + 1) = v31;
  *(_OWORD *)(v35 + 8) = v67;
  *(_OWORD *)(v35 + 24) = v66;
  *(_OWORD *)(v35 + 40) = v65;
  *(_OWORD *)(v35 + 56) = v64;
  *(void *)(v35 + 72) = v32;
  *(void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory) = v72;
  *(void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace) = v73;
  uint64_t v38 = (_OWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  long long v39 = a5[1];
  _OWORD *v38 = *a5;
  v38[1] = v39;
  long long v40 = a5[2];
  long long v41 = a5[3];
  uint64_t v43 = v84;
  uint64_t v42 = v85;
  v38[2] = v40;
  v38[3] = v41;
  *(void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors) = v42;
  *(void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options) = v86;
  *(void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks) = v76;
  sub_1BFF1F7AC(v43, v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, qword_1EB873870, MEMORY[0x1E4FBB718]);
  uint64_t v44 = (void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  uint64_t v45 = v75;
  *uint64_t v44 = v74;
  v44[1] = v45;
  uint64_t v46 = v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary;
  long long v47 = v70;
  *(_OWORD *)uint64_t v46 = v71;
  *(_OWORD *)(v46 + 16) = v47;
  *(void *)(v46 + 32) = v69;
  *(void *)(v46 + 40) = v34;
  *(void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines) = v77;
  uint64_t v48 = (void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  uint64_t v49 = v79;
  void *v48 = v78;
  v48[1] = v49;
  sub_1BFF1ECB0(v36, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  if (!v37)
  {
    sub_1BFF19690(0, (unint64_t *)&qword_1EB87C700, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, MEMORY[0x1E4FAA880]);
    uint64_t v50 = v63;
    sub_1BFF1ECB0((uint64_t)v29, v63, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v51 = v29;
    unint64_t v52 = (*(unsigned __int8 *)(v62 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    unint64_t v53 = (v26 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = swift_allocObject();
    sub_1BFF97888(v50, v54 + v52, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v55 = v85;
    *(void *)(v54 + v53) = v86;
    *(void *)(v54 + ((v53 + 15) & 0xFFFFFFFFFFFFFFF8)) = v55;
    swift_bridgeObjectRetain();
    uint64_t v29 = v51;
    swift_retain();
    uint64_t v56 = sub_1C1517F1C();
    uint64_t v43 = v84;
    uint64_t v37 = v56;
  }
  sub_1BFF1F9B0(v43, qword_1EB873870, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBB718]);
  sub_1BFF1F404(v36, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFF1F404((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  *(void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions) = v37;
  uint64_t v57 = (void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  uint64_t v58 = v81;
  *uint64_t v57 = v80;
  v57[1] = v58;
  uint64_t v59 = (void *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  uint64_t v60 = v83;
  *uint64_t v59 = v82;
  v59[1] = v60;
  return v21;
}

uint64_t sub_1C0DAFF90(long long *a1, uint64_t a2, uint64_t *a3, void **a4)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  v47[3] = (uint64_t)&type metadata for FeedIssue;
  unint64_t v43 = sub_1BFEB031C();
  v47[4] = v43;
  uint64_t v7 = (_OWORD *)swift_allocObject();
  long long v8 = a1[5];
  long long v9 = a1[7];
  long long v54 = a1[6];
  v55[0] = v9;
  *(_OWORD *)((char *)v55 + 9) = *(long long *)((char *)a1 + 121);
  long long v10 = a1[1];
  long long v11 = a1[3];
  long long v50 = a1[2];
  long long v12 = v50;
  long long v51 = v11;
  long long v13 = a1[3];
  long long v14 = a1[5];
  long long v52 = a1[4];
  long long v15 = v52;
  long long v53 = v14;
  long long v16 = a1[1];
  long long v48 = *a1;
  long long v17 = v48;
  long long v49 = v16;
  long long v18 = a1[7];
  v7[7] = v54;
  v7[8] = v18;
  *(_OWORD *)((char *)v7 + 137) = *(long long *)((char *)a1 + 121);
  v7[3] = v12;
  v7[4] = v13;
  v7[5] = v15;
  v7[6] = v8;
  v47[0] = (uint64_t)v7;
  v7[1] = v17;
  v7[2] = v10;
  swift_beginAccess();
  sub_1C0187FB0((uint64_t)&v48);
  sub_1BFEACB04((uint64_t)v47, a2);
  sub_1C0DB5430((uint64_t)(a1 + 10), (uint64_t)v47, &qword_1EB885C28, (uint64_t)&type metadata for FeedItemAuxiliary);
  swift_beginAccess();
  uint64_t v19 = *a3;
  uint64_t v20 = a3[1];
  sub_1C0DB5430((uint64_t)v47, (uint64_t)a3, &qword_1EB885C28, (uint64_t)&type metadata for FeedItemAuxiliary);
  sub_1BFFB9B18(v47);
  sub_1BFF1EB14(v19, v20);
  swift_beginAccess();
  uint64_t v21 = (void *)v48;
  sub_1BFF1FBE0(0, (unint64_t *)&qword_1EB87A680, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0187FB0((uint64_t)&v48);
  id v23 = objc_msgSend(v21, sel_sourceChannel);
  *(void *)(inited + 56) = &type metadata for FeedTag;
  *(void *)(inited + 64) = sub_1BFEA44FC();
  uint64_t v24 = swift_allocObject();
  *(void *)(inited + 32) = v24;
  id v25 = objc_msgSend(v23, sel_identifier);
  uint64_t v26 = sub_1C151E62C();
  uint64_t v28 = v27;

  *(_OWORD *)(v24 + 96) = xmmword_1C152C800;
  *(_OWORD *)(v24 + 112) = 0u;
  *(_OWORD *)(v24 + 128) = 0u;
  *(_OWORD *)(v24 + 144) = 0u;
  *(unsigned char *)(v24 + 160) = 0;
  *(void *)(v24 + 16) = v26;
  *(void *)(v24 + 24) = v28;
  *(void *)(v24 + 32) = v23;
  *(unsigned char *)(v24 + 40) = 0;
  *(void *)(v24 + 64) = 0;
  *(void *)(v24 + 72) = 0xE000000000000000;
  *(void *)(v24 + 48) = 0;
  *(unsigned char *)(v24 + 56) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC870];
  *(void *)(v24 + 80) = 0;
  *(void *)(v24 + 88) = v29;
  sub_1BFEACADC(inited);
  char v30 = *a4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v30;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v30 = sub_1BFEA4268(0, v30[2] + 1, 1, v30);
    *a4 = v30;
  }
  unint64_t v33 = v30[2];
  unint64_t v32 = v30[3];
  if (v33 >= v32 >> 1)
  {
    char v30 = sub_1BFEA4268((void *)(v32 > 1), v33 + 1, 1, v30);
    *a4 = v30;
  }
  uint64_t v45 = &type metadata for FeedIssue;
  unint64_t v46 = v43;
  uint64_t v34 = (_OWORD *)swift_allocObject();
  *(void *)&long long v44 = v34;
  long long v35 = v55[0];
  void v34[7] = v54;
  v34[8] = v35;
  *(_OWORD *)((char *)v34 + 137) = *(_OWORD *)((char *)v55 + 9);
  long long v36 = v51;
  v34[3] = v50;
  v34[4] = v36;
  long long v37 = v53;
  v34[5] = v52;
  v34[6] = v37;
  long long v38 = v49;
  v34[1] = v48;
  v34[2] = v38;
  v30[2] = v33 + 1;
  sub_1BFC773DC(&v44, (uint64_t)&v30[5 * v33 + 4]);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v39 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v39);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v40 = swift_bridgeObjectRetain();
  sub_1BFF1B81C(v40);
  return swift_endAccess();
}

uint64_t sub_1C0DB03B8(uint64_t a1, uint64_t a2, uint64_t *a3, void **a4, uint64_t a5, uint64_t a6)
{
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v42 = a4;
  uint64_t v9 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v9);
  uint64_t v40 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v11;
  uint64_t v49 = v11;
  uint64_t v43 = sub_1BFF77B44(&qword_1EB85B498, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  uint64_t v50 = v43;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v48);
  long long v41 = type metadata accessor for FeedWebEmbed;
  uint64_t v39 = a1;
  sub_1BFF1ECB0(a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  swift_beginAccess();
  sub_1BFEACB04((uint64_t)&v48, a2);
  sub_1BFF19690(0, &qword_1EB87F2D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  uint64_t v44 = v13;
  long long v14 = (uint64_t *)(a1 + *(int *)(v13 + 36));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  uint64_t v18 = v14[2];
  uint64_t v17 = v14[3];
  uint64_t v20 = v14[4];
  uint64_t v19 = v14[5];
  swift_beginAccess();
  uint64_t v22 = *a3;
  uint64_t v21 = a3[1];
  v38[3] = a3[3];
  v38[2] = a3[4];
  v38[1] = a3[5];
  *a3 = v16;
  a3[1] = v15;
  a3[2] = v18;
  a3[3] = v17;
  a3[4] = v20;
  a3[5] = v19;
  uint64_t v23 = v16;
  uint64_t v24 = (uint64_t)v40;
  uint64_t v25 = v15;
  uint64_t v26 = v42;
  sub_1BFF1E6CC(v23, v25);
  uint64_t v27 = v21;
  uint64_t v28 = v39;
  sub_1BFF1EB14(v22, v27);
  swift_beginAccess();
  sub_1BFF1ECB0(v28, v24, (uint64_t (*)(void))v41);
  uint64_t v29 = FeedWebEmbed.additionalFormatFeedItems.getter();
  sub_1BFEACADC((uint64_t)v29);
  char v30 = *v26;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v26 = v30;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v30 = sub_1BFEA4268(0, v30[2] + 1, 1, v30);
    *uint64_t v26 = v30;
  }
  unint64_t v33 = v30[2];
  unint64_t v32 = v30[3];
  if (v33 >= v32 >> 1)
  {
    char v30 = sub_1BFEA4268((void *)(v32 > 1), v33 + 1, 1, v30);
    *uint64_t v26 = v30;
  }
  uint64_t v49 = v45;
  uint64_t v50 = v43;
  uint64_t v34 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v48);
  sub_1BFF1ECB0(v24, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  v30[2] = v33 + 1;
  sub_1BFC773DC(&v48, (uint64_t)&v30[5 * v33 + 4]);
  sub_1BFF1F404(v24, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v35 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v35);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v36 = swift_bridgeObjectRetain();
  sub_1BFF1B81C(v36);
  return swift_endAccess();
}

uint64_t sub_1C0DB076C(void *a1, uint64_t a2, uint64_t *a3, void **a4)
{
  v27[3] = &type metadata for FeedTag;
  unint64_t v23 = sub_1BFEA44FC();
  v27[4] = v23;
  v27[0] = swift_allocObject();
  sub_1BFEA435C((uint64_t)a1, v27[0] + 16);
  swift_beginAccess();
  sub_1BFEACB04((uint64_t)v27, a2);
  uint64_t v7 = a1[21];
  uint64_t v8 = a1[22];
  uint64_t v9 = a1[23];
  uint64_t v10 = a1[24];
  uint64_t v12 = a1[25];
  uint64_t v11 = a1[26];
  swift_beginAccess();
  uint64_t v14 = *a3;
  uint64_t v13 = a3[1];
  *a3 = v7;
  a3[1] = v8;
  a3[2] = v9;
  a3[3] = v10;
  a3[4] = v12;
  a3[5] = v11;
  sub_1BFF1E6CC(v7, v8);
  sub_1BFF1EB14(v14, v13);
  swift_beginAccess();
  sub_1BFEA435C((uint64_t)a1, (uint64_t)v27);
  sub_1BFEACADC(MEMORY[0x1E4FBC860]);
  uint64_t v15 = *a4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v15 = sub_1BFEA4268(0, v15[2] + 1, 1, v15);
    *a4 = v15;
  }
  unint64_t v18 = v15[2];
  unint64_t v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    uint64_t v15 = sub_1BFEA4268((void *)(v17 > 1), v18 + 1, 1, v15);
    *a4 = v15;
  }
  uint64_t v25 = &type metadata for FeedTag;
  unint64_t v26 = v23;
  *(void *)&long long v24 = swift_allocObject();
  sub_1BFEA435C((uint64_t)v27, v24 + 16);
  _OWORD v15[2] = v18 + 1;
  sub_1BFC773DC(&v24, (uint64_t)&v15[5 * v18 + 4]);
  sub_1BFEA4290((uint64_t)v27);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v19);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_1BFF1B81C(v20);
  return swift_endAccess();
}

uint64_t sub_1C0DB09F4(void *a1, uint64_t a2, uint64_t *a3, void **a4)
{
  v41[35] = *MEMORY[0x1E4F143B8];
  v41[3] = &type metadata for FeedPuzzle;
  unint64_t v37 = sub_1C0642294();
  v41[4] = v37;
  v41[0] = swift_allocObject();
  sub_1C01F09C0((uint64_t)a1, v41[0] + 16);
  swift_beginAccess();
  sub_1BFEACB04((uint64_t)v41, a2);
  uint64_t v7 = a1[28];
  uint64_t v8 = a1[29];
  uint64_t v9 = a1[30];
  uint64_t v10 = a1[31];
  uint64_t v12 = a1[32];
  uint64_t v11 = a1[33];
  swift_beginAccess();
  uint64_t v13 = *a3;
  uint64_t v35 = a3[1];
  *a3 = v7;
  a3[1] = v8;
  a3[2] = v9;
  a3[3] = v10;
  a3[4] = v12;
  a3[5] = v11;
  sub_1BFF1E6CC(v7, v8);
  sub_1BFF1EB14(v13, v35);
  swift_beginAccess();
  sub_1C01F09C0((uint64_t)a1, (uint64_t)v41);
  id v14 = objc_msgSend((id)v41[7], sel_puzzleType);
  id v15 = objc_msgSend(v14, sel_identifier);
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  sub_1BFF1FBE0(0, (unint64_t *)&qword_1EB87A680, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 56) = &type metadata for FeedPuzzleType;
  *(void *)(inited + 64) = sub_1C06423C4();
  uint64_t v20 = swift_allocObject();
  *(void *)(inited + 32) = v20;
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  *(unsigned char *)(v20 + 32) = 1;
  *(_OWORD *)(v20 + 40) = xmmword_1C1538940;
  *(void *)(v20 + 56) = v16;
  *(void *)(v20 + 64) = v18;
  *(void *)(v20 + 72) = v14;
  *(void *)&long long v38 = inited;
  uint64_t v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
  *(void *)(v21 + 56) = &type metadata for FeedTag;
  *(void *)(v21 + 64) = sub_1BFEA44FC();
  uint64_t v22 = swift_allocObject();
  *(void *)(v21 + 32) = v22;
  sub_1BFF7FF04(0, 0xDuLL);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1BFF7FF04(0, 0xDuLL);
  swift_bridgeObjectRetain();
  id v23 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_identifier);
  uint64_t v24 = sub_1C151E62C();
  uint64_t v26 = v25;

  *(_OWORD *)(v22 + 96) = xmmword_1C152C800;
  *(_OWORD *)(v22 + 112) = 0u;
  *(_OWORD *)(v22 + 128) = 0u;
  *(_OWORD *)(v22 + 144) = 0u;
  *(unsigned char *)(v22 + 160) = 0;
  *(void *)(v22 + 16) = v24;
  *(void *)(v22 + 24) = v26;
  *(void *)(v22 + 32) = v14;
  *(unsigned char *)(v22 + 40) = 0;
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0xE000000000000000;
  *(void *)(v22 + 48) = 0;
  *(unsigned char *)(v22 + 56) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC870];
  *(void *)(v22 + 80) = 0;
  *(void *)(v22 + 88) = v27;
  sub_1BFEEFC20(0, 0xDuLL);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEACADC(v21);
  sub_1BFEEFC20(0, 0xDuLL);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEACADC(v38);
  uint64_t v28 = *a4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v28;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v28 = sub_1BFEA4268(0, v28[2] + 1, 1, v28);
    *a4 = v28;
  }
  unint64_t v31 = v28[2];
  unint64_t v30 = v28[3];
  if (v31 >= v30 >> 1)
  {
    uint64_t v28 = sub_1BFEA4268((void *)(v30 > 1), v31 + 1, 1, v28);
    *a4 = v28;
  }
  uint64_t v39 = &type metadata for FeedPuzzle;
  unint64_t v40 = v37;
  *(void *)&long long v38 = swift_allocObject();
  sub_1C01F09C0((uint64_t)v41, v38 + 16);
  void v28[2] = v31 + 1;
  sub_1BFC773DC(&v38, (uint64_t)&v28[5 * v31 + 4]);
  sub_1C01F0A74((uint64_t)v41);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v32 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v32);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v33 = swift_bridgeObjectRetain();
  sub_1BFF1B81C(v33);
  return swift_endAccess();
}

uint64_t sub_1C0DB0EBC(long long *a1, uint64_t a2, uint64_t *a3, void **a4)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  v36[3] = (uint64_t)&type metadata for FeedPuzzleType;
  unint64_t v32 = sub_1C06423C4();
  v36[4] = v32;
  uint64_t v7 = (_OWORD *)swift_allocObject();
  v36[0] = (uint64_t)v7;
  long long v8 = a1[1];
  long long v37 = *a1;
  long long v38 = v8;
  long long v10 = a1[3];
  long long v39 = a1[2];
  long long v9 = v39;
  long long v40 = v10;
  v7[1] = v37;
  v7[2] = v8;
  v7[3] = v9;
  v7[4] = v10;
  swift_beginAccess();
  sub_1C0642378((uint64_t)&v37);
  sub_1BFEACB04((uint64_t)v36, a2);
  sub_1C0DB5430((uint64_t)(a1 + 5), (uint64_t)v36, &qword_1EB885C28, (uint64_t)&type metadata for FeedItemAuxiliary);
  swift_beginAccess();
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  sub_1C0DB5430((uint64_t)v36, (uint64_t)a3, &qword_1EB885C28, (uint64_t)&type metadata for FeedItemAuxiliary);
  sub_1BFFB9B18(v36);
  sub_1BFF1EB14(v11, v12);
  swift_beginAccess();
  uint64_t v13 = *((void *)&v40 + 1);
  sub_1BFF1FBE0(0, (unint64_t *)&qword_1EB87A680, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 56) = &type metadata for FeedTag;
  *(void *)(inited + 64) = sub_1BFEA44FC();
  uint64_t v15 = swift_allocObject();
  *(void *)(inited + 32) = v15;
  sub_1C0642378((uint64_t)&v37);
  id v16 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  uint64_t v17 = sub_1C151E62C();
  uint64_t v19 = v18;

  *(_OWORD *)(v15 + 96) = xmmword_1C152C800;
  *(_OWORD *)(v15 + 112) = 0u;
  *(_OWORD *)(v15 + 128) = 0u;
  *(_OWORD *)(v15 + 144) = 0u;
  *(unsigned char *)(v15 + 160) = 0;
  *(void *)(v15 + 16) = v17;
  *(void *)(v15 + 24) = v19;
  *(void *)(v15 + 32) = v13;
  *(unsigned char *)(v15 + 40) = 0;
  *(void *)(v15 + 64) = 0;
  *(void *)(v15 + 72) = 0xE000000000000000;
  *(void *)(v15 + 48) = 0;
  *(unsigned char *)(v15 + 56) = 0;
  uint64_t v20 = MEMORY[0x1E4FBC870];
  *(void *)(v15 + 80) = 0;
  *(void *)(v15 + 88) = v20;
  sub_1BFEACADC(inited);
  uint64_t v21 = *a4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v21 = sub_1BFEA4268(0, v21[2] + 1, 1, v21);
    *a4 = v21;
  }
  unint64_t v24 = v21[2];
  unint64_t v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    uint64_t v21 = sub_1BFEA4268((void *)(v23 > 1), v24 + 1, 1, v21);
    *a4 = v21;
  }
  uint64_t v34 = &type metadata for FeedPuzzleType;
  unint64_t v35 = v32;
  uint64_t v25 = (_OWORD *)swift_allocObject();
  *(void *)&long long v33 = v25;
  long long v26 = v38;
  v25[1] = v37;
  uint64_t v25[2] = v26;
  long long v27 = v40;
  v25[3] = v39;
  v25[4] = v27;
  v21[2] = v24 + 1;
  sub_1BFC773DC(&v33, (uint64_t)&v21[5 * v24 + 4]);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v28 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v28);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_1BFF1B81C(v29);
  return swift_endAccess();
}

uint64_t sub_1C0DB1278(uint64_t a1, uint64_t a2, uint64_t *a3, void **a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a6;
  uint64_t v50 = a5;
  uint64_t v47 = a4;
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  uint64_t v44 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v44);
  uint64_t v46 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v10;
  uint64_t v48 = sub_1BFF77B44(&qword_1EA19CBC8, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  uint64_t v54 = v48;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v52);
  uint64_t v45 = type metadata accessor for FeedPuzzleStatistic;
  uint64_t v43 = a1;
  sub_1BFF1ECB0(a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  swift_beginAccess();
  sub_1BFEACB04((uint64_t)&v52, a2);
  sub_1BFF19690(0, &qword_1EB884A90, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  uint64_t v49 = v12;
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(v12 + 36));
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v17 = v13[2];
  uint64_t v16 = v13[3];
  uint64_t v19 = v13[4];
  uint64_t v18 = v13[5];
  swift_beginAccess();
  uint64_t v21 = *a3;
  uint64_t v20 = a3[1];
  v42[3] = a3[3];
  long long v42[2] = a3[4];
  v42[1] = a3[5];
  *a3 = v15;
  a3[1] = v14;
  a3[2] = v17;
  a3[3] = v16;
  a3[4] = v19;
  a3[5] = v18;
  uint64_t v22 = v44;
  uint64_t v23 = (uint64_t)v46;
  sub_1BFF1E6CC(v15, v14);
  uint64_t v24 = v21;
  uint64_t v25 = v43;
  sub_1BFF1EB14(v24, v20);
  long long v26 = v47;
  swift_beginAccess();
  sub_1BFF1ECB0(v25, v23, (uint64_t (*)(void))v45);
  sub_1BFF1FBE0(0, (unint64_t *)&qword_1EB87A680, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v28 = *(void *)(v23 + *(int *)(v22 + 32));
  *(void *)(inited + 56) = &type metadata for FeedPuzzleType;
  *(void *)(inited + 64) = sub_1C06423C4();
  uint64_t v29 = swift_allocObject();
  *(void *)(inited + 32) = v29;
  id v30 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  uint64_t v31 = sub_1C151E62C();
  uint64_t v33 = v32;

  *(void *)(v29 + 16) = 0;
  *(void *)(v29 + 24) = 0;
  *(unsigned char *)(v29 + 32) = 1;
  *(_OWORD *)(v29 + 40) = xmmword_1C1538940;
  *(void *)(v29 + 56) = v31;
  *(void *)(v29 + 64) = v33;
  *(void *)(v29 + 72) = v28;
  sub_1BFEACADC(inited);
  uint64_t v34 = *v26;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *long long v26 = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v34 = sub_1BFEA4268(0, v34[2] + 1, 1, v34);
    *long long v26 = v34;
  }
  unint64_t v37 = v34[2];
  unint64_t v36 = v34[3];
  if (v37 >= v36 >> 1)
  {
    uint64_t v34 = sub_1BFEA4268((void *)(v36 > 1), v37 + 1, 1, v34);
    *long long v26 = v34;
  }
  uint64_t v53 = v22;
  uint64_t v54 = v48;
  long long v38 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v52);
  sub_1BFF1ECB0(v23, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  v34[2] = v37 + 1;
  sub_1BFC773DC(&v52, (uint64_t)&v34[5 * v37 + 4]);
  sub_1BFF1F404(v23, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v39 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v39);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v40 = swift_bridgeObjectRetain();
  sub_1BFF1B81C(v40);
  return swift_endAccess();
}

uint64_t sub_1C0DB1760(uint64_t a1, uint64_t a2, uint64_t *a3, void **a4, uint64_t a5, uint64_t a6)
{
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  uint64_t v39 = a4;
  uint64_t v9 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v9);
  long long v38 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v11;
  uint64_t v46 = v11;
  uint64_t v40 = sub_1BFF77B44(&qword_1EB85E978, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  uint64_t v47 = v40;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v45);
  unint64_t v37 = type metadata accessor for FeedCustomItem;
  uint64_t v36 = a1;
  sub_1BFF1ECB0(a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  swift_beginAccess();
  sub_1BFEACB04((uint64_t)&v45, a2);
  sub_1BFF19690(0, &qword_1EB88A2C8, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  uint64_t v41 = v13;
  uint64_t v14 = (uint64_t *)(a1 + *(int *)(v13 + 36));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  uint64_t v18 = v14[2];
  uint64_t v17 = v14[3];
  uint64_t v20 = v14[4];
  uint64_t v19 = v14[5];
  swift_beginAccess();
  uint64_t v22 = *a3;
  uint64_t v21 = a3[1];
  v35[3] = a3[3];
  v35[2] = a3[4];
  v35[1] = a3[5];
  *a3 = v16;
  a3[1] = v15;
  a3[2] = v18;
  a3[3] = v17;
  a3[4] = v20;
  a3[5] = v19;
  uint64_t v23 = v36;
  sub_1BFF1E6CC(v16, v15);
  uint64_t v24 = v22;
  uint64_t v25 = (uint64_t)v38;
  sub_1BFF1EB14(v24, v21);
  long long v26 = v39;
  swift_beginAccess();
  sub_1BFF1ECB0(v23, v25, (uint64_t (*)(void))v37);
  sub_1BFEACADC(MEMORY[0x1E4FBC860]);
  long long v27 = *v26;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *long long v26 = v27;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v27 = sub_1BFEA4268(0, v27[2] + 1, 1, v27);
    *long long v26 = v27;
  }
  unint64_t v30 = v27[2];
  unint64_t v29 = v27[3];
  if (v30 >= v29 >> 1)
  {
    long long v27 = sub_1BFEA4268((void *)(v29 > 1), v30 + 1, 1, v27);
    *long long v26 = v27;
  }
  uint64_t v46 = v42;
  uint64_t v47 = v40;
  uint64_t v31 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v45);
  sub_1BFF1ECB0(v25, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  v27[2] = v30 + 1;
  sub_1BFC773DC(&v45, (uint64_t)&v27[5 * v30 + 4]);
  sub_1BFF1F404(v25, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v32 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v32);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v33 = swift_bridgeObjectRetain();
  sub_1BFF1B81C(v33);
  return swift_endAccess();
}

uint64_t sub_1C0DB1B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = v3;
  uint64_t v65 = *v3;
  uint64_t v8 = v65;
  if (*(void *)(v65 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1BFEF2D8C(a1, a2);
    if (v10)
    {
      sub_1BFF1F7AC(*(void *)(v65 + 56) + 104 * v9, (uint64_t)&v54, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      if (*((void *)&v55 + 1))
      {
        long long v38 = v58;
        long long v39 = v59;
        *(void *)&long long v40 = v60;
        long long v34 = v54;
        long long v35 = v55;
        long long v36 = v56;
        long long v37 = v57;
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v60 = 0;
      long long v58 = 0u;
      long long v59 = 0u;
      long long v56 = 0u;
      long long v57 = 0u;
      long long v54 = 0u;
      long long v55 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    long long v54 = 0u;
    long long v55 = 0u;
  }
  uint64_t v17 = v3[1];
  if (*(void *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1BFEF2D8C(a1, a2);
    if (v19)
    {
      sub_1BFF1F7AC(*(void *)(v17 + 56) + 104 * v18, (uint64_t)&v34, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      *(void *)&long long v40 = 0;
      long long v38 = 0u;
      long long v39 = 0u;
      long long v36 = 0u;
      long long v37 = 0u;
      long long v34 = 0u;
      long long v35 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&long long v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
  }
  sub_1BFF1F404((uint64_t)&v54, (uint64_t (*)(void))sub_1BFF84034);
  if (!*((void *)&v35 + 1))
  {
    sub_1BFF1F404((uint64_t)&v34, (uint64_t (*)(void))sub_1BFF84034);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v12 = v11;
    swift_bridgeObjectRetain();
    sub_1BFFAF7A4((uint64_t)&v65);
    uint64_t v13 = sub_1C00B152C(v8);
    sub_1BFCA59C8((uint64_t)&v65);
    uint64_t v64 = v4[1];
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C00B152C(v14);
    sub_1BFCA59C8((uint64_t)&v64);
    *(void *)uint64_t v12 = a1;
    *(void *)(v12 + 8) = a2;
    *(void *)(v12 + 16) = v13;
    *(void *)(v12 + 24) = v15;
    *(unsigned char *)(v12 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v62[4] = v38;
  v62[5] = v39;
  uint64_t v63 = v40;
  v62[0] = v34;
  v62[1] = v35;
  v62[2] = v36;
  void v62[3] = v37;
  sub_1BFC66384((uint64_t)v62, (uint64_t)v61);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
  if (swift_dynamicCast())
  {
    nullsub_1(&v54);
    sub_1C0DB5430((uint64_t)&v54, (uint64_t)v51, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
    sub_1C0DB5430((uint64_t)v51, (uint64_t)v52, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
    sub_1BFF1F7AC((uint64_t)v62, (uint64_t)v42, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    long long v40 = v52[6];
    v41[0] = v53[0];
    *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v53 + 9);
    long long v36 = v52[2];
    long long v37 = v52[3];
    long long v38 = v52[4];
    long long v39 = v52[5];
    long long v34 = v52[0];
    long long v35 = v52[1];
    uint64_t v20 = v43;
    uint64_t v21 = v44;
    uint64_t v22 = v45;
    uint64_t v23 = v46;
    uint64_t v25 = v47;
    uint64_t v24 = v48;
    uint64_t v26 = v50;
    uint64_t v33 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v22, v23);
    sub_1BFF1F9B0((uint64_t)v42, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    long long v27 = v41[0];
    *(_OWORD *)(a3 + 96) = v40;
    *(_OWORD *)(a3 + 112) = v27;
    *(_OWORD *)(a3 + 121) = *(_OWORD *)((char *)v41 + 9);
    long long v28 = v37;
    *(_OWORD *)(a3 + 32) = v36;
    *(_OWORD *)(a3 + 48) = v28;
    long long v29 = v39;
    *(_OWORD *)(a3 + 64) = v38;
    *(_OWORD *)(a3 + 80) = v29;
    long long v30 = v35;
    *(_OWORD *)a3 = v34;
    *(_OWORD *)(a3 + 16) = v30;
    *(void *)(a3 + 144) = v20;
    *(void *)(a3 + 152) = v21;
    *(void *)(a3 + 160) = v22;
    *(void *)(a3 + 168) = v23;
    *(void *)(a3 + 176) = v25;
    *(void *)(a3 + 184) = v24;
    *(void *)(a3 + 192) = v33;
    *(void *)(a3 + 200) = v26;
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v32 = v31;
    *uint64_t v31 = a1;
    v31[1] = a2;
    sub_1BFC66384((uint64_t)v62, (uint64_t)(v31 + 2));
    *((unsigned char *)v32 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return sub_1BFF1F9B0((uint64_t)v62, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
}

uint64_t sub_1C0DB1FC0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  int v4 = v3;
  sub_1BFF19690(0, &qword_1EB87F2D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  uint64_t v46 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (uint64_t)&v44 - v8;
  sub_1BFF19690(0, &qword_1EB870AB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = type metadata accessor for FeedWebEmbed();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v45 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v49 = (uint64_t)&v44 - v16;
  uint64_t v50 = (uint64_t (*)())a1;
  uint64_t v68 = *v3;
  uint64_t v17 = v68;
  if (*(void *)(v68 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1BFEF2D8C((uint64_t)a1, a2);
    if (v19)
    {
      sub_1BFF1F7AC(*(void *)(v17 + 56) + 104 * v18, (uint64_t)&v51, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      a1 = (uint64_t (*)(uint64_t, uint64_t))v50;
      if (*((void *)&v52 + 1))
      {
        long long v62 = v55;
        long long v63 = v56;
        uint64_t v64 = v57;
        long long v58 = v51;
        long long v59 = v52;
        long long v60 = v53;
        long long v61 = v54;
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v57 = 0;
      long long v55 = 0u;
      long long v56 = 0u;
      long long v53 = 0u;
      long long v54 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      swift_bridgeObjectRelease();
      a1 = (uint64_t (*)(uint64_t, uint64_t))v50;
    }
  }
  else
  {
    uint64_t v57 = 0;
    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
  }
  uint64_t v26 = v3[1];
  if (*(void *)(v26 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1BFEF2D8C((uint64_t)a1, a2);
    if (v28)
    {
      sub_1BFF1F7AC(*(void *)(v26 + 56) + 104 * v27, (uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      uint64_t v64 = 0;
      long long v62 = 0u;
      long long v63 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      long long v58 = 0u;
      long long v59 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v64 = 0;
    long long v62 = 0u;
    long long v63 = 0u;
    long long v60 = 0u;
    long long v61 = 0u;
    long long v58 = 0u;
    long long v59 = 0u;
  }
  sub_1BFF1F404((uint64_t)&v51, (uint64_t (*)(void))sub_1BFF84034);
  if (!*((void *)&v59 + 1))
  {
    sub_1BFF1F404((uint64_t)&v58, (uint64_t (*)(void))sub_1BFF84034);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v21 = v20;
    swift_bridgeObjectRetain();
    sub_1BFFAF7A4((uint64_t)&v68);
    uint64_t v22 = sub_1C00B152C(v17);
    sub_1BFCA59C8((uint64_t)&v68);
    uint64_t v67 = v4[1];
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C00B152C(v23);
    sub_1BFCA59C8((uint64_t)&v67);
    *(void *)uint64_t v21 = v50;
    *(void *)(v21 + 8) = a2;
    *(void *)(v21 + 16) = v22;
    *(void *)(v21 + 24) = v24;
    *(unsigned char *)(v21 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v65[4] = v62;
  v65[5] = v63;
  uint64_t v66 = v64;
  v65[0] = v58;
  v65[1] = v59;
  v65[2] = v60;
  v65[3] = v61;
  sub_1BFC66384((uint64_t)v65, (uint64_t)&v58);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
  char v29 = swift_dynamicCast();
  long long v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v29)
  {
    v30(v11, 0, 1, v12);
    uint64_t v31 = v49;
    sub_1BFF97888((uint64_t)v11, v49, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    uint64_t v32 = v31;
    uint64_t v33 = v45;
    sub_1BFF1ECB0(v32, v45, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    uint64_t v50 = type metadata accessor for FormatNodeBindingItem;
    sub_1BFF1F7AC((uint64_t)v65, (uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    uint64_t v34 = v47;
    sub_1BFF97888(v33, v47, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    uint64_t v35 = v46;
    uint64_t v36 = v61;
    *(void *)(v34 + *(int *)(v46 + 28)) = *((void *)&v60 + 1);
    *(void *)(v34 + *(int *)(v35 + 32)) = v36;
    uint64_t v37 = *((void *)&v61 + 1);
    long long v38 = v62;
    long long v40 = v63;
    uint64_t v39 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v37, v38);
    sub_1BFF1F9B0((uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))v50);
    uint64_t v41 = v34 + *(int *)(v35 + 36);
    *(void *)uint64_t v41 = v37;
    *(_OWORD *)(v41 + 8) = v38;
    *(_OWORD *)(v41 + 24) = v40;
    *(void *)(v41 + 40) = v39;
    sub_1C0DB5338(v34, v48, &qword_1EB87F2D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed);
    sub_1BFF1F404(v49, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    return sub_1BFF1F9B0((uint64_t)v65, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))v50);
  }
  else
  {
    v30(v11, 1, 1, v12);
    sub_1BFEACF00((uint64_t)v11, &qword_1EB870AB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, MEMORY[0x1E4FBB718]);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v43 = v42;
    *uint64_t v42 = v50;
    v42[1] = (uint64_t (*)())a2;
    sub_1BFC66384((uint64_t)v65, (uint64_t)(v42 + 2));
    *((unsigned char *)v43 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return sub_1BFF1F9B0((uint64_t)v65, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  }
}

uint64_t sub_1C0DB2694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  v67[0] = *v3;
  uint64_t v9 = v67[0];
  if (*(void *)(v67[0] + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1BFEF2D8C(a1, a2);
    if (v11)
    {
      sub_1BFF1F7AC(*(void *)(v67[0] + 56) + 104 * v10, (uint64_t)&v44, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      if (*((void *)&v45 + 1))
      {
        long long v58 = v48;
        long long v59 = v49;
        *(void *)&long long v60 = v50;
        long long v54 = v44;
        long long v55 = v45;
        long long v56 = v46;
        long long v57 = v47;
        goto LABEL_15;
      }
    }
    else
    {
      *(void *)&long long v50 = 0;
      long long v48 = 0u;
      long long v49 = 0u;
      long long v46 = 0u;
      long long v47 = 0u;
      long long v44 = 0u;
      long long v45 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(void *)&long long v50 = 0;
    long long v48 = 0u;
    long long v49 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v44 = 0u;
    long long v45 = 0u;
  }
  uint64_t v18 = v3[1];
  if (*(void *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1BFEF2D8C(a1, a2);
    if (v20)
    {
      sub_1BFF1F7AC(*(void *)(v18 + 56) + 104 * v19, (uint64_t)&v54, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      *(void *)&long long v60 = 0;
      long long v58 = 0u;
      long long v59 = 0u;
      long long v56 = 0u;
      long long v57 = 0u;
      long long v54 = 0u;
      long long v55 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&long long v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    long long v54 = 0u;
    long long v55 = 0u;
  }
  sub_1BFF1F404((uint64_t)&v44, (uint64_t (*)(void))sub_1BFF84034);
  if (!*((void *)&v55 + 1))
  {
    sub_1BFF1F404((uint64_t)&v54, (uint64_t (*)(void))sub_1BFF84034);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    sub_1BFFAF7A4((uint64_t)v67);
    uint64_t v14 = sub_1C00B152C(v9);
    sub_1BFCA59C8((uint64_t)v67);
    uint64_t v66 = v5[1];
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C00B152C(v15);
    sub_1BFCA59C8((uint64_t)&v66);
    *(void *)uint64_t v13 = a1;
    *(void *)(v13 + 8) = a2;
    *(void *)(v13 + 16) = v14;
    *(void *)(v13 + 24) = v16;
    *(unsigned char *)(v13 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v64[4] = v58;
  v64[5] = v59;
  uint64_t v65 = v60;
  v64[0] = v54;
  v64[1] = v55;
  v64[2] = v56;
  void v64[3] = v57;
  sub_1BFC66384((uint64_t)v64, (uint64_t)v35);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
  if (swift_dynamicCast())
  {
    long long v60 = v50;
    long long v61 = v51;
    long long v62 = v52;
    char v63 = v53;
    long long v56 = v46;
    long long v57 = v47;
    long long v58 = v48;
    long long v59 = v49;
    long long v54 = v44;
    long long v55 = v45;
    sub_1BFEA435C((uint64_t)&v54, (uint64_t)&v44);
    sub_1BFF1F7AC((uint64_t)v64, (uint64_t)v35, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    long long v21 = v51;
    *(_OWORD *)(a3 + 96) = v50;
    *(_OWORD *)(a3 + 112) = v21;
    *(_OWORD *)(a3 + 128) = v52;
    *(unsigned char *)(a3 + 144) = v53;
    long long v22 = v47;
    *(_OWORD *)(a3 + 32) = v46;
    *(_OWORD *)(a3 + 48) = v22;
    long long v23 = v49;
    *(_OWORD *)(a3 + 64) = v48;
    *(_OWORD *)(a3 + 80) = v23;
    long long v24 = v45;
    *(_OWORD *)a3 = v44;
    *(_OWORD *)(a3 + 16) = v24;
    uint64_t v25 = v36;
    uint64_t v26 = v37;
    v67[4] = v4;
    uint64_t v27 = v38;
    uint64_t v28 = v39;
    uint64_t v30 = v40;
    uint64_t v29 = v41;
    uint64_t v31 = v43;
    uint64_t v34 = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v27, v28);
    sub_1BFF1F9B0((uint64_t)v35, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    *(void *)(a3 + 152) = v25;
    *(void *)(a3 + 160) = v26;
    *(void *)(a3 + 168) = v27;
    *(void *)(a3 + 176) = v28;
    *(void *)(a3 + 184) = v30;
    *(void *)(a3 + 192) = v29;
    *(void *)(a3 + 200) = v34;
    *(void *)(a3 + 208) = v31;
    sub_1BFEA4290((uint64_t)&v54);
  }
  else
  {
    char v53 = 0;
    long long v51 = 0u;
    long long v52 = 0u;
    long long v49 = 0u;
    long long v50 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    long long v46 = 0u;
    long long v44 = 0u;
    long long v45 = 0u;
    sub_1C0DB51E8((uint64_t)&v44, &qword_1EB8819D8, (uint64_t)&type metadata for FeedTag, MEMORY[0x1E4FBB718]);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v33 = v32;
    *uint64_t v32 = a1;
    v32[1] = a2;
    sub_1BFC66384((uint64_t)v64, (uint64_t)(v32 + 2));
    *((unsigned char *)v33 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return sub_1BFF1F9B0((uint64_t)v64, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
}

uint64_t sub_1C0DB2B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  v75[0] = *v3;
  uint64_t v9 = v75[0];
  if (*(void *)(v75[0] + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1BFEF2D8C(a1, a2);
    if (v11)
    {
      sub_1BFF1F7AC(*(void *)(v75[0] + 56) + 104 * v10, (uint64_t)&v46, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      if (*((void *)&v47 + 1))
      {
        long long v63 = v50;
        long long v64 = v51;
        *(void *)&long long v65 = v52;
        long long v59 = v46;
        long long v60 = v47;
        long long v61 = v48;
        long long v62 = v49;
        goto LABEL_15;
      }
    }
    else
    {
      *(void *)&long long v52 = 0;
      long long v50 = 0u;
      long long v51 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      long long v46 = 0u;
      long long v47 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(void *)&long long v52 = 0;
    long long v50 = 0u;
    long long v51 = 0u;
    long long v48 = 0u;
    long long v49 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
  }
  uint64_t v18 = v3[1];
  if (*(void *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1BFEF2D8C(a1, a2);
    if (v20)
    {
      sub_1BFF1F7AC(*(void *)(v18 + 56) + 104 * v19, (uint64_t)&v59, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      *(void *)&long long v65 = 0;
      long long v63 = 0u;
      long long v64 = 0u;
      long long v61 = 0u;
      long long v62 = 0u;
      long long v59 = 0u;
      long long v60 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&long long v65 = 0;
    long long v63 = 0u;
    long long v64 = 0u;
    long long v61 = 0u;
    long long v62 = 0u;
    long long v59 = 0u;
    long long v60 = 0u;
  }
  sub_1BFF1F404((uint64_t)&v46, (uint64_t (*)(void))sub_1BFF84034);
  if (!*((void *)&v60 + 1))
  {
    sub_1BFF1F404((uint64_t)&v59, (uint64_t (*)(void))sub_1BFF84034);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    sub_1BFFAF7A4((uint64_t)v75);
    uint64_t v14 = sub_1C00B152C(v9);
    sub_1BFCA59C8((uint64_t)v75);
    uint64_t v74 = v5[1];
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C00B152C(v15);
    sub_1BFCA59C8((uint64_t)&v74);
    *(void *)uint64_t v13 = a1;
    *(void *)(v13 + 8) = a2;
    *(void *)(v13 + 16) = v14;
    *(void *)(v13 + 24) = v16;
    *(unsigned char *)(v13 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v72[4] = v63;
  v72[5] = v64;
  uint64_t v73 = v65;
  v72[0] = v59;
  v72[1] = v60;
  v72[2] = v61;
  v72[3] = v62;
  sub_1BFC66384((uint64_t)v72, (uint64_t)v37);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
  if (swift_dynamicCast())
  {
    long long v69 = v56;
    long long v70 = v57;
    long long v71 = v58;
    long long v65 = v52;
    long long v66 = v53;
    long long v67 = v54;
    long long v68 = v55;
    long long v61 = v48;
    long long v62 = v49;
    long long v63 = v50;
    long long v64 = v51;
    long long v59 = v46;
    long long v60 = v47;
    sub_1C01F09C0((uint64_t)&v59, (uint64_t)&v46);
    sub_1BFF1F7AC((uint64_t)v72, (uint64_t)v37, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    long long v21 = v57;
    *(_OWORD *)(a3 + 160) = v56;
    *(_OWORD *)(a3 + 176) = v21;
    *(_OWORD *)(a3 + 192) = v58;
    long long v22 = v53;
    *(_OWORD *)(a3 + 96) = v52;
    *(_OWORD *)(a3 + 112) = v22;
    long long v23 = v55;
    *(_OWORD *)(a3 + 128) = v54;
    *(_OWORD *)(a3 + 144) = v23;
    long long v24 = v49;
    *(_OWORD *)(a3 + 32) = v48;
    *(_OWORD *)(a3 + 48) = v24;
    long long v25 = v51;
    *(_OWORD *)(a3 + 64) = v50;
    *(_OWORD *)(a3 + 80) = v25;
    long long v26 = v47;
    *(_OWORD *)a3 = v46;
    *(_OWORD *)(a3 + 16) = v26;
    uint64_t v27 = v38;
    uint64_t v28 = v39;
    v75[4] = v4;
    uint64_t v29 = v40;
    uint64_t v30 = v41;
    uint64_t v32 = v42;
    uint64_t v31 = v43;
    uint64_t v33 = v45;
    uint64_t v36 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v29, v30);
    sub_1BFF1F9B0((uint64_t)v37, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    *(void *)(a3 + 208) = v27;
    *(void *)(a3 + 216) = v28;
    *(void *)(a3 + 224) = v29;
    *(void *)(a3 + 232) = v30;
    *(void *)(a3 + 240) = v32;
    *(void *)(a3 + 248) = v31;
    *(void *)(a3 + 256) = v36;
    *(void *)(a3 + 264) = v33;
    sub_1C01F0A74((uint64_t)&v59);
  }
  else
  {
    long long v57 = 0u;
    long long v58 = 0u;
    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    long long v49 = 0u;
    long long v50 = 0u;
    long long v48 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    sub_1C0DB51E8((uint64_t)&v46, (unint64_t *)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle, MEMORY[0x1E4FBB718]);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v35 = v34;
    *uint64_t v34 = a1;
    v34[1] = a2;
    sub_1BFC66384((uint64_t)v72, (uint64_t)(v34 + 2));
    *((unsigned char *)v35 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return sub_1BFF1F9B0((uint64_t)v72, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
}

uint64_t sub_1C0DB3078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v50 = *v3;
  uint64_t v8 = v50;
  if (*(void *)(v50 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1BFEF2D8C(a1, a2);
    if (v10)
    {
      sub_1BFF1F7AC(*(void *)(v50 + 56) + 104 * v9, (uint64_t)&v34, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      if (*((void *)&v35[0] + 1))
      {
        long long v44 = v37;
        long long v45 = v38;
        uint64_t v46 = v39;
        long long v40 = v34;
        long long v41 = v35[0];
        long long v42 = v35[1];
        long long v43 = v36;
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v39 = 0;
      long long v37 = 0u;
      long long v38 = 0u;
      long long v36 = 0u;
      long long v34 = 0u;
      memset(v35, 0, sizeof(v35));
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v39 = 0;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v36 = 0u;
    long long v34 = 0u;
    memset(v35, 0, sizeof(v35));
  }
  uint64_t v17 = v3[1];
  if (*(void *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1BFEF2D8C(a1, a2);
    if (v19)
    {
      sub_1BFF1F7AC(*(void *)(v17 + 56) + 104 * v18, (uint64_t)&v40, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      uint64_t v46 = 0;
      long long v44 = 0u;
      long long v45 = 0u;
      long long v42 = 0u;
      long long v43 = 0u;
      long long v40 = 0u;
      long long v41 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = 0;
    long long v44 = 0u;
    long long v45 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
  }
  sub_1BFF1F404((uint64_t)&v34, (uint64_t (*)(void))sub_1BFF84034);
  if (!*((void *)&v41 + 1))
  {
    sub_1BFF1F404((uint64_t)&v40, (uint64_t (*)(void))sub_1BFF84034);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v12 = v11;
    swift_bridgeObjectRetain();
    sub_1BFFAF7A4((uint64_t)&v50);
    uint64_t v13 = sub_1C00B152C(v8);
    sub_1BFCA59C8((uint64_t)&v50);
    uint64_t v49 = v4[1];
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C00B152C(v14);
    sub_1BFCA59C8((uint64_t)&v49);
    *(void *)uint64_t v12 = a1;
    *(void *)(v12 + 8) = a2;
    *(void *)(v12 + 16) = v13;
    *(void *)(v12 + 24) = v15;
    *(unsigned char *)(v12 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v47[4] = v44;
  v47[5] = v45;
  uint64_t v48 = v46;
  v47[0] = v40;
  v47[1] = v41;
  long long v47[2] = v42;
  v47[3] = v43;
  sub_1BFC66384((uint64_t)v47, (uint64_t)v33);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
  if (swift_dynamicCast())
  {
    uint64_t v28 = *((void *)&v34 + 1);
    uint64_t v29 = v34;
    char v27 = v35[0];
    long long v32 = *(_OWORD *)((char *)v35 + 8);
    uint64_t v31 = *((void *)&v35[1] + 1);
    long long v30 = v36;
    sub_1BFF1F7AC((uint64_t)v47, (uint64_t)&v40, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    uint64_t v20 = *((void *)&v42 + 1);
    long long v21 = v43;
    long long v22 = v44;
    long long v23 = v45;
    uint64_t v26 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(*((uint64_t *)&v21 + 1), v22);
    sub_1BFF1F9B0((uint64_t)&v40, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    *(void *)a3 = v29;
    *(void *)(a3 + 8) = v28;
    *(unsigned char *)(a3 + 16) = v27 & 1;
    *(_OWORD *)(a3 + 24) = v32;
    *(void *)(a3 + 40) = v31;
    *(_OWORD *)(a3 + 48) = v30;
    *(void *)(a3 + 64) = v20;
    *(_OWORD *)(a3 + 72) = v21;
    *(_OWORD *)(a3 + 88) = v22;
    *(_OWORD *)(a3 + 104) = v23;
    *(void *)(a3 + 120) = v26;
  }
  else
  {
    sub_1BFF7DFA8();
    swift_allocError();
    long long v25 = v24;
    *long long v24 = a1;
    v24[1] = a2;
    sub_1BFC66384((uint64_t)v47, (uint64_t)(v24 + 2));
    *((unsigned char *)v25 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return sub_1BFF1F9B0((uint64_t)v47, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
}

uint64_t sub_1C0DB3500@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v4 = v3;
  sub_1BFF19690(0, &qword_1EB884A90, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  uint64_t v46 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (uint64_t)&v44 - v8;
  sub_1BFF19690(0, &qword_1EB890D98, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = type metadata accessor for FeedPuzzleStatistic();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v45 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v49 = (uint64_t)&v44 - v16;
  uint64_t v50 = (uint64_t (*)())a1;
  uint64_t v68 = *v3;
  uint64_t v17 = v68;
  if (*(void *)(v68 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1BFEF2D8C((uint64_t)a1, a2);
    if (v19)
    {
      sub_1BFF1F7AC(*(void *)(v17 + 56) + 104 * v18, (uint64_t)&v51, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      a1 = (uint64_t (*)(uint64_t, uint64_t))v50;
      if (*((void *)&v52 + 1))
      {
        long long v62 = v55;
        long long v63 = v56;
        uint64_t v64 = v57;
        long long v58 = v51;
        long long v59 = v52;
        long long v60 = v53;
        long long v61 = v54;
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v57 = 0;
      long long v55 = 0u;
      long long v56 = 0u;
      long long v53 = 0u;
      long long v54 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      swift_bridgeObjectRelease();
      a1 = (uint64_t (*)(uint64_t, uint64_t))v50;
    }
  }
  else
  {
    uint64_t v57 = 0;
    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
  }
  uint64_t v26 = v3[1];
  if (*(void *)(v26 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1BFEF2D8C((uint64_t)a1, a2);
    if (v28)
    {
      sub_1BFF1F7AC(*(void *)(v26 + 56) + 104 * v27, (uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      uint64_t v64 = 0;
      long long v62 = 0u;
      long long v63 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      long long v58 = 0u;
      long long v59 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v64 = 0;
    long long v62 = 0u;
    long long v63 = 0u;
    long long v60 = 0u;
    long long v61 = 0u;
    long long v58 = 0u;
    long long v59 = 0u;
  }
  sub_1BFF1F404((uint64_t)&v51, (uint64_t (*)(void))sub_1BFF84034);
  if (!*((void *)&v59 + 1))
  {
    sub_1BFF1F404((uint64_t)&v58, (uint64_t (*)(void))sub_1BFF84034);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v21 = v20;
    swift_bridgeObjectRetain();
    sub_1BFFAF7A4((uint64_t)&v68);
    uint64_t v22 = sub_1C00B152C(v17);
    sub_1BFCA59C8((uint64_t)&v68);
    uint64_t v67 = v4[1];
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C00B152C(v23);
    sub_1BFCA59C8((uint64_t)&v67);
    *(void *)uint64_t v21 = v50;
    *(void *)(v21 + 8) = a2;
    *(void *)(v21 + 16) = v22;
    *(void *)(v21 + 24) = v24;
    *(unsigned char *)(v21 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v65[4] = v62;
  v65[5] = v63;
  uint64_t v66 = v64;
  v65[0] = v58;
  v65[1] = v59;
  v65[2] = v60;
  v65[3] = v61;
  sub_1BFC66384((uint64_t)v65, (uint64_t)&v58);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
  char v29 = swift_dynamicCast();
  long long v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v29)
  {
    v30(v11, 0, 1, v12);
    uint64_t v31 = v49;
    sub_1BFF97888((uint64_t)v11, v49, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    uint64_t v32 = v31;
    uint64_t v33 = v45;
    sub_1BFF1ECB0(v32, v45, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    uint64_t v50 = type metadata accessor for FormatNodeBindingItem;
    sub_1BFF1F7AC((uint64_t)v65, (uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    uint64_t v34 = v47;
    sub_1BFF97888(v33, v47, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    uint64_t v35 = v46;
    uint64_t v36 = v61;
    *(void *)(v34 + *(int *)(v46 + 28)) = *((void *)&v60 + 1);
    *(void *)(v34 + *(int *)(v35 + 32)) = v36;
    uint64_t v37 = *((void *)&v61 + 1);
    long long v38 = v62;
    long long v40 = v63;
    uint64_t v39 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v37, v38);
    sub_1BFF1F9B0((uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))v50);
    uint64_t v41 = v34 + *(int *)(v35 + 36);
    *(void *)uint64_t v41 = v37;
    *(_OWORD *)(v41 + 8) = v38;
    *(_OWORD *)(v41 + 24) = v40;
    *(void *)(v41 + 40) = v39;
    sub_1C0DB5338(v34, v48, &qword_1EB884A90, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
    sub_1BFF1F404(v49, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
    return sub_1BFF1F9B0((uint64_t)v65, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))v50);
  }
  else
  {
    v30(v11, 1, 1, v12);
    sub_1BFEACF00((uint64_t)v11, &qword_1EB890D98, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, MEMORY[0x1E4FBB718]);
    sub_1BFF7DFA8();
    swift_allocError();
    long long v43 = v42;
    *long long v42 = v50;
    v42[1] = (uint64_t (*)())a2;
    sub_1BFC66384((uint64_t)v65, (uint64_t)(v42 + 2));
    *((unsigned char *)v43 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return sub_1BFF1F9B0((uint64_t)v65, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  }
}

uint64_t sub_1C0DB3BD4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v4 = v3;
  sub_1BFF19690(0, &qword_1EB88A2C8, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  uint64_t v46 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (uint64_t)&v44 - v8;
  sub_1BFF19690(0, qword_1EB882BA8, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = type metadata accessor for FeedCustomItem();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v45 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v49 = (uint64_t)&v44 - v16;
  uint64_t v50 = (uint64_t (*)())a1;
  uint64_t v68 = *v3;
  uint64_t v17 = v68;
  if (*(void *)(v68 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1BFEF2D8C((uint64_t)a1, a2);
    if (v19)
    {
      sub_1BFF1F7AC(*(void *)(v17 + 56) + 104 * v18, (uint64_t)&v51, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      a1 = (uint64_t (*)(uint64_t, uint64_t))v50;
      if (*((void *)&v52 + 1))
      {
        long long v62 = v55;
        long long v63 = v56;
        uint64_t v64 = v57;
        long long v58 = v51;
        long long v59 = v52;
        long long v60 = v53;
        long long v61 = v54;
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v57 = 0;
      long long v55 = 0u;
      long long v56 = 0u;
      long long v53 = 0u;
      long long v54 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      swift_bridgeObjectRelease();
      a1 = (uint64_t (*)(uint64_t, uint64_t))v50;
    }
  }
  else
  {
    uint64_t v57 = 0;
    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
  }
  uint64_t v26 = v3[1];
  if (*(void *)(v26 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1BFEF2D8C((uint64_t)a1, a2);
    if (v28)
    {
      sub_1BFF1F7AC(*(void *)(v26 + 56) + 104 * v27, (uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      uint64_t v64 = 0;
      long long v62 = 0u;
      long long v63 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      long long v58 = 0u;
      long long v59 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v64 = 0;
    long long v62 = 0u;
    long long v63 = 0u;
    long long v60 = 0u;
    long long v61 = 0u;
    long long v58 = 0u;
    long long v59 = 0u;
  }
  sub_1BFF1F404((uint64_t)&v51, (uint64_t (*)(void))sub_1BFF84034);
  if (!*((void *)&v59 + 1))
  {
    sub_1BFF1F404((uint64_t)&v58, (uint64_t (*)(void))sub_1BFF84034);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v21 = v20;
    swift_bridgeObjectRetain();
    sub_1BFFAF7A4((uint64_t)&v68);
    uint64_t v22 = sub_1C00B152C(v17);
    sub_1BFCA59C8((uint64_t)&v68);
    uint64_t v67 = v4[1];
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C00B152C(v23);
    sub_1BFCA59C8((uint64_t)&v67);
    *(void *)uint64_t v21 = v50;
    *(void *)(v21 + 8) = a2;
    *(void *)(v21 + 16) = v22;
    *(void *)(v21 + 24) = v24;
    *(unsigned char *)(v21 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v65[4] = v62;
  v65[5] = v63;
  uint64_t v66 = v64;
  v65[0] = v58;
  v65[1] = v59;
  v65[2] = v60;
  v65[3] = v61;
  sub_1BFC66384((uint64_t)v65, (uint64_t)&v58);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
  char v29 = swift_dynamicCast();
  long long v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v29)
  {
    v30(v11, 0, 1, v12);
    uint64_t v31 = v49;
    sub_1BFF97888((uint64_t)v11, v49, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
    uint64_t v32 = v31;
    uint64_t v33 = v45;
    sub_1BFF1ECB0(v32, v45, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
    uint64_t v50 = type metadata accessor for FormatNodeBindingItem;
    sub_1BFF1F7AC((uint64_t)v65, (uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    uint64_t v34 = v47;
    sub_1BFF97888(v33, v47, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
    uint64_t v35 = v46;
    uint64_t v36 = v61;
    *(void *)(v34 + *(int *)(v46 + 28)) = *((void *)&v60 + 1);
    *(void *)(v34 + *(int *)(v35 + 32)) = v36;
    uint64_t v37 = *((void *)&v61 + 1);
    long long v38 = v62;
    long long v40 = v63;
    uint64_t v39 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v37, v38);
    sub_1BFF1F9B0((uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))v50);
    uint64_t v41 = v34 + *(int *)(v35 + 36);
    *(void *)uint64_t v41 = v37;
    *(_OWORD *)(v41 + 8) = v38;
    *(_OWORD *)(v41 + 24) = v40;
    *(void *)(v41 + 40) = v39;
    sub_1C0DB5338(v34, v48, &qword_1EB88A2C8, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem);
    sub_1BFF1F404(v49, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
    return sub_1BFF1F9B0((uint64_t)v65, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))v50);
  }
  else
  {
    v30(v11, 1, 1, v12);
    sub_1BFEACF00((uint64_t)v11, qword_1EB882BA8, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, MEMORY[0x1E4FBB718]);
    sub_1BFF7DFA8();
    swift_allocError();
    long long v43 = v42;
    *long long v42 = v50;
    v42[1] = (uint64_t (*)())a2;
    sub_1BFC66384((uint64_t)v65, (uint64_t)(v42 + 2));
    *((unsigned char *)v43 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return sub_1BFF1F9B0((uint64_t)v65, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  }
}

uint64_t sub_1C0DB42A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v59 = *v2;
  uint64_t v4 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v60 = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v78[2] = *(_OWORD *)(a1 + 32);
  v78[3] = v7;
  v78[4] = *(_OWORD *)(a1 + 64);
  char v79 = *(unsigned char *)(a1 + 80);
  long long v8 = *(_OWORD *)(a1 + 16);
  v78[0] = *(_OWORD *)a1;
  v78[1] = v8;
  uint64_t v9 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  long long v10 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0DB60F8((uint64_t)v78);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v69[0] = v9;
  sub_1C1066270((uint64_t)v78, v10, *((uint64_t *)&v10 + 1), isUniquelyReferenced_nonNull_native);
  uint64_t v61 = v69[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1ECB0((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  char v12 = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  char v13 = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  uint64_t v14 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  uint64_t v16 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  uint64_t v15 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  uint64_t v17 = *(void **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  uint64_t v55 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  long long v56 = v17;
  uint64_t v18 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
  uint64_t v53 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
  uint64_t v54 = v18;
  LOBYTE(v69[0]) = v12;
  BYTE1(v69[0]) = v13;
  v69[1] = v14;
  long long v50 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  long long v70 = v50;
  uint64_t v71 = v16;
  uint64_t v72 = v15;
  uint64_t v73 = v17;
  uint64_t v74 = v55;
  uint64_t v75 = v18;
  uint64_t v76 = v53;
  uint64_t v62 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  uint64_t v57 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  long long v19 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  long long v20 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  long long v21 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  v77[2] = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  v77[3] = v21;
  uint64_t v52 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v77[0] = v19;
  v77[1] = v20;
  uint64_t v22 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  uint64_t v23 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  sub_1BFF1F7AC((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v68, qword_1EB873870, MEMORY[0x1E4FBB718]);
  uint64_t v24 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  uint64_t v25 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  uint64_t v26 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  uint64_t v44 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  uint64_t v45 = v26;
  uint64_t v27 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  uint64_t v42 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  uint64_t v43 = v27;
  uint64_t v28 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  uint64_t v41 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(void *)&long long v63 = v26;
  *((void *)&v63 + 1) = v44;
  uint64_t v64 = v27;
  uint64_t v65 = v42;
  uint64_t v66 = v28;
  uint64_t v67 = v41;
  uint64_t v29 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  uint64_t v58 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  uint64_t v47 = v29;
  uint64_t v48 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  uint64_t v30 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  uint64_t v51 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  uint64_t v46 = v30;
  uint64_t v31 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  uint64_t v32 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  uint64_t v49 = v31;
  uint64_t v59 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E730(v15, v56);
  swift_retain();
  uint64_t v33 = v57;
  swift_retain();
  sub_1BFF1E79C((uint64_t)v77);
  uint64_t v34 = v52;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E6CC(v45, v44);
  uint64_t v35 = v32;
  swift_bridgeObjectRetain();
  uint64_t v36 = v47;
  swift_bridgeObjectRetain();
  uint64_t v37 = v48;
  swift_retain();
  uint64_t v38 = swift_bridgeObjectRetain();
  return sub_1C0DAFA8C((uint64_t)v60, (char *)v69, v62, v33, v77, v34, v22, v23, (uint64_t)v68, v24, v25, &v63, v61, v58, v36, v37, v51, v38, v49,
           v35);
}

uint64_t sub_1C0DB46B8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = a1[1];
  if (v8)
  {
    uint64_t v50 = a1[3];
    uint64_t v47 = (void *)a1[2];
    uint64_t v9 = *a1;
    uint64_t v49 = (uint64_t)v39 - v7;
    sub_1BFF1ECB0((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)v39 - v7, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    char v10 = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    uint64_t v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    uint64_t v12 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    uint64_t v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
    uint64_t v15 = *(void **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
    uint64_t v14 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
    uint64_t v16 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
    uint64_t v17 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
    v57[0] = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    v57[1] = v10;
    uint64_t v58 = v11;
    long long v59 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    uint64_t v60 = v12;
    uint64_t v61 = v13;
    uint64_t v48 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
    uint64_t v62 = v15;
    uint64_t v63 = v14;
    uint64_t v46 = v4;
    uint64_t v64 = v16;
    uint64_t v65 = v17;
    *(void *)&long long v66 = v9;
    *((void *)&v66 + 1) = v8;
    *(void *)&long long v67 = v47;
    *((void *)&v67 + 1) = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E730(v13, v15);
    swift_retain();
    uint64_t v47 = sub_1C1162A40((uint64_t *)&v66);
    swift_bridgeObjectRelease();
    long long v18 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
    long long v66 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
    long long v67 = v18;
    long long v19 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
    long long v20 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
    uint64_t v50 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
    long long v68 = v19;
    long long v69 = v20;
    uint64_t v21 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
    uint64_t v22 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
    sub_1BFF1F7AC((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v56, qword_1EB873870, MEMORY[0x1E4FBB718]);
    uint64_t v24 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    uint64_t v23 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
    uint64_t v25 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
    v39[0] = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
    uint64_t v26 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
    uint64_t v27 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    uint64_t v29 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
    uint64_t v28 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
    *(void *)&long long v51 = v25;
    *((void *)&v51 + 1) = v39[0];
    uint64_t v52 = v26;
    uint64_t v53 = v27;
    uint64_t v54 = v29;
    uint64_t v55 = v28;
    uint64_t v42 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
    uint64_t v30 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    uint64_t v45 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    uint64_t v40 = v30;
    uint64_t v41 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
    uint64_t v31 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    uint64_t v44 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    v39[1] = v31;
    uint64_t v32 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
    uint64_t v33 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
    uint64_t v43 = v32;
    uint64_t v46 = swift_allocObject();
    sub_1BFF1E79C((uint64_t)&v66);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v25, v39[0]);
    swift_bridgeObjectRetain();
    uint64_t v34 = v42;
    swift_bridgeObjectRetain();
    uint64_t v35 = v40;
    swift_bridgeObjectRetain();
    uint64_t v36 = v41;
    swift_retain();
    uint64_t v37 = swift_bridgeObjectRetain();
    return sub_1C0DAFA8C(v49, v57, v48, (uint64_t)v47, &v66, v50, v21, v22, (uint64_t)v56, v24, v23, &v51, v34, v45, v35, v36, v44, v37, v43,
             v33);
  }
  else
  {
    swift_retain();
  }
  return (uint64_t)v2;
}

uint64_t sub_1C0DB4B3C(unint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = a1[2];
  if (v8 == 1)
  {
    swift_retain();
  }
  else
  {
    uint64_t v60 = v4;
    unint64_t v9 = a1[8];
    unint64_t v63 = a1[9];
    unint64_t v49 = v9;
    uint64_t v11 = (void *)a1[6];
    unint64_t v58 = a1[7];
    unint64_t v10 = v58;
    uint64_t v57 = v11;
    uint64_t v13 = a1[4];
    uint64_t v56 = a1[5];
    uint64_t v12 = v56;
    uint64_t v55 = v13;
    uint64_t v54 = a1[3];
    uint64_t v14 = v54;
    uint64_t v17 = a1;
    unint64_t v15 = *a1;
    uint64_t v53 = v17[1];
    uint64_t v16 = v53;
    unint64_t v62 = v15 >> 8;
    uint64_t v61 = (uint64_t)&v39 - v7;
    sub_1BFF1ECB0((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)&v39 - v7, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    v70[0] = v15 & 1;
    v70[1] = v62;
    uint64_t v71 = v16;
    uint64_t v72 = v8;
    uint64_t v73 = v14;
    uint64_t v74 = v13;
    uint64_t v75 = v12;
    uint64_t v76 = v11;
    unint64_t v77 = v10;
    unint64_t v78 = v9;
    unint64_t v79 = v63;
    unint64_t v62 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
    uint64_t v18 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    long long v19 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
    long long v20 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
    long long v21 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
    v80[2] = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
    v80[3] = v21;
    uint64_t v51 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
    v80[0] = v19;
    v80[1] = v20;
    uint64_t v52 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
    uint64_t v22 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
    sub_1BFF1F7AC((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v69, qword_1EB873870, MEMORY[0x1E4FBB718]);
    uint64_t v23 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    uint64_t v24 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
    uint64_t v25 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
    uint64_t v43 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
    uint64_t v42 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
    uint64_t v41 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    uint64_t v26 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
    uint64_t v40 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
    *(void *)&long long v64 = v25;
    *((void *)&v64 + 1) = v43;
    uint64_t v65 = v42;
    uint64_t v66 = v41;
    uint64_t v67 = v40;
    uint64_t v68 = v26;
    uint64_t v47 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
    uint64_t v27 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    uint64_t v59 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    uint64_t v45 = v27;
    uint64_t v46 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
    uint64_t v28 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    uint64_t v50 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    uint64_t v44 = v28;
    uint64_t v29 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
    uint64_t v30 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
    uint64_t v48 = v29;
    uint64_t v60 = swift_allocObject();
    sub_1C0DB506C(v15, v53, v8, v54, v55, v56, v57);
    swift_retain();
    swift_retain();
    sub_1BFF1E79C((uint64_t)v80);
    uint64_t v31 = v51;
    swift_bridgeObjectRetain();
    uint64_t v32 = v52;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v25, v43);
    uint64_t v33 = v30;
    swift_bridgeObjectRetain();
    uint64_t v34 = v47;
    swift_bridgeObjectRetain();
    uint64_t v35 = v45;
    swift_bridgeObjectRetain();
    uint64_t v36 = v46;
    swift_retain();
    uint64_t v37 = swift_bridgeObjectRetain();
    return sub_1C0DAFA8C(v61, v70, v62, v18, v80, v31, v32, v22, (uint64_t)v69, v23, v24, &v64, v34, v59, v35, v36, v50, v37, v48,
             v33);
  }
  return (uint64_t)v2;
}

uint64_t sub_1C0DB5034()
{
  return type metadata accessor for FormatNodeContext();
}

uint64_t method lookup function for FormatNodeContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatNodeContext);
}

uint64_t sub_1C0DB5054()
{
  return objectdestroy_7Tm(MEMORY[0x1E4FBC898]);
}

void sub_1C0DB506C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E730(a6, a7);
  }
}

uint64_t sub_1C0DB50EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0DB5124()
{
  return objectdestroy_7Tm(MEMORY[0x1E4FBC8D0]);
}

void *sub_1C0DB513C(void *a1)
{
  uint64_t v2 = a1[10];
  uint64_t v3 = a1[11];
  sub_1BFEEFC20(a1[3], a1[4]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1EB14(v2, v3);
  return a1;
}

uint64_t sub_1C0DB51E8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  sub_1C0DB5600(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C0DB5244(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void **)(a1 + 104);
  unint64_t v8 = *(void *)(a1 + 128);
  uint64_t v10 = *(void *)(a1 + 120);
  uint64_t v11 = *(void *)(a1 + 168);
  uint64_t v12 = *(void *)(a1 + 160);

  swift_bridgeObjectRelease();
  sub_1BFFF2340(v3, v4, v5, v6, v7);
  sub_1BFEEFC20(v10, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1EB14(v12, v11);
  return a1;
}

uint64_t sub_1C0DB5338(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFF19690(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0DB53B8()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 144) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0DB5430(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C0DB5600(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0DB54B0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C0DB5520()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 128)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  }
  if (*(void *)(v0 + 168)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  }
  if (*(void *)(v0 + 208)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0DB55B0()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1C0DB5600(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0DB564C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0DB645C(0, (unint64_t *)&qword_1EA198EA0, MEMORY[0x1E4FAAFC8]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v46 - v6;
  sub_1C0DB64C4(0, &qword_1EA1A7250, (unint64_t *)&qword_1EA198EA0, v2);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v46 - v12;
  uint64_t v16 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v18 = v1[2];
  int64_t v17 = v1[3];
  int64_t v19 = v17;
  unint64_t v20 = v1[4];
  uint64_t v46 = v7;
  if (v20)
  {
    unint64_t v49 = v10;
    int64_t v50 = v17;
    uint64_t v47 = v18;
    uint64_t v48 = v15;
    uint64_t v21 = v4;
    uint64_t v22 = (v20 - 1) & v20;
    unint64_t v23 = __clz(__rbit64(v20)) | (v17 << 6);
LABEL_3:
    uint64_t v24 = *(void *)(v16 + 56);
    uint64_t v25 = (uint64_t *)(*(void *)(v16 + 48) + 16 * v23);
    uint64_t v26 = v16;
    uint64_t v28 = *v25;
    uint64_t v27 = v25[1];
    uint64_t v29 = sub_1C1518CDC();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = v24 + *(void *)(v30 + 72) * v23;
    uint64_t v4 = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(&v14[*(int *)(v21 + 48)], v31, v29);
    *(void *)uint64_t v14 = v28;
    *((void *)v14 + 1) = v27;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v21);
    uint64_t v16 = v26;
    swift_bridgeObjectRetain();
    uint64_t v15 = v48;
    uint64_t v10 = v49;
    uint64_t v18 = v47;
    goto LABEL_25;
  }
  int64_t v32 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v19 = v12;
    goto LABEL_24;
  }
  int64_t v33 = (unint64_t)(v18 + 64) >> 6;
  if (v32 < v33)
  {
    unint64_t v34 = *(void *)(v15 + 8 * v32);
    if (v34)
    {
LABEL_7:
      uint64_t v47 = v18;
      uint64_t v48 = v15;
      unint64_t v49 = v10;
      int64_t v50 = v32;
      uint64_t v21 = v4;
      uint64_t v22 = (v34 - 1) & v34;
      unint64_t v23 = __clz(__rbit64(v34)) + (v32 << 6);
      goto LABEL_3;
    }
    int64_t v35 = v17 + 2;
    int64_t v19 = v17 + 1;
    if (v17 + 2 < v33)
    {
      unint64_t v34 = *(void *)(v15 + 8 * v35);
      if (v34)
      {
LABEL_10:
        int64_t v32 = v35;
        goto LABEL_7;
      }
      int64_t v19 = v17 + 2;
      if (v17 + 3 < v33)
      {
        unint64_t v34 = *(void *)(v15 + 8 * (v17 + 3));
        if (v34)
        {
          int64_t v32 = v17 + 3;
          goto LABEL_7;
        }
        int64_t v35 = v17 + 4;
        int64_t v19 = v17 + 3;
        if (v17 + 4 < v33)
        {
          unint64_t v34 = *(void *)(v15 + 8 * v35);
          if (v34) {
            goto LABEL_10;
          }
          int64_t v32 = v17 + 5;
          int64_t v19 = v17 + 4;
          if (v17 + 5 < v33)
          {
            unint64_t v34 = *(void *)(v15 + 8 * v32);
            if (v34) {
              goto LABEL_7;
            }
            int64_t v12 = v33 - 1;
            uint64_t v36 = v17 + 6;
            while (v33 != v36)
            {
              unint64_t v34 = *(void *)(v15 + 8 * v36++);
              if (v34)
              {
                int64_t v32 = v36 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v50 = v19;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v14, 1, 1, v4, v13);
  uint64_t v22 = 0;
LABEL_25:
  *uint64_t v1 = v16;
  v1[1] = v15;
  int64_t v37 = v50;
  v1[2] = v18;
  v1[3] = v37;
  v1[4] = v22;
  uint64_t v38 = (void (*)(uint64_t))v1[5];
  sub_1C0DB651C((uint64_t)v14, (uint64_t)v10, &qword_1EA1A7250, (unint64_t *)&qword_1EA198EA0, MEMORY[0x1E4FAAFC8]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1C0DB658C(0, (unint64_t *)&qword_1EB8704B0, MEMORY[0x1E4FAAFC8]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v51, 1, 1, v39);
  }
  else
  {
    uint64_t v41 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
    uint64_t v42 = (uint64_t)v10;
    uint64_t v43 = (uint64_t)v46;
    sub_1C0DB6394(v42, (uint64_t)v46, (unint64_t *)&qword_1EA198EA0, MEMORY[0x1E4FAAFC8]);
    uint64_t v44 = v51;
    v38(v43);
    sub_1C0DB6400(v43, (unint64_t *)&qword_1EA198EA0, v41);
    sub_1C0DB658C(0, (unint64_t *)&qword_1EB8704B0, v41);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
  }
}

uint64_t sub_1C0DB5AD8()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void *)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v11(&v19, v20);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  __n128 v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      uint64_t v15 = v0[1];
      uint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      int64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        uint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          __n128 v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          uint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            __n128 v13 = v3 + 3;
            goto LABEL_7;
          }
          int64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            uint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            __n128 v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              uint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              uint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                uint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  __n128 v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_1C0DB5C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  sub_1C0DB645C(0, (unint64_t *)&qword_1EB863270, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v42 - v5;
  sub_1C0DB64C4(0, &qword_1EB863278, (unint64_t *)&qword_1EB863270, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v12 = MEMORY[0x1F4188790](v10);
  __n128 v13 = (char **)((char *)&v42 - v11);
  uint64_t v15 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v17 = v1[2];
  int64_t v16 = v1[3];
  int64_t v18 = v16;
  unint64_t v19 = v1[4];
  uint64_t v42 = v6;
  if (v19)
  {
    uint64_t v45 = v9;
    int64_t v46 = v16;
    uint64_t v43 = v17;
    uint64_t v44 = v14;
    uint64_t v20 = v3;
    uint64_t v21 = (v19 - 1) & v19;
    unint64_t v22 = __clz(__rbit64(v19)) | (v16 << 6);
LABEL_3:
    uint64_t v23 = *(void *)(v15 + 56);
    uint64_t v24 = (uint64_t *)(*(void *)(v15 + 48) + 16 * v22);
    uint64_t v25 = v15;
    uint64_t v27 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v28 = v23 + *(void *)(*(void *)(type metadata accessor for FeedClusteringOptions(0) - 8) + 72) * v22;
    uint64_t v3 = v20;
    sub_1BFF1ECB0(v28, (uint64_t)v13 + *(int *)(v20 + 48), type metadata accessor for FeedClusteringOptions);
    *__n128 v13 = v27;
    v13[1] = v26;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v20);
    uint64_t v15 = v25;
    swift_bridgeObjectRetain();
    uint64_t v14 = v44;
    uint64_t v9 = v45;
    uint64_t v17 = v43;
    goto LABEL_25;
  }
  int64_t v29 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v18 = v11;
    goto LABEL_24;
  }
  int64_t v30 = (unint64_t)(v17 + 64) >> 6;
  if (v29 < v30)
  {
    unint64_t v31 = *(void *)(v14 + 8 * v29);
    if (v31)
    {
LABEL_7:
      uint64_t v43 = v17;
      uint64_t v44 = v14;
      uint64_t v45 = v9;
      int64_t v46 = v29;
      uint64_t v20 = v3;
      uint64_t v21 = (v31 - 1) & v31;
      unint64_t v22 = __clz(__rbit64(v31)) + (v29 << 6);
      goto LABEL_3;
    }
    int64_t v32 = v16 + 2;
    int64_t v18 = v16 + 1;
    if (v16 + 2 < v30)
    {
      unint64_t v31 = *(void *)(v14 + 8 * v32);
      if (v31)
      {
LABEL_10:
        int64_t v29 = v32;
        goto LABEL_7;
      }
      int64_t v18 = v16 + 2;
      if (v16 + 3 < v30)
      {
        unint64_t v31 = *(void *)(v14 + 8 * (v16 + 3));
        if (v31)
        {
          int64_t v29 = v16 + 3;
          goto LABEL_7;
        }
        int64_t v32 = v16 + 4;
        int64_t v18 = v16 + 3;
        if (v16 + 4 < v30)
        {
          unint64_t v31 = *(void *)(v14 + 8 * v32);
          if (v31) {
            goto LABEL_10;
          }
          int64_t v29 = v16 + 5;
          int64_t v18 = v16 + 4;
          if (v16 + 5 < v30)
          {
            unint64_t v31 = *(void *)(v14 + 8 * v29);
            if (v31) {
              goto LABEL_7;
            }
            int64_t v11 = v30 - 1;
            uint64_t v33 = v16 + 6;
            while (v30 != v33)
            {
              unint64_t v31 = *(void *)(v14 + 8 * v33++);
              if (v31)
              {
                int64_t v29 = v33 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v46 = v18;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v13, 1, 1, v3, v12);
  uint64_t v21 = 0;
LABEL_25:
  *uint64_t v1 = v15;
  v1[1] = v14;
  int64_t v34 = v46;
  v1[2] = v17;
  v1[3] = v34;
  v1[4] = v21;
  int64_t v35 = (void (*)(uint64_t))v1[5];
  sub_1C0DB651C((uint64_t)v13, (uint64_t)v9, &qword_1EB863278, (unint64_t *)&qword_1EB863270, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_1C0DB658C(0, (unint64_t *)&qword_1EB861420, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v47, 1, 1, v36);
  }
  else
  {
    uint64_t v38 = (uint64_t)v9;
    uint64_t v39 = (uint64_t)v42;
    sub_1C0DB6394(v38, (uint64_t)v42, (unint64_t *)&qword_1EB863270, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    uint64_t v40 = v47;
    v35(v39);
    sub_1C0DB6400(v39, (unint64_t *)&qword_1EB863270, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    sub_1C0DB658C(0, (unint64_t *)&qword_1EB861420, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
}

uint64_t sub_1C0DB60F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  char v6 = *(unsigned char *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF429DC(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_1C0DB6188()
{
  uint64_t v1 = type metadata accessor for GroupLayoutContext();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = sub_1C151772C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 20);
  uint64_t v5 = sub_1C151757C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = v0 + v2 + *(int *)(v1 + 24);
  if (*(void *)(v6 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v7 = v6 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v8 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = sub_1C151B62C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0DB6394(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C0DB645C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0DB6400(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0DB645C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C0DB645C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C0DB64C4(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C0DB645C(255, a3, a4);
    unint64_t v5 = sub_1C151FD8C();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0DB651C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_1C0DB64C4(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1C0DB658C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0DB65F8(void *a1)
{
  return FormatAnimationNodeAnimation.encode(to:)(a1);
}

uint64_t _s8NewsFeed019FormatAnimationNodeD0O2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  unint64_t v4 = (unint64_t)*a1 >> 62;
  if (!v4)
  {
    if (!(v3 >> 62))
    {
      uint64_t v8 = *(void *)(v2 + 16);
      uint64_t v9 = *(void *)(v3 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v7 = _s8NewsFeed024FormatAnimationNodeBasicD0C2eeoiySbAC_ACtFZ_0(v8, v9);
      goto LABEL_9;
    }
LABEL_10:
    char v12 = 0;
    return v12 & 1;
  }
  if (v4 != 1)
  {
    if (v3 >> 62 == 2)
    {
      uint64_t v10 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v7 = _s8NewsFeed024FormatAnimationNodeGroupD0C2eeoiySbAC_ACtFZ_0(v10, v11);
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  if (v3 >> 62 != 1) {
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v6 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v7 = _s8NewsFeed025FormatAnimationNodeSpringD0C2eeoiySbAC_ACtFZ_0(v5, v6);
LABEL_9:
  char v12 = v7;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v12 & 1;
}

unint64_t sub_1C0DB6760(uint64_t a1)
{
  unint64_t result = sub_1C0DB6788();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DB6788()
{
  unint64_t result = qword_1EA1A7258;
  if (!qword_1EA1A7258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7258);
  }
  return result;
}

unint64_t sub_1C0DB67DC(void *a1)
{
  a1[1] = sub_1C008DFCC();
  a1[2] = sub_1C0872E38();
  unint64_t result = sub_1C0DB6814();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DB6814()
{
  unint64_t result = qword_1EA1A7260;
  if (!qword_1EA1A7260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7260);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAnimationNodeAnimation()
{
  return &type metadata for FormatAnimationNodeAnimation;
}

uint64_t dispatch thunk of FeedGroupDebuggerType.debug(groupIdentifier:debugGroupIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t FeedJournalConfigEntry.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  return sub_1C01DC970(a3, (uint64_t)(a4 + 2));
}

uint64_t initializeWithCopy for FeedJournalConfigEntry(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[5];
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, void *, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    long long v8 = *((_OWORD *)v5 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(void *)(a1 + 48) = v5[4];
  }
  return a1;
}

uint64_t assignWithCopy for FeedJournalConfigEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t assignWithTake for FeedJournalConfigEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for FeedJournalConfigEntry()
{
  return &type metadata for FeedJournalConfigEntry;
}

uint64_t AlertSubscriptionLimitReached.title.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

uint64_t AlertSubscriptionLimitReached.message.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

uint64_t AlertSubscriptionLimitReached.acceptButton.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

uint64_t sub_1C0DB6CD4()
{
  return AlertSubscriptionLimitReached.title.getter();
}

uint64_t sub_1C0DB6CEC()
{
  return AlertSubscriptionLimitReached.message.getter();
}

uint64_t sub_1C0DB6D24()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

ValueMetadata *type metadata accessor for AlertSubscriptionLimitReached()
{
  return &type metadata for AlertSubscriptionLimitReached;
}

uint64_t static FormatHeadlineBinding.LayeredMedia.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatHeadlineBinding.LayeredMedia.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatHeadlineBinding.LayeredMedia.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0DB6E78()
{
  unint64_t result = qword_1EA1A7268;
  if (!qword_1EA1A7268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7268);
  }
  return result;
}

unint64_t sub_1C0DB6ECC(uint64_t a1)
{
  unint64_t result = sub_1C0DB6EF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DB6EF4()
{
  unint64_t result = qword_1EA1A7270;
  if (!qword_1EA1A7270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7270);
  }
  return result;
}

unint64_t sub_1C0DB6F48(void *a1)
{
  a1[1] = sub_1BFCBB0D8();
  a1[2] = sub_1C08F6564();
  unint64_t result = sub_1C0DB6E78();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0DB6F80(void *a1)
{
  return FormatHeadlineBinding.LayeredMedia.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.LayeredMedia()
{
  return &type metadata for FormatHeadlineBinding.LayeredMedia;
}

uint64_t static FormatCommand.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  __int16 v4 = *(_WORD *)(*(void *)a1 + 40);
  uint64_t v5 = *(void *)(*a2 + 32);
  __int16 v6 = *(_WORD *)(*a2 + 40);
  long long v11 = *(_OWORD *)(*(void *)a1 + 16);
  uint64_t v12 = v3;
  __int16 v13 = v4;
  long long v8 = *(_OWORD *)(v2 + 16);
  uint64_t v9 = v5;
  __int16 v10 = v6;
  return _s8NewsFeed20FormatCommandBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v11, (uint64_t)&v8) & 1;
}

uint64_t sub_1C0DB7034(uint64_t a1)
{
  unsigned int v3 = *(unsigned __int8 *)(*(void *)v1 + 40);
  uint64_t v6 = *(void *)(*(void *)v1 + 16);
  uint64_t v7 = *(void *)(*(void *)v1 + 24);
  uint64_t v8 = *(void *)(*(void *)v1 + 32);
  char v9 = *(unsigned char *)(*(void *)v1 + 41);
  sub_1C0DB72C0(v6, v7, v8, v3, v9, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
  uint64_t v4 = sub_1BFF5AB10(a1);
  sub_1C0DB72C0(v6, v7, v8, v3, v9, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
  return v4;
}

uint64_t sub_1C0DB7144(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  __int16 v4 = *(_WORD *)(*(void *)a1 + 40);
  uint64_t v5 = *(void *)(*a2 + 32);
  __int16 v6 = *(_WORD *)(*a2 + 40);
  long long v11 = *(_OWORD *)(*(void *)a1 + 16);
  uint64_t v12 = v3;
  __int16 v13 = v4;
  long long v8 = *(_OWORD *)(v2 + 16);
  uint64_t v9 = v5;
  __int16 v10 = v6;
  return static FormatCommandBinding.== infix(_:_:)(&v11, &v8) & 1;
}

unint64_t sub_1C0DB71A8(uint64_t a1)
{
  unint64_t result = sub_1C0DB71D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DB71D0()
{
  unint64_t result = qword_1EA1A7278;
  if (!qword_1EA1A7278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7278);
  }
  return result;
}

unint64_t sub_1C0DB7224(void *a1)
{
  a1[1] = sub_1BFDDBFF8();
  a1[2] = sub_1BFDDB8E8();
  unint64_t result = sub_1C0DB725C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DB725C()
{
  unint64_t result = qword_1EA1A7280;
  if (!qword_1EA1A7280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7280);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCommand()
{
  return &type metadata for FormatCommand;
}

uint64_t sub_1C0DB72C0(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      unint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      unint64_t result = a7();
      break;
    case 6u:
      unint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t v8 = a4 & 1;
      unint64_t result = a8(result, a2, a3, v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SportsScoreConcern(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C0DB73CC(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1C0DB73CC(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_retain();
      break;
    case 3:
    case 4:
    case 5:
      uint64_t result = swift_unknownObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for SportsScoreConcern(uint64_t a1)
{
  return sub_1C0DB7430(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1C0DB7430(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_release();
      break;
    case 3:
    case 4:
    case 5:
      uint64_t result = swift_unknownObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t assignWithCopy for SportsScoreConcern(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C0DB73CC(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C0DB7430(v5, v6);
  return a1;
}

uint64_t assignWithTake for SportsScoreConcern(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C0DB7430(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for SportsScoreConcern()
{
  return &type metadata for SportsScoreConcern;
}

uint64_t sub_1C0DB7528()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

uint64_t *sub_1C0DB76F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v8 = a2[2];
        uint64_t v9 = a2[3];
        a1[2] = v8;
        a1[3] = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        long long v11 = (void *)a2[2];
        swift_bridgeObjectRetain();
        id v12 = v11;
        a1[2] = (uint64_t)v11;
        break;
      case 3u:
        type metadata accessor for DebugFormatManagerIndex();
        swift_getEnumCaseMultiPayload();
        *a1 = *a2;
        uint64_t v13 = *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_1C151928C();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        int64_t v18 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
        v17(&v14[v18[5]], &v15[v18[5]], v16);
        uint64_t v19 = v18[6];
        uint64_t v20 = &v14[v19];
        uint64_t v21 = &v15[v19];
        uint64_t v22 = *((void *)v21 + 1);
        *(void *)uint64_t v20 = *(void *)v21;
        *((void *)v20 + 1) = v22;
        v14[v18[7]] = v15[v18[7]];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v23 = sub_1C151928C();
        uint64_t v24 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16);
        v24(a1, a2, v23);
        sub_1C0B9831C();
        v24((uint64_t *)((char *)a1 + *(int *)(v25 + 48)), (uint64_t *)((char *)a2 + *(int *)(v25 + 48)), v23);
        break;
      case 5u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1C0DB79F0(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
    case 6u:
      goto LABEL_10;
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v2 = *(void **)(a1 + 16);

      return;
    case 3u:
      type metadata accessor for DebugFormatManagerIndex();
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
      uint64_t v4 = sub_1C151928C();
      int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      v5(v3, v4);
      uint64_t v6 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
      v5(v3 + *(int *)(v6 + 20), v4);
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    case 4u:
      uint64_t v7 = sub_1C151928C();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v7 - 8), a1, v7);
      sub_1C0B9831C();
      uint64_t v9 = a1 + *(int *)(v8 + 48);
      v10(v9, v7);
      break;
    default:
      return;
  }
}

void *sub_1C0DB7C08(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      uint64_t v5 = a2[2];
      uint64_t v6 = a2[3];
      a1[2] = v5;
      a1[3] = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = (void *)a2[2];
      swift_bridgeObjectRetain();
      id v9 = v8;
      a1[2] = v8;
      break;
    case 3u:
      type metadata accessor for DebugFormatManagerIndex();
      swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      uint64_t v10 = *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
      long long v11 = (char *)a1 + v10;
      id v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1C151928C();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      uint64_t v15 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
      v14(&v11[v15[5]], &v12[v15[5]], v13);
      uint64_t v16 = v15[6];
      uint64_t v17 = &v11[v16];
      int64_t v18 = &v12[v16];
      uint64_t v19 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v19;
      v11[v15[7]] = v12[v15[7]];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      break;
    case 4u:
      uint64_t v20 = sub_1C151928C();
      uint64_t v21 = *(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16);
      v21(a1, a2, v20);
      sub_1C0B9831C();
      v21((void *)((char *)a1 + *(int *)(v22 + 48)), (void *)((char *)a2 + *(int *)(v22 + 48)), v20);
      break;
    case 5u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C0DB7EB0(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C0DB8198((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v4 = (void *)a2[2];
        swift_bridgeObjectRetain();
        id v5 = v4;
        a1[2] = v4;
        break;
      case 3u:
        type metadata accessor for DebugFormatManagerIndex();
        swift_getEnumCaseMultiPayload();
        *a1 = *a2;
        uint64_t v6 = *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_1C151928C();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        long long v11 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
        v10(&v7[v11[5]], &v8[v11[5]], v9);
        uint64_t v12 = v11[6];
        uint64_t v13 = &v7[v12];
        uint64_t v14 = &v8[v12];
        *(void *)uint64_t v13 = *(void *)v14;
        *((void *)v13 + 1) = *((void *)v14 + 1);
        v7[v11[7]] = v8[v11[7]];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v15 = sub_1C151928C();
        uint64_t v16 = *(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16);
        v16(a1, a2, v15);
        sub_1C0B9831C();
        v16((void *)((char *)a1 + *(int *)(v17 + 48)), (void *)((char *)a2 + *(int *)(v17 + 48)), v15);
        break;
      case 5u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0DB8198(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatManagerError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatManagerError()
{
  uint64_t result = qword_1EA1A7288;
  if (!qword_1EA1A7288) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C0DB8240(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v13 = sub_1C151928C();
    uint64_t v14 = *(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 32);
    v14(a1, a2, v13);
    sub_1C0B9831C();
    v14((void *)((char *)a1 + *(int *)(v15 + 48)), (void *)((char *)a2 + *(int *)(v15 + 48)), v13);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 3)
  {
    type metadata accessor for DebugFormatManagerIndex();
    swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    uint64_t v7 = *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C151928C();
    long long v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    uint64_t v12 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
    v11(&v8[v12[5]], &v9[v12[5]], v10);
    *(_OWORD *)&v8[v12[6]] = *(_OWORD *)&v9[v12[6]];
    v8[v12[7]] = v9[v12[7]];
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1C0DB8420(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0DB8198((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v13 = sub_1C151928C();
      uint64_t v14 = *(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 32);
      v14(a1, a2, v13);
      sub_1C0B9831C();
      v14((void *)((char *)a1 + *(int *)(v15 + 48)), (void *)((char *)a2 + *(int *)(v15 + 48)), v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 3)
    {
      type metadata accessor for DebugFormatManagerIndex();
      swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      uint64_t v7 = *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C151928C();
      long long v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      uint64_t v12 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
      v11(&v8[v12[5]], &v9[v12[5]], v10);
      *(_OWORD *)&v8[v12[6]] = *(_OWORD *)&v9[v12[6]];
      v8[v12[7]] = v9[v12[7]];
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C0DB8610()
{
  uint64_t v4 = &unk_1C15A8168;
  id v5 = &unk_1C15A8180;
  uint64_t v6 = &unk_1C15A8198;
  uint64_t result = type metadata accessor for DebugFormatManagerIndex();
  if (v1 <= 0x3F)
  {
    uint64_t v7 = *(void *)(result - 8) + 64;
    uint64_t result = sub_1C151928C();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v8 = &v3;
      uint64_t v9 = MEMORY[0x1E4FBAD80] + 64;
      uint64_t v10 = &unk_1C15A8168;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C0DB8720()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DebugFormatManagerError();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DB911C(v1, (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C0DB8198((uint64_t)v4);
      unint64_t v5 = 0xD000000000000021;
      break;
    case 2u:
      sub_1C0DB8198((uint64_t)v4);
      unint64_t v5 = 0x2064696C61766E49;
      break;
    case 3u:
      sub_1C0DB8198((uint64_t)v4);
      unint64_t v5 = 0x676E616843206F4ELL;
      break;
    case 4u:
      sub_1C0B9831C();
      uint64_t v7 = &v4[*(int *)(v6 + 48)];
      uint64_t v8 = sub_1C151928C();
      uint64_t v9 = *(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);
      v9(v7, v8);
      v9(v4, v8);
      unint64_t v5 = 0xD00000000000001DLL;
      break;
    case 5u:
      unint64_t v5 = 0xD000000000000012;
      sub_1C0DB8198((uint64_t)v4);
      break;
    case 6u:
      sub_1C0DB8198((uint64_t)v4);
      unint64_t v5 = 0xD000000000000023;
      break;
    default:
      sub_1C0DB8198((uint64_t)v4);
      unint64_t v5 = 0xD000000000000016;
      break;
  }
  return v5;
}

uint64_t sub_1C0DB8948(uint64_t a1)
{
  uint64_t result = sub_1C0DB9180(&qword_1EA1A42E8, (void (*)(uint64_t))type metadata accessor for DebugFormatManagerError);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0DB89A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151928C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = type metadata accessor for DebugFormatManagerError();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (id *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0DB911C(v1, (uint64_t)v11);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = 0;
      unint64_t v31 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v30 = 0x6465746365707845;
      unint64_t v31 = 0xEF203A6570795420;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      goto LABEL_4;
    case 2u:

      uint64_t v30 = 0;
      unint64_t v31 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 3u:
      sub_1C0DB8198((uint64_t)v11);
      return 0;
    case 4u:
      sub_1C0B9831C();
      uint64_t v14 = (char *)v11 + *(int *)(v13 + 48);
      uint64_t v15 = *(void (**)(char *, id *, uint64_t))(v3 + 32);
      v15(v8, v11, v2);
      v15(v5, (id *)v14, v2);
      sub_1C0DB9180((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
      uint64_t v30 = sub_1C152088C();
      unint64_t v31 = v16;
      sub_1C151E80C();
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v12 = v30;
      uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
      v17(v5, v2);
      v17(v8, v2);
      return v12;
    case 5u:
      unint64_t v18 = (unint64_t)*v11;
      if ((unint64_t)*v11 >> 62) {
        goto LABEL_25;
      }
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v19) {
        goto LABEL_26;
      }
      break;
    case 6u:
      uint64_t v30 = 0;
      unint64_t v31 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v30 = 0xD000000000000012;
      unint64_t v31 = 0x80000001C1627FA0;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    default:
      uint64_t v30 = 0;
      unint64_t v31 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v30 = 0xD000000000000019;
      unint64_t v31 = 0x80000001C1628090;
LABEL_4:
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_21:
      sub_1C151E80C();
      return v30;
  }
  do
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v19 & ~(v19 >> 63), 0);
    if (v19 < 0)
    {
      __break(1u);
      JUMPOUT(0x1C0DB90E4);
    }
    uint64_t v20 = 0;
    uint64_t v21 = v29;
    while (v19 != v20)
    {
      if ((v18 & 0xC000000000000001) != 0) {
        MEMORY[0x1C18C7CB0](v20, v18);
      }
      else {
        swift_retain();
      }
      ++v20;
      uint64_t v30 = 5972013;
      unint64_t v31 = 0xE300000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v22 = v30;
      unint64_t v23 = v31;
      uint64_t v29 = v21;
      unint64_t v25 = *(void *)(v21 + 16);
      unint64_t v24 = *(void *)(v21 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1BFF661B8(v24 > 1, v25 + 1, 1);
        uint64_t v21 = v29;
      }
      *(void *)(v21 + 16) = v25 + 1;
      unint64_t v26 = v21 + 16 * v25;
      *(void *)(v26 + 32) = v22;
      *(void *)(v26 + 40) = v23;
      if (v19 == v20)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  while (v19);
LABEL_26:
  swift_bridgeObjectRelease();
  uint64_t v21 = MEMORY[0x1E4FBC860];
LABEL_27:
  uint64_t v30 = v21;
  sub_1BFED9C20();
  sub_1C0DB9180((unint64_t *)&qword_1EB879F30, (void (*)(uint64_t))sub_1BFED9C20);
  sub_1C151E55C();
  swift_bridgeObjectRelease();
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  sub_1C15200FC();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1C0DB911C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatManagerError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0DB9180(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FeedValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FeedValue.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1C0DB9234(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C0DB92B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0DB9234(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C0DB92EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFE31C54();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C0DB9324(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C0DB9378(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t FeedValue.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v8 = *(void *)(a2 + 16);
  type metadata accessor for FeedValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_1C152083C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for FeedValue.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FeedValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v22 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v23 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FeedValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v24 = sub_1C152072C();
  uint64_t v20 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v21 = a3;
  uint64_t v10 = type metadata accessor for FeedValue();
  uint64_t v18 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = v25;
  sub_1C1520EBC();
  if (!v13)
  {
    uint64_t v25 = v10;
    uint64_t v14 = v20;
    uint64_t v15 = v22;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v24);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v23, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v19, v12, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for FeedValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C0DB984C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FeedValue.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C0DB9870(void *a1, uint64_t a2)
{
  return FeedValue.encode(to:)(a1, a2);
}

uint64_t sub_1C0DB9888(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C0DB99E4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C0DB9BFCLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

unsigned char *sub_1C0DB9C24(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0DB9CC0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0DB9CE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0DB9D04()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0DB9D20()
{
  return swift_getWitnessTable();
}

id sub_1C0DB9D3C()
{
  return sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneDebuggerButtonItem, 0xD00000000000001FLL, 0x80000001C1628220, (uint64_t *)&selRef_doConsolePaneDebuggerDisplay);
}

id sub_1C0DB9D68()
{
  return sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneLoggerButtonItem, 0xD000000000000020, 0x80000001C16281F0, (uint64_t *)&selRef_doConsolePaneLoggerDisplay);
}

void sub_1C0DB9D94()
{
  swift_retain();
  sub_1C151709C();
  swift_release();
  if (!v12)
  {
    id v5 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneDebuggerButtonItem, 0xD00000000000001FLL, 0x80000001C1628220, (uint64_t *)&selRef_doConsolePaneDebuggerDisplay);
    uint64_t v6 = self;
    id v7 = objc_msgSend(v6, sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTintColor_, v7);

    id v3 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneLoggerButtonItem, 0xD000000000000020, 0x80000001C16281F0, (uint64_t *)&selRef_doConsolePaneLoggerDisplay);
    id v8 = objc_msgSend(v6, sel_systemBlueColor);
LABEL_6:
    id v4 = v8;
    objc_msgSend(v3, sel_setTintColor_, v4);
    goto LABEL_7;
  }
  if (v12 != 1)
  {
    id v9 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneDebuggerButtonItem, 0xD00000000000001FLL, 0x80000001C1628220, (uint64_t *)&selRef_doConsolePaneDebuggerDisplay);
    unsigned int v10 = self;
    id v11 = objc_msgSend(v10, sel_systemBlueColor);
    objc_msgSend(v9, sel_setTintColor_, v11);

    id v3 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneLoggerButtonItem, 0xD000000000000020, 0x80000001C16281F0, (uint64_t *)&selRef_doConsolePaneLoggerDisplay);
    id v8 = objc_msgSend(v10, sel_secondaryLabelColor);
    goto LABEL_6;
  }
  id v0 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneDebuggerButtonItem, 0xD00000000000001FLL, 0x80000001C1628220, (uint64_t *)&selRef_doConsolePaneDebuggerDisplay);
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_systemBlueColor);
  objc_msgSend(v0, sel_setTintColor_, v2);

  id v3 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneLoggerButtonItem, 0xD000000000000020, 0x80000001C16281F0, (uint64_t *)&selRef_doConsolePaneLoggerDisplay);
  id v4 = objc_msgSend(v1, sel_systemBlueColor);
  objc_msgSend(v3, sel_setTintColor_, v4);
LABEL_7:
}

uint64_t sub_1C0DBA090()
{
  return swift_release();
}

uint64_t sub_1C0DBA198()
{
  return swift_release();
}

uint64_t type metadata accessor for DebugFormatConsolePaneDisplayController()
{
  return self;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding()
{
  return &type metadata for FormatSportsEventBinding;
}

ValueMetadata *type metadata accessor for FormatSportsEventCompetitorBinding()
{
  return &type metadata for FormatSportsEventCompetitorBinding;
}

uint64_t sub_1C0DBA378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v5 = type metadata accessor for FormatJson();
  MEMORY[0x1F4188790](v5);
  id v7 = (void *)((char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v8 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v8;
  char v26 = *(unsigned char *)(a2 + 32);
  sub_1BFEEA09C(0, &qword_1EB870500, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonKeyValue, MEMORY[0x1E4FBBE00]);
  id v9 = (int *)(type metadata accessor for FormatJsonKeyValue() - 8);
  uint64_t v10 = *(void *)(*(void *)v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v23 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_1C152A660;
  int v13 = (void *)(v12 + v11);
  swift_retain();
  sub_1C06421C8((uint64_t)v25);
  uint64_t v14 = sub_1C0DBC2AC((uint64_t)&unk_1F1B64C60, a1, (uint64_t)v25);
  sub_1C04C5A14((uint64_t)v25);
  swift_release();
  *id v7 = v14;
  v22[1] = v5;
  swift_storeEnumTagMultiPayload();
  *int v13 = 0x7465737361;
  v13[1] = 0xE500000000000000;
  sub_1BFEE9B44((uint64_t)v7, (uint64_t)v13 + v9[7], (uint64_t (*)(void))type metadata accessor for FormatJson);
  int v15 = (void *)((char *)v13 + v10);
  swift_retain();
  sub_1C06421C8((uint64_t)v25);
  uint64_t v16 = sub_1C0DBAA94((uint64_t)&unk_1F1B64C88, a1, (uint64_t)v25);
  sub_1C04C5A14((uint64_t)v25);
  swift_release();
  *id v7 = v16;
  swift_storeEnumTagMultiPayload();
  *int v15 = 0x6E61656C6F6F62;
  v15[1] = 0xE700000000000000;
  sub_1BFEE9B44((uint64_t)v7, (uint64_t)v13 + v10 + v9[7], (uint64_t (*)(void))type metadata accessor for FormatJson);
  uint64_t v17 = (void *)((char *)v13 + 2 * v10);
  swift_retain();
  sub_1C06421C8((uint64_t)v25);
  unint64_t v18 = sub_1C0DBCCA4((uint64_t)&unk_1F1B64CB0, a1, (uint64_t)v25);
  sub_1C04C5A14((uint64_t)v25);
  swift_release();
  *id v7 = v18;
  swift_storeEnumTagMultiPayload();
  *uint64_t v17 = 0x726F6C6F63;
  v17[1] = 0xE500000000000000;
  sub_1BFEE9B44((uint64_t)v7, (uint64_t)v17 + v9[7], (uint64_t (*)(void))type metadata accessor for FormatJson);
  uint64_t v19 = (void *)((char *)v13 + 3 * v10);
  swift_retain();
  sub_1C06421C8((uint64_t)v25);
  uint64_t v20 = sub_1C0DBBAF0((uint64_t)&unk_1F1B64CD8, a1, (uint64_t)v25);
  sub_1C04C5A14((uint64_t)v25);
  swift_release();
  *id v7 = v20;
  swift_storeEnumTagMultiPayload();
  *uint64_t v19 = 0x676E69727473;
  v19[1] = 0xE600000000000000;
  sub_1BFEE9B44((uint64_t)v7, (uint64_t)v19 + v9[7], (uint64_t (*)(void))type metadata accessor for FormatJson);
  *uint64_t v24 = v23;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0DBA708(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatJsonKeyValue();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (void *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for FormatJson();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  MEMORY[0x1F4188790](v6);
  long long v8 = (void *)((char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (!v9) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v34 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F6904(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    uint64_t v31 = v34;
    unint64_t v26 = a1 & 0xC000000000000001;
    uint64_t v27 = v9;
    v23[1] = a1 + 32;
    uint64_t v24 = v8;
    unint64_t v25 = a1;
    while (v12 != v9)
    {
      if (v26) {
        MEMORY[0x1C18C7CB0](v12, a1);
      }
      else {
        swift_unknownObjectRetain();
      }
      uint64_t v30 = v12;
      uint64_t v13 = qword_1F1B64770;
      if (qword_1F1B64770)
      {
        uint64_t v33 = v10;
        sub_1C05F68BC(0, qword_1F1B64770, 0);
        uint64_t v14 = v33;
        int v15 = &byte_1F1B64780;
        do
        {
          unsigned __int8 v16 = *v15++;
          unsigned __int8 v32 = v16;
          sub_1C0F80B30(&v32, v5);
          uint64_t v33 = v14;
          unint64_t v18 = *(void *)(v14 + 16);
          unint64_t v17 = *(void *)(v14 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_1C05F68BC(v17 > 1, v18 + 1, 1);
            uint64_t v14 = v33;
          }
          *(void *)(v14 + 16) = v18 + 1;
          sub_1BFEE9B44((uint64_t)v5, v14+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v18, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
          --v13;
        }
        while (v13);
        long long v8 = v24;
        a1 = v25;
      }
      else
      {
        uint64_t v14 = v10;
      }
      *long long v8 = v14;
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      uint64_t v19 = v31;
      uint64_t v34 = v31;
      unint64_t v21 = *(void *)(v31 + 16);
      unint64_t v20 = *(void *)(v31 + 24);
      uint64_t v9 = v27;
      if (v21 >= v20 >> 1)
      {
        sub_1C05F6904(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v34;
      }
      uint64_t v12 = v30 + 1;
      *(void *)(v19 + 16) = v21 + 1;
      unint64_t v22 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      uint64_t v31 = v19;
      sub_1BFEE9B44((uint64_t)v8, v19 + v22 + *(void *)(v28 + 72) * v21, (uint64_t (*)(void))type metadata accessor for FormatJson);
      uint64_t v10 = MEMORY[0x1E4FBC860];
      if (v12 == v9) {
        return v31;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0DBAA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a3;
  uint64_t v55 = a2;
  uint64_t v4 = type metadata accessor for FormatJson();
  MEMORY[0x1F4188790](v4);
  uint64_t v54 = (uint64_t *)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v53 = (uint64_t *)((char *)&v49 - v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v52 = (uint64_t *)((char *)&v49 - v9);
  uint64_t v61 = type metadata accessor for FormatJsonKeyValue();
  uint64_t v10 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v51 = (unint64_t *)((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (unint64_t *)((char *)&v49 - v13);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (uint64_t *)((char *)&v49 - v16);
  int64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    uint64_t v66 = MEMORY[0x1E4FBC860];
    sub_1C05F68BC(0, v18, 0);
    uint64_t v19 = 0;
    uint64_t v60 = a1 + 32;
    uint64_t v63 = v66;
    uint64_t v56 = v4;
    uint64_t v57 = v17;
    int64_t v58 = v18;
    int64_t v50 = v14;
    while (1)
    {
      int v20 = *(unsigned __int8 *)(v60 + v19);
      uint64_t v62 = v19;
      if (v20)
      {
        if (v20 != 1)
        {
          id v35 = objc_msgSend(*(id *)(v59 + 16), sel_eventCompetitorTags);
          if (v35)
          {
            uint64_t v36 = v35;
            sub_1C017E704();
            unint64_t v37 = sub_1C151EBCC();
          }
          else
          {
            unint64_t v37 = MEMORY[0x1E4FBC860];
          }
          swift_retain();
          uint64_t v41 = sub_1C0DBA708(v37);
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v42 = v54;
          *uint64_t v54 = v41;
          swift_storeEnumTagMultiPayload();
          *unint64_t v17 = 0x74697465706D6F63;
          unint64_t v39 = 0xEA0000000000726FLL;
          uint64_t v40 = (uint64_t)v42;
          goto LABEL_26;
        }
        id v21 = objc_msgSend(*(id *)(v59 + 16), sel_eventLeagueTag);
        uint64_t v22 = qword_1F1B64770;
        if (qword_1F1B64770)
        {
          uint64_t v65 = MEMORY[0x1E4FBC860];
          sub_1C05F68BC(0, qword_1F1B64770, 0);
          uint64_t v23 = v65;
          uint64_t v24 = &byte_1F1B64780;
          unint64_t v25 = v51;
          do
          {
            unsigned __int8 v26 = *v24++;
            unsigned __int8 v64 = v26;
            sub_1C0F80B30(&v64, v25);
            uint64_t v65 = v23;
            unint64_t v28 = *(void *)(v23 + 16);
            unint64_t v27 = *(void *)(v23 + 24);
            if (v28 >= v27 >> 1)
            {
              sub_1C05F68BC(v27 > 1, v28 + 1, 1);
              uint64_t v23 = v65;
            }
            *(void *)(v23 + 16) = v28 + 1;
            sub_1BFEE9B44((uint64_t)v25, v23+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v28, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            --v22;
          }
          while (v22);
          uint64_t v14 = v50;
        }
        else
        {
          uint64_t v23 = MEMORY[0x1E4FBC860];
        }
        uint64_t v38 = v53;
        *uint64_t v53 = v23;
        swift_storeEnumTagMultiPayload();
        swift_unknownObjectRelease();
        unint64_t v17 = v57;
        *uint64_t v57 = 0x65756761656CLL;
        unint64_t v39 = 0xE600000000000000;
      }
      else
      {
        uint64_t v29 = qword_1F1B64770;
        if (qword_1F1B64770)
        {
          uint64_t v65 = MEMORY[0x1E4FBC860];
          sub_1C05F68BC(0, qword_1F1B64770, 0);
          uint64_t v30 = v65;
          uint64_t v31 = &byte_1F1B64780;
          do
          {
            unsigned __int8 v32 = *v31++;
            unsigned __int8 v64 = v32;
            sub_1C0F80B30(&v64, v14);
            uint64_t v65 = v30;
            unint64_t v34 = *(void *)(v30 + 16);
            unint64_t v33 = *(void *)(v30 + 24);
            if (v34 >= v33 >> 1)
            {
              sub_1C05F68BC(v33 > 1, v34 + 1, 1);
              uint64_t v30 = v65;
            }
            *(void *)(v30 + 16) = v34 + 1;
            sub_1BFEE9B44((uint64_t)v14, v30+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v34, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            --v29;
          }
          while (v29);
          unint64_t v17 = v57;
        }
        else
        {
          uint64_t v30 = MEMORY[0x1E4FBC860];
        }
        uint64_t v38 = v52;
        *uint64_t v52 = v30;
        swift_storeEnumTagMultiPayload();
        *unint64_t v17 = 0x746E657665;
        unint64_t v39 = 0xE500000000000000;
      }
      uint64_t v40 = (uint64_t)v38;
      int64_t v18 = v58;
LABEL_26:
      v17[1] = v39;
      sub_1BFEE9B44(v40, (uint64_t)v17 + *(int *)(v61 + 20), (uint64_t (*)(void))type metadata accessor for FormatJson);
      uint64_t v44 = v62;
      uint64_t v43 = v63;
      uint64_t v66 = v63;
      unint64_t v46 = *(void *)(v63 + 16);
      unint64_t v45 = *(void *)(v63 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_1C05F68BC(v45 > 1, v46 + 1, 1);
        uint64_t v44 = v62;
        uint64_t v43 = v66;
      }
      uint64_t v19 = v44 + 1;
      *(void *)(v43 + 16) = v46 + 1;
      unint64_t v47 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v63 = v43;
      sub_1BFEE9B44((uint64_t)v17, v43 + v47 + *(void *)(v10 + 72) * v46, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
      if (v19 == v18) {
        return v63;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0DBB078(unint64_t a1)
{
  sub_1C0DBD904(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for FormatJsonKeyValue();
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v36 = (uint64_t)&v26 - v8;
  uint64_t v9 = type metadata accessor for FormatJson();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (unint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v12) {
      break;
    }
    uint64_t v40 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F6904(0, v12 & ~(v12 >> 63), 0);
    if (v12 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v14 = 0;
    uint64_t v34 = v40;
    uint64_t v35 = v5;
    unint64_t v27 = a1;
    unint64_t v28 = a1 & 0xC000000000000001;
    unint64_t v26 = a1 + 32;
    uint64_t v15 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v37 + 48);
    uint64_t v29 = v12;
    uint64_t v30 = v11;
    while (v14 != v12)
    {
      if (v28) {
        MEMORY[0x1C18C7CB0](v14, v27);
      }
      else {
        swift_unknownObjectRetain();
      }
      uint64_t v33 = v14;
      uint64_t v16 = qword_1F1B647A8;
      if (qword_1F1B647A8)
      {
        unint64_t v17 = &byte_1F1B647B8;
        unint64_t v18 = MEMORY[0x1E4FBC860];
        do
        {
          char v19 = *v17++;
          char v39 = v19;
          sub_1C1116D18(&v39, v4);
          if ((*v15)(v4, 1, v5) == 1)
          {
            sub_1C0DBD938((uint64_t)v4, (uint64_t (*)(void))sub_1C0DBD904);
          }
          else
          {
            uint64_t v20 = v36;
            sub_1BFEE9B44((uint64_t)v4, v36, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            sub_1BFEE9B44(v20, v38, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v18 = sub_1C0EE1E8C(0, *(void *)(v18 + 16) + 1, 1, v18);
            }
            unint64_t v22 = *(void *)(v18 + 16);
            unint64_t v21 = *(void *)(v18 + 24);
            if (v22 >= v21 >> 1) {
              unint64_t v18 = sub_1C0EE1E8C(v21 > 1, v22 + 1, 1, v18);
            }
            *(void *)(v18 + 16) = v22 + 1;
            sub_1BFEE9B44(v38, v18+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v22, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            uint64_t v5 = v35;
          }
          --v16;
        }
        while (v16);
      }
      else
      {
        unint64_t v18 = MEMORY[0x1E4FBC860];
      }
      uint64_t v11 = v30;
      *uint64_t v30 = v18;
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      uint64_t v23 = v34;
      uint64_t v40 = v34;
      a1 = *(void *)(v34 + 16);
      unint64_t v24 = *(void *)(v34 + 24);
      if (a1 >= v24 >> 1)
      {
        sub_1C05F6904(v24 > 1, a1 + 1, 1);
        uint64_t v23 = v40;
      }
      uint64_t v14 = v33 + 1;
      *(void *)(v23 + 16) = a1 + 1;
      unint64_t v25 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      uint64_t v34 = v23;
      sub_1BFEE9B44((uint64_t)v11, v23 + v25 + *(void *)(v31 + 72) * a1, (uint64_t (*)(void))type metadata accessor for FormatJson);
      uint64_t v12 = v29;
      if (v14 == v29) {
        return v34;
      }
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0DBB504(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatJsonKeyValue();
  uint64_t v44 = *(void *)(v2 - 8);
  uint64_t v45 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (unint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = type metadata accessor for FormatJson();
  uint64_t v33 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v6 = (id *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v27 - v8);
  if (a1 >> 62) {
    goto LABEL_37;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v10)
  {
    uint64_t v50 = MEMORY[0x1E4FBC860];
    sub_1C05F6904(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
    {
      __break(1u);
      JUMPOUT(0x1C0DBBAC0);
    }
    uint64_t v11 = 0;
    uint64_t v42 = v50;
    unint64_t v32 = a1 & 0xC000000000000001;
    unint64_t v28 = a1 + 32;
    unint64_t v43 = (unint64_t)"neGenre";
    char v39 = "bannerImageForWhiteBackground";
    uint64_t v40 = "bannerImageForMask";
    uint64_t v37 = "arge";
    uint64_t v38 = "Image";
    uint64_t v35 = "sportsLogoAltImageLarge";
    uint64_t v36 = "sportsLogoImageCompact";
    uint64_t v34 = "sportsLogoAltImage";
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v30 = v9;
    unint64_t v31 = a1;
    uint64_t v29 = v10;
    while (v11 != v10)
    {
      if (v32)
      {
        unint64_t v47 = (void *)MEMORY[0x1C18C7CB0](v11, a1);
      }
      else
      {
        unint64_t v47 = *(void **)(v28 + 8 * v11);
        swift_unknownObjectRetain();
      }
      uint64_t v41 = v11;
      int64_t v13 = qword_1F1B64818;
      if (qword_1F1B64818)
      {
        uint64_t v49 = v12;
        swift_getObjectType();
        sub_1C05F68BC(0, v13, 0);
        uint64_t v14 = v49;
        uint64_t v15 = &byte_1F1B64828;
        do
        {
          int v16 = *v15++;
          char v48 = v16;
          *uint64_t v6 = sub_1BFFB1574(v47, &v48);
          swift_storeEnumTagMultiPayload();
          unint64_t v17 = v43 | 0x8000000000000000;
          unint64_t v18 = 0xD000000000000012;
          switch(v16)
          {
            case 1:
              unint64_t v18 = 0xD00000000000001DLL;
              unint64_t v19 = (unint64_t)v40;
              goto LABEL_25;
            case 2:
              unint64_t v18 = 0xD00000000000001DLL;
              unint64_t v19 = (unint64_t)v39;
              goto LABEL_25;
            case 3:
              unint64_t v17 = 0xEA00000000006567;
              unint64_t v18 = 0x616D497265766F63;
              break;
            case 4:
              unint64_t v17 = 0xEC0000006567616DLL;
              goto LABEL_18;
            case 5:
              unint64_t v17 = 0xEE0051486567616DLL;
LABEL_18:
              unint64_t v18 = 0x4976614E64656566;
              break;
            case 6:
              unint64_t v18 = 0xD000000000000014;
              unint64_t v19 = (unint64_t)v38;
              goto LABEL_25;
            case 7:
              unint64_t v17 = 0xEF6567616D496F67;
              unint64_t v18 = 0x6F4C7374726F7073;
              break;
            case 8:
              unint64_t v18 = 0xD000000000000016;
              unint64_t v19 = (unint64_t)v37;
              goto LABEL_25;
            case 9:
              unint64_t v18 = 0xD000000000000017;
              unint64_t v19 = (unint64_t)v36;
              goto LABEL_25;
            case 10:
              unint64_t v19 = (unint64_t)v35;
              goto LABEL_25;
            case 11:
              unint64_t v18 = 0xD000000000000019;
              unint64_t v19 = (unint64_t)v34;
LABEL_25:
              unint64_t v17 = v19 | 0x8000000000000000;
              break;
            default:
              break;
          }
          *uint64_t v4 = v18;
          v4[1] = v17;
          sub_1BFEE9B44((uint64_t)v6, (uint64_t)v4 + *(int *)(v45 + 20), (uint64_t (*)(void))type metadata accessor for FormatJson);
          uint64_t v49 = v14;
          unint64_t v21 = *(void *)(v14 + 16);
          unint64_t v20 = *(void *)(v14 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_1C05F68BC(v20 > 1, v21 + 1, 1);
            uint64_t v14 = v49;
          }
          *(void *)(v14 + 16) = v21 + 1;
          sub_1BFEE9B44((uint64_t)v4, v14+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v21, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
          --v13;
        }
        while (v13);
        uint64_t v9 = v30;
        a1 = v31;
        uint64_t v10 = v29;
        uint64_t v12 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v14 = v12;
      }
      *uint64_t v9 = v14;
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      uint64_t v22 = v42;
      uint64_t v50 = v42;
      unint64_t v24 = *(void *)(v42 + 16);
      unint64_t v23 = *(void *)(v42 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1C05F6904(v23 > 1, v24 + 1, 1);
        uint64_t v12 = MEMORY[0x1E4FBC860];
        uint64_t v22 = v50;
      }
      uint64_t v11 = v41 + 1;
      *(void *)(v22 + 16) = v24 + 1;
      unint64_t v25 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v42 = v22;
      sub_1BFEE9B44((uint64_t)v9, v22 + v25 + *(void *)(v33 + 72) * v24, (uint64_t (*)(void))type metadata accessor for FormatJson);
      if (v11 == v10) {
        return v42;
      }
    }
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0DBBAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v67 = a3;
  uint64_t v65 = a2;
  sub_1C0DBD904(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v61 - v8);
  uint64_t v70 = type metadata accessor for FormatJson();
  MEMORY[0x1F4188790](v70);
  unsigned __int8 v64 = (uint64_t *)((char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v63 = (unint64_t *)((char *)&v61 - v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v62 = (unint64_t *)((char *)&v61 - v14);
  uint64_t v15 = type metadata accessor for FormatJsonKeyValue();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v77 = (uint64_t)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v74 = (uint64_t)&v61 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v76 = (uint64_t)&v61 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v73 = (uint64_t)&v61 - v23;
  MEMORY[0x1F4188790](v24);
  unint64_t v26 = (uint64_t *)((char *)&v61 - v25);
  int64_t v27 = *(void *)(a1 + 16);
  if (!v27) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v81 = MEMORY[0x1E4FBC860];
  sub_1C05F68BC(0, v27, 0);
  uint64_t v28 = 0;
  uint64_t v68 = a1 + 32;
  int64_t v69 = v27;
  uint64_t v72 = v81;
  uint64_t v29 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v75 = v6;
  uint64_t v78 = v15;
  uint64_t v79 = v16;
  uint64_t v66 = v26;
  do
  {
    uint64_t v71 = v28;
    if (*(unsigned char *)(v68 + v28))
    {
      if (*(unsigned char *)(v68 + v28) == 1)
      {
        id v30 = objc_msgSend(*(id *)(v67 + 16), sel_eventLeagueTag);
        uint64_t v31 = qword_1F1B647A8;
        if (qword_1F1B647A8)
        {
          unint64_t v32 = &byte_1F1B647B8;
          unint64_t v33 = MEMORY[0x1E4FBC860];
          do
          {
            while (1)
            {
              char v34 = *v32++;
              char v80 = v34;
              sub_1C1116D18(&v80, v6);
              if ((*v29)(v6, 1, v15) != 1) {
                break;
              }
              sub_1C0DBD938((uint64_t)v6, (uint64_t (*)(void))sub_1C0DBD904);
              if (!--v31) {
                goto LABEL_28;
              }
            }
            uint64_t v35 = (uint64_t)v6;
            uint64_t v36 = v74;
            sub_1BFEE9B44(v35, v74, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            sub_1BFEE9B44(v36, v77, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v33 = sub_1C0EE1E8C(0, *(void *)(v33 + 16) + 1, 1, v33);
            }
            unint64_t v38 = *(void *)(v33 + 16);
            unint64_t v37 = *(void *)(v33 + 24);
            if (v38 >= v37 >> 1) {
              unint64_t v33 = sub_1C0EE1E8C(v37 > 1, v38 + 1, 1, v33);
            }
            *(void *)(v33 + 16) = v38 + 1;
            sub_1BFEE9B44(v77, v33+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v38, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            uint64_t v6 = v75;
            uint64_t v15 = v78;
            --v31;
          }
          while (v31);
        }
        else
        {
          unint64_t v33 = MEMORY[0x1E4FBC860];
        }
LABEL_28:
        uint64_t v49 = v63;
        unint64_t *v63 = v33;
        swift_storeEnumTagMultiPayload();
        swift_unknownObjectRelease();
        unint64_t v26 = v66;
        void *v66 = 0x65756761656CLL;
        unint64_t v50 = 0xE600000000000000;
        uint64_t v51 = (uint64_t)v49;
      }
      else
      {
        id v46 = objc_msgSend(*(id *)(v67 + 16), sel_eventCompetitorTags);
        if (v46)
        {
          unint64_t v47 = v46;
          sub_1C017E704();
          unint64_t v48 = sub_1C151EBCC();
        }
        else
        {
          unint64_t v48 = MEMORY[0x1E4FBC860];
        }
        swift_retain();
        uint64_t v53 = sub_1C0DBB078(v48);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v54 = v64;
        uint64_t *v64 = v53;
        swift_storeEnumTagMultiPayload();
        *unint64_t v26 = 0x74697465706D6F63;
        unint64_t v50 = 0xEA0000000000726FLL;
        uint64_t v51 = (uint64_t)v54;
        uint64_t v15 = v78;
      }
    }
    else
    {
      uint64_t v39 = qword_1F1B647A8;
      if (qword_1F1B647A8)
      {
        uint64_t v40 = &byte_1F1B647B8;
        unint64_t v41 = MEMORY[0x1E4FBC860];
        do
        {
          char v42 = *v40++;
          char v80 = v42;
          sub_1C1116D18(&v80, v9);
          if ((*v29)(v9, 1, v15) == 1)
          {
            sub_1C0DBD938((uint64_t)v9, (uint64_t (*)(void))sub_1C0DBD904);
          }
          else
          {
            uint64_t v43 = v73;
            sub_1BFEE9B44((uint64_t)v9, v73, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            sub_1BFEE9B44(v43, v76, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v41 = sub_1C0EE1E8C(0, *(void *)(v41 + 16) + 1, 1, v41);
            }
            unint64_t v45 = *(void *)(v41 + 16);
            unint64_t v44 = *(void *)(v41 + 24);
            if (v45 >= v44 >> 1) {
              unint64_t v41 = sub_1C0EE1E8C(v44 > 1, v45 + 1, 1, v41);
            }
            *(void *)(v41 + 16) = v45 + 1;
            sub_1BFEE9B44(v76, v41+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v45, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            uint64_t v6 = v75;
            uint64_t v15 = v78;
          }
          --v39;
        }
        while (v39);
      }
      else
      {
        unint64_t v41 = MEMORY[0x1E4FBC860];
      }
      uint64_t v52 = v62;
      unint64_t *v62 = v41;
      swift_storeEnumTagMultiPayload();
      unint64_t v26 = v66;
      void *v66 = 0x746E657665;
      unint64_t v50 = 0xE500000000000000;
      uint64_t v51 = (uint64_t)v52;
    }
    v26[1] = v50;
    sub_1BFEE9B44(v51, (uint64_t)v26 + *(int *)(v15 + 20), (uint64_t (*)(void))type metadata accessor for FormatJson);
    uint64_t v56 = v71;
    uint64_t v55 = v72;
    uint64_t v81 = v72;
    unint64_t v58 = *(void *)(v72 + 16);
    unint64_t v57 = *(void *)(v72 + 24);
    if (v58 >= v57 >> 1)
    {
      sub_1C05F68BC(v57 > 1, v58 + 1, 1);
      uint64_t v56 = v71;
      uint64_t v55 = v81;
    }
    uint64_t v28 = v56 + 1;
    *(void *)(v55 + 16) = v58 + 1;
    unint64_t v59 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    uint64_t v72 = v55;
    sub_1BFEE9B44((uint64_t)v26, v55 + v59 + *(void *)(v79 + 72) * v58, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
  }
  while (v28 != v69);
  return v72;
}

uint64_t sub_1C0DBC2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v69 = a3;
  uint64_t v65 = a2;
  uint64_t v86 = type metadata accessor for FormatJson();
  MEMORY[0x1F4188790](v86);
  unsigned __int8 v64 = (uint64_t *)((char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v84 = (uint64_t *)((char *)&v61 - v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v63 = (unint64_t *)((char *)&v61 - v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v83 = (uint64_t *)((char *)&v61 - v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v62 = (unint64_t *)((char *)&v61 - v13);
  uint64_t v85 = type metadata accessor for FormatJsonKeyValue();
  uint64_t v14 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  char v80 = (unint64_t *)((char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (unint64_t *)((char *)&v61 - v17);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (uint64_t *)((char *)&v61 - v20);
  int64_t v22 = *(void *)(a1 + 16);
  unint64_t v23 = MEMORY[0x1E4FBC860];
  if (v22)
  {
    uint64_t v67 = v3;
    uint64_t v89 = MEMORY[0x1E4FBC860];
    sub_1C05F68BC(0, v22, 0);
    uint64_t v70 = a1 + 32;
    uint64_t v79 = v89;
    unint64_t v82 = (unint64_t)"neGenre";
    uint64_t v76 = "bannerImageForWhiteBackground";
    uint64_t v77 = "bannerImageForMask";
    uint64_t v74 = "arge";
    uint64_t v75 = "Image";
    unint64_t v72 = (unint64_t)"sportsLogoAltImageLarge";
    uint64_t v73 = "sportsLogoImageCompact";
    uint64_t v71 = "sportsLogoAltImage";
    uint64_t v66 = v21;
    int64_t v24 = v22;
    uint64_t v25 = 0;
    int64_t v68 = v22;
    while (1)
    {
      int v26 = *(unsigned __int8 *)(v70 + v25);
      uint64_t v78 = v25;
      if (v26)
      {
        if (v26 != 1)
        {
          id v48 = objc_msgSend(*(id *)(v69 + 16), sel_eventCompetitorTags);
          if (v48)
          {
            uint64_t v49 = v48;
            sub_1C017E704();
            unint64_t v50 = sub_1C151EBCC();
          }
          else
          {
            unint64_t v50 = v23;
          }
          swift_retain();
          uint64_t v53 = v67;
          uint64_t v54 = sub_1C0DBB504(v50);
          uint64_t v67 = v53;
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v51 = (uint64_t)v64;
          uint64_t *v64 = v54;
          swift_storeEnumTagMultiPayload();
          *uint64_t v21 = 0x74697465706D6F63;
          unint64_t v52 = 0xEA0000000000726FLL;
          int64_t v24 = v68;
          goto LABEL_50;
        }
        id v27 = objc_msgSend(*(id *)(v69 + 16), sel_eventLeagueTag);
        int64_t v28 = qword_1F1B64818;
        if (qword_1F1B64818)
        {
          unint64_t v88 = v23;
          uint64_t ObjectType = swift_getObjectType();
          sub_1C05F68BC(0, v28, 0);
          unint64_t v23 = v88;
          uint64_t v29 = &byte_1F1B64828;
          do
          {
            int v30 = *v29++;
            char v87 = v30;
            id v31 = sub_1BFFB1574(v27, &v87);
            *uint64_t v84 = v31;
            swift_storeEnumTagMultiPayload();
            unint64_t v32 = v82 | 0x8000000000000000;
            unint64_t v33 = 0xD000000000000012;
            switch(v30)
            {
              case 1:
                unint64_t v33 = 0xD00000000000001DLL;
                unint64_t v34 = (unint64_t)v77;
                goto LABEL_19;
              case 2:
                unint64_t v33 = 0xD00000000000001DLL;
                unint64_t v34 = (unint64_t)v76;
                goto LABEL_19;
              case 3:
                unint64_t v33 = 0x616D497265766F63;
                unint64_t v32 = 0xEA00000000006567;
                break;
              case 4:
                unint64_t v33 = 0x4976614E64656566;
                unint64_t v32 = 0xEC0000006567616DLL;
                break;
              case 5:
                unint64_t v33 = 0x4976614E64656566;
                unint64_t v32 = 0xEE0051486567616DLL;
                break;
              case 6:
                unint64_t v33 = 0xD000000000000014;
                unint64_t v34 = (unint64_t)v75;
                goto LABEL_19;
              case 7:
                unint64_t v33 = 0x6F4C7374726F7073;
                unint64_t v32 = 0xEF6567616D496F67;
                break;
              case 8:
                unint64_t v33 = 0xD000000000000016;
                unint64_t v34 = (unint64_t)v74;
                goto LABEL_19;
              case 9:
                unint64_t v33 = 0xD000000000000017;
                unint64_t v34 = (unint64_t)v73;
                goto LABEL_19;
              case 10:
                unint64_t v32 = v72 | 0x8000000000000000;
                unint64_t v33 = 0xD000000000000012;
                break;
              case 11:
                unint64_t v33 = 0xD000000000000019;
                unint64_t v34 = (unint64_t)v71;
LABEL_19:
                unint64_t v32 = v34 | 0x8000000000000000;
                break;
              default:
                break;
            }
            uint64_t v35 = (uint64_t)v80;
            *char v80 = v33;
            *(void *)(v35 + 8) = v32;
            sub_1BFEE9B44((uint64_t)v84, v35 + *(int *)(v85 + 20), (uint64_t (*)(void))type metadata accessor for FormatJson);
            unint64_t v88 = v23;
            unint64_t v37 = *(void *)(v23 + 16);
            unint64_t v36 = *(void *)(v23 + 24);
            if (v37 >= v36 >> 1)
            {
              sub_1C05F68BC(v36 > 1, v37 + 1, 1);
              uint64_t v35 = (uint64_t)v80;
              unint64_t v23 = v88;
            }
            *(void *)(v23 + 16) = v37 + 1;
            sub_1BFEE9B44(v35, v23+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v37, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            --v28;
          }
          while (v28);
          int64_t v24 = v68;
        }
        uint64_t v51 = (uint64_t)v63;
        unint64_t *v63 = v23;
        swift_storeEnumTagMultiPayload();
        swift_unknownObjectRelease();
        uint64_t v21 = v66;
        void *v66 = 0x65756761656CLL;
        unint64_t v52 = 0xE600000000000000;
      }
      else
      {
        int64_t v38 = qword_1F1B64818;
        if (qword_1F1B64818)
        {
          unint64_t v88 = v23;
          uint64_t v39 = *(void **)(v69 + 16);
          uint64_t ObjectType = swift_getObjectType();
          sub_1C05F68BC(0, v38, 0);
          unint64_t v23 = v88;
          uint64_t v40 = &byte_1F1B64828;
          do
          {
            int v41 = *v40++;
            char v87 = v41;
            id v42 = sub_1BFFB1574(v39, &v87);
            *uint64_t v83 = v42;
            swift_storeEnumTagMultiPayload();
            unint64_t v43 = v82 | 0x8000000000000000;
            unint64_t v44 = 0xD000000000000012;
            switch(v41)
            {
              case 1:
                unint64_t v44 = 0xD00000000000001DLL;
                unint64_t v45 = (unint64_t)v77;
                goto LABEL_38;
              case 2:
                unint64_t v44 = 0xD00000000000001DLL;
                unint64_t v45 = (unint64_t)v76;
                goto LABEL_38;
              case 3:
                unint64_t v44 = 0x616D497265766F63;
                unint64_t v43 = 0xEA00000000006567;
                break;
              case 4:
                unint64_t v44 = 0x4976614E64656566;
                unint64_t v43 = 0xEC0000006567616DLL;
                break;
              case 5:
                unint64_t v44 = 0x4976614E64656566;
                unint64_t v43 = 0xEE0051486567616DLL;
                break;
              case 6:
                unint64_t v44 = 0xD000000000000014;
                unint64_t v45 = (unint64_t)v75;
                goto LABEL_38;
              case 7:
                unint64_t v44 = 0x6F4C7374726F7073;
                unint64_t v43 = 0xEF6567616D496F67;
                break;
              case 8:
                unint64_t v44 = 0xD000000000000016;
                unint64_t v45 = (unint64_t)v74;
                goto LABEL_38;
              case 9:
                unint64_t v44 = 0xD000000000000017;
                unint64_t v45 = (unint64_t)v73;
                goto LABEL_38;
              case 10:
                unint64_t v43 = v72 | 0x8000000000000000;
                unint64_t v44 = 0xD000000000000012;
                break;
              case 11:
                unint64_t v44 = 0xD000000000000019;
                unint64_t v45 = (unint64_t)v71;
LABEL_38:
                unint64_t v43 = v45 | 0x8000000000000000;
                break;
              default:
                break;
            }
            *uint64_t v18 = v44;
            v18[1] = v43;
            sub_1BFEE9B44((uint64_t)v83, (uint64_t)v18 + *(int *)(v85 + 20), (uint64_t (*)(void))type metadata accessor for FormatJson);
            unint64_t v88 = v23;
            unint64_t v47 = *(void *)(v23 + 16);
            unint64_t v46 = *(void *)(v23 + 24);
            if (v47 >= v46 >> 1)
            {
              sub_1C05F68BC(v46 > 1, v47 + 1, 1);
              unint64_t v23 = v88;
            }
            *(void *)(v23 + 16) = v47 + 1;
            sub_1BFEE9B44((uint64_t)v18, v23+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v47, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
            --v38;
          }
          while (v38);
          int64_t v24 = v68;
        }
        uint64_t v51 = (uint64_t)v62;
        unint64_t *v62 = v23;
        swift_storeEnumTagMultiPayload();
        uint64_t v21 = v66;
        void *v66 = 0x746E657665;
        unint64_t v52 = 0xE500000000000000;
      }
      unint64_t v23 = MEMORY[0x1E4FBC860];
LABEL_50:
      v21[1] = v52;
      sub_1BFEE9B44(v51, (uint64_t)v21 + *(int *)(v85 + 20), (uint64_t (*)(void))type metadata accessor for FormatJson);
      uint64_t v55 = v79;
      uint64_t v89 = v79;
      unint64_t v57 = *(void *)(v79 + 16);
      unint64_t v56 = *(void *)(v79 + 24);
      if (v57 >= v56 >> 1)
      {
        sub_1C05F68BC(v56 > 1, v57 + 1, 1);
        int64_t v24 = v68;
        uint64_t v55 = v89;
      }
      uint64_t v58 = v78 + 1;
      *(void *)(v55 + 16) = v57 + 1;
      unint64_t v59 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v79 = v55;
      uint64_t v25 = v58;
      sub_1BFEE9B44((uint64_t)v21, v55 + v59 + *(void *)(v14 + 72) * v57, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
      if (v25 == v24) {
        return v79;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1C0DBCCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0DBD904(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FormatJsonKeyValue();
  MEMORY[0x1F4188790](v10);
  uint64_t v27 = (uint64_t)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v25 = (uint64_t)&v22 - v14;
  uint64_t v26 = *(void *)(a1 + 16);
  if (!v26) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = v13;
  uint64_t v15 = (unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  unint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v23 = v10;
  uint64_t v24 = a2;
  do
  {
    char v28 = *(unsigned char *)(a1 + v16 + 32);
    sub_1C0D59430(&v28, a3, v9);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*v15)(v9, 1, v10) == 1)
    {
      sub_1C0DBD938((uint64_t)v9, (uint64_t (*)(void))sub_1C0DBD904);
    }
    else
    {
      uint64_t v18 = v25;
      sub_1BFEE9B44((uint64_t)v9, v25, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
      sub_1BFEE9B44(v18, v27, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_1C0EE1E8C(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v20 = *(void *)(v17 + 16);
      unint64_t v19 = *(void *)(v17 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v17 = sub_1C0EE1E8C(v19 > 1, v20 + 1, 1, v17);
      }
      *(void *)(v17 + 16) = v20 + 1;
      sub_1BFEE9B44(v27, v17+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v20, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
      uint64_t v10 = v23;
    }
    ++v16;
  }
  while (v26 != v16);
  swift_bridgeObjectRelease();
  return v17;
}

void *sub_1C0DBCFA0(uint64_t a1, long long *a2)
{
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF97C40();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = a2[1];
  long long v65 = *a2;
  long long v66 = v11;
  char v67 = *((unsigned char *)a2 + 32);
  sub_1BFEEA09C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7E0;
  *(void *)&long long v62 = MEMORY[0x1E4FBC860];
  LOBYTE(v58[0]) = byte_1F1B68660;
  sub_1C017D98C(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1C1047634(*(uint64_t *)&v60[0]);
  LOBYTE(v58[0]) = byte_1F1B68661;
  sub_1C017D98C(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1C1047634(*(uint64_t *)&v60[0]);
  LOBYTE(v58[0]) = byte_1F1B68662;
  sub_1C017D98C(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1C1047634(*(uint64_t *)&v60[0]);
  uint64_t v13 = sub_1C0233D40(v62);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(1819242306, 0xE400000000000000, 0, 0, v13, v54);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v14 = swift_allocObject();
  *(void *)(inited + 32) = v14;
  *(void *)(v14 + 48) = v55;
  long long v15 = v54[1];
  *(_OWORD *)(v14 + 16) = v54[0];
  *(_OWORD *)(v14 + 32) = v15;
  long long v62 = v65;
  long long v63 = v66;
  LOBYTE(v64) = v67;
  sub_1C0D5A198(a1, (uint64_t)&v62, (uint64_t)v56);
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v16 = swift_allocObject();
  *(void *)(inited + 72) = v16;
  *(void *)(v16 + 48) = v57;
  long long v17 = v56[1];
  *(_OWORD *)(v16 + 16) = v56[0];
  *(_OWORD *)(v16 + 32) = v17;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)&long long v62 = MEMORY[0x1E4FBC860];
  LOBYTE(v58[0]) = byte_1F1B68688;
  sub_1C10D7FC8(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1C1047634(*(uint64_t *)&v60[0]);
  LOBYTE(v58[0]) = byte_1F1B68689;
  sub_1C10D7FC8(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1C1047634(*(uint64_t *)&v60[0]);
  LOBYTE(v58[0]) = byte_1F1B6868A;
  sub_1C10D7FC8(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1C1047634(*(uint64_t *)&v60[0]);
  uint64_t v19 = sub_1C0233D40(v62);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x646E616D6D6F43, 0xE700000000000000, 0, 0, v19, v58);
  swift_bridgeObjectRelease();
  *(void *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 144) = &off_1F1BDEC90;
  uint64_t v20 = swift_allocObject();
  *(void *)(inited + 112) = v20;
  *(void *)(v20 + 48) = v59;
  long long v21 = v58[1];
  *(_OWORD *)(v20 + 16) = v58[0];
  *(_OWORD *)(v20 + 32) = v21;
  *(void *)&long long v62 = v18;
  LOBYTE(v52) = byte_1F1B686B0;
  sub_1C09FEBC8(&v52, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1C1047634(*(uint64_t *)&v60[0]);
  LOBYTE(v52) = byte_1F1B686B1;
  sub_1C09FEBC8(&v52, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1C1047634(*(uint64_t *)&v60[0]);
  LOBYTE(v52) = byte_1F1B686B2;
  sub_1C09FEBC8(&v52, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1C1047634(*(uint64_t *)&v60[0]);
  uint64_t v22 = sub_1C0233D40(v62);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(1954047316, 0xE400000000000000, 0, 0, v22, v60);
  swift_bridgeObjectRelease();
  *(void *)(inited + 176) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 184) = &off_1F1BDEC90;
  uint64_t v23 = swift_allocObject();
  *(void *)(inited + 152) = v23;
  *(void *)(v23 + 48) = v61;
  long long v24 = v60[1];
  *(_OWORD *)(v23 + 16) = v60[0];
  *(_OWORD *)(v23 + 32) = v24;
  uint64_t v50 = v18;
  uint64_t v25 = (void *)v66;
  sub_1BFEEA09C(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
  unint64_t v26 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
  uint64_t v53 = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v52);
  sub_1C06421C8((uint64_t)&v65);
  id v29 = objc_msgSend(v25, sel_sportsEventStartTime);
  if (v29)
  {
    int v30 = v29;
    sub_1C15162BC();

    uint64_t v31 = sub_1C151631C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v10, 0, 1, v31);
  }
  else
  {
    uint64_t v32 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v10, 1, 1, v32);
  }
  sub_1BFEE9B44((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1C04C5A14((uint64_t)&v65);
  sub_1BFF993A8(&v52, &v62);
  sub_1C0223628((uint64_t)&v62, (uint64_t)&v52);
  if (v53)
  {
    sub_1C0223798((uint64_t)&v52, (uint64_t)v51);
    sub_1C0DBD938((uint64_t)&v62, (uint64_t (*)(void))sub_1C0BFCDFC);
    uint64_t v33 = v49;
    unint64_t v34 = (_OWORD *)((char *)v6 + *(int *)(v49 + 24));
    long long v35 = v51[1];
    *unint64_t v34 = v51[0];
    v34[1] = v35;
    uint64_t v36 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v34, 0, 1, v36);
    *uint64_t v6 = 0xD000000000000010;
    v6[1] = 0x80000001C1628280;
    _OWORD v6[2] = 0;
    v6[3] = 0;
    unint64_t v37 = (char *)v6 + *(int *)(v33 + 28);
    *(void *)unint64_t v37 = 0;
    *((void *)v37 + 1) = 0;
    v37[16] = -1;
    sub_1C02237F4((uint64_t)&v52);
  }
  else
  {
    sub_1C0DBD938((uint64_t)&v62, (uint64_t (*)(void))sub_1C0BFCDFC);
    uint64_t v38 = v49;
    uint64_t v39 = (char *)v6 + *(int *)(v49 + 24);
    uint64_t v40 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
    *uint64_t v6 = 0xD000000000000010;
    v6[1] = 0x80000001C1628280;
    _OWORD v6[2] = 0;
    v6[3] = 0;
    int v41 = (char *)v6 + *(int *)(v38 + 28);
    *(void *)int v41 = 0;
    *((void *)v41 + 1) = 0;
    v41[16] = -1;
  }
  sub_1BFEE9B44((uint64_t)v6, v27 + v26, type metadata accessor for FormatInspectionItem);
  sub_1C1047634(v27);
  uint64_t v42 = sub_1C0233D40(v50);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x6D69542065746144, 0xE900000000000065, 0, 0, v42, &v62);
  swift_bridgeObjectRelease();
  *(void *)(inited + 216) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 224) = &off_1F1BDEC90;
  uint64_t v43 = swift_allocObject();
  *(void *)(inited + 192) = v43;
  *(void *)(v43 + 48) = v64;
  long long v44 = v63;
  *(_OWORD *)(v43 + 16) = v62;
  *(_OWORD *)(v43 + 32) = v44;
  unint64_t v45 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v45;
}

uint64_t sub_1C0DBD8BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0DBD904(uint64_t a1)
{
}

uint64_t sub_1C0DBD938(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FormatContentSubgroup.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFEBAC8C(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - v4;
  uint64_t v6 = type metadata accessor for FormatContentSubgroup();
  sub_1C0DC9324(v1 + *(int *)(v6 + 40), (uint64_t)v5, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  return sub_1BFEBAAEC((uint64_t)v5, a1, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
}

uint64_t FormatContentSubgroup.init(identifier:layouts:properties:selectors:contents:sections:placeholders:metadata:filters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = a1;
  a9[1] = a2;
  uint64_t v18 = (int *)type metadata accessor for FormatContentSubgroup();
  sub_1BFEBAAEC(a3, (uint64_t)a9 + v18[5], (uint64_t (*)(void))sub_1BFEBC1C4);
  *(void *)((char *)a9 + v18[6]) = a4;
  *(void *)((char *)a9 + v18[7]) = a5;
  *(void *)((char *)a9 + v18[9]) = a8;
  *(void *)((char *)a9 + v18[8]) = a6;
  *(void *)((char *)a9 + v18[12]) = a7;
  uint64_t result = sub_1BFEBAAEC(a10, (uint64_t)a9 + v18[10], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  *(void *)((char *)a9 + v18[11]) = a11;
  return result;
}

uint64_t FormatContentSubgroup.contents.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.contents.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t sub_1C0DBDBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v3 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v51 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v49 = (void **)((char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v50 = (void **)((char *)&v47 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v47 = (void **)((char *)&v47 - v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v48 = (void **)((char *)&v47 - v12);
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBC130();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v47 - v21;
  sub_1C0DC9288(0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (uint64_t)&v25[*(int *)(v26 + 56)];
  sub_1BFEBAB54(a1, (uint64_t)v25, (uint64_t (*)(void))sub_1BFEBC130);
  sub_1BFEBAB54(v52, v27, (uint64_t (*)(void))sub_1BFEBC130);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BFEBAB54((uint64_t)v25, (uint64_t)v19, (uint64_t (*)(void))sub_1BFEBC130);
    sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    uint64_t v29 = *(int *)(v28 + 48);
    uint64_t v30 = (uint64_t)&v19[v29];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = v27 + v29;
      uint64_t v32 = v51;
      sub_1BFEBAAEC(v27, v51, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      uint64_t v33 = v50;
      sub_1BFEBAAEC(v30, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      unint64_t v34 = v49;
      sub_1BFEBAAEC(v31, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      char v35 = static FormatPackage.== infix(_:_:)(v19, v32);
      sub_1BFEBC514((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      if (v35)
      {
        char v36 = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(v33, v34);
        sub_1BFEBC514((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514(v32, (uint64_t (*)(void))type metadata accessor for FormatPackage);
LABEL_14:
        uint64_t v39 = (uint64_t (*)(void))sub_1BFEBC130;
        goto LABEL_15;
      }
      sub_1BFEBC514((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514(v32, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      goto LABEL_13;
    }
    sub_1BFEBC514((uint64_t)&v19[v29], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BFEBAB54((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(void))sub_1BFEBC130);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v38 = *(int *)(v37 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v40 = v27 + v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v27, v13);
      uint64_t v41 = (uint64_t)&v22[v38];
      uint64_t v42 = v48;
      sub_1BFEBAAEC(v41, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      uint64_t v43 = v47;
      sub_1BFEBAAEC(v40, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      char v44 = MEMORY[0x1C18BDA40](v22, v16);
      unint64_t v45 = *(void (**)(char *, uint64_t))(v14 + 8);
      v45(v22, v13);
      if (v44)
      {
        char v36 = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(v42, v43);
        sub_1BFEBC514((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        v45(v16, v13);
        goto LABEL_14;
      }
      sub_1BFEBC514((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      v45(v16, v13);
LABEL_13:
      char v36 = 0;
      goto LABEL_14;
    }
    sub_1BFEBC514((uint64_t)&v22[v38], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
  }
  char v36 = 0;
  uint64_t v39 = (uint64_t (*)(void))sub_1C0DC9288;
LABEL_15:
  sub_1BFEBC514((uint64_t)v25, v39);
  return v36 & 1;
}

uint64_t sub_1C0DBE284(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v47 = (uint64_t *)((char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  uint64_t v48 = (uint64_t *)((char *)&v43 - v6);
  MEMORY[0x1F4188790](v7);
  unint64_t v45 = (uint64_t *)((char *)&v43 - v8);
  MEMORY[0x1F4188790](v9);
  unint64_t v46 = (uint64_t *)((char *)&v43 - v10);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x1F4188790](v11);
  char v44 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAC8C(0, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v43 - v17;
  sub_1C0DC92A8(0, &qword_1EA1A7350, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v23 = (char *)&v43 + *(int *)(v22 + 56) - v20;
  sub_1C0DC9324(a1, (uint64_t)&v43 - v20, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0DC9324(v51, (uint64_t)v23, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C0DC9324((uint64_t)v21, (uint64_t)v18, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v34 = *(int *)(v33 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v36 = v49;
      uint64_t v35 = v50;
      uint64_t v37 = v44;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v44, v23, v50);
      uint64_t v38 = v46;
      sub_1BFEBAAEC((uint64_t)&v18[v34], (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      uint64_t v39 = v45;
      sub_1BFEBAAEC((uint64_t)&v23[v34], (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      char v40 = MEMORY[0x1C18BDA40](v18, v37);
      uint64_t v41 = *(void (**)(char *, uint64_t))(v36 + 8);
      v41(v18, v35);
      if (v40)
      {
        char v32 = static FormatMetadata.== infix(_:_:)(v38, v39);
        sub_1BFEBC514((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        v41(v37, v35);
        goto LABEL_11;
      }
      sub_1BFEBC514((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      v41(v37, v35);
      goto LABEL_14;
    }
    sub_1BFEBC514((uint64_t)&v18[v34], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v50);
LABEL_8:
    sub_1C0DC943C((uint64_t)v21, &qword_1EA1A7350, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization);
LABEL_15:
    char v32 = 0;
    return v32 & 1;
  }
  sub_1C0DC9324((uint64_t)v21, (uint64_t)v15, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0157FF8(0, &qword_1EB876020);
  uint64_t v25 = *(int *)(v24 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BFEBC514((uint64_t)v15 + v25, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v26 = *((void *)v23 + 1);
  uint64_t v27 = *((void *)v23 + 6);
  v52[0] = *(void *)v23;
  v52[1] = v26;
  long long v28 = *((_OWORD *)v23 + 2);
  long long v53 = *((_OWORD *)v23 + 1);
  long long v54 = v28;
  uint64_t v55 = v27;
  uint64_t v29 = v48;
  sub_1BFEBAAEC((uint64_t)v15 + v25, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v30 = v47;
  sub_1BFEBAAEC((uint64_t)&v23[v25], (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  char v31 = _s8NewsFeed18FormatLocalizationV2eeoiySbAC_ACtFZ_0(v15, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    sub_1BFEBC514((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1C0DC4218((uint64_t)v21, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  char v32 = static FormatMetadata.== infix(_:_:)(v29, v30);
  sub_1BFEBC514((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEBC514((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  sub_1C0DC4218((uint64_t)v21, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v32 & 1;
}

uint64_t sub_1C0DBEA08(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = a2;
  uint64_t v3 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v59 = (uint64_t *)((char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  long long v62 = (uint64_t *)((char *)&v55 - v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v57 = (uint64_t *)((char *)&v55 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v58 = (uint64_t *)((char *)&v55 - v10);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v60 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  MEMORY[0x1F4188790](v11);
  unint64_t v56 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAC8C(0, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v55 - v17;
  sub_1C0DC92A8(0, &qword_1EA1A7358, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v55 - v20;
  uint64_t v23 = (char *)&v55 + *(int *)(v22 + 56) - v20;
  sub_1C0DC9324(a1, (uint64_t)&v55 - v20, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0DC9324(v63, (uint64_t)v23, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C0DC9324((uint64_t)v21, (uint64_t)v18, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v42 = *(int *)(v41 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v46 = v60;
      uint64_t v45 = v61;
      uint64_t v47 = v56;
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v56, v23, v61);
      uint64_t v48 = v58;
      sub_1BFEBAAEC((uint64_t)&v18[v42], (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      uint64_t v49 = v57;
      sub_1BFEBAAEC((uint64_t)&v23[v42], (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      char v50 = MEMORY[0x1C18BDA40](v18, v47);
      uint64_t v51 = *(void (**)(char *, uint64_t))(v46 + 8);
      v51(v18, v45);
      if (v50)
      {
        char v38 = static FormatMetadata.== infix(_:_:)(v48, v49);
        sub_1BFEBC514((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        v51(v47, v45);
        goto LABEL_11;
      }
      sub_1BFEBC514((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      v51(v47, v45);
      goto LABEL_14;
    }
    sub_1BFEBC514((uint64_t)&v18[v42], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v18, v61);
LABEL_8:
    sub_1C0DC943C((uint64_t)v21, &qword_1EA1A7358, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration);
LABEL_15:
    char v38 = 0;
    return v38 & 1;
  }
  sub_1C0DC9324((uint64_t)v21, (uint64_t)v15, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0157FF8(0, &qword_1EB8752C8);
  uint64_t v25 = *(int *)(v24 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BFEBC514((uint64_t)&v15[v25], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v43 = *((void *)v15 + 12);
    uint64_t v44 = *((unsigned __int16 *)v15 + 52) | (v15[106] << 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFF9C84C(v43, v44);
    goto LABEL_8;
  }
  uint64_t v26 = *((void *)v23 + 1);
  long long v28 = *((_OWORD *)v23 + 2);
  long long v27 = *((_OWORD *)v23 + 3);
  uint64_t v29 = *((void *)v23 + 8);
  char v30 = v23[72];
  uint64_t v31 = *((void *)v23 + 12);
  unsigned __int16 v32 = *((_WORD *)v23 + 52);
  char v33 = v23[106];
  v64[0] = *(void *)v23;
  v64[1] = v26;
  long long v65 = *((_OWORD *)v23 + 1);
  long long v66 = v28;
  long long v67 = v27;
  uint64_t v68 = v29;
  char v69 = v30;
  long long v70 = *((_OWORD *)v23 + 5);
  uint64_t v71 = v31;
  unsigned __int8 v73 = v33;
  unsigned __int16 v72 = v32;
  sub_1BFEBAAEC((uint64_t)&v15[v25], (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v34 = v59;
  sub_1BFEBAAEC((uint64_t)&v23[v25], (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  LODWORD(v63) = static FormatDecoration.== infix(_:_:)(v15, v64);
  uint64_t v35 = *((void *)v15 + 12);
  uint64_t v36 = *((unsigned __int16 *)v15 + 52) | (v15[106] << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF9C84C(v35, v36);
  if ((v63 & 1) == 0)
  {
    sub_1BFEBC514((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v52 = v71;
    uint64_t v53 = v72 | (v73 << 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFF9C84C(v52, v53);
LABEL_14:
    sub_1C0DC4218((uint64_t)v21, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  uint64_t v37 = v62;
  char v38 = static FormatMetadata.== infix(_:_:)(v62, v34);
  sub_1BFEBC514((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEBC514((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v39 = v71;
  uint64_t v40 = v72 | (v73 << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF9C84C(v39, v40);
LABEL_11:
  sub_1C0DC4218((uint64_t)v21, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v38 & 1;
}

uint64_t sub_1C0DBF2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = a2;
  uint64_t v3 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v71 = (char **)((char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  unsigned __int16 v72 = (char **)((char *)&v66 - v6);
  MEMORY[0x1F4188790](v7);
  long long v67 = (char **)((char *)&v66 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v68 = (char **)((char *)&v66 - v10);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v69 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  MEMORY[0x1F4188790](v11);
  long long v66 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAC8C(0, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v66 - v17;
  sub_1C0DC92A8(0, &qword_1EA1A7360, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v66 - v20;
  uint64_t v23 = (char *)&v66 + *(int *)(v22 + 56) - v20;
  sub_1C0DC9324(a1, (uint64_t)&v66 - v20, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0DC9324(v73, (uint64_t)v23, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C0DC9324((uint64_t)v21, (uint64_t)v18, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v46 = *(int *)(v45 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v55 = v69;
      uint64_t v54 = v70;
      unint64_t v56 = v66;
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v66, v23, v70);
      uint64_t v57 = v68;
      sub_1BFEBAAEC((uint64_t)&v18[v46], (uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      uint64_t v58 = v67;
      sub_1BFEBAAEC((uint64_t)&v23[v46], (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      char v59 = MEMORY[0x1C18BDA40](v18, v56);
      uint64_t v60 = *(void (**)(char *, uint64_t))(v55 + 8);
      v60(v18, v54);
      if (v59)
      {
        char v40 = static FormatMetadata.== infix(_:_:)(v57, v58);
        sub_1BFEBC514((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        v60(v56, v54);
        goto LABEL_11;
      }
      sub_1BFEBC514((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      v60(v56, v54);
      goto LABEL_14;
    }
    sub_1BFEBC514((uint64_t)&v18[v46], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v18, v70);
LABEL_8:
    sub_1C0DC943C((uint64_t)v21, &qword_1EA1A7360, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType);
LABEL_15:
    char v40 = 0;
    return v40 & 1;
  }
  sub_1C0DC9324((uint64_t)v21, (uint64_t)v15, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0157FF8(0, &qword_1EB873BA0);
  uint64_t v25 = *(int *)(v24 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BFEBC514((uint64_t)&v15[v25], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v47 = *((void *)v15 + 4);
    uint64_t v48 = *((void *)v15 + 5);
    uint64_t v49 = *((void *)v15 + 6);
    uint64_t v50 = *((void *)v15 + 7);
    uint64_t v51 = *((void *)v15 + 8);
    uint64_t v52 = *((void *)v15 + 9);
    unsigned __int8 v53 = v15[80];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFEC28BC(v47, v48, v49, v50, v51, v52, v53);
    goto LABEL_8;
  }
  uint64_t v26 = *((void *)v23 + 1);
  char v27 = v23[80];
  v74[0] = *(void *)v23;
  v74[1] = v26;
  long long v28 = *((_OWORD *)v23 + 2);
  long long v75 = *((_OWORD *)v23 + 1);
  long long v76 = v28;
  long long v29 = *((_OWORD *)v23 + 4);
  long long v77 = *((_OWORD *)v23 + 3);
  long long v78 = v29;
  unsigned __int8 v79 = v27;
  sub_1BFEBAAEC((uint64_t)&v15[v25], (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEBAAEC((uint64_t)&v23[v25], (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  BOOL v30 = static FormatType.== infix(_:_:)((uint64_t)v15, (uint64_t)v74);
  uint64_t v31 = *((void *)v15 + 4);
  uint64_t v32 = *((void *)v15 + 5);
  uint64_t v33 = *((void *)v15 + 6);
  uint64_t v34 = *((void *)v15 + 7);
  uint64_t v35 = *((void *)v15 + 8);
  uint64_t v36 = *((void *)v15 + 9);
  unsigned __int8 v37 = v15[80];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEC28BC(v31, v32, v33, v34, v35, v36, v37);
  if (!v30)
  {
    sub_1BFEBC514((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    long long v61 = v76;
    long long v62 = v77;
    long long v63 = v78;
    unsigned __int8 v64 = v79;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFEC28BC(v61, *((uint64_t *)&v61 + 1), v62, *((uint64_t *)&v62 + 1), v63, *((uint64_t *)&v63 + 1), v64);
LABEL_14:
    sub_1C0DC4218((uint64_t)v21, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  uint64_t v39 = v71;
  char v38 = v72;
  char v40 = static FormatMetadata.== infix(_:_:)(v72, v71);
  sub_1BFEBC514((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEBC514((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  long long v41 = v76;
  long long v42 = v77;
  long long v43 = v78;
  unsigned __int8 v44 = v79;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEC28BC(v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44);
LABEL_11:
  sub_1C0DC4218((uint64_t)v21, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v40 & 1;
}

uint64_t sub_1C0DBFAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a2;
  uint64_t v3 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v49 = (uint64_t *)((char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  uint64_t v52 = (uint64_t *)((char *)&v45 - v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (uint64_t *)((char *)&v45 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v48 = (uint64_t *)((char *)&v45 - v10);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v51 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v46 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAC8C(0, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v45 - v17;
  sub_1C0DC92A8(0, &qword_1EA1A7368, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v45 - v20;
  uint64_t v23 = (char *)&v45 + *(int *)(v22 + 56) - v20;
  sub_1C0DC9324(a1, (uint64_t)&v45 - v20, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0DC9324(v53, (uint64_t)v23, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C0DC9324((uint64_t)v21, (uint64_t)v18, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v36 = *(int *)(v35 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v38 = v50;
      uint64_t v37 = v51;
      uint64_t v39 = v46;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v46, v23, v51);
      char v40 = v48;
      sub_1BFEBAAEC((uint64_t)&v18[v36], (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      long long v41 = v47;
      sub_1BFEBAAEC((uint64_t)&v23[v36], (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      char v42 = MEMORY[0x1C18BDA40](v18, v39);
      long long v43 = *(void (**)(char *, uint64_t))(v38 + 8);
      v43(v18, v37);
      if (v42)
      {
        char v34 = static FormatMetadata.== infix(_:_:)(v40, v41);
        sub_1BFEBC514((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        v43(v39, v37);
        goto LABEL_11;
      }
      sub_1BFEBC514((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      v43(v39, v37);
      goto LABEL_14;
    }
    sub_1BFEBC514((uint64_t)&v18[v36], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v51);
LABEL_8:
    sub_1C0DC943C((uint64_t)v21, &qword_1EA1A7368, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary);
LABEL_15:
    char v34 = 0;
    return v34 & 1;
  }
  sub_1C0DC9324((uint64_t)v21, (uint64_t)v15, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0157FF8(0, &qword_1EB876998);
  uint64_t v25 = *(int *)(v24 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BFEBC514((uint64_t)&v15[v25], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_8;
  }
  uint64_t v26 = *((void *)v23 + 1);
  uint64_t v27 = *((void *)v23 + 6);
  uint64_t v28 = *((void *)v23 + 7);
  char v29 = v23[80];
  char v30 = v23[104];
  v54[0] = *(void *)v23;
  v54[1] = v26;
  long long v31 = *((_OWORD *)v23 + 2);
  long long v55 = *((_OWORD *)v23 + 1);
  long long v56 = v31;
  uint64_t v57 = v27;
  uint64_t v58 = v28;
  long long v59 = *((_OWORD *)v23 + 4);
  char v60 = v29;
  long long v61 = *(_OWORD *)(v23 + 88);
  char v62 = v30;
  sub_1BFEBAAEC((uint64_t)&v15[v25], (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v32 = v49;
  sub_1BFEBAAEC((uint64_t)&v23[v25], (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  LODWORD(v53) = static FormatSupplementary.== infix(_:_:)((uint64_t)v15, (uint64_t)v54);
  uint64_t v51 = *((void *)v15 + 7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if ((v53 & 1) == 0)
  {
    sub_1BFEBC514((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_14:
    sub_1C0DC4218((uint64_t)v21, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  uint64_t v33 = v52;
  char v34 = static FormatMetadata.== infix(_:_:)(v52, v32);
  sub_1BFEBC514((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEBC514((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_11:
  sub_1C0DC4218((uint64_t)v21, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v34 & 1;
}

uint64_t sub_1C0DC0330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v45 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v46 = (uint64_t *)((char *)&v42 - v7);
  MEMORY[0x1F4188790](v8);
  long long v43 = (uint64_t *)((char *)&v42 - v9);
  MEMORY[0x1F4188790](v10);
  unsigned __int8 v44 = (uint64_t *)((char *)&v42 - v11);
  uint64_t v47 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00F6BC8();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (void **)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v42 - v19;
  sub_1C0DC93BC(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = &v23[*(int *)(v24 + 56)];
  sub_1BFEBAB54(a1, (uint64_t)v23, (uint64_t (*)(void))sub_1C00F6BC8);
  sub_1BFEBAB54(a2, (uint64_t)v25, (uint64_t (*)(void))sub_1C00F6BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BFEBAB54((uint64_t)v23, (uint64_t)v17, (uint64_t (*)(void))sub_1C00F6BC8);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB87D788, (void (*)(uint64_t))type metadata accessor for FormatSnippet);
    uint64_t v27 = *(int *)(v26 + 48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = *(void **)v25;
      char v29 = v46;
      sub_1BFEBAAEC((uint64_t)v17 + v27, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      char v30 = v45;
      sub_1BFEBAAEC((uint64_t)&v25[v27], (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      type metadata accessor for FormatSnippet();
      char v31 = static FormatSnippet.== infix(_:_:)(*v17, v28);
      swift_release();
      if (v31)
      {
        char v32 = static FormatMetadata.== infix(_:_:)(v29, v30);
        sub_1BFEBC514((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        swift_release();
LABEL_14:
        uint64_t v35 = (uint64_t (*)(void))sub_1C00F6BC8;
        goto LABEL_15;
      }
      sub_1BFEBC514((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      swift_release();
      goto LABEL_13;
    }
    sub_1BFEBC514((uint64_t)v17 + v27, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    swift_release();
  }
  else
  {
    sub_1BFEBAB54((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(void))sub_1C00F6BC8);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v34 = *(int *)(v33 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v36 = v47;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v25, v47);
      uint64_t v37 = v44;
      sub_1BFEBAAEC((uint64_t)&v20[v34], (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      uint64_t v38 = v43;
      sub_1BFEBAAEC((uint64_t)&v25[v34], (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      char v39 = MEMORY[0x1C18BDA40](v20, v14);
      char v40 = *(void (**)(char *, uint64_t))(v12 + 8);
      v40(v20, v36);
      if (v39)
      {
        char v32 = static FormatMetadata.== infix(_:_:)(v37, v38);
        sub_1BFEBC514((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        v40(v14, v36);
        goto LABEL_14;
      }
      sub_1BFEBC514((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      v40(v14, v36);
LABEL_13:
      char v32 = 0;
      goto LABEL_14;
    }
    sub_1BFEBC514((uint64_t)&v20[v34], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v47);
  }
  char v32 = 0;
  uint64_t v35 = (uint64_t (*)(void))sub_1C0DC93BC;
LABEL_15:
  sub_1BFEBC514((uint64_t)v23, v35);
  return v32 & 1;
}

uint64_t sub_1C0DC0914(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v47 = (uint64_t *)((char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  uint64_t v48 = (uint64_t *)((char *)&v43 - v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v45 = (uint64_t *)((char *)&v43 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v46 = (uint64_t *)((char *)&v43 - v10);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x1F4188790](v11);
  unsigned __int8 v44 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAC8C(0, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v43 - v17;
  sub_1C0DC92A8(0, &qword_1EA1A7378, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v23 = (char *)&v43 + *(int *)(v22 + 56) - v20;
  sub_1C0DC9324(a1, (uint64_t)&v43 - v20, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0DC9324(v51, (uint64_t)v23, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C0DC9324((uint64_t)v21, (uint64_t)v18, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v34 = *(int *)(v33 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v36 = v49;
      uint64_t v35 = v50;
      uint64_t v37 = v44;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v44, v23, v50);
      uint64_t v38 = v46;
      sub_1BFEBAAEC((uint64_t)&v18[v34], (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      char v39 = v45;
      sub_1BFEBAAEC((uint64_t)&v23[v34], (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      char v40 = MEMORY[0x1C18BDA40](v18, v37);
      long long v41 = *(void (**)(char *, uint64_t))(v36 + 8);
      v41(v18, v35);
      if (v40)
      {
        char v32 = static FormatMetadata.== infix(_:_:)(v38, v39);
        sub_1BFEBC514((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        v41(v37, v35);
        goto LABEL_11;
      }
      sub_1BFEBC514((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      v41(v37, v35);
      goto LABEL_14;
    }
    sub_1BFEBC514((uint64_t)&v18[v34], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v50);
LABEL_8:
    sub_1C0DC943C((uint64_t)v21, &qword_1EA1A7378, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle);
LABEL_15:
    char v32 = 0;
    return v32 & 1;
  }
  sub_1C0DC9324((uint64_t)v21, (uint64_t)v15, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0157FF8(0, &qword_1EB873D70);
  uint64_t v25 = *(int *)(v24 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BFEBC514((uint64_t)&v15[v25], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v26 = *((void *)v23 + 1);
  uint64_t v27 = *((void *)v23 + 8);
  v52[0] = *(void *)v23;
  v52[1] = v26;
  long long v28 = *((_OWORD *)v23 + 2);
  long long v53 = *((_OWORD *)v23 + 1);
  long long v54 = v28;
  long long v55 = *((_OWORD *)v23 + 3);
  uint64_t v56 = v27;
  char v29 = v48;
  sub_1BFEBAAEC((uint64_t)&v15[v25], (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  char v30 = v47;
  sub_1BFEBAAEC((uint64_t)&v23[v25], (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  char v31 = static FormatStyle.== infix(_:_:)(v15, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    sub_1BFEBC514((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1C0DC4218((uint64_t)v21, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  char v32 = static FormatMetadata.== infix(_:_:)(v29, v30);
  sub_1BFEBC514((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEBC514((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  sub_1C0DC4218((uint64_t)v21, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v32 & 1;
}

uint64_t sub_1C0DC10F0(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = a1;
  uint64_t v60 = a2;
  uint64_t v2 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v2 - 8);
  long long v55 = (uint64_t *)((char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v56 = (uint64_t *)((char *)&v51 - v5);
  MEMORY[0x1F4188790](v6);
  long long v53 = (uint64_t *)((char *)&v51 - v7);
  MEMORY[0x1F4188790](v8);
  long long v54 = (uint64_t *)((char *)&v51 - v9);
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v52 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAC8C(0, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (long long *)((char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v51 - v16;
  sub_1C0DC92A8(0, &qword_1EA1A7380, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v51 - v19;
  uint64_t v22 = (long long *)((char *)&v51 + *(int *)(v21 + 56) - v19);
  sub_1C0DC9324(v59, (uint64_t)&v51 - v19, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0DC9324(v60, (uint64_t)v22, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C0DC9324((uint64_t)v20, (uint64_t)v17, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v36 = *(int *)(v35 + 48);
    uint64_t v37 = &v17[v36];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v41 = (uint64_t)v22 + v36;
      uint64_t v42 = v57;
      uint64_t v43 = v58;
      unsigned __int8 v44 = v52;
      (*(void (**)(char *, long long *, uint64_t))(v57 + 32))(v52, v22, v58);
      uint64_t v45 = (uint64_t)v37;
      uint64_t v46 = v54;
      sub_1BFEBAAEC(v45, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      uint64_t v47 = v53;
      uint64_t v48 = v44;
      sub_1BFEBAAEC(v41, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      LOBYTE(v41) = MEMORY[0x1C18BDA40](v17, v44);
      uint64_t v49 = *(void (**)(char *, uint64_t))(v42 + 8);
      v49(v17, v43);
      if (v41)
      {
        char v34 = static FormatMetadata.== infix(_:_:)(v46, v47);
        sub_1BFEBC514((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        v49(v48, v43);
        goto LABEL_11;
      }
      sub_1BFEBC514((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      v49(v48, v43);
      goto LABEL_14;
    }
    sub_1BFEBC514((uint64_t)&v17[v36], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v58);
LABEL_8:
    sub_1C0DC943C((uint64_t)v20, &qword_1EA1A7380, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
LABEL_15:
    char v34 = 0;
    return v34 & 1;
  }
  sub_1C0DC9324((uint64_t)v20, (uint64_t)v14, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0157FF8(0, &qword_1EB873B40);
  uint64_t v24 = *(int *)(v23 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BFEBC514((uint64_t)v14 + v24, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    long long v38 = v14[5];
    long long v79 = v14[4];
    long long v80 = v38;
    v81[0] = v14[6];
    *(_OWORD *)((char *)v81 + 9) = *(long long *)((char *)v14 + 105);
    long long v39 = v14[1];
    long long v75 = *v14;
    long long v76 = v39;
    long long v40 = v14[3];
    long long v77 = v14[2];
    long long v78 = v40;
    sub_1C08845BC((uint64_t)&v75);
    goto LABEL_8;
  }
  uint64_t v25 = (uint64_t)v22 + v24;
  long long v26 = v22[5];
  long long v72 = v22[4];
  long long v73 = v26;
  v74[0] = v22[6];
  *(_OWORD *)((char *)v74 + 9) = *(long long *)((char *)v22 + 105);
  long long v27 = v22[1];
  long long v68 = *v22;
  long long v69 = v27;
  long long v28 = v22[3];
  long long v70 = v22[2];
  long long v71 = v28;
  char v29 = v56;
  sub_1BFEBAAEC((uint64_t)v14 + v24, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  char v30 = v55;
  sub_1BFEBAAEC(v25, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  LOBYTE(v25) = static FormatItem.== infix(_:_:)(v14, &v68);
  long long v31 = v14[5];
  long long v79 = v14[4];
  long long v80 = v31;
  v81[0] = v14[6];
  *(_OWORD *)((char *)v81 + 9) = *(long long *)((char *)v14 + 105);
  long long v32 = v14[1];
  long long v75 = *v14;
  long long v76 = v32;
  long long v33 = v14[3];
  long long v77 = v14[2];
  long long v78 = v33;
  sub_1C08845BC((uint64_t)&v75);
  if ((v25 & 1) == 0)
  {
    sub_1BFEBC514((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    long long v65 = v72;
    long long v66 = v73;
    v67[0] = v74[0];
    *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)((char *)v74 + 9);
    long long v61 = v68;
    long long v62 = v69;
    long long v63 = v70;
    long long v64 = v71;
    sub_1C08845BC((uint64_t)&v61);
LABEL_14:
    sub_1C0DC4218((uint64_t)v20, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  char v34 = static FormatMetadata.== infix(_:_:)(v29, v30);
  sub_1BFEBC514((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEBC514((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  long long v65 = v72;
  long long v66 = v73;
  v67[0] = v74[0];
  *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)((char *)v74 + 9);
  long long v61 = v68;
  long long v62 = v69;
  long long v63 = v70;
  long long v64 = v71;
  sub_1C08845BC((uint64_t)&v61);
LABEL_11:
  sub_1C0DC4218((uint64_t)v20, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v34 & 1;
}

uint64_t sub_1C0DC18B0(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  uint64_t v2 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v58 = (uint64_t *)((char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v59 = (uint64_t *)((char *)&v54 - v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v56 = (uint64_t *)((char *)&v54 - v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v57 = (uint64_t *)((char *)&v54 - v9);
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  MEMORY[0x1F4188790](v10);
  long long v55 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAC8C(0, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (long long *)((char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v54 - v16;
  sub_1C0DC92A8(0, &qword_1EA1A7388, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v54 - v19;
  uint64_t v22 = (long long *)((char *)&v54 + *(int *)(v21 + 56) - v19);
  sub_1C0DC9324(v62, (uint64_t)&v54 - v19, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0DC9324(v63, (uint64_t)v22, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C0DC9324((uint64_t)v20, (uint64_t)v17, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v38 = *(int *)(v37 + 48);
    long long v39 = &v17[v38];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v44 = (uint64_t)v22 + v38;
      uint64_t v45 = v60;
      uint64_t v46 = v61;
      uint64_t v47 = v55;
      (*(void (**)(char *, long long *, uint64_t))(v60 + 32))(v55, v22, v61);
      uint64_t v48 = (uint64_t)v39;
      uint64_t v49 = v57;
      sub_1BFEBAAEC(v48, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      uint64_t v50 = v56;
      uint64_t v51 = v47;
      sub_1BFEBAAEC(v44, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      LOBYTE(v44) = MEMORY[0x1C18BDA40](v17, v47);
      uint64_t v52 = *(void (**)(char *, uint64_t))(v45 + 8);
      v52(v17, v46);
      if (v44)
      {
        char v36 = static FormatMetadata.== infix(_:_:)(v49, v50);
        sub_1BFEBC514((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBC514((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        v52(v51, v46);
        goto LABEL_11;
      }
      sub_1BFEBC514((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBC514((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      v52(v51, v46);
      goto LABEL_14;
    }
    sub_1BFEBC514((uint64_t)&v17[v38], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v17, v61);
LABEL_8:
    sub_1C0DC943C((uint64_t)v20, &qword_1EA1A7388, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup);
LABEL_15:
    char v36 = 0;
    return v36 & 1;
  }
  sub_1C0DC9324((uint64_t)v20, (uint64_t)v14, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1C0157FF8(0, qword_1EB873CA0);
  uint64_t v24 = *(int *)(v23 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BFEBC514((uint64_t)v14 + v24, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    long long v40 = v14[7];
    long long v88 = v14[6];
    long long v89 = v40;
    long long v90 = v14[8];
    long long v41 = v14[3];
    long long v84 = v14[2];
    long long v85 = v41;
    long long v42 = v14[5];
    long long v86 = v14[4];
    long long v87 = v42;
    long long v43 = v14[1];
    long long v82 = *v14;
    long long v83 = v43;
    sub_1C0187DF4((uint64_t)&v82);
    goto LABEL_8;
  }
  uint64_t v25 = (uint64_t)v22 + v24;
  long long v26 = v22[7];
  long long v79 = v22[6];
  long long v80 = v26;
  long long v81 = v22[8];
  long long v27 = v22[3];
  long long v75 = v22[2];
  long long v76 = v27;
  long long v28 = v22[5];
  long long v77 = v22[4];
  long long v78 = v28;
  long long v29 = v22[1];
  long long v73 = *v22;
  long long v74 = v29;
  char v30 = v59;
  sub_1BFEBAAEC((uint64_t)v14 + v24, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  long long v31 = v58;
  sub_1BFEBAAEC(v25, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  LOBYTE(v25) = static FormatGroup.== infix(_:_:)(v14, &v73);
  long long v32 = v14[7];
  long long v88 = v14[6];
  long long v89 = v32;
  long long v90 = v14[8];
  long long v33 = v14[3];
  long long v84 = v14[2];
  long long v85 = v33;
  long long v34 = v14[5];
  long long v86 = v14[4];
  long long v87 = v34;
  long long v35 = v14[1];
  long long v82 = *v14;
  long long v83 = v35;
  sub_1C0187DF4((uint64_t)&v82);
  if ((v25 & 1) == 0)
  {
    sub_1BFEBC514((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    long long v70 = v79;
    long long v71 = v80;
    long long v72 = v81;
    long long v66 = v75;
    long long v67 = v76;
    long long v68 = v77;
    long long v69 = v78;
    long long v64 = v73;
    long long v65 = v74;
    sub_1C0187DF4((uint64_t)&v64);
LABEL_14:
    sub_1C0DC4218((uint64_t)v20, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  char v36 = static FormatMetadata.== infix(_:_:)(v30, v31);
  sub_1BFEBC514((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEBC514((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  long long v70 = v79;
  long long v71 = v80;
  long long v72 = v81;
  long long v66 = v75;
  long long v67 = v76;
  long long v68 = v77;
  long long v69 = v78;
  long long v64 = v73;
  long long v65 = v74;
  sub_1C0187DF4((uint64_t)&v64);
LABEL_11:
  sub_1C0DC4218((uint64_t)v20, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v36 & 1;
}

uint64_t FormatContentSubgroup.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSubgroup.layouts.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatContentSubgroup();
  return sub_1BFEBAB54(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))sub_1BFEBC1C4);
}

uint64_t FormatContentSubgroup.properties.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC2114(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 24);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.properties.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.properties.modify())()
{
  return nullsub_1;
}

uint64_t FormatContentSubgroup.selectors.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC2220(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 28);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.selectors.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.selectors.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C0DC22F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 32);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t (*FormatContentSubgroup.contents.modify())()
{
  return nullsub_1;
}

uint64_t FormatContentSubgroup.placeholders.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC23C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 36);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.placeholders.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.placeholders.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C0DC249C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEBAC8C(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = type metadata accessor for FormatContentSubgroup();
  sub_1C0DC9324(a1 + *(int *)(v7 + 40), (uint64_t)v6, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  return sub_1BFEBAAEC((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
}

uint64_t sub_1C0DC25AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAB54(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v7 = type metadata accessor for FormatContentSubgroup();
  return sub_1C0DC269C((uint64_t)v6, a2 + *(int *)(v7 + 40));
}

uint64_t FormatContentSubgroup.metadata.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 40);
  return sub_1C0DC269C(a1, v3);
}

uint64_t sub_1C0DC269C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FormatContentSubgroup.metadata.modify())()
{
  return nullsub_1;
}

uint64_t FormatContentSubgroup.filters.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC277C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 44);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.filters.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 44);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.filters.modify())()
{
  return nullsub_1;
}

uint64_t FormatContentSubgroup.sections.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC2888(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 48);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.sections.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 48);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.sections.modify())()
{
  return nullsub_1;
}

uint64_t FormatContentSubgroup.copy(identifier:layouts:properties:selectors:contents:sections:placeholders:metadata:filters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t v84 = a8;
  uint64_t v75 = a7;
  uint64_t v72 = a5;
  uint64_t v73 = a6;
  uint64_t v70 = a4;
  uint64_t v80 = a3;
  uint64_t v86 = a1;
  sub_1BFEBAC8C(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v69 = (uint64_t)&v68 - v16;
  sub_1BFEC2810(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v85 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FormatMetadata();
  uint64_t v82 = *(void *)(v19 - 8);
  uint64_t v83 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v88 = (uint64_t)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DC32D8(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBC1C4(0);
  uint64_t v78 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v87 = (uint64_t)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v27 = (int *)type metadata accessor for FormatContentSubgroup();
  MEMORY[0x1F4188790](v27);
  uint64_t v76 = (uint64_t)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v81 = (uint64_t)&v68 - v30;
  MEMORY[0x1F4188790](v31);
  long long v71 = (char *)&v68 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v79 = (uint64_t)&v68 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v77 = (uint64_t)&v68 - v36;
  MEMORY[0x1F4188790](v37);
  long long v39 = (char *)&v68 - v38;
  MEMORY[0x1F4188790](v40);
  long long v42 = (char *)&v68 - v41;
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v68 - v44;
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (uint64_t *)((char *)&v68 - v47);
  sub_1BFEBAB54(v12, (uint64_t)&v68 - v47, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  if (a2)
  {
    uint64_t v74 = a2;
  }
  else
  {
    uint64_t v86 = *v48;
    uint64_t v74 = v48[1];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFEBC514((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  sub_1BFEBAB54(v80, (uint64_t)v23, (uint64_t (*)(void))sub_1C0DC32D8);
  sub_1BFEBAB54(v12, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v78) == 1)
  {
    sub_1BFEBAB54((uint64_t)&v45[v27[5]], v87, (uint64_t (*)(void))sub_1BFEBC1C4);
    sub_1BFEBC514((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
    sub_1BFEBC514((uint64_t)v23, (uint64_t (*)(void))sub_1C0DC32D8);
  }
  else
  {
    sub_1BFEBC514((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
    sub_1BFEBAAEC((uint64_t)v23, v87, (uint64_t (*)(void))sub_1BFEBC1C4);
  }
  uint64_t v49 = v75;
  uint64_t v51 = v72;
  uint64_t v50 = v73;
  uint64_t v52 = v70;
  uint64_t v53 = (uint64_t)v71;
  sub_1BFEBAB54(v12, (uint64_t)v42, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  if (v52)
  {
    uint64_t v80 = v52;
  }
  else
  {
    uint64_t v80 = *(void *)&v42[v27[6]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFEBC514((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  sub_1BFEBAB54(v12, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  if (v51)
  {
    uint64_t v78 = v51;
  }
  else
  {
    uint64_t v78 = *(void *)&v39[v27[7]];
    swift_bridgeObjectRetain();
  }
  uint64_t v54 = v84;
  swift_bridgeObjectRetain();
  sub_1BFEBC514((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  uint64_t v55 = v77;
  sub_1BFEBAB54(v12, v77, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  if (v50)
  {
    uint64_t v56 = v50;
  }
  else
  {
    uint64_t v56 = *(void *)(v55 + v27[8]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFEBC514(v55, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  uint64_t v57 = v79;
  sub_1BFEBAB54(v12, v79, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  if (v49)
  {
    uint64_t v58 = v49;
  }
  else
  {
    uint64_t v58 = *(void *)(v57 + v27[12]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFEBC514(v57, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  sub_1BFEBAB54(v12, v53, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  if (v54)
  {
    uint64_t v59 = v54;
  }
  else
  {
    uint64_t v59 = *(void *)(v53 + v27[9]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFEBC514(v53, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  uint64_t v60 = v85;
  sub_1BFEBAB54(a10, v85, (uint64_t (*)(void))sub_1BFEC2810);
  uint64_t v61 = v81;
  sub_1BFEBAB54(v12, v81, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v60, 1, v83) == 1)
  {
    uint64_t v62 = v69;
    sub_1C0DC9324(v61 + v27[10], v69, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    sub_1BFEBAAEC(v62, v88, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514(v61, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
    sub_1BFEBC514(v60, (uint64_t (*)(void))sub_1BFEC2810);
  }
  else
  {
    sub_1BFEBC514(v61, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
    sub_1BFEBAAEC(v60, v88, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  }
  uint64_t v63 = v86;
  uint64_t v64 = v76;
  uint64_t v65 = v74;
  sub_1BFEBAB54(v12, v76, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  if (a11)
  {
    uint64_t v66 = a11;
  }
  else
  {
    uint64_t v66 = *(void *)(v64 + v27[11]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFEBC514(v64, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  *a9 = v63;
  a9[1] = v65;
  sub_1BFEBAAEC(v87, (uint64_t)a9 + v27[5], (uint64_t (*)(void))sub_1BFEBC1C4);
  *(void *)((char *)a9 + v27[6]) = v80;
  *(void *)((char *)a9 + v27[7]) = v78;
  *(void *)((char *)a9 + v27[9]) = v59;
  *(void *)((char *)a9 + v27[8]) = v56;
  *(void *)((char *)a9 + v27[12]) = v58;
  uint64_t result = sub_1BFEBAAEC(v88, (uint64_t)a9 + v27[10], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  *(void *)((char *)a9 + v27[11]) = v66;
  return result;
}

void sub_1C0DC32D8(uint64_t a1)
{
}

uint64_t sub_1C0DC330C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v75 = a5;
  uint64_t v11 = (int *)type metadata accessor for FormatContentSubgroup();
  uint64_t v12 = *(void *)((char *)v5 + v11[9]);
  uint64_t v87 = a2;
  swift_bridgeObjectRetain();
  uint64_t v80 = sub_1C144A494((void (*)(uint64_t *__return_ptr, void *))sub_1C0DC9498, (uint64_t)v86, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v11[8];
  uint64_t v77 = a1;
  uint64_t v78 = v5;
  uint64_t v14 = *(void *)((char *)v5 + v13);
  uint64_t v82 = a1;
  uint64_t v83 = a2;
  uint64_t v84 = a3;
  uint64_t v85 = a4;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C0283108((void (*)(uint64_t *__return_ptr, void *))sub_1C0DC94F4, (uint64_t)v81, v14);
  uint64_t v16 = swift_bridgeObjectRelease();
  if (v6) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v72 = v15;
  uint64_t v18 = *(void *)((char *)v78 + v11[12]);
  MEMORY[0x1F4188790](v16);
  v65[2] = v77;
  v65[3] = a2;
  v65[4] = a3;
  v65[5] = a4;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C0283324((void (*)(uint64_t *__return_ptr, void *))sub_1C0DC9514, (uint64_t)v65, v18);
  swift_bridgeObjectRelease();
  uint64_t v73 = 0;
  uint64_t v79 = a2;
  uint64_t v68 = v19;
  uint64_t v20 = v78;
  uint64_t v22 = *v78;
  uint64_t v21 = v78[1];
  uint64_t v23 = *(void *)((char *)v78 + v11[6]);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v88 = MEMORY[0x1E4FBC860];
  uint64_t v25 = *(void *)(v23 + 16);
  uint64_t v70 = v22;
  long long v71 = v11;
  uint64_t v69 = v21;
  if (!v25)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v43 = *(void *)((char *)v20 + v11[7]);
    uint64_t v74 = v24;
    uint64_t v88 = v24;
    goto LABEL_24;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v67 = v23;
  uint64_t v26 = (uint64_t *)(v23 + 48);
  long long v76 = xmmword_1C1529AE0;
  do
  {
    uint64_t v33 = *(v26 - 2);
    uint64_t v34 = *(v26 - 1);
    uint64_t v35 = *v26;
    if ((~*v26 & 0xF000000000000007) != 0)
    {
      sub_1BFEC2AAC(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
      long long v27 = (int *)(type metadata accessor for FormatOption() - 8);
      unint64_t v28 = (*(unsigned __int8 *)(*(void *)v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v27 + 80);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v76;
      uint64_t v30 = (uint64_t *)(v29 + v28);
      *uint64_t v30 = v33;
      v30[1] = v34;
      v30[2] = v35;
      v30[3] = 1;
      unint64_t v31 = v29 + v28 + v27[9];
      uint64_t v32 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    uint64_t v36 = *(void *)(v79 + 72);
    if (*(void *)(v36 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v37 = sub_1BFEF2D8C(v33, v34);
      if (v38)
      {
        unint64_t v39 = *(void *)(v36 + 56) + (v37 << 6);
        uint64_t v74 = *(void *)(v39 + 8);
        uint64_t v29 = *(void *)(v39 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v29 = MEMORY[0x1E4FBC860];
LABEL_6:
    v26 += 3;
    sub_1BFDC11A4(v35);
    sub_1BFEDB748(v29);
    --v25;
  }
  while (v25);
  uint64_t v40 = v67;
  swift_bridgeObjectRelease();
  uint64_t v41 = v88;
  uint64_t v42 = *(void *)(v40 + 16);
  uint64_t v20 = v78;
  uint64_t v43 = *(void *)((char *)v78 + v71[7]);
  uint64_t v88 = MEMORY[0x1E4FBC860];
  uint64_t v74 = v41;
  if (!v42)
  {
LABEL_24:
    uint64_t v54 = v77;
    uint64_t v55 = v75;
    uint64_t v56 = v80;
    uint64_t v57 = v68;
    swift_bridgeObjectRetain();
    uint64_t v58 = MEMORY[0x1E4FBC860];
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v66 = v43;
  swift_bridgeObjectRetain();
  uint64_t v44 = (void *)(v40 + 48);
  uint64_t v45 = MEMORY[0x1E4FBC870];
  uint64_t v46 = v79;
  do
  {
    uint64_t v47 = v45;
    if ((~*v44 & 0xF000000000000007) == 0)
    {
      uint64_t v48 = *(void *)(v46 + 72);
      if (*(void *)(v48 + 16))
      {
        uint64_t v49 = *(v44 - 2);
        uint64_t v50 = *(v44 - 1);
        swift_bridgeObjectRetain();
        unint64_t v51 = sub_1BFEF2D8C(v49, v50);
        if (v52)
        {
          unint64_t v53 = *(void *)(v48 + 56) + (v51 << 6);
          *(void *)&long long v76 = *(void *)(v53 + 8);
          uint64_t v47 = *(void *)(v53 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v20 = v78;
          swift_bridgeObjectRelease();
          uint64_t v45 = MEMORY[0x1E4FBC870];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v46 = v79;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v47 = v45;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v47 = v45;
      }
    }
    v44 += 3;
    sub_1BFE72794(v47);
    --v42;
  }
  while (v42);
  swift_bridgeObjectRelease();
  uint64_t v58 = v88;
  uint64_t v54 = v77;
  uint64_t v55 = v75;
  uint64_t v56 = v80;
  uint64_t v57 = v68;
  uint64_t v43 = v66;
LABEL_26:
  uint64_t v59 = sub_1BFFB9A98(v58, v43);
  swift_bridgeObjectRelease();
  uint64_t v88 = (uint64_t)v72;
  sub_1BFEE0654(v56);
  sub_1BFEBAA38(0, (unint64_t *)&qword_1EB871000, (uint64_t)&type metadata for FormatContentSlot.Resolved, MEMORY[0x1E4FBB320]);
  sub_1C0DC9534();
  uint64_t v60 = sub_1C151E92C();
  swift_bridgeObjectRelease();
  uint64_t v61 = *(void *)((char *)v20 + v71[11]);
  uint64_t v62 = v70;
  uint64_t v63 = v69;
  *uint64_t v55 = v70;
  v55[1] = v63;
  _OWORD v55[2] = v62;
  void v55[3] = v63;
  uint64_t v64 = v74;
  v55[4] = v54;
  v55[5] = v64;
  v55[6] = v59;
  v55[7] = v60;
  v55[8] = v57;
  v55[9] = v61;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1C0DC39F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v10 = a1[2];
  _OWORD v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C0283108((void (*)(uint64_t *__return_ptr, void *))sub_1C0DC961C, (uint64_t)v13, v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6)
  {
    *a6 = v9;
    a6[1] = v8;
    a6[2] = v11;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0DC3A88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, void *a5@<X4>, _OWORD *a6@<X8>)
{
  unint64_t v53 = a5;
  uint64_t v55 = a4;
  char v52 = a3;
  uint64_t v47 = a6;
  sub_1C0DC95B0(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatSlotDefinition();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v48 = a1[2];
  uint64_t v49 = a1[3];
  uint64_t v50 = a1[4];
  uint64_t v51 = a1[5];
  uint64_t v45 = a2;
  uint64_t v18 = a2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots;
  swift_beginAccess();
  uint64_t v19 = *(void *)(v18 + 8);
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v54 = v16;
  uint64_t v46 = v18;
  if (v20)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1BFEF2D8C(v16, v17);
    if (v22)
    {
      sub_1BFEBAB54(*(void *)(v19 + 56) + *(void *)(v13 + 72) * v21, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v23, 1, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_1BFEBAAEC((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      uint64_t v56 = v54;
      uint64_t v57 = v17;
      uint64_t v58 = v48;
      uint64_t v59 = v49;
      uint64_t v60 = v50;
      uint64_t v61 = v51;
      sub_1BFEBAA38(0, (unint64_t *)&unk_1EB880EC0, (uint64_t)&type metadata for FormatSlotTransform, MEMORY[0x1E4FBBE00]);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
      uint64_t v32 = swift_allocObject();
      type metadata accessor for FormatSlotItemCountLimit();
      uint64_t v33 = swift_allocBox();
      sub_1BFEBAB54((uint64_t)v15, v34, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      swift_storeEnumTagMultiPayload();
      *(void *)(v32 + 16) = v33;
      *(void *)(v31 + 32) = v32 | 0x2000000000000000;
      uint64_t v67 = (void *)v31;
      uint64_t v35 = swift_bridgeObjectRetain();
      sub_1C104AFC8(v35);
      sub_1C11F3C0C(v52, v55, v53, v67, &v62);
      sub_1BFEBC514((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      uint64_t result = swift_bridgeObjectRelease();
      if (v6) {
        return result;
      }
      goto LABEL_20;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_1BFEBC514((uint64_t)v11, (uint64_t (*)(void))sub_1C0DC95B0);
  uint64_t v24 = (char *)v55 + *(int *)(type metadata accessor for FormatServiceOptions() + 40);
  uint64_t v25 = *(void *)&v24[*(int *)(type metadata accessor for FormatTransformData() + 20)];
  if (!*(void *)(v25 + 16)) {
    goto LABEL_19;
  }
  sub_1C1520DBC();
  sub_1C151E77C();
  uint64_t v26 = sub_1C1520E0C();
  uint64_t v27 = -1 << *(unsigned char *)(v25 + 32);
  unint64_t v28 = v26 & ~v27;
  if (((*(void *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v29 = ~v27;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v25 + 48) + v28))
    {
      case 1:
        swift_bridgeObjectRelease();
        goto LABEL_17;
      default:
        char v30 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0)
        {
          unint64_t v28 = (v28 + 1) & v29;
          if (((*(void *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
            goto LABEL_19;
          }
          continue;
        }
LABEL_17:
        if (*(void *)(*(void *)v46 + 16))
        {
          sub_1C151F36C();
          sub_1BFFDEB20();
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = xmmword_1C1527210;
          uint64_t v38 = MEMORY[0x1E4FBB1A0];
          *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v39 = sub_1BFE9C558();
          *(void *)(v37 + 32) = v54;
          *(void *)(v37 + 40) = v17;
          uint64_t v40 = *(void *)(v45 + 16);
          uint64_t v41 = *(void *)(v45 + 24);
          *(void *)(v37 + 96) = v38;
          *(void *)(v37 + 104) = v39;
          *(void *)(v37 + 64) = v39;
          *(void *)(v37 + 72) = v40;
          *(void *)(v37 + 80) = v41;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C15197BC();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v42 = v47;
          long long v47[2] = 0u;
          v42[3] = 0u;
          *uint64_t v42 = 0u;
          v42[1] = 0u;
          return result;
        }
LABEL_19:
        uint64_t v56 = v54;
        uint64_t v57 = v17;
        uint64_t v58 = v48;
        uint64_t v59 = v49;
        uint64_t v60 = v50;
        uint64_t v61 = v51;
        uint64_t result = sub_1C11F3C0C(v52, v55, v53, MEMORY[0x1E4FBC860], &v62);
        if (!v6)
        {
LABEL_20:
          uint64_t v43 = v66;
          uint64_t v44 = v47;
          *(void *)uint64_t v47 = v62;
          *(_OWORD *)((char *)v44 + 8) = v63;
          *(_OWORD *)((char *)v44 + 24) = v64;
          *(_OWORD *)((char *)v44 + 40) = v65;
          *((void *)v44 + 7) = v43;
        }
        return result;
    }
  }
}

uint64_t sub_1C0DC4218(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_1BFEBAC8C(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t FormatContentSubgroup.encode(to:)(void *a1)
{
  sub_1BFEBAC8C(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v20 - v3;
  uint64_t v21 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v21);
  uint64_t v22 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAC8C(0, &qword_1EB85E138, (uint64_t (*)(void))sub_1BFEBCA2C, (uint64_t)&type metadata for FormatContentSubgroup.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v20 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEBCA2C();
  uint64_t v11 = v23;
  sub_1C1520F0C();
  LOBYTE(v26) = 0;
  uint64_t v12 = v24;
  sub_1C15207CC();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v13 = (int *)type metadata accessor for FormatContentSubgroup();
  sub_1C0DC9324(v11 + v13[10], (uint64_t)v4, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  uint64_t v14 = (uint64_t)v4;
  uint64_t v15 = v22;
  sub_1BFEBAAEC(v14, v22, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  LOBYTE(v26) = 7;
  sub_1BFEBC34C(&qword_1EB85D128, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  sub_1C152080C();
  sub_1BFEBC514(v15, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v26 = *(void *)(v11 + v13[6]);
  char v25 = 2;
  sub_1BFEBAA38(0, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
  sub_1C00FCE94();
  sub_1C152080C();
  uint64_t v26 = *(void *)(v11 + v13[7]);
  char v25 = 3;
  sub_1BFEBC4B4();
  sub_1BFE38978((unint64_t *)&qword_1EB85C4F0);
  sub_1C152080C();
  uint64_t v26 = *(void *)(v11 + v13[8]);
  char v25 = 5;
  sub_1BFEBAA38(0, (unint64_t *)&qword_1EB879DE0, (uint64_t)&type metadata for FormatContentSlot, MEMORY[0x1E4FBB320]);
  sub_1C0DC58C8();
  sub_1C152080C();
  uint64_t v26 = *(void *)(v11 + v13[12]);
  char v25 = 6;
  sub_1BFEBAA38(0, &qword_1EB890078, (uint64_t)&type metadata for FormatContentSubgroupSection, MEMORY[0x1E4FBB320]);
  sub_1C0DC59B0();
  sub_1C152080C();
  uint64_t v26 = *(void *)(v11 + v13[11]);
  char v25 = 8;
  sub_1BFEBAA38(0, (unint64_t *)&qword_1EB890050, (uint64_t)&type metadata for FormatContentSubgroupFilter, MEMORY[0x1E4FBB320]);
  sub_1C00231F0();
  sub_1C152080C();
  uint64_t v26 = *(void *)(v11 + v13[9]);
  char v25 = 4;
  sub_1BFEBAA38(0, &qword_1EB88FFD8, (uint64_t)&type metadata for FormatPlaceholder, MEMORY[0x1E4FBB320]);
  sub_1C0DC5A98();
  sub_1C152080C();
  uint64_t v24 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v17 = sub_1C1520EFC();
  char v18 = Dictionary<>.bindingContent.getter(v17);
  swift_bridgeObjectRelease();
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v24, v7);
  }
  LOBYTE(v26) = 1;
  sub_1BFEBC1C4(0);
  sub_1BFEBC34C(&qword_1EB85DC40, sub_1BFEBC1C4);
  uint64_t v19 = v24;
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v19, v7);
}

uint64_t sub_1C0DC4934(char a1)
{
  uint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7374756F79616CLL;
      break;
    case 2:
      uint64_t result = 0x69747265706F7270;
      break;
    case 3:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 4:
      uint64_t result = 0x6C6F686563616C70;
      break;
    case 5:
      uint64_t result = 0x73746E65746E6F63;
      break;
    case 6:
      uint64_t result = 0x736E6F6974636573;
      break;
    case 7:
      uint64_t result = 0x617461646174656DLL;
      break;
    case 8:
      uint64_t result = 0x737265746C6966;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0DC4A88(unsigned __int8 *a1, char *a2)
{
  return sub_1C14863CC(*a1, *a2);
}

uint64_t sub_1C0DC4A94()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0DC4ADC()
{
  return sub_1C0449948();
}

uint64_t sub_1C0DC4AE4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0DC4B28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0DC923C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0DC4B58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C0DC4934(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0DC4B84@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0DC923C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0DC4BAC(uint64_t a1)
{
  unint64_t v2 = sub_1BFEBCA2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DC4BE8(uint64_t a1)
{
  unint64_t v2 = sub_1BFEBCA2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0DC4C24()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0DC4C78()
{
  return sub_1C151E77C();
}

uint64_t sub_1C0DC4C90()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0DC4CE0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C0DC4D34(void *a1@<X8>)
{
  *a1 = 0x327374756F79616CLL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1C0DC4D50@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C0DC4DA8(uint64_t a1)
{
  unint64_t v2 = sub_1BFEBC9D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DC4DE4(uint64_t a1)
{
  unint64_t v2 = sub_1BFEBC9D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0DC4E24(void *a1)
{
  return FormatContentSubgroup.encode(to:)(a1);
}

void sub_1C0DC4E40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for FormatPackage();
    uint64_t v7 = sub_1BFEBC34C((unint64_t *)&unk_1EB887270, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0DC4EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEBC130();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FormatService.ThemePackage(0);
  sub_1BFEBAB54(a1 + *(int *)(v13 + 20), (uint64_t)v6, (uint64_t (*)(void))sub_1BFEBC130);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1BFEBAAEC((uint64_t)&v6[*(int *)(v14 + 48)], (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    sub_1BFEBAAEC((uint64_t)&v6[*(int *)(v15 + 48)], (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v16 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v6, v16);
  }
  sub_1BFEBAB54((uint64_t)&v9[*(int *)(v7 + 28)], (uint64_t)v12, (uint64_t (*)(void))sub_1BFEC0CE8);
  sub_1BFEBC514((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v17 = sub_1C151928C();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a2, v12, v17);
  }
  sub_1C151924C();
  return sub_1BFEBC514((uint64_t)v12, (uint64_t (*)(void))sub_1BFEC0CE8);
}

uint64_t sub_1C0DC5204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEBC130();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAB54(a1, (uint64_t)v6, (uint64_t (*)(void))sub_1BFEBC130);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1BFEBAAEC((uint64_t)&v6[*(int *)(v13 + 48)], (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    sub_1BFEBAAEC((uint64_t)&v6[*(int *)(v14 + 48)], (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v6, v15);
  }
  sub_1BFEBAB54((uint64_t)&v9[*(int *)(v7 + 28)], (uint64_t)v12, (uint64_t (*)(void))sub_1BFEC0CE8);
  sub_1BFEBC514((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  uint64_t v16 = sub_1C151928C();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v12, v16);
  }
  sub_1C151924C();
  return sub_1BFEBC514((uint64_t)v12, (uint64_t (*)(void))sub_1BFEC0CE8);
}

uint64_t sub_1C0DC5520(uint64_t a1, uint64_t a2)
{
  v22[1] = a2;
  sub_1BFEBC130();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FormatService.ThemePackage(0);
  sub_1BFEBAB54(a1 + *(int *)(v16 + 20), (uint64_t)v5, (uint64_t (*)(void))sub_1BFEBC130);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1BFEBAAEC((uint64_t)&v5[*(int *)(v17 + 48)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    sub_1BFEBAAEC((uint64_t)&v5[*(int *)(v18 + 48)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v19 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v5, v19);
  }
  sub_1BFEBAB54((uint64_t)&v8[*(int *)(v6 + 28)], (uint64_t)v11, (uint64_t (*)(void))sub_1BFEC0CE8);
  sub_1BFEBC514((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1BFEBC514((uint64_t)v11, (uint64_t (*)(void))sub_1BFEC0CE8);
    char v20 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    char v20 = sub_1C1518F6C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v20 & 1;
}

unint64_t sub_1C0DC58C8()
{
  unint64_t result = qword_1EB85DEE8;
  if (!qword_1EB85DEE8)
  {
    sub_1BFEBAA38(255, (unint64_t *)&qword_1EB879DE0, (uint64_t)&type metadata for FormatContentSlot, MEMORY[0x1E4FBB320]);
    sub_1C0DC595C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DEE8);
  }
  return result;
}

unint64_t sub_1C0DC595C()
{
  unint64_t result = qword_1EB875620;
  if (!qword_1EB875620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875620);
  }
  return result;
}

unint64_t sub_1C0DC59B0()
{
  unint64_t result = qword_1EB86B238;
  if (!qword_1EB86B238)
  {
    sub_1BFEBAA38(255, &qword_1EB890078, (uint64_t)&type metadata for FormatContentSubgroupSection, MEMORY[0x1E4FBB320]);
    sub_1C0DC5A44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B238);
  }
  return result;
}

unint64_t sub_1C0DC5A44()
{
  unint64_t result = qword_1EB868650;
  if (!qword_1EB868650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868650);
  }
  return result;
}

unint64_t sub_1C0DC5A98()
{
  unint64_t result = qword_1EB86B088;
  if (!qword_1EB86B088)
  {
    sub_1BFEBAA38(255, &qword_1EB88FFD8, (uint64_t)&type metadata for FormatPlaceholder, MEMORY[0x1E4FBB320]);
    sub_1C065290C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B088);
  }
  return result;
}

uint64_t _s8NewsFeed21FormatContentSubgroupV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = (int *)type metadata accessor for FormatContentSubgroup();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  if ((sub_1C0DBDBFC((uint64_t)a1 + v6, (uint64_t)a2 + v6) & 1) == 0) {
    return 0;
  }
  sub_1BFEBC1C4(0);
  uint64_t v10 = *(int *)(v9 + 36);
  uint64_t v11 = *(void *)&v7[v10];
  uint64_t v12 = *(void *)&v8[v10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1C00E5A38(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    return 0;
  }
  uint64_t v14 = v5[6];
  uint64_t v15 = *(void *)((char *)a1 + v14);
  uint64_t v16 = *(void *)((char *)a2 + v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v17 = sub_1C00E57C0(v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0) {
    return 0;
  }
  uint64_t v18 = v5[7];
  uint64_t v19 = *(void *)((char *)a1 + v18);
  uint64_t v20 = *(void *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v21 = sub_1BFEFAE14(v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0) {
    return 0;
  }
  uint64_t v22 = v5[8];
  uint64_t v23 = *(void *)((char *)a1 + v22);
  uint64_t v24 = *(void *)((char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v25 = sub_1C00DF0D4(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0) {
    return 0;
  }
  if ((sub_1C00E5984(*(void *)((char *)a1 + v5[9]), *(void *)((char *)a2 + v5[9])) & 1) == 0) {
    return 0;
  }
  if ((static FormatMetadata.== infix(_:_:)((void *)((char *)a1 + v5[10]), (void *)((char *)a2 + v5[10])) & 1) == 0) {
    return 0;
  }
  uint64_t v26 = v5[11];
  uint64_t v27 = *(void *)((char *)a1 + v26);
  uint64_t v28 = *(void *)((char *)a2 + v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v29 = sub_1C00DEB9C(v27, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v29 & 1) == 0) {
    return 0;
  }
  uint64_t v30 = v5[12];
  uint64_t v31 = *(void *)((char *)a1 + v30);
  uint64_t v32 = *(void *)((char *)a2 + v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v33 = sub_1C00E4AB4(v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v33 & 1;
}

uint64_t sub_1C0DC5D64(void *a1)
{
  a1[1] = sub_1BFEBC34C(&qword_1EB876FF8, (void (*)(uint64_t))type metadata accessor for FormatContentSubgroup);
  a1[2] = sub_1BFEBC34C(&qword_1EB85D5E8, (void (*)(uint64_t))type metadata accessor for FormatContentSubgroup);
  uint64_t result = sub_1BFEBC34C(&qword_1EA1A7330, (void (*)(uint64_t))type metadata accessor for FormatContentSubgroup);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0DC5E10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 24));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC5E5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 28));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC5EA8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 32));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC5EF4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 36));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC5F48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 44));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC5F94@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 48));
  return swift_bridgeObjectRetain();
}

void *initializeBufferWithCopyOfBuffer for FormatContentSubgroup(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    uint64_t v20 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v20;
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  sub_1BFEBC130();
  swift_bridgeObjectRetain();
  uint64_t v124 = a2;
  uint64_t v125 = a1;
  uint64_t v123 = a3;
  int v120 = v9;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v21 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v9, v10, v21);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v23 = *(int *)(v22 + 48);
    uint64_t v24 = &v9[v23];
    uint64_t v117 = v10;
    char v25 = &v10[v23];
    uint64_t v26 = *(void *)&v10[v23 + 8];
    *(void *)uint64_t v24 = *(void *)&v10[v23];
    *((void *)v24 + 1) = v26;
    uint64_t v27 = (int *)type metadata accessor for FormatMetadata();
    uint64_t v28 = v27[5];
    char v29 = &v24[v28];
    uint64_t v30 = &v25[v28];
    uint64_t v31 = sub_1C151928C();
    uint64_t v32 = *(void *)(v31 - 8);
    char v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    swift_bridgeObjectRetain();
    v33(v29, v30, v31);
    v33(&v24[v27[6]], &v25[v27[6]], v31);
    uint64_t v34 = v27;
    uint64_t v35 = v27[7];
    uint64_t v36 = &v24[v35];
    uint64_t v37 = &v25[v35];
    uint64_t v121 = v31;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v25[v35], 1, v31))
    {
      sub_1BFEC0CE8(0);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      v33(v36, v37, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v31);
    }
    unint64_t v39 = v123;
    uint64_t v40 = v27;
    uint64_t v10 = v117;
    size_t v110 = v34;
    *(void *)&v24[v40[8]] = *(void *)&v25[v40[8]];
    *(void *)&v24[v40[9]] = *(void *)&v25[v40[9]];
    *(void *)&v24[v40[10]] = *(void *)&v25[v40[10]];
    *(void *)&v24[v40[11]] = *(void *)&v25[v40[11]];
    uint64_t v41 = v120;
    goto LABEL_30;
  }
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = v11;
  uint64_t v12 = *((void *)v10 + 3);
  *((void *)v9 + 2) = *((void *)v10 + 2);
  *((void *)v9 + 3) = v12;
  uint64_t v13 = *((void *)v10 + 5);
  *((void *)v9 + 4) = *((void *)v10 + 4);
  *((void *)v9 + 5) = v13;
  *((_WORD *)v9 + 24) = *((_WORD *)v10 + 24);
  uint64_t v14 = *((void *)v10 + 8);
  *((void *)v9 + 7) = *((void *)v10 + 7);
  *((void *)v9 + 8) = v14;
  uint64_t v15 = *((void *)v10 + 10);
  *((void *)v9 + 9) = *((void *)v10 + 9);
  *((void *)v9 + 10) = v15;
  uint64_t v16 = *((void *)v10 + 12);
  *((void *)v9 + 11) = *((void *)v10 + 11);
  *((void *)v9 + 12) = v16;
  uint64_t v107 = *((void *)v10 + 14);
  *((void *)v9 + 13) = *((void *)v10 + 13);
  *((void *)v9 + 14) = v107;
  uint64_t v109 = *((void *)v10 + 16);
  *((void *)v9 + 15) = *((void *)v10 + 15);
  *((void *)v9 + 16) = v109;
  uint64_t v113 = *((void *)v10 + 18);
  *((void *)v9 + 17) = *((void *)v10 + 17);
  *((void *)v9 + 18) = v113;
  *((void *)v9 + 19) = *((void *)v10 + 19);
  uint64_t v106 = (long long *)(v10 + 160);
  unint64_t v116 = *((void *)v10 + 21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v116 < 2)
  {
    long long v17 = *v106;
    uint64_t v18 = v9 + 160;
LABEL_11:
    *uint64_t v18 = v17;
    goto LABEL_14;
  }
  uint64_t v18 = v9 + 160;
  if (v116 == 2)
  {
    long long v17 = *v106;
    goto LABEL_11;
  }
  v9[160] = *(unsigned char *)v106;
  *((void *)v9 + 21) = v116;
  swift_bridgeObjectRetain();
LABEL_14:
  uint64_t v42 = type metadata accessor for FormatPackage();
  uint64_t v43 = *(int *)(v42 + 92);
  uint64_t v44 = &v9[v43];
  uint64_t v45 = &v10[v43];
  uint64_t v46 = *(void *)&v10[v43 + 8];
  *(void *)uint64_t v44 = *(void *)&v10[v43];
  *((void *)v44 + 1) = v46;
  uint64_t v118 = (int *)type metadata accessor for FormatCompilerOptions(0);
  uint64_t v47 = v118[6];
  uint64_t v48 = &v44[v47];
  uint64_t v49 = v45;
  uint64_t v50 = &v45[v47];
  uint64_t v51 = *(void *)&v45[v47 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v112 = v42;
  int v122 = v44;
  if (v51 == 1)
  {
    long long v52 = *((_OWORD *)v50 + 1);
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v50;
    *((_OWORD *)v48 + 1) = v52;
    *((_OWORD *)v48 + 2) = *((_OWORD *)v50 + 2);
  }
  else
  {
    *(void *)uint64_t v48 = *(void *)v50;
    *((void *)v48 + 1) = v51;
    uint64_t v53 = *((void *)v50 + 3);
    *((void *)v48 + 2) = *((void *)v50 + 2);
    *((void *)v48 + 3) = v53;
    uint64_t v54 = *((void *)v50 + 5);
    *((void *)v48 + 4) = *((void *)v50 + 4);
    *((void *)v48 + 5) = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v55 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v56 = &v48[v55];
  uint64_t v57 = &v50[v55];
  uint64_t v58 = sub_1C1518CDC();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
  if (v114(v57, 1, v58))
  {
    sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  uint64_t v61 = v118[7];
  uint64_t v62 = (char *)v122 + v61;
  long long v63 = &v49[v61];
  uint64_t v108 = v58;
  if (v114(&v49[v61], 1, v58))
  {
    sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v62, v63, v58);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v62, 0, 1, v58);
  }
  *(void *)((char *)v122 + v118[8]) = *(void *)&v49[v118[8]];
  uint64_t v65 = *(int *)(v112 + 96);
  uint64_t v66 = &v9[v65];
  uint64_t v67 = &v10[v65];
  uint64_t v68 = v9;
  uint64_t v69 = sub_1C151928C();
  uint64_t v111 = *(void *)(v69 - 8);
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
  swift_bridgeObjectRetain();
  uint64_t v121 = v69;
  uint64_t v71 = v69;
  uint64_t v72 = v70;
  v70(v66, v67, v71);
  uint64_t v73 = *(int *)(v112 + 100);
  uint64_t v74 = &v68[v73];
  uint64_t v75 = &v10[v73];
  if (v114(&v10[v73], 1, v108))
  {
    sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v74, v75, v108);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v74, 0, 1, v108);
  }
  sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
  uint64_t v78 = *(int *)(v77 + 48);
  uint64_t v79 = &v120[v78];
  uint64_t v80 = &v10[v78];
  uint64_t v81 = *(void *)&v10[v78 + 8];
  *(void *)uint64_t v79 = *(void *)&v10[v78];
  *((void *)v79 + 1) = v81;
  uint64_t v82 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v83 = v82[5];
  uint64_t v84 = &v79[v83];
  uint64_t v85 = &v80[v83];
  swift_bridgeObjectRetain();
  v72(v84, v85, v121);
  v72(&v79[v82[6]], &v80[v82[6]], v121);
  uint64_t v86 = v82[7];
  uint64_t v87 = &v79[v86];
  uint64_t v88 = &v80[v86];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(&v80[v86], 1, v121))
  {
    sub_1BFEC0CE8(0);
    memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    v72(v87, v88, v121);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v87, 0, 1, v121);
  }
  uint64_t v41 = v120;
  *(void *)&v79[v82[8]] = *(void *)&v80[v82[8]];
  *(void *)&v79[v82[9]] = *(void *)&v80[v82[9]];
  *(void *)&v79[v82[10]] = *(void *)&v80[v82[10]];
  *(void *)&v79[v82[11]] = *(void *)&v80[v82[11]];
  unint64_t v39 = v123;
  size_t v110 = v82;
LABEL_30:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  sub_1BFEBC1C4(0);
  *(void *)&v41[*(int *)(v90 + 36)] = *(void *)&v10[*(int *)(v90 + 36)];
  uint64_t v91 = v39[7];
  *(void *)((char *)v125 + v39[6]) = *(void *)((char *)v124 + v39[6]);
  *(void *)((char *)v125 + v91) = *(void *)((char *)v124 + v91);
  uint64_t v92 = v39[9];
  *(void *)((char *)v125 + v39[8]) = *(void *)((char *)v124 + v39[8]);
  *(void *)((char *)v125 + v92) = *(void *)((char *)v124 + v92);
  uint64_t v93 = v39[10];
  uint64_t v94 = (char *)v125 + v93;
  uint64_t v95 = (char *)v124 + v93;
  uint64_t v96 = *(void *)((char *)v124 + v93 + 8);
  *(void *)uint64_t v94 = *(void *)((char *)v124 + v93);
  *((void *)v94 + 1) = v96;
  type metadata accessor for FormatMetadata();
  uint64_t v97 = v110[5];
  uint64_t v115 = &v95[v97];
  int v119 = &v94[v97];
  sub_1C151928C();
  uint64_t v98 = *(void *)(v121 - 8);
  uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v99(v119, v115, v121);
  v99(&v94[v110[6]], &v95[v110[6]], v121);
  uint64_t v100 = v110[7];
  uint64_t v101 = &v94[v100];
  uint64_t v102 = &v95[v100];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(&v95[v100], 1, v121))
  {
    sub_1BFEC0CE8(0);
    memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
  }
  else
  {
    v99(v101, v102, v121);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v101, 0, 1, v121);
  }
  uint64_t v20 = v125;
  *(void *)&v94[v110[8]] = *(void *)&v95[v110[8]];
  *(void *)&v94[v110[9]] = *(void *)&v95[v110[9]];
  *(void *)&v94[v110[10]] = *(void *)&v95[v110[10]];
  *(void *)&v94[v110[11]] = *(void *)&v95[v110[11]];
  uint64_t v104 = v123[12];
  *(void *)((char *)v125 + v123[11]) = *(void *)((char *)v124 + v123[11]);
  *(void *)((char *)v125 + v104) = *(void *)((char *)v124 + v104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v20;
}

void *assignWithCopy for FormatContentSubgroup(void *a1, void *a2, int *a3)
{
  int v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v104 = a3;
  int v105 = a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)v5 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v103 = v5;
  if (v5 != a2)
  {
    sub_1BFEBC514((uint64_t)v5 + v6, (uint64_t (*)(void))sub_1BFEBC130);
    sub_1BFEBC130();
    uint64_t v101 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = *((void *)v8 + 3);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = *((void *)v8 + 5);
      v7[48] = v8[48];
      v7[49] = v8[49];
      *((void *)v7 + 7) = *((void *)v8 + 7);
      *((void *)v7 + 8) = *((void *)v8 + 8);
      *((void *)v7 + 9) = *((void *)v8 + 9);
      *((void *)v7 + 10) = *((void *)v8 + 10);
      *((void *)v7 + 11) = *((void *)v8 + 11);
      *((void *)v7 + 12) = *((void *)v8 + 12);
      *((void *)v7 + 13) = *((void *)v8 + 13);
      *((void *)v7 + 14) = *((void *)v8 + 14);
      *((void *)v7 + 15) = *((void *)v8 + 15);
      *((void *)v7 + 16) = *((void *)v8 + 16);
      *((void *)v7 + 17) = *((void *)v8 + 17);
      *((void *)v7 + 18) = *((void *)v8 + 18);
      *((void *)v7 + 19) = *((void *)v8 + 19);
      uint64_t v90 = v8 + 160;
      uint64_t v91 = v7 + 160;
      unint64_t v97 = *((void *)v8 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v97 >= 2)
      {
        uint64_t v9 = v8;
        if (v97 == 2)
        {
          *uint64_t v91 = *v90;
        }
        else
        {
          v7[160] = v8[160];
          *((void *)v7 + 21) = *((void *)v8 + 21);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        *uint64_t v91 = *v90;
        uint64_t v9 = v8;
      }
      uint64_t v25 = type metadata accessor for FormatPackage();
      uint64_t v26 = *(int *)(v25 + 92);
      uint64_t v27 = &v7[v26];
      uint64_t v28 = &v9[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = *((void *)v28 + 1);
      uint64_t v99 = type metadata accessor for FormatCompilerOptions(0);
      uint64_t v29 = *(int *)(v99 + 24);
      uint64_t v30 = v27;
      uint64_t v31 = &v27[v29];
      uint64_t v32 = v28;
      char v33 = &v28[v29];
      uint64_t v34 = *(void *)&v28[v29 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v92 = v25;
      if (v34 == 1)
      {
        long long v35 = *(_OWORD *)v33;
        long long v36 = *((_OWORD *)v33 + 2);
        *((_OWORD *)v31 + 1) = *((_OWORD *)v33 + 1);
        *((_OWORD *)v31 + 2) = v36;
        *(_OWORD *)uint64_t v31 = v35;
      }
      else
      {
        *(void *)uint64_t v31 = *(void *)v33;
        *((void *)v31 + 1) = *((void *)v33 + 1);
        *((void *)v31 + 2) = *((void *)v33 + 2);
        *((void *)v31 + 3) = *((void *)v33 + 3);
        *((void *)v31 + 4) = *((void *)v33 + 4);
        *((void *)v31 + 5) = *((void *)v33 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v37 = v99;
      uint64_t v38 = v30;
      uint64_t v39 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v40 = &v31[v39];
      uint64_t v41 = &v33[v39];
      uint64_t v42 = sub_1C1518CDC();
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
      if (v100(v41, 1, v42))
      {
        sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      uint64_t v45 = *(int *)(v37 + 28);
      uint64_t v46 = (char *)v38 + v45;
      uint64_t v47 = &v32[v45];
      if (v100(&v32[v45], 1, v42))
      {
        sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v46, v47, v42);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v46, 0, 1, v42);
      }
      *(void *)((char *)v38 + *(int *)(v37 + 32)) = *(void *)&v32[*(int *)(v37 + 32)];
      uint64_t v49 = *(int *)(v92 + 96);
      uint64_t v94 = &v7[v49];
      uint64_t v50 = &v101[v49];
      uint64_t v51 = sub_1C151928C();
      uint64_t v93 = *(void *)(v51 - 8);
      long long v52 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
      swift_bridgeObjectRetain();
      uint64_t v53 = v94;
      uint64_t v95 = v51;
      uint64_t v96 = v52;
      v52(v53, v50, v51);
      uint64_t v54 = *(int *)(v92 + 100);
      uint64_t v55 = &v7[v54];
      uint64_t v56 = &v101[v54];
      if (v100(&v101[v54], 1, v42))
      {
        sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v55, v56, v42);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v55, 0, 1, v42);
      }
      sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
      uint64_t v59 = *(int *)(v58 + 48);
      uint64_t v60 = &v7[v59];
      uint64_t v61 = &v101[v59];
      *(void *)uint64_t v60 = *(void *)&v101[v59];
      *((void *)v60 + 1) = *(void *)&v101[v59 + 8];
      uint64_t v62 = (int *)type metadata accessor for FormatMetadata();
      uint64_t v63 = v62[5];
      uint64_t v64 = &v60[v63];
      uint64_t v65 = &v61[v63];
      swift_bridgeObjectRetain();
      v96(v64, v65, v95);
      v96(&v60[v62[6]], &v61[v62[6]], v95);
      uint64_t v66 = v62[7];
      uint64_t v67 = &v60[v66];
      uint64_t v68 = &v61[v66];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(&v61[v66], 1, v95))
      {
        sub_1BFEC0CE8(0);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        v96(v67, v68, v95);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(v67, 0, 1, v95);
      }
      *(void *)&v60[v62[8]] = *(void *)&v61[v62[8]];
      *(void *)&v60[v62[9]] = *(void *)&v61[v62[9]];
      *(void *)&v60[v62[10]] = *(void *)&v61[v62[10]];
      *(void *)&v60[v62[11]] = *(void *)&v61[v62[11]];
      uint64_t v8 = v101;
    }
    else
    {
      uint64_t v10 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
      sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = &v7[v12];
      uint64_t v14 = &v8[v12];
      *(void *)uint64_t v13 = *(void *)&v8[v12];
      *((void *)v13 + 1) = *(void *)&v8[v12 + 8];
      uint64_t v15 = (int *)type metadata accessor for FormatMetadata();
      uint64_t v16 = v15[5];
      long long v17 = &v13[v16];
      uint64_t v98 = &v14[v16];
      uint64_t v18 = sub_1C151928C();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      swift_bridgeObjectRetain();
      v20(v17, v98, v18);
      v20(&v13[v15[6]], &v14[v15[6]], v18);
      uint64_t v21 = v15[7];
      uint64_t v22 = &v13[v21];
      uint64_t v23 = &v14[v21];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(&v14[v21], 1, v18))
      {
        sub_1BFEC0CE8(0);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v20(v22, v23, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
      }
      uint64_t v8 = v101;
      int v5 = v103;
      *(void *)&v13[v15[8]] = *(void *)&v14[v15[8]];
      *(void *)&v13[v15[9]] = *(void *)&v14[v15[9]];
      *(void *)&v13[v15[10]] = *(void *)&v14[v15[10]];
      *(void *)&v13[v15[11]] = *(void *)&v14[v15[11]];
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  sub_1BFEBC1C4(0);
  *(void *)&v7[*(int *)(v70 + 36)] = *(void *)&v8[*(int *)(v70 + 36)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v104[6]) = *(void *)((char *)v105 + v104[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v104[7]) = *(void *)((char *)v105 + v104[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v104[8]) = *(void *)((char *)v105 + v104[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v104[9]) = *(void *)((char *)v105 + v104[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v71 = v104[10];
  uint64_t v72 = (char *)v5 + v71;
  uint64_t v73 = (char *)v105 + v71;
  *(void *)uint64_t v72 = *(void *)((char *)v105 + v71);
  *((void *)v72 + 1) = *(void *)((char *)v105 + v71 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v74 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v75 = v74[5];
  uint64_t v76 = &v72[v75];
  uint64_t v77 = &v73[v75];
  uint64_t v78 = sub_1C151928C();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v79 + 24);
  v80(v76, v77, v78);
  v80(&v72[v74[6]], &v73[v74[6]], v78);
  uint64_t v81 = v74[7];
  uint64_t v82 = &v73[v81];
  uint64_t v83 = *(uint64_t (**)(void))(v79 + 48);
  uint64_t v102 = &v72[v81];
  LODWORD(v76) = v83();
  int v84 = ((uint64_t (*)(char *, uint64_t, uint64_t))v83)(v82, 1, v78);
  if (v76)
  {
    if (!v84)
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v102, v82, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v102, 0, 1, v78);
      goto LABEL_37;
    }
    sub_1BFEC0CE8(0);
    size_t v86 = *(void *)(*(void *)(v85 - 8) + 64);
    uint64_t v87 = v102;
  }
  else
  {
    if (!v84)
    {
      v80(v102, v82, v78);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v79 + 8))(v102, v78);
    sub_1BFEC0CE8(0);
    size_t v86 = *(void *)(*(void *)(v88 - 8) + 64);
    uint64_t v87 = v102;
  }
  memcpy(v87, v82, v86);
LABEL_37:
  *(void *)&v72[v74[8]] = *(void *)&v73[v74[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v72[v74[9]] = *(void *)&v73[v74[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v72[v74[10]] = *(void *)&v73[v74[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v72[v74[11]] = *(void *)&v73[v74[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v103 + v104[11]) = *(void *)((char *)v105 + v104[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v103 + v104[12]) = *(void *)((char *)v105 + v104[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v103;
}

_OWORD *initializeWithTake for FormatContentSubgroup(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v3 = a2;
  *a1 = *a2;
  uint64_t v4 = a3[5];
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  sub_1BFEBC130();
  uint64_t v85 = v3;
  uint64_t v87 = v5;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v7 = *((_OWORD *)v6 + 1);
    *(_OWORD *)int v5 = *(_OWORD *)v6;
    *((_OWORD *)v5 + 1) = v7;
    *((_OWORD *)v5 + 2) = *((_OWORD *)v6 + 2);
    *((_WORD *)v5 + 24) = *((_WORD *)v6 + 24);
    *(_OWORD *)(v5 + 56) = *(_OWORD *)(v6 + 56);
    *(_OWORD *)(v5 + 72) = *(_OWORD *)(v6 + 72);
    *(_OWORD *)(v5 + 88) = *(_OWORD *)(v6 + 88);
    *(_OWORD *)(v5 + 104) = *(_OWORD *)(v6 + 104);
    *(_OWORD *)(v5 + 120) = *(_OWORD *)(v6 + 120);
    *(_OWORD *)(v5 + 136) = *(_OWORD *)(v6 + 136);
    *((void *)v5 + 19) = *((void *)v6 + 19);
    *((_OWORD *)v5 + 10) = *((_OWORD *)v6 + 10);
    uint64_t v81 = (int *)type metadata accessor for FormatPackage();
    uint64_t v8 = v81[23];
    uint64_t v9 = &v5[v8];
    uint64_t v10 = &v6[v8];
    *(_OWORD *)&v5[v8] = *(_OWORD *)&v6[v8];
    size_t v86 = (int *)type metadata accessor for FormatCompilerOptions(0);
    uint64_t v11 = v86[6];
    uint64_t v12 = &v9[v11];
    uint64_t v13 = &v10[v11];
    long long v14 = *(_OWORD *)&v10[v11 + 16];
    *(_OWORD *)uint64_t v12 = *(_OWORD *)&v10[v11];
    *((_OWORD *)v12 + 1) = v14;
    *((_OWORD *)v12 + 2) = *(_OWORD *)&v10[v11 + 32];
    uint64_t v15 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    uint64_t v16 = &v12[v15];
    long long v17 = &v13[v15];
    uint64_t v18 = sub_1C1518CDC();
    uint64_t v19 = *(void *)(v18 - 8);
    __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (__dst(v17, 1, v18))
    {
      sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v37 = v86[7];
    uint64_t v38 = &v9[v37];
    uint64_t v39 = &v10[v37];
    if (__dst(&v10[v37], 1, v18))
    {
      sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v38, v39, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v38, 0, 1, v18);
    }
    *(void *)&v9[v86[8]] = *(void *)&v10[v86[8]];
    uint64_t v45 = v81[24];
    uint64_t v46 = &v87[v45];
    uint64_t v47 = &v6[v45];
    uint64_t v30 = sub_1C151928C();
    uint64_t v80 = *(void *)(v30 - 8);
    uint64_t v48 = v47;
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
    v49(v46, v48, v30);
    uint64_t v50 = v81[25];
    uint64_t v51 = &v87[v50];
    long long v52 = &v6[v50];
    uint64_t v53 = v49;
    if (__dst(&v6[v50], 1, v18))
    {
      sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v51, v52, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v51, 0, 1, v18);
    }
    sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    uint64_t v56 = *(int *)(v55 + 48);
    uint64_t v57 = &v87[v56];
    uint64_t v58 = &v6[v56];
    *(_OWORD *)&v87[v56] = *(_OWORD *)&v6[v56];
    uint64_t v26 = (int *)type metadata accessor for FormatMetadata();
    v53(&v57[v26[5]], &v58[v26[5]], v30);
    v53(&v57[v26[6]], &v58[v26[6]], v30);
    uint64_t v59 = v26[7];
    __dsta = &v57[v59];
    uint64_t v60 = &v58[v59];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(&v58[v59], 1, v30))
    {
      sub_1BFEC0CE8(0);
      memcpy(__dsta, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      v53(__dsta, v60, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(__dsta, 0, 1, v30);
    }
    *(void *)&v57[v26[8]] = *(void *)&v58[v26[8]];
    *(void *)&v57[v26[9]] = *(void *)&v58[v26[9]];
    *(void *)&v57[v26[10]] = *(void *)&v58[v26[10]];
    uint64_t v62 = v26[11];
    uint64_t v42 = &v57[v62];
    uint64_t v43 = &v58[v62];
    uint64_t v44 = a1;
  }
  else
  {
    uint64_t v21 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v5, v6, v21);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v23 = *(int *)(v22 + 48);
    uint64_t v24 = &v5[v23];
    uint64_t v25 = &v6[v23];
    *(_OWORD *)uint64_t v24 = *(_OWORD *)&v6[v23];
    uint64_t v26 = (int *)type metadata accessor for FormatMetadata();
    uint64_t v27 = v26[5];
    uint64_t v28 = &v24[v27];
    uint64_t v29 = &v25[v27];
    uint64_t v30 = sub_1C151928C();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v32(v28, v29, v30);
    v32(&v24[v26[6]], &v25[v26[6]], v30);
    uint64_t v33 = v26[7];
    uint64_t v34 = &v24[v33];
    long long v35 = &v25[v33];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&v25[v33], 1, v30))
    {
      sub_1BFEC0CE8(0);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      v32(v34, v35, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
    }
    *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
    *(void *)&v24[v26[9]] = *(void *)&v25[v26[9]];
    *(void *)&v24[v26[10]] = *(void *)&v25[v26[10]];
    uint64_t v41 = v26[11];
    uint64_t v42 = &v24[v41];
    uint64_t v43 = &v25[v41];
    uint64_t v44 = a1;
    uint64_t v3 = v85;
  }
  *(void *)uint64_t v42 = *(void *)v43;
  swift_storeEnumTagMultiPayload();
  sub_1BFEBC1C4(0);
  *(void *)&v87[*(int *)(v63 + 36)] = *(void *)&v6[*(int *)(v63 + 36)];
  uint64_t v64 = a3[7];
  *(void *)((char *)v44 + a3[6]) = *(void *)((char *)v3 + a3[6]);
  *(void *)((char *)v44 + v64) = *(void *)((char *)v3 + v64);
  uint64_t v65 = a3[9];
  *(void *)((char *)v44 + a3[8]) = *(void *)((char *)v3 + a3[8]);
  *(void *)((char *)v44 + v65) = *(void *)((char *)v3 + v65);
  uint64_t v66 = a3[10];
  uint64_t v67 = (char *)v44 + v66;
  uint64_t v68 = (char *)v3 + v66;
  *(_OWORD *)((char *)v44 + v66) = *(_OWORD *)((char *)v3 + v66);
  type metadata accessor for FormatMetadata();
  uint64_t v69 = v26[5];
  uint64_t v70 = &v67[v69];
  uint64_t v71 = &v68[v69];
  sub_1C151928C();
  uint64_t v72 = *(void *)(v30 - 8);
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
  v73(v70, v71, v30);
  v73(&v67[v26[6]], &v68[v26[6]], v30);
  uint64_t v74 = v26[7];
  uint64_t v75 = &v67[v74];
  uint64_t v76 = &v68[v74];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(&v68[v74], 1, v30))
  {
    sub_1BFEC0CE8(0);
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    v73(v75, v76, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v75, 0, 1, v30);
  }
  *(void *)&v67[v26[8]] = *(void *)&v68[v26[8]];
  *(void *)&v67[v26[9]] = *(void *)&v68[v26[9]];
  *(void *)&v67[v26[10]] = *(void *)&v68[v26[10]];
  *(void *)&v67[v26[11]] = *(void *)&v68[v26[11]];
  uint64_t v78 = a3[12];
  *(void *)((char *)v44 + a3[11]) = *(void *)((char *)v85 + a3[11]);
  *(void *)((char *)v44 + v78) = *(void *)((char *)v85 + v78);
  return v44;
}

void *assignWithTake for FormatContentSubgroup(void *a1, void *a2, int *a3)
{
  int v5 = a1;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v96 = a3;
  unint64_t v97 = a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)v5 + v7;
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v95 = v5;
  if (v5 != a2)
  {
    sub_1BFEBC514((uint64_t)v5 + v7, (uint64_t (*)(void))sub_1BFEBC130);
    sub_1BFEBC130();
    __src = (char *)v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v10 = v9[1];
      *(_OWORD *)uint64_t v8 = *v9;
      *((_OWORD *)v8 + 1) = v10;
      *((_OWORD *)v8 + 2) = v9[2];
      *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
      *(_OWORD *)(v8 + 56) = *(_OWORD *)((char *)v9 + 56);
      *(_OWORD *)(v8 + 72) = *(_OWORD *)((char *)v9 + 72);
      *(_OWORD *)(v8 + 88) = *(_OWORD *)((char *)v9 + 88);
      *(_OWORD *)(v8 + 104) = *(_OWORD *)((char *)v9 + 104);
      *(_OWORD *)(v8 + 120) = *(_OWORD *)((char *)v9 + 120);
      *(_OWORD *)(v8 + 136) = *(_OWORD *)((char *)v9 + 136);
      *((void *)v8 + 19) = *((void *)v9 + 19);
      *((_OWORD *)v8 + 10) = v9[10];
      uint64_t v90 = (int *)type metadata accessor for FormatPackage();
      uint64_t v11 = v90[23];
      uint64_t v12 = &v8[v11];
      uint64_t v13 = (char *)v9 + v11;
      *(_OWORD *)&v8[v11] = *(_OWORD *)((char *)v9 + v11);
      long long v14 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v15 = v14[6];
      uint64_t v16 = &v12[v15];
      long long v17 = &v13[v15];
      long long v18 = *(_OWORD *)&v13[v15 + 16];
      *(_OWORD *)uint64_t v16 = *(_OWORD *)&v13[v15];
      *((_OWORD *)v16 + 1) = v18;
      *((_OWORD *)v16 + 2) = *(_OWORD *)&v13[v15 + 32];
      uint64_t v19 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v20 = &v16[v19];
      uint64_t v21 = &v17[v19];
      uint64_t v22 = sub_1C1518CDC();
      uint64_t v23 = *(void *)(v22 - 8);
      __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      if (__dst(v21, 1, v22))
      {
        sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v41 = v14[7];
      uint64_t v42 = &v12[v41];
      uint64_t v43 = &v13[v41];
      uint64_t v9 = __src;
      if (__dst(&v13[v41], 1, v22))
      {
        sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v42, v43, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v42, 0, 1, v22);
      }
      *(void *)&v12[v14[8]] = *(void *)&v13[v14[8]];
      uint64_t v48 = v90[24];
      uint64_t v49 = &v8[v48];
      uint64_t v50 = &__src[v48];
      uint64_t v51 = sub_1C151928C();
      uint64_t v89 = *(void *)(v51 - 8);
      long long v52 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
      uint64_t v53 = v51;
      v52(v49, v50, v51);
      uint64_t v54 = v90[25];
      uint64_t v55 = &v8[v54];
      uint64_t v56 = &__src[v54];
      if (__dst(&__src[v54], 1, v22))
      {
        sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v55, v56, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v55, 0, 1, v22);
      }
      sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
      uint64_t v59 = *(int *)(v58 + 48);
      uint64_t v60 = &v8[v59];
      uint64_t v61 = &__src[v59];
      *(_OWORD *)&v8[v59] = *(_OWORD *)&__src[v59];
      uint64_t v62 = (int *)type metadata accessor for FormatMetadata();
      v52(&v60[v62[5]], &v61[v62[5]], v53);
      v52(&v60[v62[6]], &v61[v62[6]], v53);
      uint64_t v63 = v62[7];
      __dsta = &v60[v63];
      uint64_t v64 = &v61[v63];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(&v61[v63], 1, v53))
      {
        sub_1BFEC0CE8(0);
        memcpy(__dsta, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        v52(__dsta, v64, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(__dsta, 0, 1, v53);
      }
      *(void *)&v60[v62[8]] = *(void *)&v61[v62[8]];
      *(void *)&v60[v62[9]] = *(void *)&v61[v62[9]];
      *(void *)&v60[v62[10]] = *(void *)&v61[v62[10]];
      uint64_t v66 = v62[11];
      uint64_t v46 = &v60[v66];
      uint64_t v47 = &v61[v66];
    }
    else
    {
      uint64_t v25 = sub_1C1515FDC();
      (*(void (**)(char *, _OWORD *, uint64_t))(*(void *)(v25 - 8) + 32))(v8, v9, v25);
      sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
      uint64_t v27 = *(int *)(v26 + 48);
      uint64_t v28 = &v8[v27];
      uint64_t v29 = (char *)v9 + v27;
      *(_OWORD *)&v8[v27] = *(_OWORD *)((char *)v9 + v27);
      uint64_t v30 = (int *)type metadata accessor for FormatMetadata();
      uint64_t v31 = v30[5];
      uint64_t v32 = &v28[v31];
      uint64_t v33 = &v29[v31];
      uint64_t v34 = sub_1C151928C();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v36(v32, v33, v34);
      v36(&v28[v30[6]], &v29[v30[6]], v34);
      uint64_t v37 = v30[7];
      uint64_t v38 = &v28[v37];
      uint64_t v39 = &v29[v37];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v29[v37], 1, v34))
      {
        sub_1BFEC0CE8(0);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        v36(v38, v39, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v34);
      }
      *(void *)&v28[v30[8]] = *(void *)&v29[v30[8]];
      *(void *)&v28[v30[9]] = *(void *)&v29[v30[9]];
      *(void *)&v28[v30[10]] = *(void *)&v29[v30[10]];
      uint64_t v45 = v30[11];
      uint64_t v46 = &v28[v45];
      uint64_t v47 = &v29[v45];
      uint64_t v9 = __src;
      int v5 = v95;
    }
    *(void *)uint64_t v46 = *(void *)v47;
    swift_storeEnumTagMultiPayload();
  }
  sub_1BFEBC1C4(0);
  *(void *)&v8[*(int *)(v67 + 36)] = *(void *)((char *)v9 + *(int *)(v67 + 36));
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v96[6]) = *(void *)((char *)v97 + v96[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v96[7]) = *(void *)((char *)v97 + v96[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v96[8]) = *(void *)((char *)v97 + v96[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v96[9]) = *(void *)((char *)v97 + v96[9]);
  swift_bridgeObjectRelease();
  uint64_t v68 = v96[10];
  uint64_t v69 = (char *)v5 + v68;
  uint64_t v70 = (char *)v97 + v68;
  uint64_t v71 = *(void *)((char *)v97 + v68 + 8);
  *(void *)uint64_t v69 = *(void *)((char *)v97 + v68);
  *((void *)v69 + 1) = v71;
  swift_bridgeObjectRelease();
  uint64_t v72 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v73 = v72[5];
  uint64_t v74 = &v69[v73];
  uint64_t v75 = &v70[v73];
  uint64_t v76 = sub_1C151928C();
  uint64_t v77 = *(void *)(v76 - 8);
  uint64_t v78 = *(void (**)(char *, char *, uint64_t))(v77 + 40);
  v78(v74, v75, v76);
  v78(&v69[v72[6]], &v70[v72[6]], v76);
  uint64_t v79 = v72[7];
  uint64_t v80 = &v70[v79];
  uint64_t v81 = *(uint64_t (**)(void))(v77 + 48);
  uint64_t v93 = &v69[v79];
  int v82 = v81();
  int v83 = ((uint64_t (*)(char *, uint64_t, uint64_t))v81)(v80, 1, v76);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v93, v80, v76);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v93, 0, 1, v76);
      goto LABEL_29;
    }
    sub_1BFEC0CE8(0);
    size_t v85 = *(void *)(*(void *)(v84 - 8) + 64);
    size_t v86 = v93;
  }
  else
  {
    if (!v83)
    {
      v78(v93, v80, v76);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v77 + 8))(v93, v76);
    sub_1BFEC0CE8(0);
    size_t v85 = *(void *)(*(void *)(v87 - 8) + 64);
    size_t v86 = v93;
  }
  memcpy(v86, v80, v85);
LABEL_29:
  *(void *)&v69[v72[8]] = *(void *)&v70[v72[8]];
  swift_bridgeObjectRelease();
  *(void *)&v69[v72[9]] = *(void *)&v70[v72[9]];
  swift_bridgeObjectRelease();
  *(void *)&v69[v72[10]] = *(void *)&v70[v72[10]];
  swift_bridgeObjectRelease();
  *(void *)&v69[v72[11]] = *(void *)&v70[v72[11]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v95 + v96[11]) = *(void *)((char *)v97 + v96[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)v95 + v96[12]) = *(void *)((char *)v97 + v96[12]);
  swift_bridgeObjectRelease();
  return v95;
}

uint64_t sub_1C0DC8CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFEBC1C4(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1BFEBAC8C(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C0DC8E50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFEBC1C4(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1BFEBAC8C(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DC9080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroup.CodingKeys()
{
  return &type metadata for FormatContentSubgroup.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroup.AltCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0DC9154);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroup.AltCodingKeys()
{
  return &type metadata for FormatContentSubgroup.AltCodingKeys;
}

unint64_t sub_1C0DC9190()
{
  unint64_t result = qword_1EA1A7338;
  if (!qword_1EA1A7338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7338);
  }
  return result;
}

unint64_t sub_1C0DC91E8()
{
  unint64_t result = qword_1EA1A7340;
  if (!qword_1EA1A7340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7340);
  }
  return result;
}

uint64_t sub_1C0DC923C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

void sub_1C0DC9288(uint64_t a1)
{
}

void sub_1C0DC92A8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  if (!*a2)
  {
    sub_1BFEBAC8C(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0DC9324(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_1BFEBAC8C(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

unint64_t sub_1C0DC9398(unint64_t result, __int16 a2, char a3)
{
  if (a3 == 2) {
    return sub_1BFFDF4E4(result, a2);
  }
  if (a3 == 1) {
    return sub_1BFFDF4D8(result, a2, HIBYTE(a2) & 1);
  }
  return result;
}

void sub_1C0DC93BC(uint64_t a1)
{
}

void sub_1C0DC93DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0DC943C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  sub_1C0DC92A8(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C0DC9498@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C0EA6D4C(*(void *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_1C0DC94F4@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C0DC3A88(a1, *(void *)(v2 + 16), *(uint64_t **)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), a2);
}

uint64_t sub_1C0DC9514@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0DC39F0(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_1C0DC9534()
{
  unint64_t result = qword_1EB88FFD0;
  if (!qword_1EB88FFD0)
  {
    sub_1BFEBAA38(255, (unint64_t *)&qword_1EB871000, (uint64_t)&type metadata for FormatContentSlot.Resolved, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88FFD0);
  }
  return result;
}

void sub_1C0DC95B0(uint64_t a1)
{
}

uint64_t sub_1C0DC95E4()
{
  sub_1C00544B4(*(void *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C0DC961C@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C0DC94F4(a1, a2);
}

uint64_t FormatSlotDefinitionItemSet.kinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotDefinitionItemSet.max.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t FormatSlotDefinitionItemSet.init(kinds:min:max:properties:auxiliary:editorProperties:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, _OWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_DWORD *)a7 = a2;
  *(_DWORD *)(a7 + 4) = a3;
  *(void *)(a7 + 8) = a1;
  *(void *)(a7 + 16) = a4;
  *(_OWORD *)(a7 + 24) = *a5;
  uint64_t v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  return sub_1BFE308F8(a6, a7 + *(int *)(v9 + 36), (uint64_t (*)(void))sub_1BFF71E30);
}

uint64_t FormatSlotDefinitionItemSet.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DC96AC()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1BFE74E78(v0);
  swift_bridgeObjectRelease();
  int64_t v2 = v1[2];
  if (v2)
  {
    v12[0] = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v2, 0);
    uint64_t v3 = v12[0];
    unsigned int v4 = v1 + 5;
    do
    {
      unint64_t v5 = 0xE700000000000000;
      unint64_t v6 = 0x656C6369747241;
      switch(*v4)
      {
        case 0uLL:
          break;
        case 1uLL:
          unint64_t v5 = 0xE500000000000000;
          unint64_t v6 = 0x6575737349;
          break;
        case 2uLL:
          unint64_t v5 = 0xE800000000000000;
          unint64_t v6 = 0x6465626D45626557;
          break;
        case 3uLL:
          unint64_t v5 = 0xEA00000000006B63;
          unint64_t v6 = 0x6172546F69647541;
          break;
        case 4uLL:
          unint64_t v5 = 0xE300000000000000;
          unint64_t v6 = 6775124;
          break;
        case 5uLL:
          unint64_t v5 = 0xE500000000000000;
          unint64_t v6 = 0x65726F6353;
          break;
        case 6uLL:
          unint64_t v5 = 0xE800000000000000;
          unint64_t v6 = 0x676E69646E617453;
          break;
        case 7uLL:
          unint64_t v6 = 0x74656B63617242;
          break;
        case 8uLL:
          unint64_t v5 = 0xE900000000000065;
          unint64_t v6 = 0x726F635320786F42;
          break;
        case 9uLL:
          unint64_t v6 = 0x6F635320656E694CLL;
          unint64_t v5 = 0xEA00000000006572;
          break;
        case 0xAuLL:
          unint64_t v5 = 0xED000074726F7065;
          unint64_t v6 = 0x52207972756A6E49;
          break;
        case 0xBuLL:
          unint64_t v5 = 0xEA00000000007265;
          unint64_t v6 = 0x79616C502079654BLL;
          break;
        case 0xCuLL:
          unint64_t v5 = 0xE600000000000000;
          unint64_t v6 = 0x656C7A7A7550;
          break;
        case 0xDuLL:
          unint64_t v5 = 0xEB00000000657079;
          unint64_t v6 = 0x5420656C7A7A7550;
          break;
        case 0xEuLL:
          unint64_t v5 = 0x80000001C16283B0;
          unint64_t v6 = 0xD000000000000010;
          break;
        default:
          unint64_t v6 = *(v4 - 1);
          unint64_t v5 = *v4;
          break;
      }
      sub_1BFE74E64(*(v4 - 1), *v4);
      v12[0] = v3;
      unint64_t v8 = *(void *)(v3 + 16);
      unint64_t v7 = *(void *)(v3 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1BFF661B8(v7 > 1, v8 + 1, 1);
        uint64_t v3 = v12[0];
      }
      v4 += 2;
      *(void *)(v3 + 16) = v8 + 1;
      uint64_t v9 = v3 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v2;
    }
    while (v2);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  v12[0] = v3;
  swift_bridgeObjectRetain();
  sub_1BFD8BB48(v12);
  swift_bridgeObjectRelease();
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
  sub_1BFE99E40();
  sub_1C151E55C();
  swift_release();
  v12[0] = sub_1C0DC9C90();
  v12[1] = v10;
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v12[0];
}

uint64_t FormatSlotDefinitionItemSet.min.getter()
{
  return *v0;
}

uint64_t FormatSlotDefinitionItemSet.max.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*FormatSlotDefinitionItemSet.max.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinitionItemSet.kinds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FormatSlotDefinitionItemSet.kinds.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinitionItemSet.properties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatSlotDefinitionItemSet.properties.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinitionItemSet.auxiliary.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFDB3920(v2);
}

uint64_t FormatSlotDefinitionItemSet.auxiliary.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1BFDB3960(*(void *)(v1 + 24));
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v3;
  return result;
}

uint64_t (*FormatSlotDefinitionItemSet.auxiliary.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinitionItemSet.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatSlotDefinitionItemSet();
  return sub_1BFF2349C(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(void))sub_1BFF71E30);
}

uint64_t sub_1C0DC9BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0DCBB5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0DC9C14(uint64_t a1)
{
  unint64_t v2 = sub_1C001BC90();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DC9C50(uint64_t a1)
{
  unint64_t v2 = sub_1C001BC90();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0DC9C90()
{
  uint64_t v2 = sub_1C152088C();
  sub_1C151E80C();
  if (*(_DWORD *)(v0 + 4) != 0x7FFFFFFF) {
    sub_1C152088C();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v2;
}

BOOL _s8NewsFeed27FormatSlotDefinitionItemSetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFC50CC();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71E30();
  MEMORY[0x1F4188790](v12 - 8);
  long long v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v17 = (char *)&v42 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v42 - v19;
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  if (*(_DWORD *)(a1 + 4) != *(_DWORD *)(a2 + 4)) {
    return 0;
  }
  uint64_t v48 = v4;
  uint64_t v49 = v5;
  uint64_t v47 = v11;
  uint64_t v21 = *(void *)(a1 + 8);
  uint64_t v22 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v23 = sub_1C00AC6B0(v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0) {
    return 0;
  }
  uint64_t v24 = *(void *)(a1 + 16);
  uint64_t v25 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v26 = sub_1C00DFB04(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0) {
    return 0;
  }
  uint64_t v27 = *(void *)(a1 + 24);
  uint64_t v46 = *(void *)(a1 + 32);
  uint64_t v28 = *(void *)(a2 + 24);
  if (v27)
  {
    if (v28)
    {
      uint64_t v45 = *(void *)(a2 + 32);
      sub_1BFDB3920(v27);
      sub_1BFDB3920(v27);
      sub_1BFDB3920(v28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v29 = v27;
      char v30 = sub_1C00DFB04(v27, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30)
      {
        uint64_t v43 = v29;
        int v44 = sub_1C00DFAB0(v46, v45);
        sub_1BFDB3960(v28);
        swift_bridgeObjectRelease();
        uint64_t v31 = v43;
        swift_bridgeObjectRelease();
        sub_1BFDB3960(v31);
        if ((v44 & 1) == 0) {
          return 0;
        }
        goto LABEL_11;
      }
      sub_1BFDB3960(v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = v29;
LABEL_17:
      sub_1BFDB3960(v37);
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_15:
    sub_1BFDB3920(v28);
    sub_1BFDB3960(v27);
    uint64_t v37 = v28;
    goto LABEL_17;
  }
  if (v28) {
    goto LABEL_15;
  }
LABEL_11:
  uint64_t v32 = type metadata accessor for FormatSlotDefinitionItemSet();
  sub_1BFF2349C(a1 + *(int *)(v32 + 36), (uint64_t)v20, (uint64_t (*)(void))sub_1BFF71E30);
  sub_1BFF2349C(a2 + *(int *)(v32 + 36), (uint64_t)v17, (uint64_t (*)(void))sub_1BFF71E30);
  uint64_t v33 = (uint64_t)v47;
  uint64_t v34 = (uint64_t)&v47[*(int *)(v9 + 48)];
  sub_1BFF2349C((uint64_t)v20, (uint64_t)v47, (uint64_t (*)(void))sub_1BFF71E30);
  sub_1BFF2349C((uint64_t)v17, v34, (uint64_t (*)(void))sub_1BFF71E30);
  uint64_t v35 = v48;
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  if (v36(v33, 1, v48) == 1)
  {
    sub_1BFE3061C((uint64_t)v17, (uint64_t (*)(void))sub_1BFF71E30);
    sub_1BFE3061C((uint64_t)v20, (uint64_t (*)(void))sub_1BFF71E30);
    if (v36(v34, 1, v35) == 1)
    {
      sub_1BFE3061C(v33, (uint64_t (*)(void))sub_1BFF71E30);
      return 1;
    }
    goto LABEL_22;
  }
  sub_1BFF2349C(v33, (uint64_t)v14, (uint64_t (*)(void))sub_1BFF71E30);
  if (v36(v34, 1, v35) == 1)
  {
    sub_1BFE3061C((uint64_t)v17, (uint64_t (*)(void))sub_1BFF71E30);
    sub_1BFE3061C((uint64_t)v20, (uint64_t (*)(void))sub_1BFF71E30);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v35);
LABEL_22:
    sub_1BFE3061C(v33, (uint64_t (*)(void))sub_1BFFC50CC);
    return 0;
  }
  uint64_t v39 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v7, v34, v35);
  sub_1C0020AA8(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
  char v40 = sub_1C151E5CC();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v39 + 8);
  v41(v7, v35);
  sub_1BFE3061C((uint64_t)v17, (uint64_t (*)(void))sub_1BFF71E30);
  sub_1BFE3061C((uint64_t)v20, (uint64_t (*)(void))sub_1BFF71E30);
  v41(v14, v35);
  sub_1BFE3061C(v33, (uint64_t (*)(void))sub_1BFF71E30);
  return (v40 & 1) != 0;
}

uint64_t sub_1C0DCA344(void *a1)
{
  a1[1] = sub_1C0020AA8(qword_1EB880238, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  a1[2] = sub_1C0020AA8(&qword_1EB868328, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  uint64_t result = sub_1C0020AA8(&qword_1EA1A7390, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0DCA3F0@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *(_DWORD *)(result + 4);
  return result;
}

_DWORD *sub_1C0DCA3FC(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 4) = *result;
  return result;
}

uint64_t sub_1C0DCA408@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DCA414(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_1C0DCA458@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DCA464(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v3;
  return result;
}

void *initializeBufferWithCopyOfBuffer for FormatSlotDefinitionItemSet(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v9 = a2 + 3;
    uint64_t v8 = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      uint64_t v10 = a2[4];
      v4[3] = v8;
      v4[4] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 3) = *v9;
    }
    uint64_t v12 = *(int *)(a3 + 36);
    uint64_t v13 = (char *)v4 + v12;
    long long v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1C1518CDC();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_1BFF71E30();
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t assignWithCopy for FormatSlotDefinitionItemSet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      *(void *)(a1 + 24) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C034DE40(a1 + 24);
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C1518CDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_13;
  }
  if (v14)
  {
LABEL_13:
    sub_1BFF71E30();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for FormatSlotDefinitionItemSet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 36);
  int v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1C1518CDC();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BFF71E30();
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for FormatSlotDefinitionItemSet(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[3] = v6;
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C034DE40((uint64_t)(a1 + 3));
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
LABEL_6:
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1518CDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_11;
  }
  if (v14)
  {
LABEL_11:
    sub_1BFF71E30();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1C0DCABBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFF71E30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0DCAC6C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFF71E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatSlotDefinitionItemSet.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DCADE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotDefinitionItemSet.CodingKeys()
{
  return &type metadata for FormatSlotDefinitionItemSet.CodingKeys;
}

unint64_t sub_1C0DCAE1C()
{
  unint64_t result = qword_1EA1A7398;
  if (!qword_1EA1A7398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7398);
  }
  return result;
}

void *sub_1C0DCAE70(uint64_t a1, uint64_t a2)
{
  sub_1BFF71E30();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v85 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DCBDCC(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2349C(a2, (uint64_t)v8, (uint64_t (*)(void))sub_1C0DCBDCC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BFE3061C((uint64_t)v8, (uint64_t (*)(void))sub_1C0DCBDCC);
    return sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  else
  {
    uint64_t v77 = a1;
    uint64_t v78 = v9;
    sub_1BFE308F8((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
    int v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFE79BF4(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    long long v76 = xmmword_1C1529AE0;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFE79BF4(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v14);
    sub_1C0181BEC(0);
    uint64_t v79 = v15;
    unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80);
    uint64_t v82 = *(void *)(*(void *)(v15 - 8) + 72);
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_1C152C7E0;
    uint64_t v17 = *((void *)v12 + 1);
    int64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = MEMORY[0x1E4FBC860];
    if (v18)
    {
      uint64_t v75 = v16;
      uint64_t v80 = v12;
      *(void *)&v88[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1BFF661B8(0, v18, 0);
      uint64_t v19 = *(void *)&v88[0];
      int64_t v20 = sub_1BFD44A04(v17);
      int v22 = v21;
      char v24 = v23 & 1;
      uint64_t v86 = v17 + 56;
      unint64_t v81 = (unint64_t)"Editor Properties";
      do
      {
        if (v20 < 0 || v20 >= 1 << *(unsigned char *)(v17 + 32))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          swift_release();
          __break(1u);
          JUMPOUT(0x1C0DCBB20);
        }
        if (((*(void *)(v86 + (((unint64_t)v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          goto LABEL_37;
        }
        if (*(_DWORD *)(v17 + 36) != v22) {
          goto LABEL_38;
        }
        uint64_t v25 = (uint64_t *)(*(void *)(v17 + 48) + 16 * v20);
        unint64_t v26 = v25[1];
        unint64_t v27 = 0xE500000000000000;
        unint64_t v28 = 0x6575737349;
        switch(v26)
        {
          case 0uLL:
            unint64_t v27 = 0xE700000000000000;
            unint64_t v28 = 0x656C6369747241;
            break;
          case 1uLL:
            break;
          case 2uLL:
            unint64_t v27 = 0xE800000000000000;
            unint64_t v28 = 0x6465626D45626557;
            break;
          case 3uLL:
            unint64_t v27 = 0xEA00000000006B63;
            unint64_t v28 = 0x6172546F69647541;
            break;
          case 4uLL:
            unint64_t v27 = 0xE300000000000000;
            unint64_t v28 = 6775124;
            break;
          case 5uLL:
            unint64_t v28 = 0x65726F6353;
            break;
          case 6uLL:
            unint64_t v27 = 0xE800000000000000;
            unint64_t v28 = 0x676E69646E617453;
            break;
          case 7uLL:
            unint64_t v27 = 0xE700000000000000;
            unint64_t v28 = 0x74656B63617242;
            break;
          case 8uLL:
            unint64_t v28 = 0x726F635320786F42;
            unint64_t v27 = 0xE900000000000065;
            break;
          case 9uLL:
            unint64_t v28 = 0x6F635320656E694CLL;
            unint64_t v27 = 0xEA00000000006572;
            break;
          case 0xAuLL:
            unint64_t v27 = 0xED000074726F7065;
            unint64_t v28 = 0x52207972756A6E49;
            break;
          case 0xBuLL:
            unint64_t v27 = 0xEA00000000007265;
            unint64_t v28 = 0x79616C502079654BLL;
            break;
          case 0xCuLL:
            unint64_t v27 = 0xE600000000000000;
            unint64_t v28 = 0x656C7A7A7550;
            break;
          case 0xDuLL:
            unint64_t v27 = 0xEB00000000657079;
            unint64_t v28 = 0x5420656C7A7A7550;
            break;
          case 0xEuLL:
            unint64_t v27 = v81 | 0x8000000000000000;
            unint64_t v28 = 0xD000000000000010;
            break;
          default:
            unint64_t v28 = *v25;
            unint64_t v27 = v25[1];
            break;
        }
        sub_1BFE74E64(*v25, v26);
        *(void *)&v88[0] = v19;
        unint64_t v30 = *(void *)(v19 + 16);
        unint64_t v29 = *(void *)(v19 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_1BFF661B8(v29 > 1, v30 + 1, 1);
          uint64_t v19 = *(void *)&v88[0];
        }
        *(void *)(v19 + 16) = v30 + 1;
        uint64_t v31 = v19 + 16 * v30;
        *(void *)(v31 + 32) = v28;
        *(void *)(v31 + 40) = v27;
        int64_t v32 = sub_1BFD43BF8(v20, v22, v24 & 1, v17);
        int64_t v20 = v32;
        int v22 = v33;
        char v24 = v34 & 1;
        --v18;
      }
      while (v18);
      sub_1C0153754(v32, v33, v34 & 1);
      swift_bridgeObjectRelease();
      uint64_t v12 = v80;
      unint64_t v16 = v75;
    }
    *(void *)&v88[0] = v19;
    swift_bridgeObjectRetain();
    sub_1BFD8BB48((uint64_t *)v88);
    uint64_t v75 = inited + 32;
    uint64_t v35 = (char *)(v83 + v16);
    swift_bridgeObjectRelease();
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
    sub_1BFE99E40();
    uint64_t v36 = sub_1C151E55C();
    uint64_t v38 = v37;
    swift_release();
    sub_1C0433600(0x73646E694BLL, 0xE500000000000000, v36, v38, v35);
    uint64_t v39 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(void (**)(unint64_t, void, uint64_t, char *))(v40 + 56);
    unint64_t v81 = (unint64_t)v35;
    uint64_t v86 = v40 + 56;
    v41((unint64_t)v35, 0, 1, (char *)v39);
    LODWORD(v87) = *(_DWORD *)v12;
    *(void *)&v88[0] = sub_1C152088C();
    *((void *)&v88[0] + 1) = v42;
    sub_1C151E80C();
    if (*((_DWORD *)v12 + 1) != 0x7FFFFFFF)
    {
      LODWORD(v87) = *((_DWORD *)v12 + 1);
      sub_1C152088C();
    }
    uint64_t v43 = v82;
    unint64_t v44 = v81;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C0433600(0x65676E6152, 0xE500000000000000, *(uint64_t *)&v88[0], *((uint64_t *)&v88[0] + 1), (void *)(v44 + v43));
    v41(v44 + v43, 0, 1, (char *)v39);
    uint64_t v87 = *(void *)(*((void *)v12 + 2) + 16);
    *(void *)&v88[0] = sub_1C152088C();
    *((void *)&v88[0] + 1) = v45;
    sub_1C151E80C();
    long long v46 = v88[0];
    uint64_t v47 = swift_bridgeObjectRetain();
    uint64_t v48 = sub_1C0BE7EA4(v47);
    uint64_t v80 = (char *)v39;
    uint64_t v49 = v41;
    uint64_t v50 = (uint64_t)v12;
    uint64_t v51 = v48;
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_1C0235950(v51);
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_1C0233FC8(v52);
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_1C131B79C(v53);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x69747265706F7250, 0xEA00000000007365, (uint64_t)v54, v46, *((uint64_t *)&v46 + 1), (void *)(v44 + 2 * v43));
    v49(v44 + 2 * v43, 0, 1, v80);
    uint64_t v55 = (void *)(v44 + 3 * v43);
    sub_1BFE79BF4(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, MEMORY[0x1E4FBBE00]);
    uint64_t v56 = swift_initStackObject();
    *(_OWORD *)(v56 + 16) = v76;
    uint64_t v57 = *(void *)(v50 + 24);
    uint64_t v58 = *(void *)(v50 + 32);
    *(void *)&v88[0] = v57;
    *((void *)&v88[0] + 1) = v58;
    sub_1BFDB3920(v57);
    uint64_t v59 = sub_1C0CDE368(v77, v88);
    sub_1BFDB3960(v57);
    *(void *)(v56 + 56) = &type metadata for FormatInspection;
    *(void *)(v56 + 64) = &off_1F1C29D30;
    *(void *)(v56 + 32) = v59;
    uint64_t v60 = v80;
    uint64_t v61 = sub_1C0233FC8(v56);
    swift_setDeallocating();
    sub_1C01004D8();
    swift_arrayDestroy();
    uint64_t v62 = sub_1C131B79C(v61);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x7261696C69787541, 0xE900000000000079, (uint64_t)v62, 0, 0, v55);
    v49((unint64_t)v55, 0, 1, v60);
    uint64_t v63 = v85;
    sub_1BFF2349C(v50 + *(int *)(v78 + 36), v85, (uint64_t (*)(void))sub_1BFF71E30);
    uint64_t v64 = sub_1C1518CDC();
    uint64_t v65 = *(void *)(v64 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64) == 1)
    {
      sub_1BFE3061C(v63, (uint64_t (*)(void))sub_1BFF71E30);
      uint64_t v66 = 0;
      uint64_t v67 = 0xE000000000000000;
    }
    else
    {
      uint64_t v66 = sub_1C1518CCC();
      uint64_t v67 = v68;
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
    }
    uint64_t v69 = (char *)(v81 + 4 * v82);
    sub_1C0433600(0xD000000000000011, 0x80000001C1628390, v66, v67, v69);
    v49((unint64_t)v69, 0, 1, v60);
    sub_1C09BCFA4(0x746553206D657449, 0xE800000000000000, 0, 0, v83, v88);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v70 = inited;
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v70 + 64) = &off_1F1BDEC90;
    uint64_t v71 = swift_allocObject();
    *(void *)(v70 + 32) = v71;
    *(void *)(v71 + 48) = v89;
    long long v72 = v88[1];
    *(_OWORD *)(v71 + 16) = v88[0];
    *(_OWORD *)(v71 + 32) = v72;
    int v13 = sub_1C131B79C(v70);
    swift_setDeallocating();
    sub_1C01004A4(0);
    swift_arrayDestroy();
    sub_1BFE3061C(v50, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
  }
  return v13;
}

uint64_t sub_1C0DCBB5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7235949 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7889261 && a2 == 0xE300000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73646E696BLL && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7261696C69787561 && a2 == 0xE900000000000079 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C15FE5C0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void sub_1C0DCBDCC(uint64_t a1)
{
}

uint64_t sub_1C0DCBE00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0DCBE4C()
{
  sub_1C0DCC314();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C15A89B0;
  uint64_t v1 = (void *)*MEMORY[0x1E4FB2C90];
  BOOL v2 = (void *)*MEMORY[0x1E4FB2CD0];
  *(void *)(v0 + 32) = *MEMORY[0x1E4FB2C90];
  *(void *)(v0 + 40) = v2;
  int v3 = (void *)*MEMORY[0x1E4FB2CC8];
  uint64_t v4 = (void *)*MEMORY[0x1E4FB2DF0];
  *(void *)(v0 + 48) = *MEMORY[0x1E4FB2CC8];
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = (void *)*MEMORY[0x1E4FB2DF8];
  char v6 = (void *)*MEMORY[0x1E4FB2CF8];
  *(void *)(v0 + 64) = *MEMORY[0x1E4FB2DF8];
  *(void *)(v0 + 72) = v6;
  uint64_t v7 = (void *)*MEMORY[0x1E4FB2C80];
  uint64_t v8 = (void *)*MEMORY[0x1E4FB2D30];
  *(void *)(v0 + 80) = *MEMORY[0x1E4FB2C80];
  *(void *)(v0 + 88) = v8;
  uint64_t v9 = (void *)*MEMORY[0x1E4FB2D58];
  uint64_t v10 = (void *)*MEMORY[0x1E4FB2D00];
  *(void *)(v0 + 96) = *MEMORY[0x1E4FB2D58];
  *(void *)(v0 + 104) = v10;
  uint64_t v74 = (void *)*MEMORY[0x1E4FB2D40];
  long long v76 = (void *)*MEMORY[0x1E4FB2D20];
  uint64_t v11 = *MEMORY[0x1E4FB2D20];
  *(void *)(v0 + 112) = *MEMORY[0x1E4FB2D40];
  *(void *)(v0 + 120) = v11;
  uint64_t v75 = (void *)*MEMORY[0x1E4FB2D28];
  uint64_t v78 = (void *)*MEMORY[0x1E4FB2CA8];
  uint64_t v12 = *MEMORY[0x1E4FB2CA8];
  *(void *)(v0 + 128) = *MEMORY[0x1E4FB2D28];
  *(void *)(v0 + 136) = v12;
  uint64_t v77 = (void *)*MEMORY[0x1E4FB2D38];
  uint64_t v80 = (void *)*MEMORY[0x1E4FB2CC0];
  uint64_t v13 = *MEMORY[0x1E4FB2CC0];
  *(void *)(v0 + 144) = *MEMORY[0x1E4FB2D38];
  *(void *)(v0 + 152) = v13;
  uint64_t v79 = (void *)*MEMORY[0x1E4FB2DE8];
  uint64_t v82 = (void *)*MEMORY[0x1E4FB2D90];
  uint64_t v14 = *MEMORY[0x1E4FB2D90];
  *(void *)(v0 + 160) = *MEMORY[0x1E4FB2DE8];
  *(void *)(v0 + 168) = v14;
  unint64_t v81 = (void *)*MEMORY[0x1E4FB2CD8];
  uint64_t v84 = (void *)*MEMORY[0x1E4FB2D48];
  uint64_t v15 = *MEMORY[0x1E4FB2D48];
  *(void *)(v0 + 176) = *MEMORY[0x1E4FB2CD8];
  *(void *)(v0 + 184) = v15;
  uint64_t v83 = (void *)*MEMORY[0x1E4FB2D60];
  uint64_t v86 = (void *)*MEMORY[0x1E4FB2DC8];
  uint64_t v16 = *MEMORY[0x1E4FB2DC8];
  *(void *)(v0 + 192) = *MEMORY[0x1E4FB2D60];
  *(void *)(v0 + 200) = v16;
  uint64_t v85 = (void *)*MEMORY[0x1E4FB2D78];
  uint64_t v88 = (void *)*MEMORY[0x1E4FB2D88];
  uint64_t v17 = *MEMORY[0x1E4FB2D88];
  *(void *)(v0 + 208) = *MEMORY[0x1E4FB2D78];
  *(void *)(v0 + 216) = v17;
  uint64_t v87 = (void *)*MEMORY[0x1E4FB2D80];
  uint64_t v90 = (void *)*MEMORY[0x1E4FB2DA0];
  uint64_t v18 = *MEMORY[0x1E4FB2DA0];
  *(void *)(v0 + 224) = *MEMORY[0x1E4FB2D80];
  *(void *)(v0 + 232) = v18;
  uint64_t v89 = (void *)*MEMORY[0x1E4FB2DA8];
  uint64_t v92 = (void *)*MEMORY[0x1E4FB2D98];
  uint64_t v19 = *MEMORY[0x1E4FB2D98];
  *(void *)(v0 + 240) = *MEMORY[0x1E4FB2DA8];
  *(void *)(v0 + 248) = v19;
  uint64_t v91 = (void *)*MEMORY[0x1E4FB2DE0];
  uint64_t v94 = (void *)*MEMORY[0x1E4FB2D70];
  uint64_t v20 = *MEMORY[0x1E4FB2D70];
  *(void *)(v0 + 256) = *MEMORY[0x1E4FB2DE0];
  *(void *)(v0 + 264) = v20;
  uint64_t v93 = (void *)*MEMORY[0x1E4FB2D10];
  uint64_t v96 = (void *)*MEMORY[0x1E4FB2D08];
  uint64_t v21 = *MEMORY[0x1E4FB2D08];
  *(void *)(v0 + 272) = *MEMORY[0x1E4FB2D10];
  *(void *)(v0 + 280) = v21;
  uint64_t v95 = (void *)*MEMORY[0x1E4FB2CE8];
  uint64_t v22 = *MEMORY[0x1E4FB2CE0];
  uint64_t v98 = (void *)*MEMORY[0x1E4FB2CE0];
  *(void *)(v0 + 288) = *MEMORY[0x1E4FB2CE8];
  *(void *)(v0 + 296) = v22;
  unint64_t v97 = (void *)*MEMORY[0x1E4FB2DC0];
  uint64_t v23 = *MEMORY[0x1E4FB2DB8];
  uint64_t v100 = (void *)*MEMORY[0x1E4FB2DB8];
  *(void *)(v0 + 304) = *MEMORY[0x1E4FB2DC0];
  *(void *)(v0 + 312) = v23;
  uint64_t v99 = (void *)*MEMORY[0x1E4FB2DD0];
  uint64_t v102 = (void *)*MEMORY[0x1E4FB2DB0];
  *(void *)(v0 + 320) = *MEMORY[0x1E4FB2DD0];
  *(void *)(v0 + 328) = v102;
  uint64_t v101 = (void *)*MEMORY[0x1E4FB2C98];
  uint64_t v24 = *MEMORY[0x1E4FB2E00];
  uint64_t v104 = (void *)*MEMORY[0x1E4FB2E00];
  *(void *)(v0 + 336) = *MEMORY[0x1E4FB2C98];
  *(void *)(v0 + 344) = v24;
  uint64_t v103 = (void *)*MEMORY[0x1E4FB2C88];
  uint64_t v25 = *MEMORY[0x1E4FB2DD8];
  uint64_t v106 = (void *)*MEMORY[0x1E4FB2DD8];
  *(void *)(v0 + 352) = *MEMORY[0x1E4FB2C88];
  *(void *)(v0 + 360) = v25;
  int v105 = (void *)*MEMORY[0x1E4FB2D68];
  uint64_t v108 = (void *)*MEMORY[0x1E4FB2CF0];
  *(void *)(v0 + 368) = *MEMORY[0x1E4FB2D68];
  *(void *)(v0 + 376) = v108;
  uint64_t v107 = (void *)*MEMORY[0x1E4FB2D18];
  uint64_t v26 = *MEMORY[0x1E4FB2CA0];
  uint64_t v109 = (void *)*MEMORY[0x1E4FB2CA0];
  *(void *)(v0 + 384) = *MEMORY[0x1E4FB2D18];
  *(void *)(v0 + 392) = v26;
  id v27 = v1;
  id v28 = v2;
  id v29 = v3;
  id v30 = v4;
  id v31 = v5;
  id v32 = v6;
  id v33 = v7;
  id v34 = v8;
  id v35 = v9;
  id v36 = v10;
  id v37 = v74;
  id v38 = v76;
  id v39 = v75;
  id v40 = v78;
  id v41 = v77;
  id v42 = v80;
  id v43 = v79;
  id v44 = v82;
  id v45 = v81;
  id v46 = v84;
  id v47 = v83;
  id v48 = v86;
  id v49 = v85;
  id v50 = v88;
  id v51 = v87;
  id v52 = v90;
  id v53 = v89;
  id v54 = v92;
  id v55 = v91;
  id v56 = v94;
  id v57 = v93;
  id v58 = v96;
  id v59 = v95;
  id v60 = v98;
  id v61 = v97;
  id v62 = v100;
  id v63 = v99;
  id v64 = v102;
  id v65 = v101;
  id v66 = v104;
  id v67 = v103;
  id v68 = v106;
  id v69 = v105;
  id v70 = v108;
  id v71 = v107;
  id v72 = v109;
  return v0;
}

void sub_1C0DCC314()
{
  if (!qword_1EB861498)
  {
    type metadata accessor for Identifier(255);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB861498);
    }
  }
}

uint64_t sub_1C0DCC36C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)result;
  uint64_t v4 = *(void *)(result + 8);
  char v5 = 0x80;
  switch(*(unsigned char *)(result + 16))
  {
    case 1:
      char v5 = -96;
      break;
    case 2:
      char v5 = -64;
      break;
    case 3:
      char v5 = -32;
      break;
    case 4:
      char v5 = -63;
      break;
    case 5:
      char v5 = -31;
      break;
    case 6:
      int64_t v6 = *(void *)(v3 + 16);
      uint64_t v7 = MEMORY[0x1E4FBC860];
      if (v6)
      {
        uint64_t v37 = *(void *)(result + 8);
        uint64_t v39 = MEMORY[0x1E4FBC860];
        sub_1BFF661B8(0, v6, 0);
        uint64_t v7 = v39;
        uint64_t v8 = (uint64_t *)(v3 + 40);
        do
        {
          uint64_t v10 = *(v8 - 1);
          uint64_t v9 = *v8;
          unint64_t v12 = *(void *)(v39 + 16);
          unint64_t v11 = *(void *)(v39 + 24);
          swift_bridgeObjectRetain();
          if (v12 >= v11 >> 1) {
            sub_1BFF661B8(v11 > 1, v12 + 1, 1);
          }
          v8 += 2;
          *(void *)(v39 + 16) = v12 + 1;
          unint64_t v13 = v39 + 16 * v12;
          *(void *)(v13 + 32) = v10;
          *(void *)(v13 + 40) = v9;
          --v6;
        }
        while (v6);
        uint64_t v4 = v37;
      }
      uint64_t v36 = sub_1BFEF4060(v7);
      swift_bridgeObjectRelease();
      unint64_t result = sub_1C05DD590(v3, v4, 6u);
      char v5 = 64;
      goto LABEL_36;
    case 7:
      int64_t v14 = *(void *)(v3 + 16);
      uint64_t v15 = MEMORY[0x1E4FBC860];
      if (v14)
      {
        uint64_t v38 = *(void *)(result + 8);
        uint64_t v40 = MEMORY[0x1E4FBC860];
        sub_1BFF661B8(0, v14, 0);
        uint64_t v15 = v40;
        uint64_t v16 = (uint64_t *)(v3 + 40);
        do
        {
          uint64_t v18 = *(v16 - 1);
          uint64_t v17 = *v16;
          unint64_t v20 = *(void *)(v40 + 16);
          unint64_t v19 = *(void *)(v40 + 24);
          swift_bridgeObjectRetain();
          if (v20 >= v19 >> 1) {
            sub_1BFF661B8(v19 > 1, v20 + 1, 1);
          }
          v16 += 2;
          *(void *)(v40 + 16) = v20 + 1;
          unint64_t v21 = v40 + 16 * v20;
          *(void *)(v21 + 32) = v18;
          *(void *)(v21 + 40) = v17;
          --v14;
        }
        while (v14);
        uint64_t v4 = v38;
      }
      uint64_t v36 = sub_1BFEF4060(v15);
      swift_bridgeObjectRelease();
      unint64_t result = sub_1C05DD590(v3, v4, 7u);
      char v5 = 96;
      goto LABEL_36;
    case 8:
      int64_t v22 = *(void *)(v3 + 16);
      uint64_t v23 = MEMORY[0x1E4FBC860];
      if (v22)
      {
        uint64_t v41 = MEMORY[0x1E4FBC860];
        sub_1C05F6AF4(0, v22, 0);
        uint64_t v23 = v41;
        uint64_t v24 = (char *)(v3 + 32);
        do
        {
          uint64_t v25 = *v24++;
          uint64_t v26 = qword_1C15A8AC0[v25];
          unint64_t v28 = *(void *)(v41 + 16);
          unint64_t v27 = *(void *)(v41 + 24);
          if (v28 >= v27 >> 1) {
            sub_1C05F6AF4(v27 > 1, v28 + 1, 1);
          }
          *(void *)(v41 + 16) = v28 + 1;
          *(void *)(v41 + 8 * v28 + 32) = v26;
          --v22;
        }
        while (v22);
      }
      uint64_t v36 = sub_1C0605898(v23);
      swift_bridgeObjectRelease();
      unint64_t result = sub_1C05DD590(v3, v4, 8u);
      char v5 = 0;
      goto LABEL_36;
    case 9:
      int64_t v29 = *(void *)(v3 + 16);
      uint64_t v30 = MEMORY[0x1E4FBC860];
      if (v29)
      {
        uint64_t v42 = MEMORY[0x1E4FBC860];
        sub_1C05F6AF4(0, v29, 0);
        uint64_t v30 = v42;
        id v31 = (char *)(v3 + 32);
        do
        {
          uint64_t v32 = *v31++;
          uint64_t v33 = qword_1C15A8AC0[v32];
          unint64_t v35 = *(void *)(v42 + 16);
          unint64_t v34 = *(void *)(v42 + 24);
          if (v35 >= v34 >> 1) {
            sub_1C05F6AF4(v34 > 1, v35 + 1, 1);
          }
          *(void *)(v42 + 16) = v35 + 1;
          *(void *)(v42 + 8 * v35 + 32) = v33;
          --v29;
        }
        while (v29);
      }
      uint64_t v36 = sub_1C0605898(v30);
      swift_bridgeObjectRelease();
      unint64_t result = sub_1C05DD590(v3, v4, 9u);
      char v5 = 32;
LABEL_36:
      uint64_t v3 = v36;
      break;
    case 0xA:
    case 0xB:
    case 0xC:
      unint64_t result = sub_1C05DD590(*(void *)result, v4, *(unsigned char *)(result + 16));
      uint64_t v3 = 0;
      char v5 = -2;
      break;
    default:
      break;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1C0DCC74C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupRequirement.init(from:)(a1, a2);
}

uint64_t sub_1C0DCC764(void *a1)
{
  return FormatGroupRequirement.encode(to:)(a1);
}

uint64_t _s8NewsFeed22FormatGroupRequirementO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(uint64_t *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1u:
      if (v7 != 1) {
        goto LABEL_34;
      }
      sub_1C05DD590(*(void *)a1, v2, 1u);
      sub_1C05DD590(v6, v5, 1u);
      char v13 = *(double *)&v3 == *(double *)&v6;
      return v13 & 1;
    case 2u:
      if (v7 != 2) {
        goto LABEL_34;
      }
      double v8 = *(double *)a1;
      double v9 = *(double *)a2;
      sub_1C05DD590(*(void *)a1, v2, 2u);
      uint64_t v10 = v6;
      uint64_t v11 = v5;
      unsigned __int8 v12 = 2;
      goto LABEL_22;
    case 3u:
      if (v7 != 3) {
        goto LABEL_34;
      }
      double v8 = *(double *)a1;
      double v9 = *(double *)a2;
      sub_1C05DD590(*(void *)a1, v2, 3u);
      uint64_t v10 = v6;
      uint64_t v11 = v5;
      unsigned __int8 v12 = 3;
      goto LABEL_22;
    case 4u:
      if (v7 != 4) {
        goto LABEL_34;
      }
      double v8 = *(double *)a1;
      double v9 = *(double *)a2;
      sub_1C05DD590(*(void *)a1, v2, 4u);
      uint64_t v10 = v6;
      uint64_t v11 = v5;
      unsigned __int8 v12 = 4;
      goto LABEL_22;
    case 5u:
      if (v7 != 5) {
        goto LABEL_34;
      }
      double v8 = *(double *)a1;
      double v9 = *(double *)a2;
      sub_1C05DD590(*(void *)a1, v2, 5u);
      uint64_t v10 = v6;
      uint64_t v11 = v5;
      unsigned __int8 v12 = 5;
      goto LABEL_22;
    case 6u:
      if (v7 != 6) {
        goto LABEL_33;
      }
      char v13 = sub_1C00E2E68(v3, *(void *)a2);
      sub_1C01A128C(v6, v5, 6u);
      sub_1C01A128C(v3, v2, 6u);
      sub_1C05DD590(v3, v2, 6u);
      sub_1C05DD590(v6, v5, 6u);
      return v13 & 1;
    case 7u:
      if (v7 != 7) {
        goto LABEL_33;
      }
      char v13 = sub_1C00E2E68(v3, *(void *)a2);
      sub_1C01A128C(v6, v5, 7u);
      sub_1C01A128C(v3, v2, 7u);
      sub_1C05DD590(v3, v2, 7u);
      sub_1C05DD590(v6, v5, 7u);
      return v13 & 1;
    case 8u:
      if (v7 != 8) {
        goto LABEL_33;
      }
      sub_1C01A128C(*(void *)a2, *(void *)(a2 + 8), 8u);
      sub_1C01A128C(v3, v2, 8u);
      char v13 = sub_1C00E2EF0(v3, v6);
      sub_1C05DD590(v3, v2, 8u);
      sub_1C05DD590(v6, v5, 8u);
      return v13 & 1;
    case 9u:
      if (v7 != 9) {
        goto LABEL_33;
      }
      sub_1C01A128C(*(void *)a2, *(void *)(a2 + 8), 9u);
      sub_1C01A128C(v3, v2, 9u);
      char v13 = sub_1C00E2EF0(v3, v6);
      sub_1C05DD590(v3, v2, 9u);
      sub_1C05DD590(v6, v5, 9u);
      return v13 & 1;
    case 0xAu:
      if (v7 != 10) {
        goto LABEL_33;
      }
      sub_1C01A128C(*(void *)a2, *(void *)(a2 + 8), 0xAu);
      sub_1C01A128C(v3, v2, 0xAu);
      char v13 = sub_1C00E3018(v3, v6);
      sub_1C05DD590(v3, v2, 0xAu);
      sub_1C05DD590(v6, v5, 0xAu);
      return v13 & 1;
    case 0xBu:
      if (v7 != 11) {
        goto LABEL_33;
      }
      sub_1C01A128C(*(void *)a2, *(void *)(a2 + 8), 0xBu);
      sub_1C01A128C(v3, v2, 0xBu);
      char v13 = sub_1C00E3018(v3, v6);
      sub_1C05DD590(v3, v2, 0xBu);
      sub_1C05DD590(v6, v5, 0xBu);
      return v13 & 1;
    case 0xCu:
      if (v7 == 12)
      {
        if (v3 == v6 && v2 == v5) {
          char v13 = 1;
        }
        else {
          char v13 = sub_1C1520A9C();
        }
        sub_1C01A128C(v6, v5, 0xCu);
        sub_1C01A128C(v3, v2, 0xCu);
        sub_1C05DD590(v3, v2, 0xCu);
        sub_1C05DD590(v6, v5, 0xCu);
      }
      else
      {
LABEL_33:
        swift_bridgeObjectRetain();
LABEL_34:
        sub_1C01A128C(v6, v5, v7);
        sub_1C05DD590(v3, v2, v4);
        sub_1C05DD590(v6, v5, v7);
        char v13 = 0;
      }
      break;
    default:
      if (*(unsigned char *)(a2 + 16)) {
        goto LABEL_34;
      }
      double v8 = *(double *)a1;
      double v9 = *(double *)a2;
      sub_1C05DD590(*(void *)a1, v2, 0);
      uint64_t v10 = v6;
      uint64_t v11 = v5;
      unsigned __int8 v12 = 0;
LABEL_22:
      sub_1C05DD590(v10, v11, v12);
      char v13 = v8 == v9;
      break;
  }
  return v13 & 1;
}

unint64_t sub_1C0DCCC54(uint64_t a1)
{
  unint64_t result = sub_1C0DCCC7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DCCC7C()
{
  unint64_t result = qword_1EA1A73A0;
  if (!qword_1EA1A73A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A73A0);
  }
  return result;
}

unint64_t sub_1C0DCCCD0(void *a1)
{
  a1[1] = sub_1C00743E8();
  a1[2] = sub_1C007443C();
  unint64_t result = sub_1C0DCCD08();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DCCD08()
{
  unint64_t result = qword_1EA1A73A8;
  if (!qword_1EA1A73A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A73A8);
  }
  return result;
}

uint64_t destroy for FormatGroupRequirement(uint64_t a1)
{
  return sub_1C05DD590(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed22FormatGroupRequirementOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C01A128C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatGroupRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C01A128C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C05DD590(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatGroupRequirement(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C05DD590(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatGroupRequirement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF4 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 244);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0xC) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatGroupRequirement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF3)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 244;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF4) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF4) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupRequirement()
{
  return &type metadata for FormatGroupRequirement;
}

uint64_t sub_1C0DCCEF8@<X0>(uint64_t (*a1)(void *)@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v25 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v26 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v29 = (v6 - 1) & v6;
  int64_t v31 = v8;
  for (unint64_t i = __clz(__rbit64(v6)) | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v11 << 6))
  {
    int64_t v14 = (uint64_t *)(*(void *)(a2 + 56) + (i << 6));
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = v14[2];
    uint64_t v18 = v14[3];
    uint64_t v20 = v14[4];
    uint64_t v19 = v14[5];
    uint64_t v22 = v14[6];
    uint64_t v21 = v14[7];
    v30[0] = *v14;
    v30[1] = v16;
    v30[2] = v17;
    v30[3] = v18;
    v30[4] = v20;
    v30[5] = v19;
    v30[6] = v22;
    v30[7] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v23 = a1(v30);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (v23)
    {
      uint64_t result = swift_release();
      *a3 = v15;
      a3[1] = v16;
      a3[2] = v17;
      a3[3] = v18;
      a3[4] = v20;
      a3[5] = v19;
      a3[6] = v22;
      a3[7] = v21;
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v8 = v31;
    unint64_t v6 = v29;
    if (v29) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v10 = __OFADD__(v8, 1);
    int64_t v11 = v8 + 1;
    if (v10)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v11 >= v26) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v25 + 8 * v11);
    if (!v12) {
      break;
    }
LABEL_17:
    uint64_t v29 = (v12 - 1) & v12;
    int64_t v31 = v11;
  }
  int64_t v13 = v11 + 1;
  if (v11 + 1 >= v26) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v25 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v11 + 2;
  if (v11 + 2 >= v26) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v25 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v11 + 3;
  if (v11 + 3 >= v26) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v25 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v11 + 4;
  if (v11 + 4 >= v26)
  {
LABEL_28:
    uint64_t result = swift_release();
    *((_OWORD *)a3 + 2) = 0u;
    *((_OWORD *)a3 + 3) = 0u;
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
    return result;
  }
  unint64_t v12 = *(void *)(v25 + 8 * v13);
  if (v12)
  {
LABEL_16:
    int64_t v11 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v25 + 8 * v11);
    ++v13;
    if (v12) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C0DCD1E4(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  unint64_t v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_1C0D92A20, v8);
  swift_release();
  swift_release();
}

uint64_t sub_1C0DCD4FC()
{
  return type metadata accessor for DebugInspectViewController();
}

uint64_t type metadata accessor for DebugInspectViewController()
{
  uint64_t result = qword_1EA1A7428;
  if (!qword_1EA1A7428) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0DCD550()
{
  uint64_t result = type metadata accessor for DebugGroupLayoutKey();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DebugInspectViewResult();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

void sub_1C0DCD66C()
{
  v29.receiver = v0;
  v29.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v29, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_navigationItem);
  uint64_t v28 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource];
  swift_bridgeObjectRetain();
  unint64_t v2 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v2);

  id v3 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v3, sel_setLeftItemsSupplementBackButton_, 1);

  id v4 = objc_msgSend(v0, sel_navigationItem);
  sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C15320E0;
  unint64_t v6 = (void *)sub_1C151E5EC();
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_systemImageNamed_, v6);

  if (!v8)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v10 = v0;
  id v11 = objc_msgSend(v9, sel_initWithImage_style_target_action_, v8, 0, v10, sel_doTapToRadar);

  *(void *)(v5 + 32) = v11;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  unint64_t v12 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setLeftBarButtonItems_, v12);

  id v13 = objc_msgSend(v10, sel_navigationItem);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C15320E0;
  uint64_t v15 = (void *)sub_1C151E5EC();
  id v16 = objc_msgSend(v7, sel_systemImageNamed_, v15);

  if (!v16)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v17 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  uint64_t v18 = v10;
  id v19 = objc_msgSend(v17, sel_initWithImage_style_target_action_, v16, 2, v18, sel_doDismiss);

  *(void *)(v14 + 32) = v19;
  sub_1C151EBEC();
  uint64_t v20 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setRightBarButtonItems_, v20);

  id v21 = objc_msgSend(v18, sel_view);
  if (v21)
  {
    uint64_t v22 = v21;
    char v23 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView];
    objc_msgSend(v21, sel_addSubview_, v23);

    objc_msgSend(v23, sel_setDelegate_, v18);
    objc_msgSend(v23, sel_setDataSource_, v18);
    objc_msgSend(v23, sel_setAlwaysBounceVertical_, 1);
    type metadata accessor for FeedItemTableViewCell();
    sub_1C151F26C();
    type metadata accessor for RequirementTableViewCell();
    sub_1C151F26C();
    type metadata accessor for KeyValueTableViewCell();
    sub_1C151F26C();
    type metadata accessor for LayoutTableViewCell();
    sub_1C151F26C();
    type metadata accessor for LoadingTableViewCell();
    sub_1C151F26C();
    sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
    sub_1C151F26C();
    type metadata accessor for SubtitleTableViewCell();
    sub_1C151F26C();
    uint64_t v24 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_searchController];
    objc_msgSend(v24, sel_setSearchResultsUpdater_, v18);
    objc_msgSend(v24, sel_setHidesNavigationBarDuringPresentation_, 0);
    objc_msgSend(v24, sel_setObscuresBackgroundDuringPresentation_, 0);
    id v25 = objc_msgSend(v24, sel_searchBar);
    int64_t v26 = (void *)sub_1C151E5EC();
    objc_msgSend(v25, sel_setPlaceholder_, v26);

    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1C066A674(v28, v27);
    swift_release();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1C0DCDBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    uint64_t v5 = (char *)v4;
    uint64_t v6 = OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inspector;
    uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inspector);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C0F771D4(v7, a1);
    swift_release();
    *(void *)&v5[v6] = v8;
    swift_release();
    id v9 = objc_msgSend(v5, sel_navigationItem);
    objc_msgSend(v9, sel_setSearchController_, *(void *)&v5[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_searchController]);

    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView], sel_reloadData);
  }
}

id sub_1C0DCDD1C()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DD9B94((uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_result], (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C066A140();

    uint64_t v6 = 0;
LABEL_6:
    sub_1C0DD9BFC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    return v6;
  }
  sub_1C066A1C4();
  uint64_t v8 = &v4[*(int *)(v7 + 48)];
  uint64_t v33 = *((void *)v8 + 6);
  long long v9 = *((_OWORD *)v8 + 1);
  v32[0] = *(_OWORD *)v8;
  v32[1] = v9;
  v32[2] = *((_OWORD *)v8 + 2);
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_factory], *(void *)&v0[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_factory + 24]);
  type metadata accessor for DebugGroupLayoutKey();
  sub_1C151766C();
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  uint64_t v18 = (void *)sub_1C151769C();
  uint64_t v6 = (void *)sub_1C14B71F4((uint64_t)v32, MEMORY[0x1E4FBC860], 0, v18, v11, v13, v15, v17);

  sub_1BFE9E600((uint64_t)v32);
  objc_msgSend(v6, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v6, sel_bounds);
  if (CGRectGetWidth(v34) <= 0.0) {
    goto LABEL_6;
  }
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v20 = result;
    objc_msgSend(result, sel_bounds);
    CGFloat v22 = v21;
    CGFloat v24 = v23;
    CGFloat v26 = v25;
    CGFloat v28 = v27;

    v35.origin.x = v22;
    v35.origin.y = v24;
    v35.size.width = v26;
    v35.size.height = v28;
    double Width = CGRectGetWidth(v35);
    objc_msgSend(v6, sel_bounds);
    CGFloat v30 = fmin(Width / CGRectGetWidth(v36), 1.0);
    CGAffineTransformMakeScale(&v31, v30, v30);
    objc_msgSend(v6, sel_setTransform_, &v31);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_1C0DCE128()
{
  id v1 = v0;
  swift_getObjectType();
  id v2 = objc_msgSend(v0, sel_navigationItem);
  sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320E0;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_init);
  objc_msgSend(v4, sel_sizeToFit);
  objc_msgSend(v4, sel_startAnimating);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, v4);

  *(void *)(v3 + 32) = v5;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  uint64_t v6 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setLeftBarButtonItems_, v6);

  sub_1C151932C();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t v7 = (void *)sub_1C151F56C();
  *(void *)(swift_allocObject() + 16) = v1;
  id v8 = v1;
  sub_1C151901C();
  swift_release();

  swift_release();
  long long v9 = (void *)sub_1C151F56C();
  sub_1C151904C();
  swift_release();
  swift_release();
}

void sub_1C0DCE3A4(uint64_t a1, void *a2, char *a3)
{
  uint64_t v177 = a3;
  uint64_t v163 = sub_1C151AC0C();
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x1F4188790](v163);
  uint64_t v164 = (char *)v159 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0DD9298(0, (unint64_t *)&unk_1EB893810, MEMORY[0x1E4FABF68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)v159 - v8;
  sub_1C0DD9298(0, &qword_1EA1AF1D0, MEMORY[0x1E4FAD738], v6);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v165 = (char *)v159 - v11;
  uint64_t v182 = *(void (**)(void))a1;
  uint64_t v161 = *(void *)(a1 + 8);
  uint64_t v174 = *(void *)(a1 + 16);
  uint64_t v167 = *(void *)(a1 + 24);
  uint64_t v168 = *(void *)(a1 + 32);
  uint64_t v169 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v170 = *(void *)(a1 + 48);
  uint64_t v171 = v12;
  double v13 = *(uint64_t **)(a1 + 72);
  uint64_t v172 = *(void *)(a1 + 64);
  BOOL v173 = v13;
  uint64_t v14 = *(void *)(a1 + 88);
  uint64_t v160 = *(char **)(a1 + 80);
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v179 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(a2, sel_navigationItem);
  sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C15320E0;
  double v17 = (void *)sub_1C151E5EC();
  id v18 = objc_msgSend(self, sel_systemImageNamed_, v17);

  if (v18)
  {
    id v19 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    uint64_t v20 = a2;
    id v21 = objc_msgSend(v19, sel_initWithImage_style_target_action_, v18, 0, v20, sel_doTapToRadar);

    *(void *)(v16 + 32) = v21;
    uint64_t v180 = v16;
    sub_1C151EBEC();
    sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
    CGFloat v22 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setLeftBarButtonItems_, v22);

    uint64_t v23 = *(void *)&v20[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter + 8];
    v159[4] = *(void *)&v20[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter];
    v159[5] = v23;
    v159[3] = swift_getObjectType();
    sub_1C151CA1C();
    v159[1] = sub_1C151C9CC();
    uint64_t v24 = sub_1C151A5FC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
    sub_1C0DD9298(0, (unint64_t *)&unk_1EB8945A0, MEMORY[0x1E4FAC148], MEMORY[0x1E4FBBE00]);
    uint64_t v175 = sub_1C151A95C();
    uint64_t v25 = *(void *)(v175 - 8);
    unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v178 = *(void *)(v25 + 72);
    uint64_t v27 = swift_allocObject();
    v159[2] = v27;
    *(_OWORD *)(v27 + 16) = xmmword_1C152E280;
    unint64_t v176 = (void *)(v27 + v26);
    CGFloat v28 = (void *)swift_allocObject();
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
    CGFloat v30 = (void *)(v29 + v26);
    CGAffineTransform v31 = (void *)swift_allocObject();
    v31[5] = &type metadata for DebugInspection;
    v31[6] = sub_1C0DD9A20();
    uint64_t v32 = (void *)swift_allocObject();
    void v31[2] = v32;
    uint64_t v33 = v161;
    v32[2] = v182;
    _OWORD v32[3] = v33;
    uint64_t v34 = v167;
    uint64_t v32[4] = v174;
    v32[5] = v34;
    uint64_t v35 = v169;
    v32[6] = v168;
    void v32[7] = v35;
    uint64_t v36 = v171;
    _OWORD v32[8] = v170;
    v32[9] = v36;
    uint64_t v37 = v173;
    v32[10] = v172;
    v32[11] = v37;
    uint64_t v38 = v179;
    v32[12] = v160;
    v32[13] = v38;
    uint64_t v160 = v9;
    _OWORD v31[7] = 0xD000000000000015;
    v31[8] = 0x80000001C1628640;
    *CGFloat v30 = v31;
    uint64_t v39 = *(void (**)(void))(v25 + 104);
    uint64_t v40 = v30;
    uint64_t v41 = v175;
    ((void (*)(void *, void, uint64_t))v39)(v40, *MEMORY[0x1E4FAC128], v175);
    uint64_t v182 = v39;
    void v28[2] = v29;
    v28[3] = 0xD000000000000015;
    v28[4] = 0x80000001C1628640;
    uint64_t v42 = v176;
    void *v176 = v28;
    ((void (*)(void *, void, uint64_t))v39)(v42, *MEMORY[0x1E4FAC138], v41);
    uint64_t v174 = v25 + 104;
    uint64_t v43 = v178;
    id v44 = (void *)((char *)v42 + v178);
    uint64_t v45 = swift_allocObject();
    id v46 = *(char **)&v177[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_cloudContext];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v177 = v46;
    id v47 = objc_msgSend(v46, sel_privateDataDirectory);
    uint64_t v48 = sub_1C151E62C();
    unint64_t v50 = v49;

    uint64_t v180 = v48;
    unint64_t v181 = v50;
    sub_1C151E80C();
    unint64_t v51 = v181;
    *(void *)(v45 + 16) = v180;
    *(void *)(v45 + 24) = v51;
    *id v44 = v45;
    LODWORD(v179) = *MEMORY[0x1E4FAC140];
    id v52 = v44;
    uint64_t v53 = v175;
    id v54 = (void (*)(uint64_t *, void, uint64_t))v182;
    v182(v52);
    BOOL v173 = (uint64_t *)(2 * v43);
    id v55 = v176;
    id v56 = (void *)((char *)v176 + 2 * v43);
    uint64_t v57 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v58 = objc_msgSend(v46, sel_privateDataDirectory);
    uint64_t v59 = sub_1C151E62C();
    unint64_t v61 = v60;
    swift_bridgeObjectRelease();

    uint64_t v180 = v59;
    unint64_t v181 = v61;
    sub_1C151E80C();
    unint64_t v62 = v181;
    *(void *)(v57 + 16) = v180;
    *(void *)(v57 + 24) = v62;
    *id v56 = v57;
    v54(v56, v179, v53);
    id v63 = (uint64_t *)((char *)v173 + v178 + (void)v55);
    uint64_t v64 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v65 = objc_msgSend(v177, sel_privateDataDirectory);
    uint64_t v66 = sub_1C151E62C();
    unint64_t v68 = v67;
    swift_bridgeObjectRelease();

    uint64_t v180 = v66;
    unint64_t v181 = v68;
    sub_1C151E80C();
    unint64_t v69 = v181;
    *(void *)(v64 + 16) = v180;
    *(void *)(v64 + 24) = v69;
    uint64_t *v63 = v64;
    uint64_t v70 = v175;
    ((void (*)(uint64_t *, void, uint64_t))v182)(v63, v179, v175);
    uint64_t v71 = v178;
    BOOL v173 = (uint64_t *)(4 * v178);
    id v72 = v176;
    uint64_t v73 = (void *)((char *)v176 + 4 * v178);
    uint64_t v74 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v75 = objc_msgSend(v177, sel_privateDataDirectory);
    uint64_t v76 = sub_1C151E62C();
    unint64_t v78 = v77;
    swift_bridgeObjectRelease();

    uint64_t v180 = v76;
    unint64_t v181 = v78;
    sub_1C151E80C();
    unint64_t v79 = v181;
    *(void *)(v74 + 16) = v180;
    *(void *)(v74 + 24) = v79;
    uint64_t *v73 = v74;
    uint64_t v80 = v179;
    ((void (*)(char *, void, uint64_t))v182)((char *)v72 + 4 * v71, v179, v70);
    unint64_t v81 = (uint64_t *)((char *)v173 + v71 + (void)v72);
    uint64_t v82 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v83 = v177;
    id v84 = objc_msgSend(v177, sel_privateDataDirectory);
    uint64_t v85 = sub_1C151E62C();
    unint64_t v87 = v86;
    swift_bridgeObjectRelease();

    uint64_t v180 = v85;
    unint64_t v181 = v87;
    sub_1C151E80C();
    unint64_t v88 = v181;
    *(void *)(v82 + 16) = v180;
    *(void *)(v82 + 24) = v88;
    uint64_t *v81 = v82;
    uint64_t v89 = v81;
    uint64_t v90 = (void (*)(void))v182;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v182)(v89, v80, v175);
    BOOL v173 = (void *)((char *)v176 + 6 * v178);
    uint64_t v91 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v92 = objc_msgSend(v83, sel_privateDataDirectory);
    uint64_t v93 = sub_1C151E62C();
    unint64_t v95 = v94;
    swift_bridgeObjectRelease();

    uint64_t v180 = v93;
    unint64_t v181 = v95;
    sub_1C151E80C();
    unint64_t v96 = v181;
    *(void *)(v91 + 16) = v180;
    *(void *)(v91 + 24) = v96;
    *BOOL v173 = v91;
    v90();
    BOOL v173 = (uint64_t *)(8 * v178);
    unint64_t v97 = v176;
    uint64_t v98 = (void *)((char *)v176 + 7 * v178);
    uint64_t v99 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v100 = v177;
    id v101 = objc_msgSend(v177, sel_privateDataDirectory);
    uint64_t v102 = sub_1C151E62C();
    unint64_t v104 = v103;
    swift_bridgeObjectRelease();

    uint64_t v180 = v102;
    unint64_t v181 = v104;
    sub_1C151E80C();
    unint64_t v105 = v181;
    *(void *)(v99 + 16) = v180;
    *(void *)(v99 + 24) = v105;
    *uint64_t v98 = v99;
    uint64_t v106 = v98;
    uint64_t v107 = v175;
    ((void (*)(uint64_t *, void, uint64_t))v182)(v106, v179, v175);
    uint64_t v108 = (uint64_t *)((char *)v173 + (void)v97);
    uint64_t v109 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v110 = objc_msgSend(v100, sel_privateDataDirectory);
    uint64_t v111 = sub_1C151E62C();
    unint64_t v113 = v112;
    swift_bridgeObjectRelease();

    uint64_t v180 = v111;
    unint64_t v181 = v113;
    sub_1C151E80C();
    unint64_t v114 = v181;
    *(void *)(v109 + 16) = v180;
    *(void *)(v109 + 24) = v114;
    uint64_t *v108 = v109;
    uint64_t v115 = v108;
    uint64_t v116 = v179;
    ((void (*)(uint64_t *, void, uint64_t))v182)(v115, v179, v107);
    uint64_t v117 = v178;
    uint64_t v118 = v176;
    int v119 = (uint64_t *)((char *)v173 + v178 + (void)v176);
    uint64_t v120 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v121 = objc_msgSend(v177, sel_privateDataDirectory);
    uint64_t v122 = sub_1C151E62C();
    unint64_t v124 = v123;
    swift_bridgeObjectRelease();

    uint64_t v180 = v122;
    unint64_t v181 = v124;
    sub_1C151E80C();
    unint64_t v125 = v181;
    *(void *)(v120 + 16) = v180;
    *(void *)(v120 + 24) = v125;
    *int v119 = v120;
    char v126 = v119;
    uint64_t v127 = v116;
    uint64_t v128 = v175;
    uint64_t v129 = (void (*)(uint64_t *, void, uint64_t))v182;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v182)(v126, v127, v175);
    uint64_t v130 = (void *)((char *)v118 + 10 * v117);
    uint64_t v131 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v132 = v177;
    id v133 = objc_msgSend(v177, sel_privateDataDirectory);
    uint64_t v134 = sub_1C151E62C();
    unint64_t v136 = v135;
    swift_bridgeObjectRelease();

    uint64_t v180 = v134;
    unint64_t v181 = v136;
    sub_1C151E80C();
    unint64_t v137 = v181;
    *(void *)(v131 + 16) = v180;
    *(void *)(v131 + 24) = v137;
    *uint64_t v130 = v131;
    uint64_t v138 = v130;
    uint64_t v139 = v179;
    v129(v138, v179, v128);
    uint64_t v140 = v176;
    uint64_t v141 = (void *)((char *)v176 + 11 * v178);
    uint64_t v142 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v143 = objc_msgSend(v132, sel_contentDirectory);
    uint64_t v144 = sub_1C151E62C();
    unint64_t v146 = v145;
    swift_bridgeObjectRelease();

    uint64_t v180 = v144;
    unint64_t v181 = v146;
    sub_1C151E80C();
    unint64_t v147 = v181;
    *(void *)(v142 + 16) = v180;
    *(void *)(v142 + 24) = v147;
    uint64_t *v141 = v142;
    uint64_t v148 = v175;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v182)(v141, v139, v175);
    unint64_t v149 = (void *)((char *)v140 + 12 * v178);
    uint64_t v150 = swift_allocObject();
    uint64_t v180 = 0;
    unint64_t v181 = 0xE000000000000000;
    sub_1C15200FC();
    id v151 = objc_msgSend(v177, sel_contentDirectory);
    uint64_t v152 = sub_1C151E62C();
    unint64_t v154 = v153;
    swift_bridgeObjectRelease();

    uint64_t v180 = v152;
    unint64_t v181 = v154;
    sub_1C151E80C();
    unint64_t v155 = v181;
    *(void *)(v150 + 16) = v180;
    *(void *)(v150 + 24) = v155;
    *unint64_t v149 = v150;
    ((void (*)(uint64_t *, void, uint64_t))v182)(v149, v179, v148);
    (*(void (**)(char *, void, uint64_t))(v162 + 104))(v164, *MEMORY[0x1E4FAC1F8], v163);
    uint64_t v156 = (uint64_t)v165;
    sub_1C151C81C();
    uint64_t v157 = sub_1C151C82C();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v157 - 8) + 56))(v156, 0, 1, v157);
    long long v158 = v166;
    sub_1C151ADBC();
    if (v158)
    {
      swift_release();

      sub_1C0DD9B24(v156, &qword_1EA1AF1D0, MEMORY[0x1E4FAD738]);
    }
    else
    {
      sub_1C0DD9B24(v156, &qword_1EA1AF1D0, MEMORY[0x1E4FAD738]);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1C0DCF578(uint64_t a1, void *a2)
{
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EA2B5358;
  sub_1C151F36C();
  sub_1BFEE7E48(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = sub_1BFE9C558();
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0xE000000000000000;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  sub_1C152036C();
  id v4 = (void *)sub_1C151E5EC();
  uint64_t v5 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v4, v5, 1);

  uint64_t v7 = (void *)sub_1C151E5EC();
  id v8 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v7, 0, 0);

  objc_msgSend(v6, sel_addAction_, v8);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v6, 1, 0);
  id v9 = objc_msgSend(a2, sel_navigationItem);
  sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C15320E0;
  uint64_t v11 = (void *)sub_1C151E5EC();
  id v12 = objc_msgSend(self, sel_systemImageNamed_, v11);

  if (v12)
  {
    id v13 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v14 = a2;
    id v15 = objc_msgSend(v13, sel_initWithImage_style_target_action_, v12, 0, v14, sel_doTapToRadar);

    *(void *)(v10 + 32) = v15;
    sub_1C151EBEC();
    sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
    uint64_t v16 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setLeftBarButtonItems_, v16);
  }
  else
  {
    __break(1u);
  }
}

char *sub_1C0DCFAA0(char *a1)
{
  v475 = a1;
  sub_1BFEBC130();
  uint64_t v469 = *(v2 - 1);
  id v470 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v471 = (uint64_t)&v456 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v467 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v466 = (char *)&v456 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0DD9298(0, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v456 - v8;
  sub_1C0DD9298(0, &qword_1EA19B648, MEMORY[0x1E4FAD7D8], v6);
  MEMORY[0x1F4188790](v10 - 8);
  v473 = (char *)&v456 - v11;
  id v12 = (void *)sub_1C151E17C();
  v464 = (void *)*(v12 - 1);
  id v465 = v12;
  MEMORY[0x1F4188790](v12);
  v463 = (char *)&v456 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DebugInspectViewItem();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  double v17 = (char *)&v456 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v476 = (uint64_t)&v456 - v19;
  *(void *)&long long v472 = v1;
  uint64_t v20 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource);
  id v21 = (void *)((char *)v20 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  uint64_t v22 = *v21;
  swift_bridgeObjectRetain();
  unint64_t v23 = sub_1C151676C();
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_169;
  }
  if (v23 >= *(void *)(v22 + 16))
  {
LABEL_169:
    __break(1u);
    goto LABEL_170;
  }
  uint64_t v468 = v4;
  v474 = v20;
  uint64_t v24 = *(void *)(v22 + 48 * v23 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v25 = sub_1C151675C();
  if ((v25 & 0x8000000000000000) != 0)
  {
LABEL_170:
    __break(1u);
    goto LABEL_171;
  }
  if (v25 >= *(void *)(v24 + 16))
  {
LABEL_171:
    __break(1u);
    JUMPOUT(0x1C0DD3180);
  }
  uint64_t v26 = v476;
  sub_1C0DD9B94(v24+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v25, v476, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  swift_bridgeObjectRelease();
  sub_1C0DD9B94(v26, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v31 = v17[32];
      type metadata accessor for RequirementTableViewCell();
      uint64_t v32 = (void *)sub_1C151F24C();
      id v33 = objc_msgSend(v32, sel_textLabel);
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v35 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v34, sel_setText_, v35);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v141 = objc_msgSend(v32, sel_textLabel);
      if (v141)
      {
        uint64_t v142 = v141;
        objc_msgSend(v141, sel_setNumberOfLines_, 0);
      }
      objc_msgSend(v32, sel_setSelectionStyle_, 0);
      id v143 = self;
      uint64_t v27 = v32;
      id v144 = objc_msgSend(v143, sel_systemBlueColor);
      objc_msgSend(v27, sel_setTintColor_, v144);

      if (v31)
      {
        objc_msgSend(v27, sel_setAccessoryType_, 0);
        id v145 = objc_msgSend(v27, sel_detailTextLabel);
        if (v145)
        {
          unint64_t v146 = v145;
          id v147 = objc_msgSend(v143, sel_redColor);
          objc_msgSend(v146, sel_setTextColor_, v147);
        }
        id v148 = objc_msgSend(v27, sel_detailTextLabel);
        if (!v148) {
          goto LABEL_119;
        }
      }
      else
      {
        objc_msgSend(v27, sel_setAccessoryType_, 3);
        id v149 = objc_msgSend(v27, sel_detailTextLabel);
        if (v149)
        {
          uint64_t v150 = v149;
          id v151 = objc_msgSend(v143, sel_secondaryLabelColor);
          objc_msgSend(v150, sel_setTextColor_, v151);
        }
        id v148 = objc_msgSend(v27, sel_detailTextLabel);
        if (!v148) {
          goto LABEL_119;
        }
      }
      uint64_t v152 = v148;
      unint64_t v153 = (void *)sub_1C151E5EC();
      objc_msgSend(v152, sel_setText_, v153);

LABEL_119:
      sub_1C02F6038();
      goto LABEL_120;
    case 2u:
      sub_1BFC773DC((long long *)v17, (uint64_t)&v487);
      type metadata accessor for FeedItemTableViewCell();
      v475 = (char *)sub_1C151F24C();
      unsigned __int8 v480 = 1;
      uint64_t v36 = v472 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_key;
      uint64_t v37 = (void *)(v36 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
      uint64_t v38 = v37[4];
      uint64_t v39 = v37[5];
      __swift_project_boxed_opaque_existential_1(v37 + 1, v38);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v39 + 64))(&v477, v38, v39);
      uint64_t v40 = v478;
      uint64_t v41 = v474;
      if (v478)
      {
        uint64_t v42 = v479;
        __swift_project_boxed_opaque_existential_1(&v477, v478);
        uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 32))(v40, v42);
        if (v43)
        {
          uint64_t v44 = *(void *)(v43 + 32);
          swift_bridgeObjectRetain();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v477);
          goto LABEL_95;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v477);
      }
      else
      {
        sub_1C0358EDC((uint64_t)&v477, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
      }
      uint64_t v44 = MEMORY[0x1E4FBC870];
LABEL_95:
      *(void *)&long long v472 = v41 + 10;
      swift_beginAccess();
      uint64_t v224 = v41[10];
      uint64_t v225 = v488;
      uint64_t v226 = v489;
      __swift_project_boxed_opaque_existential_1(&v487, v488);
      uint64_t v227 = *(void *)(v226 + 8);
      uint64_t v228 = *(uint64_t (**)(uint64_t, uint64_t))(v227 + 8);
      swift_bridgeObjectRetain();
      uint64_t v229 = v228(v225, v227);
      LOBYTE(v225) = sub_1BFF896B4(v229, v230, v224);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFC66384((uint64_t)&v487, (uint64_t)v484);
      if (v225)
      {
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v484);
      }
      else
      {
        uint64_t v232 = v485;
        uint64_t v231 = v486;
        __swift_project_boxed_opaque_existential_1(v484, v485);
        uint64_t v233 = (*(uint64_t (**)(uint64_t))(*(void *)(v231 + 8) + 8))(v232);
        LOBYTE(v232) = sub_1BFF896B4(v233, v234, v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v484);
        if (v232)
        {
          unsigned __int8 v480 = 0;
          uint64_t v471 = 2;
          goto LABEL_100;
        }
      }
      uint64_t v471 = 0;
LABEL_100:
      uint64_t v235 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_init);
      uint64_t v236 = v37[9];
      MEMORY[0x1F4188790](v235);
      *(&v456 - 2) = (uint64_t)&v487;
      swift_bridgeObjectRetain();
      sub_1C0DCCEF8((uint64_t (*)(void *))sub_1C0DD9774, v236, &v477);
      swift_bridgeObjectRelease();
      uint64_t v237 = *((void *)&v477 + 1);
      v473 = v235;
      if (*((void *)&v477 + 1))
      {
        uint64_t v238 = v477;
        long long v481 = v477;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        uint64_t v235 = v473;
        sub_1C0DD9874(v238, v237);
        sub_1C0DD9298(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
        uint64_t v239 = swift_allocObject();
        BOOL v240 = (void **)MEMORY[0x1E4FB06F8];
        *(_OWORD *)(v239 + 16) = xmmword_1C1527210;
        uint64_t v241 = *v240;
        *(void *)(v239 + 32) = *v240;
        uint64_t v242 = self;
        double v243 = *MEMORY[0x1E4FB09D8];
        id v244 = v241;
        id v245 = objc_msgSend(v242, sel_systemFontOfSize_weight_, 12.0, v243);
        uint64_t v246 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
        *(void *)(v239 + 40) = v245;
        uint64_t v247 = (void *)*MEMORY[0x1E4FB0700];
        *(void *)(v239 + 64) = v246;
        *(void *)(v239 + 72) = v247;
        uint64_t v248 = self;
        id v249 = v247;
        id v250 = objc_msgSend(v248, sel_systemBlueColor);
        *(void *)(v239 + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
        *(void *)(v239 + 80) = v250;
        sub_1BFF991DC(v239);
        id v251 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        uint64_t v252 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1BFEBC394((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
        uint64_t v253 = (void *)sub_1C151E32C();
        swift_bridgeObjectRelease();
        id v254 = objc_msgSend(v251, sel_initWithString_attributes_, v252, v253);

        objc_msgSend(v235, sel_appendAttributedString_, v254);
        goto LABEL_132;
      }
      uint64_t v255 = v37[4];
      uint64_t v256 = v37[5];
      __swift_project_boxed_opaque_existential_1(v37 + 1, v255);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v256 + 64))(&v481, v255, v256);
      uint64_t v257 = v482;
      if (!v482)
      {
        sub_1C0358EDC((uint64_t)&v481, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
        goto LABEL_132;
      }
      uint64_t v258 = v483;
      __swift_project_boxed_opaque_existential_1(&v481, v482);
      uint64_t v259 = (*(uint64_t (**)(uint64_t, uint64_t))(v258 + 32))(v257, v258);
      if (!v259) {
        goto LABEL_131;
      }
      uint64_t v260 = *(void *)(v259 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      __swift_project_boxed_opaque_existential_1(&v487, v488);
      uint64_t v261 = sub_1C151811C();
      if (*(void *)(v260 + 16) && (unint64_t v263 = sub_1BFEF2D8C(v261, v262), (v264 & 1) != 0))
      {
        uint64_t v265 = *(void *)(*(void *)(v260 + 56) + 8 * v263);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v481);
        uint64_t v266 = *(void *)(v265 + 24);
        if (v266)
        {
          *(void *)&long long v481 = *(void *)(v265 + 16);
          *((void *)&v481 + 1) = v266;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          sub_1C0DD9298(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
          uint64_t v267 = swift_allocObject();
          long long v268 = (void **)MEMORY[0x1E4FB06F8];
          *(_OWORD *)(v267 + 16) = xmmword_1C1527210;
          long long v269 = *v268;
          *(void *)(v267 + 32) = *v268;
          long long v270 = self;
          double v271 = *MEMORY[0x1E4FB09D8];
          id v272 = v269;
          id v273 = objc_msgSend(v270, sel_systemFontOfSize_weight_, 12.0, v271);
          uint64_t v274 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
          *(void *)(v267 + 40) = v273;
          long long v275 = (void *)*MEMORY[0x1E4FB0700];
          *(void *)(v267 + 64) = v274;
          *(void *)(v267 + 72) = v275;
          uint64_t v276 = self;
          id v277 = v275;
          id v278 = objc_msgSend(v276, sel_systemBlueColor);
          *(void *)(v267 + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
          *(void *)(v267 + 80) = v278;
          sub_1BFF991DC(v267);
          id v279 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          double v280 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          type metadata accessor for Key(0);
          sub_1BFEBC394((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
          double v281 = (void *)sub_1C151E32C();
          swift_bridgeObjectRelease();
          id v282 = objc_msgSend(v279, sel_initWithString_attributes_, v280, v281);

          objc_msgSend(v235, sel_appendAttributedString_, v282);
          swift_release();
        }
        else
        {
          swift_release();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_131:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v481);
      }
LABEL_132:
      uint64_t v310 = v488;
      uint64_t v309 = v489;
      __swift_project_boxed_opaque_existential_1(&v487, v488);
      uint64_t v311 = (*(uint64_t (**)(uint64_t))(*(void *)(v309 + 8) + 16))(v310);
      if (v312)
      {
        *(void *)&long long v481 = v311;
        *((void *)&v481 + 1) = v312;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        id v470 = (id)v481;
        sub_1C0DD9298(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
        uint64_t v313 = swift_allocObject();
        char v314 = (void **)MEMORY[0x1E4FB06F8];
        *(_OWORD *)(v313 + 16) = xmmword_1C152C7F0;
        uint64_t v315 = *v314;
        *(void *)(v313 + 32) = *v314;
        uint64_t v316 = self;
        double v317 = *MEMORY[0x1E4FB09E0];
        id v318 = v315;
        id v319 = objc_msgSend(v316, sel_systemFontOfSize_weight_, 15.0, v317);
        uint64_t v320 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
        *(void *)(v313 + 40) = v319;
        uint64_t v321 = (void *)*MEMORY[0x1E4FB0700];
        *(void *)(v313 + 64) = v320;
        *(void *)(v313 + 72) = v321;
        uint64_t v322 = *(void *)v472;
        uint64_t v323 = v488;
        uint64_t v324 = v489;
        __swift_project_boxed_opaque_existential_1(&v487, v488);
        uint64_t v325 = *(void *)(v324 + 8);
        unint64_t v326 = *(uint64_t (**)(uint64_t, uint64_t))(v325 + 8);
        id v327 = v321;
        uint64_t v235 = v473;
        swift_bridgeObjectRetain();
        uint64_t v328 = v326(v323, v325);
        LOBYTE(v323) = sub_1BFF896B4(v328, v329, v322);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v330 = self;
        long long v331 = &selRef_systemGray2Color;
        if (v323) {
          long long v331 = &selRef_secondaryLabelColor;
        }
        id v332 = [v330 *v331];
        uint64_t v333 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
        *(void *)(v313 + 80) = v332;
        long long v334 = (void *)*MEMORY[0x1E4FB0768];
        *(void *)(v313 + 104) = v333;
        *(void *)(v313 + 112) = v334;
        int v335 = v480;
        *(void *)(v313 + 144) = MEMORY[0x1E4FBB550];
        BOOL v336 = v335 == 0;
        uint64_t v337 = v471;
        if (!v336) {
          uint64_t v337 = 0;
        }
        *(void *)(v313 + 120) = v337;
        id v338 = v334;
        sub_1BFF991DC(v313);
        id v339 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        uint64_t v340 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1BFEBC394((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
        unint64_t v341 = (void *)sub_1C151E32C();
        swift_bridgeObjectRelease();
        id v342 = objc_msgSend(v339, sel_initWithString_attributes_, v340, v341);

        objc_msgSend(v235, sel_appendAttributedString_, v342);
      }
      uint64_t v344 = v488;
      uint64_t v343 = v489;
      __swift_project_boxed_opaque_existential_1(&v487, v488);
      double v345 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v343 + 8) + 24))(v344);
      if (v346)
      {
        id v470 = v345;
        sub_1C0DD9298(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
        uint64_t v347 = swift_allocObject();
        uint64_t v348 = (void **)MEMORY[0x1E4FB06F8];
        *(_OWORD *)(v347 + 16) = xmmword_1C152C7F0;
        uint64_t v349 = *v348;
        *(void *)(v347 + 32) = *v348;
        uint64_t v350 = self;
        id v351 = v349;
        id v352 = objc_msgSend(v350, sel_systemFontOfSize_, 15.0);
        uint64_t v353 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
        *(void *)(v347 + 40) = v352;
        uint64_t v354 = (void *)*MEMORY[0x1E4FB0700];
        *(void *)(v347 + 64) = v353;
        *(void *)(v347 + 72) = v354;
        uint64_t v355 = *(void *)v472;
        uint64_t v356 = v488;
        uint64_t v357 = v489;
        __swift_project_boxed_opaque_existential_1(&v487, v488);
        uint64_t v358 = *(void *)(v357 + 8);
        uint64_t v359 = *(uint64_t (**)(uint64_t, uint64_t))(v358 + 8);
        id v360 = v354;
        uint64_t v235 = v473;
        swift_bridgeObjectRetain();
        uint64_t v361 = v359(v356, v358);
        LOBYTE(v356) = sub_1BFF896B4(v361, v362, v355);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v363 = self;
        uint64_t v364 = &selRef_labelColor;
        if ((v356 & 1) == 0) {
          uint64_t v364 = &selRef_systemGray2Color;
        }
        id v365 = [v363 *v364];
        uint64_t v366 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
        *(void *)(v347 + 80) = v365;
        unint64_t v367 = (void *)*MEMORY[0x1E4FB0768];
        *(void *)(v347 + 104) = v366;
        *(void *)(v347 + 112) = v367;
        int v368 = v480;
        *(void *)(v347 + 144) = MEMORY[0x1E4FBB550];
        BOOL v336 = v368 == 0;
        uint64_t v369 = v471;
        if (!v336) {
          uint64_t v369 = 0;
        }
        *(void *)(v347 + 120) = v369;
        id v370 = v367;
        sub_1BFF991DC(v347);
        id v371 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        unint64_t v372 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1BFEBC394((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
        uint64_t v373 = (void *)sub_1C151E32C();
        swift_bridgeObjectRelease();
        id v374 = objc_msgSend(v371, sel_initWithString_attributes_, v372, v373);

        objc_msgSend(v235, sel_appendAttributedString_, v374);
      }
      id v375 = v475;
      id v376 = objc_msgSend(v475, sel_textLabel);
      if (v376)
      {
        uint64_t v377 = v376;
        objc_msgSend(v376, sel_setAttributedText_, v235);
      }
      id v378 = objc_msgSend(v375, sel_textLabel);
      if (v378)
      {
        uint64_t v379 = v378;
        objc_msgSend(v378, sel_setNumberOfLines_, 0);
      }
      objc_msgSend(v375, sel_setAccessoryType_, 1);
      id v470 = (id)sub_1C0DD3208(&v487);
      sub_1C0DD9298(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
      uint64_t v380 = swift_allocObject();
      uint64_t v381 = (void **)MEMORY[0x1E4FB06F8];
      *(_OWORD *)(v380 + 16) = xmmword_1C152C7F0;
      long long v382 = *v381;
      *(void *)(v380 + 32) = *v381;
      long long v383 = self;
      id v384 = v382;
      id v385 = objc_msgSend(v383, sel_systemFontOfSize_, 13.0);
      uint64_t v386 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
      *(void *)(v380 + 40) = v385;
      long long v387 = (void *)*MEMORY[0x1E4FB0700];
      *(void *)(v380 + 64) = v386;
      *(void *)(v380 + 72) = v387;
      uint64_t v388 = *(void *)v472;
      uint64_t v389 = v488;
      uint64_t v390 = v489;
      __swift_project_boxed_opaque_existential_1(&v487, v488);
      uint64_t v391 = *(void *)(v390 + 8);
      unint64_t v392 = *(uint64_t (**)(uint64_t, uint64_t))(v391 + 8);
      id v393 = v387;
      swift_bridgeObjectRetain();
      uint64_t v394 = v392(v389, v391);
      LOBYTE(v389) = sub_1BFF896B4(v394, v395, v388);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v396 = self;
      long long v397 = &selRef_systemGray2Color;
      if (v389) {
        long long v397 = &selRef_secondaryLabelColor;
      }
      id v398 = [v396 *v397];
      uint64_t v399 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
      *(void *)(v380 + 80) = v398;
      long long v400 = (void *)*MEMORY[0x1E4FB0768];
      *(void *)(v380 + 104) = v399;
      *(void *)(v380 + 112) = v400;
      int v401 = v480;
      *(void *)(v380 + 144) = MEMORY[0x1E4FBB550];
      BOOL v336 = v401 == 0;
      uint64_t v402 = v471;
      if (!v336) {
        uint64_t v402 = 0;
      }
      *(void *)(v380 + 120) = v402;
      id v403 = v400;
      sub_1BFF991DC(v380);
      id v404 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      long long v405 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1BFEBC394((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
      char v406 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      id v407 = objc_msgSend(v404, sel_initWithString_attributes_, v405, v406);

      id v408 = objc_msgSend(v475, sel_detailTextLabel);
      if (v408)
      {
        uint64_t v409 = v408;
        objc_msgSend(v408, sel_setAttributedText_, v407);
      }
      *(void *)&long long v472 = v407;
      uint64_t v410 = v474;
      swift_beginAccess();
      uint64_t v411 = v410[7];
      uint64_t v412 = v488;
      uint64_t v413 = v489;
      __swift_project_boxed_opaque_existential_1(&v487, v488);
      uint64_t v414 = *(void *)(v413 + 8);
      char v415 = *(uint64_t (**)(uint64_t, uint64_t))(v414 + 8);
      swift_bridgeObjectRetain();
      uint64_t v416 = v415(v412, v414);
      char v418 = sub_1BFF896B4(v416, v417, v411);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v418)
      {
        int v419 = self;
        uint64_t v27 = v475;
        uint64_t v420 = v475;
        uint64_t v421 = &selRef_systemGreenColor;
LABEL_158:
        id v427 = [v419 *v421];
        id v428 = objc_msgSend(v427, sel_colorWithAlphaComponent_, 0.1);

        goto LABEL_160;
      }
      swift_beginAccess();
      uint64_t v422 = v410[8];
      swift_bridgeObjectRetain();
      uint64_t v423 = v415(v412, v414);
      char v425 = sub_1BFF896B4(v423, v424, v422);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v419 = self;
      uint64_t v27 = v475;
      v426 = v475;
      if (v425)
      {
        uint64_t v421 = &selRef_systemRedColor;
        goto LABEL_158;
      }
      id v428 = objc_msgSend(v419, sel_secondarySystemBackgroundColor);
LABEL_160:
      objc_msgSend(v27, sel_setBackgroundColor_, v428);

      id v429 = objc_msgSend(v27, sel_imageView);
      if (v429)
      {
        v430 = v429;
        objc_msgSend(v429, sel_setImage_, v410[4]);
      }
      uint64_t v432 = v488;
      uint64_t v431 = v489;
      __swift_project_boxed_opaque_existential_1(&v487, v488);
      uint64_t v433 = (*(uint64_t (**)(uint64_t))(*(void *)(v431 + 8) + 8))(v432);
      v434 = (uint64_t *)&v27[OBJC_IVAR____TtC8NewsFeed21FeedItemTableViewCell_identifier];
      uint64_t *v434 = v433;
      v434[1] = v435;
      swift_bridgeObjectRelease();
      uint64_t v436 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1BFC66384((uint64_t)&v487, (uint64_t)&v477);
      sub_1BFC66384((uint64_t)&v477, (uint64_t)v484);
      uint64_t v437 = swift_allocObject();
      *(void *)(v437 + 16) = v436;
      sub_1BFC773DC(&v477, v437 + 24);
      __swift_project_boxed_opaque_existential_1(&v487, v488);
      swift_retain_n();
      v438 = v474;
      uint64_t v439 = sub_1C151811C();
      uint64_t v441 = v440;
      v442 = (void *)((char *)v438 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_feedItemImages);
      swift_beginAccess();
      uint64_t v443 = *v442;
      if (*(void *)(v443 + 16) && (unint64_t v444 = sub_1BFEF2D8C(v439, v441), (v445 & 1) != 0))
      {
        v446 = *(void **)(*(void *)(v443 + 56) + 8 * v444);
        swift_endAccess();
        id v447 = v446;
        swift_bridgeObjectRelease();
        sub_1C0DD334C((uint64_t)v447, v436, v484);
        swift_release();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v448 = v488;
        uint64_t v449 = v489;
        __swift_project_boxed_opaque_existential_1(&v487, v488);
        v450 = (void *)v438[4];
        uint64_t v451 = swift_allocObject();
        swift_weakInit();
        sub_1BFC66384((uint64_t)&v487, (uint64_t)&v481);
        v452 = (void *)swift_allocObject();
        v452[2] = v451;
        sub_1BFC773DC(&v481, (uint64_t)(v452 + 3));
        v452[8] = sub_1C0DD97D8;
        v452[9] = v437;
        uint64_t v453 = *(void *)(v449 + 8);
        swift_retain();
        swift_retain();
        v454 = v450;
        uint64_t v27 = v475;
        sub_1C135BADC(v454, (void (*)(void))sub_1C0DD9864, (uint64_t)v452, v448, v453);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      v455 = (void *)v472;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v484);

      sub_1C0DD9BFC(v476, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v487);
      return v27;
    case 3u:
      uint64_t v471 = *((void *)v17 + 5);
      v473 = (char *)*((void *)v17 + 6);
      int v45 = v17[56];
      sub_1BFC773DC((long long *)v17, (uint64_t)&v477);
      type metadata accessor for LayoutTableViewCell();
      id v46 = (void *)sub_1C151F24C();
      id v47 = objc_msgSend(v46, sel_textLabel);
      if (v47)
      {
        uint64_t v48 = v47;
        __swift_project_boxed_opaque_existential_1(&v477, v478);
        sub_1C0225534();
        unint64_t v49 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v48, sel_setText_, v49);
      }
      id v50 = objc_msgSend(v46, sel_imageView);
      if (v50)
      {
        unint64_t v51 = v50;
        objc_msgSend(v50, sel_setImage_, v474[5]);
      }
      id v52 = objc_msgSend(v46, sel_contentView);
      objc_msgSend(v52, sel_setAlpha_, 1.0);

      uint64_t v53 = v472 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_key;
      id v54 = (void *)(v472 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_key + 16);
      __swift_project_boxed_opaque_existential_1(v54, *(void *)(v472 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_key + 40));
      id v55 = v46;
      uint64_t v56 = sub_1C151811C();
      uint64_t v58 = v57;
      __swift_project_boxed_opaque_existential_1(&v477, v478);
      if (v56 == sub_1C151811C() && v58 == v59)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v60 = 3;
      }
      else
      {
        char v114 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v114) {
          uint64_t v60 = 3;
        }
        else {
          uint64_t v60 = 1;
        }
      }
      objc_msgSend(v55, sel_setAccessoryType_, v60);

      uint64_t v115 = self;
      uint64_t v116 = (char *)v55;
      id v117 = objc_msgSend(v115, sel_systemBlueColor);
      objc_msgSend(v116, sel_setTintColor_, v117);
      v475 = v116;

      __swift_project_boxed_opaque_existential_1(v54, *(void *)(v53 + 40));
      uint64_t v118 = sub_1C151811C();
      uint64_t v120 = v119;
      __swift_project_boxed_opaque_existential_1(&v477, v478);
      if (v118 == sub_1C151811C() && v120 == v121)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v122 = &selRef_systemBlueColor;
      }
      else
      {
        char v123 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v122 = &selRef_lightGrayColor;
        if (v123) {
          uint64_t v122 = &selRef_systemBlueColor;
        }
      }
      *(void *)&long long v472 = [v115 *v122];
      if (v45)
      {
        if (v45 == 1)
        {
          id v124 = (id)v471;
          id v125 = (id)v471;
          uint64_t v27 = v475;
          id v126 = objc_msgSend(v475, sel_detailTextLabel);
          uint64_t v127 = v476;
          uint64_t v128 = v474;
          if (v126)
          {
            uint64_t v129 = v126;
            *(void *)&long long v487 = 0;
            *((void *)&v487 + 1) = 0xE000000000000000;
            v484[0] = v124;
            sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
            sub_1C152036C();
            uint64_t v130 = (void *)sub_1C151E5EC();
            swift_bridgeObjectRelease();
            objc_msgSend(v129, sel_setText_, v130);
          }
          id v131 = objc_msgSend(v27, sel_imageView);
          if (v131)
          {
            id v132 = v131;
            id v133 = (id)v128[6];
            uint64_t v134 = (void *)v472;
            unint64_t v135 = (void *)sub_1C151FAEC();

            objc_msgSend(v132, sel_setImage_, v135);
          }
          else
          {
          }
          long long v305 = v473;
          sub_1C09C8E58(v124, v473, 1);
          long long v306 = v124;
          long long v307 = v305;
          char v308 = 1;
        }
        else
        {
          uint64_t v27 = v475;
          objc_msgSend(v475, sel_setAccessoryType_, 0);
          objc_msgSend(v27, sel_setSelectionStyle_, 0);
          id v192 = objc_msgSend(v27, (SEL)&selRef_setContentMode_);
          objc_msgSend(v192, sel_setAlpha_, 0.5);

          id v193 = objc_msgSend(v27, sel_detailTextLabel);
          uint64_t v127 = v476;
          long long v194 = v474;
          uint64_t v195 = v471;
          if (v193)
          {
            long long v196 = v193;
            long long v197 = (void *)sub_1C151E5EC();
            objc_msgSend(v196, sel_setText_, v197);
          }
          id v198 = objc_msgSend(v27, sel_imageView);
          if (v198)
          {
            long long v199 = v198;
            id v200 = (id)v194[6];
            long long v201 = (void *)v472;
            long long v202 = (void *)sub_1C151FAEC();

            objc_msgSend(v199, sel_setImage_, v202);
          }
          else
          {
          }
          long long v306 = (void *)v195;
          long long v307 = v473;
          char v308 = 2;
        }
        sub_1C09C8E58(v306, v307, v308);
        sub_1C0DD9BFC(v127, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      }
      else
      {
        uint64_t v27 = v475;
        id v176 = objc_msgSend(v475, sel_detailTextLabel);
        id v177 = (id)v471;
        if (v176)
        {
          uint64_t v178 = v176;
          uint64_t v179 = (void *)sub_1C151E5EC();
          objc_msgSend(v178, sel_setText_, v179);
        }
        uint64_t v180 = (void *)swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_1BFC66384((uint64_t)&v477, (uint64_t)&v487);
        sub_1BFC66384((uint64_t)&v487, (uint64_t)v484);
        uint64_t v181 = swift_allocObject();
        *(void *)(v181 + 16) = v180;
        sub_1BFC773DC(&v487, v181 + 24);
        __swift_project_boxed_opaque_existential_1(&v477, v478);
        swift_retain_n();
        uint64_t v182 = sub_1C151811C();
        uint64_t v184 = v183;
        uint64_t v185 = (void *)((char *)v474 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_layoutImages);
        swift_beginAccess();
        uint64_t v186 = *v185;
        if (*(void *)(v186 + 16) && (unint64_t v187 = sub_1BFEF2D8C(v182, v184), (v188 & 1) != 0))
        {
          long long v189 = *(void **)(*(void *)(v186 + 56) + 8 * v187);
          swift_endAccess();
          id v190 = v189;
          swift_bridgeObjectRelease();
          id v191 = v190;
          sub_1C0DD34D0((uint64_t)v190, (uint64_t)v180, v484);
          swift_release();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_endAccess();
          sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
          uint64_t v292 = *MEMORY[0x1E4FBCB28];
          long long v294 = v463;
          uint64_t v293 = v464;
          uint64_t v295 = (void (*)(char *, uint64_t, id))v464[13];
          id v470 = v180;
          unint64_t v296 = (void *)v472;
          id v297 = v465;
          v295(v463, v292, v465);
          long long v298 = (void *)sub_1C151F5BC();
          ((void (*)(char *, id))v293[1])(v294, v297);
          sub_1BFC66384((uint64_t)&v477, (uint64_t)&v481);
          uint64_t v299 = swift_allocObject();
          sub_1BFC773DC(&v481, v299 + 16);
          type metadata accessor for DebugInspectViewDataSource();
          sub_1C151931C();

          swift_release();
          *(void *)(swift_allocObject() + 16) = v296;
          id v300 = v296;
          long long v301 = (void *)sub_1C1518E7C();
          sub_1BFC39268(0, (unint64_t *)&qword_1EB87A300);
          sub_1C1518FFC();
          swift_release();
          swift_release();

          id v177 = (id)v471;
          long long v302 = (void *)sub_1C151F56C();
          sub_1BFC66384((uint64_t)&v477, (uint64_t)&v481);
          uint64_t v303 = swift_allocObject();
          sub_1BFC773DC(&v481, v303 + 16);
          *(void *)(v303 + 56) = sub_1C0DD9688;
          *(void *)(v303 + 64) = v181;
          swift_retain();
          sub_1C151901C();
          swift_release();

          uint64_t v27 = v475;
          swift_release();
          id v191 = (id)sub_1C1518E7C();
          sub_1C151903C();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v484);
        sub_1C09C8E58(v177, v473, 0);
        sub_1C0DD9BFC(v476, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
        swift_release();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v477);
      return v27;
    case 4u:
      sub_1C09C8C08();
      sub_1C0DD8D9C((uint64_t)&v17[*(int *)(v61 + 48)], (uint64_t)v473);
      type metadata accessor for SubtitleTableViewCell();
      uint64_t v27 = (char *)sub_1C151F24C();
      id v62 = objc_msgSend(v27, sel_textLabel);
      if (v62)
      {
        id v63 = v62;
        uint64_t v64 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v63, sel_setText_, v64);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v154 = objc_msgSend(v27, sel_textLabel);
      if (v154)
      {
        unint64_t v155 = v154;
        id v156 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v155, sel_setFont_, v156);
      }
      id v157 = objc_msgSend(v27, sel_detailTextLabel);
      if (v157)
      {
        long long v158 = v157;
        uint64_t v159 = sub_1C151CA7C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v159 - 8) + 48))(v473, 1, v159);
        uint64_t v160 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v158, sel_setText_, v160);
      }
      id v161 = objc_msgSend(v27, sel_detailTextLabel);
      if (v161)
      {
        uint64_t v162 = v161;
        id v163 = objc_msgSend(self, sel_secondaryLabelColor);
        objc_msgSend(v162, sel_setTextColor_, v163);
      }
      id v164 = objc_msgSend(v27, sel_detailTextLabel);
      if (v164)
      {
        uint64_t v165 = v164;
        id v166 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
        objc_msgSend(v165, sel_setFont_, v166);
      }
      id v167 = objc_msgSend(v27, sel_detailTextLabel);
      if (v167)
      {
        uint64_t v168 = v167;
        objc_msgSend(v167, sel_setNumberOfLines_, 0);
      }
      uint64_t v169 = sub_1C151CA7C();
      uint64_t v170 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v169 - 8) + 48);
      uint64_t v171 = (uint64_t)v473;
      if (v170(v473, 1, v169) == 1) {
        uint64_t v172 = 0;
      }
      else {
        uint64_t v172 = 3;
      }
      objc_msgSend(v27, sel_setSelectionStyle_, v172);
      id v173 = objc_msgSend(v27, sel_contentView);
      unsigned int v174 = v170((char *)v171, 1, v169);
      double v175 = 1.0;
      if (v174 == 1) {
        double v175 = 0.5;
      }
      objc_msgSend(v173, sel_setAlpha_, v175);

      objc_msgSend(v27, sel_setAccessoryType_, v170((char *)v171, 1, v169) != 1);
      sub_1C0DD9BFC(v26, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      sub_1C0DD9B24(v171, &qword_1EA19B648, MEMORY[0x1E4FAD7D8]);
      return v27;
    case 5u:
      v463 = *(char **)v17;
      uint64_t v65 = *((void *)v17 + 2);
      type metadata accessor for SubtitleTableViewCell();
      v475 = (char *)sub_1C151F24C();
      objc_msgSend(v475, sel_setAccessoryType_, 0);
      v474 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_init);
      sub_1C0DD9298(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
      uint64_t v67 = v66;
      uint64_t inited = swift_initStackObject();
      unint64_t v69 = (void **)MEMORY[0x1E4FB06F8];
      long long v472 = xmmword_1C1527210;
      *(_OWORD *)(inited + 16) = xmmword_1C1527210;
      uint64_t v70 = *v69;
      *(void *)(inited + 32) = *v69;
      uint64_t v71 = self;
      id v465 = v71;
      id v461 = v70;
      id v72 = objc_msgSend(v71, sel_systemFontOfSize_, 15.0);
      uint64_t v73 = (char *)sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
      *(void *)(inited + 40) = v72;
      uint64_t v74 = (void *)*MEMORY[0x1E4FB0700];
      v473 = v73;
      *(void *)(inited + 64) = v73;
      *(void *)(inited + 72) = v74;
      id v75 = self;
      id v76 = v74;
      v464 = v75;
      id v77 = objc_msgSend(v75, sel_labelColor);
      uint64_t v78 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
      *(void *)(inited + 104) = v78;
      *(void *)(inited + 80) = v77;
      sub_1BFF991DC(inited);
      id v79 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v80 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      uint64_t v82 = v81;
      uint64_t v462 = sub_1BFEBC394((unint64_t *)&qword_1EB87A1F0, type metadata accessor for Key);
      v463 = v82;
      uint64_t v460 = MEMORY[0x1E4FBC840] + 8;
      id v83 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      id v84 = objc_msgSend(v79, sel_initWithString_attributes_, v80, v83);

      objc_msgSend(v474, sel_appendAttributedString_, v84);
      sub_1C151927C();
      uint64_t v85 = sub_1C15187BC();
      LODWORD(v84) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v9, 1, v85);
      sub_1C0DD9B24((uint64_t)v9, (unint64_t *)&unk_1EB8829D8, MEMORY[0x1E4FAAB70]);
      if (v84 != 1)
      {
        uint64_t v86 = swift_allocObject();
        *(_OWORD *)(v86 + 16) = v472;
        unint64_t v87 = v461;
        *(void *)(v86 + 32) = v461;
        double v88 = *MEMORY[0x1E4FB09E0];
        id v89 = v87;
        *(void *)(v86 + 40) = objc_msgSend(v465, sel_systemFontOfSize_weight_, 10.0, v88);
        *(void *)(v86 + 64) = v473;
        *(void *)(v86 + 72) = v76;
        id v90 = v76;
        id v91 = objc_msgSend(v464, sel_systemPinkColor);
        *(void *)(v86 + 104) = v78;
        *(void *)(v86 + 80) = v91;
        sub_1BFF991DC(v86);
        id v92 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        uint64_t v93 = (void *)sub_1C151E5EC();
        unint64_t v94 = (void *)sub_1C151E32C();
        swift_bridgeObjectRelease();
        id v95 = objc_msgSend(v92, sel_initWithString_attributes_, v93, v94);

        objc_msgSend(v474, sel_appendAttributedString_, v95);
      }
      id v96 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_init);
      uint64_t v97 = *(void *)(v65 + 24);
      *(void *)&long long v477 = *(void *)(v65 + 16);
      *((void *)&v477 + 1) = v97;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      sub_1C151920C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v459 = v67;
      uint64_t v98 = swift_initStackObject();
      *(_OWORD *)(v98 + 16) = v472;
      *(void *)(v98 + 32) = v76;
      id v457 = v76;
      *(void *)(v98 + 40) = objc_msgSend(v464, sel_secondaryLabelColor);
      uint64_t v458 = v78;
      uint64_t v99 = v461;
      *(void *)(v98 + 64) = v78;
      *(void *)(v98 + 72) = v99;
      id v461 = v99;
      id v100 = objc_msgSend(v465, sel_systemFontOfSize_, 13.0);
      *(void *)(v98 + 104) = v473;
      *(void *)(v98 + 80) = v100;
      sub_1BFF991DC(v98);
      id v101 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v102 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      unint64_t v103 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      unint64_t v104 = v101;
      id v105 = v96;
      id v106 = objc_msgSend(v104, sel_initWithString_attributes_, v102, v103);

      objc_msgSend(v96, sel_appendAttributedString_, v106);
      uint64_t v107 = v65 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references;
      swift_beginAccess();
      uint64_t v27 = v475;
      if (*(void *)(*(void *)v107 + 16))
      {
        id v108 = (id)v471;
        sub_1C0DD9B94(*(void *)v107+ ((*(unsigned __int8 *)(v469 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v469 + 80)), v471, (uint64_t (*)(void))sub_1BFEBC130);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C0DD9BFC((uint64_t)v108, (uint64_t (*)(void))sub_1BFEBC130);
        }
        else
        {
          sub_1BFEBE33C();
          uint64_t v204 = (uint64_t)v108 + *(int *)(v203 + 48);
          id v470 = v96;
          unint64_t v205 = v466;
          uint64_t v206 = v467;
          (*(void (**)(char *, id, uint64_t))(v467 + 32))(v466, v108, v468);
          sub_1C0DD9BFC(v204, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
          sub_1C1515E2C();
          *(void *)&long long v487 = 10;
          *((void *)&v487 + 1) = 0xE100000000000000;
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          uint64_t v207 = swift_allocObject();
          *(_OWORD *)(v207 + 16) = v472;
          double v208 = v457;
          *(void *)(v207 + 32) = v457;
          id v209 = v208;
          *(void *)(v207 + 40) = objc_msgSend(v464, sel_systemBlueColor);
          uint64_t v210 = v461;
          *(void *)(v207 + 64) = v458;
          *(void *)(v207 + 72) = v210;
          id v211 = v210;
          id v212 = objc_msgSend(v465, sel_systemFontOfSize_, 13.0);
          *(void *)(v207 + 104) = v473;
          *(void *)(v207 + 80) = v212;
          sub_1BFF991DC(v207);
          id v213 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          char v214 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          unint64_t v215 = (void *)sub_1C151E32C();
          swift_bridgeObjectRelease();
          id v216 = objc_msgSend(v213, sel_initWithString_attributes_, v214, v215);

          objc_msgSend(v470, sel_appendAttributedString_, v216);
          objc_msgSend(v27, sel_setAccessoryType_, 1);
          (*(void (**)(char *, uint64_t))(v206 + 8))(v205, v468);
          id v105 = v470;
        }
      }
      id v217 = objc_msgSend(v27, sel_textLabel);
      id v218 = v474;
      if (v217)
      {
        long long v219 = v217;
        objc_msgSend(v217, sel_setAttributedText_, v474);
      }
      id v220 = objc_msgSend(v27, sel_detailTextLabel);
      if (v220)
      {
        long long v221 = v220;
        objc_msgSend(v220, sel_setAttributedText_, v105);
      }
      id v222 = objc_msgSend(v27, sel_detailTextLabel);
      objc_msgSend(v222, sel_setNumberOfLines_, 0);

      objc_msgSend(v27, sel_setSelectionStyle_, 0);
      swift_release();
      uint64_t v223 = v476;
      goto LABEL_121;
    case 6u:
      type metadata accessor for LoadingTableViewCell();
      uint64_t v27 = (char *)sub_1C151F24C();
      uint64_t v109 = OBJC_IVAR____TtC8NewsFeed20LoadingTableViewCell_activityIndicatorView;
      id v110 = *(void **)&v27[OBJC_IVAR____TtC8NewsFeed20LoadingTableViewCell_activityIndicatorView];
      uint64_t v111 = self;
      id v112 = v110;
      id v113 = objc_msgSend(v111, sel_darkGrayColor);
      objc_msgSend(v112, sel_setColor_, v113);

      objc_msgSend(*(id *)&v27[v109], sel_startAnimating);
      goto LABEL_120;
    default:
      sub_1C01DC970((uint64_t)(v17 + 16), (uint64_t)&v477);
      type metadata accessor for SubtitleTableViewCell();
      uint64_t v27 = (char *)sub_1C151F24C();
      id v28 = objc_msgSend(v27, sel_textLabel);
      if (v28)
      {
        uint64_t v29 = v28;
        CGFloat v30 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v29, sel_setText_, v30);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v136 = objc_msgSend(v27, sel_textLabel);
      if (v136)
      {
        unint64_t v137 = v136;
        id v138 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v137, sel_setFont_, v138);
      }
      id v139 = objc_msgSend(v27, sel_detailTextLabel);
      if (v139)
      {
        uint64_t v140 = v139;
        sub_1C01DC9D4((uint64_t)&v477, (uint64_t)&v487);
        if (v488)
        {
          __swift_project_boxed_opaque_existential_1(&v487, v488);
          sub_1C152088C();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v487);
        }
        else
        {
          sub_1C0358EDC((uint64_t)&v487, (unint64_t *)&qword_1EA197F90, (unint64_t *)&unk_1EA1A8CE0, MEMORY[0x1E4FBBDF0]);
        }
        double v283 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v140, sel_setText_, v283);
      }
      id v284 = objc_msgSend(v27, sel_detailTextLabel);
      if (v284)
      {
        double v285 = v284;
        id v286 = objc_msgSend(self, sel_secondaryLabelColor);
        objc_msgSend(v285, sel_setTextColor_, v286);
      }
      id v287 = objc_msgSend(v27, sel_detailTextLabel);
      if (v287)
      {
        uint64_t v288 = v287;
        id v289 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
        objc_msgSend(v288, sel_setFont_, v289);
      }
      id v290 = objc_msgSend(v27, sel_detailTextLabel);
      if (v290)
      {
        uint64_t v291 = v290;
        objc_msgSend(v290, sel_setNumberOfLines_, 0);
      }
      objc_msgSend(v27, sel_setSelectionStyle_, 0);
      sub_1C0358EDC((uint64_t)&v477, (unint64_t *)&qword_1EA197F90, (unint64_t *)&unk_1EA1A8CE0, MEMORY[0x1E4FBBDF0]);
LABEL_120:
      uint64_t v223 = v26;
LABEL_121:
      sub_1C0DD9BFC(v223, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      return v27;
  }
}

uint64_t sub_1C0DD319C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v3 = sub_1C151811C();
  LOBYTE(v2) = sub_1BFF896B4(v3, v4, v2);
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C0DD3208(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 48))(v1);
  if (!v3) {
    return 2960685;
  }
  uint64_t v4 = v3;
  objc_msgSend(v3, sel_agedPersonalizationScore);

  if (qword_1EA194C88 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1EA2B5690;
  id v6 = (void *)sub_1C1517D2C();
  id v7 = objc_msgSend(v5, sel_stringForObjectValue_, v6);

  if (v7)
  {
    sub_1C151E62C();
  }
  else
  {
    sub_1C151EF4C();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1C0DD334C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  if (v6)
  {
    id v7 = (void *)v6;
    uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC8NewsFeed21FeedItemTableViewCell_identifier);
    uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC8NewsFeed21FeedItemTableViewCell_identifier + 8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v10 = a3[3];
  uint64_t v11 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)(v11 + 8) + 8))(v10);
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return;
  }
  if (v9 == v12 && v8 == v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      return;
    }
  }
  swift_beginAccess();
  uint64_t v16 = (void *)MEMORY[0x1C18C9C60](v5);
  if (v16)
  {
    double v17 = v16;
    id v18 = objc_msgSend(v16, sel_imageView);

    if (v18)
    {
      objc_msgSend(v18, sel_setImage_, a1);
    }
  }
}

void sub_1C0DD34D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = (void *)MEMORY[0x1C18C9C60](v5);
  id v7 = v6;
  if (v6)
  {
    id v8 = objc_msgSend(v6, sel_textLabel);

    if (!v8)
    {
      id v7 = 0;
      goto LABEL_8;
    }
    id v9 = objc_msgSend(v8, sel_text);

    if (v9)
    {
      id v7 = (void *)sub_1C151E62C();
      id v8 = v10;

      goto LABEL_8;
    }
    id v7 = 0;
  }
  id v8 = 0;
LABEL_8:
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  uint64_t v11 = sub_1C0225534();
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return;
  }
  if (v7 == (void *)v11 && v8 == v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return;
    }
  }
  swift_beginAccess();
  char v15 = (void *)MEMORY[0x1C18C9C60](v5);
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = objc_msgSend(v15, sel_imageView);

    objc_msgSend(v17, sel_setImage_, a1);
  }
}

uint64_t sub_1C0DD3928(void *a1)
{
  Class ObjectType = (Class)swift_getObjectType();
  sub_1BFEBC130();
  uint64_t v183 = (uint64_t *)*(v3 - 1);
  id v184 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v185 = (uint64_t)&v155 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v178 = *(void *)(v5 - 8);
  uint64_t v179 = v5;
  MEMORY[0x1F4188790](v5);
  id v177 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151CA7C();
  uint64_t v186 = *(void *)(v7 - 8);
  uint64_t v187 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v181 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v182 = (char *)&v155 - v10;
  sub_1C0DD9298(0, &qword_1EA19B648, MEMORY[0x1E4FAD7D8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  long long v189 = (char *)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v190 = (char *)&v155 - v14;
  uint64_t v160 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1F4188790](v160);
  uint64_t v167 = (uint64_t)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C151E16C();
  uint64_t v165 = *(void *)(v16 - 8);
  uint64_t v166 = v16;
  MEMORY[0x1F4188790](v16);
  id v163 = (char *)&v155 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_1C151E1DC();
  uint64_t v162 = *(void *)(v164 - 8);
  MEMORY[0x1F4188790](v164);
  id v161 = (char *)&v155 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C151E17C();
  uint64_t v158 = *(void *)(v19 - 8);
  uint64_t v159 = v19;
  MEMORY[0x1F4188790](v19);
  id v157 = (char *)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v176 = (uint64_t)&v155 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v173);
  uint64_t v175 = (uint64_t)&v155 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v156 = *(void *)(v174 - 8);
  uint64_t v24 = *(void *)(v156 + 64);
  MEMORY[0x1F4188790](v174);
  uint64_t v169 = (uint64_t)&v155 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (uint64_t *)((char *)&v155 - v26);
  uint64_t v28 = sub_1C151787C();
  uint64_t v170 = *(void *)(v28 - 8);
  uint64_t v171 = v28;
  MEMORY[0x1F4188790](v28);
  uint64_t v172 = (char *)&v155 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DebugInspectViewItem();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  id v33 = (long long *)((char *)&v155 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v34);
  uint64_t v191 = (uint64_t)&v155 - v35;
  uint64_t v36 = (void *)sub_1C151670C();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v36, 1);

  char v188 = v1;
  uint64_t v37 = (uint64_t *)(*(void *)&v1[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource]
                  + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  uint64_t v38 = *v37;
  swift_bridgeObjectRetain();
  unint64_t v39 = sub_1C151676C();
  if ((v39 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v39 >= *(void *)(v38 + 16))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v180 = v27;
  uint64_t v40 = *(void *)(v38 + 48 * v39 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v41 = sub_1C151675C();
  if ((v41 & 0x8000000000000000) != 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v41 >= *(void *)(v40 + 16))
  {
LABEL_41:
    __break(1u);
    JUMPOUT(0x1C0DD5124);
  }
  uint64_t v42 = v40
      + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))
      + *(void *)(v31 + 72) * v41;
  uint64_t v43 = v191;
  sub_1C0DD9B94(v42, v191, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  swift_bridgeObjectRelease();
  sub_1C0DD9B94(v43, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  id v45 = v189;
  uint64_t v46 = (uint64_t)v190;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1C0DD9BFC(v43, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      swift_bridgeObjectRelease();
      return sub_1C02F6038();
    case 2:
      sub_1BFC773DC(v33, (uint64_t)aBlock);
      uint64_t v48 = v188;
      uint64_t v49 = *(void *)&v188[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inspector];
      sub_1BFC66384((uint64_t)aBlock, (uint64_t)v202);
      uint64_t v50 = *(void *)&v48[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter];
      uint64_t v51 = *(void *)&v48[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter + 8];
      id v52 = *(void **)&v48[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_cloudContext];
      uint64_t v53 = (char *)objc_allocWithZone((Class)type metadata accessor for DebugInspectionViewController());
      uint64_t v54 = v203;
      uint64_t v55 = v204;
      uint64_t v56 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v202, v203);
      id v190 = (char *)&v155;
      __n128 v57 = MEMORY[0x1F4188790](v56);
      uint64_t v59 = (char *)&v155 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v60 + 16))(v59, v57);
      swift_retain();
      swift_unknownObjectRetain();
      id v61 = v52;
      id v62 = sub_1C0F02F8C(v49, (uint64_t)v59, v50, v51, v61, v53, v54, v55);
      swift_release();
      swift_unknownObjectRelease();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v202);
      id v63 = objc_msgSend(v48, sel_navigationController);
      if (v63)
      {
        id v64 = v63;
        objc_msgSend(v63, sel_pushViewController_animated_, v62, 1);

        id v62 = v64;
      }
      uint64_t v65 = v191;

      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      uint64_t v66 = (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem;
      uint64_t v67 = v65;
      return sub_1C0DD9BFC(v67, v66);
    case 3:
      unint64_t v68 = (char *)*((void *)v33 + 5);
      long long v189 = (char *)*((void *)v33 + 6);
      id v190 = v68;
      int v69 = *((unsigned __int8 *)v33 + 56);
      sub_1BFC66384((uint64_t)v33, (uint64_t)v202);
      uint64_t v70 = &v188[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_key];
      __swift_project_boxed_opaque_existential_1(&v188[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_key + 16], *(void *)&v188[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_key + 40]);
      uint64_t v71 = sub_1C151811C();
      uint64_t v73 = v72;
      __swift_project_boxed_opaque_existential_1(v202, v203);
      if (v71 == sub_1C151811C() && v73 == v74)
      {
        swift_bridgeObjectRelease_n();
LABEL_20:
        sub_1C0DD9BFC(v43, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
        sub_1C09C8E58(v190, v189, v69);
        goto LABEL_36;
      }
      char v82 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v82) {
        goto LABEL_20;
      }
      uint64_t v98 = v173;
      uint64_t v187 = swift_allocBox();
      uint64_t v100 = v99;
      LODWORD(v186) = v69;
      uint64_t v101 = v174;
      uint64_t v102 = &v70[*(int *)(v174 + 24)];
      sub_1BFC66384((uint64_t)(v102 + 8), (uint64_t)aBlock);
      uint64_t v103 = *((void *)v102 + 6);
      unint64_t v104 = &v102[*(int *)(v98 + 52)];
      uint64_t v105 = (uint64_t)v172;
      (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v172, v104, v171);
      LOBYTE(v200) = *v102;
      uint64_t v106 = *((void *)v102 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFE9F050(aBlock, v103, 0, v105, (unsigned __int8 *)&v200, v106, v100);
      sub_1BFC66384((uint64_t)v202, (uint64_t)aBlock);
      uint64_t v185 = v100;
      uint64_t v107 = v175;
      sub_1C0DD9B94(v100, v175, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      uint64_t v108 = v176;
      sub_1C0DD9B94((uint64_t)&v70[*(int *)(v101 + 28)], v176, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v197);
      uint64_t v109 = sub_1C0225534();
      id v110 = v180;
      *uint64_t v180 = v109;
      v110[1] = v111;
      sub_1BFC66384((uint64_t)aBlock, (uint64_t)(v110 + 2));
      sub_1C0DD919C(v107, (uint64_t)v110 + *(int *)(v101 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      int v112 = v186;
      sub_1C0DD919C(v108, (uint64_t)v110 + *(int *)(v101 + 28), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      if (v112)
      {
        if (v112 == 1)
        {
          id v113 = v188;
          id v184 = *(id *)&v188[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_cloudContext];
          uint64_t v186 = *(void *)&v188[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_feedPersonalizer];
          sub_1C0DD9B94((uint64_t)v110, v169, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
          sub_1BFC66384((uint64_t)&v113[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_factory], (uint64_t)&v200);
          sub_1C066A140();
          uint64_t v115 = *(int *)(v114 + 48);
          uint64_t v116 = v167;
          sub_1C0DD9B94(v185, v167, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
          id v117 = v190;
          *(void *)(v116 + v115) = v190;
          swift_storeEnumTagMultiPayload();
          uint64_t v118 = *(void *)&v113[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter];
          uint64_t v185 = *(void *)&v113[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter + 8];
          sub_1C0668294((uint64_t)&v113[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inventory], (uint64_t)aBlock);
          sub_1BFC66384((uint64_t)&v113[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_headlineService], (uint64_t)v195);
          sub_1BFC66384((uint64_t)&v113[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tagService], (uint64_t)v194);
          sub_1BFC66384((uint64_t)&v113[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_webEmbedDataSourceService], (uint64_t)v193);
          uint64_t v119 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v200, v201);
          uint64_t v183 = &v155;
          __n128 v120 = MEMORY[0x1F4188790](v119);
          uint64_t v122 = (uint64_t *)((char *)&v155 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0));
          (*(void (**)(uint64_t *, __n128))(v123 + 16))(v122, v120);
          uint64_t v124 = *v122;
          uint64_t v125 = type metadata accessor for DebugGroupLayoutViewFactory();
          v192[3] = v125;
          v192[4] = &off_1F1C29940;
          v192[0] = v124;
          id v126 = (char *)objc_allocWithZone(ObjectType);
          uint64_t v127 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v192, v125);
          uint64_t v182 = (char *)&v155;
          __n128 v128 = MEMORY[0x1F4188790](v127);
          uint64_t v130 = (uint64_t *)((char *)&v155 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0));
          (*(void (**)(uint64_t *, __n128))(v131 + 16))(v130, v128);
          uint64_t v132 = *v130;
          id v133 = v189;
          sub_1C09C8BE0(v117, v189, 1);
          sub_1C09C8BE0(v117, v133, 1);
          id v134 = v184;
          uint64_t v135 = v186;
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          id v136 = sub_1C0B433CC(v134, v135, v169, v132, v116, v118, v185, (uint64_t)aBlock, (uint64_t)v195, (uint64_t)v194, (uint64_t)v193, v126);

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v192);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v200);
          id v137 = objc_msgSend(v113, sel_navigationController);
          if (v137)
          {
            id v138 = v137;
            objc_msgSend(v137, sel_pushViewController_animated_, v136, 1);
          }
          else
          {
          }
          id v154 = v190;
          sub_1C09C8E58(v190, v133, 1);
          sub_1C09C8E58(v154, v133, 1);
          sub_1C0DD9BFC((uint64_t)v180, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
          uint64_t v153 = v191;
        }
        else
        {
          sub_1C09C8E58(v190, v189, 2);
          sub_1C0DD9BFC((uint64_t)v110, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
          uint64_t v153 = v43;
        }
        sub_1C0DD9BFC(v153, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      }
      else
      {
        sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
        uint64_t v140 = v157;
        uint64_t v139 = v158;
        uint64_t v141 = v159;
        (*(void (**)(char *, void, uint64_t))(v158 + 104))(v157, *MEMORY[0x1E4FBCB28], v159);
        uint64_t v186 = sub_1C151F5BC();
        (*(void (**)(char *, uint64_t))(v139 + 8))(v140, v141);
        sub_1BFC66384((uint64_t)v202, (uint64_t)&v200);
        uint64_t v142 = v169;
        sub_1C0DD9B94((uint64_t)v110, v169, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
        unint64_t v143 = (*(unsigned __int8 *)(v156 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80);
        unint64_t v144 = (v24 + v143 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v145 = swift_allocObject();
        sub_1BFC773DC(&v200, v145 + 16);
        *(void *)(v145 + 56) = v187;
        sub_1C0DD919C(v142, v145 + v143, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
        id v146 = v188;
        *(void *)(v145 + v144) = v188;
        id v198 = sub_1C0DD9204;
        uint64_t v199 = v145;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BFC9FC68;
        long long v197 = &block_descriptor_56_0;
        id v147 = _Block_copy(aBlock);
        swift_retain();
        id v148 = v146;
        id v149 = v161;
        sub_1C151E19C();
        v195[0] = MEMORY[0x1E4FBC860];
        sub_1BFEBC394((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
        sub_1C0DD9298(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
        sub_1BFD32AD8();
        uint64_t v150 = v163;
        uint64_t v151 = v166;
        sub_1C151FFBC();
        uint64_t v152 = (void *)v186;
        MEMORY[0x1C18C70C0](0, v149, v150, v147);
        _Block_release(v147);

        sub_1C09C8E58(v190, v189, 0);
        (*(void (**)(char *, uint64_t))(v165 + 8))(v150, v151);
        (*(void (**)(char *, uint64_t))(v162 + 8))(v149, v164);
        sub_1C0DD9BFC((uint64_t)v110, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
        sub_1C0DD9BFC(v43, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
        swift_release();
      }
      swift_release();
LABEL_36:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v202);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    case 4:
      sub_1C09C8C08();
      sub_1C0DD8D9C((uint64_t)v33 + *(int *)(v75 + 48), v46);
      sub_1C0DD8E30(v46, (uint64_t)v45);
      uint64_t v76 = v186;
      uint64_t v77 = v187;
      if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v186 + 48))(v45, 1, v187) == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v78 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAD7D8];
        sub_1C0DD9B24(v46, &qword_1EA19B648, MEMORY[0x1E4FAD7D8]);
        sub_1C0DD9BFC(v43, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
        return sub_1C0DD9B24((uint64_t)v45, &qword_1EA19B648, v78);
      }
      id v83 = v182;
      (*(void (**)(char *, id, uint64_t))(v76 + 32))(v182, v45, v77);
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v181, v83, v77);
      id v84 = objc_allocWithZone((Class)sub_1C151B78C());
      uint64_t v85 = (void *)sub_1C151B77C();
      uint64_t v86 = v76;
      id v87 = objc_msgSend(v85, sel_navigationItem);
      double v88 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v87, sel_setTitle_, v88);

      id v89 = objc_msgSend(v188, sel_navigationController);
      objc_msgSend(v89, sel_pushViewController_animated_, v85, 1);

      (*(void (**)(char *, uint64_t))(v86 + 8))(v83, v77);
      sub_1C0DD9B24(v46, &qword_1EA19B648, MEMORY[0x1E4FAD7D8]);
      goto LABEL_24;
    case 5:
      uint64_t v79 = *((void *)v33 + 2);
      swift_bridgeObjectRelease();
      uint64_t v80 = v79 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references;
      swift_beginAccess();
      if (*(void *)(*(void *)v80 + 16))
      {
        uint64_t v81 = v185;
        sub_1C0DD9B94(*(void *)v80+ ((*((unsigned __int8 *)v183 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v183 + 80)), v185, (uint64_t (*)(void))sub_1BFEBC130);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C0DD9BFC(v43, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
          swift_release();
          uint64_t v66 = (uint64_t (*)(void))sub_1BFEBC130;
          uint64_t v67 = v81;
        }
        else
        {
          sub_1BFEBE33C();
          uint64_t v91 = v81 + *(int *)(v90 + 48);
          uint64_t v93 = v177;
          uint64_t v92 = v178;
          uint64_t v94 = v179;
          (*(void (**)(char *, uint64_t, uint64_t))(v178 + 32))(v177, v81, v179);
          sub_1C0DD9BFC(v91, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
          id v95 = objc_msgSend(self, sel_sharedApplication);
          id v96 = (void *)sub_1C1515E9C();
          sub_1C018EB74(MEMORY[0x1E4FBC860]);
          type metadata accessor for OpenExternalURLOptionsKey(0);
          sub_1BFEBC394(&qword_1EA1961E8, type metadata accessor for OpenExternalURLOptionsKey);
          uint64_t v97 = (void *)sub_1C151E32C();
          swift_bridgeObjectRelease();
          objc_msgSend(v95, sel_openURL_options_completionHandler_, v96, v97, 0);

          swift_release();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
LABEL_24:
          uint64_t v66 = (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem;
          uint64_t v67 = v43;
        }
        return sub_1C0DD9BFC(v67, v66);
      }
      else
      {
        sub_1C0DD9BFC(v43, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
        return swift_release();
      }
    case 6:
      goto LABEL_24;
    default:
      sub_1C0DD9BFC(v43, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      swift_bridgeObjectRelease();
      return sub_1C0358EDC((uint64_t)(v33 + 1), (unint64_t *)&qword_1EA197F90, (unint64_t *)&unk_1EA1A8CE0, MEMORY[0x1E4FBBDF0]);
  }
}

uint64_t sub_1C0DD5140(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151E16C();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1C151E1DC();
  uint64_t v41 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v40 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v10 = v9 - 8;
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v38 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GroupLayoutBindingContext();
  uint64_t v39 = a2;
  uint64_t v13 = swift_projectBox();
  uint64_t v15 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v16 = a3 + *(int *)(v10 + 36);
  swift_beginAccess();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 48))(v53, v13, v16, v15, v14);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  swift_endAccess();
  uint64_t v18 = v54;
  uint64_t v19 = v55;
  __swift_project_boxed_opaque_existential_1(v53, v54);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 32))(&aBlock, v18, v19);
  LOBYTE(v15) = aBlock;
  uint64_t v20 = v47;
  uint64_t v21 = v48;
  uint64_t v22 = v49;
  uint64_t v23 = v50;
  uint64_t v24 = v52;
  uint64_t v37 = v51;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t v25 = (void *)sub_1C151F56C();
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C0DD9B94(a3, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  unint64_t v27 = (*(unsigned __int8 *)(v38 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v28 = (v11 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v26;
  sub_1C0DD919C((uint64_t)v12, v29 + v27, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  *(void *)(v29 + v28) = v39;
  unint64_t v30 = v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)unint64_t v30 = v15;
  *(_DWORD *)(v30 + 1) = v53[0];
  *(_DWORD *)(v30 + 4) = *(_DWORD *)((char *)v53 + 3);
  *(void *)(v30 + 8) = v20;
  *(void *)(v30 + 16) = v21;
  *(void *)(v30 + 24) = v22;
  *(void *)(v30 + 32) = v23;
  *(void *)(v30 + 40) = v37;
  *(void *)(v30 + 48) = v24;
  uint64_t v50 = sub_1C0DD95E8;
  uint64_t v51 = v29;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v47 = 1107296256;
  uint64_t v48 = sub_1BFC9FC68;
  uint64_t v49 = &block_descriptor_63;
  uint64_t v31 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v32 = v40;
  sub_1C151E19C();
  uint64_t aBlock = v17;
  sub_1BFEBC394((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  sub_1C0DD9298(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1BFD32AD8();
  id v33 = v43;
  uint64_t v34 = v45;
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v32, v33, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v32, v42);
}

void sub_1C0DD570C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GroupLayoutBindingContext();
  uint64_t v13 = swift_projectBox();
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C18C9C60](a1 + 16);
  if (v14)
  {
    uint64_t v15 = (char *)v14;
    id v42 = *(id *)(v14 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_cloudContext);
    uint64_t v16 = *(void *)(v14 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_feedPersonalizer);
    sub_1C0DD9B94(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
    sub_1BFC66384((uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_factory], (uint64_t)v50);
    sub_1C066A1C4();
    uint64_t v18 = &v9[*(int *)(v17 + 48)];
    swift_beginAccess();
    sub_1C0DD9B94(v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    long long v19 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)a4;
    *((_OWORD *)v18 + 1) = v19;
    *((_OWORD *)v18 + 2) = *(_OWORD *)(a4 + 32);
    *((void *)v18 + 6) = *(void *)(a4 + 48);
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = *(void *)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter];
    uint64_t v41 = *(void *)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter + 8];
    sub_1C0668294((uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inventory], (uint64_t)v49);
    sub_1BFC66384((uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_headlineService], (uint64_t)v48);
    sub_1BFC66384((uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tagService], (uint64_t)v47);
    sub_1BFC66384((uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_webEmbedDataSourceService], (uint64_t)v46);
    uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v50, v51);
    uint64_t v40 = &v38;
    __n128 v22 = MEMORY[0x1F4188790](v21);
    uint64_t v39 = v12;
    uint64_t v24 = (uint64_t *)((char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
    uint64_t v26 = *v24;
    uint64_t v44 = type metadata accessor for DebugGroupLayoutViewFactory();
    uint64_t v45 = &off_1F1C29940;
    v43[0] = v26;
    unint64_t v27 = (char *)objc_allocWithZone((Class)type metadata accessor for DebugInspectViewController());
    uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
    __n128 v29 = MEMORY[0x1F4188790](v28);
    uint64_t v31 = (uint64_t *)((char *)&v38 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v32 + 16))(v31, v29);
    uint64_t v33 = *v31;
    id v34 = v42;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    sub_1BFEA0164(a4);
    id v35 = sub_1C0B433CC(v34, v16, (uint64_t)v39, v33, (uint64_t)v9, v20, v41, (uint64_t)v49, (uint64_t)v48, (uint64_t)v47, (uint64_t)v46, v27);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    id v36 = objc_msgSend(v15, sel_navigationController);
    if (v36)
    {
      uint64_t v37 = v36;
      objc_msgSend(v36, sel_pushViewController_animated_, v35, 1);
    }
  }
}

void sub_1C0DD5C98(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9 = a5 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C18C9C60](v9);
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    id v12 = *(id *)(v10 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView);
    uint64_t v13 = (void *)sub_1C151670C();
    id v14 = objc_msgSend(v12, sel_cellForRowAtIndexPath_, v13);

    if (v14)
    {
      id v15 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
      objc_msgSend(v14, sel_setBackgroundColor_, v15);
    }
    uint64_t v16 = *(void *)&v11[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource];
    sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v19 = a7[3];
    uint64_t v18 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v19);
    *(void *)(inited + 32) = (*(uint64_t (**)(uint64_t))(*(void *)(v18 + 8) + 8))(v19);
    *(void *)(inited + 40) = v20;
    swift_beginAccess();
    if (*(void *)(*(void *)(v16 + 64) + 16))
    {
      uint64_t v21 = *(void *)(inited + 32);
      uint64_t v22 = *(void *)(inited + 40);
      swift_bridgeObjectRetain();
      sub_1C05F078C(v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_setDeallocating();
    swift_arrayDestroy();
    a3(1);
  }
}

void sub_1C0DD5EA8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9 = a5 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C18C9C60](v9);
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    id v12 = *(id *)(v10 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView);
    uint64_t v13 = (void *)sub_1C151670C();
    id v14 = objc_msgSend(v12, sel_cellForRowAtIndexPath_, v13);

    if (v14)
    {
      id v15 = objc_msgSend(self, sel_systemRedColor);
      id v16 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.1);

      objc_msgSend(v14, sel_setBackgroundColor_, v16);
    }
    uint64_t v17 = *(void *)&v11[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource];
    sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v20 = a7[3];
    uint64_t v19 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v20);
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    *(void *)(inited + 32) = v31(v20, v21);
    *(void *)(inited + 40) = v22;
    swift_beginAccess();
    if (*(void *)(*(void *)(v17 + 56) + 16))
    {
      uint64_t v23 = v11;
      uint64_t v24 = a3;
      uint64_t v26 = *(void *)(inited + 32);
      uint64_t v25 = *(void *)(inited + 40);
      swift_bridgeObjectRetain();
      uint64_t v27 = v26;
      a3 = v24;
      uint64_t v11 = v23;
      sub_1C05F078C(v27, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_retain();
    uint64_t v28 = v31(v20, v21);
    uint64_t v30 = v29;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BFEFFC1C(&v32, v28, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    a3(1);
  }
}

void sub_1C0DD61B4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9 = a5 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C18C9C60](v9);
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    id v12 = *(id *)(v10 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView);
    uint64_t v13 = (void *)sub_1C151670C();
    id v14 = objc_msgSend(v12, sel_cellForRowAtIndexPath_, v13);

    if (v14)
    {
      id v15 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
      objc_msgSend(v14, sel_setBackgroundColor_, v15);
    }
    uint64_t v16 = *(void *)&v11[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource];
    sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v19 = a7[3];
    uint64_t v18 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v19);
    *(void *)(inited + 32) = (*(uint64_t (**)(uint64_t))(*(void *)(v18 + 8) + 8))(v19);
    *(void *)(inited + 40) = v20;
    swift_beginAccess();
    if (*(void *)(*(void *)(v16 + 56) + 16))
    {
      uint64_t v21 = *(void *)(inited + 32);
      uint64_t v22 = *(void *)(inited + 40);
      swift_bridgeObjectRetain();
      sub_1C05F078C(v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_setDeallocating();
    swift_arrayDestroy();
    a3(1);
  }
}

void sub_1C0DD63C4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9 = a5 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C18C9C60](v9);
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    uint64_t v32 = a3;
    id v12 = *(id *)(v10 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView);
    uint64_t v13 = (void *)sub_1C151670C();
    id v14 = objc_msgSend(v12, sel_cellForRowAtIndexPath_, v13);

    if (v14)
    {
      id v15 = objc_msgSend(self, sel_systemGreenColor);
      id v16 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.1);

      objc_msgSend(v14, sel_setBackgroundColor_, v16);
    }
    uint64_t v17 = OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource;
    uint64_t v19 = a7[3];
    uint64_t v18 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v19);
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
    uint64_t v31 = v21;
    swift_retain();
    uint64_t v22 = v21(v19, v20);
    uint64_t v23 = v11;
    uint64_t v25 = v24;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BFEFFC1C(&v33, v22, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    uint64_t v26 = *(void *)&v23[v17];
    sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    *(void *)(inited + 32) = v31(v19, v20);
    *(void *)(inited + 40) = v28;
    swift_beginAccess();
    if (*(void *)(*(void *)(v26 + 64) + 16))
    {
      uint64_t v29 = *(void *)(inited + 32);
      uint64_t v30 = *(void *)(inited + 40);
      swift_bridgeObjectRetain();
      sub_1C05F078C(v29, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_setDeallocating();
    swift_arrayDestroy();
    v32(1);
  }
}

id sub_1C0DD66B4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v8 = sub_1C151677C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151672C();
  id v12 = a3;
  id v13 = a1;
  id v14 = (void *)a5(v11);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v14;
}

uint64_t type metadata accessor for KeyValueTableViewCell()
{
  return self;
}

uint64_t type metadata accessor for SubtitleTableViewCell()
{
  return self;
}

uint64_t type metadata accessor for RequirementTableViewCell()
{
  return self;
}

uint64_t type metadata accessor for FeedItemTableViewCell()
{
  return self;
}

id sub_1C0DD6B3C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  Class ObjectType = (objc_class *)swift_getObjectType();
  if (a4)
  {
    sub_1C151E62C();
    a4 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  v11.receiver = a1;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, sel_initWithStyle_reuseIdentifier_, a5, a4);

  return v9;
}

uint64_t type metadata accessor for LayoutTableViewCell()
{
  return self;
}

uint64_t type metadata accessor for LoadingTableViewCell()
{
  return self;
}

id sub_1C0DD6E3C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_searchBar);
  id v3 = objc_msgSend(v2, sel_text);

  if (v3)
  {
    uint64_t v4 = sub_1C151E62C();
    uint64_t v6 = v5;

    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource);
    uint64_t v8 = (void *)(v7 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C0DD7258(v9, v4, v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *uint64_t v8 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView), sel_reloadData);
}

void sub_1C0DD6FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v6 = type metadata accessor for DebugInspectViewItem();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v23 = (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  objc_super v11 = (char *)&v19 - v10;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    unint64_t v13 = 0;
    uint64_t v20 = a3;
    uint64_t v21 = a1;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v15 = *(void *)(v7 + 72);
      sub_1C0DD9B94(a1 + v14 + v15 * v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      char v16 = sub_1C06675FC((uint64_t)v11, v24, a3);
      if (v3)
      {
        sub_1C0DD9BFC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1C0DD919C((uint64_t)v11, v23, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F7788(0, *(void *)(v12 + 16) + 1, 1);
        }
        uint64_t v12 = v25;
        unint64_t v18 = *(void *)(v25 + 16);
        unint64_t v17 = *(void *)(v25 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1C05F7788(v17 > 1, v18 + 1, 1);
          uint64_t v12 = v25;
        }
        *(void *)(v12 + 16) = v18 + 1;
        sub_1C0DD919C(v23, v12 + v14 + v18 * v15, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
        a3 = v20;
        a1 = v21;
      }
      else
      {
        sub_1C0DD9BFC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      }
      if (v22 == ++v13) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

void *sub_1C0DD7258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v38 = sub_1C15154CC();
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v41 = v4;
  uint64_t v35 = a4 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection;
  id v36 = (void (**)(char *, uint64_t))(v7 + 8);
  swift_bridgeObjectRetain();
  v34[1] = a1;
  uint64_t v10 = (unsigned __int8 *)(a1 + 72);
  objc_super v11 = (void *)MEMORY[0x1E4FBC860];
  id v42 = "or";
  uint64_t v43 = "candidateScoredItems";
  v34[2] = 0x80000001C1600C40;
  while (2)
  {
    uint64_t v13 = *((void *)v10 - 5);
    uint64_t v12 = *((void *)v10 - 4);
    uint64_t v14 = *((void *)v10 - 2);
    uint64_t v15 = *((void *)v10 - 1);
    uint64_t v16 = *v10;
    uint64_t v48 = *((void *)v10 - 3);
    uint64_t v45 = v16;
    switch(v16)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
        char v17 = sub_1C1520A9C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_6;
        }
        uint64_t v25 = v15;
        goto LABEL_14;
      default:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_6:
        uint64_t v44 = v13;
        uint64_t v46 = v39;
        uint64_t v47 = v40;
        unint64_t v18 = v37;
        sub_1C151545C();
        sub_1BFF27ECC();
        uint64_t v19 = sub_1C151FE9C();
        unint64_t v21 = v20;
        (*v36)(v18, v38);
        uint64_t v22 = HIBYTE(v21) & 0xF;
        if ((v21 & 0x2000000000000000) == 0) {
          uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
        }
        if (v22)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v23 = v41;
          sub_1C0DD6FD0(v15, v19, v21);
          uint64_t v25 = v24;
          uint64_t v41 = v23;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v26 = *(void *)(v35 + 8);
          uint64_t v27 = *(void *)(v35 + 16);
          uint64_t v28 = *(void *)(v35 + 24);
          uint64_t v25 = *(void *)(v35 + 32);
          uint64_t v29 = *(unsigned __int8 *)(v35 + 40);
          uint64_t v44 = *(void *)v35;
          uint64_t v45 = v29;
          uint64_t v48 = v27;
          sub_1C0DD76E8(v44, v26, v27, v28, v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v25) {
            goto LABEL_19;
          }
          uint64_t v12 = v26;
          uint64_t v14 = v28;
        }
        uint64_t v13 = v44;
LABEL_14:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          objc_super v11 = sub_1C0EE6090(0, v11[2] + 1, 1, v11);
        }
        unint64_t v31 = v11[2];
        unint64_t v30 = v11[3];
        if (v31 >= v30 >> 1) {
          objc_super v11 = sub_1C0EE6090((void *)(v30 > 1), v31 + 1, 1, v11);
        }
        _OWORD v11[2] = v31 + 1;
        uint64_t v32 = &v11[6 * v31];
        uint64_t v32[4] = v13;
        v32[5] = v12;
        v32[6] = v48;
        void v32[7] = v14;
        _OWORD v32[8] = v25;
        *((unsigned char *)v32 + 72) = v45;
LABEL_19:
        v10 += 48;
        if (--v9) {
          continue;
        }
        swift_bridgeObjectRelease();
        break;
    }
    return v11;
  }
}

uint64_t sub_1C0DD76E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

id sub_1C0DD7738(uint64_t a1)
{
  uint64_t v3 = sub_1C151677C();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v58 + 64);
  MEMORY[0x1F4188790](v3);
  __n128 v57 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DebugInspectViewItem();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (long long *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  objc_super v11 = (char *)&v55 - v10;
  uint64_t v56 = v1;
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource);
  uint64_t v13 = (void **)(v12 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  uint64_t v14 = *v13;
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1C151676C();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v15 >= v14[2])
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v55 = v3;
  uint64_t v59 = v11;
  objc_super v11 = (char *)v14[6 * v15 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v16 = sub_1C151675C();
  if ((v16 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v16 >= *((void *)v11 + 2))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v17 = (uint64_t)v59;
  sub_1C0DD9B94((uint64_t)&v11[((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16], (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  swift_bridgeObjectRelease();
  sub_1C0DD9B94(v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1BFC773DC(v8, (uint64_t)v67);
    swift_beginAccess();
    uint64_t v18 = *(void *)(v12 + 64);
    uint64_t v19 = v68;
    uint64_t v20 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    swift_bridgeObjectRetain();
    uint64_t v23 = v22(v19, v21);
    LOBYTE(v19) = sub_1BFF896B4(v23, v24, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v26 = v58;
    uint64_t v27 = v57;
    uint64_t v28 = a1;
    uint64_t v29 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v28, v55);
    uint64_t v30 = v4 + 7;
    if (v19)
    {
      sub_1BFC66384((uint64_t)v67, (uint64_t)v66);
      unint64_t v31 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      unint64_t v32 = (v30 + v31) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v25;
      (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v33 + v31, v27, v29);
      sub_1BFC773DC(v66, v33 + v32);
      swift_retain();
      id v34 = (void *)sub_1C151E5EC();
      id v64 = sub_1C0DD8CA8;
      uint64_t v65 = v33;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v61 = 1107296256;
      id v62 = sub_1C0DCD1E4;
      id v63 = &block_descriptor_50_1;
      uint64_t v35 = _Block_copy(&aBlock);
      id v36 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 0, v34, v35);

      _Block_release(v35);
      swift_release();
      swift_release();
      id v37 = objc_msgSend(self, sel_systemGrayColor);
      objc_msgSend(v36, sel_setBackgroundColor_, v37);

      uint64_t v38 = (void *)sub_1C151E5EC();
      id v39 = objc_msgSend(self, sel_systemImageNamed_, v38);

      objc_msgSend(v36, sel_setImage_, v39);
      sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_1C15320E0;
      *(void *)(v40 + 32) = v36;
      uint64_t aBlock = v40;
      sub_1C151EBEC();
      sub_1BFC39268(0, (unint64_t *)&unk_1EA1A5F60);
      id v41 = v36;
      id v42 = (void *)sub_1C151EBAC();
      swift_bridgeObjectRelease();
      id v43 = objc_msgSend(self, sel_configurationWithActions_, v42);

      uint64_t v44 = (uint64_t)v59;
LABEL_11:
      sub_1C0DD9BFC(v44, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      return v43;
    }
    sub_1BFC66384((uint64_t)v67, (uint64_t)v66);
    unint64_t v45 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    unint64_t v46 = (v30 + v45) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v47 + v45, v27, v29);
    sub_1BFC773DC(v66, v47 + v46);
    swift_retain();
    uint64_t v48 = (void *)sub_1C151E5EC();
    id v64 = sub_1C0DD8BA4;
    uint64_t v65 = v47;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v61 = 1107296256;
    id v62 = sub_1C0DCD1E4;
    id v63 = &block_descriptor_43_0;
    uint64_t v49 = _Block_copy(&aBlock);
    uint64_t v14 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 0, v48, v49);

    _Block_release(v49);
    swift_release();
    swift_release();
    id v50 = objc_msgSend(self, sel_systemRedColor);
    objc_msgSend(v14, sel_setBackgroundColor_, v50);

    objc_super v11 = v59;
    if (qword_1EB85EF00 == -1)
    {
LABEL_10:
      objc_msgSend(v14, sel_setImage_, qword_1EB85DE60);
      sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_1C15320E0;
      *(void *)(v51 + 32) = v14;
      uint64_t aBlock = v51;
      sub_1C151EBEC();
      sub_1BFC39268(0, (unint64_t *)&unk_1EA1A5F60);
      uint64_t v52 = v14;
      uint64_t v53 = (void *)sub_1C151EBAC();
      swift_bridgeObjectRelease();
      id v43 = objc_msgSend(self, sel_configurationWithActions_, v53);

      uint64_t v44 = (uint64_t)v11;
      goto LABEL_11;
    }
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  sub_1C0DD9BFC(v17, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  sub_1C0DD9BFC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  return 0;
}

id sub_1C0DD807C(uint64_t a1)
{
  uint64_t v3 = sub_1C151677C();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v58 + 64);
  MEMORY[0x1F4188790](v3);
  __n128 v57 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DebugInspectViewItem();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (long long *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  objc_super v11 = (char *)&v55 - v10;
  uint64_t v56 = v1;
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource);
  uint64_t v13 = (void **)(v12 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  uint64_t v14 = *v13;
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1C151676C();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v15 >= v14[2])
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v55 = v3;
  uint64_t v59 = v11;
  objc_super v11 = (char *)v14[6 * v15 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v16 = sub_1C151675C();
  if ((v16 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v16 >= *((void *)v11 + 2))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v17 = (uint64_t)v59;
  sub_1C0DD9B94((uint64_t)&v11[((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16], (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  swift_bridgeObjectRelease();
  sub_1C0DD9B94(v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1BFC773DC(v8, (uint64_t)v67);
    swift_beginAccess();
    uint64_t v18 = *(void *)(v12 + 56);
    uint64_t v19 = v68;
    uint64_t v20 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    swift_bridgeObjectRetain();
    uint64_t v23 = v22(v19, v21);
    LOBYTE(v19) = sub_1BFF896B4(v23, v24, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v26 = v58;
    uint64_t v27 = v57;
    uint64_t v28 = a1;
    uint64_t v29 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v28, v55);
    uint64_t v30 = v4 + 7;
    if (v19)
    {
      sub_1BFC66384((uint64_t)v67, (uint64_t)v66);
      unint64_t v31 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      unint64_t v32 = (v30 + v31) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v25;
      (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v33 + v31, v27, v29);
      sub_1BFC773DC(v66, v33 + v32);
      swift_retain();
      id v34 = (void *)sub_1C151E5EC();
      id v64 = sub_1C0DD8B50;
      uint64_t v65 = v33;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v61 = 1107296256;
      id v62 = sub_1C0DCD1E4;
      id v63 = &block_descriptor_33_0;
      uint64_t v35 = _Block_copy(&aBlock);
      id v36 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 0, v34, v35);

      _Block_release(v35);
      swift_release();
      swift_release();
      id v37 = objc_msgSend(self, sel_systemGrayColor);
      objc_msgSend(v36, sel_setBackgroundColor_, v37);

      uint64_t v38 = (void *)sub_1C151E5EC();
      id v39 = objc_msgSend(self, sel_systemImageNamed_, v38);

      objc_msgSend(v36, sel_setImage_, v39);
      sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_1C15320E0;
      *(void *)(v40 + 32) = v36;
      uint64_t aBlock = v40;
      sub_1C151EBEC();
      sub_1BFC39268(0, (unint64_t *)&unk_1EA1A5F60);
      id v41 = v36;
      id v42 = (void *)sub_1C151EBAC();
      swift_bridgeObjectRelease();
      id v43 = objc_msgSend(self, sel_configurationWithActions_, v42);

      uint64_t v44 = (uint64_t)v59;
LABEL_11:
      sub_1C0DD9BFC(v44, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      return v43;
    }
    sub_1BFC66384((uint64_t)v67, (uint64_t)v66);
    unint64_t v45 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    unint64_t v46 = (v30 + v45) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v47 + v45, v27, v29);
    sub_1BFC773DC(v66, v47 + v46);
    swift_retain();
    uint64_t v48 = (void *)sub_1C151E5EC();
    id v64 = sub_1C0DD8B34;
    uint64_t v65 = v47;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v61 = 1107296256;
    id v62 = sub_1C0DCD1E4;
    id v63 = &block_descriptor_65;
    uint64_t v49 = _Block_copy(&aBlock);
    uint64_t v14 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 0, v48, v49);

    _Block_release(v49);
    swift_release();
    swift_release();
    id v50 = objc_msgSend(self, sel_systemGreenColor);
    objc_msgSend(v14, sel_setBackgroundColor_, v50);

    objc_super v11 = v59;
    if (qword_1EB85EF10 == -1)
    {
LABEL_10:
      objc_msgSend(v14, sel_setImage_, qword_1EB85C2C0);
      sub_1BFE4F870(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_1C15320E0;
      *(void *)(v51 + 32) = v14;
      uint64_t aBlock = v51;
      sub_1C151EBEC();
      sub_1BFC39268(0, (unint64_t *)&unk_1EA1A5F60);
      uint64_t v52 = v14;
      uint64_t v53 = (void *)sub_1C151EBAC();
      swift_bridgeObjectRelease();
      id v43 = objc_msgSend(self, sel_configurationWithActions_, v53);

      uint64_t v44 = (uint64_t)v11;
      goto LABEL_11;
    }
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  sub_1C0DD9BFC(v17, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  sub_1C0DD9BFC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
  return 0;
}

char *sub_1C0DD89C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  Class ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed20LoadingTableViewCell_activityIndicatorView;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1400]);
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a2)
  {
    uint64_t v9 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v15.receiver = v8;
  v15.super_class = ObjectType;
  id v10 = objc_msgSendSuper2(&v15, sel_initWithStyle_reuseIdentifier_, 3, v9);

  objc_super v11 = (char *)v10;
  id v12 = objc_msgSend(v11, sel_contentView);
  id v13 = *(id *)&v11[OBJC_IVAR____TtC8NewsFeed20LoadingTableViewCell_activityIndicatorView];
  objc_msgSend(v12, sel_addSubview_, v13);

  return v11;
}

uint64_t sub_1C0DD8AF8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0DD8B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0DD8CC0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1C0DD63C4);
}

uint64_t sub_1C0DD8B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0DD8CC0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1C0DD61B4);
}

uint64_t sub_1C0DD8B68()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C0DD8BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0DD8CC0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1C0DD5EA8);
}

uint64_t objectdestroy_25Tm_0()
{
  uint64_t v1 = sub_1C151677C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + v4);
  return swift_deallocObject();
}

uint64_t sub_1C0DD8CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0DD8CC0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1C0DD5C98);
}

uint64_t sub_1C0DD8CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v10 = *(void *)(sub_1C151677C() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v5 + 16);
  uint64_t v13 = v5 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a5(a1, a2, a3, a4, v12, v5 + v11, v13);
}

uint64_t sub_1C0DD8D9C(uint64_t a1, uint64_t a2)
{
  sub_1C0DD9298(0, &qword_1EA19B648, MEMORY[0x1E4FAD7D8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0DD8E30(uint64_t a1, uint64_t a2)
{
  sub_1C0DD9298(0, &qword_1EA19B648, MEMORY[0x1E4FAD7D8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0DD8EC4()
{
  uint64_t v1 = (int *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 16);
  unint64_t v4 = v0 + v2 + v1[8];
  __swift_destroy_boxed_opaque_existential_1(v4 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v5 = v4 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  uint64_t v6 = sub_1C151787C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v2 + v1[9];
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  unint64_t v10 = v7 + *(int *)(v9 + 20);
  uint64_t v11 = sub_1C151757C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  unint64_t v12 = v7 + *(int *)(v9 + 24);
  if (*(void *)(v12 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v13 = v12 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v14 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_1C151B62C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C0DD919C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0DD9204()
{
  uint64_t v1 = *(void *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1C0DD5140((void *)(v0 + 16), v2, v3);
}

void sub_1C0DD9298(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0DD92FC()
{
  uint64_t v1 = (int *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 16);
  unint64_t v3 = v0 + v2 + v1[8];
  __swift_destroy_boxed_opaque_existential_1(v3 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v3 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  uint64_t v5 = sub_1C151787C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v2 + v1[9];
  uint64_t v7 = sub_1C151772C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  unint64_t v9 = v6 + *(int *)(v8 + 20);
  uint64_t v10 = sub_1C151757C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  unint64_t v11 = v6 + *(int *)(v8 + 24);
  if (*(void *)(v11 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v12 = v11 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v13 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    uint64_t v14 = sub_1C151B62C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0DD95E8()
{
  uint64_t v1 = *(void *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + v3);
  sub_1C0DD570C(v4, v0 + v2, v5, v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
}

void sub_1C0DD9688(uint64_t a1)
{
  sub_1C0DD34D0(a1, *(void *)(v1 + 16), (void *)(v1 + 24));
}

uint64_t sub_1C0DD9694()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C0DD96CC(uint64_t a1)
{
  return sub_1C06658A4(a1, v1 + 16);
}

uint64_t sub_1C0DD96E8()
{
  return swift_deallocObject();
}

uint64_t sub_1C0DD9720@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0665BD0(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C0DD973C()
{
  return objectdestroy_77Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0DD9754(void **a1, uint64_t a2)
{
  return sub_1C066605C(a1, a2, (void *)(v2 + 16), *(uint64_t (**)(id))(v2 + 56));
}

uint64_t sub_1C0DD9774(uint64_t a1)
{
  return sub_1C0DD319C(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t objectdestroy_68Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void sub_1C0DD97D8(uint64_t a1)
{
  sub_1C0DD334C(a1, *(void *)(v1 + 16), (void *)(v1 + 24));
}

uint64_t sub_1C0DD97E4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0DD981C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0DD9864(void *a1)
{
  return sub_1C0665738(a1, *(void *)(v1 + 16), (void *)(v1 + 24), *(void (**)(id))(v1 + 64));
}

uint64_t sub_1C0DD9874(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0DD9904()
{
  swift_retain();
  uint64_t v0 = sub_1C0F6DE28();
  swift_release();
  return v0;
}

void sub_1C0DD995C(uint64_t a1, void *a2)
{
  sub_1C0DCE3A4(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_1C0DD9978()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0DD99B8()
{
  return objectdestroy_77Tm(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_77Tm(void (*a1)(void))
{
  __swift_destroy_boxed_opaque_existential_1(v1 + 16);
  a1(*(void *)(v1 + 64));
  return swift_deallocObject();
}

unint64_t sub_1C0DD9A20()
{
  unint64_t result = qword_1EA1AFBE0;
  if (!qword_1EA1AFBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AFBE0);
  }
  return result;
}

uint64_t sub_1C0DD9A74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0DD9AEC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0DD9B24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0DD9298(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0DD9B94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0DD9BFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0DD9C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v5 = sub_1C151635C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  uint64_t v55 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v60 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v71 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v56 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DDC370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v49 - v14;
  uint64_t v16 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v59 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v49 - v20;
  uint64_t v22 = a2;
  uint64_t v23 = a2 + *(int *)(v9 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  sub_1C0DDC3D4(v23 + *(int *)(v24 + 36), (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1C0DDC468((uint64_t)v15);
    sub_1C0DDC4F4();
    swift_allocError();
    *uint64_t v25 = 1;
    return swift_willThrow();
  }
  sub_1C0DDC548((uint64_t)v15, (uint64_t)v21, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
  unint64_t v27 = sub_1C0F52A38(0, 0, 0, 0, 0);
  unint64_t v28 = v27;
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_5;
    }
  }
  else if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    uint64_t v29 = v56;
    sub_1BFF1B144(a1, v56, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    uint64_t v51 = type metadata accessor for GroupLayoutContext;
    uint64_t v52 = v22;
    sub_1BFF1B144(v22, v71, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    sub_1C151634C();
    uint64_t v53 = v28;
    uint64_t v30 = sub_1C151633C();
    uint64_t v50 = v31;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v54);
    uint64_t v69 = &type metadata for PluginGroupLayoutFactory;
    unint64_t v32 = sub_1C0185CA8();
    unint64_t v70 = v32;
    type metadata accessor for GroupLayoutKey();
    uint64_t v33 = swift_allocObject();
    uint64_t v66 = sub_1C1520FAC();
    uint64_t v67 = v34;
    uint64_t v64 = 95;
    unint64_t v65 = 0xE100000000000000;
    uint64_t v62 = 45;
    unint64_t v63 = 0xE100000000000000;
    sub_1BFF27ECC();
    uint64_t v35 = sub_1C151FEBC();
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    *(void *)(v33 + 16) = v35;
    *(void *)(v33 + 24) = v37;
    uint64_t v38 = (uint64_t *)(v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    uint64_t v39 = v50;
    uint64_t *v38 = v30;
    v38[1] = v39;
    sub_1BFC66384((uint64_t)&v68, v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    uint64_t v40 = v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1C0DDC548(v29, v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v40, 0, 1, v58);
    uint64_t v41 = v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    uint64_t v42 = v71;
    sub_1C0DDC548(v71, v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v41, 0, 1, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
    uint64_t v43 = v59;
    sub_1BFF1B144((uint64_t)v21, v59, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BFF1B144(v52, v42, (uint64_t (*)(void))v51);
    uint64_t v69 = &type metadata for PluginGroupLayoutFactory;
    unint64_t v70 = v32;
    sub_1C0DDD504((uint64_t)v21, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    uint64_t v44 = (int *)type metadata accessor for PluginGroupLayoutFactory.Bound(0);
    unint64_t v45 = v61;
    v61[3] = (uint64_t)v44;
    v45[4] = sub_1BFE1328C(&qword_1EB86CB98, (void (*)(uint64_t))type metadata accessor for PluginGroupLayoutFactory.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v45);
    uint64_t *boxed_opaque_existential_0 = v53;
    sub_1C0DDC548(v43, (uint64_t)boxed_opaque_existential_0 + v44[5], type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0DDC548(v42, (uint64_t)boxed_opaque_existential_0 + v44[6], (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t result = sub_1BFC773DC(&v68, (uint64_t)boxed_opaque_existential_0 + v44[7]);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v44[8]) = v33;
    return result;
  }
  swift_bridgeObjectRelease();
  sub_1C0DDC4F4();
  swift_allocError();
  unsigned char *v48 = 0;
  swift_willThrow();
  return sub_1C0DDD504((uint64_t)v21, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
}

double sub_1C0DDA3D4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *v2;
  uint64_t v24 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0184A5C((void (*)(uint64_t *))sub_1C0DDE228, (uint64_t)v23, v8);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F8], v4);
  uint64_t v22 = v9;
  sub_1C0DDE494(0, &qword_1EB86C230, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v10 = sub_1C1517BEC();
  type metadata accessor for PluginGroupLayoutFactory.Bound(0);
  uint64_t v21 = v10;
  uint64_t v11 = sub_1C1517BFC();
  v19[1] = v19;
  *(_OWORD *)uint64_t v20 = v26;
  uint64_t v12 = v27;
  uint64_t v13 = v28;
  uint64_t v25 = v29;
  *(void *)&long long v26 = v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C0DDC370(0, &qword_1EB86DDD8, type metadata accessor for PluginLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1C0DDC370(0, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, v14);
  sub_1C0DDE2AC((unint64_t *)&unk_1EB86DDE0, &qword_1EB86DDD8, type metadata accessor for PluginLayout.Context);
  sub_1C0DDE2AC(&qword_1EB86B348, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect);
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v26 = v15;
  sub_1C0DDE310();
  sub_1BFE1328C((unint64_t *)&qword_1EB879CC0, (void (*)(uint64_t))sub_1C0DDE310);
  sub_1BFEB0FD4();
  uint64_t v16 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  double result = v20[0];
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v20;
  *(void *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v13;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 40) = v16;
  *(void *)(a1 + 48) = v18;
  return result;
}

uint64_t sub_1C0DDA7A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151B7AC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  uint64_t v14 = type metadata accessor for PluginGroupLayoutFactory.Bound(0);
  sub_1BFF1B144(a2 + *(int *)(v14 + 20), (uint64_t)v8, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
  sub_1C151A0AC();
  uint64_t v15 = sub_1C151B62C();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v8, v15);
  *(void *)a3 = v13;
  uint64_t v16 = type metadata accessor for PluginLayout.Context(0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&a3[*(int *)(v16 + 20)], v12, v9);
  return swift_retain();
}

uint64_t sub_1C0DDA958(uint64_t a1, uint64_t a2)
{
  sub_1C0DDE3D0(0, &qword_1EB86C238, (uint64_t (*)(void))sub_1C0DDE250, (uint64_t)&type metadata for PluginLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = &v12[-v8];
  uint64_t v14 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v6 + 104))(&v12[-v8], *MEMORY[0x1E4FAB9E0], v5, v7);
  uint64_t v13 = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0DDE494(0, &qword_1EB86C228, MEMORY[0x1E4FAB6F0]);
  sub_1C0DDE440(&qword_1EB86C220, &qword_1EB86C228, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_1C0DDAB24(uint64_t a1, uint64_t a2)
{
  sub_1C0DDE3D0(0, &qword_1EB86C238, (uint64_t (*)(void))sub_1C0DDE250, (uint64_t)&type metadata for PluginLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v38 = type metadata accessor for PluginLayout.Context(0);
    uint64_t v10 = a2
        + ((*(unsigned __int8 *)(*(void *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v38 - 8) + 80));
    uint64_t v37 = *(void *)(*(void *)(v38 - 8) + 72);
    unsigned int v36 = *MEMORY[0x1E4FAB798];
    unsigned int v34 = *MEMORY[0x1E4FAB9E8];
    unint64_t v32 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v33 = (void (**)(uint64_t *, void, uint64_t))(v6 + 104);
    uint64_t v31 = a2;
    swift_bridgeObjectRetain();
    uint64_t v39 = (uint64_t *)v8;
    uint64_t v35 = v5;
    do
    {
      uint64_t v42 = a1;
      uint64_t KeyPath = swift_getKeyPath();
      sub_1BFF35C38();
      uint64_t v12 = v11;
      uint64_t v40 = swift_allocBox();
      uint64_t v14 = v13;
      uint64_t v15 = (uint64_t *)((char *)v13 + *(int *)(v12 + 48));
      uint64_t v16 = swift_allocObject();
      sub_1C151B79C();
      *(void *)(v16 + 16) = v17;
      *uint64_t v14 = v16;
      uint64_t v18 = sub_1C151786C();
      uint64_t v19 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);
      uint64_t v20 = v10;
      uint64_t v21 = v9;
      uint64_t v22 = v36;
      v19(v14, v36, v18);
      uint64_t v23 = swift_allocObject();
      sub_1C151B79C();
      *(void *)(v23 + 16) = v24;
      *uint64_t v15 = v23;
      uint64_t v25 = v15;
      long long v26 = v39;
      uint64_t v27 = v22;
      uint64_t v28 = v21;
      v19(v25, v27, v18);
      uint64_t v29 = v35;
      *long long v26 = v40;
      (*v33)(v26, v34, v29);
      uint64_t v30 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0DDE494(0, &qword_1EB86C218, MEMORY[0x1E4FAB4D0]);
      sub_1C0DDE440(&qword_1EB86C210, &qword_1EB86C218, v30);
      sub_1BFE1328C(&qword_1EB85C820, sub_1C0AC2B44);
      sub_1C151737C();
      swift_release();
      (*v32)(v26, v29);
      uint64_t v10 = v20 + v37;
      uint64_t v9 = v28 - 1;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0DDAEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  uint64_t v11 = a3[2];
  uint64_t v12 = a3[3];
  sub_1C0DDE368();
  uint64_t v14 = v13;
  uint64_t v15 = swift_allocBox();
  uint64_t v17 = v16;
  uint64_t v18 = *(int *)(v14 + 48);
  sub_1BFF1B144(a2, v16, type metadata accessor for PluginLayout.Context);
  uint64_t v19 = a4 + *(int *)(type metadata accessor for PluginGroupLayoutFactory.Bound(0) + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v21 = *(void *)(v19 + *(int *)(result + 28));
  BOOL v22 = __OFADD__(a1, v21);
  uint64_t v23 = a1 + v21;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    uint64_t v24 = (void *)(v17 + v18);
    *uint64_t v24 = v9;
    v24[1] = v10;
    v24[2] = v11;
    v24[3] = v12;
    v24[4] = v23;
    *a5 = v15 | 0xA000000000000000;
  }
  return result;
}

uint64_t sub_1C0DDAFCC()
{
  return sub_1C0234728(*v0);
}

uint64_t sub_1C0DDAFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFC66384(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1C0DDAFE8(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + *(int *)(a1 + 28)), *(void *)(v1 + *(int *)(a1 + 28) + 24));
  return sub_1C151811C();
}

void sub_1C0DDB028(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 6;
}

uint64_t sub_1C0DDB038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0DD9C88(a1, a2, a3);
}

uint64_t PluginLayout.frame.getter()
{
  return swift_retain();
}

uint64_t PluginLayout.pluginFrames.getter()
{
  return swift_retain();
}

uint64_t PluginLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE125E0(0, (unint64_t *)&qword_1EB871268, MEMORY[0x1E4FAB4F0]);
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0AC2B44(0);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

double PluginLayout.Attributes.frame.getter()
{
  return *(double *)v0;
}

uint64_t PluginLayout.Attributes.pluginFrames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DDB118()
{
  if (*v0) {
    return 0x72466E6967756C70;
  }
  else {
    return 0x656D617266;
  }
}

uint64_t sub_1C0DDB158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0DDC5D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0DDB180(uint64_t a1)
{
  unint64_t v2 = sub_1C0DDB44C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DDB1BC(uint64_t a1)
{
  unint64_t v2 = sub_1C0DDB44C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PluginLayout.Attributes.encode(to:)(void *a1)
{
  sub_1C0DDE3D0(0, &qword_1EA1A7458, (uint64_t (*)(void))sub_1C0DDB44C, (uint64_t)&type metadata for PluginLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - v7;
  long long v14 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v13 = *((void *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DDB44C();
  sub_1C1520F0C();
  long long v15 = v14;
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  char v18 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0DDB4A0();
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&long long v15 = v13;
    char v18 = 1;
    sub_1C0DDC370(0, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E4FBB320]);
    sub_1C0DDB7A0(&qword_1EA1A33A0, (void (*)(void))sub_1C0DDB4A0);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C0DDB44C()
{
  unint64_t result = qword_1EB86C470;
  if (!qword_1EB86C470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C470);
  }
  return result;
}

uint64_t sub_1C0DDB4A0()
{
  return sub_1BFE1328C(&qword_1EA197288, type metadata accessor for CGRect);
}

uint64_t PluginLayout.Attributes.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v18 = a2;
  sub_1C0DDE3D0(0, &qword_1EB86E070, (uint64_t (*)(void))sub_1C0DDB44C, (uint64_t)&type metadata for PluginLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DDB44C();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v18;
    type metadata accessor for CGRect(0);
    char v23 = 0;
    sub_1C0DDB76C();
    sub_1C15206EC();
    uint64_t v11 = v19;
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    uint64_t v14 = v22;
    sub_1C0DDC370(0, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E4FBB320]);
    char v23 = 1;
    sub_1C0DDB7A0((unint64_t *)&unk_1EB85DF60, (void (*)(void))sub_1C0DDB76C);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    uint64_t v16 = v19;
    *uint64_t v10 = v11;
    v10[1] = v12;
    _OWORD v10[2] = v13;
    v10[3] = v14;
    v10[4] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0DDB76C()
{
  return sub_1BFE1328C(&qword_1EB87A290, type metadata accessor for CGRect);
}

uint64_t sub_1C0DDB7A0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0DDC370(255, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0DDB83C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PluginLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1C0DDB854(void *a1)
{
  return PluginLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1C0DDB86C()
{
  sub_1C0DDC6D4();
  return sub_1C151798C();
}

uint64_t PluginLayout.Context.model.getter()
{
  return swift_retain();
}

uint64_t PluginLayout.Context.layoutTransition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PluginLayout.Context(0) + 20);
  uint64_t v4 = sub_1C151B7AC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PluginLayout.Context(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB891090);
}

uint64_t PluginLayout.Metadata.visualRank.getter()
{
  return *(void *)(v0 + 32);
}

unint64_t sub_1C0DDB994()
{
  unint64_t result = qword_1EB86C490;
  if (!qword_1EB86C490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C490);
  }
  return result;
}

unint64_t sub_1C0DDB9EC()
{
  unint64_t result = qword_1EB86C4A8;
  if (!qword_1EB86C4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C4A8);
  }
  return result;
}

unint64_t sub_1C0DDBA44()
{
  unint64_t result = qword_1EB86C4A0;
  if (!qword_1EB86C4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C4A0);
  }
  return result;
}

unint64_t sub_1C0DDBA9C()
{
  unint64_t result = qword_1EB86C488;
  if (!qword_1EB86C488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C488);
  }
  return result;
}

uint64_t sub_1C0DDBAF0@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE125E0(0, (unint64_t *)&qword_1EB871268, MEMORY[0x1E4FAB4F0]);
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0AC2B44(0);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

ValueMetadata *type metadata accessor for PluginLayout()
{
  return &type metadata for PluginLayout;
}

ValueMetadata *type metadata accessor for PluginLayout.Attributes()
{
  return &type metadata for PluginLayout.Attributes;
}

uint64_t *initializeBufferWithCopyOfBuffer for PluginLayout.Context(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C151B7AC();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for PluginLayout.Context(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151B7AC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for PluginLayout.Context(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C151B7AC();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for PluginLayout.Context(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151B7AC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for PluginLayout.Context(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C151B7AC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for PluginLayout.Context(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151B7AC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginLayout.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0DDBF54);
}

uint64_t sub_1C0DDBF54(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151B7AC();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PluginLayout.Context(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0DDC018);
}

void *sub_1C0DDC018(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C151B7AC();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0DDC0C0()
{
  uint64_t result = sub_1C151B7AC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginLayout.Metadata()
{
  return &type metadata for PluginLayout.Metadata;
}

ValueMetadata *type metadata accessor for PluginLayout.Attributes.CodingKeys()
{
  return &type metadata for PluginLayout.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for PluginGroupLayoutFactory()
{
  return &type metadata for PluginGroupLayoutFactory;
}

unint64_t sub_1C0DDC194()
{
  unint64_t result = qword_1EA1A7460;
  if (!qword_1EA1A7460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7460);
  }
  return result;
}

unint64_t sub_1C0DDC1EC()
{
  unint64_t result = qword_1EB86C480;
  if (!qword_1EB86C480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C480);
  }
  return result;
}

unint64_t sub_1C0DDC244()
{
  unint64_t result = qword_1EB86C478;
  if (!qword_1EB86C478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C478);
  }
  return result;
}

unint64_t sub_1C0DDC298(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0DDC2C8();
  unint64_t result = sub_1C0DDC31C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0DDC2C8()
{
  unint64_t result = qword_1EB86CC48;
  if (!qword_1EB86CC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CC48);
  }
  return result;
}

unint64_t sub_1C0DDC31C()
{
  unint64_t result = qword_1EB86CC40;
  if (!qword_1EB86CC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CC40);
  }
  return result;
}

void sub_1C0DDC370(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0DDC3D4(uint64_t a1, uint64_t a2)
{
  sub_1C0DDC370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0DDC468(uint64_t a1)
{
  sub_1C0DDC370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0DDC4F4()
{
  unint64_t result = qword_1EA1A7468;
  if (!qword_1EA1A7468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7468);
  }
  return result;
}

uint64_t sub_1C0DDC548(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PluginGroupLayoutFactory.Bound(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB86CBA0);
}

uint64_t sub_1C0DDC5D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72466E6967756C70 && a2 == 0xEC00000073656D61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C0DDC6D4()
{
  unint64_t result = qword_1EB86C498;
  if (!qword_1EB86C498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C498);
  }
  return result;
}

void *sub_1C0DDC728(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151B62C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v39 = v12;
    uint64_t v40 = v11;
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v43 = a2;
    long long v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1C151772C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v18 = v17[5];
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    uint64_t v21 = sub_1C151757C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = v17[6];
    char v23 = &v14[v22];
    uint64_t v24 = &v15[v22];
    *(_OWORD *)char v23 = *(_OWORD *)&v15[v22];
    unsigned char v23[16] = v15[v22 + 16];
    *(_WORD *)(v23 + 17) = *(_WORD *)&v15[v22 + 17];
    v23[19] = v15[v22 + 19];
    *((_DWORD *)v23 + 5) = *(_DWORD *)&v15[v22 + 20];
    unint64_t v25 = *(void *)&v15[v22 + 24];
    if (v25 >= 2) {
      unint64_t v25 = swift_bridgeObjectRetain();
    }
    *((void *)v23 + 3) = v25;
    uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v27 = *(int *)(v26 + 36);
    __dst = &v23[v27];
    uint64_t v42 = v26;
    uint64_t v28 = &v24[v27];
    uint64_t v29 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      sub_1C0DDC370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v39(__dst, v28, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
    }
    *(void *)&v23[*(int *)(v42 + 40)] = *(void *)&v24[*(int *)(v42 + 40)];
    *(void *)&v14[v17[7]] = *(void *)&v15[v17[7]];
    *(void *)&v14[v17[8]] = *(void *)&v15[v17[8]];
    v14[v17[9]] = v15[v17[9]];
    *(void *)&v14[v17[10]] = *(void *)&v15[v17[10]];
    v14[v17[11]] = v15[v17[11]];
    *(void *)&v14[v17[12]] = *(void *)&v15[v17[12]];
    uint64_t v32 = a3[7];
    uint64_t v33 = (char *)v7 + v32;
    unsigned int v34 = (char *)v43 + v32;
    long long v35 = *(_OWORD *)((char *)v43 + v32 + 24);
    *(_OWORD *)((char *)v7 + v32 + 24) = v35;
    uint64_t v36 = v35;
    uint64_t v37 = **(void (***)(char *, char *, uint64_t))(v35 - 8);
    swift_retain();
    swift_retain();
    v37(v33, v34, v36);
    *(void *)((char *)v7 + a3[8]) = *(void *)((char *)v43 + a3[8]);
  }
  swift_retain();
  return v7;
}

uint64_t sub_1C0DDCAFC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C151B62C();
  char v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v7 + *(int *)(v9 + 20);
  uint64_t v11 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v7 + *(int *)(v9 + 24);
  if (*(void *)(v12 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = v12 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v14 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14)) {
    v6(v13, v5);
  }
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  return swift_release();
}

void *sub_1C0DDCCC8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151B62C();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v38 = v10;
  uint64_t v39 = v9;
  v10(v7, v8, v9);
  uint64_t v40 = a3;
  uint64_t v41 = a2;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v42 = a1;
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  long long v15 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = v15[6];
  uint64_t v21 = &v12[v20];
  uint64_t v22 = &v13[v20];
  *(_OWORD *)uint64_t v21 = *(_OWORD *)&v13[v20];
  v21[16] = v13[v20 + 16];
  *(_WORD *)(v21 + 17) = *(_WORD *)&v13[v20 + 17];
  v21[19] = v13[v20 + 19];
  *((_DWORD *)v21 + 5) = *(_DWORD *)&v13[v20 + 20];
  unint64_t v23 = *(void *)&v13[v20 + 24];
  if (v23 >= 2) {
    unint64_t v23 = swift_bridgeObjectRetain();
  }
  *((void *)v21 + 3) = v23;
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v25 = *(int *)(v24 + 36);
  uint64_t v26 = &v21[v25];
  uint64_t v27 = &v22[v25];
  uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    sub_1C0DDC370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    v38(v26, v27, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  *(void *)&v21[*(int *)(v24 + 40)] = *(void *)&v22[*(int *)(v24 + 40)];
  *(void *)&v12[v15[7]] = *(void *)&v13[v15[7]];
  *(void *)&v12[v15[8]] = *(void *)&v13[v15[8]];
  v12[v15[9]] = v13[v15[9]];
  *(void *)&v12[v15[10]] = *(void *)&v13[v15[10]];
  v12[v15[11]] = v13[v15[11]];
  *(void *)&v12[v15[12]] = *(void *)&v13[v15[12]];
  uint64_t v31 = *(int *)(v40 + 28);
  uint64_t v32 = (char *)v42 + v31;
  uint64_t v33 = (char *)v41 + v31;
  long long v34 = *(_OWORD *)((char *)v41 + v31 + 24);
  *(_OWORD *)((char *)v42 + v31 + 24) = v34;
  uint64_t v35 = v34;
  uint64_t v36 = **(void (***)(char *, char *, uint64_t))(v34 - 8);
  swift_retain();
  swift_retain();
  v36(v32, v33, v35);
  *(void *)((char *)v42 + *(int *)(v40 + 32)) = *(void *)((char *)v41 + *(int *)(v40 + 32));
  swift_retain();
  return v42;
}

void *sub_1C0DDD050(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151B62C();
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  uint64_t v37 = *(void (**)(char *, char *))(v38 + 24);
  v37(v7, v8);
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  unint64_t v45 = a1;
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = type metadata accessor for GroupLayoutContext();
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v40 = (int *)v14;
  uint64_t v19 = *(int *)(v14 + 24);
  uint64_t v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  long long v22 = *(_OWORD *)&v12[v19];
  v20[16] = v12[v19 + 16];
  *(_OWORD *)uint64_t v20 = v22;
  v20[17] = v12[v19 + 17];
  v20[18] = v12[v19 + 18];
  v20[19] = v12[v19 + 19];
  v20[20] = v12[v19 + 20];
  v20[21] = v12[v19 + 21];
  v20[22] = v12[v19 + 22];
  v20[23] = v12[v19 + 23];
  unint64_t v23 = (unint64_t *)&v11[v19 + 24];
  unint64_t v24 = *(void *)&v12[v19 + 24];
  if (*v23 >= 2)
  {
    if (v24 >= 2)
    {
      *unint64_t v23 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0DDD504((uint64_t)(v20 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *unint64_t v23 = *((void *)v21 + 3);
    }
  }
  else
  {
    *unint64_t v23 = v24;
    if (v24 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v42 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v25 = *(int *)(v42 + 36);
  uint64_t v26 = (uint64_t)&v20[v25];
  uint64_t v27 = &v21[v25];
  uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  uint64_t v41 = v26;
  LODWORD(v26) = v30(v26, 1, v28);
  int v31 = v30((uint64_t)v27, 1, v28);
  if (v26)
  {
    if (!v31)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v41, v27, v39);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v41, 0, 1, v28);
      goto LABEL_16;
    }
    sub_1C0DDC370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
    long long v34 = (void *)v41;
  }
  else
  {
    if (!v31)
    {
      ((void (*)(uint64_t, char *, uint64_t))v37)(v41, v27, v39);
      goto LABEL_16;
    }
    sub_1C0DDD504(v41, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0DDC370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v33 = *(void *)(*(void *)(v35 - 8) + 64);
    long long v34 = (void *)v41;
  }
  memcpy(v34, v27, v33);
LABEL_16:
  *(void *)&v20[*(int *)(v42 + 40)] = *(void *)&v21[*(int *)(v42 + 40)];
  *(void *)&v11[v40[7]] = *(void *)&v12[v40[7]];
  *(void *)&v11[v40[8]] = *(void *)&v12[v40[8]];
  v11[v40[9]] = v12[v40[9]];
  *(void *)&v11[v40[10]] = *(void *)&v12[v40[10]];
  swift_retain();
  swift_release();
  v11[v40[11]] = v12[v40[11]];
  *(void *)&v11[v40[12]] = *(void *)&v12[v40[12]];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((void *)((char *)v45 + *(int *)(v43 + 28)), (void *)((char *)v44 + *(int *)(v43 + 28)));
  *(void *)((char *)v45 + *(int *)(v43 + 32)) = *(void *)((char *)v44 + *(int *)(v43 + 32));
  swift_retain();
  swift_release();
  return v45;
}

uint64_t sub_1C0DDD504(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1C0DDD564(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151B62C();
  long long v34 = *(void (**)(char *, char *))(*(void *)(v9 - 8) + 32);
  uint64_t v35 = v9;
  v34(v7, v8);
  uint64_t v37 = a3;
  uint64_t v38 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  *(_OWORD *)uint64_t v20 = *(_OWORD *)&v12[v19];
  v20[16] = v12[v19 + 16];
  *(_WORD *)(v20 + 17) = *(_WORD *)&v12[v19 + 17];
  v20[19] = v12[v19 + 19];
  *((_DWORD *)v20 + 5) = *(_DWORD *)&v12[v19 + 20];
  *((void *)v20 + 3) = *(void *)&v12[v19 + 24];
  uint64_t v22 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v23 = *(int *)(v22 + 36);
  __dst = &v20[v23];
  unint64_t v24 = &v21[v23];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    sub_1C0DDC370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v34)(__dst, v24, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
  }
  *(void *)&v20[*(int *)(v22 + 40)] = *(void *)&v21[*(int *)(v22 + 40)];
  *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
  *(void *)&v11[v14[8]] = *(void *)&v12[v14[8]];
  v11[v14[9]] = v12[v14[9]];
  *(void *)&v11[v14[10]] = *(void *)&v12[v14[10]];
  v11[v14[11]] = v12[v14[11]];
  *(void *)&v11[v14[12]] = *(void *)&v12[v14[12]];
  uint64_t v28 = *(int *)(v37 + 28);
  uint64_t v29 = *(int *)(v37 + 32);
  uint64_t v30 = (char *)a1 + v28;
  int v31 = (char *)v38 + v28;
  long long v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  *((void *)v30 + 4) = *((void *)v31 + 4);
  *(void *)((char *)a1 + v29) = *(void *)((char *)v38 + v29);
  return a1;
}

void *sub_1C0DDD880(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151B62C();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  uint64_t v40 = *(void (**)(char *, char *))(v41 + 40);
  v40(v7, v8);
  uint64_t v46 = a3;
  uint64_t v47 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v48 = a1;
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = type metadata accessor for GroupLayoutContext();
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v43 = (int *)v14;
  uint64_t v19 = *(int *)(v14 + 24);
  uint64_t v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  *(_OWORD *)uint64_t v20 = *(_OWORD *)&v12[v19];
  v20[16] = v12[v19 + 16];
  v20[17] = v12[v19 + 17];
  v20[18] = v12[v19 + 18];
  v20[19] = v12[v19 + 19];
  v20[20] = v12[v19 + 20];
  v20[21] = v12[v19 + 21];
  v20[22] = v12[v19 + 22];
  v20[23] = v12[v19 + 23];
  uint64_t v22 = (unint64_t *)&v11[v19 + 24];
  unint64_t v23 = *(void *)&v12[v19 + 24];
  if (*v22 < 2) {
    goto LABEL_4;
  }
  if (v23 < 2)
  {
    sub_1C0DDD504((uint64_t)v22, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v23 = *((void *)v21 + 3);
LABEL_4:
    unint64_t *v22 = v23;
    goto LABEL_6;
  }
  unint64_t *v22 = v23;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v45 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v45 + 36);
  uint64_t v25 = (uint64_t)&v20[v24];
  uint64_t v26 = &v21[v24];
  uint64_t v27 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  uint64_t v44 = v25;
  LODWORD(v25) = v29(v25, 1, v27);
  int v30 = v29((uint64_t)v26, 1, v27);
  if (v25)
  {
    if (!v30)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v44, v26, v42);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v44, 0, 1, v27);
      goto LABEL_14;
    }
    sub_1C0DDC370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v32 = *(void *)(*(void *)(v31 - 8) + 64);
    size_t v33 = (void *)v44;
  }
  else
  {
    if (!v30)
    {
      ((void (*)(uint64_t, char *, uint64_t))v40)(v44, v26, v42);
      goto LABEL_14;
    }
    sub_1C0DDD504(v44, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0DDC370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v32 = *(void *)(*(void *)(v34 - 8) + 64);
    size_t v33 = (void *)v44;
  }
  memcpy(v33, v26, v32);
LABEL_14:
  *(void *)&v20[*(int *)(v45 + 40)] = *(void *)&v21[*(int *)(v45 + 40)];
  *(void *)&v11[v43[7]] = *(void *)&v12[v43[7]];
  *(void *)&v11[v43[8]] = *(void *)&v12[v43[8]];
  v11[v43[9]] = v12[v43[9]];
  *(void *)&v11[v43[10]] = *(void *)&v12[v43[10]];
  swift_release();
  v11[v43[11]] = v12[v43[11]];
  *(void *)&v11[v43[12]] = *(void *)&v12[v43[12]];
  swift_release();
  uint64_t v35 = *(int *)(v46 + 28);
  uint64_t v36 = (char *)v48 + v35;
  uint64_t v37 = (char *)v47 + v35;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48 + v35);
  long long v38 = *((_OWORD *)v37 + 1);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *((_OWORD *)v36 + 1) = v38;
  *((void *)v36 + 4) = *((void *)v37 + 4);
  *(void *)((char *)v48 + *(int *)(v46 + 32)) = *(void *)((char *)v47 + *(int *)(v46 + 32));
  swift_release();
  return v48;
}

uint64_t sub_1C0DDDD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0DDDD18);
}

uint64_t sub_1C0DDDD18(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for GroupLayoutContext();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C0DDDE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0DDDE58);
}

void *sub_1C0DDDE58(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for GroupLayoutContext();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1C0DDDF84()
{
  uint64_t result = sub_1C151B62C();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for GroupLayoutContext();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *_s8NewsFeed12PluginLayoutV10AttributesV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DDE140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginGroupLayoutFactory.PluginGroupLayoutFactoryError()
{
  return &type metadata for PluginGroupLayoutFactory.PluginGroupLayoutFactoryError;
}

unint64_t sub_1C0DDE17C()
{
  unint64_t result = qword_1EA1A7470;
  if (!qword_1EA1A7470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7470);
  }
  return result;
}

uint64_t sub_1C0DDE1D0(uint64_t a1)
{
  uint64_t result = sub_1BFE1328C(&qword_1EB86CB90, (void (*)(uint64_t))type metadata accessor for PluginGroupLayoutFactory.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0DDE228@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1C0DDA7A4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C0DDE248(uint64_t a1)
{
  return sub_1C0DDA958(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C0DDE250()
{
  unint64_t result = qword_1EB86C4B8;
  if (!qword_1EB86C4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C4B8);
  }
  return result;
}

uint64_t sub_1C0DDE2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unint64_t *a4@<X8>)
{
  return sub_1C0DDAEF0(a1, a2, a3, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0DDE2AC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0DDC370(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0DDE310()
{
  if (!qword_1EB879CB0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879CB0);
    }
  }
}

void sub_1C0DDE368()
{
  if (!qword_1EB86C4B0)
  {
    type metadata accessor for PluginLayout.Context(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86C4B0);
    }
  }
}

void sub_1C0DDE3D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1C0DDE438(uint64_t a1)
{
  sub_1C0DDAB24(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0DDE440(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0DDE494(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0DDE484()
{
  return swift_deallocObject();
}

void sub_1C0DDE494(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for PluginLayout;
    v8[1] = &type metadata for PluginLayout.Attributes;
    v8[2] = sub_1C0DDE250();
    v8[3] = sub_1C0DDC6D4();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

NewsFeed::FormatArticleStoryType_optional __swiftcall FormatArticleStoryType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FormatArticleStoryType.rawValue.getter()
{
  uint64_t result = 0x6C616D726F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79726F7453706F74;
      break;
    case 2:
      uint64_t result = 0x676E696B61657262;
      break;
    case 3:
      uint64_t result = 0x69706F6C65766564;
      break;
    case 4:
      uint64_t result = 0x64657461647075;
      break;
    case 5:
      uint64_t result = 0x6C61636F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0DDE640()
{
  unint64_t result = qword_1EA1A7478;
  if (!qword_1EA1A7478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7478);
  }
  return result;
}

uint64_t sub_1C0DDE694()
{
  return sub_1C015E760();
}

uint64_t sub_1C0DDE69C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0DDE794()
{
  return sub_1C044E3C8();
}

NewsFeed::FormatArticleStoryType_optional sub_1C0DDE79C(Swift::String *a1)
{
  return FormatArticleStoryType.init(rawValue:)(*a1);
}

void sub_1C0DDE7A8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x6C616D726F6ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x79726F7453706F74;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E696B61657262;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x69706F6C65766564;
      a1[1] = 0xEA0000000000676ELL;
      break;
    case 4:
      *a1 = 0x64657461647075;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 0x6C61636F6CLL;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1C0DDE880(void *a1)
{
  a1[1] = sub_1BFE0E78C();
  a1[2] = sub_1BFCD5EF0();
  unint64_t result = sub_1C0DDE640();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0DDE8B8(unsigned __int8 *a1, char *a2)
{
  return sub_1C1484984(*a1, *a2);
}

uint64_t sub_1C0DDE8C4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0DDE924()
{
  return sub_1C151EAEC();
}

ValueMetadata *type metadata accessor for FormatArticleStoryType()
{
  return &type metadata for FormatArticleStoryType;
}

unint64_t sub_1C0DDE9AC()
{
  unint64_t result = qword_1EB88A608;
  if (!qword_1EB88A608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A608);
  }
  return result;
}

uint64_t FCSportsLeagueType.description.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1C0DDEAA0()
{
  uint64_t result = 0x69737365666F7270;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x6567656C6C6F63;
      break;
    case 3:
      uint64_t result = 0x6C616E6F6974616ELL;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t FormatColorAndExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  swift_retain();
  FormatColorExpression.bindChildren(binder:context:)(a1, a2);
  uint64_t result = swift_release();
  if (!v2)
  {
    swift_retain();
    FormatColorExpression.bindChildren(binder:context:)(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t FormatColorAndExpression.lhsExpression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatColorAndExpression.rhsExpression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1C0DDEC0C(uint64_t a1, uint64_t a2)
{
  return FormatColorAndExpression.bindChildren(binder:context:)(a1, a2);
}

uint64_t sub_1C0DDEC40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 96);
  long long v19 = *v2;
  uint64_t v10 = v3;
  char v11 = v4;
  char v12 = v5;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v14 = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v15 = *(_OWORD *)(a2 + 48);
  long long v16 = v8;
  long long v17 = *(_OWORD *)(a2 + 80);
  uint64_t v18 = v6;
  return sub_1C05CA41C(a1, &v10);
}

uint64_t _s8NewsFeed24FormatColorAndExpressionV2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  unint64_t v7 = *a2;
  uint64_t v8 = v2;
  if (static FormatColorExpression.== infix(_:_:)(&v8, &v7))
  {
    unint64_t v7 = v4;
    uint64_t v8 = v3;
    char v5 = static FormatColorExpression.== infix(_:_:)(&v8, &v7);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_1C0DDED14(uint64_t a1)
{
  unint64_t result = sub_1C0DDED3C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DDED3C()
{
  unint64_t result = qword_1EA1A7480;
  if (!qword_1EA1A7480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7480);
  }
  return result;
}

unint64_t sub_1C0DDED90(void *a1)
{
  a1[1] = sub_1BFD55E88();
  a1[2] = sub_1BFD4DEB4();
  unint64_t result = sub_1C0DDEDC8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DDEDC8()
{
  unint64_t result = qword_1EA1A7488;
  if (!qword_1EA1A7488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7488);
  }
  return result;
}

uint64_t destroy for FormatColorAndExpression()
{
  swift_release();
  return swift_release();
}

void *_s8NewsFeed24FormatColorAndExpressionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FormatColorAndExpression(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FormatColorAndExpression(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatColorAndExpression()
{
  return &type metadata for FormatColorAndExpression;
}

uint64_t FormatGroupCollection.columns.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1C00B383C(v1);
  swift_bridgeObjectRelease();
  unint64_t v4 = v2;
  sub_1BFF8F94C((uint64_t *)&v4);
  swift_bridgeObjectRelease();
  return (uint64_t)v4;
}

uint64_t FormatGroupCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 16);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1BFEF2D8C(a1, a2);
    if (v9)
    {
      unint64_t v10 = v8;
      uint64_t v11 = *(void *)(v5 + 56);
      sub_1BFFE6334();
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)(v12 - 8);
      sub_1BFFE6274(v11 + *(void *)(v14 + 72) * v10, a3);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
    }
    else
    {
      sub_1BFFE6334();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 1, 1, v18);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BFFE6334();
    long long v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    return v16(a3, 1, 1, v15);
  }
}

uint64_t FormatGroupCollection.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFFE6A6C(0, (unint64_t *)&qword_1EB879D80, MEMORY[0x1E4FBB320]);
  sub_1BFCCF5D8(&qword_1EB85C3A0, &qword_1EB85B6B0);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatGroupCollection.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

NewsFeed::FormatGroupCollection __swiftcall FormatGroupCollection.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v3 = sub_1BFD8C8BC(MEMORY[0x1E4FBC860]);
  unint64_t v4 = (void *)sub_1C0190FB4(v2);
  *uint64_t v1 = v2;
  v1[1] = v4;
  v1[2] = v3;
  result.groupsByIdentifier._rawValue = v6;
  result.groupsByColumn._rawValue = v5;
  result.groups._rawValue = v4;
  return result;
}

unint64_t sub_1C0DDF2E4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v3 = sub_1BFD8C8BC(MEMORY[0x1E4FBC860]);
  unint64_t result = sub_1C0190FB4(v2);
  *a1 = v2;
  a1[1] = result;
  a1[2] = v3;
  return result;
}

__n128 sub_1C0DDF330(unint64_t *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v7[4] = *(_OWORD *)(a2 + 64);
  v7[5] = v3;
  uint64_t v8 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v7[2] = *(_OWORD *)(a2 + 32);
  v7[3] = v5;
  sub_1C113837C(a1, (uint64_t)v7, *v2);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupCollection()
{
  return &type metadata for FormatGroupCollection;
}

ValueMetadata *type metadata accessor for G_V1()
{
  return &type metadata for G_V1;
}

uint64_t sub_1C0DDF398(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0DE24BC(0, &qword_1EA1A7548, (uint64_t (*)(void))sub_1C0DE23A8, (uint64_t)&type metadata for G_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DE23A8();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0DE19D8(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
    sub_1C01BD088(&qword_1EA197D78, (void (*)(void))sub_1C01BD118);
    sub_1C152080C();
    *(void *)&v12[0] = *(void *)(v3 + 40);
    char v13 = 2;
    sub_1C0AC2894(0, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E4FBB320]);
    sub_1C0DE23FC(&qword_1EA1A33A0, &qword_1EA197288);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0DDF6A4(uint64_t a1)
{
  unint64_t v2 = sub_1C0DE23A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DDF6E0(uint64_t a1)
{
  unint64_t v2 = sub_1C0DE23A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0DDF71C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0DE1FDC(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C0DDF760(void *a1)
{
  return sub_1C0DDF398(a1);
}

uint64_t sub_1C0DDF778()
{
  sub_1C0DE1AA0();
  return sub_1C151798C();
}

uint64_t sub_1C0DDF7F4@<X0>(uint64_t *a1@<X8>)
{
  sub_1C0DE1F40(0, (unint64_t *)&qword_1EB871268, MEMORY[0x1E4FAB4F0]);
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0DE24BC(0, &qword_1EB85C818, (uint64_t (*)(void))sub_1C01BC9AC, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t v3 = sub_1C151775C();
  sub_1C0AC2B44(0);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = result;
  return result;
}

uint64_t sub_1C0DDF8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v45 = a1;
  uint64_t v46 = a3;
  unint64_t v39 = sub_1C151635C();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for GroupLayoutContext();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  long long v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v38 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  char v12 = *v3;
  int v40 = *v3;
  char v13 = (void *)*((void *)v3 + 1);
  unsigned __int8 v14 = v3[16];
  uint64_t v36 = type metadata accessor for GroupLayoutBindingContext;
  uint64_t v15 = a1;
  long long v16 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1B00C(v15, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v37 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1B00C(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v13, v14);
  sub_1C151634C();
  uint64_t v35 = sub_1C151633C();
  uint64_t v34 = v17;
  (*(void (**)(char *, unint64_t))(v6 + 8))(v8, v39);
  uint64_t v56 = &type metadata for G_V1;
  unint64_t v39 = sub_1C0185EF4();
  unint64_t v57 = v39;
  v53[0] = v12;
  uint64_t v54 = v13;
  unsigned __int8 v55 = v14;
  type metadata accessor for GroupLayoutKey();
  uint64_t v18 = swift_allocObject();
  sub_1BFFFC7A0(v13, v14);
  uint64_t v51 = sub_1C1520FAC();
  uint64_t v52 = v19;
  uint64_t v49 = 95;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 45;
  unint64_t v48 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v20 = sub_1C151FEBC();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 16) = v20;
  *(void *)(v18 + 24) = v22;
  unint64_t v23 = (uint64_t *)(v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v24 = v34;
  *unint64_t v23 = v35;
  v23[1] = v24;
  sub_1BFC66384((uint64_t)v53, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v25 = v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C((uint64_t)v16, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))v36);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v25, 0, 1, v41);
  uint64_t v26 = v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  uint64_t v27 = v37;
  sub_1BFF2389C((uint64_t)v10, v18 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))v37);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v26, 0, 1, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_1BFFFC630(v13, v14);
  uint64_t v28 = type metadata accessor for G_V1.Bound();
  uint64_t v29 = v46;
  v46[3] = v28;
  v29[4] = sub_1C0DE19D8(&qword_1EA1A74A0, (void (*)(uint64_t))type metadata accessor for G_V1.Bound);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v29);
  unint64_t v31 = v39;
  boxed_opaque_existential_0[4] = (uint64_t)&type metadata for G_V1;
  boxed_opaque_existential_0[5] = v31;
  *((unsigned char *)boxed_opaque_existential_0 + 8) = v40;
  boxed_opaque_existential_0[2] = (uint64_t)v13;
  *((unsigned char *)boxed_opaque_existential_0 + 24) = v14;
  sub_1BFF1B00C(v43, (uint64_t)boxed_opaque_existential_0 + *(int *)(v28 + 24), (uint64_t (*)(void))v27);
  sub_1BFFFC7A0(v13, v14);
  uint64_t result = sub_1C0F52E00(0, 0, 0, 0, 0);
  uint64_t *boxed_opaque_existential_0 = v18;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v28 + 28)) = result;
  return result;
}

uint64_t sub_1C0DDFDAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v25 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for G_V1.Bound();
  uint64_t v8 = *(void *)(v2 + *(int *)(v7 + 28));
  uint64_t v30 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0183444((void (*)(void *__return_ptr, _OWORD *))sub_1C0DE1A20, (uint64_t)v29, v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + *(int *)(v7 + 24);
  uint64_t v11 = *(void *)(v10 + *(int *)(type metadata accessor for GroupLayoutContext() + 24) + 24);
  uint64_t v12 = *MEMORY[0x1E4FAB6D8];
  uint64_t v13 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v6, v12, v13);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAB8F0], v3);
  uint64_t v26 = v9;
  uint64_t v27 = v2;
  uint64_t v28 = v11;
  sub_1C0DE1D3C(0, &qword_1EA1A74C0, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v24 = sub_1C1517BEC();
  uint64_t v14 = sub_1C1517BFC();
  v22[1] = v22;
  long long v36 = v33;
  long long v37 = v34;
  long long v35 = v32;
  long long v23 = v32;
  long long v15 = v33;
  uint64_t v38 = v34;
  uint64_t v31 = v34;
  *(void *)&long long v32 = v9;
  MEMORY[0x1F4188790](v14);
  long long v16 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C01BCA00(0, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, v16);
  sub_1BFEB35D0(&qword_1EB85DF20, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context);
  sub_1BFEB35D0(&qword_1EB85DF08, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v32 = v17;
  sub_1C01BCA00(0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes, v16);
  sub_1BFEB35D0((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes);
  sub_1BFEB0FD4();
  uint64_t v18 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  sub_1BFCA59C8((uint64_t)&v38);
  uint64_t v19 = v25;
  *uint64_t v25 = 0;
  *(_OWORD *)(v19 + 8) = v23;
  *(_OWORD *)(v19 + 24) = v15;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  *((void *)v19 + 5) = v18;
  *((void *)v19 + 6) = v20;
  *(void *)&long long v32 = *((void *)&v37 + 1);
  sub_1BFCA59C8((uint64_t)&v32);
  return swift_release();
}

uint64_t sub_1C0DE021C@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = a1[5];
  long long v6 = a1[7];
  long long v32 = a1[6];
  v33[0] = v6;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)a1 + 121);
  long long v7 = a1[1];
  long long v8 = a1[3];
  long long v28 = a1[2];
  long long v29 = v8;
  long long v9 = a1[3];
  long long v10 = a1[5];
  long long v30 = a1[4];
  long long v31 = v10;
  long long v11 = a1[1];
  v27[0] = *a1;
  v27[1] = v11;
  long long v12 = a1[7];
  v25[6] = v32;
  v26[0] = v12;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 121);
  _OWORD v25[2] = v28;
  v25[3] = v9;
  v25[4] = v30;
  v25[5] = v5;
  uint64_t v13 = *a2;
  v25[0] = v27[0];
  v25[1] = v7;
  sub_1C01B3C58(v34);
  sub_1C0AC29D8((uint64_t)v34, (uint64_t)v24, (uint64_t)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C01BCA00);
  uint64_t v14 = (char *)a2 + *(int *)(type metadata accessor for G_V1.Bound() + 24);
  uint64_t v15 = type metadata accessor for GroupLayoutContext();
  uint64_t v16 = *(void *)(*(void *)&v14[*(int *)(v15 + 40)] + 16);
  double v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BFC66384(v16 + 16, (uint64_t)v22);
  sub_1BFC66384(v16 + 56, (uint64_t)v21);
  double v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v22, inited + 16);
  sub_1BFC773DC(v21, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_retain();
  sub_1C0187FB0((uint64_t)v27);
  FeedLayoutStylerFactory.styler()(v23);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, v25, (uint64_t)v24, (uint64_t)v23, a3);
}

uint64_t sub_1C0DE03E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0DE24BC(0, &qword_1EA1A74D8, (uint64_t (*)(void))sub_1C0DE1A4C, (uint64_t)&type metadata for G_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = &v21[-v12];
  uint64_t v25 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v10 + 104))(&v21[-v12], *MEMORY[0x1E4FABA28], v9, v11);
  sub_1C0DE1C4C();
  sub_1C0DE24BC(0, &qword_1EA1A74E8, (uint64_t (*)(void))sub_1C0DE1A4C, (uint64_t)&type metadata for G_V1.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E4FAB638], v15);
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0DE1D3C(0, &qword_1EA1A74F0, MEMORY[0x1E4FAB6F0]);
  sub_1C0DE1CE8(&qword_1EA1A74F8, &qword_1EA1A74F0, v19);
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1C0DE06AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v100 = a3;
  uint64_t v101 = a4;
  uint64_t v118 = a1;
  sub_1C0DE24BC(0, &qword_1EA1A74D8, (uint64_t (*)(void))sub_1C0DE1A4C, (uint64_t)&type metadata for G_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v114 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v113 = (void *)((char *)v80 - v7);
  uint64_t v99 = sub_1C1517A9C();
  MEMORY[0x1F4188790](v99);
  uint64_t v98 = (char *)v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *(void *)(a2 + 16);
  uint64_t v86 = &v122;
  uint64_t v87 = a2 + 32;
  uint64_t v85 = &v123[1];
  id v96 = &v125;
  unsigned int v95 = *MEMORY[0x1E4FAB8F8];
  uint64_t v94 = (void (**)(char *, void, uint64_t, __n128))(v10 + 104);
  unsigned int v93 = *MEMORY[0x1E4FAB798];
  unsigned int v92 = *MEMORY[0x1E4FAB7B0];
  unsigned int v91 = *MEMORY[0x1E4FAB9E8];
  uint64_t v119 = (void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  unsigned int v90 = *MEMORY[0x1E4FAB5E8];
  unsigned int v89 = *MEMORY[0x1E4FAB620];
  id v117 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
  unint64_t v84 = v9 - 1;
  unsigned int v108 = *MEMORY[0x1E4FABA00];
  unsigned int v83 = *MEMORY[0x1E4FAB560];
  unsigned int v82 = *MEMORY[0x1E4FAB548];
  v80[1] = a2;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  long long v88 = xmmword_1C1529AE0;
  long long v81 = xmmword_1C1527210;
  unint64_t v97 = v9;
  while (1)
  {
    if (v11 == v9)
    {
      memset(v123, 0, 400);
      goto LABEL_8;
    }
    if (v11 >= v9) {
      break;
    }
    unint64_t v9 = v11 + 1;
    uint64_t v16 = v86;
    sub_1C01BC5C8(v87 + 392 * v11, (uint64_t)v86);
    v123[0] = v11;
    memcpy(v85, v16, 0x188uLL);
LABEL_8:
    sub_1C0AC29D8((uint64_t)v123, (uint64_t)&v124, (uint64_t)&unk_1EA1A3340, (uint64_t)sub_1C0AC2A4C, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C0AC2894);
    if (!v125) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v17 = v124;
    memcpy(v123, v96, 0x188uLL);
    uint64_t v18 = v100 + *(int *)(type metadata accessor for G_V1.Bound() + 24);
    unint64_t v112 = v9;
    uint64_t v107 = v18;
    uint64_t v109 = v17;
    if ((v123[7] & 0x10) == 0)
    {
      sub_1C151764C();
      if (v19 > 703.0)
      {
        if (v19 >= 703.0 && v19 <= 818.0)
        {
          uint64_t v20 = 0x4067200000000000;
          goto LABEL_19;
        }
        if (v19 < 818.0 || v19 > 1111.0)
        {
          if (v19 < 1111.0) {
            double v24 = 140.0;
          }
          else {
            double v24 = 220.0;
          }
        }
        else
        {
          uint64_t v20 = 0x4069000000000000;
LABEL_19:
          double v24 = *(double *)&v20;
        }
        uint64_t v29 = type metadata accessor for GroupLayoutContext();
        uint64_t v30 = *(void *)(*(void *)(v18 + *(int *)(v29 + 40)) + 24);
        __n128 v31 = MEMORY[0x1F4188790](v29);
        unint64_t v78 = (unint64_t)v123;
        uint64_t v79 = v30;
        (*v94)(v98, v95, v99, v31);
        sub_1C01BC774();
        swift_allocObject();
        swift_retain();
        goto LABEL_21;
      }
      uint64_t v20 = 0x4061800000000000;
      goto LABEL_19;
    }
    uint64_t v21 = (void *)sub_1C151769C();
    id v22 = objc_msgSend(v21, sel_userInterfaceIdiom);

    if ((unint64_t)v22 + 1 > 6) {
      goto LABEL_39;
    }
    if (((1 << (v22 + 1)) & 0x1B) != 0)
    {
      uint64_t v23 = 0x4061800000000000;
    }
    else if (v22 == (id)1)
    {
      uint64_t v23 = 0x4069000000000000;
    }
    else
    {
      if (v22 != (id)5) {
        goto LABEL_39;
      }
      uint64_t v23 = 0x406B800000000000;
    }
    double v24 = *(double *)&v23;
    uint64_t v25 = type metadata accessor for GroupLayoutContext();
    uint64_t v26 = *(void *)(*(void *)(v18 + *(int *)(v25 + 40)) + 24);
    __n128 v27 = MEMORY[0x1F4188790](v25);
    v80[-4] = v123;
    v80[-3] = v26;
    unint64_t v78 = v28;
    (*v94)(v98, v95, v99, v27);
    sub_1C01BC774();
    swift_allocObject();
    swift_retain();
LABEL_21:
    uint64_t v120 = sub_1C1517BEC();
    swift_release();
    uint64_t v121 = v118;
    uint64_t KeyPath = (void (*)(uint64_t *, uint64_t))swift_getKeyPath();
    sub_1BFF35C38();
    uint64_t v33 = v32;
    uint64_t v34 = swift_allocBox();
    long long v36 = v35;
    long long v37 = (char *)v35 + *(int *)(v33 + 48);
    uint64_t v38 = swift_allocObject();
    *(double *)(v38 + 16) = v24;
    *long long v36 = v38;
    uint64_t v39 = sub_1C151786C();
    int v40 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v39 - 8) + 104);
    v40(v36, v93, v39);
    v40((uint64_t *)v37, v92, v39);
    uint64_t v42 = v113;
    uint64_t v41 = v114;
    uint64_t *v113 = v34;
    uint64_t v111 = *v119;
    v111(v42, v91, v41);
    sub_1C0DE1C4C();
    uint64_t v44 = v43;
    sub_1C0DE24BC(0, &qword_1EA1A74E8, (uint64_t (*)(void))sub_1C0DE1A4C, (uint64_t)&type metadata for G_V1.Layout, MEMORY[0x1E4FAB678]);
    uint64_t v46 = v45;
    uint64_t v47 = *(void *)(v45 - 8);
    uint64_t v48 = *(unsigned __int8 *)(v47 + 80);
    uint64_t v49 = (v48 + 32) & ~v48;
    uint64_t v104 = *(void *)(v47 + 72);
    uint64_t v105 = v44;
    uint64_t v103 = v48 | 7;
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = v88;
    uint64_t v51 = v50 + v49;
    sub_1C0DE24BC(0, &qword_1EA1A7500, (uint64_t (*)(void))sub_1C0DE1A4C, (uint64_t)&type metadata for G_V1.Layout, MEMORY[0x1E4FAB618]);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v52 - 8) + 104))(v51, v90, v52);
    uint64_t v53 = *(void (**)(void, void, void))(v47 + 104);
    uint64_t v106 = v46;
    uint64_t v102 = v53;
    v53(v51, v89, v46);
    uint64_t v54 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0DE1D3C(0, &qword_1EA1A7508, MEMORY[0x1E4FAB4D0]);
    uint64_t v56 = v55;
    uint64_t v57 = sub_1C0DE1CE8(&qword_1EA1A7510, &qword_1EA1A7508, v54);
    unint64_t v78 = sub_1C01BC91C();
    uint64_t v115 = v57;
    uint64_t v116 = v56;
    sub_1C151735C();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v58 = *v117;
    (*v117)(v42, v41);
    if (!v101) {
      goto LABEL_2;
    }
    if (v101 == 1)
    {
      if (v109 == v84) {
        goto LABEL_2;
      }
    }
    else if (!sub_1BFFC399C(v109, v101))
    {
LABEL_2:
      uint64_t v12 = v118;
      uint64_t v121 = v118;
      swift_getKeyPath();
      sub_1C0DE1A4C();
      uint64_t v13 = v113;
      sub_1C1517C3C();
      sub_1C0DE19D8(&qword_1EB85C820, sub_1C0AC2B44);
      sub_1C151737C();
      swift_release();
      uint64_t v14 = v114;
      v58(v13, v114);
      uint64_t v121 = v12;
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = 0x403E000000000000;
      *uint64_t v13 = v15;
      v111(v13, v108, v14);
      sub_1C151738C();
      swift_release();
      v58(v13, v14);
      goto LABEL_3;
    }
    uint64_t v121 = v118;
    uint64_t v59 = v118;
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = 0x4034000000000000;
    uint64_t v61 = v113;
    uint64_t v62 = v114;
    uint64_t *v113 = v60;
    uint64_t v63 = v108;
    uint64_t v64 = v111;
    v111(v61, v108, v62);
    sub_1C151738C();
    v58(v61, v62);
    uint64_t v121 = v59;
    uint64_t v109 = swift_getKeyPath();
    uint64_t v65 = swift_allocObject();
    uint64_t KeyPath = v58;
    uint64_t v66 = v65;
    sub_1C15176EC();
    *(double *)(v66 + 16) = 1.0 / v67;
    *uint64_t v61 = v66;
    uint64_t v68 = v63;
    uint64_t v69 = v62;
    v64(v61, v68, v62);
    uint64_t v70 = v104;
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = v81;
    uint64_t v72 = v71 + v49;
    sub_1C15179DC();
    uint64_t v73 = v106;
    uint64_t v74 = v102;
    v102(v72, v83, v106);
    v74(v72 + v70, v82, v73);
    sub_1C0DE19D8(&qword_1EB85C820, sub_1C0AC2B44);
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v75 = KeyPath;
    KeyPath(v61, v69);
    uint64_t v121 = v118;
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = 0x4034000000000000;
    *uint64_t v61 = v76;
    v64(v61, v108, v69);
    sub_1C151738C();
    swift_release();
    v75(v61, v69);
LABEL_3:
    sub_1C01BC710((uint64_t)v123);
    unint64_t v9 = v97;
    unint64_t v11 = v112;
  }
  __break(1u);
LABEL_39:
  LODWORD(v79) = 0;
  unint64_t v78 = 53;
  uint64_t result = sub_1C152040C();
  __break(1u);
  return result;
}

uint64_t sub_1C0DE1420@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = swift_allocObject();
  sub_1C01BC5C8(a2, v13 + 16);
  memcpy((void *)(v13 + 408), a3, 0x180uLL);
  uint64_t v14 = a4 + *(int *)(type metadata accessor for G_V1.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v16 = *(void *)(v14 + *(int *)(result + 28));
  BOOL v17 = __OFADD__(v16, a1);
  uint64_t v18 = v16 + a1;
  if (v17)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(void *)(v13 + 792) = v18;
  *(void *)(v12 + 16) = v13 | 0x5000000000000000;
  sub_1C0AC2894(0, &qword_1EB87A630, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, MEMORY[0x1E4FBBE00]);
  uint64_t v19 = *(void *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v21 = *(void *)(a5 + 40);
  if (*(void *)(v21 + 16) > a1)
  {
    uint64_t v22 = result;
    uint64_t v23 = v21 + 32 * a1;
    long long v24 = *(_OWORD *)(v23 + 48);
    uint64_t v25 = (_OWORD *)(result + v20);
    *uint64_t v25 = *(_OWORD *)(v23 + 32);
    v25[1] = v24;
    uint64_t result = swift_storeEnumTagMultiPayload();
    *(void *)(v12 + 24) = v22;
    *a6 = v12 | 0xB000000000000000;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C0DE1604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0DDF8F0(a1, a2, a3);
}

uint64_t sub_1C0DE161C()
{
  return sub_1C12BC4E4();
}

unint64_t sub_1C0DE162C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0DE165C();
  unint64_t result = sub_1C0DE16B0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0DE165C()
{
  unint64_t result = qword_1EA1A7490;
  if (!qword_1EA1A7490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7490);
  }
  return result;
}

unint64_t sub_1C0DE16B0()
{
  unint64_t result = qword_1EA1A7498;
  if (!qword_1EA1A7498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7498);
  }
  return result;
}

uint64_t type metadata accessor for G_V1.Bound()
{
  uint64_t result = qword_1EA1A74A8;
  if (!qword_1EA1A74A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0DE1750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0DE1764);
}

uint64_t sub_1C0DE1764(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    unint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0DE1814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0DE1828);
}

void *sub_1C0DE1828(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0DE18D0()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0DE1980(uint64_t a1)
{
  uint64_t result = sub_1C0DE19D8(&qword_1EA1A74B8, (void (*)(uint64_t))type metadata accessor for G_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0DE19D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0DE1A20@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0DE021C(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1C0DE1A40(uint64_t a1)
{
  return sub_1C0DE03E8(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1C0DE1A4C()
{
  unint64_t result = qword_1EA1A74C8;
  if (!qword_1EA1A74C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A74C8);
  }
  return result;
}

unint64_t sub_1C0DE1AA0()
{
  unint64_t result = qword_1EA1A74D0;
  if (!qword_1EA1A74D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A74D0);
  }
  return result;
}

uint64_t sub_1C0DE1AF4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, unint64_t *a4@<X8>)
{
  return sub_1C0DE1420(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), a4);
}

uint64_t sub_1C0DE1AFC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0DE1B40()
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 152) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 296) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0DE1C4C()
{
  if (!qword_1EA1A74E0)
  {
    sub_1C0DE24BC(255, &qword_1EA1A74E8, (uint64_t (*)(void))sub_1C0DE1A4C, (uint64_t)&type metadata for G_V1.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A74E0);
    }
  }
}

uint64_t sub_1C0DE1CDC(uint64_t a1)
{
  return sub_1C0DE06AC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C0DE1CE8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0DE1D3C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0DE1D2C()
{
  return swift_deallocObject();
}

void sub_1C0DE1D3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for G_V1.Layout;
    v8[1] = &type metadata for G_V1.Layout.Attributes;
    v8[2] = sub_1C0DE1A4C();
    v8[3] = sub_1C0DE1AA0();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

ValueMetadata *type metadata accessor for G_V1.Layout.Attributes()
{
  return &type metadata for G_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for G_V1.Layout()
{
  return &type metadata for G_V1.Layout;
}

unint64_t sub_1C0DE1DE4()
{
  unint64_t result = qword_1EA1A7518;
  if (!qword_1EA1A7518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7518);
  }
  return result;
}

unint64_t sub_1C0DE1E3C()
{
  unint64_t result = qword_1EA1A7520;
  if (!qword_1EA1A7520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7520);
  }
  return result;
}

unint64_t sub_1C0DE1E94()
{
  unint64_t result = qword_1EA1A7528;
  if (!qword_1EA1A7528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7528);
  }
  return result;
}

unint64_t sub_1C0DE1EEC()
{
  unint64_t result = qword_1EA1A7530;
  if (!qword_1EA1A7530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7530);
  }
  return result;
}

void sub_1C0DE1F40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    type metadata accessor for CGRect(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C0DE19D8(&qword_1EB87A288, type metadata accessor for CGRect);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C0DE1FDC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0DE24BC(0, &qword_1EA1A7538, (uint64_t (*)(void))sub_1C0DE23A8, (uint64_t)&type metadata for G_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v19 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DE23A8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  type metadata accessor for CGRect(0);
  char v24 = 0;
  sub_1C0DE19D8(&qword_1EB87A290, type metadata accessor for CGRect);
  uint64_t v10 = v19;
  sub_1C15206EC();
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
  char v24 = 1;
  sub_1C01BD088(&qword_1EB85DF10, (void (*)(void))sub_1C01BCFCC);
  sub_1C15206EC();
  uint64_t v15 = v20;
  sub_1C0AC2894(0, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E4FBB320]);
  char v24 = 2;
  sub_1C0DE23FC((unint64_t *)&unk_1EB85DF60, &qword_1EB87A290);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v16 = v20;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v15;
  a2[5] = v16;
  return result;
}

unint64_t sub_1C0DE23A8()
{
  unint64_t result = qword_1EA1A7540;
  if (!qword_1EA1A7540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7540);
  }
  return result;
}

uint64_t sub_1C0DE23FC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0AC2894(255, &qword_1EB85DF58, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E4FBB320]);
    sub_1C0DE19D8(a2, type metadata accessor for CGRect);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0DE24BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for G_V1.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DE25F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for G_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for G_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0DE262C()
{
  unint64_t result = qword_1EA1A7550;
  if (!qword_1EA1A7550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7550);
  }
  return result;
}

unint64_t sub_1C0DE2684()
{
  unint64_t result = qword_1EA1A7558;
  if (!qword_1EA1A7558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7558);
  }
  return result;
}

unint64_t sub_1C0DE26DC()
{
  unint64_t result = qword_1EA1A7560;
  if (!qword_1EA1A7560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7560);
  }
  return result;
}

uint64_t FeedCachePolicy.description.getter()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    if (*(void *)v0) {
      return 0x4F20646568636143;
    }
    else {
      return 0x746C7561666544;
    }
  }
  else
  {
    sub_1C15200FC();
    sub_1C151E80C();
    sub_1C151EF6C();
    return 0;
  }
}

uint64_t *FormatServiceCachePolicy.init(_:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  char v3 = *((unsigned char *)result + 8);
  if (v3) {
    uint64_t v2 = *result != 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

unsigned char *FormatServiceCachePolicy.init(_:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  uint64_t v3 = 0x4122750000000000;
  if (v2 == 1)
  {
    uint64_t v3 = 1;
    char v4 = 1;
  }
  else
  {
    char v4 = 0;
  }
  if (*result)
  {
    uint64_t v2 = v3;
    char v5 = v4;
  }
  else
  {
    char v5 = 1;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t static FeedCachePolicy.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    BOOL v5 = *(void *)&v3 == 0;
    if (v3 == 0.0) {
      unsigned int v6 = *(unsigned __int8 *)(a2 + 8);
    }
    else {
      unsigned int v6 = 0;
    }
    if (v5) {
      unsigned int v4 = 0;
    }
    if (v2 == 0.0) {
      return v6;
    }
    else {
      return v4;
    }
  }
  else
  {
    return (v4 & 1) == 0 && v2 == v3;
  }
}

uint64_t sub_1C0DE28C4(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    BOOL v5 = *(void *)&v3 == 0;
    if (v3 == 0.0) {
      unsigned int v6 = *(unsigned __int8 *)(a2 + 8);
    }
    else {
      unsigned int v6 = 0;
    }
    if (v5) {
      unsigned int v4 = 0;
    }
    if (v2 == 0.0) {
      return v6;
    }
    else {
      return v4;
    }
  }
  else
  {
    return (v4 & 1) == 0 && v2 == v3;
  }
}

ValueMetadata *type metadata accessor for FeedCachePolicy()
{
  return &type metadata for FeedCachePolicy;
}

ValueMetadata *type metadata accessor for A18_V10()
{
  return &type metadata for A18_V10;
}

uint64_t sub_1C0DE2934(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0DE6C24(0, &qword_1EA1A7618, (uint64_t (*)(void))sub_1C0DE6BD0, (uint64_t)&type metadata for A18_V10.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DE6BD0();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0DE6C8C(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0DE2B7C(uint64_t a1)
{
  unint64_t v2 = sub_1C0DE6BD0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DE2BB8(uint64_t a1)
{
  unint64_t v2 = sub_1C0DE6BD0();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0DE2BF4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0DE6920(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0DE2C3C(void *a1)
{
  return sub_1C0DE2934(a1);
}

uint64_t sub_1C0DE2C54()
{
  sub_1C0DE6570();
  return sub_1C151798C();
}

uint64_t sub_1C0DE2CD0@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0DE6C24(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0DE2D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  BOOL v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  uint64_t v74 = &type metadata for A18_V10;
  unint64_t v20 = sub_1C018623C();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *uint64_t v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  uint64_t v74 = &type metadata for A18_V10;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C00192A8(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  __n128 v31 = (void *)(v30 + 16);
  swift_beginAccess();
  uint64_t v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    *__n128 v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    uint64_t v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    *__n128 v31 = v32;
  }
  v32[2] = v35 + 1;
  long long v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B83758, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    uint64_t v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      uint64_t v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      uint64_t v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    long long v42[2] = v45 + 1;
    uint64_t v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B83780, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A18_V10.Bound();
    uint64_t v51 = v53;
    void v53[3] = v50;
    v51[4] = sub_1C0DE6C8C(&qword_1EA1A7578, (void (*)(uint64_t))type metadata accessor for A18_V10.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

uint64_t sub_1C0DE3530@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  *(void *)&long long v38 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  long long v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A18_V10.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(v7 + *(int *)(v8 + 40));
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(int *)(v8 + 32);
  uint64_t v39 = v7;
  double v12 = *(double *)(v7 + v11);
  sub_1BFC66384(v10 + 16, (uint64_t)v44);
  sub_1BFC66384(v10 + 56, (uint64_t)v43);
  double v13 = v12 * *(double *)(v10 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v44, inited + 16);
  sub_1BFC773DC(v43, inited + 56);
  *(double *)(inited + 96) = v13;
  v42[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v42, (uint64_t *)&v45);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1C00737F8();
  uint64_t v15 = sub_1C151ECCC();
  *(void *)(v15 + 16) = 4;
  sub_1BFC66384((uint64_t)&v45, v15 + 32);
  sub_1BFC66384((uint64_t)&v45, v15 + 72);
  sub_1BFC66384((uint64_t)&v45, v15 + 112);
  sub_1BFC773DC(&v45, v15 + 152);
  uint64_t v16 = *(void *)(v9 + 16);
  sub_1BFC66384(v16 + 16, (uint64_t)v44);
  sub_1BFC66384(v16 + 56, (uint64_t)v43);
  double v17 = v12 * *(double *)(v16 + 96);
  uint64_t v18 = swift_initStackObject();
  sub_1BFC773DC(v44, v18 + 16);
  sub_1BFC773DC(v43, v18 + 56);
  *(double *)(v18 + 96) = v17;
  v42[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v42, (uint64_t *)&v45);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v18 + 16);
  __swift_destroy_boxed_opaque_existential_1(v18 + 56);
  uint64_t v19 = sub_1BFEB3714((uint64_t)&v45, *(void *)(*(void *)(v2 + *(int *)(v6 + 28)) + 16) - 4);
  *(void *)&long long v45 = v15;
  sub_1BFEB37F8(v19);
  uint64_t v20 = v45;
  _OWORD v41[2] = v2;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C06472C0(v21, v20, (void (*)(char *, uint64_t))sub_1C0DE64FC, (uint64_t)v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v22 + 16) < 4uLL)
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v23 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    unint64_t v24 = v22 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v25 = *MEMORY[0x1E4FAB6D8];
    uint64_t v26 = sub_1C151759C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v5, v25, v26);
    uint64_t v27 = (*(uint64_t (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v38);
    MEMORY[0x1F4188790](v27);
    *((void *)&v38 - 6) = v22;
    *((void *)&v38 - 5) = v22;
    *((void *)&v38 - 4) = v24;
    *(long long *)((char *)&v38 - 24) = xmmword_1C15A97C0;
    sub_1C0DE6650(0, &qword_1EA1A7598, MEMORY[0x1E4FAB938]);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1C1517BEC();
    uint64_t v28 = sub_1C1517BFC();
    long long v38 = v45;
    uint64_t v29 = v46;
    uint64_t v30 = v47;
    *(void *)&long long v45 = v22;
    *(void *)&v44[0] = v48;
    MEMORY[0x1F4188790](v28);
    sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFEB368C();
    uint64_t v31 = sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
    swift_bridgeObjectRetain();
    uint64_t v37 = v31;
    uint64_t v32 = sub_1C151951C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v45 = v32;
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
    sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
    sub_1BFEB0FD4();
    uint64_t v33 = sub_1C151E91C();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v35 = v40;
    *uint64_t v40 = 0;
    *(_OWORD *)(v35 + 8) = v38;
    *((void *)v35 + 3) = v29;
    *((void *)v35 + 4) = v30;
    uint64_t v36 = MEMORY[0x1E4FBC860];
    *((void *)v35 + 5) = v33;
    *((void *)v35 + 6) = v36;
  }
  return result;
}

uint64_t sub_1C0DE3B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0DE3C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C0DE6C24(0, &qword_1EA1A75B0, (uint64_t (*)(void))sub_1C0DE651C, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)&v20[-v15];
  uint64_t v26 = a1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 18;
  *uint64_t v16 = v17;
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FABA10], v13);
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0DE6650(0, &qword_1EA1A75B8, MEMORY[0x1E4FAB6F0]);
  sub_1C0DE660C(&qword_1EA1A75C0, &qword_1EA1A75B8, v18);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1C0DE3E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v60 = a6;
  uint64_t v59 = a5;
  uint64_t v58 = a4;
  uint64_t v57 = a3;
  uint64_t v69 = a2;
  uint64_t v56 = sub_1C0DE651C;
  sub_1C0DE6C24(0, &qword_1EA1A75B0, (uint64_t (*)(void))sub_1C0DE651C, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v50 - v10);
  uint64_t v75 = a1;
  uint64_t v12 = a1;
  uint64_t v66 = a1;
  uint64_t v13 = sub_1C151729C();
  uint64_t v14 = swift_allocBox();
  unsigned int v64 = *MEMORY[0x1E4FAB4E8];
  uint64_t v15 = *(void *)(v13 - 8);
  uint64_t v16 = *(void (**)(void))(v15 + 104);
  uint64_t v62 = v15 + 104;
  uint64_t v63 = (void (*)(uint64_t, void, uint64_t))v16;
  v16(v17);
  *uint64_t v11 = v14;
  unsigned int v61 = *MEMORY[0x1E4FAB940];
  uint64_t v19 = v9 + 104;
  uint64_t v18 = *(void (**)(uint64_t *))(v9 + 104);
  v18(v11);
  uint64_t v65 = v18;
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DE6650(0, &qword_1EA1A75C8, MEMORY[0x1E4FAB4D0]);
  uint64_t v67 = v21;
  uint64_t v22 = sub_1C0DE660C(&qword_1EA1A75D0, &qword_1EA1A75C8, v20);
  sub_1C151738C();
  uint64_t v68 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  uint64_t v55 = v9 + 8;
  v68(v11, v8);
  uint64_t v75 = v12;
  sub_1C0386118();
  uint64_t v24 = v23;
  uint64_t v25 = swift_allocBox();
  uint64_t v27 = (char *)v26 + *(int *)(v24 + 48);
  *uint64_t v26 = 11;
  uint64_t v28 = *MEMORY[0x1E4FAB8C8];
  uint64_t v29 = sub_1C1517A7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v27, v28, v29);
  *uint64_t v11 = v25;
  ((void (*)(uint64_t *, void, uint64_t))v18)(v11, *MEMORY[0x1E4FAB960], v8);
  uint64_t v74 = v69;
  uint64_t v54 = v22;
  sub_1C151731C();
  uint64_t v30 = v68;
  v68(v11, v8);
  uint64_t v31 = v66;
  uint64_t v75 = v66;
  uint64_t v32 = swift_allocBox();
  uint64_t v53 = v13;
  v63(v33, v64, v13);
  *uint64_t v11 = v32;
  unint64_t v34 = v65;
  ((void (*)(uint64_t *, void, uint64_t))v65)(v11, v61, v8);
  sub_1C151738C();
  v30(v11, v8);
  uint64_t v35 = v31;
  uint64_t v36 = v8;
  uint64_t v75 = v35;
  unsigned int v51 = *MEMORY[0x1E4FABA28];
  uint64_t v52 = v19;
  v34(v11);
  sub_1C0DE66DC();
  sub_1C0DE6C24(0, &qword_1EA1A75E0, (uint64_t (*)(void))v56, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v38 = v37;
  uint64_t v39 = *(void *)(v37 - 8);
  unint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v39 + 104))(v41 + v40, *MEMORY[0x1E4FAB638], v38);
  uint64_t v70 = v57;
  uint64_t v71 = v58;
  uint64_t v72 = v59;
  uint64_t v73 = v60;
  sub_1C151731C();
  uint64_t v42 = (uint64_t (*)(uint64_t *, uint64_t))v68;
  swift_bridgeObjectRelease();
  uint64_t result = v42(v11, v8);
  if (*(void *)(v69 + 16) == 7)
  {
    uint64_t v44 = v66;
    uint64_t v75 = v66;
    uint64_t v45 = v53;
    uint64_t v46 = swift_allocBox();
    v63(v47, v64, v45);
    *uint64_t v11 = v46;
    uint64_t v48 = v65;
    ((void (*)(uint64_t *, void, uint64_t))v65)(v11, v61, v36);
    sub_1C151738C();
    v42(v11, v36);
    uint64_t v75 = v44;
    uint64_t v49 = ((uint64_t (*)(uint64_t *, void, uint64_t))v48)(v11, v51, v36);
    MEMORY[0x1F4188790](v49);
    sub_1C151731C();
    return v42(v11, v36);
  }
  return result;
}

uint64_t sub_1C0DE4514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DE6C24(0, &qword_1EA1A75B0, (uint64_t (*)(void))sub_1C0DE651C, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v30 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FABA28], v12);
  if (*(void *)(a2 + 16))
  {
    sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v29 = KeyPath;
    uint64_t v18 = qword_1F1B8A008;
    uint64_t v19 = (char *)v6 + v4[5];
    uint64_t v20 = *MEMORY[0x1E4FAB8C8];
    uint64_t v21 = sub_1C1517A7C();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v28 = v12;
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v21);
    uint64_t v24 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = v18;
    *(uint64_t *)((char *)v6 + v4[6]) = 0;
    *(uint64_t *)((char *)v6 + v4[7]) = (uint64_t)v24;
    id v25 = v24;
    sub_1C04B9C70((uint64_t)v10, (uint64_t)v6);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0DE6650(0, &qword_1EA1A75C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0DE660C(&qword_1EA1A75D0, &qword_1EA1A75C8, v26);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C0DE4904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  sub_1C0DE6C24(0, &qword_1EA1A75B0, (uint64_t (*)(void))sub_1C0DE651C, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v32 = (uint64_t *)((char *)&v26 - v13);
  uint64_t v14 = type metadata accessor for HeadlineViewLayout.Context(0) - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = (a5 >> 1) - a4;
  if (a5 >> 1 != a4)
  {
    if ((uint64_t)(a5 >> 1) <= a4)
    {
      __break(1u);
    }
    else
    {
      uint64_t v19 = *(void *)(v15 + 72);
      unsigned int v30 = *MEMORY[0x1E4FABA10];
      uint64_t v26 = a2;
      uint64_t v27 = v11;
      uint64_t v28 = (void (**)(uint64_t *, uint64_t))(v12 + 8);
      uint64_t v29 = (uint64_t (**)(uint64_t *, void, uint64_t))(v12 + 104);
      swift_unknownObjectRetain();
      uint64_t v31 = v19;
      uint64_t v20 = a3 + v19 * a4;
      uint64_t v21 = v32;
      uint64_t v22 = v27;
      do
      {
        sub_1BFF1AFA4(v20, (uint64_t)v17, type metadata accessor for HeadlineViewLayout.Context);
        uint64_t v33 = a1;
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = 6;
        *uint64_t v21 = v23;
        uint64_t v24 = (*v29)(v21, v30, v22);
        MEMORY[0x1F4188790](v24);
        id v25 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
        sub_1C0DE6650(0, &qword_1EA1A75C8, MEMORY[0x1E4FAB4D0]);
        sub_1C0DE660C(&qword_1EA1A75D0, &qword_1EA1A75C8, v25);
        uint64_t v21 = v32;
        sub_1C151734C();
        (*v28)(v21, v22);
        sub_1BFF1F104((uint64_t)v17, type metadata accessor for HeadlineViewLayout.Context);
        v20 += v31;
        --v18;
      }
      while (v18);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1C0DE4C54(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v35 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v36 = (char *)&KeyPath - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HeadlineViewLayout.Options(0);
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0DE6C24(0, &qword_1EA1A75B0, (uint64_t (*)(void))sub_1C0DE651C, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&KeyPath - v15;
  uint64_t v40 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = *MEMORY[0x1E4FAB9E0];
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  uint64_t v39 = v13;
  v18(v16, v17, v13);
  uint64_t v19 = (char *)v11 + v9[7];
  uint64_t v20 = *MEMORY[0x1E4FAB8C8];
  uint64_t v21 = sub_1C1517A7C();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  uint64_t v23 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[8]) = 0;
  uint64_t v24 = *v23;
  *(void *)((char *)v11 + v9[9]) = v24;
  uint64_t v25 = qword_1EB87CC48;
  id v26 = v24;
  if (v25 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C151709C();
  uint64_t v27 = swift_release();
  __n128 v28 = MEMORY[0x1F4188790](v27);
  uint64_t v29 = v35;
  *(&KeyPath - 4) = v34;
  *(&KeyPath - 3) = (uint64_t)v11;
  unint64_t v32 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))(v36, *MEMORY[0x1E4FAB8F8], v29, v28);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  unsigned int v30 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DE6650(0, &qword_1EA1A75C8, MEMORY[0x1E4FAB4D0]);
  sub_1C0DE660C(&qword_1EA1A75D0, &qword_1EA1A75C8, v30);
  unint64_t v32 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v39);
}

uint64_t sub_1C0DE515C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  sub_1C0DE6C24(0, &qword_1EA1A75B0, (uint64_t (*)(void))sub_1C0DE651C, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v18 - v7);
  uint64_t v25 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  unsigned int v21 = *MEMORY[0x1E4FABA10];
  uint64_t v10 = *(void (**)(uint64_t *))(v6 + 104);
  v10(v8);
  unint64_t v18 = v10;
  uint64_t v24 = a2;
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DE6650(0, &qword_1EA1A75C8, MEMORY[0x1E4FAB4D0]);
  sub_1C0DE660C(&qword_1EA1A75D0, &qword_1EA1A75C8, v11);
  sub_1C151734C();
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v12(v8, v5);
  uint64_t v13 = v20;
  uint64_t v25 = v20;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  *uint64_t v8 = v14;
  ((void (*)(uint64_t *, void, uint64_t))v10)(v8, v21, v5);
  uint64_t v15 = v19;
  uint64_t v23 = v19;
  sub_1C151734C();
  v12(v8, v5);
  uint64_t v25 = v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 6;
  *uint64_t v8 = v16;
  ((void (*)(uint64_t *, void, uint64_t))v18)(v8, v21, v5);
  uint64_t v22 = v15;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v12)(v8, v5);
}

uint64_t sub_1C0DE549C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0DE6C24(0, &qword_1EA1A75B0, (uint64_t (*)(void))sub_1C0DE651C, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16) < 5uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
        + 4 * *(void *)(v14 + 72);
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    unsigned int v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0DE6650(0, &qword_1EA1A75C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0DE660C(&qword_1EA1A75D0, &qword_1EA1A75C8, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1C0DE5878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0DE6C24(0, &qword_1EA1A75B0, (uint64_t (*)(void))sub_1C0DE651C, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16) < 6uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2
        + 5 * *(void *)(v14 + 72)
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    unsigned int v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0DE6650(0, &qword_1EA1A75C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0DE660C(&qword_1EA1A75D0, &qword_1EA1A75C8, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1C0DE5C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0DE6C24(0, &qword_1EA1A75B0, (uint64_t (*)(void))sub_1C0DE651C, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16) < 7uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
        + 6 * *(void *)(v14 + 72);
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    unsigned int v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0DE6650(0, &qword_1EA1A75C8, MEMORY[0x1E4FAB4D0]);
    sub_1C0DE660C(&qword_1EA1A75D0, &qword_1EA1A75C8, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1C0DE6038@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A18_V10.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0DE6128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0DE2D8C(a1, a2, a3);
}

uint64_t sub_1C0DE6140()
{
  return sub_1C12BC2E0();
}

unint64_t sub_1C0DE6150(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0DE6180();
  unint64_t result = sub_1C0DE61D4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0DE6180()
{
  unint64_t result = qword_1EA1A7568;
  if (!qword_1EA1A7568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7568);
  }
  return result;
}

unint64_t sub_1C0DE61D4()
{
  unint64_t result = qword_1EA1A7570;
  if (!qword_1EA1A7570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7570);
  }
  return result;
}

uint64_t type metadata accessor for A18_V10.Bound()
{
  uint64_t result = qword_1EA1A7580;
  if (!qword_1EA1A7580) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0DE6274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0DE6288);
}

uint64_t sub_1C0DE6288(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0DE6338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0DE634C);
}

void *sub_1C0DE634C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0DE63F4()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0DE64A4(uint64_t a1)
{
  uint64_t result = sub_1C0DE6C8C(&qword_1EA1A7590, (void (*)(uint64_t))type metadata accessor for A18_V10.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0DE64FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0DE3B58(a1, a2, a3);
}

uint64_t sub_1C0DE6504(uint64_t a1)
{
  return sub_1C0DE65F4(a1, sub_1C0DE3C28);
}

unint64_t sub_1C0DE651C()
{
  unint64_t result = qword_1EA1A75A0;
  if (!qword_1EA1A75A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A75A0);
  }
  return result;
}

unint64_t sub_1C0DE6570()
{
  unint64_t result = qword_1EA1A75A8;
  if (!qword_1EA1A75A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A75A8);
  }
  return result;
}

uint64_t sub_1C0DE65C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0DE6038(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0DE65CC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0DE65DC(uint64_t a1)
{
  return sub_1C0DE65F4(a1, sub_1C0DE3E3C);
}

uint64_t sub_1C0DE65F4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1C0DE660C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0DE6650(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0DE6650(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A18_V10.Layout;
    v8[1] = &type metadata for A18_V10.Layout.Attributes;
    v8[2] = sub_1C0DE651C();
    v8[3] = sub_1C0DE6570();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0DE66D4(uint64_t a1)
{
  return sub_1C0DE4514(a1, *(void *)(v1 + 16));
}

void sub_1C0DE66DC()
{
  if (!qword_1EA1A75D8)
  {
    sub_1C0DE6C24(255, &qword_1EA1A75E0, (uint64_t (*)(void))sub_1C0DE651C, (uint64_t)&type metadata for A18_V10.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A75D8);
    }
  }
}

void sub_1C0DE676C(uint64_t a1)
{
  sub_1C0DE4904(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C0DE6778(uint64_t a1)
{
  return sub_1C0DE515C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0DE6780(uint64_t a1)
{
  return sub_1C0DE549C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0DE6788(uint64_t a1)
{
  return sub_1C0DE5878(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0DE6790(uint64_t a1)
{
  return sub_1C0DE5C58(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0DE6798(uint64_t a1)
{
  return sub_1C0DE4C54(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V10.Layout.Attributes()
{
  return &type metadata for A18_V10.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V10.Layout()
{
  return &type metadata for A18_V10.Layout;
}

unint64_t sub_1C0DE67C4()
{
  unint64_t result = qword_1EA1A75E8;
  if (!qword_1EA1A75E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A75E8);
  }
  return result;
}

unint64_t sub_1C0DE681C()
{
  unint64_t result = qword_1EA1A75F0;
  if (!qword_1EA1A75F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A75F0);
  }
  return result;
}

unint64_t sub_1C0DE6874()
{
  unint64_t result = qword_1EA1A75F8;
  if (!qword_1EA1A75F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A75F8);
  }
  return result;
}

unint64_t sub_1C0DE68CC()
{
  unint64_t result = qword_1EA1A7600;
  if (!qword_1EA1A7600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7600);
  }
  return result;
}

uint64_t sub_1C0DE6920@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0DE6C24(0, &qword_1EA1A7608, (uint64_t (*)(void))sub_1C0DE6BD0, (uint64_t)&type metadata for A18_V10.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DE6BD0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0DE6C8C(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  _OWORD v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C0DE6BD0()
{
  unint64_t result = qword_1EA1A7610;
  if (!qword_1EA1A7610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7610);
  }
  return result;
}

void sub_1C0DE6C24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0DE6C8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A18_V10.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DE6DA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V10.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V10.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0DE6DDC()
{
  unint64_t result = qword_1EA1A7620;
  if (!qword_1EA1A7620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7620);
  }
  return result;
}

unint64_t sub_1C0DE6E34()
{
  unint64_t result = qword_1EA1A7628;
  if (!qword_1EA1A7628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7628);
  }
  return result;
}

unint64_t sub_1C0DE6E8C()
{
  unint64_t result = qword_1EA1A7630;
  if (!qword_1EA1A7630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7630);
  }
  return result;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:reuseIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, uint64_t a14, uint64_t *a15, char a16, uint64_t *a17, uint64_t a18)
{
  uint64_t result = swift_allocObject();
  uint64_t v27 = *a13;
  uint64_t v28 = *a15;
  uint64_t v29 = *a17;
  char v30 = *((unsigned char *)a17 + 8);
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = a5;
  *(void *)(result + 56) = a6;
  *(void *)(result + 64) = a7;
  *(void *)(result + 72) = a8;
  *(double *)(result + 80) = a9;
  *(double *)(result + 88) = a10;
  *(double *)(result + 96) = a11;
  *(double *)(result + 104) = a12;
  *(void *)(result + 112) = v27;
  *(void *)(result + 120) = a14;
  *(void *)(result + 128) = v28;
  *(unsigned char *)(result + 136) = a16;
  *(void *)(result + 144) = v29;
  *(unsigned char *)(result + 152) = v30;
  uint64_t v31 = MEMORY[0x1E4FBC870];
  *(void *)(result + 160) = a18;
  *(void *)(result + 168) = v31;
  return result;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatShareAttributionNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 80);
}

uint64_t FormatShareAttributionNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 112);
  return swift_retain();
}

uint64_t FormatShareAttributionNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 120);
}

unint64_t FormatShareAttributionNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 128);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatShareAttributionNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 136);
}

void FormatShareAttributionNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 152);
  *(void *)a1 = *(void *)(v1 + 144);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatShareAttributionNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatShareAttributionNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:reuseIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, uint64_t a14, uint64_t *a15, char a16, uint64_t *a17, uint64_t a18)
{
  uint64_t v19 = *a13;
  uint64_t v20 = *a15;
  uint64_t v21 = *a17;
  char v22 = *((unsigned char *)a17 + 8);
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  *(void *)(v18 + 48) = a5;
  *(void *)(v18 + 56) = a6;
  *(void *)(v18 + 64) = a7;
  *(void *)(v18 + 72) = a8;
  *(double *)(v18 + 80) = a9;
  *(double *)(v18 + 88) = a10;
  *(double *)(v18 + 96) = a11;
  *(double *)(v18 + 104) = a12;
  *(void *)(v18 + 112) = v19;
  *(void *)(v18 + 120) = a14;
  *(void *)(v18 + 128) = v20;
  *(unsigned char *)(v18 + 136) = a16;
  *(void *)(v18 + 144) = v21;
  *(unsigned char *)(v18 + 152) = v22;
  uint64_t v23 = MEMORY[0x1E4FBC870];
  *(void *)(v18 + 160) = a18;
  *(void *)(v18 + 168) = v23;
  return v18;
}

unint64_t sub_1C0DE7158(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x6564496573756572;
      break;
    case 4:
      unint64_t result = 0x656D617266;
      break;
    case 5:
      unint64_t result = 0x676E697A69736572;
      break;
    case 6:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 7:
      unint64_t result = 0x696C696269736976;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0DE72EC()
{
  return sub_1C0DE7158(*v0);
}

uint64_t sub_1C0DE72F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0DE8668(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0DE731C(uint64_t a1)
{
  unint64_t v2 = sub_1C0DE78C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DE7358(uint64_t a1)
{
  unint64_t v2 = sub_1C0DE78C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatShareAttributionNodeLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 128));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.__deallocating_deinit()
{
  FormatShareAttributionNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatShareAttributionNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0DE8054(0, &qword_1EA1A7638, (uint64_t (*)(void))sub_1C0DE78C8, (uint64_t)&type metadata for FormatShareAttributionNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DE78C8();
  sub_1C1520F0C();
  LOBYTE(v13[0]) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1C15207CC();
    LOBYTE(v13[0]) = 2;
    sub_1C15207CC();
    LOBYTE(v13[0]) = 3;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 96);
    v13[0] = *(_OWORD *)(v3 + 80);
    v13[1] = v10;
    char v14 = 4;
    type metadata accessor for CGRect(0);
    sub_1BFE4C4F0(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 112);
    char v14 = 5;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v13[0]) = 6;
    sub_1C15207FC();
    *(void *)&v13[0] = *(void *)(v3 + 128);
    char v14 = 7;
    sub_1C009DA10();
    sub_1C152080C();
    LOBYTE(v13[0]) = 8;
    sub_1C15207DC();
    char v11 = *(unsigned char *)(v3 + 152);
    *(void *)&v13[0] = *(void *)(v3 + 144);
    BYTE8(v13[0]) = v11;
    char v14 = 9;
    sub_1BFDD5084();
    sub_1C152078C();
    *(void *)&v13[0] = *(void *)(v3 + 160);
    char v14 = 10;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C4F0(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    *(void *)&v13[0] = *(void *)(v3 + 168);
    char v14 = 11;
    sub_1C0DE8054(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C0DE80BC(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0DE78C8()
{
  unint64_t result = qword_1EA1A7640;
  if (!qword_1EA1A7640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7640);
  }
  return result;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatShareAttributionNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.init(from:)(void *a1)
{
  sub_1C0DE8054(0, &qword_1EA1A7648, (uint64_t (*)(void))sub_1C0DE78C8, (uint64_t)&type metadata for FormatShareAttributionNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v17 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v15 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DE78C8();
  uint64_t v18 = v6;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v16;
    LOBYTE(v19) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v8;
    LOBYTE(v19) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v19) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    LOBYTE(v19) = 3;
    *(void *)(v1 + 64) = sub_1C152069C();
    *(void *)(v1 + 72) = v12;
    type metadata accessor for CGRect(0);
    char v21 = 4;
    sub_1BFE4C4F0(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v13 = v20;
    *(_OWORD *)(v1 + 80) = v19;
    *(_OWORD *)(v1 + 96) = v13;
    char v21 = 5;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 112) = v19;
    LOBYTE(v19) = 6;
    *(void *)(v1 + 120) = sub_1C15206DC();
    char v21 = 7;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 128) = v19;
    LOBYTE(v19) = 8;
    *(unsigned char *)(v1 + 136) = sub_1C15206AC() & 1;
    char v21 = 9;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v14 = BYTE8(v19);
    *(void *)(v1 + 144) = v19;
    *(unsigned char *)(v1 + 152) = v14;
    type metadata accessor for FormatContextLayoutOptions();
    char v21 = 10;
    sub_1BFE4C4F0(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 160) = v19;
    sub_1C0DE8054(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v21 = 11;
    sub_1C0DE80BC(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v17);
    *(void *)(v1 + 168) = v19;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C0DE8054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0DE80BC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0DE8054(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0DE8160(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C4F0(&qword_1EA1A7650, a2, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatShareAttributionNodeLayoutAttributes()
{
  return self;
}

double sub_1C0DE81CC()
{
  return *(double *)(*(void *)v0 + 80);
}

uint64_t sub_1C0DE81DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0DE81E8(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C4F0(&qword_1EA1A7658, a2, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
}

uint64_t sub_1C0DE8230(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C4F0(&qword_1EA1A7660, a2, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
}

uint64_t sub_1C0DE8278(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C4F0(&qword_1EA1A7668, a2, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
}

uint64_t sub_1C0DE82C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatShareAttributionNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0DE8318(void *a1)
{
  return FormatShareAttributionNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C0DE833C(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C4F0(&qword_1EA1A7688, a2, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
  return sub_1C151798C();
}

uint64_t method lookup function for FormatShareAttributionNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatShareAttributionNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatShareAttributionNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:reuseIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:contextLayoutOptions:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FormatShareAttributionNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

unsigned char *storeEnumTagSinglePayload for FormatShareAttributionNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DE8528);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatShareAttributionNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatShareAttributionNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C0DE8564()
{
  unint64_t result = qword_1EA1A7670;
  if (!qword_1EA1A7670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7670);
  }
  return result;
}

unint64_t sub_1C0DE85BC()
{
  unint64_t result = qword_1EA1A7678;
  if (!qword_1EA1A7678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7678);
  }
  return result;
}

unint64_t sub_1C0DE8614()
{
  unint64_t result = qword_1EA1A7680;
  if (!qword_1EA1A7680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7680);
  }
  return result;
}

uint64_t sub_1C0DE8668(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1608F10)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t FormatWebEmbed.Resolved.headline.getter()
{
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatWebEmbed.Resolved();
  sub_1C0DE8F70(v0 + *(int *)(v4 + 36), (uint64_t)v3, (uint64_t (*)(void))sub_1BFEC8548);
  sub_1BFEC84E0();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v5) == 1)
  {
    sub_1C00912C8((uint64_t)v3, (uint64_t (*)(void))sub_1BFEC8548);
    return 0;
  }
  else
  {
    sub_1C151948C();
    uint64_t v8 = v10[1];
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
  }
  return v8;
}

uint64_t FormatWebEmbed.Resolved.init(webEmbed:indexFileURLPromise:dataURLPromise:headline:genericDataVisualization:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v10 = type metadata accessor for GenericDataVisualization();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[1];
  *a6 = *a1;
  a6[1] = v17;
  uint64_t v18 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  sub_1C0DE8F70((uint64_t)a1, (uint64_t)a6 + v18[5], (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
  *(void *)((char *)a6 + v18[6]) = a2;
  *(void *)((char *)a6 + v18[7]) = a3;
  swift_bridgeObjectRetain();
  sub_1BFDE0354(v26, (uint64_t)v16);
  uint64_t v19 = (uint64_t)a1;
  uint64_t v20 = v27;
  sub_1C00912C8(v19, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
  sub_1C0DE944C((uint64_t)v16, (uint64_t)a6 + v18[9], (uint64_t (*)(void))sub_1BFEC8548);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v20, 1, v10) == 1)
  {
    sub_1C00912C8(v20, (uint64_t (*)(void))sub_1C06555A8);
    char v21 = (char *)a6 + v18[8];
    uint64_t v22 = type metadata accessor for WebEmbedDataVisualization();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  }
  else
  {
    sub_1C0DE944C(v20, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    uint64_t v24 = (uint64_t)a6 + v18[8];
    sub_1C0DE944C((uint64_t)v13, v24, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    uint64_t v25 = type metadata accessor for WebEmbedDataVisualization();
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
  }
}

uint64_t sub_1C0DE8F70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FormatWebEmbed.Resolved.init(sportsDataVisualization:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v34 = a2;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatWebEmbed();
  uint64_t v11 = (int *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v13 = (uint64_t *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v33 - v15);
  uint64_t v35 = *a1;
  uint64_t v17 = v35;
  uint64_t v36 = v35;
  SportsDataVisualization.configuredEmbedUrl.getter((uint64_t)v9);
  uint64_t v36 = v17;
  uint64_t v18 = SportsDataVisualization.identifier.getter();
  uint64_t v20 = v19;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v33(v5, 1, 1, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v13 + v11[7], v9, v6);
  *long long v13 = v18;
  v13[1] = v20;
  sub_1C0DE8F70((uint64_t)v5, (uint64_t)v13 + v11[8], (uint64_t (*)(void))sub_1BFF00BEC);
  *(uint64_t *)((char *)v13 + v11[9]) = 0;
  char v21 = (uint64_t *)((char *)v13 + v11[10]);
  *char v21 = 0;
  v21[1] = 0;
  uint64_t v22 = (uint64_t *)((char *)v13 + v11[11]);
  void *v22 = 0;
  v22[1] = 0;
  *(uint64_t *)((char *)v13 + v11[12]) = 0;
  *(uint64_t *)((char *)v13 + v11[13]) = MEMORY[0x1E4FBC870];
  sub_1C00912C8((uint64_t)v5, (uint64_t (*)(void))sub_1BFF00BEC);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(uint64_t *)((char *)v13 + v11[14]) = MEMORY[0x1E4FBC860];
  sub_1C0DE944C((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
  uint64_t v23 = v16[1];
  uint64_t v24 = v34;
  *uint64_t v34 = *v16;
  v24[1] = v23;
  uint64_t v25 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  sub_1C0DE8F70((uint64_t)v16, (uint64_t)v24 + v25[5], (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
  uint64_t v26 = v33;
  v33(v5, 1, 1, v6);
  sub_1BFECFAD8(0, (unint64_t *)&unk_1EB85AB50, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(void *)((char *)v24 + v25[6]) = sub_1C151908C();
  v26(v5, 1, 1, v6);
  swift_allocObject();
  uint64_t v27 = sub_1C151908C();
  sub_1C00912C8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
  *(void *)((char *)v24 + v25[7]) = v27;
  uint64_t v28 = (char *)v24 + v25[9];
  sub_1BFEC84E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  char v30 = (void *)((char *)v24 + v25[8]);
  *char v30 = v35;
  uint64_t v31 = type metadata accessor for WebEmbedDataVisualization();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
}

uint64_t sub_1C0DE944C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t FormatWebEmbed.Resolved.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbed.Resolved.webEmbed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatWebEmbed.Resolved();
  return sub_1C0DE8F70(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
}

uint64_t FormatWebEmbed.Resolved.indexFileURLPromise.getter()
{
  type metadata accessor for FormatWebEmbed.Resolved();
  return swift_retain();
}

uint64_t FormatWebEmbed.Resolved.dataURLPromise.getter()
{
  type metadata accessor for FormatWebEmbed.Resolved();
  return swift_retain();
}

uint64_t FormatWebEmbed.Resolved.dataVisualization.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatWebEmbed.Resolved();
  return sub_1C0DE8F70(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(void))sub_1BFECFC20);
}

uint64_t FormatWebEmbed.Resolved.sportsDataVisualization.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (unint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatWebEmbed.Resolved();
  sub_1C0DE8F70(v1 + *(int *)(v10 + 32), (uint64_t)v9, (uint64_t (*)(void))sub_1BFECFC20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    uint64_t result = sub_1C00912C8((uint64_t)v9, (uint64_t (*)(void))sub_1BFECFC20);
    *a1 = 0xF000000000000007;
  }
  else
  {
    sub_1C0DE8F70((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1C00912C8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      unint64_t v12 = 0xF000000000000007;
    }
    else
    {
      unint64_t v12 = *v6;
    }
    *a1 = v12;
    return sub_1C00912C8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  }
  return result;
}

uint64_t FormatWebEmbed.Resolved.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v31 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v33 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = (void (*)(char *, uint64_t, uint64_t, uint64_t))type metadata accessor for FormatWebEmbed();
  MEMORY[0x1F4188790](v35);
  uint64_t v11 = (void **)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0DEA59C(0, &qword_1EB85C5C8, MEMORY[0x1E4FBBDC0]);
  uint64_t v36 = v12;
  uint64_t v34 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (void **)((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DEA500();
  uint64_t v37 = v14;
  uint64_t v18 = v38;
  sub_1C1520EBC();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v38 = a1;
  uint64_t v19 = v17;
  char v41 = 0;
  sub_1C0DEA554(&qword_1EB85B7D8, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed);
  sub_1C15206EC();
  uint64_t v20 = v11[1];
  *uint64_t v17 = *v11;
  v17[1] = v20;
  uint64_t v35 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v17 + v15[5]);
  sub_1C0DE8F70((uint64_t)v11, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
  sub_1BFEC84E0();
  char v40 = 1;
  sub_1C0DEA554((unint64_t *)&qword_1EB85AC00, (void (*)(uint64_t))sub_1BFEC84E0);
  swift_bridgeObjectRetain();
  sub_1C152065C();
  char v30 = v11;
  sub_1C0DE944C((uint64_t)v9, (uint64_t)v17 + v15[9], (uint64_t (*)(void))sub_1BFEC8548);
  type metadata accessor for WebEmbedDataVisualization();
  char v39 = 2;
  sub_1C0DEA554(&qword_1EB867CB0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v21 = (uint64_t)v33;
  sub_1C152065C();
  uint64_t v22 = (uint64_t)v38;
  sub_1C0DE944C(v21, (uint64_t)v17 + v15[8], (uint64_t (*)(void))sub_1BFECFC20);
  uint64_t v23 = sub_1C1515FDC();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v29 = v17;
  uint64_t v24 = v31;
  v35(v31, 1, 1, v23);
  sub_1BFECFAD8(0, (unint64_t *)&unk_1EB85AB50, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  *(void *)((char *)v19 + v15[6]) = sub_1C151908C();
  v35(v24, 1, 1, v23);
  swift_allocObject();
  uint64_t v25 = sub_1C151908C();
  sub_1C00912C8((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v36);
  uint64_t v26 = v15[7];
  uint64_t v27 = (uint64_t)v29;
  *(void *)((char *)v29 + v26) = v25;
  sub_1C0DE8F70(v27, v32, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
  __swift_destroy_boxed_opaque_existential_1(v22);
  return sub_1C00912C8(v27, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
}

uint64_t FormatWebEmbed.Resolved.encode(to:)(void *a1)
{
  sub_1C0DEA59C(0, (unint64_t *)&unk_1EB85C660, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DEA500();
  sub_1C1520F0C();
  type metadata accessor for FormatWebEmbed.Resolved();
  v9[15] = 0;
  type metadata accessor for FormatWebEmbed();
  sub_1C0DEA554((unint64_t *)&unk_1EB85B7C8, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed);
  sub_1C152080C();
  if (!v1)
  {
    v9[14] = 1;
    sub_1BFEC84E0();
    sub_1C0DEA554((unint64_t *)&qword_1EB85ABF0, (void (*)(uint64_t))sub_1BFEC84E0);
    sub_1C152078C();
    v9[13] = 2;
    type metadata accessor for WebEmbedDataVisualization();
    sub_1C0DEA554((unint64_t *)&unk_1EB867C90, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0DEA150(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148FB7C(*a1, *a2);
}

uint64_t sub_1C0DEA15C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0DEA204()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0DEA298()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0DEA33C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0DEC7A4();
  *a1 = result;
  return result;
}

void sub_1C0DEA36C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE800000000000000;
  unint64_t v5 = 0x656E696C64616568;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000011;
    unint64_t v4 = 0x80000001C15FE6F0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6465626D45626577;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0DEA3D0()
{
  unint64_t v1 = 0x656E696C64616568;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6465626D45626577;
  }
}

uint64_t sub_1C0DEA430@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0DEC7A4();
  *a1 = result;
  return result;
}

uint64_t sub_1C0DEA458(uint64_t a1)
{
  unint64_t v2 = sub_1C0DEA500();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DEA494(uint64_t a1)
{
  unint64_t v2 = sub_1C0DEA500();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0DEA4D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWebEmbed.Resolved.init(from:)(a1, a2);
}

uint64_t sub_1C0DEA4E8(void *a1)
{
  return FormatWebEmbed.Resolved.encode(to:)(a1);
}

unint64_t sub_1C0DEA500()
{
  unint64_t result = qword_1EB85B780;
  if (!qword_1EB85B780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B780);
  }
  return result;
}

uint64_t sub_1C0DEA554(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0DEA59C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0DEA500();
    unint64_t v7 = a3(a1, &_s8ResolvedV10CodingKeysON_0, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t *_s8ResolvedVwCP_0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v21 = (uint64_t *)(v20 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a3[5];
    unint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *unint64_t v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    uint64_t v10 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v11 = v10[5];
    __dsta = (char *)v7 + v11;
    uint64_t v12 = &v8[v11];
    uint64_t v13 = sub_1C1515FDC();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(__dsta, v12, v13);
    uint64_t v16 = v10[6];
    uint64_t v17 = (char *)v7 + v16;
    uint64_t v18 = &v8[v16];
    uint64_t v53 = v13;
    uint64_t v52 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&v8[v16], 1, v13))
    {
      sub_1BFF00BEC();
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v15(v17, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    }
    *(void *)((char *)v7 + v10[7]) = *(void *)&v8[v10[7]];
    uint64_t v22 = v10[8];
    uint64_t v23 = (void *)((char *)v7 + v22);
    uint64_t v24 = &v8[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *uint64_t v23 = *(void *)v24;
    v23[1] = v25;
    uint64_t v26 = v10[9];
    uint64_t v27 = (void *)((char *)v7 + v26);
    uint64_t v28 = &v8[v26];
    uint64_t v29 = *((void *)v28 + 1);
    void *v27 = *(void *)v28;
    v27[1] = v29;
    *(void *)((char *)v7 + v10[10]) = *(void *)&v8[v10[10]];
    *(void *)((char *)v7 + v10[11]) = *(void *)&v8[v10[11]];
    *(void *)((char *)v7 + v10[12]) = *(void *)&v8[v10[12]];
    uint64_t v30 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v30) = *(uint64_t *)((char *)a2 + v30);
    uint64_t v31 = a3[8];
    __dst = (uint64_t *)((char *)a1 + v31);
    uint64_t v32 = (uint64_t *)((char *)a2 + v31);
    uint64_t v33 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v54 = *(void *)(v33 - 8);
    uint64_t v34 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v35 = v33;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v34(v32, 1, v35))
    {
      sub_1BFECFC20(0);
      memcpy(__dst, v32, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v38 = *v32;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v39 = v32[1];
        void *__dst = v38;
        __dst[1] = v39;
        uint64_t v40 = type metadata accessor for GenericDataVisualization();
        uint64_t v41 = *(int *)(v40 + 20);
        uint64_t v42 = (char *)__dst + v41;
        char v43 = (char *)v32 + v41;
        swift_bridgeObjectRetain();
        v52(v42, v43, v53);
        *(void *)((char *)__dst + *(int *)(v40 + 24)) = *(uint64_t *)((char *)v32 + *(int *)(v40 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        void *__dst = v38;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v35);
    }
    uint64_t v21 = a1;
    uint64_t v44 = a3[9];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    sub_1BFEC84E0();
    uint64_t v48 = v47;
    uint64_t v49 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v46, 1, v47))
    {
      sub_1BFEC8548(0);
      memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v45, v46, v48);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v45, 0, 1, v48);
    }
  }
  return v21;
}

uint64_t _s8ResolvedVwxx_0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for FormatWebEmbed();
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  uint64_t v10 = v4 + *(int *)(v5 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = type metadata accessor for WebEmbedDataVisualization();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for GenericDataVisualization();
      v9(v11 + *(int *)(v13 + 20), v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  uint64_t v14 = a1 + a2[9];
  sub_1BFEC84E0();
  uint64_t v16 = v15;
  uint64_t v19 = *(void *)(v15 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v14, 1, v15);
  if (!result)
  {
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
    return v18(v14, v16);
  }
  return result;
}

void *_s8ResolvedVwcp_0(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a3[5];
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = *(void *)((char *)a2 + v5 + 8);
  *uint64_t v6 = *(void *)((char *)a2 + v5);
  v6[1] = v8;
  uint64_t v9 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v10 = v9[5];
  __dsta = &v7[v10];
  uint64_t v53 = (char *)v6 + v10;
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v53, __dsta, v11);
  uint64_t v14 = v9[6];
  uint64_t v15 = (char *)v6 + v14;
  uint64_t v16 = &v7[v14];
  uint64_t v49 = v11;
  uint64_t v48 = v13;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&v7[v14], 1, v11))
  {
    sub_1BFF00BEC();
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(void *)((char *)v6 + v9[7]) = *(void *)&v7[v9[7]];
  uint64_t v18 = v9[8];
  uint64_t v19 = (void *)((char *)v6 + v18);
  uint64_t v20 = &v7[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *uint64_t v19 = *(void *)v20;
  v19[1] = v21;
  uint64_t v22 = v9[9];
  uint64_t v23 = (void *)((char *)v6 + v22);
  uint64_t v24 = &v7[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *uint64_t v23 = *(void *)v24;
  v23[1] = v25;
  *(void *)((char *)v6 + v9[10]) = *(void *)&v7[v9[10]];
  *(void *)((char *)v6 + v9[11]) = *(void *)&v7[v9[11]];
  *(void *)((char *)v6 + v9[12]) = *(void *)&v7[v9[12]];
  uint64_t v26 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  uint64_t v27 = a3[8];
  __dst = (void *)((char *)a1 + v27);
  uint64_t v54 = a1;
  uint64_t v28 = (void *)((char *)a2 + v27);
  uint64_t v29 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v50 = *(void *)(v29 - 8);
  uint64_t v30 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48);
  uint64_t v31 = v29;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v30(v28, 1, v31))
  {
    sub_1BFECFC20(0);
    memcpy(__dst, v28, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v34 = *v28;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v35 = v28[1];
      void *__dst = v34;
      __dst[1] = v35;
      uint64_t v36 = type metadata accessor for GenericDataVisualization();
      uint64_t v37 = *(int *)(v36 + 20);
      uint64_t v38 = (char *)__dst + v37;
      uint64_t v39 = (char *)v28 + v37;
      swift_bridgeObjectRetain();
      v48(v38, v39, v49);
      *(void *)((char *)__dst + *(int *)(v36 + 24)) = *(uint64_t *)((char *)v28 + *(int *)(v36 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      void *__dst = v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v31);
  }
  uint64_t v40 = a3[9];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  sub_1BFEC84E0();
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v43))
  {
    sub_1BFEC8548(0);
    memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v41, v42, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v41, 0, 1, v44);
  }
  return v54;
}

void *_s8ResolvedVwca_0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = a3;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v65 = a2;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)uint64_t v7 = *(void *)((char *)a2 + v6);
  *((void *)v7 + 1) = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v14 + 24);
  v62(v11, v12, v13);
  uint64_t v15 = v9[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v63 = v14;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v19 = v18(&v7[v15], 1, v13);
  uint64_t v64 = v13;
  int v20 = v18(v17, 1, v13);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v17, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
LABEL_6:
    sub_1BFF00BEC();
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v62(v16, v17, v13);
LABEL_7:
  uint64_t v22 = v65;
  uint64_t v23 = a1;
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  swift_retain();
  swift_release();
  uint64_t v24 = v9[8];
  uint64_t v25 = &v7[v24];
  uint64_t v26 = &v8[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v9[9];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
  *(void *)&v7[v9[11]] = *(void *)&v8[v9[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v9[12]] = *(void *)&v8[v9[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v69;
  *(void *)((char *)a1 + v69[6]) = *(void *)((char *)v65 + v69[6]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + v69[7]) = *(void *)((char *)v65 + v69[7]);
  swift_retain();
  swift_release();
  uint64_t v31 = v69[8];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)v65 + v31);
  uint64_t v34 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *uint64_t v32 = *v33;
      if (EnumCaseMultiPayload == 1)
      {
        v32[1] = v33[1];
        uint64_t v40 = type metadata accessor for GenericDataVisualization();
        uint64_t v41 = *(int *)(v40 + 20);
        uint64_t v66 = (char *)v33 + v41;
        uint64_t v67 = (char *)v32 + v41;
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        swift_bridgeObjectRetain();
        v42(v67, v66, v64);
        uint64_t v43 = *(int *)(v40 + 24);
        uint64_t v30 = v69;
        *(void *)((char *)v32 + v43) = *(void *)((char *)v33 + v43);
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_21;
    }
LABEL_13:
    sub_1BFECFC20(0);
    memcpy(v32, v33, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_21;
  }
  if (v38)
  {
    sub_1C00912C8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_13;
  }
  if (a1 != v65)
  {
    sub_1C00912C8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    int v45 = swift_getEnumCaseMultiPayload();
    *uint64_t v32 = *v33;
    if (v45 == 1)
    {
      v32[1] = v33[1];
      uint64_t v46 = type metadata accessor for GenericDataVisualization();
      uint64_t v47 = *(int *)(v46 + 20);
      uint64_t v48 = (char *)v32 + v47;
      uint64_t v68 = (char *)v33 + v47;
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
      swift_bridgeObjectRetain();
      v49(v48, v68, v64);
      uint64_t v50 = *(int *)(v46 + 24);
      uint64_t v30 = v69;
      *(void *)((char *)v32 + v50) = *(void *)((char *)v33 + v50);
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  uint64_t v51 = v30[9];
  uint64_t v52 = (char *)v23 + v51;
  uint64_t v53 = (char *)v22 + v51;
  sub_1BFEC84E0();
  uint64_t v55 = v54;
  uint64_t v56 = *(void *)(v54 - 8);
  uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  int v58 = v57(v52, 1, v54);
  int v59 = v57(v53, 1, v55);
  if (!v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v52, v53, v55);
      return v23;
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v55);
    goto LABEL_26;
  }
  if (v59)
  {
LABEL_26:
    sub_1BFEC8548(0);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    return v23;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v52, v53, v55);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v52, 0, 1, v55);
  return v23;
}

_OWORD *_s8ResolvedVwtk_0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v8 = v7[5];
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  uint64_t v14 = v7[6];
  uint64_t v15 = &v5[v14];
  uint64_t v16 = &v6[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&v6[v14], 1, v11))
  {
    sub_1BFF00BEC();
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(void *)&v5[v7[7]] = *(void *)&v6[v7[7]];
  *(_OWORD *)&v5[v7[8]] = *(_OWORD *)&v6[v7[8]];
  *(_OWORD *)&v5[v7[9]] = *(_OWORD *)&v6[v7[9]];
  *(void *)&v5[v7[10]] = *(void *)&v6[v7[10]];
  *(void *)&v5[v7[11]] = *(void *)&v6[v7[11]];
  *(void *)&v5[v7[12]] = *(void *)&v6[v7[12]];
  uint64_t v18 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  uint64_t v19 = a3[8];
  int v20 = (_OWORD *)((char *)a1 + v19);
  uint64_t v21 = (_OWORD *)((char *)a2 + v19);
  uint64_t v22 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    sub_1BFECFC20(0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *int v20 = *v21;
      uint64_t v25 = type metadata accessor for GenericDataVisualization();
      v13((char *)v20 + *(int *)(v25 + 20), (char *)v21 + *(int *)(v25 + 20), v11);
      *(void *)((char *)v20 + *(int *)(v25 + 24)) = *(void *)((char *)v21 + *(int *)(v25 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(v23 + 64));
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  sub_1BFEC84E0();
  uint64_t v30 = v29;
  uint64_t v31 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v29))
  {
    sub_1BFEC8548(0);
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v27, v28, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
  }
  return a1;
}

void *_s8ResolvedVwta_0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v60 = a1;
  unsigned int v61 = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  int v59 = a2;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
  *((void *)v8 + 1) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C1515FDC();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v16 + 40);
  v57(v13, v14, v15);
  uint64_t v17 = v11[6];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v21 = v20(&v8[v17], 1, v15);
  uint64_t v58 = v15;
  int v22 = v20(v19, 1, v15);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v19, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
LABEL_6:
    sub_1BFF00BEC();
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  v57(v18, v19, v15);
LABEL_7:
  *(void *)&v8[v11[7]] = *(void *)&v9[v11[7]];
  swift_release();
  uint64_t v24 = v11[8];
  uint64_t v25 = &v8[v24];
  uint64_t v26 = &v9[v24];
  uint64_t v28 = *(void *)v26;
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v11[9];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  *(void *)&v8[v11[10]] = *(void *)&v9[v11[10]];
  *(void *)&v8[v11[11]] = *(void *)&v9[v11[11]];
  swift_bridgeObjectRelease();
  *(void *)&v8[v11[12]] = *(void *)&v9[v11[12]];
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[6]) = *(void *)((char *)v59 + v61[6]);
  swift_release();
  *(void *)((char *)a1 + v61[7]) = *(void *)((char *)v59 + v61[7]);
  swift_release();
  uint64_t v34 = v61[8];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)v59 + v34;
  uint64_t v37 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      if (a1 == v59) {
        goto LABEL_21;
      }
      sub_1C00912C8((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
        uint64_t v45 = type metadata accessor for GenericDataVisualization();
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v35[*(int *)(v45 + 20)], &v36[*(int *)(v45 + 20)], v58);
        *(void *)&v35[*(int *)(v45 + 24)] = *(void *)&v36[*(int *)(v45 + 24)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_21;
      }
      size_t v44 = *(void *)(v38 + 64);
LABEL_14:
      memcpy(v35, v36, v44);
      goto LABEL_21;
    }
    sub_1C00912C8((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_13:
    sub_1BFECFC20(0);
    size_t v44 = *(void *)(*(void *)(v43 - 8) + 64);
    goto LABEL_14;
  }
  if (v41) {
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    uint64_t v42 = type metadata accessor for GenericDataVisualization();
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v35[*(int *)(v42 + 20)], &v36[*(int *)(v42 + 20)], v58);
    *(void *)&v35[*(int *)(v42 + 24)] = *(void *)&v36[*(int *)(v42 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v35, v36, *(void *)(v38 + 64));
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_21:
  uint64_t v46 = v61[9];
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)v59 + v46;
  sub_1BFEC84E0();
  uint64_t v50 = v49;
  uint64_t v51 = *(void *)(v49 - 8);
  uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v47, 1, v49);
  int v54 = v52(v48, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v47, v48, v50);
      return v60;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v50);
    goto LABEL_26;
  }
  if (v54)
  {
LABEL_26:
    sub_1BFEC8548(0);
    memcpy(v47, v48, *(void *)(*(void *)(v55 - 8) + 64));
    return v60;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v47, v48, v50);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v47, 0, 1, v50);
  return v60;
}

uint64_t sub_1C0DEC2A8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for FormatWebEmbed();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_1BFECFC20(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_9;
  }
  sub_1BFEC8548(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[9];
  return v15(v17, a2, v16);
}

uint64_t sub_1C0DEC420(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for FormatWebEmbed();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_1BFECFC20(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_7;
  }
  sub_1BFEC8548(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[9];
  return v15(v17, a2, a2, v16);
}

unsigned char *_s8ResolvedV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DEC664);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa_0()
{
  return &_s8ResolvedV10CodingKeysON_0;
}

unint64_t sub_1C0DEC6A0()
{
  unint64_t result = qword_1EA1A7690;
  if (!qword_1EA1A7690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7690);
  }
  return result;
}

unint64_t sub_1C0DEC6F8()
{
  unint64_t result = qword_1EB85B7A8;
  if (!qword_1EB85B7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B7A8);
  }
  return result;
}

unint64_t sub_1C0DEC750()
{
  unint64_t result = qword_1EB85B790[0];
  if (!qword_1EB85B790[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB85B790);
  }
  return result;
}

uint64_t sub_1C0DEC7A4()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0DEC7F4()
{
  return 8;
}

void *sub_1C0DEC800(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C0DEC80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v35 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v35 - v12;
  *(void *)&double v15 = MEMORY[0x1F4188790](v14).n128_u64[0];
  uint64_t v17 = (char *)&v35 - v16;
  switch(*v2)
  {
    case 1:
      id v21 = objc_msgSend(*(id *)(a1 + 40), sel_videoCallToActionURL, v15);
      if (v21)
      {
        int v22 = v21;
        sub_1C1515F1C();

        uint64_t v23 = sub_1C1515FDC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 0, 1, v23);
      }
      else
      {
        uint64_t v31 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
      }
      uint64_t v17 = v13;
      break;
    case 2:
      id v24 = objc_msgSend(*(id *)(a1 + 40), sel_routeURL, v15);
      if (v24)
      {
        uint64_t v25 = v24;
        sub_1C1515F1C();

        uint64_t v26 = sub_1C1515FDC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 0, 1, v26);
      }
      else
      {
        uint64_t v32 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v10, 1, 1, v32);
      }
      uint64_t v17 = v10;
      break;
    case 3:
      id v27 = objc_msgSend(*(id *)(a1 + 40), sel_contentURL, v15);
      if (v27)
      {
        uint64_t v28 = v27;
        sub_1C1515F1C();

        uint64_t v29 = sub_1C1515FDC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v7, 0, 1, v29);
      }
      else
      {
        uint64_t v33 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v7, 1, 1, v33);
      }
      uint64_t v17 = v7;
      break;
    default:
      id v18 = objc_msgSend(*(id *)(a1 + 40), sel_videoURL, v15);
      if (v18)
      {
        uint64_t v19 = v18;
        sub_1C1515F1C();

        uint64_t v20 = sub_1C1515FDC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 0, 1, v20);
      }
      else
      {
        uint64_t v30 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v17, 1, 1, v30);
      }
      break;
  }
  return sub_1C002F694((uint64_t)v17, a2);
}

BOOL static FormatHeadlineBinding.URL.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C0DECBCC(unsigned __int8 *a1, char *a2)
{
  return sub_1C1485CF8(*a1, *a2);
}

uint64_t sub_1C0DECBD8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0DECCBC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0DECD88()
{
  return sub_1C1520E0C();
}

void sub_1C0DECE68(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x4C52556F65646976;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB000000004C5255;
      uint64_t v3 = 0x6174436F65646976;
      goto LABEL_3;
    case 2:
      *a1 = 0x4C52556574756F72;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x55746E65746E6F63;
      a1[1] = 0xEA00000000004C52;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C0DECF0C()
{
  return sub_1C151EAEC();
}

void sub_1C0DECF5C(void *a1@<X8>)
{
  *a1 = &unk_1F1B6AF78;
}

uint64_t FormatHeadlineBinding.URL.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatHeadlineBinding.URL.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0DECFE4()
{
  unint64_t result = qword_1EA1A7698;
  if (!qword_1EA1A7698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7698);
  }
  return result;
}

unint64_t sub_1C0DED038(uint64_t a1)
{
  unint64_t result = sub_1C0DED060();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DED060()
{
  unint64_t result = qword_1EA1A76A0;
  if (!qword_1EA1A76A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76A0);
  }
  return result;
}

unint64_t sub_1C0DED0B4(void *a1)
{
  a1[1] = sub_1C007522C();
  a1[2] = sub_1C08EA97C();
  unint64_t result = sub_1C0DECFE4();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0DED0EC(void *a1)
{
  return FormatHeadlineBinding.URL.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.URL()
{
  return &type metadata for FormatHeadlineBinding.URL;
}

ValueMetadata *_s3URLO10CodingTypeOMa_0()
{
  return &_s3URLO10CodingTypeON_0;
}

unint64_t sub_1C0DED150()
{
  unint64_t result = qword_1EA1A76A8;
  if (!qword_1EA1A76A8)
  {
    sub_1C0DED1A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76A8);
  }
  return result;
}

void sub_1C0DED1A8()
{
  if (!qword_1EA1A76B0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A76B0);
    }
  }
}

unint64_t sub_1C0DED204()
{
  unint64_t result = qword_1EA1A76B8;
  if (!qword_1EA1A76B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76B8);
  }
  return result;
}

uint64_t sub_1C0DED258@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v66 = a3;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v63 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v64 = (uint64_t)&v61 - v7;
  MEMORY[0x1F4188790](v8);
  unsigned int v61 = (char *)&v61 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (uint64_t)&v61 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v61 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v61 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v61 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v61 - v22;
  uint64_t v24 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (id *)((char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (id *)((char *)&v61 - v28);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (id *)((char *)&v61 - v31);
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (id *)((char *)&v61 - v34);
  switch(*a1)
  {
    case 1:
      sub_1BFF96680(v65, (uint64_t)v32);
      id v39 = objc_msgSend(v32[5], sel_videoCallToActionURL);
      if (v39)
      {
        int v40 = v39;
        sub_1C1515F1C();

        uint64_t v41 = sub_1C1515FDC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v14, 0, 1, v41);
      }
      else
      {
        uint64_t v52 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v14, 1, 1, v52);
      }
      sub_1C002F694((uint64_t)v14, (uint64_t)v17);
      uint64_t v51 = v66;
      sub_1C04338EC(0x5443206F65646956, 0xED00004C52552041, (uint64_t)v17, v66);
      uint64_t v35 = v32;
      break;
    case 2:
      sub_1BFF96680(v65, (uint64_t)v29);
      id v42 = objc_msgSend(v29[5], sel_routeURL);
      if (v42)
      {
        uint64_t v43 = v42;
        size_t v44 = v61;
        sub_1C1515F1C();

        uint64_t v45 = sub_1C1515FDC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
      }
      else
      {
        uint64_t v53 = sub_1C1515FDC();
        size_t v44 = v61;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v61, 1, 1, v53);
      }
      uint64_t v51 = v66;
      uint64_t v54 = (uint64_t)v44;
      uint64_t v55 = v62;
      sub_1C002F694(v54, v62);
      sub_1C04338EC(0x5255206574756F52, 0xE90000000000004CLL, v55, v51);
      uint64_t v35 = v29;
      break;
    case 3:
      sub_1BFF96680(v65, (uint64_t)v26);
      id v46 = objc_msgSend(v26[5], sel_contentURL);
      if (v46)
      {
        uint64_t v47 = v46;
        uint64_t v48 = v63;
        sub_1C1515F1C();

        uint64_t v49 = sub_1C1515FDC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
      }
      else
      {
        uint64_t v56 = sub_1C1515FDC();
        uint64_t v48 = v63;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v63, 1, 1, v56);
      }
      uint64_t v51 = v66;
      uint64_t v57 = (uint64_t)v48;
      uint64_t v58 = v64;
      sub_1C002F694(v57, v64);
      sub_1C04338EC(0x20746E65746E6F43, 0xEB000000004C5255, v58, v51);
      uint64_t v35 = v26;
      break;
    default:
      sub_1BFF96680(v65, (uint64_t)&v61 - v34);
      id v36 = objc_msgSend(v35[5], sel_videoURL);
      if (v36)
      {
        uint64_t v37 = v36;
        sub_1C1515F1C();

        uint64_t v38 = sub_1C1515FDC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v20, 0, 1, v38);
      }
      else
      {
        uint64_t v50 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v20, 1, 1, v50);
      }
      uint64_t v51 = v66;
      sub_1C002F694((uint64_t)v20, (uint64_t)v23);
      sub_1C04338EC(0x5255206F65646956, 0xE90000000000004CLL, (uint64_t)v23, v51);
      break;
  }
  sub_1BFF2F7F4((uint64_t)v35);
  uint64_t v59 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v51, 0, 1, v59);
}

uint64_t static FormatColorModifyComponentProcessor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  double v3 = *(double *)(a2 + 8);
  return sub_1C1478790(*(unsigned char *)a1, *(unsigned char *)a2) & (v2 == v3);
}

unint64_t sub_1C0DED8F8(uint64_t a1)
{
  unint64_t result = sub_1C0DED920();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DED920()
{
  unint64_t result = qword_1EA1A76C0;
  if (!qword_1EA1A76C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76C0);
  }
  return result;
}

uint64_t sub_1C0DED974(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  double v3 = *(double *)(a2 + 8);
  return sub_1C1478790(*(unsigned char *)a1, *(unsigned char *)a2) & (v2 == v3);
}

unint64_t sub_1C0DED9B0(void *a1)
{
  a1[1] = sub_1BFDF6BDC();
  a1[2] = sub_1BFDAFBE8();
  unint64_t result = sub_1C0DED9E8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DED9E8()
{
  unint64_t result = qword_1EA1A76C8;
  if (!qword_1EA1A76C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColorModifyComponentProcessor()
{
  return &type metadata for FormatColorModifyComponentProcessor;
}

unint64_t FormatDateFormat.Context.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x63696D616E7964;
      break;
    case 2:
      unint64_t result = 0x6F6C61646E617473;
      break;
    case 3:
      unint64_t result = 0x6D6574497473696CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatDateFormat.Style.rawValue.getter()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74726F6873;
      break;
    case 2:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 3:
      uint64_t result = 1735290732;
      break;
    case 4:
      uint64_t result = 1819047270;
      break;
    default:
      return result;
  }
  return result;
}

void static FormatDateFormat.default.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 1;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
}

uint64_t sub_1C0DEDBB8(uint64_t a1)
{
  sub_1BFC3B15C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void FormatDateFormat.Custom.dateStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void FormatDateFormat.Custom.timeStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

uint64_t FormatDateFormat.Custom.template.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatDateFormat.Custom.context.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t FormatDateFormat.Custom.timeZone.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0DEDCA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDateFormat.Custom.init(from:)(a1, a2);
}

uint64_t sub_1C0DEDCBC(void *a1)
{
  return FormatDateFormat.Custom.encode(to:)(a1);
}

NewsFeed::FormatDateFormat::Style_optional __swiftcall FormatDateFormat.Style.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C0DEDD30()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0DEDE00()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0DEDEB8()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatDateFormat::Style_optional sub_1C0DEDF84(Swift::String *a1)
{
  return FormatDateFormat.Style.init(rawValue:)(*a1);
}

void sub_1C0DEDF90(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x74726F6873;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D756964656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 1735290732;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 1819047270;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C0DEE024(unsigned __int8 *a1, char *a2)
{
  return sub_1C1495E20(*a1, *a2);
}

uint64_t sub_1C0DEE030()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0DEE090(void *a1)
{
  return FormatDateFormat.Style.encode(to:)(a1);
}

NewsFeed::FormatDateFormat::Context_optional __swiftcall FormatDateFormat.Context.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_1C0DEE104()
{
  return sub_1C015E01C();
}

uint64_t sub_1C0DEE10C()
{
  return sub_1C044BDA0();
}

uint64_t sub_1C0DEE114()
{
  return sub_1C045151C();
}

NewsFeed::FormatDateFormat::Context_optional sub_1C0DEE11C(Swift::String *a1)
{
  return FormatDateFormat.Context.init(rawValue:)(*a1);
}

unint64_t sub_1C0DEE128@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatDateFormat.Context.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0DEE150(unsigned __int8 *a1, char *a2)
{
  return sub_1C1495BFC(*a1, *a2);
}

uint64_t sub_1C0DEE15C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0DEE1BC(void *a1)
{
  return FormatDateFormat.Context.encode(to:)(a1);
}

void sub_1C0DEE1D4(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 1;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
}

BOOL _s8NewsFeed010FormatDateC0O6CustomV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4 = *a1;
  int v5 = a1[1];
  uint64_t v7 = *((void *)a1 + 1);
  uint64_t v6 = *((void *)a1 + 2);
  unsigned __int8 v8 = a1[24];
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v10 = *((void *)a1 + 5);
  int v11 = *a2;
  int v12 = a2[1];
  uint64_t v13 = *((void *)a2 + 1);
  uint64_t v14 = *((void *)a2 + 2);
  char v15 = a2[24];
  uint64_t v17 = *((void *)a2 + 4);
  uint64_t v16 = *((void *)a2 + 5);
  if (v4 == 5)
  {
    if (v11 != 5) {
      return 0;
    }
  }
  else
  {
    if (v11 == 5) {
      return 0;
    }
    uint64_t v35 = *((void *)a1 + 2);
    uint64_t v36 = *((void *)a2 + 2);
    uint64_t v18 = *((void *)a1 + 1);
    char v19 = a2[24];
    unsigned __int8 v20 = a1[24];
    uint64_t v21 = *((void *)a2 + 4);
    uint64_t v22 = *((void *)a2 + 5);
    uint64_t v23 = *((void *)a1 + 5);
    uint64_t v24 = *((void *)a1 + 4);
    uint64_t v25 = *((void *)a2 + 1);
    char v26 = sub_1C1495E20(v4, v11);
    uint64_t v13 = v25;
    uint64_t v9 = v24;
    uint64_t v10 = v23;
    uint64_t v16 = v22;
    uint64_t v17 = v21;
    unsigned __int8 v8 = v20;
    char v15 = v19;
    uint64_t v7 = v18;
    uint64_t v6 = v35;
    uint64_t v14 = v36;
    if ((v26 & 1) == 0) {
      return 0;
    }
  }
  if (v5 == 5)
  {
    if (v12 != 5) {
      return 0;
    }
  }
  else
  {
    if (v12 == 5) {
      return 0;
    }
    unsigned __int8 v27 = v5;
    char v28 = v12;
    uint64_t v29 = v9;
    uint64_t v30 = v13;
    char v31 = sub_1C1495E20(v27, v28);
    uint64_t v13 = v30;
    uint64_t v9 = v29;
    if ((v31 & 1) == 0) {
      return 0;
    }
  }
  if (!v6)
  {
    uint64_t v32 = v9;
    if (v14) {
      return 0;
    }
    goto LABEL_18;
  }
  if (!v14) {
    return 0;
  }
  uint64_t v32 = v9;
  if (v7 == v13 && v6 == v14 || (v33 = sub_1C1520A9C(), BOOL result = 0, (v33 & 1) != 0))
  {
LABEL_18:
    if (sub_1C1495BFC(v8, v15))
    {
      if (v10) {
        return v16 && (v32 == v17 && v10 == v16 || (sub_1C1520A9C() & 1) != 0);
      }
      if (!v16) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

BOOL _s8NewsFeed010FormatDateC0O2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  if (v5 == 1)
  {
    if (v10 != 1) {
      goto LABEL_8;
    }
    BOOL v14 = 1;
    sub_1BFF51C94(*a1, v3, 1);
    uint64_t v15 = v8;
    uint64_t v16 = v9;
    uint64_t v17 = 1;
LABEL_10:
    sub_1BFF51C94(v15, v16, v17);
    return v14;
  }
  if (v5 != 2)
  {
    if ((unint64_t)(v10 - 1) < 2) {
      goto LABEL_8;
    }
    __int16 v28 = *a1;
    uint64_t v29 = v3;
    uint64_t v30 = v5;
    char v31 = v4;
    uint64_t v32 = v7;
    uint64_t v33 = v6;
    __int16 v22 = v8;
    uint64_t v23 = v9;
    uint64_t v24 = v10;
    char v25 = v11;
    uint64_t v26 = v12;
    uint64_t v27 = v13;
    uint64_t v21 = v2;
    uint64_t v19 = v2;
    sub_1BFF523A4(v8, v9, v10);
    sub_1BFF523A4(v19, v3, v5);
    sub_1BFF523A4(v8, v9, v10);
    sub_1BFF523A4(v21, v3, v5);
    BOOL v14 = _s8NewsFeed010FormatDateC0O6CustomV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)&v28, (unsigned __int8 *)&v22);
    sub_1BFF51C94(v21, v3, v5);
    sub_1BFF51C94(v8, v9, v10);
    sub_1BFF51C94(v8, v9, v10);
    uint64_t v15 = v21;
    uint64_t v16 = v3;
    uint64_t v17 = v5;
    goto LABEL_10;
  }
  if (v10 != 2)
  {
LABEL_8:
    uint64_t v18 = *a1;
    sub_1BFF523A4(*a2, a2[1], v10);
    sub_1BFF523A4(v18, v3, v5);
    sub_1BFF51C94(v18, v3, v5);
    sub_1BFF51C94(v8, v9, v10);
    return 0;
  }
  sub_1BFF51C94(*a1, v3, 2);
  sub_1BFF51C94(v8, v9, 2);
  return 1;
}

unint64_t sub_1C0DEE670(uint64_t a1)
{
  unint64_t result = sub_1C0DEE698();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DEE698()
{
  unint64_t result = qword_1EA1A76D0;
  if (!qword_1EA1A76D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76D0);
  }
  return result;
}

uint64_t sub_1C0DEE6EC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0DEEC48(a1, a2, a3, (uint64_t (*)(void))sub_1C08828A4, (uint64_t (*)(void))sub_1C08FCAA8, (uint64_t (*)(void))sub_1C0DEE72C);
}

unint64_t sub_1C0DEE72C()
{
  unint64_t result = qword_1EA1A76D8;
  if (!qword_1EA1A76D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76D8);
  }
  return result;
}

unint64_t sub_1C0DEE784()
{
  unint64_t result = qword_1EA1A76E0;
  if (!qword_1EA1A76E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76E0);
  }
  return result;
}

uint64_t sub_1C0DEE7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0DEE9EC(a1, a2, a3, (uint64_t (*)(void))sub_1C0DEE804, (uint64_t (*)(void))sub_1C0DEE858);
}

unint64_t sub_1C0DEE804()
{
  unint64_t result = qword_1EA1A76E8;
  if (!qword_1EA1A76E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76E8);
  }
  return result;
}

unint64_t sub_1C0DEE858()
{
  unint64_t result = qword_1EA1A76F0;
  if (!qword_1EA1A76F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76F0);
  }
  return result;
}

unint64_t sub_1C0DEE8AC(uint64_t a1)
{
  unint64_t result = sub_1C0DEE8D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DEE8D4()
{
  unint64_t result = qword_1EA1A76F8;
  if (!qword_1EA1A76F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A76F8);
  }
  return result;
}

uint64_t sub_1C0DEE928(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0DEEC48(a1, a2, a3, (uint64_t (*)(void))sub_1C0882B0C, (uint64_t (*)(void))sub_1C08FCA48, (uint64_t (*)(void))sub_1C0DEE784);
}

unint64_t sub_1C0DEE96C()
{
  unint64_t result = qword_1EA1A7700;
  if (!qword_1EA1A7700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7700);
  }
  return result;
}

uint64_t sub_1C0DEE9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0DEE9EC(a1, a2, a3, (uint64_t (*)(void))sub_1C0DEEA28, (uint64_t (*)(void))sub_1C0DEEA7C);
}

uint64_t sub_1C0DEE9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0DEEA28()
{
  unint64_t result = qword_1EA1A7708;
  if (!qword_1EA1A7708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7708);
  }
  return result;
}

unint64_t sub_1C0DEEA7C()
{
  unint64_t result = qword_1EB8645B0;
  if (!qword_1EB8645B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8645B0);
  }
  return result;
}

unint64_t sub_1C0DEEAD0(uint64_t a1)
{
  unint64_t result = sub_1C0DEEAF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DEEAF8()
{
  unint64_t result = qword_1EA1A7710;
  if (!qword_1EA1A7710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7710);
  }
  return result;
}

uint64_t sub_1C0DEEB4C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0DEEC48(a1, a2, a3, (uint64_t (*)(void))sub_1C0882B60, (uint64_t (*)(void))sub_1C08FC900, (uint64_t (*)(void))sub_1C0DEE96C);
}

unint64_t sub_1C0DEEB8C(uint64_t a1)
{
  unint64_t result = sub_1C0DEEBB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DEEBB4()
{
  unint64_t result = qword_1EA1A7718;
  if (!qword_1EA1A7718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7718);
  }
  return result;
}

uint64_t sub_1C0DEEC08(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0DEEC48(a1, a2, a3, (uint64_t (*)(void))sub_1BFDEB040, (uint64_t (*)(void))sub_1BFDD6A70, (uint64_t (*)(void))sub_1C0DEEC9C);
}

uint64_t sub_1C0DEEC48(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DEEC9C()
{
  unint64_t result = qword_1EA1A7720;
  if (!qword_1EA1A7720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7720);
  }
  return result;
}

unint64_t destroy for FormatDateFormat(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FormatDateFormat(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  if ((int)v4 - 1 < 0)
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v3;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for FormatDateFormat(uint64_t a1, long long *a2)
{
  LODWORD(v4) = -1;
  if (*(void *)(a1 + 16) >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = *(void *)(a1 + 16);
  }
  int v6 = v5 - 1;
  if (*((void *)a2 + 2) < 0xFFFFFFFFuLL) {
    uint64_t v4 = *((void *)a2 + 2);
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *((unsigned char *)a2 + 1);
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v8 = *a2;
    long long v9 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *((unsigned char *)a2 + 1);
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for FormatDateFormat(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 16);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 16);
    }
    if ((int)v7 - 1 < 0)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v10 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v10;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_1C0DEEF8C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

double sub_1C0DEEFB0(uint64_t a1, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(a1 + 40) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *(void *)(a1 + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDateFormat()
{
  return &type metadata for FormatDateFormat;
}

uint64_t destroy for FormatDateFormat.Custom()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDateFormat.Custom(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatDateFormat.Custom(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatDateFormat.Custom(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDateFormat.Custom(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatDateFormat.Custom(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDateFormat.Custom()
{
  return &type metadata for FormatDateFormat.Custom;
}

unsigned char *storeEnumTagSinglePayload for FormatDateFormat.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *double result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DEF300);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDateFormat.Style()
{
  return &type metadata for FormatDateFormat.Style;
}

unsigned char *storeEnumTagSinglePayload for FormatDateFormat.Context(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *double result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DEF404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDateFormat.Context()
{
  return &type metadata for FormatDateFormat.Context;
}

uint64_t FormatLayoutViewDebugger.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_1BFEACEF4;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t FormatLayoutViewDebugger.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = sub_1BFEACEF4;
  *(void *)(v0 + 24) = 0;
  return result;
}

uint64_t FormatLayoutViewDebugger.__allocating_init(block:)(uint64_t a1, uint64_t a2)
{
  return sub_1C0DEF594(a1, a2, (uint64_t)&unk_1F1BFE120, (uint64_t)sub_1C0DEF56C);
}

{
  return sub_1C0DEF594(a1, a2, (uint64_t)&unk_1F1BFE170, (uint64_t)sub_1C0DEF6FC);
}

uint64_t sub_1C0DEF4B0(long long *a1, uint64_t (*a2)(long long *))
{
  long long v6 = *a1;
  uint64_t v2 = a2(&v6);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = v2;
  sub_1BFE4DBE0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C15320E0;
  *(void *)(v4 + 32) = v3;
  *(void *)&long long v6 = v4;
  sub_1C151EBEC();
  return v6;
}

uint64_t sub_1C0DEF534()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0DEF56C(long long *a1)
{
  return sub_1C0DEF4B0(a1, *(uint64_t (**)(long long *))(v1 + 16));
}

uint64_t sub_1C0DEF594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v7 + 16) = a4;
  *(void *)(v7 + 24) = v8;
  return v7;
}

uint64_t sub_1C0DEF600(long long *a1, uint64_t (*a2)(long long *))
{
  long long v8 = *a1;
  uint64_t v2 = a2(&v8);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)&long long v8 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      if (*(void *)(v2 + 8 * i + 32))
      {
        uint64_t v6 = swift_retain();
        MEMORY[0x1C18C66D0](v6);
        if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = v8;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C0DEF6FC(long long *a1)
{
  return sub_1C0DEF600(a1, *(uint64_t (**)(long long *))(v1 + 16));
}

uint64_t sub_1C0DEF704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v49 = a4;
  uint64_t v47 = sub_1C151AB3C();
  uint64_t v9 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v48 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 - 8);
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v15, a1, a2, v13);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, a2);
  uint64_t v19 = *(uint64_t (**)(long long *))(v5 + 16);
  *(void *)&long long v50 = v16;
  *((void *)&v50 + 1) = v18;
  swift_retain();
  unint64_t v46 = v19(&v50);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C0607A88(0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
  uint64_t v21 = (void *)sub_1C151E5EC();
  v45[1] = objc_msgSend(self, sel_systemImageNamed_, v21);

  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C152A660;
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 8);
  uint64_t v24 = v23(a2, a3);
  uint64_t v52 = 0;
  long long v50 = 0u;
  long long v51 = 0u;
  uint64_t v25 = sub_1C14A1EDC(v24, (uint64_t)&v50);
  swift_release();
  sub_1C00FA504((uint64_t)&v50);
  uint64_t v26 = 0;
  if (v25)
  {
    uint64_t v26 = sub_1C151A81C();
    uint64_t v27 = MEMORY[0x1E4FAC030];
  }
  else
  {
    uint64_t v27 = 0;
    *(void *)(v22 + 40) = 0;
    *(void *)(v22 + 48) = 0;
  }
  *(void *)(v22 + 32) = v25;
  *(void *)(v22 + 56) = v26;
  *(void *)(v22 + 64) = v27;
  uint64_t v28 = v23(a2, a3);
  uint64_t v52 = 0;
  long long v50 = 0u;
  long long v51 = 0u;
  uint64_t v29 = _s5TeaUI15ContextMenuItemC8NewsFeedE05debugG6Editor14groupLayoutKey19rendererEnvironmentACSgAD05GroupkL0CSg_AA08RendererN4Type_pSgtFZ_0(v28, (uint64_t)&v50);
  swift_release();
  sub_1C00FA504((uint64_t)&v50);
  uint64_t v30 = 0;
  if (v29)
  {
    uint64_t v30 = sub_1C151A81C();
    uint64_t v31 = MEMORY[0x1E4FAC030];
  }
  else
  {
    uint64_t v31 = 0;
    *(void *)(v22 + 80) = 0;
    *(void *)(v22 + 88) = 0;
  }
  *(void *)(v22 + 72) = v29;
  *(void *)(v22 + 96) = v30;
  *(void *)(v22 + 104) = v31;
  uint64_t v32 = v23(a2, a3);
  uint64_t v52 = 0;
  long long v50 = 0u;
  long long v51 = 0u;
  uint64_t v33 = sub_1C14A2438(v32, (uint64_t)&v50);
  swift_release();
  sub_1C00FA504((uint64_t)&v50);
  uint64_t v34 = 0;
  if (v33)
  {
    uint64_t v34 = sub_1C151A81C();
    uint64_t v35 = MEMORY[0x1E4FAC030];
  }
  else
  {
    uint64_t v35 = 0;
    *(void *)(v22 + 120) = 0;
    *(void *)(v22 + 128) = 0;
  }
  *(void *)(v22 + 112) = v33;
  *(void *)(v22 + 136) = v34;
  *(void *)(v22 + 144) = v35;
  uint64_t v36 = v23(a2, a3);
  uint64_t v37 = _s5TeaUI15ContextMenuItemC8NewsFeedE11debugLayout05groupI3KeyACSgAD05GroupiK0CSg_tFZ_0(v36);
  swift_release();
  uint64_t v38 = 0;
  if (v37)
  {
    uint64_t v38 = sub_1C151A81C();
    uint64_t v39 = MEMORY[0x1E4FAC030];
  }
  else
  {
    uint64_t v39 = 0;
    *(void *)(v22 + 160) = 0;
    *(void *)(v22 + 168) = 0;
  }
  *(void *)(v22 + 152) = v37;
  *(void *)(v22 + 176) = v38;
  *(void *)(v22 + 184) = v39;
  uint64_t v40 = sub_1C151AB2C();
  uint64_t v41 = sub_1C02352E4(v46);
  swift_bridgeObjectRelease();
  *(void *)&long long v50 = v22;
  sub_1C1049C54(v41);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v48, *MEMORY[0x1E4FAC1C0], v47);
  swift_allocObject();
  uint64_t v42 = sub_1C151AB0C();
  uint64_t v43 = MEMORY[0x1E4FAC1B0];
  *(void *)(v20 + 56) = v40;
  *(void *)(v20 + 64) = v43;
  *(void *)(v20 + 32) = v42;
  sub_1C151AB1C();
  return swift_bridgeObjectRelease();
}

uint64_t FormatLayoutViewDebugger.deinit()
{
  swift_release();
  return v0;
}

uint64_t FormatLayoutViewDebuggerContext.itemIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutViewDebuggerContext.sectionIdentifier<A, B>(blueprint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v30 = sub_1C151AA8C();
  uint64_t v10 = sub_1C151FD8C();
  uint64_t v31 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v13 = sub_1C151CC9C();
  uint64_t v14 = sub_1C151FD8C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v18 = *(void *)(v13 - 8);
  __n128 v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v29 - v21;
  uint64_t v23 = *(void *)(v5 + 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v17, v32, v14, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    uint64_t v25 = v30;
    uint64_t v24 = v31;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v17, v13);
    if (!v23)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v13);
      return v23;
    }
    sub_1C151CC4C();
    uint64_t v26 = v25;
    uint64_t v27 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, v26) != 1)
    {
      uint64_t v23 = sub_1C151AA2C();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v13);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v26);
      return v23;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v13);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  }
  return 0;
}

uint64_t method lookup function for FormatLayoutViewDebugger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatLayoutViewDebugger);
}

uint64_t dispatch thunk of FormatLayoutViewDebugger.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FormatLayoutViewDebugger.__allocating_init(block:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t getEnumTagSinglePayload for FormatImageBackground(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatImageBackground(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutViewDebuggerContext()
{
  return &type metadata for FormatLayoutViewDebuggerContext;
}

uint64_t static FormatMicaNodeContent.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C15B4C();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v32 - v15;
  unint64_t v17 = *a1;
  unint64_t v18 = *a2;
  if (v17 >> 62)
  {
    if (v17 >> 62 == 1)
    {
      if (v18 >> 62 != 1) {
        goto LABEL_16;
      }
      uint64_t v19 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v20 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v34 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v35 = v19;
      uint64_t v32 = v20;
      uint64_t v33 = v21;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (static FormatMicaNodeContent.== infix(_:_:)(&v34, &v32))
      {
        char v22 = static FormatMicaNodeContent.== infix(_:_:)(&v35, &v33);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (v22) {
          goto LABEL_12;
        }
        goto LABEL_16;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      if (v18 >> 62 != 2) {
        goto LABEL_16;
      }
      uint64_t v27 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v28 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v29 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v34 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v35 = v27;
      uint64_t v32 = v28;
      uint64_t v33 = v29;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (static FormatMicaNodeContent.== infix(_:_:)(&v34, &v32))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v30 = sub_1C00EFF54(v27, v29);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if (v30)
        {
LABEL_12:
          char v26 = 1;
          return v26 & 1;
        }
LABEL_16:
        char v26 = 0;
        return v26 & 1;
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_release();
    goto LABEL_16;
  }
  if (v18 >> 62) {
    goto LABEL_16;
  }
  uint64_t v23 = swift_projectBox();
  uint64_t v24 = swift_projectBox();
  sub_1C0C15BFC(v23, (uint64_t)v16);
  sub_1C0C15BFC(v24, (uint64_t)v13);
  uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1C0C15BFC((uint64_t)v16, (uint64_t)v10);
  sub_1C0C15BFC((uint64_t)v13, v25);
  sub_1C0AB0F8C((uint64_t)v10, (uint64_t)v6);
  swift_retain();
  swift_retain();
  char v26 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v6, v25);
  sub_1BFFAEF38(v25, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFFAEF38((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatURL);
  sub_1BFFAEF38((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
  sub_1BFFAEF38((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
  swift_release();
  swift_release();
  return v26 & 1;
}

uint64_t sub_1C0DF04FC@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatMicaNodeContent.init(from:)(a1, a2);
}

uint64_t sub_1C0DF0514(void *a1)
{
  return FormatMicaNodeContent.encode(to:)(a1);
}

unint64_t sub_1C0DF0530(uint64_t a1)
{
  unint64_t result = sub_1C089C014();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DF0558(void *a1)
{
  a1[1] = sub_1C0898AE4();
  a1[2] = sub_1C08F5BF0();
  unint64_t result = sub_1C0DF0590();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DF0590()
{
  unint64_t result = qword_1EA1A7728;
  if (!qword_1EA1A7728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7728);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMicaNodeContent()
{
  return &type metadata for FormatMicaNodeContent;
}

float static FormatPercentage.default.getter@<S0>(_DWORD *a1@<X8>)
{
  swift_beginAccess();
  float result = *(float *)&dword_1EA1A7730;
  *a1 = dword_1EA1A7730;
  return result;
}

uint64_t static FormatPercentage.default.setter(int *a1)
{
  int v1 = *a1;
  uint64_t result = swift_beginAccess();
  dword_1EA1A7730 = v1;
  return result;
}

uint64_t (*static FormatPercentage.default.modify())()
{
  return j__swift_endAccess;
}

BOOL static FormatPercentage.== infix(_:_:)(float *a1, float *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1C0DF06FC(uint64_t a1)
{
  unint64_t result = sub_1C0DF0724();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DF0724()
{
  unint64_t result = qword_1EA1A7738;
  if (!qword_1EA1A7738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7738);
  }
  return result;
}

float sub_1C0DF0778@<S0>(_DWORD *a1@<X8>)
{
  swift_beginAccess();
  float result = *(float *)&dword_1EA1A7730;
  *a1 = dword_1EA1A7730;
  return result;
}

unint64_t sub_1C0DF07C4(void *a1)
{
  a1[1] = sub_1BFC8D324();
  a1[2] = sub_1C08F1448();
  unint64_t result = sub_1C0DF07FC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DF07FC()
{
  unint64_t result = qword_1EA1A7740;
  if (!qword_1EA1A7740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7740);
  }
  return result;
}

uint64_t sub_1C0DF0850(void *a1)
{
  return FormatPercentage.encode(to:)(a1);
}

BOOL sub_1C0DF0868(float *a1, float *a2)
{
  return *a1 == *a2;
}

ValueMetadata *type metadata accessor for FormatPercentage()
{
  return &type metadata for FormatPercentage;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceRootNode()
{
  return &type metadata for SportsTaxonomyGraphResourceRootNode;
}

uint64_t sub_1C0DF089C(void *a1, uint64_t a2)
{
  sub_1C0DF0D6C(0, &qword_1EA19B788, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C045A1CC();
  sub_1C1520F0C();
  v10[1] = a2;
  sub_1C045A220();
  sub_1C0DF0DD0((unint64_t *)&qword_1EA19B790, (void (*)(void))sub_1C045A2E8);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0DF0A2C()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1C0DF0A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0DF0ADC(uint64_t a1)
{
  unint64_t v2 = sub_1C045A1CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DF0B18(uint64_t a1)
{
  unint64_t v2 = sub_1C045A1CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1C0DF0B54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C0DF0B9C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0DF0B80(void *a1)
{
  return sub_1C0DF089C(a1, *v1);
}

void *sub_1C0DF0B9C(void *a1)
{
  sub_1C0DF0D6C(0, &qword_1EB86B7C0, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C045A1CC();
  sub_1C1520EBC();
  if (!v1)
  {
    sub_1C045A220();
    sub_1C0DF0DD0(&qword_1EB86B298, (void (*)(void))sub_1C0DF0E3C);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = (void *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void sub_1C0DF0D6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C045A1CC();
    unint64_t v7 = a3(a1, &type metadata for SportsTaxonomyGraphResourceRootNode.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0DF0DD0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C045A220();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0DF0E3C()
{
  unint64_t result = qword_1EB869760;
  if (!qword_1EB869760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869760);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsTaxonomyGraphResourceRootNode.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0DF0F2CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceRootNode.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceRootNode.CodingKeys;
}

unint64_t sub_1C0DF0F68()
{
  unint64_t result = qword_1EA1A7748;
  if (!qword_1EA1A7748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7748);
  }
  return result;
}

unint64_t sub_1C0DF0FC0()
{
  unint64_t result = qword_1EB86A4C8;
  if (!qword_1EB86A4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A4C8);
  }
  return result;
}

unint64_t sub_1C0DF1018()
{
  unint64_t result = qword_1EB86A4C0;
  if (!qword_1EB86A4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A4C0);
  }
  return result;
}

uint64_t sub_1C0DF106C()
{
  type metadata accessor for FormatLayoutError();
  sub_1BFE7E51C();
  swift_allocError();
  *uint64_t v0 = 0xD00000000000006ELL;
  v0[1] = 0x80000001C1607E00;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C0DF10E8()
{
  return sub_1C0DF106C();
}

uint64_t initializeWithCopy for FormatPrefetchContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v7 = a2 + 48;
  uint64_t v6 = *(void *)(a2 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v9 = *(void **)(a2 + 56);
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = *(void *)(a2 + 72);
    uint64_t v11 = *(void *)(a2 + 80);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v11;
    swift_bridgeObjectRetain();
    id v12 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 64) = v13;
    *(void *)(a1 + 80) = *(void *)(v7 + 32);
  }
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatPrefetchContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v5)
    {
      *(void *)(a1 + 48) = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void **)(a1 + 56);
      uint64_t v8 = *(void **)(a2 + 56);
      *(void *)(a1 + 56) = v8;
      id v9 = v8;

      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C04A7278(a1 + 48);
      uint64_t v12 = *(void *)(a2 + 80);
      long long v13 = *(_OWORD *)(a2 + 64);
      *uint64_t v4 = *v6;
      *(_OWORD *)(a1 + 64) = v13;
      *(void *)(a1 + 80) = v12;
    }
  }
  else if (v5)
  {
    *(void *)(a1 + 48) = v5;
    uint64_t v10 = *(void **)(a2 + 56);
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    id v11 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *v6;
    long long v15 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *uint64_t v4 = v14;
    *(_OWORD *)(a1 + 64) = v15;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatPrefetchContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48)) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_1C04A7278(a1 + 48);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    goto LABEL_6;
  }
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_unknownObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t *sub_1C0DF14C0(uint64_t a1)
{
  int v3 = v1;
  uint64_t v5 = type metadata accessor for FormatOptionsNodeStatementResult();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void *)((char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0DF34DC(0, qword_1EB892B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementEvaluation, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)v76 - v12;
  uint64_t v14 = type metadata accessor for FormatOptionsNodeStatement();
  sub_1C1002ED8(a1, (uint64_t)v13);
  if (!v2)
  {
    sub_1C0DF2E80((uint64_t)v13, (uint64_t)v10, qword_1EB892B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementEvaluation);
    uint64_t v15 = type metadata accessor for FormatOptionsNodeStatementEvaluation();
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v10, 1, v15) == 1)
    {
      sub_1C0DF2F00((uint64_t)v13);
      return (uint64_t *)MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v17 = *v10;
        MEMORY[0x1F4188790](EnumCaseMultiPayload);
        v76[-2] = v1;
        uint64_t v10 = (uint64_t *)sub_1C0DF2F94(v17, (void (*)(void, void, char *))sub_1C0DF2F8C, (uint64_t)&v76[-4]);
        sub_1C0DF2F00((uint64_t)v13);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v82 = 0;
        sub_1C0DF364C((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementResult);
        sub_1C0DF34DC(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
        uint64_t v80 = type metadata accessor for FormatOption();
        unint64_t v79 = (*(unsigned __int8 *)(*(void *)(v80 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v80 - 8) + 80);
        uint64_t v83 = swift_allocObject();
        *(_OWORD *)(v83 + 16) = xmmword_1C1529AE0;
        unint64_t v18 = (uint64_t *)v1[1];
        uint64_t v19 = *(uint64_t *)((char *)v1 + *(int *)(v14 + 24));
        unint64_t v20 = *v7;
        uint64_t v21 = *(void *)(v19 + 16);
        uint64_t v81 = *v3;
        if (v21)
        {
          uint64_t v22 = v19 + 32;
          v76[1] = v20 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain_n();
          uint64_t v78 = v19;
          swift_bridgeObjectRetain_n();
          uint64_t v77 = v18;
          swift_bridgeObjectRetain();
          uint64_t v23 = 0;
          uint64_t v87 = v13;
          uint64_t v88 = v5;
          unsigned int v89 = v7;
          uint64_t v90 = v21;
          uint64_t v86 = v19 + 32;
          do
          {
            unsigned int v26 = *(unsigned __int8 *)(v22 + v23);
            if (v26 >> 6)
            {
              unint64_t v27 = v20 >> 60;
              if (v26 >> 6 == 1)
              {
                if (v27 != 5) {
                  goto LABEL_46;
                }
                uint64_t v28 = v20 & 0xFFFFFFFFFFFFFFFLL;
                uint64_t v29 = *(void *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                unint64_t v30 = *(void *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                unint64_t v31 = *(void *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
                if (v26)
                {
                  uint64_t v59 = HIBYTE(v30) & 0xF;
                  if ((v30 & 0x2000000000000000) == 0) {
                    uint64_t v59 = v29 & 0xFFFFFFFFFFFFLL;
                  }
                  uint64_t v92 = v59;
                  int64_t v60 = *(void *)(v31 + 16);
                  if (v60)
                  {
                    uint64_t v95 = v28;
                    uint64_t v93 = v23;
                    *(void *)&v96[0] = MEMORY[0x1E4FBC860];
                    swift_bridgeObjectRetain();
                    unint64_t v94 = v31;
                    sub_1C05F6448(0, v60, 0);
                    double v61 = v96[0];
                    uint64_t v62 = (void *)(v94 + 56);
                    do
                    {
                      uint64_t v64 = *(v62 - 3);
                      uint64_t v63 = *(v62 - 2);
                      if ((*v62 & 0x2000000000000000) != 0) {
                        uint64_t v65 = HIBYTE(*v62) & 0xFLL;
                      }
                      else {
                        uint64_t v65 = *(v62 - 1) & 0xFFFFFFFFFFFFLL;
                      }
                      v96[0] = v61;
                      unint64_t v67 = *(void *)(*(void *)&v61 + 16);
                      unint64_t v66 = *(void *)(*(void *)&v61 + 24);
                      swift_bridgeObjectRetain();
                      if (v67 >= v66 >> 1)
                      {
                        sub_1C05F6448(v66 > 1, v67 + 1, 1);
                        double v61 = v96[0];
                      }
                      v62 += 4;
                      *(void *)(*(void *)&v61 + 16) = v67 + 1;
                      uint64_t v68 = *(void *)&v61 + 24 * v67;
                      *(void *)(v68 + 32) = v64;
                      *(void *)(v68 + 40) = v63;
                      *(unsigned char *)(v68 + 48) = v65 == 0;
                      --v60;
                    }
                    while (v60);
                    swift_bridgeObjectRelease();
                    uint64_t v22 = v86;
                    long long v13 = v87;
                    uint64_t v7 = v89;
                    uint64_t v21 = v90;
                    uint64_t v23 = v93;
                  }
                  else
                  {
                    double v61 = MEMORY[0x1E4FBC860];
                  }
                  unint64_t v20 = swift_allocObject();
                  *(unsigned char *)(v20 + 16) = v92 == 0;
                  *(double *)(v20 + 24) = v61;
                  swift_release();
                  uint64_t v5 = v88;
                }
                else
                {
                  uint64_t v95 = v28;
                  uint64_t v92 = sub_1C151E7AC();
                  int64_t v32 = *(void *)(v31 + 16);
                  if (v32)
                  {
                    uint64_t v93 = v23;
                    *(void *)&v96[0] = MEMORY[0x1E4FBC860];
                    swift_bridgeObjectRetain();
                    sub_1C05F64A8(0, v32, 0);
                    double v33 = v96[0];
                    unint64_t v94 = v31;
                    unint64_t v34 = v31 + 56;
                    do
                    {
                      uint64_t v36 = *(void *)(v34 - 24);
                      uint64_t v35 = *(void *)(v34 - 16);
                      swift_bridgeObjectRetain_n();
                      swift_bridgeObjectRetain();
                      uint64_t v37 = sub_1C151E7AC();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      v96[0] = v33;
                      unint64_t v39 = *(void *)(*(void *)&v33 + 16);
                      unint64_t v38 = *(void *)(*(void *)&v33 + 24);
                      if (v39 >= v38 >> 1)
                      {
                        sub_1C05F64A8(v38 > 1, v39 + 1, 1);
                        double v33 = v96[0];
                      }
                      v34 += 32;
                      *(void *)(*(void *)&v33 + 16) = v39 + 1;
                      uint64_t v40 = (void *)(*(void *)&v33 + 24 * v39);
                      v40[4] = v36;
                      v40[5] = v35;
                      v40[6] = v37;
                      --v32;
                    }
                    while (v32);
                    swift_bridgeObjectRelease();
                    long long v13 = v87;
                    uint64_t v5 = v88;
                    uint64_t v21 = v90;
                    uint64_t v22 = v86;
                    uint64_t v23 = v93;
                  }
                  else
                  {
                    double v33 = MEMORY[0x1E4FBC860];
                  }
                  uint64_t v69 = swift_allocObject();
                  *(void *)(v69 + 16) = v92;
                  *(double *)(v69 + 24) = v33;
                  swift_release();
                  unint64_t v20 = v69 | 0x4000000000000000;
                  uint64_t v7 = v89;
                }
              }
              else
              {
                if (v27 != 4)
                {
LABEL_46:
                  type metadata accessor for FormatLayoutError();
                  sub_1C0DF33F4((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
                  swift_allocError();
                  *(unsigned char *)uint64_t v71 = v26;
                  *(void *)(v71 + 8) = v20;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v10 = v77;
                  swift_retain();
                  swift_willThrow();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease_n();
                  *(void *)(v83 + 16) = 0;
                  swift_release();
                  sub_1C0DF343C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementResult);
                  sub_1C0DF2F00((uint64_t)v13);
                  return v10;
                }
                double v43 = *(double *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v44 = *(void *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                uint64_t v92 = v20 & 0xFFFFFFFFFFFFFFFLL;
                uint64_t v93 = v23;
                v96[0] = v43;
                unint64_t v45 = sub_1BFF01BC4();
                swift_bridgeObjectRetain();
                unint64_t v94 = v45;
                uint64_t v46 = sub_1C151FF2C();
                uint64_t v47 = v46;
                uint64_t v91 = v48;
                int64_t v49 = *(void *)(v44 + 16);
                if (v49)
                {
                  uint64_t v84 = v46;
                  *(void *)&v96[0] = MEMORY[0x1E4FBC860];
                  swift_bridgeObjectRetain();
                  sub_1C05F6468(0, v49, 0);
                  double v50 = v96[0];
                  uint64_t v85 = v44;
                  long long v51 = (uint64_t *)(v44 + 48);
                  do
                  {
                    uint64_t v52 = *(v51 - 1);
                    uint64_t v95 = *(v51 - 2);
                    uint64_t v97 = *v51;
                    swift_bridgeObjectRetain();
                    uint64_t v53 = sub_1C151FF2C();
                    uint64_t v55 = v54;
                    v96[0] = v50;
                    unint64_t v57 = *(void *)(*(void *)&v50 + 16);
                    unint64_t v56 = *(void *)(*(void *)&v50 + 24);
                    if (v57 >= v56 >> 1)
                    {
                      sub_1C05F6468(v56 > 1, v57 + 1, 1);
                      double v50 = v96[0];
                    }
                    v51 += 3;
                    *(void *)(*(void *)&v50 + 16) = v57 + 1;
                    uint64_t v58 = (void *)(*(void *)&v50 + 32 * v57);
                    v58[4] = v95;
                    v58[5] = v52;
                    v58[6] = v53;
                    v58[7] = v55;
                    --v49;
                  }
                  while (v49);
                  swift_bridgeObjectRelease();
                  long long v13 = v87;
                  uint64_t v5 = v88;
                  uint64_t v7 = v89;
                  uint64_t v22 = v86;
                  uint64_t v47 = v84;
                }
                else
                {
                  double v50 = MEMORY[0x1E4FBC860];
                }
                uint64_t v24 = swift_allocObject();
                uint64_t v25 = v91;
                *(void *)(v24 + 16) = v47;
                *(void *)(v24 + 24) = v25;
                *(double *)(v24 + 32) = v50;
                swift_release();
                swift_bridgeObjectRelease();
                unint64_t v20 = v24 | 0x5000000000000000;
                uint64_t v21 = v90;
                uint64_t v23 = v93;
              }
            }
            else
            {
              if (v20 >> 60 != 3) {
                goto LABEL_46;
              }
              double v41 = *(double *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
              double v42 = *(double *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
              LOBYTE(v97) = *(unsigned char *)(v22 + v23);
              v96[0] = v41;
              v96[1] = v42;
              sub_1C0F8227C(v96, (uint64_t *)&v98);
              swift_release();
              unint64_t v20 = v98;
            }
            ++v23;
          }
          while (v23 != v21);
          swift_release();
          swift_bridgeObjectRelease_n();
          uint64_t v70 = v77;
        }
        else
        {
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v70 = v18;
        }
        uint64_t v72 = (uint64_t *)v83;
        uint64_t v73 = (void *)(v83 + v79);
        uint64_t v74 = v7[1];
        sub_1C0DF2E80((uint64_t)v7 + *(int *)(v5 + 24), v83 + v79 + *(int *)(v80 + 28), (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
        void *v73 = v81;
        v73[1] = v70;
        v73[2] = v20;
        v73[3] = v74;
        sub_1BFEF95A8(v74);
        uint64_t v10 = v72;
        sub_1C0DF343C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementResult);
        sub_1C0DF2F00((uint64_t)v13);
      }
    }
  }
  return v10;
}

uint64_t FormatOptionsNodeStatement.modifiers.getter()
{
  type metadata accessor for FormatOptionsNodeStatement();
  return swift_bridgeObjectRetain();
}

uint64_t FormatOptionsNodeStatement.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionsNodeStatement.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatOptionsNodeStatement();
  return sub_1C0DF35E4(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementValue);
}

uint64_t sub_1C0DF1F54(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatOptionsNodeStatement() + 24);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatOptionsNodeStatement.modifiers.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatOptionsNodeStatement() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatOptionsNodeStatement.modifiers.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C0DF202C@<X0>(uint64_t *a1@<X2>, uint64_t *a2@<X3>, void *a3@<X8>)
{
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  sub_1C151E80C();
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = (uint64_t)a1 + *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
  uint64_t v8 = type metadata accessor for FormatOption();
  sub_1C0DF2E80(v7, (uint64_t)a3 + *(int *)(v8 + 28), (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
  *a3 = v10;
  a3[1] = v11;
  a3[2] = v6;
  a3[3] = v5;
  swift_retain();
  return sub_1BFEF95A8(v5);
}

uint64_t _s8NewsFeed26FormatOptionsNodeStatementV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for FormatOptionsNodeStatement();
  if ((static FormatOptionsNodeStatementValue.== infix(_:_:)((uint64_t)a1 + *(int *)(v5 + 20), (uint64_t)a2 + *(int *)(v5 + 20)) & 1) == 0)return 0; {
  uint64_t v6 = *(int *)(v5 + 24);
  }
  uint64_t v7 = *(void *)((char *)a1 + v6);
  uint64_t v8 = *(void *)((char *)a2 + v6);
  return sub_1C00E0518(v7, v8);
}

uint64_t sub_1C0DF21B4(uint64_t a1)
{
  uint64_t result = sub_1C0DF33F4(&qword_1EA1A7750, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0DF220C(void *a1)
{
  a1[1] = sub_1C0DF33F4(&qword_1EB878828, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement);
  a1[2] = sub_1C0DF33F4(&qword_1EB870E20, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement);
  uint64_t result = sub_1C0DF33F4(&qword_1EA1A7758, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0DF22B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatOptionsNodeStatement() + 24));
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatOptionsNodeStatement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    type metadata accessor for FormatOptionsNodeStatementValue();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v12 = *(void *)v10;
        uint64_t v13 = *((void *)v10 + 1);
        uint64_t v14 = *((void *)v10 + 2);
        char v15 = v10[24];
        sub_1BFDEB94C(v12, v13, v14, v15);
        *(void *)uint64_t v9 = v12;
        *((void *)v9 + 1) = v13;
        *((void *)v9 + 2) = v14;
        v9[24] = v15;
        break;
      case 3u:
        uint64_t v16 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v16;
        unsigned char v9[16] = v10[16];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v17 = *(void *)v10;
        uint64_t v18 = *((void *)v10 + 1);
        uint64_t v19 = *((void *)v10 + 2);
        uint64_t v20 = *((void *)v10 + 4);
        uint64_t v21 = *((void *)v10 + 5);
        uint64_t v36 = v20;
        uint64_t v38 = *((void *)v10 + 3);
        uint64_t v22 = *((unsigned __int16 *)v10 + 24);
        uint64_t v35 = v21;
        sub_1C0DF266C(v17, v18, v19, v38, v20, v21, v22, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        *(void *)uint64_t v9 = v17;
        *((void *)v9 + 1) = v18;
        *((void *)v9 + 2) = v19;
        *((void *)v9 + 3) = v38;
        *((void *)v9 + 4) = v36;
        *((void *)v9 + 5) = v35;
        *((_WORD *)v9 + 24) = v22;
        break;
      case 5u:
        uint64_t v23 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v23;
        uint64_t v24 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v24;
        *((void *)v9 + 4) = *((void *)v10 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unint64_t v25 = *(void *)v10;
        sub_1BFF58F10(v25);
        *(void *)uint64_t v9 = v25;
        break;
      case 7u:
        type metadata accessor for FormatURL();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v29 = *(void *)v10;
          uint64_t v28 = *((void *)v10 + 1);
          uint64_t v30 = *((void *)v10 + 2);
          uint64_t v37 = v30;
          char v31 = v10[24];
          sub_1BFE86E48(v29, v28, v30, v31);
          *(void *)uint64_t v9 = v29;
          *((void *)v9 + 1) = v28;
          *((void *)v9 + 2) = v37;
          v9[24] = v31;
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v27 = *((void *)v10 + 1);
            *(void *)uint64_t v9 = *(void *)v10;
            *((void *)v9 + 1) = v27;
            *((void *)v9 + 2) = *((void *)v10 + 2);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v32 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v9, v10, v32);
            uint64_t v33 = type metadata accessor for FormatAbsoluteURL();
            *(void *)&v9[*(int *)(v33 + 20)] = *(void *)&v10[*(int *)(v33 + 20)];
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        *(void *)uint64_t v9 = *(void *)v10;
        swift_retain();
        break;
      default:
        *(void *)uint64_t v9 = *(void *)v10;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C0DF266C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t (*a9)(void))
{
  int v9 = (unsigned __int16)a7 >> 13;
  if (v9 == 4 || v9 == 3) {
    return a9();
  }
  if (v9 == 2)
  {
    return a8(result, a2, a3, a4, a5, a6, a7, (a7 >> 8) & 0x1F);
  }
  return result;
}

void *assignWithCopy for FormatOptionsNodeStatement(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C0DF343C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementValue);
    type metadata accessor for FormatOptionsNodeStatementValue();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v9 = *(void *)v8;
        uint64_t v10 = *((void *)v8 + 1);
        uint64_t v11 = *((void *)v8 + 2);
        char v12 = v8[24];
        sub_1BFDEB94C(v9, v10, v11, v12);
        *(void *)uint64_t v7 = v9;
        *((void *)v7 + 1) = v10;
        *((void *)v7 + 2) = v11;
        v7[24] = v12;
        break;
      case 3u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        v7[16] = v8[16];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v13 = *(void *)v8;
        uint64_t v14 = *((void *)v8 + 1);
        uint64_t v15 = *((void *)v8 + 2);
        uint64_t v16 = *((void *)v8 + 4);
        uint64_t v17 = *((void *)v8 + 5);
        uint64_t v29 = v16;
        uint64_t v31 = *((void *)v8 + 3);
        uint64_t v18 = *((unsigned __int16 *)v8 + 24);
        uint64_t v28 = v17;
        sub_1C0DF266C(v13, v14, v15, v31, v16, v17, v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        *(void *)uint64_t v7 = v13;
        *((void *)v7 + 1) = v14;
        *((void *)v7 + 2) = v15;
        *((void *)v7 + 3) = v31;
        *((void *)v7 + 4) = v29;
        *((void *)v7 + 5) = v28;
        *((_WORD *)v7 + 24) = v18;
        break;
      case 5u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unint64_t v19 = *(void *)v8;
        sub_1BFF58F10(v19);
        *(void *)uint64_t v7 = v19;
        break;
      case 7u:
        type metadata accessor for FormatURL();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v22 = *(void *)v8;
          uint64_t v21 = *((void *)v8 + 1);
          uint64_t v23 = *((void *)v8 + 2);
          uint64_t v30 = v23;
          char v24 = v8[24];
          sub_1BFE86E48(v22, v21, v23, v24);
          *(void *)uint64_t v7 = v22;
          *((void *)v7 + 1) = v21;
          *((void *)v7 + 2) = v30;
          v7[24] = v24;
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v25 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v7, v8, v25);
            uint64_t v26 = type metadata accessor for FormatAbsoluteURL();
            *(void *)&v7[*(int *)(v26 + 20)] = *(void *)&v8[*(int *)(v26 + 20)];
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        *(void *)uint64_t v7 = *(void *)v8;
        swift_retain();
        break;
      default:
        *(void *)uint64_t v7 = *(void *)v8;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatOptionsNodeStatement(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FormatOptionsNodeStatementValue();
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    uint64_t v10 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      uint64_t v12 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&v7[*(int *)(v12 + 20)] = *(void *)&v8[*(int *)(v12 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for FormatOptionsNodeStatement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1C0DF343C((uint64_t)a1 + v7, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementValue);
    uint64_t v10 = type metadata accessor for FormatOptionsNodeStatementValue();
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      uint64_t v11 = type metadata accessor for FormatURL();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v12 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
        uint64_t v13 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v8[*(int *)(v13 + 20)] = *(void *)&v9[*(int *)(v13 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0DF2D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatOptionsNodeStatementValue();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0DF2DD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatOptionsNodeStatementValue();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0DF2E80(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C0DF34DC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0DF2F00(uint64_t a1)
{
  sub_1C0DF34DC(0, qword_1EB892B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementEvaluation, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0DF2F8C@<X0>(uint64_t *a1@<X2>, void *a2@<X8>)
{
  return sub_1C0DF202C(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1C0DF2F94(uint64_t a1, void (*a2)(void, void, char *), uint64_t a3)
{
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  sub_1C0DF3578();
  uint64_t v54 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v53 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (char *)&v43 - v8;
  MEMORY[0x1F4188790](v9);
  long long v51 = (char *)&v43 - v10;
  uint64_t v11 = type metadata accessor for FormatOption();
  uint64_t v50 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (!v14) {
    return v15;
  }
  uint64_t v43 = v3;
  uint64_t v59 = MEMORY[0x1E4FBC860];
  sub_1C05F66C4(0, v14, 0);
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v18 = result;
  uint64_t v19 = 0;
  uint64_t v20 = a1 + 64;
  uint64_t v44 = a1 + 80;
  int64_t v45 = v14;
  uint64_t v48 = v13;
  uint64_t v49 = a1;
  uint64_t v46 = v17;
  uint64_t v47 = a1 + 64;
  uint64_t v22 = v51;
  uint64_t v21 = v52;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v25 = (unint64_t)v18 >> 6;
    if ((*(void *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v17) {
      goto LABEL_26;
    }
    uint64_t v57 = v19;
    uint64_t v58 = 1 << v18;
    uint64_t v26 = v54;
    uint64_t v27 = (uint64_t)v22 + *(int *)(v54 + 48);
    uint64_t v28 = *(void *)(a1 + 56);
    uint64_t v29 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v18);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = type metadata accessor for FormatOptionsNodeStatementResult();
    sub_1C0DF35E4(v28 + *(void *)(*(void *)(v32 - 8) + 72) * v18, v27, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementResult);
    void *v22 = v31;
    v22[1] = v30;
    *uint64_t v21 = v31;
    v21[1] = v30;
    sub_1C0DF35E4(v27, (uint64_t)v21 + *(int *)(v26 + 48), (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementResult);
    uint64_t v33 = v53;
    sub_1C0DF364C((uint64_t)v21, (uint64_t)v53, (uint64_t (*)(void))sub_1C0DF3578);
    swift_bridgeObjectRetain_n();
    sub_1C0DF343C((uint64_t)v22, (uint64_t (*)(void))sub_1C0DF3578);
    uint64_t v34 = *(int *)(v26 + 48);
    uint64_t v35 = (uint64_t)v48;
    v55(*(void *)v33, *((void *)v33 + 1), &v33[v34]);
    sub_1C0DF343C((uint64_t)v33, (uint64_t (*)(void))sub_1C0DF3578);
    uint64_t v15 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F66C4(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = v59;
    }
    unint64_t v37 = *(void *)(v15 + 16);
    unint64_t v36 = *(void *)(v15 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_1C05F66C4(v36 > 1, v37 + 1, 1);
      uint64_t v15 = v59;
    }
    *(void *)(v15 + 16) = v37 + 1;
    uint64_t result = sub_1C0DF364C(v35, v15+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v37, (uint64_t (*)(void))type metadata accessor for FormatOption);
    a1 = v49;
    int64_t v23 = 1 << *(unsigned char *)(v49 + 32);
    if (v18 >= v23) {
      goto LABEL_27;
    }
    uint64_t v20 = v47;
    uint64_t v38 = *(void *)(v47 + 8 * v25);
    if ((v38 & v58) == 0) {
      goto LABEL_28;
    }
    LODWORD(v17) = v46;
    if (*(_DWORD *)(v49 + 36) != v46) {
      goto LABEL_29;
    }
    unint64_t v39 = v38 & (-2 << (v18 & 0x3F));
    if (v39)
    {
      int64_t v23 = __clz(__rbit64(v39)) | v18 & 0xFFFFFFFFFFFFFFC0;
      int64_t v24 = v45;
    }
    else
    {
      unint64_t v40 = v25 + 1;
      unint64_t v41 = (unint64_t)(v23 + 63) >> 6;
      int64_t v24 = v45;
      if (v25 + 1 < v41)
      {
        unint64_t v42 = *(void *)(v47 + 8 * v40);
        if (v42)
        {
LABEL_22:
          int64_t v23 = __clz(__rbit64(v42)) + (v40 << 6);
        }
        else
        {
          while (v41 - 2 != v25)
          {
            unint64_t v42 = *(void *)(v44 + 8 * v25++);
            if (v42)
            {
              unint64_t v40 = v25 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v19 = v57 + 1;
    uint64_t v18 = v23;
    if (v57 + 1 == v24) {
      return v15;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C0DF33F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0DF343C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0DF349C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0DF34DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0DF3540()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0DF3578()
{
  if (!qword_1EA1A7760)
  {
    type metadata accessor for FormatOptionsNodeStatementResult();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A7760);
    }
  }
}

uint64_t sub_1C0DF35E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0DF364C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t FormatImageResize.rawValue.getter()
{
  uint64_t result = 0x656C616373;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1886351971;
      break;
    case 2:
      uint64_t result = 1701603700;
      break;
    case 3:
      uint64_t result = 0x69736E6972746E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatImageResize.description.getter()
{
  uint64_t result = 0x656C616373;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1886351971;
      break;
    case 2:
      uint64_t result = 1701603700;
      break;
    case 3:
      uint64_t result = 0x69736E6972746E69;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0DF37BC()
{
  unint64_t result = qword_1EA1A7768;
  if (!qword_1EA1A7768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7768);
  }
  return result;
}

uint64_t sub_1C0DF3810()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0DF38DC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0DF3990()
{
  return sub_1C1520E0C();
}

void sub_1C0DF3A58(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x656C616373;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1886351971;
      goto LABEL_3;
    case 2:
      *a1 = 1701603700;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x69736E6972746E69;
      a1[1] = 0xE900000000000063;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1C0DF3AE4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0DF3B14();
  unint64_t result = sub_1BFC903F0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0DF3B14()
{
  unint64_t result = qword_1EA1A7770;
  if (!qword_1EA1A7770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7770);
  }
  return result;
}

uint64_t sub_1C0DF3B68(unsigned __int8 *a1, char *a2)
{
  return sub_1C1487F9C(*a1, *a2);
}

unint64_t sub_1C0DF3B84(uint64_t a1)
{
  unint64_t result = sub_1C0DF3BAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DF3BAC()
{
  unint64_t result = qword_1EA1A7778;
  if (!qword_1EA1A7778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7778);
  }
  return result;
}

unint64_t sub_1C0DF3C00(void *a1)
{
  a1[1] = sub_1BFE90CCC();
  a1[2] = sub_1BFE5700C();
  unint64_t result = sub_1C0DF37BC();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatImageResize()
{
  return &type metadata for FormatImageResize;
}

id sub_1C0DF3C70()
{
  uint64_t v1 = v0;
  Class ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_identifier];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0xE000000000000000;
  unint64_t v4 = &v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_reuseIdentifier];
  *(void *)unint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_onReuse;
  sub_1BFD22278();
  id v7 = objc_allocWithZone(v6);
  unint64_t v8 = v0;
  *(void *)&v1[v5] = objc_msgSend(v7, sel_init);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame;
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_placeholderView;
  *(void *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoPlaceholderView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_isLiveIconHidden] = 0;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView;
  *(void *)&v8[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v13.receiver = v8;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, 0, 0);
}

id sub_1C0DF3E30()
{
  Class ObjectType = (objc_class *)swift_getObjectType();
  if (MEMORY[0x1C18C9C60](&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate]))
  {
    sub_1C0D9151C();
    swift_unknownObjectRelease();
  }
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1C0DF3FC0()
{
  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v2 = v1;
  objc_msgSend(v1, sel_setClipsToBounds_, 1);

  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v4 = v3;
  objc_msgSend(v3, sel_setAutoresizingMask_, 0);

  id v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  Class v6 = v5;
  objc_msgSend(v5, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView]);

  id v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v8 = v7;
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame];
  objc_msgSend(v7, sel_addSubview_, v9);

  id v10 = objc_msgSend(v0, sel_view);
  if (v10)
  {
    uint64_t v11 = v10;
    objc_msgSend(v10, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_placeholderView]);

    uint64_t v12 = *(void **)(v9 + qword_1EB93C718);
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v16[4] = sub_1C0DF51EC;
    v16[5] = v13;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 1107296256;
    v16[2] = sub_1BFC9FC68;
    v16[3] = &block_descriptor_66;
    int64_t v14 = _Block_copy(v16);
    id v15 = v12;
    swift_release();
    objc_msgSend(v15, sel_onTouchUpInside_, v14);
    _Block_release(v14);

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_1C0DF41F8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    id v3 = (void *)v2;
    if (MEMORY[0x1C18C9C60](v2 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate))
    {
      sub_1C0D8FAC0(v3);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

id sub_1C0DF445C()
{
  uint64_t v1 = v0;
  v15.receiver = v0;
  v15.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v15, sel_viewDidLayoutSubviews);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView];
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v4 = result;
  objc_msgSend(result, sel_bounds);

  sub_1C151F8FC();
  id v5 = objc_msgSend(v2, sel_subviews);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  unint64_t v6 = sub_1C151EBCC();

  if (v6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_4:
      uint64_t v8 = 4;
      while (1)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v9 = (id)MEMORY[0x1C18C7CB0](v8 - 4, v6);
        }
        else {
          id v9 = *(id *)(v6 + 8 * v8);
        }
        id v10 = v9;
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
          goto LABEL_15;
        }
        id result = objc_msgSend(v1, sel_view);
        if (!result) {
          break;
        }
        uint64_t v12 = result;
        objc_msgSend(result, sel_bounds);

        sub_1C151F8FC();
        ++v8;
        if (v11 == v7) {
          goto LABEL_11;
        }
      }
      __break(1u);
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_4;
    }
  }
LABEL_11:
  swift_bridgeObjectRelease();
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v13 = result;
  objc_msgSend(result, sel_bounds);

  sub_1C151F8FC();
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    int64_t v14 = result;
    objc_msgSend(result, sel_bounds);

    return (id)sub_1C151F8FC();
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1C0DF4794()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0DF47D4()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_reuseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C0DF4830(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(*v2 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_reuseIdentifier);
  swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C0DF4894())()
{
  return j__swift_endAccess;
}

id sub_1C0DF48F4()
{
  id v1 = objc_msgSend(v0, sel_childViewControllers);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB880D40);
  unint64_t v2 = sub_1C151EBCC();

  if (v2 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    return (id)swift_bridgeObjectRelease();
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v4 = 4;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x1C18C7CB0](v4 - 4, v2);
    }
    else {
      id v5 = *(id *)(v2 + 8 * v4);
    }
    unint64_t v6 = v5;
    uint64_t v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    self;
    if (!swift_dynamicCastObjCClass()) {
      goto LABEL_4;
    }
    id result = objc_msgSend(v6, sel_view);
    if (!result) {
      break;
    }
    id v9 = result;
    id v10 = objc_msgSend(result, sel_constraints);

    if (!v10)
    {
      sub_1BFC39268(0, (unint64_t *)&qword_1EA1A7F70);
      sub_1C151EBCC();
      id v10 = (id)sub_1C151EBAC();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(self, sel_deactivateConstraints_, v10);

    objc_msgSend(v6, sel_willMoveToParentViewController_, 0);
    id result = objc_msgSend(v6, sel_view);
    if (!result) {
      goto LABEL_21;
    }
    uint64_t v11 = result;
    objc_msgSend(result, sel_removeFromSuperview);

    objc_msgSend(v6, sel_removeFromParentViewController);
LABEL_4:

    ++v4;
    if (v7 == v3) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}